{
  "version": 3,
  "sources": [
    "../tuples.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAc8C;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAiB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA5C;AAAO;;;AAAP;AAAiB;;;AAAjB;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAA6D;;;AAA7D;AAAA;AAAA;AAAX;AAGI;;;;;;;;;;;;;;;;;;;;;;;AADG;AAAP;AAMQ;AAAA;AAAK;AAAL;AACA;AAAA;AAAK;AAAL;AACA;AAAA;AAAK;AAAL;AAAA;AACA;AAAA;AAAK;AAAL;AAAA;;AACA;AAAA;AAAK;AAAL;AAAA;;AACA;AAAA;AAAK;AAAL;AAAA;;AACA;AAAA;AAAK;AAAL;AAAA;;AACA;AAAA;AAAK;AAAL;AAAA;;AACA;AAAA;AAAK;AAAL;AAAA;;AAXU;AAEV;;;AAFU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAYV;;;AAZU;AAAA;AAAA;AAAlB;;AAegC;;;;;;AAAzB;AAAP;AACklC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACO;;AAAA;;AAAA;AAAA;AAAA;AAAP;AACO;AAAY;;AAAZ;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAM;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAN;;;AAAY;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAZ;;;AAAkB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAlB;;;AAAwB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAxB;;;AAA8B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA9B;;;AAAoC;AAAA;AAAA;AAAA;AAAA;;AAAA;AAApC;;;;AAAP;AACY;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAL;;;AAAU;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAV;;;;AAAA;AAAP;AACO;AAAA;AAAY;;AAAZ;AAAP;AAE6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAnB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAnB;AAAP;AAEgB;;AAAA;;;AACT;;;AAAiB;;;;;;;;;;;;;AAAjB;AAAP;AACgB;;;AAAT;AAAP;AAEA;;;AAEO;AAAP;;;;;;;;;AAKR;;;AAEwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AAAA;;AAAA;AAEO;;AAAA;AAAA;AAAA;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAEQ;AAAW;;AAAA;AAAX;AAAsB;AAAA;AAAtB;AAAR;AACO;;AAAA;;;AAAW;;;AAAX;AAAiB;AAAA;;;AAAjB;AAEO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAd;AAIsB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAhB;AAAO;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAU;AAAA;AAAA;;;AAAa;AAAb;AAAA;AAAA;AAAV;AAAP;AAEA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAO;AAAP;AAAA;AAAA;;AAAA;AAAY;;;AAAZ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAU;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAV;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.tuples.Arc4TuplesTypeContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 9 10"
    },
    "7": {
      "op": "bytecblock 0x00 0x 0x68656c6c6f 0x776f726c64"
    },
    "24": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "bytec_2 // 0x68656c6c6f",
      "defined_out": [
        "0x68656c6c6f"
      ],
      "stack_out": [
        "0x68656c6c6f"
      ]
    },
    "25": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "26": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "27": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "30": {
      "op": "bytec_2 // 0x68656c6c6f",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x68656c6c6f"
      ]
    },
    "31": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "32": {
      "op": "bytec_3 // 0x776f726c64",
      "defined_out": [
        "0x776f726c64",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "0x776f726c64"
      ]
    },
    "33": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%length%1#1"
      ]
    },
    "34": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "35": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "38": {
      "op": "bytec_3 // 0x776f726c64",
      "stack_out": [
        "encoded%0#0",
        "aggregate%length_uint16%1#1",
        "0x776f726c64"
      ]
    },
    "39": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "encoded%1#0"
      ]
    },
    "40": {
      "op": "swap",
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0"
      ]
    },
    "41": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "0x"
      ]
    },
    "42": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x",
        "0x01",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "0x",
        "0x01"
      ]
    },
    "45": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%encoded%0#1"
      ]
    },
    "46": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "aggregate%encoded%0#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%encoded%0#1",
        "0x02"
      ]
    },
    "49": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%encoded%1#1"
      ]
    },
    "50": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%encoded%1#1",
        "0x"
      ]
    },
    "51": {
      "op": "dig 2",
      "defined_out": [
        "0x",
        "aggregate%encoded%1#1",
        "encoded%0#0",
        "encoded%0#0 (copy)",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%encoded%1#1",
        "0x",
        "encoded%0#0 (copy)"
      ]
    },
    "53": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1"
      ]
    },
    "54": {
      "op": "cover 2",
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "encoded%0#0",
        "aggregate%encoded%1#1"
      ]
    },
    "56": {
      "op": "swap",
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "encoded%0#0"
      ]
    },
    "57": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#1",
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "aggregate%data_length%0#1"
      ]
    },
    "58": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%data_length%0#1",
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "aggregate%data_length%0#1",
        "7"
      ]
    },
    "60": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "aggregate%current_tail_offset%0#1"
      ]
    },
    "61": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "aggregate%current_tail_offset%0#1",
        "7"
      ]
    },
    "63": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%as_bytes%2#1"
      ]
    },
    "64": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%1#1",
        "aggregate%offset_as_uint16%0#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "67": {
      "op": "uncover 2",
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%offset_as_uint16%0#1",
        "aggregate%encoded%1#1"
      ]
    },
    "69": {
      "op": "swap",
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%1#1",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "70": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "aggregate%tail%0#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1"
      ]
    },
    "71": {
      "op": "uncover 2",
      "stack_out": [
        "encoded%1#0",
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1",
        "aggregate%tail%0#1"
      ]
    },
    "73": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1",
        "aggregate%tail%0#1",
        "encoded%1#0"
      ]
    },
    "75": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1",
        "aggregate%tail%1#1"
      ],
      "stack_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1",
        "aggregate%tail%1#1"
      ]
    },
    "76": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%current_tail_offset%0#1",
        "aggregate%encoded%2#1"
      ]
    },
    "78": {
      "op": "swap",
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%encoded%2#1",
        "aggregate%current_tail_offset%0#1"
      ]
    },
    "79": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "aggregate%encoded%2#1",
        "aggregate%tail%1#1"
      ],
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%encoded%2#1",
        "aggregate%as_bytes%3#1"
      ]
    },
    "80": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%encoded%2#1",
        "aggregate%offset_as_uint16%1#1",
        "aggregate%tail%1#1"
      ],
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%encoded%2#1",
        "aggregate%offset_as_uint16%1#1"
      ]
    },
    "83": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%3#1",
        "aggregate%tail%1#1"
      ],
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%encoded%3#1"
      ]
    },
    "84": {
      "op": "pushbytes 0xff",
      "defined_out": [
        "0xff",
        "aggregate%encoded%3#1",
        "aggregate%tail%1#1"
      ],
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%encoded%3#1",
        "0xff"
      ]
    },
    "87": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "aggregate%tail%1#1"
      ],
      "stack_out": [
        "aggregate%tail%1#1",
        "aggregate%encoded%4#1"
      ]
    },
    "88": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%4#1",
        "aggregate%tail%1#1"
      ]
    },
    "89": {
      "op": "concat",
      "defined_out": [
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0"
      ]
    },
    "90": {
      "op": "dup",
      "defined_out": [
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "my_tuple#0"
      ]
    },
    "91": {
      "op": "pushbytes 0x01020007000eff000568656c6c6f0005776f726c64",
      "defined_out": [
        "0x01020007000eff000568656c6c6f0005776f726c64",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "my_tuple#0",
        "0x01020007000eff000568656c6c6f0005776f726c64"
      ]
    },
    "114": {
      "op": "==",
      "defined_out": [
        "my_tuple#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%1#0"
      ]
    },
    "115": {
      "op": "assert",
      "stack_out": [
        "my_tuple#0"
      ]
    },
    "116": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "0x00"
      ]
    },
    "117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "0x00",
        "0"
      ]
    },
    "118": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "119": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0"
      ]
    },
    "120": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "0x00"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "122": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "123": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "124": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "126": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "127": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "128": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "129": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "131": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "132": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "133": {
      "op": "cover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "135": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "136": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "137": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "138": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%6#0"
      ]
    },
    "139": {
      "op": "cover 3",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "141": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "142": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "143": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "144": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%7#0"
      ]
    },
    "145": {
      "op": "cover 4",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "147": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "148": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "149": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "150": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%8#0"
      ]
    },
    "151": {
      "op": "cover 5",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "153": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "154": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "155": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "156": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%9#0"
      ]
    },
    "157": {
      "op": "cover 6",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "159": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "161": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x00",
        "0",
        "1"
      ]
    },
    "162": {
      "op": "setbit",
      "defined_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%10#0"
      ]
    },
    "163": {
      "op": "cover 7",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "165": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x"
      ]
    },
    "166": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x",
        "0x04",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x",
        "0x04"
      ]
    },
    "169": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%2#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%encoded%6#1"
      ]
    },
    "170": {
      "op": "uncover 9",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%encoded%6#1",
        "tmp%2#0"
      ]
    },
    "172": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%encoded%7#1"
      ]
    },
    "173": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%7#1",
        "tmp%3#0"
      ]
    },
    "174": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%7#1",
        "tmp%3#0",
        "0"
      ]
    },
    "175": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded%7#1",
        "aggregate%get_bit%0#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%7#1",
        "aggregate%get_bit%0#1"
      ]
    },
    "176": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%get_bit%0#1",
        "aggregate%encoded%7#1"
      ]
    },
    "177": {
      "op": "intc_2 // 9",
      "defined_out": [
        "9",
        "aggregate%encoded%7#1",
        "aggregate%get_bit%0#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%get_bit%0#1",
        "aggregate%encoded%7#1",
        "9"
      ]
    },
    "178": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%encoded%7#1",
        "9",
        "aggregate%get_bit%0#1"
      ]
    },
    "180": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%set_bit%0#1"
      ]
    },
    "181": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%set_bit%0#1",
        "tmp%4#0"
      ]
    },
    "182": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%set_bit%0#1",
        "tmp%4#0",
        "0"
      ]
    },
    "183": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#1",
        "aggregate%set_bit%0#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%set_bit%0#1",
        "aggregate%get_bit%1#1"
      ]
    },
    "184": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%get_bit%1#1",
        "aggregate%set_bit%0#1"
      ]
    },
    "185": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "aggregate%get_bit%1#1",
        "aggregate%set_bit%0#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%get_bit%1#1",
        "aggregate%set_bit%0#1",
        "10"
      ]
    },
    "186": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%set_bit%0#1",
        "10",
        "aggregate%get_bit%1#1"
      ]
    },
    "188": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%1#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%set_bit%1#1"
      ]
    },
    "189": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%set_bit%1#1",
        "tmp%5#0"
      ]
    },
    "190": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%set_bit%1#1",
        "tmp%5#0",
        "0"
      ]
    },
    "191": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%2#1",
        "aggregate%set_bit%1#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%set_bit%1#1",
        "aggregate%get_bit%2#1"
      ]
    },
    "192": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%get_bit%2#1",
        "aggregate%set_bit%1#1"
      ]
    },
    "193": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "aggregate%get_bit%2#1",
        "aggregate%set_bit%1#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%get_bit%2#1",
        "aggregate%set_bit%1#1",
        "11"
      ]
    },
    "195": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%set_bit%1#1",
        "11",
        "aggregate%get_bit%2#1"
      ]
    },
    "197": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%2#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%set_bit%2#1"
      ]
    },
    "198": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%set_bit%2#1",
        "tmp%6#0"
      ]
    },
    "199": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%set_bit%2#1",
        "tmp%6#0",
        "0"
      ]
    },
    "200": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%3#1",
        "aggregate%set_bit%2#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%set_bit%2#1",
        "aggregate%get_bit%3#1"
      ]
    },
    "201": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%get_bit%3#1",
        "aggregate%set_bit%2#1"
      ]
    },
    "202": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%get_bit%3#1",
        "aggregate%set_bit%2#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%get_bit%3#1",
        "aggregate%set_bit%2#1",
        "12"
      ]
    },
    "204": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%set_bit%2#1",
        "12",
        "aggregate%get_bit%3#1"
      ]
    },
    "206": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%3#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%set_bit%3#1"
      ]
    },
    "207": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%set_bit%3#1",
        "tmp%7#0"
      ]
    },
    "208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%set_bit%3#1",
        "tmp%7#0",
        "0"
      ]
    },
    "209": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%4#1",
        "aggregate%set_bit%3#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%set_bit%3#1",
        "aggregate%get_bit%4#1"
      ]
    },
    "210": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%get_bit%4#1",
        "aggregate%set_bit%3#1"
      ]
    },
    "211": {
      "op": "pushint 13 // 13",
      "defined_out": [
        "13",
        "aggregate%get_bit%4#1",
        "aggregate%set_bit%3#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%get_bit%4#1",
        "aggregate%set_bit%3#1",
        "13"
      ]
    },
    "213": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%set_bit%3#1",
        "13",
        "aggregate%get_bit%4#1"
      ]
    },
    "215": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%4#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%set_bit%4#1"
      ]
    },
    "216": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%set_bit%4#1",
        "tmp%8#0"
      ]
    },
    "217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%set_bit%4#1",
        "tmp%8#0",
        "0"
      ]
    },
    "218": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%5#1",
        "aggregate%set_bit%4#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%set_bit%4#1",
        "aggregate%get_bit%5#1"
      ]
    },
    "219": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%get_bit%5#1",
        "aggregate%set_bit%4#1"
      ]
    },
    "220": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "aggregate%get_bit%5#1",
        "aggregate%set_bit%4#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%get_bit%5#1",
        "aggregate%set_bit%4#1",
        "14"
      ]
    },
    "222": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%set_bit%4#1",
        "14",
        "aggregate%get_bit%5#1"
      ]
    },
    "224": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%5#1",
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "tmp%9#0",
        "aggregate%set_bit%5#1"
      ]
    },
    "225": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%set_bit%5#1",
        "tmp%9#0"
      ]
    },
    "226": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%set_bit%5#1",
        "tmp%9#0",
        "0"
      ]
    },
    "227": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%6#1",
        "aggregate%set_bit%5#1",
        "my_tuple#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%set_bit%5#1",
        "aggregate%get_bit%6#1"
      ]
    },
    "228": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%get_bit%6#1",
        "aggregate%set_bit%5#1"
      ]
    },
    "229": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "aggregate%get_bit%6#1",
        "aggregate%set_bit%5#1",
        "my_tuple#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%get_bit%6#1",
        "aggregate%set_bit%5#1",
        "15"
      ]
    },
    "231": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%set_bit%5#1",
        "15",
        "aggregate%get_bit%6#1"
      ]
    },
    "233": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%6#1",
        "my_tuple#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "tmp%10#0",
        "aggregate%set_bit%6#1"
      ]
    },
    "234": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "aggregate%set_bit%6#1",
        "tmp%10#0"
      ]
    },
    "235": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "aggregate%encoded%8#1"
      ]
    },
    "236": {
      "op": "pushbytes 0x10",
      "defined_out": [
        "0x10",
        "aggregate%encoded%8#1",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "aggregate%encoded%8#1",
        "0x10"
      ]
    },
    "239": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%9#1",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "aggregate%encoded%9#1"
      ]
    },
    "240": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "my_tuple#0",
        "aggregate%encoded%9#1",
        "0x"
      ]
    },
    "241": {
      "op": "concat",
      "defined_out": [
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0"
      ]
    },
    "242": {
      "op": "dupn 2",
      "defined_out": [
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "244": {
      "op": "pushbytes 0x04bd8010",
      "defined_out": [
        "0x04bd8010",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "0x04bd8010"
      ]
    },
    "250": {
      "op": "==",
      "defined_out": [
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "tmp%12#0"
      ]
    },
    "251": {
      "op": "assert",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0"
      ]
    },
    "252": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "253": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "0"
      ]
    },
    "254": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "0",
        "1"
      ]
    },
    "255": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "aggregate%extract%0#1"
      ]
    },
    "256": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0"
      ]
    },
    "257": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "258": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "8"
      ]
    },
    "260": {
      "op": "getbit",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%get_bit%7#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "aggregate%get_bit%7#1"
      ]
    },
    "261": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "aggregate%get_bit%7#1",
        "0x00"
      ]
    },
    "262": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "aggregate%get_bit%7#1",
        "0x00",
        "0"
      ]
    },
    "263": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%7#1"
      ]
    },
    "265": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%9#1"
      ]
    },
    "266": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0"
      ]
    },
    "267": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "268": {
      "op": "intc_2 // 9",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "9"
      ]
    },
    "269": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%8#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "aggregate%get_bit%8#1"
      ]
    },
    "270": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "aggregate%get_bit%8#1",
        "0x00"
      ]
    },
    "271": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "aggregate%get_bit%8#1",
        "0x00",
        "0"
      ]
    },
    "272": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%8#1"
      ]
    },
    "274": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%10#1"
      ]
    },
    "275": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0"
      ]
    },
    "276": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "277": {
      "op": "intc_3 // 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "10"
      ]
    },
    "278": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%9#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "aggregate%get_bit%9#1"
      ]
    },
    "279": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "aggregate%get_bit%9#1",
        "0x00"
      ]
    },
    "280": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "aggregate%get_bit%9#1",
        "0x00",
        "0"
      ]
    },
    "281": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%9#1"
      ]
    },
    "283": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%11#1"
      ]
    },
    "284": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0"
      ]
    },
    "285": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "286": {
      "op": "pushint 11 // 11",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "11"
      ]
    },
    "288": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%10#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "aggregate%get_bit%10#1"
      ]
    },
    "289": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "aggregate%get_bit%10#1",
        "0x00"
      ]
    },
    "290": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "aggregate%get_bit%10#1",
        "0x00",
        "0"
      ]
    },
    "291": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%10#1"
      ]
    },
    "293": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%12#1"
      ]
    },
    "294": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0"
      ]
    },
    "295": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "296": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "12"
      ]
    },
    "298": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%11#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "aggregate%get_bit%11#1"
      ]
    },
    "299": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "aggregate%get_bit%11#1",
        "0x00"
      ]
    },
    "300": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "aggregate%get_bit%11#1",
        "0x00",
        "0"
      ]
    },
    "301": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%11#1"
      ]
    },
    "303": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%13#1"
      ]
    },
    "304": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0"
      ]
    },
    "305": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "306": {
      "op": "pushint 13 // 13",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "13"
      ]
    },
    "308": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%12#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "aggregate%get_bit%12#1"
      ]
    },
    "309": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "aggregate%get_bit%12#1",
        "0x00"
      ]
    },
    "310": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "aggregate%get_bit%12#1",
        "0x00",
        "0"
      ]
    },
    "311": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%12#1"
      ]
    },
    "313": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%14#1"
      ]
    },
    "314": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0"
      ]
    },
    "315": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "316": {
      "op": "pushint 14 // 14",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "14"
      ]
    },
    "318": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%13#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "aggregate%get_bit%13#1"
      ]
    },
    "319": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "aggregate%get_bit%13#1",
        "0x00"
      ]
    },
    "320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "aggregate%get_bit%13#1",
        "0x00",
        "0"
      ]
    },
    "321": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%13#1"
      ]
    },
    "323": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%15#1"
      ]
    },
    "324": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0"
      ]
    },
    "325": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "326": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "15"
      ]
    },
    "328": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%14#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "aggregate%get_bit%14#1"
      ]
    },
    "329": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "aggregate%get_bit%14#1",
        "0x00"
      ]
    },
    "330": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "aggregate%get_bit%14#1",
        "0x00",
        "0"
      ]
    },
    "331": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%14#1"
      ]
    },
    "333": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%16#1"
      ]
    },
    "334": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0"
      ]
    },
    "335": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "336": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "16"
      ]
    },
    "338": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%get_bit%15#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "aggregate%get_bit%15#1"
      ]
    },
    "339": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "aggregate%get_bit%15#1",
        "0x00"
      ]
    },
    "340": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "aggregate%get_bit%15#1",
        "0x00",
        "0"
      ]
    },
    "341": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%15#1"
      ]
    },
    "343": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%17#1"
      ]
    },
    "344": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0"
      ]
    },
    "345": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "346": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "3"
      ]
    },
    "348": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "3",
        "1"
      ]
    },
    "349": {
      "op": "extract3",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%extract%0#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "aggregate%extract%1#1"
      ]
    },
    "350": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%encoded_bool%9#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "aggregate%extract%1#1",
        "tmp%13#0"
      ]
    },
    "352": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%9#1",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "353": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%14#0"
      ]
    },
    "355": {
      "op": "cover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%10#1",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "357": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%15#0"
      ]
    },
    "359": {
      "op": "cover 3",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%11#1",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "361": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%16#0"
      ]
    },
    "363": {
      "op": "cover 4",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%12#1",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "365": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%17#0"
      ]
    },
    "367": {
      "op": "cover 5",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%13#1",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "369": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%18#0"
      ]
    },
    "371": {
      "op": "cover 6",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%14#1",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "373": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%19#0"
      ]
    },
    "375": {
      "op": "cover 7",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%15#1",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "377": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%20#0"
      ]
    },
    "379": {
      "op": "cover 8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%16#1",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "381": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%17#1",
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%21#0"
      ]
    },
    "383": {
      "op": "cover 9",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "aggregate%encoded_bool%17#1",
        "boolean_packing#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1"
      ]
    },
    "385": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%extract%1#1",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "aggregate%extract%1#1",
        "tmp%22#0"
      ]
    },
    "387": {
      "op": "cover 10",
      "defined_out": [
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "tmp%13#0",
        "tmp%23#0"
      ]
    },
    "389": {
      "op": "cover 10",
      "defined_out": [
        "a#0",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "tmp%14#0",
        "a#0"
      ]
    },
    "391": {
      "op": "cover 10",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "my_tuple#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "tmp%15#0",
        "b#0"
      ]
    },
    "393": {
      "op": "cover 11",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "my_tuple#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "tmp%16#0",
        "c#0"
      ]
    },
    "395": {
      "op": "cover 11",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "my_tuple#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "tmp%17#0",
        "d#0"
      ]
    },
    "397": {
      "op": "cover 10",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "my_tuple#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%18#0",
        "e#0"
      ]
    },
    "399": {
      "op": "cover 9",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "my_tuple#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "f#0"
      ]
    },
    "401": {
      "op": "cover 8",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "my_tuple#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "g#0"
      ]
    },
    "403": {
      "op": "cover 7",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "my_tuple#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "h#0"
      ]
    },
    "405": {
      "op": "cover 6",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "my_tuple#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "tmp%22#0",
        "i#0"
      ]
    },
    "407": {
      "op": "cover 5",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "my_tuple#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "tmp%23#0",
        "j#0"
      ]
    },
    "409": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "k#0"
      ]
    },
    "411": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "k#0",
        "k#0"
      ]
    },
    "412": {
      "op": "cover 4",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "boolean_packing#0",
        "a#0",
        "k#0"
      ]
    },
    "414": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "a#0",
        "k#0",
        "boolean_packing#0"
      ]
    },
    "416": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "a#0",
        "k#0",
        "boolean_packing#0",
        "3"
      ]
    },
    "418": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "a#0",
        "k#0",
        "boolean_packing#0",
        "3",
        "1"
      ]
    },
    "419": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "a#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "420": {
      "op": "b==",
      "defined_out": [
        "a#0",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "a#0",
        "tmp%24#0"
      ]
    },
    "421": {
      "op": "assert",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "a#0"
      ]
    },
    "422": {
      "op": "btoi",
      "defined_out": [
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "tmp%25#0"
      ]
    },
    "423": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "tmp%25#0",
        "4"
      ]
    },
    "425": {
      "op": "==",
      "defined_out": [
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "tmp%26#0"
      ]
    },
    "426": {
      "error": "a is 4",
      "op": "assert // a is 4",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0"
      ]
    },
    "427": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "0x00"
      ]
    },
    "428": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "0x00",
        "0"
      ]
    },
    "429": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "430": {
      "op": "setbit",
      "defined_out": [
        "b#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "b#0",
        "tmp%27#0"
      ]
    },
    "431": {
      "op": "!=",
      "defined_out": [
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%28#0"
      ]
    },
    "432": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "435": {
      "block": "main_and_contd@1",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "436": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "437": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "438": {
      "op": "setbit",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%29#0"
      ]
    },
    "439": {
      "op": "dig 8",
      "defined_out": [
        "d#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%29#0",
        "d#0"
      ]
    },
    "441": {
      "op": "!=",
      "defined_out": [
        "d#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%30#0"
      ]
    },
    "442": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "445": {
      "block": "main_and_contd@2",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "446": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "447": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "448": {
      "op": "setbit",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%31#0"
      ]
    },
    "449": {
      "op": "dig 7",
      "defined_out": [
        "e#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%31#0",
        "e#0"
      ]
    },
    "451": {
      "op": "!=",
      "defined_out": [
        "e#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%32#0"
      ]
    },
    "452": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "455": {
      "block": "main_and_contd@3",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "456": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "457": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "458": {
      "op": "setbit",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%33#0"
      ]
    },
    "459": {
      "op": "dig 6",
      "defined_out": [
        "f#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%33#0",
        "f#0"
      ]
    },
    "461": {
      "op": "!=",
      "defined_out": [
        "f#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%34#0"
      ]
    },
    "462": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "465": {
      "block": "main_and_contd@4",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "466": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "467": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "468": {
      "op": "setbit",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%35#0"
      ]
    },
    "469": {
      "op": "dig 5",
      "defined_out": [
        "g#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%35#0",
        "g#0"
      ]
    },
    "471": {
      "op": "!=",
      "defined_out": [
        "g#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%36#0"
      ]
    },
    "472": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "475": {
      "block": "main_and_contd@5",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "476": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "477": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "478": {
      "op": "setbit",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%37#0"
      ]
    },
    "479": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%37#0",
        "i#0"
      ]
    },
    "481": {
      "op": "!=",
      "defined_out": [
        "i#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%38#0"
      ]
    },
    "482": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "485": {
      "block": "main_and_contd@6",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "486": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "487": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "488": {
      "op": "setbit",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%39#0"
      ]
    },
    "489": {
      "op": "dig 2",
      "defined_out": [
        "j#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%39#0",
        "j#0"
      ]
    },
    "491": {
      "op": "!=",
      "defined_out": [
        "j#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%40#0"
      ]
    },
    "492": {
      "op": "bz main_bool_false@8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "495": {
      "block": "main_bool_true@7",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "and_result%0#0"
      ]
    },
    "496": {
      "block": "main_bool_merge@9",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "and_result%0#0"
      ],
      "error": "b,d,e,f,g,i,j are true",
      "op": "assert // b,d,e,f,g,i,j are true",
      "defined_out": [],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "497": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "498": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "499": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "500": {
      "op": "setbit",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%41#0"
      ]
    },
    "501": {
      "op": "dig 9",
      "defined_out": [
        "c#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%41#0",
        "c#0"
      ]
    },
    "503": {
      "op": "!=",
      "defined_out": [
        "c#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%42#0"
      ]
    },
    "504": {
      "op": "bnz main_bool_true@11",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "507": {
      "block": "main_or_contd@10",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00"
      ]
    },
    "508": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0"
      ]
    },
    "509": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "0x00",
        "0",
        "0"
      ]
    },
    "510": {
      "op": "setbit",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%43#0"
      ]
    },
    "511": {
      "op": "dig 4",
      "defined_out": [
        "h#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%43#0",
        "h#0"
      ]
    },
    "513": {
      "op": "!=",
      "defined_out": [
        "h#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%44#0"
      ]
    },
    "514": {
      "op": "bz main_bool_false@12",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "517": {
      "block": "main_bool_true@11",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "or_result%0#0"
      ]
    },
    "518": {
      "block": "main_bool_merge@13",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "or_result%0#0"
      ],
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%45#0"
      ]
    },
    "519": {
      "error": "c and h are false",
      "op": "assert // c and h are false",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "520": {
      "op": "dup",
      "defined_out": [
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "k#0"
      ]
    },
    "521": {
      "op": "btoi",
      "defined_out": [
        "k#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%46#0"
      ]
    },
    "522": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "k#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%46#0",
        "16"
      ]
    },
    "524": {
      "op": "==",
      "defined_out": [
        "k#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%47#0"
      ]
    },
    "525": {
      "error": "k is 16",
      "op": "assert // k is 16",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "526": {
      "op": "dig 9",
      "defined_out": [
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0"
      ]
    },
    "528": {
      "op": "dup",
      "defined_out": [
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "529": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "0"
      ]
    },
    "530": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "0",
        "1"
      ]
    },
    "531": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "aggregate%extract%3#1"
      ]
    },
    "532": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0"
      ]
    },
    "533": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "534": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "8"
      ]
    },
    "536": {
      "op": "getbit",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%get_bit%16#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "aggregate%get_bit%16#1"
      ]
    },
    "537": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%extract%3#1",
        "aggregate%get_bit%16#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "aggregate%get_bit%16#1",
        "0x00"
      ]
    },
    "538": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "aggregate%get_bit%16#1",
        "0x00",
        "0"
      ]
    },
    "539": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%16#1"
      ]
    },
    "541": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%27#1"
      ]
    },
    "542": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0"
      ]
    },
    "543": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "544": {
      "op": "intc_2 // 9",
      "defined_out": [
        "9",
        "aggregate%encoded_bool%27#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "9"
      ]
    },
    "545": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%17#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "aggregate%get_bit%17#1"
      ]
    },
    "546": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "aggregate%get_bit%17#1",
        "0x00"
      ]
    },
    "547": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "aggregate%get_bit%17#1",
        "0x00",
        "0"
      ]
    },
    "548": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%17#1"
      ]
    },
    "550": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%28#1"
      ]
    },
    "551": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0"
      ]
    },
    "552": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "553": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "10"
      ]
    },
    "554": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%18#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "aggregate%get_bit%18#1"
      ]
    },
    "555": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "aggregate%get_bit%18#1",
        "0x00"
      ]
    },
    "556": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "aggregate%get_bit%18#1",
        "0x00",
        "0"
      ]
    },
    "557": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%18#1"
      ]
    },
    "559": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%29#1"
      ]
    },
    "560": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0"
      ]
    },
    "561": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "562": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "11"
      ]
    },
    "564": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%19#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "aggregate%get_bit%19#1"
      ]
    },
    "565": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "aggregate%get_bit%19#1",
        "0x00"
      ]
    },
    "566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "aggregate%get_bit%19#1",
        "0x00",
        "0"
      ]
    },
    "567": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%19#1"
      ]
    },
    "569": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%30#1"
      ]
    },
    "570": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0"
      ]
    },
    "571": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "572": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "12"
      ]
    },
    "574": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%20#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "aggregate%get_bit%20#1"
      ]
    },
    "575": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "aggregate%get_bit%20#1",
        "0x00"
      ]
    },
    "576": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "aggregate%get_bit%20#1",
        "0x00",
        "0"
      ]
    },
    "577": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%20#1"
      ]
    },
    "579": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%31#1"
      ]
    },
    "580": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0"
      ]
    },
    "581": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "582": {
      "op": "pushint 13 // 13",
      "defined_out": [
        "13",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "13"
      ]
    },
    "584": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%21#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "aggregate%get_bit%21#1"
      ]
    },
    "585": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "aggregate%get_bit%21#1",
        "0x00"
      ]
    },
    "586": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "aggregate%get_bit%21#1",
        "0x00",
        "0"
      ]
    },
    "587": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%21#1"
      ]
    },
    "589": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%32#1"
      ]
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0"
      ]
    },
    "591": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "592": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "14"
      ]
    },
    "594": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%22#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "aggregate%get_bit%22#1"
      ]
    },
    "595": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "aggregate%get_bit%22#1",
        "0x00"
      ]
    },
    "596": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "aggregate%get_bit%22#1",
        "0x00",
        "0"
      ]
    },
    "597": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%22#1"
      ]
    },
    "599": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%33#1"
      ]
    },
    "600": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0"
      ]
    },
    "601": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "602": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "15"
      ]
    },
    "604": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%23#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "aggregate%get_bit%23#1"
      ]
    },
    "605": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "aggregate%get_bit%23#1",
        "0x00"
      ]
    },
    "606": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "aggregate%get_bit%23#1",
        "0x00",
        "0"
      ]
    },
    "607": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%23#1"
      ]
    },
    "609": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%34#1"
      ]
    },
    "610": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0"
      ]
    },
    "611": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "612": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "16"
      ]
    },
    "614": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%extract%3#1",
        "aggregate%get_bit%24#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "aggregate%get_bit%24#1"
      ]
    },
    "615": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "aggregate%get_bit%24#1",
        "0x00"
      ]
    },
    "616": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "aggregate%get_bit%24#1",
        "0x00",
        "0"
      ]
    },
    "617": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "0x00",
        "0",
        "aggregate%get_bit%24#1"
      ]
    },
    "619": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "boolean_packing#0",
        "aggregate%encoded_bool%35#1"
      ]
    },
    "620": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0"
      ]
    },
    "621": {
      "op": "dup",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)"
      ]
    },
    "622": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%3#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "3"
      ]
    },
    "624": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "boolean_packing#0 (copy)",
        "3",
        "1"
      ]
    },
    "625": {
      "op": "extract3",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%3#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%extract%3#1",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "aggregate%extract%4#1"
      ]
    },
    "626": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "aggregate%extract%4#1",
        "tmp%48#0"
      ]
    },
    "628": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%27#1",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "629": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%49#0"
      ]
    },
    "631": {
      "op": "cover 3",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%28#1",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "633": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%50#0"
      ]
    },
    "635": {
      "op": "cover 4",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%29#1",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "637": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%51#0"
      ]
    },
    "639": {
      "op": "cover 6",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%30#1",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "641": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%52#0"
      ]
    },
    "643": {
      "op": "cover 8",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%31#1",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "645": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%32#1",
        "aggregate%encoded_bool%33#1",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%53#0"
      ]
    },
    "647": {
      "op": "cover 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "aggregate%encoded_bool%32#1",
        "tmp%53#0",
        "aggregate%encoded_bool%33#1",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "649": {
      "op": "uncover 11",
      "defined_out": [
        "aggregate%encoded_bool%33#1",
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "aggregate%encoded_bool%33#1",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%54#0"
      ]
    },
    "651": {
      "op": "cover 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%54#0",
        "aggregate%encoded_bool%33#1",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "653": {
      "op": "uncover 9",
      "defined_out": [
        "aggregate%encoded_bool%34#1",
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%55#0"
      ]
    },
    "655": {
      "op": "cover 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "aggregate%encoded_bool%34#1",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "657": {
      "op": "uncover 7",
      "defined_out": [
        "aggregate%encoded_bool%35#1",
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%56#0"
      ]
    },
    "659": {
      "op": "cover 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "aggregate%encoded_bool%35#1",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1"
      ]
    },
    "661": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%extract%4#1",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "aggregate%extract%4#1",
        "tmp%57#0"
      ]
    },
    "663": {
      "op": "cover 10",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "tmp%58#0"
      ]
    },
    "665": {
      "op": "cover 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0"
      ]
    },
    "667": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "boolean_packing#0",
        "k#0",
        "tmp%48#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "tmp%48#0",
        "0x"
      ]
    },
    "668": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "0x",
        "tmp%48#0"
      ]
    },
    "669": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%11#1",
        "boolean_packing#0",
        "k#0",
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "boolean_packing#0",
        "aggregate%encoded%11#1"
      ]
    },
    "670": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "boolean_packing#0",
        "aggregate%encoded%11#1",
        "tmp%49#0"
      ]
    },
    "672": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%12#1",
        "boolean_packing#0",
        "k#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "boolean_packing#0",
        "aggregate%encoded%12#1"
      ]
    },
    "673": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%encoded%12#1",
        "tmp%50#0"
      ]
    },
    "675": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%encoded%12#1",
        "tmp%50#0",
        "0"
      ]
    },
    "676": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded%12#1",
        "aggregate%get_bit%25#1",
        "boolean_packing#0",
        "k#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%encoded%12#1",
        "aggregate%get_bit%25#1"
      ]
    },
    "677": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%get_bit%25#1",
        "aggregate%encoded%12#1"
      ]
    },
    "678": {
      "op": "intc_2 // 9",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%get_bit%25#1",
        "aggregate%encoded%12#1",
        "9"
      ]
    },
    "679": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%encoded%12#1",
        "9",
        "aggregate%get_bit%25#1"
      ]
    },
    "681": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%7#1",
        "boolean_packing#0",
        "k#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "tmp%51#0",
        "boolean_packing#0",
        "aggregate%set_bit%7#1"
      ]
    },
    "682": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%set_bit%7#1",
        "tmp%51#0"
      ]
    },
    "684": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%set_bit%7#1",
        "tmp%51#0",
        "0"
      ]
    },
    "685": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%26#1",
        "aggregate%set_bit%7#1",
        "boolean_packing#0",
        "k#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%set_bit%7#1",
        "aggregate%get_bit%26#1"
      ]
    },
    "686": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%get_bit%26#1",
        "aggregate%set_bit%7#1"
      ]
    },
    "687": {
      "op": "intc_3 // 10",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%get_bit%26#1",
        "aggregate%set_bit%7#1",
        "10"
      ]
    },
    "688": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%set_bit%7#1",
        "10",
        "aggregate%get_bit%26#1"
      ]
    },
    "690": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%8#1",
        "boolean_packing#0",
        "k#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%52#0",
        "boolean_packing#0",
        "aggregate%set_bit%8#1"
      ]
    },
    "691": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%8#1",
        "tmp%52#0"
      ]
    },
    "693": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%8#1",
        "tmp%52#0",
        "0"
      ]
    },
    "694": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%27#1",
        "aggregate%set_bit%8#1",
        "boolean_packing#0",
        "k#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%8#1",
        "aggregate%get_bit%27#1"
      ]
    },
    "695": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%get_bit%27#1",
        "aggregate%set_bit%8#1"
      ]
    },
    "696": {
      "op": "pushint 11 // 11",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%get_bit%27#1",
        "aggregate%set_bit%8#1",
        "11"
      ]
    },
    "698": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%8#1",
        "11",
        "aggregate%get_bit%27#1"
      ]
    },
    "700": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%9#1",
        "boolean_packing#0",
        "k#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%53#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%9#1"
      ]
    },
    "701": {
      "op": "uncover 7",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%9#1",
        "tmp%53#0"
      ]
    },
    "703": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%9#1",
        "tmp%53#0",
        "0"
      ]
    },
    "704": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%28#1",
        "aggregate%set_bit%9#1",
        "boolean_packing#0",
        "k#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%9#1",
        "aggregate%get_bit%28#1"
      ]
    },
    "705": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%get_bit%28#1",
        "aggregate%set_bit%9#1"
      ]
    },
    "706": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%get_bit%28#1",
        "aggregate%set_bit%9#1",
        "12"
      ]
    },
    "708": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%9#1",
        "12",
        "aggregate%get_bit%28#1"
      ]
    },
    "710": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%10#1",
        "boolean_packing#0",
        "k#0",
        "tmp%54#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "tmp%54#0",
        "boolean_packing#0",
        "aggregate%set_bit%10#1"
      ]
    },
    "711": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%set_bit%10#1",
        "tmp%54#0"
      ]
    },
    "713": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%set_bit%10#1",
        "tmp%54#0",
        "0"
      ]
    },
    "714": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%29#1",
        "aggregate%set_bit%10#1",
        "boolean_packing#0",
        "k#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%set_bit%10#1",
        "aggregate%get_bit%29#1"
      ]
    },
    "715": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%get_bit%29#1",
        "aggregate%set_bit%10#1"
      ]
    },
    "716": {
      "op": "pushint 13 // 13",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%get_bit%29#1",
        "aggregate%set_bit%10#1",
        "13"
      ]
    },
    "718": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%set_bit%10#1",
        "13",
        "aggregate%get_bit%29#1"
      ]
    },
    "720": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%11#1",
        "boolean_packing#0",
        "k#0",
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0",
        "boolean_packing#0",
        "aggregate%set_bit%11#1"
      ]
    },
    "721": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%set_bit%11#1",
        "tmp%55#0"
      ]
    },
    "723": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%set_bit%11#1",
        "tmp%55#0",
        "0"
      ]
    },
    "724": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%30#1",
        "aggregate%set_bit%11#1",
        "boolean_packing#0",
        "k#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%set_bit%11#1",
        "aggregate%get_bit%30#1"
      ]
    },
    "725": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%get_bit%30#1",
        "aggregate%set_bit%11#1"
      ]
    },
    "726": {
      "op": "pushint 14 // 14",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%get_bit%30#1",
        "aggregate%set_bit%11#1",
        "14"
      ]
    },
    "728": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%set_bit%11#1",
        "14",
        "aggregate%get_bit%30#1"
      ]
    },
    "730": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%12#1",
        "boolean_packing#0",
        "k#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "tmp%56#0",
        "boolean_packing#0",
        "aggregate%set_bit%12#1"
      ]
    },
    "731": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%set_bit%12#1",
        "tmp%56#0"
      ]
    },
    "733": {
      "op": "intc_0 // 0",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%set_bit%12#1",
        "tmp%56#0",
        "0"
      ]
    },
    "734": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%31#1",
        "aggregate%set_bit%12#1",
        "boolean_packing#0",
        "k#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%set_bit%12#1",
        "aggregate%get_bit%31#1"
      ]
    },
    "735": {
      "op": "swap",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%get_bit%31#1",
        "aggregate%set_bit%12#1"
      ]
    },
    "736": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%get_bit%31#1",
        "aggregate%set_bit%12#1",
        "15"
      ]
    },
    "738": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%set_bit%12#1",
        "15",
        "aggregate%get_bit%31#1"
      ]
    },
    "740": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%13#1",
        "boolean_packing#0",
        "k#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "tmp%57#0",
        "boolean_packing#0",
        "aggregate%set_bit%13#1"
      ]
    },
    "741": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "boolean_packing#0",
        "aggregate%set_bit%13#1",
        "tmp%57#0"
      ]
    },
    "743": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%13#1",
        "boolean_packing#0",
        "k#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%58#0",
        "boolean_packing#0",
        "aggregate%encoded%13#1"
      ]
    },
    "744": {
      "op": "uncover 2",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "aggregate%encoded%13#1",
        "tmp%58#0"
      ]
    },
    "746": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%14#1",
        "boolean_packing#0",
        "k#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "aggregate%encoded%14#1"
      ]
    },
    "747": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "aggregate%encoded%14#1",
        "0x"
      ]
    },
    "748": {
      "op": "concat",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "boolean_packing#0",
        "tmp%59#0"
      ]
    },
    "749": {
      "op": "==",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%60#0"
      ]
    },
    "750": {
      "op": "assert",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "751": {
      "op": "dig 10",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "my_tuple#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "my_tuple#0"
      ]
    },
    "753": {
      "callsub": "test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff",
      "op": "callsub test_stuff",
      "defined_out": [
        "boolean_packing#0",
        "concat#0",
        "k#0",
        "my_tuple#0",
        "total#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "total#0",
        "concat#0"
      ]
    },
    "756": {
      "op": "extract 2 0",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "my_tuple#0",
        "tmp%63#0",
        "total#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "total#0",
        "tmp%63#0"
      ]
    },
    "759": {
      "op": "pushbytes \"hello world\"",
      "defined_out": [
        "\"hello world\"",
        "boolean_packing#0",
        "k#0",
        "my_tuple#0",
        "tmp%63#0",
        "total#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "total#0",
        "tmp%63#0",
        "\"hello world\""
      ]
    },
    "772": {
      "op": "==",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "my_tuple#0",
        "tmp%64#0",
        "total#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "total#0",
        "tmp%64#0"
      ]
    },
    "773": {
      "op": "assert",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "total#0"
      ]
    },
    "774": {
      "op": "pushint 258 // 258",
      "defined_out": [
        "258",
        "boolean_packing#0",
        "k#0",
        "my_tuple#0",
        "total#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "total#0",
        "258"
      ]
    },
    "777": {
      "op": "==",
      "defined_out": [
        "boolean_packing#0",
        "k#0",
        "my_tuple#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "tmp%65#0"
      ]
    },
    "778": {
      "op": "assert",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "779": {
      "callsub": "test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy",
      "op": "callsub test_copy"
    },
    "782": {
      "op": "intc_1 // 1",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "1"
      ]
    },
    "783": {
      "op": "return",
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "784": {
      "block": "main_bool_false@12",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "or_result%0#0"
      ]
    },
    "785": {
      "op": "b main_bool_merge@13"
    },
    "788": {
      "block": "main_bool_false@8",
      "stack_in": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "my_tuple#0",
        "boolean_packing#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "and_result%0#0"
      ]
    },
    "789": {
      "op": "b main_bool_merge@9"
    },
    "792": {
      "subroutine": "test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_stuff",
      "params": {
        "test_tuple#0": "bytes"
      },
      "block": "test_stuff",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "795": {
      "block": "test_stuff_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "test_tuple#0 (copy)"
      ],
      "stack_out": [
        "test_tuple#0 (copy)"
      ]
    },
    "797": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "test_tuple#0 (copy)"
      ],
      "stack_out": [
        "test_tuple#0 (copy)",
        "0"
      ]
    },
    "798": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "test_tuple#0 (copy)"
      ],
      "stack_out": [
        "test_tuple#0 (copy)",
        "0",
        "1"
      ]
    },
    "799": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1"
      ]
    },
    "800": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "test_tuple#0 (copy)"
      ]
    },
    "802": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%extract%0#1",
        "test_tuple#0 (copy)",
        "1"
      ]
    },
    "803": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract%0#1",
        "test_tuple#0 (copy)",
        "1",
        "1"
      ]
    },
    "804": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1"
      ]
    },
    "805": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "test_tuple#0 (copy)"
      ]
    },
    "807": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "test_tuple#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "test_tuple#0 (copy)",
        "2"
      ]
    },
    "809": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "810": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1",
        "test_tuple#0 (copy)"
      ]
    },
    "812": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1",
        "test_tuple#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1",
        "test_tuple#0 (copy)",
        "4"
      ]
    },
    "814": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "815": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1",
        "test_tuple#0 (copy)"
      ]
    },
    "817": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%1#1",
        "test_tuple#0 (copy)",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "819": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "test_tuple#0 (copy)",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "821": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1"
      ]
    },
    "822": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "test_tuple#0 (copy)"
      ]
    },
    "824": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "test_tuple#0 (copy)",
        "4"
      ]
    },
    "826": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "827": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "test_tuple#0 (copy)"
      ]
    },
    "829": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "aggregate%substring3%0#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1"
      ]
    },
    "830": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "test_tuple#0 (copy)"
      ]
    },
    "832": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%len%0#1",
        "test_tuple#0 (copy)",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "834": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "test_tuple#0 (copy)",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1"
      ]
    },
    "836": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1"
      ]
    },
    "837": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "test_tuple#0 (copy)"
      ]
    },
    "839": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "test_tuple#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "test_tuple#0 (copy)",
        "6"
      ]
    },
    "841": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "test_tuple#0 (copy)",
        "6",
        "1"
      ]
    },
    "842": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%extract%2#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1"
      ],
      "stack_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "aggregate%extract%2#1"
      ]
    },
    "843": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%extract%2#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "aggregate%extract%2#1",
        "tmp%0#0"
      ]
    },
    "845": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "tmp%0#0",
        "aggregate%extract%2#1"
      ]
    },
    "846": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%2#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "tmp%0#0",
        "aggregate%extract%2#1",
        "tmp%1#0"
      ]
    },
    "848": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%extract%2#1"
      ]
    },
    "850": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%2#1",
        "aggregate%substring3%1#1",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%substring3%1#1",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%extract%2#1",
        "tmp%2#0"
      ]
    },
    "852": {
      "op": "cover 3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "854": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "a#0"
      ]
    },
    "856": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "b#0"
      ]
    },
    "858": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "b#0",
        "a#0",
        "tmp%4#0",
        "tmp%3#0",
        "c#0"
      ]
    },
    "860": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "a#0",
        "tmp%4#0",
        "d#0"
      ]
    },
    "862": {
      "op": "cover 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "a#0",
        "e#0"
      ]
    },
    "864": {
      "op": "swap",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0"
      ]
    },
    "865": {
      "op": "frame_dig -1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)"
      ]
    },
    "867": {
      "op": "intc_0 // 0",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)",
        "0"
      ]
    },
    "868": {
      "op": "intc_1 // 1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)",
        "0",
        "1"
      ]
    },
    "869": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "870": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "872": {
      "op": "b==",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "tmp%5#0"
      ]
    },
    "873": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0"
      ]
    },
    "874": {
      "op": "frame_dig -1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)"
      ]
    },
    "876": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)",
        "6"
      ]
    },
    "878": {
      "op": "intc_1 // 1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)",
        "6",
        "1"
      ]
    },
    "879": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "880": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%3#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "882": {
      "op": "b==",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "tmp%6#0"
      ]
    },
    "883": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0"
      ]
    },
    "884": {
      "op": "frame_dig -1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)"
      ]
    },
    "886": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)",
        "4"
      ]
    },
    "888": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%3#1",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "889": {
      "op": "frame_dig -1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "aggregate%extract_uint16%3#1",
        "test_tuple#0 (copy)"
      ]
    },
    "891": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%1#1",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%1#1"
      ]
    },
    "892": {
      "op": "frame_dig -1",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%1#1",
        "test_tuple#0 (copy)"
      ]
    },
    "894": {
      "op": "uncover 2",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "aggregate%len%1#1",
        "test_tuple#0 (copy)",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "896": {
      "op": "uncover 2",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "test_tuple#0 (copy)",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%1#1"
      ]
    },
    "898": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "tuple_item%2#0"
      ]
    },
    "899": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "d#0 (copy)",
        "e#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "tuple_item%2#0",
        "d#0 (copy)"
      ]
    },
    "901": {
      "op": "==",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0",
        "tmp%7#0"
      ]
    },
    "902": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "a#0"
      ]
    },
    "903": {
      "op": "btoi",
      "defined_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "c#0",
        "b#0",
        "d#0",
        "e#0",
        "tmp%8#0"
      ]
    },
    "904": {
      "op": "uncover 3",
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%8#0",
        "b#0"
      ]
    },
    "906": {
      "op": "btoi",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "907": {
      "op": "+",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%10#0"
      ]
    },
    "908": {
      "op": "swap",
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%10#0",
        "e#0"
      ]
    },
    "909": {
      "op": "btoi",
      "defined_out": [
        "c#0",
        "d#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "910": {
      "op": "+",
      "defined_out": [
        "c#0",
        "d#0",
        "total#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "total#0"
      ]
    },
    "911": {
      "op": "swap",
      "stack_out": [
        "c#0",
        "total#0",
        "d#0"
      ]
    },
    "912": {
      "op": "uncover 2",
      "stack_out": [
        "total#0",
        "d#0",
        "c#0"
      ]
    },
    "914": {
      "op": "extract 2 0",
      "defined_out": [
        "d#0",
        "tmp%13#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "d#0",
        "tmp%13#0"
      ]
    },
    "917": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "d#0",
        "tmp%13#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "d#0",
        "tmp%13#0",
        "\" \""
      ]
    },
    "920": {
      "op": "concat",
      "defined_out": [
        "d#0",
        "tmp%14#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "d#0",
        "tmp%14#0"
      ]
    },
    "921": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "tmp%14#0",
        "d#0"
      ]
    },
    "922": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "925": {
      "op": "concat",
      "defined_out": [
        "text#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "text#0"
      ]
    },
    "926": {
      "op": "dup",
      "defined_out": [
        "text#0",
        "text#0 (copy)",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "text#0",
        "text#0 (copy)"
      ]
    },
    "927": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1",
        "text#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "text#0",
        "aggregate%length%0#1"
      ]
    },
    "928": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1",
        "text#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "text#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "929": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1",
        "text#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "text#0",
        "aggregate%length_uint16%0#1"
      ]
    },
    "932": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "aggregate%length_uint16%0#1",
        "text#0"
      ]
    },
    "933": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "tmp%17#0"
      ]
    },
    "934": {
      "retsub": true,
      "op": "retsub"
    },
    "935": {
      "subroutine": "test_cases.arc4_types.tuples.Arc4TuplesTypeContract.test_copy",
      "params": {},
      "block": "test_copy_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "936": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "937": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "938": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "941": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x"
      ]
    },
    "942": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "943": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "944": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x",
        "0x00",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x",
        "0x00"
      ]
    },
    "945": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%encoded%0#1"
      ]
    },
    "946": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%0#1",
        "tmp%0#0"
      ]
    },
    "947": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "aggregate%encoded%0#1",
        "tmp%0#0",
        "0x"
      ]
    },
    "948": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%0#1",
        "0x",
        "tmp%0#0"
      ]
    },
    "949": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "aggregate%tail%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%tail%0#1"
      ]
    },
    "950": {
      "op": "swap",
      "stack_out": [
        "aggregate%tail%0#1",
        "aggregate%encoded%0#1"
      ]
    },
    "951": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%encoded%0#1",
        "aggregate%tail%0#1"
      ],
      "stack_out": [
        "aggregate%tail%0#1",
        "aggregate%encoded%0#1",
        "3"
      ]
    },
    "953": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "aggregate%encoded%0#1",
        "aggregate%tail%0#1"
      ],
      "stack_out": [
        "aggregate%tail%0#1",
        "aggregate%encoded%0#1",
        "aggregate%as_bytes%1#1"
      ]
    },
    "954": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%encoded%0#1",
        "aggregate%offset_as_uint16%0#1",
        "aggregate%tail%0#1"
      ],
      "stack_out": [
        "aggregate%tail%0#1",
        "aggregate%encoded%0#1",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "957": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1"
      ],
      "stack_out": [
        "aggregate%tail%0#1",
        "aggregate%encoded%1#1"
      ]
    },
    "958": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%tail%0#1"
      ]
    },
    "959": {
      "op": "concat",
      "defined_out": [
        "tup#0"
      ],
      "stack_out": [
        "tup#0"
      ]
    },
    "960": {
      "op": "dup",
      "defined_out": [
        "tup#0",
        "tup#0 (copy)"
      ],
      "stack_out": [
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "961": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tup#0",
        "tup#0 (copy)"
      ],
      "stack_out": [
        "tup#0",
        "tup#0 (copy)",
        "1"
      ]
    },
    "962": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "963": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tup#0"
      ]
    },
    "964": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "965": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "aggregate%len%0#1",
        "tup#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tup#0",
        "aggregate%len%0#1"
      ]
    },
    "966": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "aggregate%len%0#1",
        "tup#0"
      ]
    },
    "967": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "aggregate%len%0#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "968": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%len%0#1",
        "tup#0",
        "tup#0 (copy)",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "970": {
      "op": "uncover 3",
      "stack_out": [
        "tup#0",
        "tup#0 (copy)",
        "aggregate%extract_uint16%0#1",
        "aggregate%len%0#1"
      ]
    },
    "972": {
      "op": "substring3",
      "defined_out": [
        "tup#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%0#0"
      ]
    },
    "973": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "0x"
      ]
    },
    "974": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "0x",
        "0x00"
      ]
    },
    "975": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%3#1",
        "tup#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "aggregate%encoded%3#1"
      ]
    },
    "976": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "aggregate%encoded%3#1",
        "0x"
      ]
    },
    "977": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "tup#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "tmp%2#0"
      ]
    },
    "978": {
      "op": "dig 1",
      "defined_out": [
        "tmp%2#0",
        "tup#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "tmp%2#0",
        "tuple_item%0#0 (copy)"
      ]
    },
    "980": {
      "op": "swap",
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "tuple_item%0#0 (copy)",
        "tmp%2#0"
      ]
    },
    "981": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "tup#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%0#0",
        "concat%0#0"
      ]
    },
    "982": {
      "op": "swap",
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "tuple_item%0#0"
      ]
    },
    "983": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "tup#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "tuple_item%0#0",
        "0"
      ]
    },
    "984": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "985": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "986": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "987": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "988": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "991": {
      "op": "swap",
      "stack_out": [
        "tup#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "992": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "993": {
      "op": "uncover 2",
      "stack_out": [
        "tup#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "995": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint8[])%0#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "as_Encoded(len+uint8[])%0#0"
      ]
    },
    "996": {
      "op": "dig 1",
      "stack_out": [
        "tup#0",
        "as_Encoded(len+uint8[])%0#0",
        "tup#0 (copy)"
      ]
    },
    "998": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup#0",
        "as_Encoded(len+uint8[])%0#0",
        "tup#0 (copy)",
        "1"
      ]
    },
    "999": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#1",
        "as_Encoded(len+uint8[])%0#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "as_Encoded(len+uint8[])%0#0",
        "aggregate%item_offset%0#1"
      ]
    },
    "1000": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+uint8[])%0#0",
        "aggregate%item_offset%0#1",
        "tup#0"
      ]
    },
    "1002": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_Encoded(len+uint8[])%0#0",
        "aggregate%item_offset%0#1",
        "tup#0",
        "0"
      ]
    },
    "1003": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+uint8[])%0#0",
        "tup#0",
        "0",
        "aggregate%item_offset%0#1"
      ]
    },
    "1005": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%0#1",
        "as_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint8[])%0#0",
        "aggregate%data_up_to_item%0#1"
      ]
    },
    "1006": {
      "op": "swap",
      "stack_out": [
        "aggregate%data_up_to_item%0#1",
        "as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1007": {
      "op": "concat",
      "stack_out": [
        "tup#0"
      ]
    },
    "1008": {
      "op": "dup",
      "stack_out": [
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1009": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup#0",
        "tup#0 (copy)",
        "1"
      ]
    },
    "1010": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "1011": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%2#1",
        "tup#0"
      ]
    },
    "1012": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%2#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1013": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%len%2#1",
        "tup#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%2#1",
        "tup#0",
        "aggregate%len%2#1"
      ]
    },
    "1014": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%len%2#1",
        "tup#0"
      ]
    },
    "1015": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%len%2#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1016": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%len%2#1",
        "tup#0",
        "tup#0 (copy)",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "1018": {
      "op": "uncover 3",
      "stack_out": [
        "tup#0",
        "tup#0 (copy)",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%2#1"
      ]
    },
    "1020": {
      "op": "substring3",
      "defined_out": [
        "tup#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%1#0"
      ]
    },
    "1021": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "1"
      ]
    },
    "1022": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "tup#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "1023": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#1",
        "tup#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "aggregate%len_u16%0#1"
      ]
    },
    "1026": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "aggregate%len_u16%0#1",
        "0x00"
      ]
    },
    "1027": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%5#1",
        "tup#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "aggregate%encoded%5#1"
      ]
    },
    "1028": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "aggregate%encoded%5#1",
        "0x"
      ]
    },
    "1029": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0",
        "tup#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tup#0",
        "tuple_item%1#0",
        "encoded_array%0#0"
      ]
    },
    "1030": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "tup#0"
      ],
      "stack_out": [
        "tup#0",
        "tmp%3#0"
      ]
    },
    "1031": {
      "op": "assert",
      "stack_out": [
        "tup#0"
      ]
    },
    "1032": {
      "op": "dupn 2",
      "defined_out": [
        "tup#0",
        "tup#0 (copy)",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1034": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "tup#0 (copy)",
        "1"
      ]
    },
    "1035": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "1036": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%3#1",
        "tup#0"
      ]
    },
    "1037": {
      "op": "dup",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%3#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1038": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#1",
        "aggregate%len%3#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%3#1",
        "tup#0",
        "aggregate%len%3#1"
      ]
    },
    "1039": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%3#1",
        "tup#0"
      ]
    },
    "1040": {
      "op": "dup",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%3#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1041": {
      "op": "uncover 3",
      "stack_out": [
        "tup2#0",
        "aggregate%len%3#1",
        "tup#0",
        "tup#0 (copy)",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "1043": {
      "op": "uncover 3",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "tup#0 (copy)",
        "aggregate%extract_uint16%3#1",
        "aggregate%len%3#1"
      ]
    },
    "1045": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1"
      ]
    },
    "1046": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1",
        "0"
      ]
    },
    "1047": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1",
        "0",
        "1"
      ]
    },
    "1048": {
      "op": "*",
      "defined_out": [
        "aggregate%substring3%3#1",
        "aggregate%write_offset%0#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1",
        "aggregate%write_offset%0#1"
      ]
    },
    "1049": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%substring3%3#1",
        "aggregate%write_offset%0#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1",
        "aggregate%write_offset%0#1",
        "2"
      ]
    },
    "1051": {
      "op": "+",
      "defined_out": [
        "aggregate%substring3%3#1",
        "aggregate%write_offset_with_length_header%0#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1",
        "aggregate%write_offset_with_length_header%0#1"
      ]
    },
    "1052": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "aggregate%substring3%3#1",
        "aggregate%write_offset_with_length_header%0#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%substring3%3#1",
        "aggregate%write_offset_with_length_header%0#1",
        "0x01"
      ]
    },
    "1055": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_array%0#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%updated_array%0#1"
      ]
    },
    "1056": {
      "op": "dig 1",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%updated_array%0#1",
        "tup#0 (copy)"
      ]
    },
    "1058": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%updated_array%0#1",
        "tup#0 (copy)",
        "1"
      ]
    },
    "1059": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%1#1",
        "aggregate%updated_array%0#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%updated_array%0#1",
        "aggregate%item_offset%1#1"
      ]
    },
    "1060": {
      "op": "uncover 2",
      "stack_out": [
        "tup2#0",
        "aggregate%updated_array%0#1",
        "aggregate%item_offset%1#1",
        "tup#0"
      ]
    },
    "1062": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup2#0",
        "aggregate%updated_array%0#1",
        "aggregate%item_offset%1#1",
        "tup#0",
        "0"
      ]
    },
    "1063": {
      "op": "uncover 2",
      "stack_out": [
        "tup2#0",
        "aggregate%updated_array%0#1",
        "tup#0",
        "0",
        "aggregate%item_offset%1#1"
      ]
    },
    "1065": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%1#1",
        "aggregate%updated_array%0#1",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "aggregate%updated_array%0#1",
        "aggregate%data_up_to_item%1#1"
      ]
    },
    "1066": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%data_up_to_item%1#1",
        "aggregate%updated_array%0#1"
      ]
    },
    "1067": {
      "op": "concat",
      "stack_out": [
        "tup2#0",
        "tup#0"
      ]
    },
    "1068": {
      "op": "dup",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1069": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "tup#0 (copy)",
        "1"
      ]
    },
    "1070": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%4#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "1071": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%4#1",
        "tup#0"
      ]
    },
    "1072": {
      "op": "dup",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%4#1",
        "tup#0",
        "tup#0 (copy)"
      ]
    },
    "1073": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%4#1",
        "aggregate%len%4#1",
        "tup#0",
        "tup2#0"
      ],
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%4#1",
        "tup#0",
        "aggregate%len%4#1"
      ]
    },
    "1074": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%4#1",
        "aggregate%len%4#1",
        "tup#0"
      ]
    },
    "1075": {
      "op": "uncover 2",
      "stack_out": [
        "tup2#0",
        "aggregate%len%4#1",
        "tup#0",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "1077": {
      "op": "uncover 2",
      "stack_out": [
        "tup2#0",
        "tup#0",
        "aggregate%extract_uint16%4#1",
        "aggregate%len%4#1"
      ]
    },
    "1079": {
      "op": "substring3",
      "defined_out": [
        "tup2#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tuple_item%2#0"
      ]
    },
    "1080": {
      "op": "dig 1",
      "defined_out": [
        "tup2#0",
        "tup2#0 (copy)",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tuple_item%2#0",
        "tup2#0 (copy)"
      ]
    },
    "1082": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tup2#0",
        "tuple_item%2#0",
        "tup2#0 (copy)",
        "1"
      ]
    },
    "1083": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "tup2#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tup2#0",
        "tuple_item%2#0",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "1084": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%5#1",
        "tuple_item%2#0"
      ]
    },
    "1085": {
      "op": "dig 2",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%5#1",
        "tuple_item%2#0",
        "tup2#0 (copy)"
      ]
    },
    "1087": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%len%5#1",
        "tup2#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%5#1",
        "tuple_item%2#0",
        "aggregate%len%5#1"
      ]
    },
    "1088": {
      "op": "swap",
      "stack_out": [
        "tup2#0",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%5#1",
        "tuple_item%2#0"
      ]
    },
    "1089": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%len%5#1",
        "tuple_item%2#0",
        "tup2#0"
      ]
    },
    "1091": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%len%5#1",
        "tuple_item%2#0",
        "tup2#0",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "1093": {
      "op": "uncover 3",
      "stack_out": [
        "tuple_item%2#0",
        "tup2#0",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%5#1"
      ]
    },
    "1095": {
      "op": "substring3",
      "defined_out": [
        "tuple_item%2#0",
        "tuple_item%3#0"
      ],
      "stack_out": [
        "tuple_item%2#0",
        "tuple_item%3#0"
      ]
    },
    "1096": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1097": {
      "op": "assert",
      "stack_out": []
    },
    "1098": {
      "retsub": true,
      "op": "retsub"
    }
  }
}