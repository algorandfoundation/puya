{
  "version": 3,
  "sources": [
    "../numeric.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BgB;;;AAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAJP;;;AAMD;AAAP;AAEa;AACW;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AADX;AACW;AAAjB;;AAAiB;AAAjB;AAA2C;;AAA3C;AAAP;AADa;AAE+B;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAF/B;AAE+B;AAArC;;AAAqC;AAArC;AAA+D;;;;;AAA/D;AAAP;AAFa;AAGY;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAHZ;AAGY;AAAlB;;AAAkB;AAAlB;AAA4C;;;;AAA5C;AAAP;AAHa;AAIY;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAJZ;AAIY;AAAlB;;AAAkB;AAAlB;AAA4C;;;;;;AAA5C;AAAP;AAJa;AAKgB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AALhB;AAKgB;AAAtB;;AAAsB;AAAtB;AAAgD;;;;;;;;;;AAAhD;AAAP;AACkB;;AAAA;AAAA;AAAX;AAAA;AAAM;;AAAA;AAAiC;AAAjC;AAAb;AACoB;;AAAA;AAAA;AAAb;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ;;AAAA;AAAiC;;AAAjC;AAAf;AACe;;AAAR;AAAA;;AAAA;AAAA;AAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA7B;AAAP;AAIiC;;;;;;;AAAR;AAFd;;;;;;;;;;AAEJ;AAAP;AAIoD;;;;;;;AAAR;AAFd;;;;;;;;;;AAEvB;AAAP;AAEW;;AAEJ;AAAyB;AAAzB;AAAP;AACiC;;;;;;;;AAAR;AAHd;;AAGJ;AAAP;AAIoC;;;;;;AAAR;AAFd;;;;;;;;;;AAEP;AAAP;AAIqC;AAAR;AAFd;AAER;AAAP;AAIsC;;AAAR;AAFd;;;;;;;;;;AAET;AAAP;AAIwC;;AAAR;AAFd;;;;;;;;;;AAEX;AAAP;AAIyC;AAAR;AAFd;;;;;;;;;;AAEZ;AAAP;AAI2C;;;;;;;;;;;AAAR;AAFd;;AAEd;AAAP;AAEiB;;AAAA;AAEV;AAAP;AAM0C;;AAAA;AAAA;AAAnC;AAAA;;AAAQ;;AAAA;AAA2D;AAA3D;AAAf;AAEU;AAEmC;AAAV;AAAZ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFb;AACW;;;;;;;;;;;;;;;;;;AAGd;AAAP;AAEO;AAAsC;;AAAtC;AAAP;AAXI;;AAaG;AAAmC;;AAAnC;AAAP;AAGwB;AAAX;AAAP;;AAAA;AAAA;AACC;AAAA;AAAA;AAAA;AAAiB;AAAjB;AAAP;AAEO;;;;;;AAA8B;AAA9B;AAAP;AAEO;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.numeric.Arc4NumericTypesContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 8 1 3"
    },
    "7": {
      "op": "bytecblock 0x7fffffffffffffff00 0x01 0x0000000000000000 0x02 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x000009184e72a000 0xffffffffffffffff 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "180": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "pushint 255 // 255",
      "defined_out": [
        "255"
      ],
      "stack_out": [
        "255"
      ]
    },
    "183": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1"
      ]
    },
    "184": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#1",
        "aggregate%val_as_bytes%0#1 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1",
        "aggregate%val_as_bytes%0#1 (copy)"
      ]
    },
    "185": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#1",
        "aggregate%val_as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1",
        "aggregate%bitlen%0#1"
      ]
    },
    "186": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "aggregate%bitlen%0#1",
        "aggregate%val_as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1",
        "aggregate%bitlen%0#1",
        "8"
      ]
    },
    "187": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#1",
        "aggregate%val_as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1",
        "aggregate%no_overflow%0#1"
      ]
    },
    "188": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%0#1"
      ]
    },
    "189": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%val_as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1",
        "7"
      ]
    },
    "191": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "7",
        "aggregate%val_as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#1",
        "7",
        "1"
      ]
    },
    "192": {
      "op": "extract3",
      "defined_out": [
        "int8_encoded#0"
      ],
      "stack_out": [
        "int8_encoded#0"
      ]
    },
    "193": {
      "op": "btoi",
      "defined_out": [
        "int8_decoded#0"
      ],
      "stack_out": [
        "int8_decoded#0"
      ]
    },
    "194": {
      "op": "pushint 255 // 255",
      "stack_out": [
        "int8_decoded#0",
        "255"
      ]
    },
    "197": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "198": {
      "op": "assert",
      "stack_out": []
    },
    "199": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "defined_out": [
        "0x7fffffffffffffff00"
      ],
      "stack_out": [
        "0x7fffffffffffffff00"
      ]
    },
    "200": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "201": {
      "op": "intc_2 // 1",
      "stack_out": [
        "length%0#0",
        "1"
      ]
    },
    "202": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%0#0",
        "length%0#0 (copy)"
      ],
      "stack_out": [
        "length%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "204": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "205": {
      "op": "intc_2 // 1",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1"
      ]
    },
    "206": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%0#0",
        "1",
        "length%0#0"
      ]
    },
    "208": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "210": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0"
      ],
      "stack_out": [
        "bounded_index%0#0"
      ]
    },
    "211": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "bounded_index%0#0",
        "0x7fffffffffffffff00"
      ]
    },
    "212": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x7fffffffffffffff00",
        "bounded_index%0#0"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "0x7fffffffffffffff00",
        "0"
      ]
    },
    "213": {
      "op": "uncover 2",
      "stack_out": [
        "0x7fffffffffffffff00",
        "0",
        "bounded_index%0#0"
      ]
    },
    "215": {
      "op": "substring3",
      "defined_out": [
        "reinterpret_Encoded(uint8)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%0#0"
      ]
    },
    "216": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "217": {
      "op": "pushint 127 // 127",
      "defined_out": [
        "127",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "127"
      ]
    },
    "219": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "220": {
      "op": "assert",
      "stack_out": []
    },
    "221": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "0x7fffffffffffffff00"
      ]
    },
    "222": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "223": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "3"
      ]
    },
    "224": {
      "op": "dig 1",
      "defined_out": [
        "3",
        "length%1#0",
        "length%1#0 (copy)"
      ],
      "stack_out": [
        "length%1#0",
        "3",
        "length%1#0 (copy)"
      ]
    },
    "226": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%1#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "227": {
      "op": "intc_3 // 3",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0",
        "3"
      ]
    },
    "228": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%1#0",
        "3",
        "length%1#0"
      ]
    },
    "230": {
      "op": "uncover 2",
      "stack_out": [
        "3",
        "length%1#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "232": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0"
      ],
      "stack_out": [
        "bounded_index%1#0"
      ]
    },
    "233": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "bounded_index%1#0",
        "0x7fffffffffffffff00"
      ]
    },
    "234": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bounded_index%1#0",
        "0x7fffffffffffffff00",
        "0"
      ]
    },
    "235": {
      "op": "uncover 2",
      "stack_out": [
        "0x7fffffffffffffff00",
        "0",
        "bounded_index%1#0"
      ]
    },
    "237": {
      "op": "substring3",
      "defined_out": [
        "reinterpret_Encoded(uint24)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint24)%0#0"
      ]
    },
    "238": {
      "op": "btoi",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "239": {
      "op": "pushint 8388607 // 8388607",
      "defined_out": [
        "8388607",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "8388607"
      ]
    },
    "244": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "245": {
      "op": "assert",
      "stack_out": []
    },
    "246": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "0x7fffffffffffffff00"
      ]
    },
    "247": {
      "op": "len",
      "defined_out": [
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0"
      ]
    },
    "248": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0",
        "2"
      ]
    },
    "250": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%2#0",
        "length%2#0 (copy)"
      ],
      "stack_out": [
        "length%2#0",
        "2",
        "length%2#0 (copy)"
      ]
    },
    "252": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%2#0",
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "253": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%2#0",
        "2"
      ]
    },
    "255": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%2#0",
        "2",
        "length%2#0"
      ]
    },
    "257": {
      "op": "uncover 2",
      "stack_out": [
        "2",
        "length%2#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "259": {
      "op": "select",
      "defined_out": [
        "bounded_index%2#0"
      ],
      "stack_out": [
        "bounded_index%2#0"
      ]
    },
    "260": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "bounded_index%2#0",
        "0x7fffffffffffffff00"
      ]
    },
    "261": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bounded_index%2#0",
        "0x7fffffffffffffff00",
        "0"
      ]
    },
    "262": {
      "op": "uncover 2",
      "stack_out": [
        "0x7fffffffffffffff00",
        "0",
        "bounded_index%2#0"
      ]
    },
    "264": {
      "op": "substring3",
      "defined_out": [
        "reinterpret_Encoded(uint16)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint16)%0#0"
      ]
    },
    "265": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "266": {
      "op": "pushint 32767 // 32767",
      "defined_out": [
        "32767",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "32767"
      ]
    },
    "270": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "271": {
      "op": "assert",
      "stack_out": []
    },
    "272": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "0x7fffffffffffffff00"
      ]
    },
    "273": {
      "op": "len",
      "defined_out": [
        "length%3#0"
      ],
      "stack_out": [
        "length%3#0"
      ]
    },
    "274": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "length%3#0"
      ],
      "stack_out": [
        "length%3#0",
        "4"
      ]
    },
    "276": {
      "op": "dig 1",
      "defined_out": [
        "4",
        "length%3#0",
        "length%3#0 (copy)"
      ],
      "stack_out": [
        "length%3#0",
        "4",
        "length%3#0 (copy)"
      ]
    },
    "278": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%3#0",
        "length%3#0"
      ],
      "stack_out": [
        "length%3#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "279": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "length%3#0",
        "is_out_of_bounds%3#0",
        "4"
      ]
    },
    "281": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%3#0",
        "4",
        "length%3#0"
      ]
    },
    "283": {
      "op": "uncover 2",
      "stack_out": [
        "4",
        "length%3#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "285": {
      "op": "select",
      "defined_out": [
        "bounded_index%3#0"
      ],
      "stack_out": [
        "bounded_index%3#0"
      ]
    },
    "286": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "bounded_index%3#0",
        "0x7fffffffffffffff00"
      ]
    },
    "287": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bounded_index%3#0",
        "0x7fffffffffffffff00",
        "0"
      ]
    },
    "288": {
      "op": "uncover 2",
      "stack_out": [
        "0x7fffffffffffffff00",
        "0",
        "bounded_index%3#0"
      ]
    },
    "290": {
      "op": "substring3",
      "defined_out": [
        "reinterpret_Encoded(uint32)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint32)%0#0"
      ]
    },
    "291": {
      "op": "btoi",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "292": {
      "op": "pushint 2147483647 // 2147483647",
      "defined_out": [
        "2147483647",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "2147483647"
      ]
    },
    "298": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "299": {
      "op": "assert",
      "stack_out": []
    },
    "300": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "0x7fffffffffffffff00"
      ]
    },
    "301": {
      "op": "len",
      "defined_out": [
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0"
      ]
    },
    "302": {
      "op": "intc_1 // 8",
      "stack_out": [
        "length%4#0",
        "8"
      ]
    },
    "303": {
      "op": "dig 1",
      "defined_out": [
        "8",
        "length%4#0",
        "length%4#0 (copy)"
      ],
      "stack_out": [
        "length%4#0",
        "8",
        "length%4#0 (copy)"
      ]
    },
    "305": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%4#0",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "306": {
      "op": "intc_1 // 8",
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%4#0",
        "8"
      ]
    },
    "307": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%4#0",
        "8",
        "length%4#0"
      ]
    },
    "309": {
      "op": "uncover 2",
      "stack_out": [
        "8",
        "length%4#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "311": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0"
      ],
      "stack_out": [
        "bounded_index%4#0"
      ]
    },
    "312": {
      "op": "bytec_0 // 0x7fffffffffffffff00",
      "stack_out": [
        "bounded_index%4#0",
        "0x7fffffffffffffff00"
      ]
    },
    "313": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bounded_index%4#0",
        "0x7fffffffffffffff00",
        "0"
      ]
    },
    "314": {
      "op": "uncover 2",
      "stack_out": [
        "0x7fffffffffffffff00",
        "0",
        "bounded_index%4#0"
      ]
    },
    "316": {
      "op": "substring3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "317": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "318": {
      "op": "pushint 9223372036854775807 // 9223372036854775807",
      "defined_out": [
        "9223372036854775807",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "9223372036854775807"
      ]
    },
    "328": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "329": {
      "op": "assert",
      "stack_out": []
    },
    "330": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "332": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "333": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "334": {
      "op": "bytec_3 // 0x02",
      "defined_out": [
        "0x02",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0x02"
      ]
    },
    "335": {
      "op": "bytec_1 // 0x01",
      "defined_out": [
        "0x01",
        "0x02",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0x02",
        "0x01"
      ]
    },
    "336": {
      "op": "uncover 2",
      "stack_out": [
        "0x02",
        "0x01",
        "tmp%14#0"
      ]
    },
    "338": {
      "op": "select",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "339": {
      "op": "bytec_3 // 0x02",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x02"
      ]
    },
    "340": {
      "op": "b==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "341": {
      "op": "assert",
      "stack_out": []
    },
    "342": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "344": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "345": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "346": {
      "op": "bytec 4 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "348": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
      ]
    },
    "414": {
      "op": "uncover 2",
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
        "tmp%17#0"
      ]
    },
    "416": {
      "op": "select",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "417": {
      "op": "bytec 4 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "419": {
      "op": "b==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "420": {
      "op": "assert",
      "stack_out": []
    },
    "421": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "423": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#1"
      ]
    },
    "424": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%val_as_bytes%1#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#1",
        "64"
      ]
    },
    "426": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#1",
        "aggregate%val_as_bytes%1#1"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#1",
        "aggregate%bzero%0#1"
      ]
    },
    "427": {
      "op": "b|",
      "defined_out": [
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "reinterpret_biguint%4#0"
      ]
    },
    "428": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "reinterpret_biguint%4#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "494": {
      "op": "b==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "495": {
      "op": "assert",
      "stack_out": []
    },
    "496": {
      "op": "pushint 1456853943940 // 1456853943940",
      "defined_out": [
        "1456853943940"
      ],
      "stack_out": [
        "1456853943940"
      ]
    },
    "503": {
      "op": "itob",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "504": {
      "op": "pushbytes 0x0000015333430684",
      "defined_out": [
        "0x0000015333430684",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0x0000015333430684"
      ]
    },
    "514": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "515": {
      "op": "assert",
      "stack_out": []
    },
    "516": {
      "op": "pushint 1450000000000 // 1450000000000",
      "defined_out": [
        "1450000000000"
      ],
      "stack_out": [
        "1450000000000"
      ]
    },
    "523": {
      "op": "itob",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "524": {
      "op": "pushbytes 0x000001519abc2400",
      "defined_out": [
        "0x000001519abc2400",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "0x000001519abc2400"
      ]
    },
    "534": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "535": {
      "op": "assert",
      "stack_out": []
    },
    "536": {
      "op": "bytec 5 // 0x000009184e72a000",
      "defined_out": [
        "0x000009184e72a000"
      ],
      "stack_out": [
        "0x000009184e72a000"
      ]
    },
    "538": {
      "op": "len",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "539": {
      "op": "intc_1 // 8",
      "stack_out": [
        "tmp%25#0",
        "8"
      ]
    },
    "540": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "541": {
      "op": "assert",
      "stack_out": []
    },
    "542": {
      "op": "pushint 10000000000000 // 10000000000000",
      "defined_out": [
        "10000000000000"
      ],
      "stack_out": [
        "10000000000000"
      ]
    },
    "550": {
      "op": "itob",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "551": {
      "op": "bytec 5 // 0x000009184e72a000",
      "stack_out": [
        "tmp%27#0",
        "0x000009184e72a000"
      ]
    },
    "553": {
      "op": "==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "554": {
      "op": "assert",
      "stack_out": []
    },
    "555": {
      "op": "pushint 10000000000 // 10000000000",
      "defined_out": [
        "10000000000"
      ],
      "stack_out": [
        "10000000000"
      ]
    },
    "561": {
      "op": "itob",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "562": {
      "op": "pushbytes 0x00000002540be400",
      "defined_out": [
        "0x00000002540be400",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x00000002540be400"
      ]
    },
    "572": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "573": {
      "op": "assert",
      "stack_out": []
    },
    "574": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "575": {
      "op": "itob",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "576": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "0x0000000000000000"
      ]
    },
    "577": {
      "op": "==",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "578": {
      "op": "assert",
      "stack_out": []
    },
    "579": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100"
      ],
      "stack_out": [
        "100"
      ]
    },
    "581": {
      "op": "itob",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "582": {
      "op": "pushbytes 0x0000000000000064",
      "defined_out": [
        "0x0000000000000064",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0x0000000000000064"
      ]
    },
    "592": {
      "op": "==",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "593": {
      "op": "assert",
      "stack_out": []
    },
    "594": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10"
      ],
      "stack_out": [
        "10"
      ]
    },
    "596": {
      "op": "itob",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "597": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "0x000000000000000a"
      ]
    },
    "607": {
      "op": "==",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "608": {
      "op": "assert",
      "stack_out": []
    },
    "609": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "610": {
      "op": "itob",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "611": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "0x0000000000000001"
      ]
    },
    "621": {
      "op": "==",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "622": {
      "op": "assert",
      "stack_out": []
    },
    "623": {
      "op": "pushint 18446744073709551615 // 18446744073709551615",
      "defined_out": [
        "18446744073709551615"
      ],
      "stack_out": [
        "18446744073709551615"
      ]
    },
    "634": {
      "op": "itob",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "635": {
      "op": "bytec 6 // 0xffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffff",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "0xffffffffffffffff"
      ]
    },
    "637": {
      "op": "==",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "638": {
      "op": "assert",
      "stack_out": []
    },
    "639": {
      "op": "bytec 7 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ],
      "stack_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "641": {
      "op": "dup",
      "stack_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "642": {
      "op": "b==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "643": {
      "op": "assert",
      "stack_out": []
    },
    "644": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "646": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%42#0",
        "0"
      ]
    },
    "647": {
      "op": "!=",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "648": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "tmp%43#0",
        "0x0000000000000000"
      ]
    },
    "649": {
      "op": "bytec 6 // 0xffffffffffffffff",
      "stack_out": [
        "tmp%43#0",
        "0x0000000000000000",
        "0xffffffffffffffff"
      ]
    },
    "651": {
      "op": "uncover 2",
      "stack_out": [
        "0x0000000000000000",
        "0xffffffffffffffff",
        "tmp%43#0"
      ]
    },
    "653": {
      "op": "select",
      "defined_out": [
        "select%2#0"
      ],
      "stack_out": [
        "select%2#0"
      ]
    },
    "654": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "select%2#0",
        "0x0000000000000000"
      ]
    },
    "655": {
      "op": "==",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "656": {
      "op": "assert",
      "stack_out": []
    },
    "657": {
      "op": "bytec_1 // 0x01",
      "stack_out": [
        "0x01"
      ]
    },
    "658": {
      "op": "dup",
      "stack_out": [
        "0x01",
        "0x01"
      ]
    },
    "659": {
      "op": "b+",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "660": {
      "op": "dup",
      "defined_out": [
        "tmp%45#0",
        "tmp%45#0 (copy)"
      ],
      "stack_out": [
        "tmp%45#0",
        "tmp%45#0 (copy)"
      ]
    },
    "661": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#1",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "aggregate%value_len%0#1"
      ]
    },
    "662": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%value_len%0#1",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "aggregate%value_len%0#1",
        "16"
      ]
    },
    "664": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#1",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "aggregate%len_ok%0#1"
      ]
    },
    "665": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "666": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%45#0",
        "16"
      ]
    },
    "668": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%1#1",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "aggregate%bzero%1#1"
      ]
    },
    "669": {
      "op": "b|",
      "defined_out": [
        "arc4_biguint_dynamic#0"
      ],
      "stack_out": [
        "arc4_biguint_dynamic#0"
      ]
    },
    "670": {
      "op": "bytec_1 // 0x01",
      "stack_out": [
        "arc4_biguint_dynamic#0",
        "0x01"
      ]
    },
    "671": {
      "op": "pushbytes 0x00000000000000000000000000000001",
      "defined_out": [
        "0x00000000000000000000000000000001",
        "0x01",
        "arc4_biguint_dynamic#0"
      ],
      "stack_out": [
        "arc4_biguint_dynamic#0",
        "0x01",
        "0x00000000000000000000000000000001"
      ]
    },
    "689": {
      "op": "b==",
      "defined_out": [
        "arc4_biguint_dynamic#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arc4_biguint_dynamic#0",
        "tmp%48#0"
      ]
    },
    "690": {
      "op": "assert",
      "stack_out": [
        "arc4_biguint_dynamic#0"
      ]
    },
    "691": {
      "op": "len",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "692": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "tmp%49#0",
        "16"
      ]
    },
    "694": {
      "op": "==",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "695": {
      "op": "assert",
      "stack_out": []
    },
    "696": {
      "op": "bytec 7 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "698": {
      "op": "len",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "699": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "tmp%51#0",
        "64"
      ]
    },
    "701": {
      "op": "==",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "702": {
      "op": "assert",
      "stack_out": []
    },
    "703": {
      "op": "intc_3 // ClearState",
      "defined_out": [
        "ClearState"
      ],
      "stack_out": [
        "ClearState"
      ]
    },
    "704": {
      "op": "itob",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "705": {
      "op": "pushbytes 0x",
      "defined_out": [
        "0x",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "0x"
      ]
    },
    "707": {
      "op": "swap",
      "stack_out": [
        "0x",
        "tmp%53#0"
      ]
    },
    "708": {
      "op": "concat",
      "defined_out": [
        "tup#0"
      ],
      "stack_out": [
        "tup#0"
      ]
    },
    "709": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tup#0",
        "0"
      ]
    },
    "710": {
      "op": "intc_1 // 8",
      "stack_out": [
        "tup#0",
        "0",
        "8"
      ]
    },
    "711": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "712": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "713": {
      "op": "intc_3 // ClearState",
      "stack_out": [
        "tmp%55#0",
        "ClearState"
      ]
    },
    "714": {
      "op": "==",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "715": {
      "op": "assert",
      "stack_out": []
    },
    "716": {
      "op": "pushbytes 0x00000001",
      "defined_out": [
        "0x00000001"
      ],
      "stack_out": [
        "0x00000001"
      ]
    },
    "722": {
      "op": "bytec_1 // 0x01",
      "stack_out": [
        "0x00000001",
        "0x01"
      ]
    },
    "723": {
      "op": "b==",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "724": {
      "op": "assert",
      "stack_out": []
    },
    "725": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "726": {
      "op": "return",
      "stack_out": []
    }
  }
}