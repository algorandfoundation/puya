{
  "version": 3,
  "sources": [
    "../string.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAO6D;AAA9B;AAAA;AAAA;;;AAA8B;AAA9B;AAEvB;AAA4B;;;AAA5B;AAGI;AAA8B;AAA9B;AADJ;AAKI;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAkC;AAAlC;AADJ;AAIoC;AAA7B;AAAP;AAEQ;;;;;;;;;AAI+B;;;AAH/B;;;;;AAG+B;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAF/B;;;;;;;;;;AAE+B;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAhC;;;;;;;;;;;;;;;;AAAA;AAAP;AAEQ;AACR;;;AADQ;AACR;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACgB;;;;;;;;AAAT;AAAP;AAEQ;;;;;AAAA;;;AAAmB;;;;;AAAnB;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAsC;;;;;;AAAtC;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACR;;;AAAS;;;;;AAAT;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;;AAAS;;;;;AAAT;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;;AAAS;;;;;AAAT;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACO;;;;;;;;;;;AAAA;AAAP;AAEO;;;;AAAA;;;AAAwB;;AAAxB;AAAP;AACO;;;;;;;;;AAAA;;;AAAwB;;;;;;;AAAxB;AAAP;AAE4B;;AAAA;;AAAA;AAAT;;;AAAZ;;;;;;;AAAqD;AAAzC;AAAnB;AACO;;AAAP;AADO;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.string.Arc4StringTypesContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock 0x48656c6c6f20576f726c6421 0x00026869 0x0003626565"
    },
    "27": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "defined_out": [
        "0x48656c6c6f20576f726c6421"
      ],
      "stack_out": [
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "28": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "29": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "30": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0"
      ],
      "stack_out": [
        "length_uint16%0#0"
      ]
    },
    "33": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "length_uint16%0#0",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "34": {
      "op": "concat",
      "defined_out": [
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_string#0"
      ]
    },
    "35": {
      "op": "dup",
      "defined_out": [
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ],
      "stack_out": [
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ]
    },
    "36": {
      "op": "extract 2 0",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_string#0",
        "some_bytes_as_bytes_again#0"
      ]
    },
    "39": {
      "op": "swap",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ]
    },
    "40": {
      "op": "dup",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ]
    },
    "41": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "42": {
      "op": "!=",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "tmp%0#0"
      ]
    },
    "43": {
      "error": "Original bytes should not match encoded bytes",
      "op": "assert // Original bytes should not match encoded bytes",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ]
    },
    "44": {
      "op": "dup",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ]
    },
    "45": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0"
      ]
    },
    "46": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "length%1#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "2"
      ]
    },
    "48": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%1#0",
        "length%1#0 (copy)",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "2",
        "length%1#0 (copy)"
      ]
    },
    "50": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%1#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "51": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "is_out_of_bounds%0#0",
        "2"
      ]
    },
    "53": {
      "op": "dig 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "is_out_of_bounds%0#0",
        "2",
        "length%1#0 (copy)"
      ]
    },
    "55": {
      "op": "uncover 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "2",
        "length%1#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "57": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "length%1#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%1#0",
        "bounded_index%0#0"
      ]
    },
    "58": {
      "op": "uncover 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "length%1#0",
        "bounded_index%0#0",
        "some_bytes_as_string#0"
      ]
    },
    "60": {
      "op": "swap",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "length%1#0",
        "some_bytes_as_string#0",
        "bounded_index%0#0"
      ]
    },
    "61": {
      "op": "uncover 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "bounded_index%0#0",
        "length%1#0"
      ]
    },
    "63": {
      "op": "substring3",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%1#0"
      ]
    },
    "64": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%1#0",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "65": {
      "op": "==",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%2#0"
      ]
    },
    "66": {
      "error": "Original bytes should match encoded if we strip the length header",
      "op": "assert // Original bytes should match encoded if we strip the length header",
      "stack_out": [
        "some_bytes_as_bytes_again#0"
      ]
    },
    "67": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "68": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "69": {
      "op": "assert",
      "stack_out": []
    },
    "70": {
      "op": "pushbytes 0x000548656c6c6f",
      "defined_out": [
        "0x000548656c6c6f"
      ],
      "stack_out": [
        "0x000548656c6c6f"
      ]
    },
    "79": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "82": {
      "op": "pushbytes 0x000120",
      "defined_out": [
        "0x000120",
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "0x000120"
      ]
    },
    "87": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "90": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0"
      ]
    },
    "91": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ],
      "stack_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "92": {
      "op": "len",
      "defined_out": [
        "concatenated%0#0",
        "len_%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "93": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "as_bytes%1#0"
      ]
    },
    "94": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "97": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "98": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "concat_result%0#0"
      ]
    },
    "99": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0"
      ]
    },
    "102": {
      "op": "pushbytes 0x0006576f726c6421",
      "defined_out": [
        "0x0006576f726c6421",
        "expr_value_trimmed%2#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "0x0006576f726c6421"
      ]
    },
    "112": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%2#0",
        "expr_value_trimmed%3#0"
      ],
      "stack_out": [
        "expr_value_trimmed%2#0",
        "expr_value_trimmed%3#0"
      ]
    },
    "115": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0"
      ]
    },
    "116": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "117": {
      "op": "len",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "118": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "as_bytes%2#0"
      ]
    },
    "119": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "122": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "123": {
      "op": "concat",
      "defined_out": [
        "concat_result%1#0"
      ],
      "stack_out": [
        "concat_result%1#0"
      ]
    },
    "124": {
      "op": "pushbytes 0x000c48656c6c6f20576f726c6421",
      "defined_out": [
        "0x000c48656c6c6f20576f726c6421",
        "concat_result%1#0"
      ],
      "stack_out": [
        "concat_result%1#0",
        "0x000c48656c6c6f20576f726c6421"
      ]
    },
    "140": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "141": {
      "op": "assert",
      "stack_out": []
    },
    "142": {
      "op": "bytec_1 // 0x00026869",
      "defined_out": [
        "0x00026869"
      ],
      "stack_out": [
        "0x00026869"
      ]
    },
    "143": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%4#0"
      ],
      "stack_out": [
        "expr_value_trimmed%4#0"
      ]
    },
    "146": {
      "op": "bytec_1 // 0x00026869",
      "stack_out": [
        "expr_value_trimmed%4#0",
        "0x00026869"
      ]
    },
    "147": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%4#0",
        "expr_value_trimmed%5#0"
      ],
      "stack_out": [
        "expr_value_trimmed%4#0",
        "expr_value_trimmed%5#0"
      ]
    },
    "150": {
      "op": "concat",
      "defined_out": [
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0"
      ]
    },
    "151": {
      "op": "dup",
      "defined_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ],
      "stack_out": [
        "concatenated%2#0",
        "concatenated%2#0 (copy)"
      ]
    },
    "152": {
      "op": "len",
      "defined_out": [
        "concatenated%2#0",
        "len_%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_%2#0"
      ]
    },
    "153": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "concatenated%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "as_bytes%3#0"
      ]
    },
    "154": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ],
      "stack_out": [
        "concatenated%2#0",
        "len_16_bit%2#0"
      ]
    },
    "157": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%2#0",
        "concatenated%2#0"
      ]
    },
    "158": {
      "op": "concat",
      "defined_out": [
        "thing#1"
      ],
      "stack_out": [
        "thing#1"
      ]
    },
    "159": {
      "op": "pushbytes 0x000468696869",
      "defined_out": [
        "0x000468696869",
        "thing#1"
      ],
      "stack_out": [
        "thing#1",
        "0x000468696869"
      ]
    },
    "167": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "168": {
      "op": "assert",
      "stack_out": []
    },
    "169": {
      "op": "pushbytes 0x000161",
      "defined_out": [
        "0x000161"
      ],
      "stack_out": [
        "0x000161"
      ]
    },
    "174": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%6#0"
      ],
      "stack_out": [
        "expr_value_trimmed%6#0"
      ]
    },
    "177": {
      "op": "pushbytes 0x000162",
      "defined_out": [
        "0x000162",
        "expr_value_trimmed%6#0"
      ],
      "stack_out": [
        "expr_value_trimmed%6#0",
        "0x000162"
      ]
    },
    "182": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%6#0",
        "expr_value_trimmed%7#0"
      ],
      "stack_out": [
        "expr_value_trimmed%6#0",
        "expr_value_trimmed%7#0"
      ]
    },
    "185": {
      "op": "concat",
      "defined_out": [
        "concatenated%3#0"
      ],
      "stack_out": [
        "concatenated%3#0"
      ]
    },
    "186": {
      "op": "dup",
      "defined_out": [
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ],
      "stack_out": [
        "concatenated%3#0",
        "concatenated%3#0 (copy)"
      ]
    },
    "187": {
      "op": "len",
      "defined_out": [
        "concatenated%3#0",
        "len_%3#0"
      ],
      "stack_out": [
        "concatenated%3#0",
        "len_%3#0"
      ]
    },
    "188": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "concatenated%3#0"
      ],
      "stack_out": [
        "concatenated%3#0",
        "as_bytes%4#0"
      ]
    },
    "189": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%3#0",
        "len_16_bit%3#0"
      ],
      "stack_out": [
        "concatenated%3#0",
        "len_16_bit%3#0"
      ]
    },
    "192": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%3#0",
        "concatenated%3#0"
      ]
    },
    "193": {
      "op": "concat",
      "defined_out": [
        "concat_result%3#0"
      ],
      "stack_out": [
        "concat_result%3#0"
      ]
    },
    "194": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%8#0"
      ],
      "stack_out": [
        "expr_value_trimmed%8#0"
      ]
    },
    "197": {
      "op": "pushbytes 0x00026364",
      "defined_out": [
        "0x00026364",
        "expr_value_trimmed%8#0"
      ],
      "stack_out": [
        "expr_value_trimmed%8#0",
        "0x00026364"
      ]
    },
    "203": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%8#0",
        "expr_value_trimmed%9#0"
      ],
      "stack_out": [
        "expr_value_trimmed%8#0",
        "expr_value_trimmed%9#0"
      ]
    },
    "206": {
      "op": "concat",
      "defined_out": [
        "concatenated%4#0"
      ],
      "stack_out": [
        "concatenated%4#0"
      ]
    },
    "207": {
      "op": "dup",
      "defined_out": [
        "concatenated%4#0",
        "concatenated%4#0 (copy)"
      ],
      "stack_out": [
        "concatenated%4#0",
        "concatenated%4#0 (copy)"
      ]
    },
    "208": {
      "op": "len",
      "defined_out": [
        "concatenated%4#0",
        "len_%4#0"
      ],
      "stack_out": [
        "concatenated%4#0",
        "len_%4#0"
      ]
    },
    "209": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "concatenated%4#0"
      ],
      "stack_out": [
        "concatenated%4#0",
        "as_bytes%5#0"
      ]
    },
    "210": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%4#0",
        "len_16_bit%4#0"
      ],
      "stack_out": [
        "concatenated%4#0",
        "len_16_bit%4#0"
      ]
    },
    "213": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%4#0",
        "concatenated%4#0"
      ]
    },
    "214": {
      "op": "concat",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "215": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%10#0"
      ],
      "stack_out": [
        "expr_value_trimmed%10#0"
      ]
    },
    "218": {
      "op": "pushbytes 0x000165",
      "defined_out": [
        "0x000165",
        "expr_value_trimmed%10#0"
      ],
      "stack_out": [
        "expr_value_trimmed%10#0",
        "0x000165"
      ]
    },
    "223": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%10#0",
        "expr_value_trimmed%11#0"
      ],
      "stack_out": [
        "expr_value_trimmed%10#0",
        "expr_value_trimmed%11#0"
      ]
    },
    "226": {
      "op": "concat",
      "defined_out": [
        "concatenated%5#0"
      ],
      "stack_out": [
        "concatenated%5#0"
      ]
    },
    "227": {
      "op": "dup",
      "defined_out": [
        "concatenated%5#0",
        "concatenated%5#0 (copy)"
      ],
      "stack_out": [
        "concatenated%5#0",
        "concatenated%5#0 (copy)"
      ]
    },
    "228": {
      "op": "len",
      "defined_out": [
        "concatenated%5#0",
        "len_%5#0"
      ],
      "stack_out": [
        "concatenated%5#0",
        "len_%5#0"
      ]
    },
    "229": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "concatenated%5#0"
      ],
      "stack_out": [
        "concatenated%5#0",
        "as_bytes%6#0"
      ]
    },
    "230": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%5#0",
        "len_16_bit%5#0"
      ],
      "stack_out": [
        "concatenated%5#0",
        "len_16_bit%5#0"
      ]
    },
    "233": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%5#0",
        "concatenated%5#0"
      ]
    },
    "234": {
      "op": "concat",
      "stack_out": [
        "value#0"
      ]
    },
    "235": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%12#0"
      ],
      "stack_out": [
        "expr_value_trimmed%12#0"
      ]
    },
    "238": {
      "op": "pushbytes 0x000166",
      "defined_out": [
        "0x000166",
        "expr_value_trimmed%12#0"
      ],
      "stack_out": [
        "expr_value_trimmed%12#0",
        "0x000166"
      ]
    },
    "243": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%12#0",
        "expr_value_trimmed%13#0"
      ],
      "stack_out": [
        "expr_value_trimmed%12#0",
        "expr_value_trimmed%13#0"
      ]
    },
    "246": {
      "op": "concat",
      "defined_out": [
        "concatenated%6#0"
      ],
      "stack_out": [
        "concatenated%6#0"
      ]
    },
    "247": {
      "op": "dup",
      "defined_out": [
        "concatenated%6#0",
        "concatenated%6#0 (copy)"
      ],
      "stack_out": [
        "concatenated%6#0",
        "concatenated%6#0 (copy)"
      ]
    },
    "248": {
      "op": "len",
      "defined_out": [
        "concatenated%6#0",
        "len_%6#0"
      ],
      "stack_out": [
        "concatenated%6#0",
        "len_%6#0"
      ]
    },
    "249": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "concatenated%6#0"
      ],
      "stack_out": [
        "concatenated%6#0",
        "as_bytes%7#0"
      ]
    },
    "250": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%6#0",
        "len_16_bit%6#0"
      ],
      "stack_out": [
        "concatenated%6#0",
        "len_16_bit%6#0"
      ]
    },
    "253": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%6#0",
        "concatenated%6#0"
      ]
    },
    "254": {
      "op": "concat",
      "stack_out": [
        "value#0"
      ]
    },
    "255": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%14#0"
      ],
      "stack_out": [
        "expr_value_trimmed%14#0"
      ]
    },
    "258": {
      "op": "pushbytes 0x000167",
      "defined_out": [
        "0x000167",
        "expr_value_trimmed%14#0"
      ],
      "stack_out": [
        "expr_value_trimmed%14#0",
        "0x000167"
      ]
    },
    "263": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%14#0",
        "expr_value_trimmed%15#0"
      ],
      "stack_out": [
        "expr_value_trimmed%14#0",
        "expr_value_trimmed%15#0"
      ]
    },
    "266": {
      "op": "concat",
      "defined_out": [
        "concatenated%7#0"
      ],
      "stack_out": [
        "concatenated%7#0"
      ]
    },
    "267": {
      "op": "dup",
      "defined_out": [
        "concatenated%7#0",
        "concatenated%7#0 (copy)"
      ],
      "stack_out": [
        "concatenated%7#0",
        "concatenated%7#0 (copy)"
      ]
    },
    "268": {
      "op": "len",
      "defined_out": [
        "concatenated%7#0",
        "len_%7#0"
      ],
      "stack_out": [
        "concatenated%7#0",
        "len_%7#0"
      ]
    },
    "269": {
      "op": "itob",
      "defined_out": [
        "as_bytes%8#0",
        "concatenated%7#0"
      ],
      "stack_out": [
        "concatenated%7#0",
        "as_bytes%8#0"
      ]
    },
    "270": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%7#0",
        "len_16_bit%7#0"
      ],
      "stack_out": [
        "concatenated%7#0",
        "len_16_bit%7#0"
      ]
    },
    "273": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%7#0",
        "concatenated%7#0"
      ]
    },
    "274": {
      "op": "concat",
      "stack_out": [
        "value#0"
      ]
    },
    "275": {
      "op": "pushbytes 0x000761626364656667",
      "defined_out": [
        "0x000761626364656667",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "0x000761626364656667"
      ]
    },
    "286": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "287": {
      "op": "assert",
      "stack_out": []
    },
    "288": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "0x0000"
      ]
    },
    "292": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "295": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "\"\""
      ]
    },
    "297": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "298": {
      "op": "assert",
      "stack_out": []
    },
    "299": {
      "op": "pushbytes 0x000568656c6c6f",
      "defined_out": [
        "0x000568656c6c6f"
      ],
      "stack_out": [
        "0x000568656c6c6f"
      ]
    },
    "308": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "311": {
      "op": "pushbytes \"hello\"",
      "defined_out": [
        "\"hello\"",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "\"hello\""
      ]
    },
    "318": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "319": {
      "op": "assert",
      "stack_out": []
    },
    "320": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "322": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "324": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "325": {
      "op": "bz main_ternary_false@2",
      "stack_out": []
    },
    "328": {
      "block": "main_ternary_true@1",
      "stack_in": [],
      "op": "pushbytes 0x0003617965",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "335": {
      "block": "main_ternary_merge@3",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "op": "bytec_2 // 0x0003626565",
      "defined_out": [
        "0x0003626565",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "0x0003626565"
      ]
    },
    "336": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "337": {
      "op": "assert",
      "stack_out": []
    },
    "338": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "340": {
      "op": "return",
      "stack_out": []
    },
    "341": {
      "block": "main_ternary_false@2",
      "stack_in": [],
      "op": "bytec_2 // 0x0003626565",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "342": {
      "op": "b main_ternary_merge@3"
    }
  }
}