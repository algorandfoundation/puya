{
  "version": 3,
  "sources": [
    "../string.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO6D;AAA9B;AAAA;AAAA;;;AAA8B;AAA9B;AAEK;AAAA;;;AAA5B;AAGI;AAA8B;AAA9B;AADJ;AAKI;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAkC;AAAlC;AADJ;AAIoC;AAA7B;AAAP;AAEQ;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACA;;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAR;AAEO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAgC;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAhC;AAAP;AAEQ;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACR;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AACgB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAT;AAAP;AAEQ;;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAmB;;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAnB;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAsC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAtC;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AACC;;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAT;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AACS;;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAT;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AACS;;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAT;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AACO;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAP;AAEO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAwB;AAAxB;AAAP;AACO;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAwB;AAAxB;AAAP;AAE4B;;AAAA;AAAA;AAAT;;;AAAZ;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAqD;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAzC;AAAnB;AACO;AAAP;AADO;AAAA;AAAA;AAAA;;;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.arc4_types.string.Arc4StringTypesContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2"
    },
    "6": {
      "op": "bytecblock 0x48656c6c6f20576f726c6421 \"bee\" \"\" \"hello\" \"Hello\" \"World!\" \"hi\" \"hihi\" \"cd\" \"abcdefg\" \"aye\""
    },
    "68": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "defined_out": [
        "0x48656c6c6f20576f726c6421"
      ],
      "stack_out": [
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "69": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "70": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "71": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "74": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "75": {
      "op": "concat",
      "defined_out": [
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_string#0"
      ]
    },
    "76": {
      "op": "dup",
      "defined_out": [
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ],
      "stack_out": [
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ]
    },
    "77": {
      "op": "extract 2 0",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_string#0",
        "some_bytes_as_bytes_again#0"
      ]
    },
    "80": {
      "op": "swap",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ]
    },
    "81": {
      "op": "dup",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ]
    },
    "82": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "83": {
      "op": "!=",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "tmp%2#0"
      ]
    },
    "84": {
      "error": "Original bytes should not match encoded bytes",
      "op": "assert // Original bytes should not match encoded bytes",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ]
    },
    "85": {
      "op": "dup",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "some_bytes_as_string#0 (copy)"
      ]
    },
    "86": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0"
      ]
    },
    "87": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length%0#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "2"
      ]
    },
    "88": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%0#0",
        "length%0#0 (copy)",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "2",
        "length%0#0 (copy)"
      ]
    },
    "90": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "91": {
      "op": "intc_2 // 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "is_out_of_bounds%0#0",
        "2"
      ]
    },
    "92": {
      "op": "dig 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "is_out_of_bounds%0#0",
        "2",
        "length%0#0 (copy)"
      ]
    },
    "94": {
      "op": "uncover 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "2",
        "length%0#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "96": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "length%0#0",
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "length%0#0",
        "bounded_index%0#0"
      ]
    },
    "97": {
      "op": "uncover 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "length%0#0",
        "bounded_index%0#0",
        "some_bytes_as_string#0"
      ]
    },
    "99": {
      "op": "swap",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "length%0#0",
        "some_bytes_as_string#0",
        "bounded_index%0#0"
      ]
    },
    "100": {
      "op": "uncover 2",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "some_bytes_as_string#0",
        "bounded_index%0#0",
        "length%0#0"
      ]
    },
    "102": {
      "op": "substring3",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%3#0"
      ]
    },
    "103": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%3#0",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "104": {
      "op": "==",
      "defined_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "tmp%4#0"
      ]
    },
    "105": {
      "error": "Original bytes should match encoded if we strip the length header",
      "op": "assert // Original bytes should match encoded if we strip the length header",
      "stack_out": [
        "some_bytes_as_bytes_again#0"
      ]
    },
    "106": {
      "op": "bytec_0 // 0x48656c6c6f20576f726c6421",
      "stack_out": [
        "some_bytes_as_bytes_again#0",
        "0x48656c6c6f20576f726c6421"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "108": {
      "op": "assert",
      "stack_out": []
    },
    "109": {
      "op": "bytec 4 // \"Hello\"",
      "defined_out": [
        "\"Hello\""
      ],
      "stack_out": [
        "\"Hello\""
      ]
    },
    "111": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1"
      ],
      "stack_out": [
        "aggregate%length%1#1"
      ]
    },
    "112": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#1"
      ]
    },
    "113": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#1"
      ]
    },
    "116": {
      "op": "bytec 4 // \"Hello\"",
      "stack_out": [
        "aggregate%length_uint16%1#1",
        "\"Hello\""
      ]
    },
    "118": {
      "op": "concat",
      "defined_out": [
        "hello#0"
      ],
      "stack_out": [
        "hello#0"
      ]
    },
    "119": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "hello#0"
      ],
      "stack_out": [
        "hello#0",
        "\" \""
      ]
    },
    "122": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "hello#0"
      ],
      "stack_out": [
        "hello#0",
        "aggregate%length%2#1"
      ]
    },
    "123": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "hello#0"
      ],
      "stack_out": [
        "hello#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "124": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "hello#0"
      ],
      "stack_out": [
        "hello#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "127": {
      "op": "pushbytes \" \"",
      "stack_out": [
        "hello#0",
        "aggregate%length_uint16%2#1",
        "\" \""
      ]
    },
    "130": {
      "op": "concat",
      "defined_out": [
        "hello#0",
        "space#0"
      ],
      "stack_out": [
        "hello#0",
        "space#0"
      ]
    },
    "131": {
      "op": "bytec 5 // \"World!\"",
      "defined_out": [
        "\"World!\"",
        "hello#0",
        "space#0"
      ],
      "stack_out": [
        "hello#0",
        "space#0",
        "\"World!\""
      ]
    },
    "133": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "hello#0",
        "space#0"
      ],
      "stack_out": [
        "hello#0",
        "space#0",
        "aggregate%length%3#1"
      ]
    },
    "134": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "hello#0",
        "space#0"
      ],
      "stack_out": [
        "hello#0",
        "space#0",
        "aggregate%as_bytes%3#1"
      ]
    },
    "135": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "hello#0",
        "space#0"
      ],
      "stack_out": [
        "hello#0",
        "space#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "138": {
      "op": "bytec 5 // \"World!\"",
      "stack_out": [
        "hello#0",
        "space#0",
        "aggregate%length_uint16%3#1",
        "\"World!\""
      ]
    },
    "140": {
      "op": "concat",
      "defined_out": [
        "hello#0",
        "space#0",
        "world#0"
      ],
      "stack_out": [
        "hello#0",
        "space#0",
        "world#0"
      ]
    },
    "141": {
      "op": "swap",
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0"
      ]
    },
    "142": {
      "op": "bytec_0 // \"Hello World!\"",
      "defined_out": [
        "\"Hello World!\"",
        "hello#0",
        "space#0",
        "world#0"
      ],
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0",
        "\"Hello World!\""
      ]
    },
    "143": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#1",
        "hello#0",
        "space#0",
        "world#0"
      ],
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0",
        "aggregate%length%4#1"
      ]
    },
    "144": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1",
        "hello#0",
        "space#0",
        "world#0"
      ],
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0",
        "aggregate%as_bytes%4#1"
      ]
    },
    "145": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#1",
        "hello#0",
        "space#0",
        "world#0"
      ],
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0",
        "aggregate%length_uint16%4#1"
      ]
    },
    "148": {
      "op": "bytec_0 // \"Hello World!\"",
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0",
        "aggregate%length_uint16%4#1",
        "\"Hello World!\""
      ]
    },
    "149": {
      "op": "concat",
      "defined_out": [
        "hello#0",
        "space#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "hello#0",
        "world#0",
        "space#0",
        "tmp%9#0"
      ]
    },
    "150": {
      "op": "cover 3",
      "stack_out": [
        "tmp%9#0",
        "hello#0",
        "world#0",
        "space#0"
      ]
    },
    "152": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0",
        "hello#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "hello#0",
        "world#0",
        "extract_to_end%0#0"
      ]
    },
    "155": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "extract_to_end%0#0",
        "hello#0"
      ]
    },
    "157": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "hello#0",
        "extract_to_end%0#0"
      ]
    },
    "158": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0"
      ]
    },
    "159": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "160": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%1#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "extract_to_end%1#0"
      ]
    },
    "163": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "len%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "len%0#0"
      ]
    },
    "164": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "len%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "len%0#0",
        "1"
      ]
    },
    "165": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "166": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "167": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "170": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "171": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "172": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "174": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+utf8[])%0#0",
        "tmp%9#0",
        "world#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "world#0",
        "as_Encoded(len+utf8[])%0#0"
      ]
    },
    "175": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "as_Encoded(len+utf8[])%0#0",
        "world#0"
      ]
    },
    "176": {
      "op": "extract 2 0",
      "defined_out": [
        "as_Encoded(len+utf8[])%0#0",
        "extract_to_end%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "as_Encoded(len+utf8[])%0#0",
        "extract_to_end%2#0"
      ]
    },
    "179": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0"
      ]
    },
    "180": {
      "op": "dup",
      "defined_out": [
        "concat%1#0",
        "concat%1#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "181": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%1#0",
        "extract_to_end%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "extract_to_end%3#0"
      ]
    },
    "184": {
      "op": "len",
      "defined_out": [
        "concat%1#0",
        "len%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "len%1#0"
      ]
    },
    "185": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "len%1#0",
        "1"
      ]
    },
    "186": {
      "op": "/",
      "defined_out": [
        "concat%1#0",
        "div_floor%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "div_floor%1#0"
      ]
    },
    "187": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "188": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "192": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%9#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "193": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "195": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+utf8[])%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "as_Encoded(len+utf8[])%1#0"
      ]
    },
    "196": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "197": {
      "op": "assert",
      "stack_out": []
    },
    "198": {
      "op": "bytec 6 // \"hi\"",
      "defined_out": [
        "\"hi\""
      ],
      "stack_out": [
        "\"hi\""
      ]
    },
    "200": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#1"
      ],
      "stack_out": [
        "aggregate%length%5#1"
      ]
    },
    "201": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%5#1"
      ]
    },
    "202": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%5#1"
      ]
    },
    "205": {
      "op": "bytec 6 // \"hi\"",
      "stack_out": [
        "aggregate%length_uint16%5#1",
        "\"hi\""
      ]
    },
    "207": {
      "op": "concat",
      "defined_out": [
        "thing#0"
      ],
      "stack_out": [
        "thing#0"
      ]
    },
    "208": {
      "op": "dup",
      "defined_out": [
        "thing#0",
        "thing#0 (copy)"
      ],
      "stack_out": [
        "thing#0",
        "thing#0 (copy)"
      ]
    },
    "209": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%4#0",
        "thing#0"
      ],
      "stack_out": [
        "thing#0",
        "extract_to_end%4#0"
      ]
    },
    "212": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0"
      ]
    },
    "213": {
      "op": "dup",
      "defined_out": [
        "concat%2#0",
        "concat%2#0 (copy)"
      ],
      "stack_out": [
        "concat%2#0",
        "concat%2#0 (copy)"
      ]
    },
    "214": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%2#0",
        "extract_to_end%5#0"
      ],
      "stack_out": [
        "concat%2#0",
        "extract_to_end%5#0"
      ]
    },
    "217": {
      "op": "len",
      "defined_out": [
        "concat%2#0",
        "len%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "len%2#0"
      ]
    },
    "218": {
      "op": "intc_0 // 1",
      "stack_out": [
        "concat%2#0",
        "len%2#0",
        "1"
      ]
    },
    "219": {
      "op": "/",
      "defined_out": [
        "concat%2#0",
        "div_floor%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "div_floor%2#0"
      ]
    },
    "220": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "221": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "224": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0"
      ]
    },
    "225": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_u16_bytes%2#0",
        "concat%2#0",
        "0"
      ]
    },
    "226": {
      "op": "uncover 2",
      "stack_out": [
        "concat%2#0",
        "0",
        "as_u16_bytes%2#0"
      ]
    },
    "228": {
      "op": "replace3",
      "stack_out": [
        "thing#0"
      ]
    },
    "229": {
      "op": "bytec 7 // \"hihi\"",
      "defined_out": [
        "\"hihi\"",
        "thing#0"
      ],
      "stack_out": [
        "thing#0",
        "\"hihi\""
      ]
    },
    "231": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#1",
        "thing#0"
      ],
      "stack_out": [
        "thing#0",
        "aggregate%length%6#1"
      ]
    },
    "232": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#1",
        "thing#0"
      ],
      "stack_out": [
        "thing#0",
        "aggregate%as_bytes%6#1"
      ]
    },
    "233": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#1",
        "thing#0"
      ],
      "stack_out": [
        "thing#0",
        "aggregate%length_uint16%6#1"
      ]
    },
    "236": {
      "op": "bytec 7 // \"hihi\"",
      "stack_out": [
        "thing#0",
        "aggregate%length_uint16%6#1",
        "\"hihi\""
      ]
    },
    "238": {
      "op": "concat",
      "defined_out": [
        "thing#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "thing#0",
        "tmp%12#0"
      ]
    },
    "239": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "240": {
      "op": "assert",
      "stack_out": []
    },
    "241": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "244": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#1"
      ],
      "stack_out": [
        "aggregate%length%7#1"
      ]
    },
    "245": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%7#1"
      ]
    },
    "246": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%7#1"
      ]
    },
    "249": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "aggregate%length_uint16%7#1",
        "\"a\""
      ]
    },
    "252": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "253": {
      "op": "pushbytes \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "\"b\""
      ]
    },
    "256": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%length%8#1"
      ]
    },
    "257": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%as_bytes%8#1"
      ]
    },
    "258": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "aggregate%length_uint16%8#1"
      ]
    },
    "261": {
      "op": "pushbytes \"b\"",
      "stack_out": [
        "tmp%14#0",
        "aggregate%length_uint16%8#1",
        "\"b\""
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "265": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%6#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "extract_to_end%6#0"
      ]
    },
    "268": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%3#0"
      ],
      "stack_out": [
        "concat%3#0"
      ]
    },
    "269": {
      "op": "dup",
      "defined_out": [
        "concat%3#0",
        "concat%3#0 (copy)"
      ],
      "stack_out": [
        "concat%3#0",
        "concat%3#0 (copy)"
      ]
    },
    "270": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%3#0",
        "extract_to_end%7#0"
      ],
      "stack_out": [
        "concat%3#0",
        "extract_to_end%7#0"
      ]
    },
    "273": {
      "op": "len",
      "defined_out": [
        "concat%3#0",
        "len%3#0"
      ],
      "stack_out": [
        "concat%3#0",
        "len%3#0"
      ]
    },
    "274": {
      "op": "intc_0 // 1",
      "stack_out": [
        "concat%3#0",
        "len%3#0",
        "1"
      ]
    },
    "275": {
      "op": "/",
      "defined_out": [
        "concat%3#0",
        "div_floor%3#0"
      ],
      "stack_out": [
        "concat%3#0",
        "div_floor%3#0"
      ]
    },
    "276": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "277": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%3#0",
        "concat%3#0"
      ],
      "stack_out": [
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "280": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%3#0",
        "concat%3#0"
      ]
    },
    "281": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_u16_bytes%3#0",
        "concat%3#0",
        "0"
      ]
    },
    "282": {
      "op": "uncover 2",
      "stack_out": [
        "concat%3#0",
        "0",
        "as_u16_bytes%3#0"
      ]
    },
    "284": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+utf8[])%3#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0"
      ]
    },
    "285": {
      "op": "bytec 8 // \"cd\"",
      "defined_out": [
        "\"cd\"",
        "as_Encoded(len+utf8[])%3#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "\"cd\""
      ]
    },
    "287": {
      "op": "len",
      "defined_out": [
        "aggregate%length%9#1",
        "as_Encoded(len+utf8[])%3#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "aggregate%length%9#1"
      ]
    },
    "288": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#1",
        "as_Encoded(len+utf8[])%3#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "aggregate%as_bytes%9#1"
      ]
    },
    "289": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%9#1",
        "as_Encoded(len+utf8[])%3#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "aggregate%length_uint16%9#1"
      ]
    },
    "292": {
      "op": "bytec 8 // \"cd\"",
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "aggregate%length_uint16%9#1",
        "\"cd\""
      ]
    },
    "294": {
      "op": "concat",
      "defined_out": [
        "as_Encoded(len+utf8[])%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "tmp%16#0"
      ]
    },
    "295": {
      "op": "extract 2 0",
      "defined_out": [
        "as_Encoded(len+utf8[])%3#0",
        "extract_to_end%8#0"
      ],
      "stack_out": [
        "as_Encoded(len+utf8[])%3#0",
        "extract_to_end%8#0"
      ]
    },
    "298": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%4#0"
      ],
      "stack_out": [
        "concat%4#0"
      ]
    },
    "299": {
      "op": "dup",
      "defined_out": [
        "concat%4#0",
        "concat%4#0 (copy)"
      ],
      "stack_out": [
        "concat%4#0",
        "concat%4#0 (copy)"
      ]
    },
    "300": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%4#0",
        "extract_to_end%9#0"
      ],
      "stack_out": [
        "concat%4#0",
        "extract_to_end%9#0"
      ]
    },
    "303": {
      "op": "len",
      "defined_out": [
        "concat%4#0",
        "len%4#0"
      ],
      "stack_out": [
        "concat%4#0",
        "len%4#0"
      ]
    },
    "304": {
      "op": "intc_0 // 1",
      "stack_out": [
        "concat%4#0",
        "len%4#0",
        "1"
      ]
    },
    "305": {
      "op": "/",
      "defined_out": [
        "concat%4#0",
        "div_floor%4#0"
      ],
      "stack_out": [
        "concat%4#0",
        "div_floor%4#0"
      ]
    },
    "306": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "concat%4#0"
      ],
      "stack_out": [
        "concat%4#0",
        "as_bytes%4#0"
      ]
    },
    "307": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%4#0",
        "concat%4#0"
      ],
      "stack_out": [
        "concat%4#0",
        "as_u16_bytes%4#0"
      ]
    },
    "310": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%4#0",
        "concat%4#0"
      ]
    },
    "311": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_u16_bytes%4#0",
        "concat%4#0",
        "0"
      ]
    },
    "312": {
      "op": "uncover 2",
      "stack_out": [
        "concat%4#0",
        "0",
        "as_u16_bytes%4#0"
      ]
    },
    "314": {
      "op": "replace3",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "315": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "\"e\""
      ]
    },
    "318": {
      "op": "len",
      "defined_out": [
        "aggregate%length%10#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length%10#1"
      ]
    },
    "319": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%10#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%as_bytes%10#1"
      ]
    },
    "320": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%10#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%10#1"
      ]
    },
    "323": {
      "op": "pushbytes \"e\"",
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%10#1",
        "\"e\""
      ]
    },
    "326": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "tmp%17#0"
      ]
    },
    "327": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%10#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "extract_to_end%10#0"
      ]
    },
    "330": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%5#0"
      ],
      "stack_out": [
        "concat%5#0"
      ]
    },
    "331": {
      "op": "dup",
      "defined_out": [
        "concat%5#0",
        "concat%5#0 (copy)"
      ],
      "stack_out": [
        "concat%5#0",
        "concat%5#0 (copy)"
      ]
    },
    "332": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%5#0",
        "extract_to_end%11#0"
      ],
      "stack_out": [
        "concat%5#0",
        "extract_to_end%11#0"
      ]
    },
    "335": {
      "op": "len",
      "defined_out": [
        "concat%5#0",
        "len%5#0"
      ],
      "stack_out": [
        "concat%5#0",
        "len%5#0"
      ]
    },
    "336": {
      "op": "intc_0 // 1",
      "stack_out": [
        "concat%5#0",
        "len%5#0",
        "1"
      ]
    },
    "337": {
      "op": "/",
      "defined_out": [
        "concat%5#0",
        "div_floor%5#0"
      ],
      "stack_out": [
        "concat%5#0",
        "div_floor%5#0"
      ]
    },
    "338": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "concat%5#0"
      ],
      "stack_out": [
        "concat%5#0",
        "as_bytes%5#0"
      ]
    },
    "339": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%5#0",
        "concat%5#0"
      ],
      "stack_out": [
        "concat%5#0",
        "as_u16_bytes%5#0"
      ]
    },
    "342": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%5#0",
        "concat%5#0"
      ]
    },
    "343": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_u16_bytes%5#0",
        "concat%5#0",
        "0"
      ]
    },
    "344": {
      "op": "uncover 2",
      "stack_out": [
        "concat%5#0",
        "0",
        "as_u16_bytes%5#0"
      ]
    },
    "346": {
      "op": "replace3",
      "stack_out": [
        "value#0"
      ]
    },
    "347": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "\"f\""
      ]
    },
    "350": {
      "op": "len",
      "defined_out": [
        "aggregate%length%11#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length%11#1"
      ]
    },
    "351": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%11#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%as_bytes%11#1"
      ]
    },
    "352": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%11#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%11#1"
      ]
    },
    "355": {
      "op": "pushbytes \"f\"",
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%11#1",
        "\"f\""
      ]
    },
    "358": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "tmp%18#0"
      ]
    },
    "359": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%12#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "extract_to_end%12#0"
      ]
    },
    "362": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%6#0"
      ],
      "stack_out": [
        "concat%6#0"
      ]
    },
    "363": {
      "op": "dup",
      "defined_out": [
        "concat%6#0",
        "concat%6#0 (copy)"
      ],
      "stack_out": [
        "concat%6#0",
        "concat%6#0 (copy)"
      ]
    },
    "364": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%6#0",
        "extract_to_end%13#0"
      ],
      "stack_out": [
        "concat%6#0",
        "extract_to_end%13#0"
      ]
    },
    "367": {
      "op": "len",
      "defined_out": [
        "concat%6#0",
        "len%6#0"
      ],
      "stack_out": [
        "concat%6#0",
        "len%6#0"
      ]
    },
    "368": {
      "op": "intc_0 // 1",
      "stack_out": [
        "concat%6#0",
        "len%6#0",
        "1"
      ]
    },
    "369": {
      "op": "/",
      "defined_out": [
        "concat%6#0",
        "div_floor%6#0"
      ],
      "stack_out": [
        "concat%6#0",
        "div_floor%6#0"
      ]
    },
    "370": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "concat%6#0"
      ],
      "stack_out": [
        "concat%6#0",
        "as_bytes%6#0"
      ]
    },
    "371": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%6#0",
        "concat%6#0"
      ],
      "stack_out": [
        "concat%6#0",
        "as_u16_bytes%6#0"
      ]
    },
    "374": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%6#0",
        "concat%6#0"
      ]
    },
    "375": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_u16_bytes%6#0",
        "concat%6#0",
        "0"
      ]
    },
    "376": {
      "op": "uncover 2",
      "stack_out": [
        "concat%6#0",
        "0",
        "as_u16_bytes%6#0"
      ]
    },
    "378": {
      "op": "replace3",
      "stack_out": [
        "value#0"
      ]
    },
    "379": {
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\"",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "\"g\""
      ]
    },
    "382": {
      "op": "len",
      "defined_out": [
        "aggregate%length%12#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length%12#1"
      ]
    },
    "383": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%12#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%as_bytes%12#1"
      ]
    },
    "384": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%12#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%12#1"
      ]
    },
    "387": {
      "op": "pushbytes \"g\"",
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%12#1",
        "\"g\""
      ]
    },
    "390": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "tmp%19#0"
      ]
    },
    "391": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%14#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "extract_to_end%14#0"
      ]
    },
    "394": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%7#0"
      ],
      "stack_out": [
        "concat%7#0"
      ]
    },
    "395": {
      "op": "dup",
      "defined_out": [
        "concat%7#0",
        "concat%7#0 (copy)"
      ],
      "stack_out": [
        "concat%7#0",
        "concat%7#0 (copy)"
      ]
    },
    "396": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%7#0",
        "extract_to_end%15#0"
      ],
      "stack_out": [
        "concat%7#0",
        "extract_to_end%15#0"
      ]
    },
    "399": {
      "op": "len",
      "defined_out": [
        "concat%7#0",
        "len%7#0"
      ],
      "stack_out": [
        "concat%7#0",
        "len%7#0"
      ]
    },
    "400": {
      "op": "intc_0 // 1",
      "stack_out": [
        "concat%7#0",
        "len%7#0",
        "1"
      ]
    },
    "401": {
      "op": "/",
      "defined_out": [
        "concat%7#0",
        "div_floor%7#0"
      ],
      "stack_out": [
        "concat%7#0",
        "div_floor%7#0"
      ]
    },
    "402": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "concat%7#0"
      ],
      "stack_out": [
        "concat%7#0",
        "as_bytes%7#0"
      ]
    },
    "403": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%7#0",
        "concat%7#0"
      ],
      "stack_out": [
        "concat%7#0",
        "as_u16_bytes%7#0"
      ]
    },
    "406": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%7#0",
        "concat%7#0"
      ]
    },
    "407": {
      "op": "intc_1 // 0",
      "stack_out": [
        "as_u16_bytes%7#0",
        "concat%7#0",
        "0"
      ]
    },
    "408": {
      "op": "uncover 2",
      "stack_out": [
        "concat%7#0",
        "0",
        "as_u16_bytes%7#0"
      ]
    },
    "410": {
      "op": "replace3",
      "stack_out": [
        "value#0"
      ]
    },
    "411": {
      "op": "bytec 9 // \"abcdefg\"",
      "defined_out": [
        "\"abcdefg\"",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "\"abcdefg\""
      ]
    },
    "413": {
      "op": "len",
      "defined_out": [
        "aggregate%length%13#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length%13#1"
      ]
    },
    "414": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%13#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%as_bytes%13#1"
      ]
    },
    "415": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%13#1",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%13#1"
      ]
    },
    "418": {
      "op": "bytec 9 // \"abcdefg\"",
      "stack_out": [
        "value#0",
        "aggregate%length_uint16%13#1",
        "\"abcdefg\""
      ]
    },
    "420": {
      "op": "concat",
      "defined_out": [
        "tmp%20#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "tmp%20#0"
      ]
    },
    "421": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "422": {
      "op": "assert",
      "stack_out": []
    },
    "423": {
      "op": "bytec_2 // \"\"",
      "defined_out": [
        "\"\""
      ],
      "stack_out": [
        "\"\""
      ]
    },
    "424": {
      "op": "len",
      "defined_out": [
        "aggregate%length%14#1"
      ],
      "stack_out": [
        "aggregate%length%14#1"
      ]
    },
    "425": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%14#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%14#1"
      ]
    },
    "426": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%14#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%14#1"
      ]
    },
    "429": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "aggregate%length_uint16%14#1",
        "\"\""
      ]
    },
    "430": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "431": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "434": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "tmp%23#0",
        "\"\""
      ]
    },
    "435": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "436": {
      "op": "assert",
      "stack_out": []
    },
    "437": {
      "op": "bytec_3 // \"hello\"",
      "defined_out": [
        "\"hello\""
      ],
      "stack_out": [
        "\"hello\""
      ]
    },
    "438": {
      "op": "len",
      "defined_out": [
        "aggregate%length%15#1"
      ],
      "stack_out": [
        "aggregate%length%15#1"
      ]
    },
    "439": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%15#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%15#1"
      ]
    },
    "440": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%15#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%15#1"
      ]
    },
    "443": {
      "op": "bytec_3 // \"hello\"",
      "stack_out": [
        "aggregate%length_uint16%15#1",
        "\"hello\""
      ]
    },
    "444": {
      "op": "concat",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "445": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "448": {
      "op": "bytec_3 // \"hello\"",
      "stack_out": [
        "tmp%26#0",
        "\"hello\""
      ]
    },
    "449": {
      "op": "==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "450": {
      "op": "assert",
      "stack_out": []
    },
    "451": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "453": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%28#0",
        "0"
      ]
    },
    "454": {
      "op": "!=",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "455": {
      "op": "bz main_ternary_false@2",
      "stack_out": []
    },
    "458": {
      "block": "main_ternary_true@1",
      "stack_in": [],
      "op": "bytec 10 // \"aye\"",
      "defined_out": [
        "\"aye\""
      ],
      "stack_out": [
        "\"aye\""
      ]
    },
    "460": {
      "op": "len",
      "defined_out": [
        "aggregate%length%16#1"
      ],
      "stack_out": [
        "aggregate%length%16#1"
      ]
    },
    "461": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%16#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%16#1"
      ]
    },
    "462": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%16#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%16#1"
      ]
    },
    "465": {
      "op": "bytec 10 // \"aye\"",
      "stack_out": [
        "aggregate%length_uint16%16#1",
        "\"aye\""
      ]
    },
    "467": {
      "op": "concat",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "468": {
      "block": "main_ternary_merge@3",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "op": "bytec_1 // \"bee\"",
      "defined_out": [
        "\"bee\""
      ],
      "stack_out": [
        "ternary_result%0#0",
        "\"bee\""
      ]
    },
    "469": {
      "op": "len",
      "defined_out": [
        "aggregate%length%18#1"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%length%18#1"
      ]
    },
    "470": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%18#1"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%as_bytes%18#1"
      ]
    },
    "471": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%18#1"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%length_uint16%18#1"
      ]
    },
    "474": {
      "op": "bytec_1 // \"bee\"",
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%length_uint16%18#1",
        "\"bee\""
      ]
    },
    "475": {
      "op": "concat",
      "defined_out": [
        "ternary_result%0#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "tmp%30#0"
      ]
    },
    "476": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "477": {
      "op": "assert",
      "stack_out": []
    },
    "478": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "479": {
      "op": "return",
      "stack_out": []
    },
    "480": {
      "block": "main_ternary_false@2",
      "stack_in": [],
      "op": "bytec_1 // \"bee\"",
      "defined_out": [
        "\"bee\""
      ],
      "stack_out": [
        "\"bee\""
      ]
    },
    "481": {
      "op": "len",
      "defined_out": [
        "aggregate%length%17#1"
      ],
      "stack_out": [
        "aggregate%length%17#1"
      ]
    },
    "482": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%17#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%17#1"
      ]
    },
    "483": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%17#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%17#1"
      ]
    },
    "486": {
      "op": "bytec_1 // \"bee\"",
      "stack_out": [
        "aggregate%length_uint16%17#1",
        "\"bee\""
      ]
    },
    "487": {
      "op": "concat",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "488": {
      "op": "b main_ternary_merge@3"
    }
  }
}