#pragma version 10

test_cases.arc4_types.bool_eval.Arc4BoolEvalContract.approval_program:
    // arc4_types/bool_eval.py:13
    // assert not arc4.Bool(False)
    byte 0x00
    int 0
    int 0
    setbit
    byte 0x00
    ==
    assert
    // arc4_types/bool_eval.py:14
    // assert arc4.Bool(True)
    byte 0x00
    int 0
    int 1
    setbit
    byte 0x00
    !=
    assert
    // arc4_types/bool_eval.py:16
    // assert not arc4.String("")
    byte "\x00\x00"
    byte 0x0000
    ==
    assert
    // arc4_types/bool_eval.py:17
    // assert arc4.String(".")
    byte "\x00\x01."
    byte 0x0000
    !=
    assert
    // arc4_types/bool_eval.py:19
    // assert not arc4.Address(Global.zero_address)
    global ZeroAddress
    global ZeroAddress
    ==
    assert
    // arc4_types/bool_eval.py:20
    // assert arc4.Address(Txn.sender)
    txn Sender
    global ZeroAddress
    !=
    assert
    // arc4_types/bool_eval.py:22
    // assert not arc4.UInt8(0)
    byte 0x00
    byte 0x00
    ==
    assert
    // arc4_types/bool_eval.py:23
    // assert arc4.UInt8(1)
    byte 0x01
    byte 0x00
    !=
    assert
    // arc4_types/bool_eval.py:25
    // assert not arc4.UInt16(0)
    byte 0x0000
    byte 0x0000
    ==
    assert
    // arc4_types/bool_eval.py:26
    // assert arc4.UInt16(1)
    byte 0x0001
    byte 0x0000
    !=
    assert
    // arc4_types/bool_eval.py:28
    // assert not arc4.UInt32(0)
    byte 0x00000000
    byte 0x00000000
    ==
    assert
    // arc4_types/bool_eval.py:29
    // assert arc4.UInt32(1)
    byte 0x00000001
    byte 0x00000000
    !=
    assert
    // arc4_types/bool_eval.py:31
    // assert not arc4.UInt64(0)
    byte 0x0000000000000000
    byte 0x0000000000000000
    ==
    assert
    // arc4_types/bool_eval.py:32
    // assert arc4.UInt64(1)
    byte 0x0000000000000001
    byte 0x0000000000000000
    !=
    assert
    // arc4_types/bool_eval.py:34
    // assert not arc4.UInt128(0)
    byte 0x00000000000000000000000000000000
    byte 0x00000000000000000000000000000000
    ==
    assert
    // arc4_types/bool_eval.py:35
    // assert arc4.UInt128(1)
    byte 0x00000000000000000000000000000001
    byte 0x00000000000000000000000000000000
    !=
    assert
    // arc4_types/bool_eval.py:37
    // assert not arc4.UInt256(0)
    byte 0x0000000000000000000000000000000000000000000000000000000000000000
    byte 0x0000000000000000000000000000000000000000000000000000000000000000
    ==
    assert
    // arc4_types/bool_eval.py:38
    // assert arc4.UInt256(1)
    byte 0x0000000000000000000000000000000000000000000000000000000000000001
    byte 0x0000000000000000000000000000000000000000000000000000000000000000
    !=
    assert
    // arc4_types/bool_eval.py:40
    // assert not arc4.UInt512(0)
    byte 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    byte 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    ==
    assert
    // arc4_types/bool_eval.py:41
    // assert arc4.UInt512(1)
    byte 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
    byte 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    !=
    assert
    // arc4_types/bool_eval.py:43
    // assert not arc4.UIntN[t.Literal[24]](0)
    byte 0x000000
    byte 0x000000
    ==
    assert
    // arc4_types/bool_eval.py:44
    // assert arc4.UIntN[t.Literal[24]](1)
    byte 0x000001
    byte 0x000000
    !=
    assert
    // arc4_types/bool_eval.py:46
    // assert not arc4.BigUIntN[t.Literal[504]](0)
    byte 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    byte 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    ==
    assert
    // arc4_types/bool_eval.py:47
    // assert arc4.BigUIntN[t.Literal[504]](1)
    byte 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
    byte 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    !=
    assert
    // arc4_types/bool_eval.py:62
    // dynamic_arr = arc4.DynamicArray[arc4.UInt64]()
    byte 0x0000
    // arc4_types/bool_eval.py:63
    // assert not dynamic_arr
    dup
    byte 0x0000
    ==
    assert
    // arc4_types/bool_eval.py:64
    // dynamic_arr.append(arc4.UInt64(0))
    extract 2 0
    byte 0x
    byte 0x0000000000000000
    concat
    concat
    dup
    len
    int 8
    /
    itob
    extract 6 0
    swap
    concat
    // arc4_types/bool_eval.py:65
    // assert dynamic_arr
    byte 0x0000
    !=
    assert
    // arc4_types/bool_eval.py:71
    // return True
    int 1
    return
