#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 64
    txn NumAppArgs
    bz main___algopy_default_create@9
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x456eeace 0x6f9f5bf0 // method "build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])", method "test_tuple((uint64,uint512,string,byte[]))void"
    txna ApplicationArgs 0
    match main_build_tuple_route@4 main_test_tuple_route@5
    err

main_test_tuple_route@5:
    txna ApplicationArgs 1
    dup
    pushint 0 // 0
    extract_uint64
    dig 1
    extract 8 64
    dig 2
    pushint 72 // 72
    extract_uint16
    dig 3
    pushint 74 // 74
    extract_uint16
    dig 4
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 4
    len
    uncover 5
    uncover 3
    uncover 2
    substring3
    extract 2 0
    uncover 3
    pushint 1000 // 1000
    <
    assert
    uncover 2
    pushbytes 0x020000000000000000
    b<
    assert
    swap
    len
    intc_0 // 1
    >
    assert
    txn Sender
    ==
    return

main_build_tuple_route@4:
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    extract 2 0
    txna ApplicationArgs 4
    extract 2 0
    uncover 3
    itob
    dig 3
    len
    intc_1 // 64
    <=
    assert // overflow
    intc_1 // 64
    bzero
    uncover 4
    b|
    concat
    dig 2
    len
    itob
    extract 6 2
    uncover 3
    concat
    swap
    pushbytes 0x004c
    concat
    dig 1
    len
    pushint 76 // 76
    +
    dig 3
    len
    itob
    extract 6 2
    uncover 4
    concat
    swap
    itob
    extract 6 2
    uncover 2
    swap
    concat
    uncover 2
    concat
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main___algopy_default_create@9:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating
