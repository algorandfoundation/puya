// Op                                                                                                Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                               tmp%0#1
        bz main_bare_routing@7 ; b main_abi_routing@2

    main_abi_routing@2:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                       tmp%2#0
        method build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])               tmp%2#0,Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[]))
        method test_tuple((uint64,uint512,string,byte[]))void                                        tmp%2#0,Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void)
        l-load tmp%2#0 2                                                                             Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void),tmp%2#0
        match main_build_tuple_route@3 main_test_tuple_route@4 ; b main_after_if_else@11

    main_build_tuple_route@3:
        // named_tuples/contract.py:16
        // @arc4.abimethod()
        txn OnCompletion                                                                             tmp%3#0
        !                                                                                            tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                            tmp%5#0
        assert // can only call when not creating
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                       reinterpret_Encoded(uint64)%0#0
        btoi                                                                                         a#0
        txna ApplicationArgs 2                                                                       a#0,b#0
        txna ApplicationArgs 3                                                                       a#0,b#0,reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                                  a#0,b#0,c#0
        txna ApplicationArgs 4                                                                       a#0,b#0,c#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                                  a#0,b#0,c#0,d#0
        // named_tuples/contract.py:16
        // @arc4.abimethod()
        l-load a#0 3                                                                                 b#0,c#0,d#0,a#0
        itob                                                                                         b#0,c#0,d#0,val_as_bytes%0#0
        l-load-copy b#0 3                                                                            b#0,c#0,d#0,val_as_bytes%0#0,b#0 (copy)
        len                                                                                          b#0,c#0,d#0,val_as_bytes%0#0,value_len%0#0
        int 64                                                                                       b#0,c#0,d#0,val_as_bytes%0#0,value_len%0#0,64
        <=                                                                                           b#0,c#0,d#0,val_as_bytes%0#0,len_ok%0#0
        assert // overflow                                                                           b#0,c#0,d#0,val_as_bytes%0#0
        int 64                                                                                       b#0,c#0,d#0,val_as_bytes%0#0,64
        bzero                                                                                        b#0,c#0,d#0,val_as_bytes%0#0,bzero%0#0
        l-load b#0 4                                                                                 c#0,d#0,val_as_bytes%0#0,bzero%0#0,b#0
        l-load bzero%0#0 1                                                                           c#0,d#0,val_as_bytes%0#0,b#0,bzero%0#0
        b|                                                                                           c#0,d#0,val_as_bytes%0#0,arc4_encoded%0#0
        l-load val_as_bytes%0#0 1                                                                    c#0,d#0,arc4_encoded%0#0,val_as_bytes%0#0
        l-load arc4_encoded%0#0 1                                                                    c#0,d#0,val_as_bytes%0#0,arc4_encoded%0#0
        concat                                                                                       c#0,d#0,encoded%1#0
        l-load-copy c#0 2                                                                            c#0,d#0,encoded%1#0,c#0 (copy)
        len                                                                                          c#0,d#0,encoded%1#0,length%0#0
        itob                                                                                         c#0,d#0,encoded%1#0,as_bytes%0#0
        extract 6 2                                                                                  c#0,d#0,encoded%1#0,length_uint16%0#0
        l-load c#0 3                                                                                 d#0,encoded%1#0,length_uint16%0#0,c#0
        concat                                                                                       d#0,encoded%1#0,encoded_value%0#0
        l-load-copy encoded_value%0#0 0                                                              d#0,encoded%1#0,encoded_value%0#0,encoded_value%0#0 (copy)
        len                                                                                          d#0,encoded%1#0,encoded_value%0#0,data_length%0#0
        int 76                                                                                       d#0,encoded%1#0,encoded_value%0#0,data_length%0#0,76
        l-load data_length%0#0 1                                                                     d#0,encoded%1#0,encoded_value%0#0,76,data_length%0#0
        +                                                                                            d#0,encoded%1#0,encoded_value%0#0,current_tail_offset%0#0
        l-load encoded%1#0 2                                                                         d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%1#0
        byte 0x004c                                                                                  d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%1#0,0x004c
        concat                                                                                       d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0
        l-load-copy d#0 3                                                                            d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,d#0 (copy)
        len                                                                                          d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,length%1#0
        itob                                                                                         d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,as_bytes%2#0
        extract 6 2                                                                                  d#0,encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,length_uint16%1#0
        l-load d#0 4                                                                                 encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,length_uint16%1#0,d#0
        concat                                                                                       encoded_value%0#0,current_tail_offset%0#0,encoded%2#0,encoded_value%1#0
        l-load encoded_value%0#0 3                                                                   current_tail_offset%0#0,encoded%2#0,encoded_value%1#0,encoded_value%0#0
        l-load encoded_value%1#0 1                                                                   current_tail_offset%0#0,encoded%2#0,encoded_value%0#0,encoded_value%1#0
        concat                                                                                       current_tail_offset%0#0,encoded%2#0,tail%1#0
        l-load current_tail_offset%0#0 2                                                             encoded%2#0,tail%1#0,current_tail_offset%0#0
        itob                                                                                         encoded%2#0,tail%1#0,as_bytes%3#0
        extract 6 2                                                                                  encoded%2#0,tail%1#0,offset_as_uint16%1#0
        l-load encoded%2#0 2                                                                         tail%1#0,offset_as_uint16%1#0,encoded%2#0
        l-load offset_as_uint16%1#0 1                                                                tail%1#0,encoded%2#0,offset_as_uint16%1#0
        concat                                                                                       tail%1#0,encoded%3#0
        l-load tail%1#0 1                                                                            encoded%3#0,tail%1#0
        concat                                                                                       encoded%4#0
        byte 0x151f7c75                                                                              encoded%4#0,0x151f7c75
        l-load encoded%4#0 1                                                                         0x151f7c75,encoded%4#0
        concat                                                                                       tmp%10#0
        log
        int 1                                                                                        test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                              (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__@12 (𝕏) tmp%0#0 | 

    main_test_tuple_route@4:
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        txn OnCompletion                                                                             tmp%11#0
        !                                                                                            tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                            tmp%13#0
        assert // can only call when not creating
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                       reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0
        l-load-copy reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 0               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy)
        int 0                                                                                        reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy),0
        extract_uint64                                                                               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0
        l-load-copy reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 1               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy)
        extract 8 64 // on error: Index access is out of bounds                                      reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0
        l-load-copy reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 2               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy)
        int 72                                                                                       reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy),72
        extract_uint16                                                                               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_start_offset%0#0
        l-load-copy reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 3               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_start_offset%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy)
        int 74                                                                                       reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_start_offset%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy),74
        extract_uint16                                                                               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_start_offset%0#0,item_end_offset%0#0
        l-load-copy reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 4               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_start_offset%0#0,item_end_offset%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy)
        l-load item_start_offset%0#0 2                                                               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_end_offset%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy),item_start_offset%0#0
        l-load-copy item_end_offset%0#0 2                                                            reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_end_offset%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
        substring3                                                                                   reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_end_offset%0#0,encoded_item2%0#0
        extract 2 0                                                                                  reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_end_offset%0#0,item2%0#0
        l-load-copy reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 4               reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_end_offset%0#0,item2%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 (copy)
        len                                                                                          reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item0%0#0,encoded_item1%0#0,item_end_offset%0#0,item2%0#0,item_end_offset%1#0
        l-load reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0 5                    item0%0#0,encoded_item1%0#0,item_end_offset%0#0,item2%0#0,item_end_offset%1#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0
        l-load item_end_offset%0#0 3                                                                 item0%0#0,encoded_item1%0#0,item2%0#0,item_end_offset%1#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item_end_offset%0#0
        l-load item_end_offset%1#0 2                                                                 item0%0#0,encoded_item1%0#0,item2%0#0,reinterpret_Encoded((uint64,uint512,len+utf8[],len+uint8[]))%0#0,item_end_offset%0#0,item_end_offset%1#0
        substring3                                                                                   item0%0#0,encoded_item1%0#0,item2%0#0,encoded_item3%0#0
        extract 2 0                                                                                  item0%0#0,encoded_item1%0#0,item2%0#0,item3%0#0
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        l-load item0%0#0 3                                                                           encoded_item1%0#0,item2%0#0,item3%0#0,item0%0#0
        l-load encoded_item1%0#0 3                                                                   item2%0#0,item3%0#0,item0%0#0,encoded_item1%0#0
        l-load item2%0#0 3                                                                           item3%0#0,item0%0#0,encoded_item1%0#0,item2%0#0
        l-load item3%0#0 3                                                                           item0%0#0,encoded_item1%0#0,item2%0#0,item3%0#0
        callsub test_tuple
        int 1                                                                                        test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                              (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__@12 (𝕏) tmp%0#0 | 

    main_bare_routing@7:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txn OnCompletion                                                                             tmp%15#0
        bz main___algopy_default_create@8 ; b main_after_if_else@11

    main___algopy_default_create@8:
        txn ApplicationID                                                                            tmp%16#0
        !                                                                                            tmp%17#0
        assert // can only call when creating
        int 1                                                                                        test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                              (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__@12 (𝕏) tmp%0#0 | 

    main_after_if_else@11:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        int 0                                                                                        test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                              (𝕏) tmp%0#0 |
        b main_after_inlined_test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__@12 (𝕏) tmp%0#0 | 

    main_after_inlined_test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__@12: (𝕏) tmp%0#0 |
        x-load tmp%0#0                                                                               tmp%0#0
        return


// test_cases.named_tuples.contract.NamedTuplesContract.test_tuple(value.a: uint64, value.b: bytes, value.c: bytes, value.d: bytes) -> void:
subroutine test_tuple:
    test_tuple_block@0:                                                                              (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
        // named_tuples/contract.py:33
        // assert value.a < 1000
        p-load value.a#0                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.a#0 (copy)
        int 1000                                                                                     (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.a#0 (copy),1000
        <                                                                                            (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%0#0
        assert                                                                                       (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
        // named_tuples/contract.py:34
        // assert value.b < 2**65
        p-load value.b#0                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.b#0 (copy)
        byte 0x020000000000000000                                                                    (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.b#0 (copy),0x020000000000000000
        b<                                                                                           (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%1#0
        assert                                                                                       (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
        // named_tuples/contract.py:35
        // assert value.c.bytes.length > 1
        p-load value.c#0                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.c#0 (copy)
        len                                                                                          (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%2#0
        int 1                                                                                        (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%2#0,1
        >                                                                                            (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%3#0
        assert                                                                                       (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
        // named_tuples/contract.py:36
        // assert value.d == Txn.sender.bytes
        txn Sender                                                                                   (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%4#0
        p-load value.d#0                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%4#0,value.d#0 (copy)
        l-load tmp%4#0 1                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.d#0 (copy),tmp%4#0
        ==                                                                                           (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%5#0
        assert                                                                                       (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
        retsub


