// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txn ApplicationID                                                               tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        !                                                                               tmp%1#0
        v-store tmp%1#0
        txn OnCompletion                                                                tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        int 1                                                                           tmp%2#0,1
        shl                                                                             tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                  tmp%1#0
        v-load tmp%3#0                                                                  tmp%1#0,tmp%3#0
        +                                                                               tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                  tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%5#0
        v-store tmp%5#0
        method build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])  Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[]))
        method test_tuple((uint64,uint512,string,byte[]))void                           Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void)
        v-load tmp%5#0                                                                  Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void),tmp%5#0
        match build_tuple_route@3 test_tuple_route@4 ; b switch_case_next@6

    build_tuple_route@3:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        callsub build_tuple
        b switch_case_next@6

    test_tuple_route@4:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        callsub test_tuple
        b switch_case_next@6

    switch_case_next@6:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                  tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        !                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                           1
        return

    *NOT_IMPLEMENTED:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]() -> void:
subroutine build_tuple:
    build_tuple_block@0:
        // named_tuples/contract.py:16
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                          reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                          reinterpret_Encoded(uint64)%0#0
        btoi                                                                            a#0
        v-store a#0
        txna ApplicationArgs 2                                                          b#0
        v-store b#0
        txna ApplicationArgs 3                                                          reinterpret_Encoded(len+utf8[])%0#0
        v-store reinterpret_Encoded(len+utf8[])%0#0
        v-load reinterpret_Encoded(len+utf8[])%0#0                                      reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                     c#0
        v-store c#0
        txna ApplicationArgs 4                                                          reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                     reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                     d#0
        v-store d#0
        v-load a#0                                                                      a#0
        itob                                                                            aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load b#0                                                                      b#0
        len                                                                             aggregate%value_len%0#0
        v-store aggregate%value_len%0#0
        v-load aggregate%value_len%0#0                                                  aggregate%value_len%0#0
        int 64                                                                          aggregate%value_len%0#0,64
        <=                                                                              aggregate%len_ok%0#0
        v-store aggregate%len_ok%0#0
        v-load aggregate%len_ok%0#0                                                     aggregate%len_ok%0#0
        assert // overflow
        int 64                                                                          64
        bzero                                                                           aggregate%bzero%0#0
        v-store aggregate%bzero%0#0
        v-load b#0                                                                      b#0
        v-load aggregate%bzero%0#0                                                      b#0,aggregate%bzero%0#0
        b|                                                                              aggregate%arc4_encoded%0#0
        v-store aggregate%arc4_encoded%0#0
        v-load aggregate%val_as_bytes%0#0                                               aggregate%val_as_bytes%0#0
        v-load aggregate%arc4_encoded%0#0                                               aggregate%val_as_bytes%0#0,aggregate%arc4_encoded%0#0
        concat                                                                          aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load c#0                                                                      c#0
        len                                                                             aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                                                     aggregate%length%0#0
        itob                                                                            aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                                                   aggregate%as_bytes%0#0
        extract 6 2                                                                     aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                                              aggregate%length_uint16%0#0
        v-load c#0                                                                      aggregate%length_uint16%0#0,c#0
        concat                                                                          aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        v-load aggregate%head%1#0                                                       aggregate%head%1#0
        byte 0x004c                                                                     aggregate%head%1#0,0x004c
        concat                                                                          aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load aggregate%encoded_value%0#0                                              aggregate%encoded_value%0#0
        len                                                                             aggregate%data_length%0#0
        v-store aggregate%data_length%0#0
        int 76                                                                          76
        v-load aggregate%data_length%0#0                                                76,aggregate%data_length%0#0
        +                                                                               aggregate%current_tail_offset%0#0
        v-store aggregate%current_tail_offset%0#0
        v-load d#0                                                                      d#0
        len                                                                             aggregate%length%1#0
        v-store aggregate%length%1#0
        v-load aggregate%length%1#0                                                     aggregate%length%1#0
        itob                                                                            aggregate%as_bytes%2#0
        v-store aggregate%as_bytes%2#0
        v-load aggregate%as_bytes%2#0                                                   aggregate%as_bytes%2#0
        extract 6 2                                                                     aggregate%length_uint16%1#0
        v-store aggregate%length_uint16%1#0
        v-load aggregate%length_uint16%1#0                                              aggregate%length_uint16%1#0
        v-load d#0                                                                      aggregate%length_uint16%1#0,d#0
        concat                                                                          aggregate%encoded_value%1#0
        v-store aggregate%encoded_value%1#0
        v-load aggregate%current_tail_offset%0#0                                        aggregate%current_tail_offset%0#0
        itob                                                                            aggregate%as_bytes%3#0
        v-store aggregate%as_bytes%3#0
        v-load aggregate%as_bytes%3#0                                                   aggregate%as_bytes%3#0
        extract 6 2                                                                     aggregate%offset_as_uint16%1#0
        v-store aggregate%offset_as_uint16%1#0
        v-load aggregate%head%2#0                                                       aggregate%head%2#0
        v-load aggregate%offset_as_uint16%1#0                                           aggregate%head%2#0,aggregate%offset_as_uint16%1#0
        concat                                                                          aggregate%head%3#0
        v-store aggregate%head%3#0
        v-load aggregate%head%3#0                                                       aggregate%head%3#0
        v-load aggregate%encoded_value%0#0                                              aggregate%head%3#0,aggregate%encoded_value%0#0
        concat                                                                          aggregate%concat%0#0
        v-store aggregate%concat%0#0
        v-load aggregate%concat%0#0                                                     aggregate%concat%0#0
        v-load aggregate%encoded_value%1#0                                              aggregate%concat%0#0,aggregate%encoded_value%1#0
        concat                                                                          aggregate%concat%1#0
        v-store aggregate%concat%1#0
        byte 0x151f7c75                                                                 0x151f7c75
        v-load aggregate%concat%1#0                                                     0x151f7c75,aggregate%concat%1#0
        concat                                                                          tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                  tmp%9#0
        log
        int 1                                                                           1
        return


// test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]() -> void:
subroutine test_tuple:
    test_tuple_block@0:
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                          reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        v-store reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        int 0                                                                           reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,0
        extract_uint64                                                                  value.a#0
        v-store value.a#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        extract 8 64                                                                    value.b#0
        v-store value.b#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        int 72                                                                          reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,72
        extract_uint16                                                                  aggregate%extract_uint16%0#0
        v-store aggregate%extract_uint16%0#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        int 74                                                                          reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,74
        extract_uint16                                                                  aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        v-load aggregate%extract_uint16%0#0                                             reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,aggregate%extract_uint16%0#0
        v-load aggregate%extract_uint16%1#0                                             reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0
        substring3                                                                      aggregate%substring3%0#0
        v-store aggregate%substring3%0#0
        v-load aggregate%substring3%0#0                                                 aggregate%substring3%0#0
        extract 2 0                                                                     value.c#0
        v-store value.c#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        len                                                                             aggregate%len%0#0
        v-store aggregate%len%0#0
        v-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        v-load aggregate%extract_uint16%1#0                                             reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,aggregate%extract_uint16%1#0
        v-load aggregate%len%0#0                                                        reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,aggregate%extract_uint16%1#0,aggregate%len%0#0
        substring3                                                                      aggregate%substring3%1#0
        v-store aggregate%substring3%1#0
        v-load aggregate%substring3%1#0                                                 aggregate%substring3%1#0
        extract 2 0                                                                     value.d#0
        v-store value.d#0
        // named_tuples/contract.py:33
        // assert value.a < 1000
        v-load value.a#0                                                                value.a#0
        int 1000                                                                        value.a#0,1000
        <                                                                               tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        assert
        // named_tuples/contract.py:34
        // assert value.b < 2**65
        v-load value.b#0                                                                value.b#0
        byte 0x020000000000000000                                                       value.b#0,0x020000000000000000
        b<                                                                              tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                  tmp%1#1
        assert
        // named_tuples/contract.py:35
        // assert value.c.bytes.length > 1
        v-load value.c#0                                                                value.c#0
        len                                                                             tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                  tmp%2#1
        int 1                                                                           tmp%2#1,1
        >                                                                               tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                  tmp%3#1
        assert
        // named_tuples/contract.py:36
        // assert value.d == Txn.sender.bytes
        txn Sender                                                                      tmp%4#0
        v-store tmp%4#0
        v-load value.d#0                                                                value.d#0
        v-load tmp%4#0                                                                  value.d#0,tmp%4#0
        ==                                                                              tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                  tmp%5#0
        assert
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        int 1                                                                           1
        return


