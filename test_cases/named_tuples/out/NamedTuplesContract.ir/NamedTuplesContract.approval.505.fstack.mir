// Op                                                                                    Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                   tmp%0#1
        bz main___algopy_default_create@10 ; b main_abi_routing@2

    main_abi_routing@2:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        txn OnCompletion                                                                 tmp%2#0
        !                                                                                tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                                tmp%4#0
        assert
        txna ApplicationArgs 0                                                           tmp%6#0
        method build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])   tmp%6#0,Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[]))
        method test_tuple((uint64,uint512,string,byte[]))void                            tmp%6#0,Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void)
        l-load tmp%6#0 2                                                                 Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void),tmp%6#0
        match main_build_tuple_route@4 main_test_tuple_route@5 ; b main_after_if_else@9

    main_build_tuple_route@4:
        // named_tuples/contract.py:16
        // @arc4.abimethod()
        callsub build_tuple
        b main_after_if_else@9

    main_test_tuple_route@5:
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        callsub test_tuple
        b main_after_if_else@9

    main_after_if_else@9:
        // named_tuples/contract.py:15
        // class NamedTuplesContract(arc4.ARC4Contract):
        err

    main___algopy_default_create@10:
        txn OnCompletion                                                                 tmp%7#0
        !                                                                                tmp%8#0
        txn ApplicationID                                                                tmp%8#0,tmp%9#0
        !                                                                                tmp%8#0,tmp%10#0
        l-load tmp%8#0 1                                                                 tmp%10#0,tmp%8#0
        l-load tmp%10#0 1                                                                tmp%8#0,tmp%10#0
        &&                                                                               tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                            1
        return


// test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]() -> void:
subroutine build_tuple:
    build_tuple_block@0:
        // named_tuples/contract.py:16
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                           reinterpret_Encoded(uint64)%0#0
        btoi                                                                             a#0
        txna ApplicationArgs 2                                                           a#0,b#0
        txna ApplicationArgs 3                                                           a#0,b#0,reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                      a#0,b#0,c#0
        txna ApplicationArgs 4                                                           a#0,b#0,c#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                      a#0,b#0,c#0,d#0
        l-load a#0 3                                                                     b#0,c#0,d#0,a#0
        itob                                                                             b#0,c#0,d#0,aggregate%val_as_bytes%0#0
        l-load-copy b#0 3                                                                b#0,c#0,d#0,aggregate%val_as_bytes%0#0,b#0 (copy)
        len                                                                              b#0,c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%value_len%0#0
        int 64                                                                           b#0,c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%value_len%0#0,64
        <=                                                                               b#0,c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%len_ok%0#0
        assert // overflow                                                               b#0,c#0,d#0,aggregate%val_as_bytes%0#0
        int 64                                                                           b#0,c#0,d#0,aggregate%val_as_bytes%0#0,64
        bzero                                                                            b#0,c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%bzero%0#0
        l-load b#0 4                                                                     c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%bzero%0#0,b#0
        l-load aggregate%bzero%0#0 1                                                     c#0,d#0,aggregate%val_as_bytes%0#0,b#0,aggregate%bzero%0#0
        b|                                                                               c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%arc4_encoded%0#0
        l-load aggregate%val_as_bytes%0#0 1                                              c#0,d#0,aggregate%arc4_encoded%0#0,aggregate%val_as_bytes%0#0
        l-load aggregate%arc4_encoded%0#0 1                                              c#0,d#0,aggregate%val_as_bytes%0#0,aggregate%arc4_encoded%0#0
        concat                                                                           c#0,d#0,aggregate%head%1#0
        l-load-copy c#0 2                                                                c#0,d#0,aggregate%head%1#0,c#0 (copy)
        len                                                                              c#0,d#0,aggregate%head%1#0,aggregate%length%0#0
        itob                                                                             c#0,d#0,aggregate%head%1#0,aggregate%as_bytes%0#0
        extract 6 2                                                                      c#0,d#0,aggregate%head%1#0,aggregate%length_uint16%0#0
        l-load c#0 3                                                                     d#0,aggregate%head%1#0,aggregate%length_uint16%0#0,c#0
        concat                                                                           d#0,aggregate%head%1#0,aggregate%encoded_value%0#0
        l-load aggregate%head%1#0 1                                                      d#0,aggregate%encoded_value%0#0,aggregate%head%1#0
        byte 0x004c                                                                      d#0,aggregate%encoded_value%0#0,aggregate%head%1#0,0x004c
        concat                                                                           d#0,aggregate%encoded_value%0#0,aggregate%head%2#0
        l-load-copy aggregate%encoded_value%0#0 1                                        d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%encoded_value%0#0 (copy)
        len                                                                              d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%data_length%0#0
        int 76                                                                           d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%data_length%0#0,76
        l-load aggregate%data_length%0#0 1                                               d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,76,aggregate%data_length%0#0
        +                                                                                d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0
        l-load-copy d#0 3                                                                d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0,d#0 (copy)
        len                                                                              d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0,aggregate%length%1#0
        itob                                                                             d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0,aggregate%as_bytes%2#0
        extract 6 2                                                                      d#0,aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0,aggregate%length_uint16%1#0
        l-load d#0 4                                                                     aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0,aggregate%length_uint16%1#0,d#0
        concat                                                                           aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%current_tail_offset%0#0,aggregate%encoded_value%1#0
        l-load aggregate%current_tail_offset%0#0 1                                       aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%encoded_value%1#0,aggregate%current_tail_offset%0#0
        itob                                                                             aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%encoded_value%1#0,aggregate%as_bytes%3#0
        extract 6 2                                                                      aggregate%encoded_value%0#0,aggregate%head%2#0,aggregate%encoded_value%1#0,aggregate%offset_as_uint16%1#0
        l-load aggregate%head%2#0 2                                                      aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%offset_as_uint16%1#0,aggregate%head%2#0
        l-load aggregate%offset_as_uint16%1#0 1                                          aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%offset_as_uint16%1#0
        concat                                                                           aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%3#0
        l-load aggregate%encoded_value%0#0 2                                             aggregate%encoded_value%1#0,aggregate%head%3#0,aggregate%encoded_value%0#0
        concat                                                                           aggregate%encoded_value%1#0,aggregate%concat%0#0
        l-load aggregate%encoded_value%1#0 1                                             aggregate%concat%0#0,aggregate%encoded_value%1#0
        concat                                                                           aggregate%concat%1#0
        byte 0x151f7c75                                                                  aggregate%concat%1#0,0x151f7c75
        l-load aggregate%concat%1#0 1                                                    0x151f7c75,aggregate%concat%1#0
        concat                                                                           tmp%9#0
        log
        int 1                                                                            1
        return


// test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]() -> void:
subroutine test_tuple:
    test_tuple_block@0:
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                           reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        l-load-copy reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 0 reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy)
        int 0                                                                            reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy),0
        extract_uint64                                                                   reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0
        l-load-copy reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 1 reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy)
        extract 8 64                                                                     reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0
        l-load-copy reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 2 reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy)
        int 72                                                                           reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy),72
        extract_uint16                                                                   reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%0#0
        l-load-copy reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 3 reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%0#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy)
        int 74                                                                           reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%0#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy),74
        extract_uint16                                                                   reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0
        l-load-copy reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 4 reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy)
        l-load aggregate%extract_uint16%0#0 2                                            reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy),aggregate%extract_uint16%0#0
        l-load-copy aggregate%extract_uint16%1#0 2                                       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy),aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0 (copy)
        substring3                                                                       reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0
        extract 2 0                                                                      reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%1#0,value.c#0
        l-load-copy reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 4 reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%1#0,value.c#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 (copy)
        len                                                                              reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,value.a#0,value.b#0,aggregate%extract_uint16%1#0,value.c#0,aggregate%len%0#0
        l-load reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0 5      value.a#0,value.b#0,aggregate%extract_uint16%1#0,value.c#0,aggregate%len%0#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
        l-load aggregate%extract_uint16%1#0 3                                            value.a#0,value.b#0,value.c#0,aggregate%len%0#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,aggregate%extract_uint16%1#0
        l-load aggregate%len%0#0 2                                                       value.a#0,value.b#0,value.c#0,reinterpret_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0,aggregate%extract_uint16%1#0,aggregate%len%0#0
        substring3                                                                       value.a#0,value.b#0,value.c#0,aggregate%substring3%1#0
        extract 2 0                                                                      value.a#0,value.b#0,value.c#0,value.d#0
        // named_tuples/contract.py:33
        // assert value.a < 1000
        l-load value.a#0 3                                                               value.b#0,value.c#0,value.d#0,value.a#0
        int 1000                                                                         value.b#0,value.c#0,value.d#0,value.a#0,1000
        <                                                                                value.b#0,value.c#0,value.d#0,tmp%0#1
        assert                                                                           value.b#0,value.c#0,value.d#0
        // named_tuples/contract.py:34
        // assert value.b < 2**65
        l-load value.b#0 2                                                               value.c#0,value.d#0,value.b#0
        byte 0x020000000000000000                                                        value.c#0,value.d#0,value.b#0,0x020000000000000000
        b<                                                                               value.c#0,value.d#0,tmp%1#1
        assert                                                                           value.c#0,value.d#0
        // named_tuples/contract.py:35
        // assert value.c.bytes.length > 1
        l-load value.c#0 1                                                               value.d#0,value.c#0
        len                                                                              value.d#0,tmp%2#1
        int 1                                                                            value.d#0,tmp%2#1,1
        >                                                                                value.d#0,tmp%3#1
        assert                                                                           value.d#0
        // named_tuples/contract.py:36
        // assert value.d == Txn.sender.bytes
        txn Sender                                                                       value.d#0,tmp%4#0
        l-load value.d#0 1                                                               tmp%4#0,value.d#0
        l-load tmp%4#0 1                                                                 value.d#0,tmp%4#0
        ==                                                                               tmp%5#0
        assert
        // named_tuples/contract.py:31
        // @arc4.abimethod()
        int 1                                                                            1
        return


