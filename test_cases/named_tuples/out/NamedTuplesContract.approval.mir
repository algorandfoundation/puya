// Op                                                                                              Stack (out)
// test_cases.named_tuples.contract.NamedTuplesContract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                                                   tmp%0#0
    return


// test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    txn NumAppArgs                                                                                 tmp%0#0
    bz __puya_arc4_router___bare_routing@6
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    txna ApplicationArgs 0                                                                         tmp%2#0
    method build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])                 tmp%2#0,Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[]))
    method test_tuple((uint64,uint512,string,byte[]))void                                          tmp%2#0,Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void)
    l-load tmp%2#0 2                                                                               Method(build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])),Method(test_tuple((uint64,uint512,string,byte[]))void),tmp%2#0
    match __puya_arc4_router___build_tuple_route@2 __puya_arc4_router___test_tuple_route@3 
    int 0                                                                                          0
    retsub                                                                                         0

__puya_arc4_router___build_tuple_route@2:
    // named_tuples/contract.py:15
    // @arc4.abimethod()
    txn OnCompletion                                                                               tmp%3#0
    !                                                                                              tmp%4#0
    assert // OnCompletion is NoOp
    txn ApplicationID                                                                              tmp%5#0
    assert // is not creating
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                                         tmp%7#0
    btoi                                                                                           tmp%8#0
    txna ApplicationArgs 2                                                                         tmp%8#0,tmp%9#0
    txna ApplicationArgs 3                                                                         tmp%8#0,tmp%9#0,tmp%10#0
    extract 2 0                                                                                    tmp%8#0,tmp%9#0,tmp%11#0
    txna ApplicationArgs 4                                                                         tmp%8#0,tmp%9#0,tmp%11#0,tmp%12#0
    extract 2 0                                                                                    tmp%8#0,tmp%9#0,tmp%11#0,tmp%13#0
    // named_tuples/contract.py:15
    // @arc4.abimethod()
    l-load tmp%8#0 3                                                                               tmp%9#0,tmp%11#0,tmp%13#0,tmp%8#0
    l-load tmp%9#0 3                                                                               tmp%11#0,tmp%13#0,tmp%8#0,tmp%9#0
    l-load tmp%11#0 3                                                                              tmp%13#0,tmp%8#0,tmp%9#0,tmp%11#0
    l-load tmp%13#0 3                                                                              tmp%8#0,tmp%9#0,tmp%11#0,tmp%13#0
    callsub build_tuple                                                                            elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0
    l-load elements_to_encode%0#0 3                                                                elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%0#0
    itob                                                                                           elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0
    l-load-copy elements_to_encode%1#0 3                                                           elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,elements_to_encode%1#0 (copy)
    len                                                                                            elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,len_%0#0
    int 64                                                                                         elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,len_%0#0,64
    <=                                                                                             elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,no_overflow%0#0
    assert // overflow                                                                             elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0
    int 64                                                                                         elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,64
    bzero                                                                                          elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,b_zeros%0#0
    l-load elements_to_encode%1#0 4                                                                elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,b_zeros%0#0,elements_to_encode%1#0
    l-load b_zeros%0#0 1                                                                           elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,elements_to_encode%1#0,b_zeros%0#0
    b|                                                                                             elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0
    l-load-copy elements_to_encode%2#0 3                                                           elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,elements_to_encode%2#0 (copy)
    len                                                                                            elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,length%0#0
    itob                                                                                           elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,as_bytes%0#0
    extract 6 2                                                                                    elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,length_uint16%0#0
    l-load elements_to_encode%2#0 4                                                                elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,length_uint16%0#0,elements_to_encode%2#0
    concat                                                                                         elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0
    l-load-copy elements_to_encode%3#0 3                                                           elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0,elements_to_encode%3#0 (copy)
    len                                                                                            elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0,length%1#0
    itob                                                                                           elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0,as_bytes%1#0
    extract 6 2                                                                                    elements_to_encode%3#0,val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0,length_uint16%1#0
    l-load elements_to_encode%3#0 4                                                                val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0,length_uint16%1#0,elements_to_encode%3#0
    concat                                                                                         val_as_bytes%0#0,arc4_item%0#0,encoded_value%0#0,encoded_value%1#0
    l-load val_as_bytes%0#0 3                                                                      arc4_item%0#0,encoded_value%0#0,encoded_value%1#0,val_as_bytes%0#0
    l-load arc4_item%0#0 3                                                                         encoded_value%0#0,encoded_value%1#0,val_as_bytes%0#0,arc4_item%0#0
    concat                                                                                         encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0
    byte 0x004c                                                                                    encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%2#0,0x004c
    concat                                                                                         encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0
    l-load-copy encoded_value%0#0 2                                                                encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,encoded_value%0#0 (copy)
    len                                                                                            encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,data_length%0#0
    int 76                                                                                         encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,data_length%0#0,76
    l-load data_length%0#0 1                                                                       encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,76,data_length%0#0
    +                                                                                              encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,current_tail_offset%1#0
    itob                                                                                           encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,as_bytes%3#0
    extract 6 2                                                                                    encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,offset_as_uint16%1#0
    l-load encoded_tuple_buffer%3#0 1                                                              encoded_value%0#0,encoded_value%1#0,offset_as_uint16%1#0,encoded_tuple_buffer%3#0
    l-load offset_as_uint16%1#0 1                                                                  encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%3#0,offset_as_uint16%1#0
    concat                                                                                         encoded_value%0#0,encoded_value%1#0,encoded_tuple_buffer%4#0
    l-load encoded_value%0#0 2                                                                     encoded_value%1#0,encoded_tuple_buffer%4#0,encoded_value%0#0
    concat                                                                                         encoded_value%1#0,encoded_tuple_buffer%5#0
    l-load encoded_value%1#0 1                                                                     encoded_tuple_buffer%5#0,encoded_value%1#0
    concat                                                                                         encoded_tuple_buffer%6#0
    byte 0x151f7c75                                                                                encoded_tuple_buffer%6#0,0x151f7c75
    l-load encoded_tuple_buffer%6#0 1                                                              0x151f7c75,encoded_tuple_buffer%6#0
    concat                                                                                         tmp%14#0
    log
    int 1                                                                                          1
    retsub                                                                                         1

__puya_arc4_router___test_tuple_route@3:
    // named_tuples/contract.py:30
    // @arc4.abimethod()
    txn OnCompletion                                                                               tmp%15#0
    !                                                                                              tmp%16#0
    assert // OnCompletion is NoOp
    txn ApplicationID                                                                              tmp%17#0
    assert // is not creating
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                                         tmp%19#0
    l-load-copy tmp%19#0 0                                                                         tmp%19#0,tmp%19#0 (copy)
    extract 0 8 // on error: Index access is out of bounds                                         tmp%19#0,item0%0#0
    btoi                                                                                           tmp%19#0,item0%0%0#0
    l-load-copy tmp%19#0 1                                                                         tmp%19#0,item0%0%0#0,tmp%19#0 (copy)
    extract 8 64 // on error: Index access is out of bounds                                        tmp%19#0,item0%0%0#0,item1%0#0
    l-load-copy tmp%19#0 2                                                                         tmp%19#0,item0%0%0#0,item1%0#0,tmp%19#0 (copy)
    int 72                                                                                         tmp%19#0,item0%0%0#0,item1%0#0,tmp%19#0 (copy),72
    extract_uint16                                                                                 tmp%19#0,item0%0%0#0,item1%0#0,item_start_offset%0#0
    l-load-copy tmp%19#0 3                                                                         tmp%19#0,item0%0%0#0,item1%0#0,item_start_offset%0#0,tmp%19#0 (copy)
    int 74                                                                                         tmp%19#0,item0%0%0#0,item1%0#0,item_start_offset%0#0,tmp%19#0 (copy),74
    extract_uint16                                                                                 tmp%19#0,item0%0%0#0,item1%0#0,item_start_offset%0#0,item_end_offset%0#0
    l-load-copy tmp%19#0 4                                                                         tmp%19#0,item0%0%0#0,item1%0#0,item_start_offset%0#0,item_end_offset%0#0,tmp%19#0 (copy)
    l-load item_start_offset%0#0 2                                                                 tmp%19#0,item0%0%0#0,item1%0#0,item_end_offset%0#0,tmp%19#0 (copy),item_start_offset%0#0
    l-load-copy item_end_offset%0#0 2                                                              tmp%19#0,item0%0%0#0,item1%0#0,item_end_offset%0#0,tmp%19#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
    substring3                                                                                     tmp%19#0,item0%0%0#0,item1%0#0,item_end_offset%0#0,item2%0#0
    extract 2 0                                                                                    tmp%19#0,item0%0%0#0,item1%0#0,item_end_offset%0#0,item2%0%0#0
    l-load-copy tmp%19#0 4                                                                         tmp%19#0,item0%0%0#0,item1%0#0,item_end_offset%0#0,item2%0%0#0,tmp%19#0 (copy)
    len                                                                                            tmp%19#0,item0%0%0#0,item1%0#0,item_end_offset%0#0,item2%0%0#0,item_end_offset%1#0
    l-load tmp%19#0 5                                                                              item0%0%0#0,item1%0#0,item_end_offset%0#0,item2%0%0#0,item_end_offset%1#0,tmp%19#0
    l-load item_end_offset%0#0 3                                                                   item0%0%0#0,item1%0#0,item2%0%0#0,item_end_offset%1#0,tmp%19#0,item_end_offset%0#0
    l-load item_end_offset%1#0 2                                                                   item0%0%0#0,item1%0#0,item2%0%0#0,tmp%19#0,item_end_offset%0#0,item_end_offset%1#0
    substring3                                                                                     item0%0%0#0,item1%0#0,item2%0%0#0,item3%0#0
    extract 2 0                                                                                    item0%0%0#0,item1%0#0,item2%0%0#0,item3%0%0#0
    // named_tuples/contract.py:30
    // @arc4.abimethod()
    l-load item0%0%0#0 3                                                                           item1%0#0,item2%0%0#0,item3%0%0#0,item0%0%0#0
    l-load item1%0#0 3                                                                             item2%0%0#0,item3%0%0#0,item0%0%0#0,item1%0#0
    l-load item2%0%0#0 3                                                                           item3%0%0#0,item0%0%0#0,item1%0#0,item2%0%0#0
    l-load item3%0%0#0 3                                                                           item0%0%0#0,item1%0#0,item2%0%0#0,item3%0%0#0
    callsub test_tuple
    int 1                                                                                          1
    retsub                                                                                         1

__puya_arc4_router___bare_routing@6:
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    txn OnCompletion                                                                               tmp%20#0
    bnz __puya_arc4_router___after_if_else@10
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@7

__puya_arc4_router_____algopy_default_create@7:
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    txn ApplicationID                                                                              tmp%21#0
    !                                                                                              tmp%22#0
    assert // is creating
    int 1                                                                                          1
    retsub                                                                                         1

__puya_arc4_router___after_if_else@10:
    // named_tuples/contract.py:13
    // class NamedTuplesContract(arc4.ARC4Contract):
    int 0                                                                                          0
    retsub                                                                                         0


// test_cases.named_tuples.contract.NamedTuplesContract.build_tuple(a: uint64, b: bytes, c: bytes, d: bytes) -> uint64, bytes, bytes, bytes:
build_tuple:                                                                                       (𝕡) a#0,b#0,c#0,d#0 |
    // named_tuples/contract.py:15-16
    // @arc4.abimethod()
    // def build_tuple(self, a: UInt64, b: BigUInt, c: String, d: Bytes) -> TestTuple:
    proto 4 4                                                                                      (𝕡) a#0,b#0,c#0,d#0 |

build_tuple_block@0:                                                                               (𝕡) a#0,b#0,c#0,d#0 |
    // named_tuples/contract.py:17
    // t1 = self.build_tuple_by_name(a, b, c, d)
    p-load a#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy)
    p-load b#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy)
    p-load c#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy),c#0 (copy)
    p-load d#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)
    callsub build_tuple_by_name                                                                    (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0
    // named_tuples/contract.py:18
    // t2 = self.build_tuple_by_position(a, b, c, d)
    p-load a#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,a#0 (copy)
    p-load b#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,a#0 (copy),b#0 (copy)
    p-load c#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,a#0 (copy),b#0 (copy),c#0 (copy)
    p-load d#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)
    callsub build_tuple_by_position                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.a#0,t2.b#0,t2.c#0,t2.d#0
    // named_tuples/contract.py:19
    // assert t1 == t2
    l-load-copy t1.a#0 7                                                                           (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.a#0,t2.b#0,t2.c#0,t2.d#0,t1.a#0 (copy)
    l-load t2.a#0 4                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.b#0,t2.c#0,t2.d#0,t1.a#0 (copy),t2.a#0
    ==                                                                                             (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.b#0,t2.c#0,t2.d#0,tmp%0#0
    l-load-copy t1.b#0 6                                                                           (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.b#0,t2.c#0,t2.d#0,tmp%0#0,t1.b#0 (copy)
    l-load t2.b#0 4                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.c#0,t2.d#0,tmp%0#0,t1.b#0 (copy),t2.b#0
    b==                                                                                            (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.c#0,t2.d#0,tmp%0#0,tmp%1#0
    l-load tmp%0#0 1                                                                               (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.c#0,t2.d#0,tmp%1#0,tmp%0#0
    l-load tmp%1#0 1                                                                               (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.c#0,t2.d#0,tmp%0#0,tmp%1#0
    &&                                                                                             (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.c#0,t2.d#0,tmp%2#0
    l-load-copy t1.c#0 4                                                                           (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.c#0,t2.d#0,tmp%2#0,t1.c#0 (copy)
    l-load t2.c#0 3                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.d#0,tmp%2#0,t1.c#0 (copy),t2.c#0
    ==                                                                                             (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.d#0,tmp%2#0,tmp%3#0
    l-load tmp%2#0 1                                                                               (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.d#0,tmp%3#0,tmp%2#0
    l-load tmp%3#0 1                                                                               (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.d#0,tmp%2#0,tmp%3#0
    &&                                                                                             (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.d#0,tmp%4#0
    l-load-copy t1.d#0 2                                                                           (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,t2.d#0,tmp%4#0,t1.d#0 (copy)
    l-load t2.d#0 2                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,tmp%4#0,t1.d#0 (copy),t2.d#0
    ==                                                                                             (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,tmp%4#0,tmp%5#0
    l-load tmp%4#0 1                                                                               (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,tmp%5#0,tmp%4#0
    l-load tmp%5#0 1                                                                               (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,tmp%4#0,tmp%5#0
    &&                                                                                             (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0,tmp%6#0
    assert                                                                                         (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0
    // named_tuples/contract.py:20
    // return t1
    l-load t1.a#0 3                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.b#0,t1.c#0,t1.d#0,t1.a#0
    l-load t1.b#0 3                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.c#0,t1.d#0,t1.a#0,t1.b#0
    l-load t1.c#0 3                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.d#0,t1.a#0,t1.b#0,t1.c#0
    l-load t1.d#0 3                                                                                (𝕡) a#0,b#0,c#0,d#0 | t1.a#0,t1.b#0,t1.c#0,t1.d#0
    retsub                                                                                         t1.a#0,t1.b#0,t1.c#0,t1.d#0


// test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name(a: uint64, b: bytes, c: bytes, d: bytes) -> uint64, bytes, bytes, bytes:
build_tuple_by_name:                                                                               (𝕡) a#0,b#0,c#0,d#0 |
    // named_tuples/contract.py:22-23
    // @subroutine
    // def build_tuple_by_name(self, a: UInt64, b: BigUInt, c: String, d: Bytes) -> TestTuple:
    proto 4 4                                                                                      (𝕡) a#0,b#0,c#0,d#0 |

build_tuple_by_name_block@0:                                                                       (𝕡) a#0,b#0,c#0,d#0 |
    // named_tuples/contract.py:24
    // return TestTuple(a=a, b=b, c=c, d=d)
    p-load a#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy)
    p-load b#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy)
    p-load c#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy),c#0 (copy)
    p-load d#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)
    retsub                                                                                         a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)


// test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position(a: uint64, b: bytes, c: bytes, d: bytes) -> uint64, bytes, bytes, bytes:
build_tuple_by_position:                                                                           (𝕡) a#0,b#0,c#0,d#0 |
    // named_tuples/contract.py:26-27
    // @subroutine
    // def build_tuple_by_position(self, a: UInt64, b: BigUInt, c: String, d: Bytes) -> TestTuple:
    proto 4 4                                                                                      (𝕡) a#0,b#0,c#0,d#0 |

build_tuple_by_position_block@0:                                                                   (𝕡) a#0,b#0,c#0,d#0 |
    // named_tuples/contract.py:28
    // return TestTuple(a, b, c, d)
    p-load a#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy)
    p-load b#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy)
    p-load c#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy),c#0 (copy)
    p-load d#0                                                                                     (𝕡) a#0,b#0,c#0,d#0 | a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)
    retsub                                                                                         a#0 (copy),b#0 (copy),c#0 (copy),d#0 (copy)


// test_cases.named_tuples.contract.NamedTuplesContract.test_tuple(value.a: uint64, value.b: bytes, value.c: bytes, value.d: bytes) -> void:
test_tuple:                                                                                        (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
    // named_tuples/contract.py:30-31
    // @arc4.abimethod()
    // def test_tuple(self, value: TestTuple) -> None:
    proto 4 0                                                                                      (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |

test_tuple_block@0:                                                                                (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
    // named_tuples/contract.py:32
    // assert value.a < 1000
    p-load value.a#0                                                                               (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.a#0 (copy)
    int 1000                                                                                       (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.a#0 (copy),1000
    <                                                                                              (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%0#0
    assert                                                                                         (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
    // named_tuples/contract.py:33
    // assert value.b < 2**65
    p-load value.b#0                                                                               (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.b#0 (copy)
    byte 0x020000000000000000                                                                      (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.b#0 (copy),0x020000000000000000
    b<                                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%1#0
    assert                                                                                         (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
    // named_tuples/contract.py:34
    // assert value.c.bytes.length > 1
    p-load value.c#0                                                                               (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.c#0 (copy)
    len                                                                                            (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%2#0
    int 1                                                                                          (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%2#0,1
    >                                                                                              (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%3#0
    assert                                                                                         (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
    // named_tuples/contract.py:35
    // assert value.d == Txn.sender.bytes
    txn Sender                                                                                     (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%4#0
    p-load value.d#0                                                                               (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%4#0,value.d#0 (copy)
    l-load tmp%4#0 1                                                                               (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | value.d#0 (copy),tmp%4#0
    ==                                                                                             (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 | tmp%5#0
    assert                                                                                         (𝕡) value.a#0,value.b#0,value.c#0,value.d#0 |
    retsub


