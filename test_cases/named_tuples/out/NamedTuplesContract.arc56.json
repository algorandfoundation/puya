{
    "name": "NamedTuplesContract",
    "structs": {
        "TestTuple": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "b",
                "type": "uint512"
            },
            {
                "name": "c",
                "type": "string"
            },
            {
                "name": "d",
                "type": "byte[]"
            }
        ]
    },
    "methods": [
        {
            "name": "build_tuple",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint512",
                    "name": "b"
                },
                {
                    "type": "string",
                    "name": "c"
                },
                {
                    "type": "byte[]",
                    "name": "d"
                }
            ],
            "returns": {
                "type": "(uint64,uint512,string,byte[])",
                "struct": "TestTuple"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_tuple",
            "args": [
                {
                    "type": "(uint64,uint512,string,byte[])",
                    "struct": "TestTuple",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        37,
                        93
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        198
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        40,
                        96
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        124
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDAgNjQKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNQogICAgLy8gY2xhc3MgTmFtZWRUdXBsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANwogICAgcHVzaGJ5dGVzcyAweDQ1NmVlYWNlIDB4NmY5ZjViZjAgLy8gbWV0aG9kICJidWlsZF90dXBsZSh1aW50NjQsdWludDUxMixzdHJpbmcsYnl0ZVtdKSh1aW50NjQsdWludDUxMixzdHJpbmcsYnl0ZVtdKSIsIG1ldGhvZCAidGVzdF90dXBsZSgodWludDY0LHVpbnQ1MTIsc3RyaW5nLGJ5dGVbXSkpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fYnVpbGRfdHVwbGVfcm91dGVAMyBtYWluX3Rlc3RfdHVwbGVfcm91dGVANAoKbWFpbl9hZnRlcl9pZl9lbHNlQDExOgogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjE1CiAgICAvLyBjbGFzcyBOYW1lZFR1cGxlc0NvbnRyYWN0KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIGludGNfMSAvLyAwCiAgICByZXR1cm4KCm1haW5fdGVzdF90dXBsZV9yb3V0ZUA0OgogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MTUKICAgIC8vIGNsYXNzIE5hbWVkVHVwbGVzQ29udHJhY3QoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBpbnRjXzEgLy8gMAogICAgZXh0cmFjdF91aW50NjQKICAgIGRpZyAxCiAgICBleHRyYWN0IDggNjQKICAgIGRpZyAyCiAgICBwdXNoaW50IDcyIC8vIDcyCiAgICBleHRyYWN0X3VpbnQxNgogICAgZGlnIDMKICAgIHB1c2hpbnQgNzQgLy8gNzQKICAgIGV4dHJhY3RfdWludDE2CiAgICBkaWcgNAogICAgdW5jb3ZlciAyCiAgICBkaWcgMgogICAgc3Vic3RyaW5nMwogICAgZXh0cmFjdCAyIDAKICAgIGRpZyA0CiAgICBsZW4KICAgIHVuY292ZXIgNQogICAgdW5jb3ZlciAzCiAgICB1bmNvdmVyIDIKICAgIHN1YnN0cmluZzMKICAgIGV4dHJhY3QgMiAwCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIHRlc3RfdHVwbGUKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYnVpbGRfdHVwbGVfcm91dGVAMzoKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjE1CiAgICAvLyBjbGFzcyBOYW1lZFR1cGxlc0NvbnRyYWN0KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDMKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA0CiAgICBleHRyYWN0IDIgMAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjE2CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdW5jb3ZlciAzCiAgICBpdG9iCiAgICBkaWcgMwogICAgbGVuCiAgICBpbnRjXzIgLy8gNjQKICAgIDw9CiAgICBhc3NlcnQgLy8gb3ZlcmZsb3cKICAgIGludGNfMiAvLyA2NAogICAgYnplcm8KICAgIHVuY292ZXIgNAogICAgYnwKICAgIGNvbmNhdAogICAgZGlnIDIKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgMwogICAgY29uY2F0CiAgICBkdXAKICAgIGxlbgogICAgcHVzaGludCA3NiAvLyA3NgogICAgKwogICAgdW5jb3ZlciAyCiAgICBwdXNoYnl0ZXMgMHgwMDRjCiAgICBjb25jYXQKICAgIGRpZyAzCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICB1bmNvdmVyIDQKICAgIGNvbmNhdAogICAgdW5jb3ZlciAzCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHVuY292ZXIgMgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgMgogICAgc3dhcAogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdANzoKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNQogICAgLy8gY2xhc3MgTmFtZWRUdXBsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDExCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RfY2FzZXMubmFtZWRfdHVwbGVzLmNvbnRyYWN0Lk5hbWVkVHVwbGVzQ29udHJhY3QudGVzdF90dXBsZSh2YWx1ZS5hOiB1aW50NjQsIHZhbHVlLmI6IGJ5dGVzLCB2YWx1ZS5jOiBieXRlcywgdmFsdWUuZDogYnl0ZXMpIC0+IHZvaWQ6CnRlc3RfdHVwbGU6CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzEtMzIKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgdGVzdF90dXBsZShzZWxmLCB2YWx1ZTogVGVzdFR1cGxlKSAtPiBOb25lOgogICAgcHJvdG8gNCAwCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzMKICAgIC8vIGFzc2VydCB2YWx1ZS5hIDwgMTAwMAogICAgZnJhbWVfZGlnIC00CiAgICBwdXNoaW50IDEwMDAgLy8gMTAwMAogICAgPAogICAgYXNzZXJ0CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzQKICAgIC8vIGFzc2VydCB2YWx1ZS5iIDwgMioqNjUKICAgIGZyYW1lX2RpZyAtMwogICAgcHVzaGJ5dGVzIDB4MDIwMDAwMDAwMDAwMDAwMDAwCiAgICBiPAogICAgYXNzZXJ0CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzUKICAgIC8vIGFzc2VydCB2YWx1ZS5jLmJ5dGVzLmxlbmd0aCA+IDEKICAgIGZyYW1lX2RpZyAtMgogICAgbGVuCiAgICBpbnRjXzAgLy8gMQogICAgPgogICAgYXNzZXJ0CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzYKICAgIC8vIGFzc2VydCB2YWx1ZS5kID09IFR4bi5zZW5kZXIuYnl0ZXMKICAgIGZyYW1lX2RpZyAtMQogICAgdHhuIFNlbmRlcgogICAgPT0KICAgIGFzc2VydAogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAQBAMRtBALOCAgRFburOBG+fW/A2GgCOAgA6AAIjQzEZFEQxGEQ2GgFJI1tLAVcIQEsCgUhZSwOBSllLBE8CSwJSVwIASwQVTwVPA08CUlcCAIgAcSJDMRkURDEYRDYaARc2GgI2GgNXAgA2GgRXAgBPAxZLAxUkDkQkr08Eq1BLAhUWVwYCTwNQSRWBTAhPAoACAExQSwMVFlcGAk8EUE8DTFBPAhZXBgJPAkxQTFCABBUffHVMULAiQzEZQP9dMRgURCJDigQAi/yB6AcMRIv9gAkCAAAAAAAAAACkRIv+FSINRIv/MQASRIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}