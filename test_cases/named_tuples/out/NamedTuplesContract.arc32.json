{
    "hints": {
        "build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "TestTuple",
                    "elements": [
                        [
                            "a",
                            "uint64"
                        ],
                        [
                            "b",
                            "uint512"
                        ],
                        [
                            "c",
                            "string"
                        ],
                        [
                            "d",
                            "byte[]"
                        ]
                    ]
                }
            }
        },
        "test_tuple((uint64,uint512,string,byte[]))void": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "value": {
                    "name": "TestTuple",
                    "elements": [
                        [
                            "a",
                            "uint64"
                        ],
                        [
                            "b",
                            "uint512"
                        ],
                        [
                            "c",
                            "string"
                        ],
                        [
                            "d",
                            "byte[]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayA2NCAxCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MTUKICAgIC8vIGNsYXNzIE5hbWVkVHVwbGVzQ29udHJhY3QoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVAOQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQKICAgIHB1c2hieXRlc3MgMHg0NTZlZWFjZSAweDZmOWY1YmYwIC8vIG1ldGhvZCAiYnVpbGRfdHVwbGUodWludDY0LHVpbnQ1MTIsc3RyaW5nLGJ5dGVbXSkodWludDY0LHVpbnQ1MTIsc3RyaW5nLGJ5dGVbXSkiLCBtZXRob2QgInRlc3RfdHVwbGUoKHVpbnQ2NCx1aW50NTEyLHN0cmluZyxieXRlW10pKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBidWlsZF90dXBsZSB0ZXN0X3R1cGxlCiAgICBlcnIKCm1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVAOToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgcmV0dXJuIC8vIG9uIGVycm9yOiBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wICYmIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwoKCi8vIHRlc3RfY2FzZXMubmFtZWRfdHVwbGVzLmNvbnRyYWN0Lk5hbWVkVHVwbGVzQ29udHJhY3QuYnVpbGRfdHVwbGVbcm91dGluZ10oKSAtPiB2b2lkOgpidWlsZF90dXBsZToKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDMKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA0CiAgICBleHRyYWN0IDIgMAogICAgdW5jb3ZlciAzCiAgICBpdG9iCiAgICBkaWcgMwogICAgbGVuCiAgICBpbnRjXzAgLy8gNjQKICAgIDw9CiAgICBhc3NlcnQgLy8gb3ZlcmZsb3cKICAgIGludGNfMCAvLyA2NAogICAgYnplcm8KICAgIHVuY292ZXIgNAogICAgYnwKICAgIGNvbmNhdAogICAgZGlnIDIKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgMwogICAgY29uY2F0CiAgICBzd2FwCiAgICBwdXNoYnl0ZXMgMHgwMDRjCiAgICBjb25jYXQKICAgIGRpZyAxCiAgICBsZW4KICAgIHB1c2hpbnQgNzYgLy8gNzYKICAgICsKICAgIGRpZyAzCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICB1bmNvdmVyIDQKICAgIGNvbmNhdAogICAgc3dhcAogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgMgogICAgc3dhcAogICAgY29uY2F0CiAgICB1bmNvdmVyIDIKICAgIGNvbmNhdAogICAgc3dhcAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLm5hbWVkX3R1cGxlcy5jb250cmFjdC5OYW1lZFR1cGxlc0NvbnRyYWN0LnRlc3RfdHVwbGVbcm91dGluZ10oKSAtPiB2b2lkOgp0ZXN0X3R1cGxlOgogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZHVwCiAgICBwdXNoaW50IDAgLy8gMAogICAgZXh0cmFjdF91aW50NjQKICAgIGRpZyAxCiAgICBleHRyYWN0IDggNjQKICAgIGRpZyAyCiAgICBwdXNoaW50IDcyIC8vIDcyCiAgICBleHRyYWN0X3VpbnQxNgogICAgZGlnIDMKICAgIHB1c2hpbnQgNzQgLy8gNzQKICAgIGV4dHJhY3RfdWludDE2CiAgICBkaWcgNAogICAgdW5jb3ZlciAyCiAgICBkaWcgMgogICAgc3Vic3RyaW5nMwogICAgZXh0cmFjdCAyIDAKICAgIGRpZyA0CiAgICBsZW4KICAgIHVuY292ZXIgNQogICAgdW5jb3ZlciAzCiAgICB1bmNvdmVyIDIKICAgIHN1YnN0cmluZzMKICAgIGV4dHJhY3QgMiAwCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzMKICAgIC8vIGFzc2VydCB2YWx1ZS5hIDwgMTAwMAogICAgdW5jb3ZlciAzCiAgICBwdXNoaW50IDEwMDAgLy8gMTAwMAogICAgPAogICAgYXNzZXJ0CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzQKICAgIC8vIGFzc2VydCB2YWx1ZS5iIDwgMioqNjUKICAgIHVuY292ZXIgMgogICAgcHVzaGJ5dGVzIDB4MDIwMDAwMDAwMDAwMDAwMDAwCiAgICBiPAogICAgYXNzZXJ0CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzUKICAgIC8vIGFzc2VydCB2YWx1ZS5jLmJ5dGVzLmxlbmd0aCA+IDEKICAgIHN3YXAKICAgIGxlbgogICAgaW50Y18xIC8vIDEKICAgID4KICAgIGFzc2VydAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjM2CiAgICAvLyBhc3NlcnQgdmFsdWUuZCA9PSBUeG4uc2VuZGVyLmJ5dGVzCiAgICB0eG4gU2VuZGVyCiAgICA9PQogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "NamedTuplesContract",
        "methods": [
            {
                "name": "build_tuple",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    },
                    {
                        "type": "string",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,uint512,string,byte[])"
                }
            },
            {
                "name": "test_tuple",
                "args": [
                    {
                        "type": "(uint64,uint512,string,byte[])",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}