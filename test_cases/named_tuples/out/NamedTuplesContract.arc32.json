{
    "hints": {
        "build_tuple(uint64,uint512,string,byte[])(uint64,uint512,string,byte[])": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "TestTuple",
                    "elements": [
                        [
                            "a",
                            "uint64"
                        ],
                        [
                            "b",
                            "uint512"
                        ],
                        [
                            "c",
                            "string"
                        ],
                        [
                            "d",
                            "byte[]"
                        ]
                    ]
                }
            }
        },
        "test_tuple((uint64,uint512,string,byte[]))void": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "value": {
                    "name": "TestTuple",
                    "elements": [
                        [
                            "a",
                            "uint64"
                        ],
                        [
                            "b",
                            "uint512"
                        ],
                        [
                            "c",
                            "string"
                        ],
                        [
                            "d",
                            "byte[]"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLm5hbWVkX3R1cGxlcy5jb250cmFjdC5OYW1lZFR1cGxlc0NvbnRyYWN0LmFwcHJvdmFsX3Byb2dyYW06CiAgICBpbnRjYmxvY2sgMSAwIDY0CiAgICBjYWxsc3ViIF9fcHV5YV9hcmM0X3JvdXRlcl9fCiAgICByZXR1cm4KCgovLyB0ZXN0X2Nhc2VzLm5hbWVkX3R1cGxlcy5jb250cmFjdC5OYW1lZFR1cGxlc0NvbnRyYWN0Ll9fcHV5YV9hcmM0X3JvdXRlcl9fKCkgLT4gdWludDY0OgpfX3B1eWFfYXJjNF9yb3V0ZXJfXzoKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNQogICAgLy8gY2xhc3MgTmFtZWRUdXBsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICBwcm90byAwIDEKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzcyAweDQ1NmVlYWNlIDB4NmY5ZjViZjAgLy8gbWV0aG9kICJidWlsZF90dXBsZSh1aW50NjQsdWludDUxMixzdHJpbmcsYnl0ZVtdKSh1aW50NjQsdWludDUxMixzdHJpbmcsYnl0ZVtdKSIsIG1ldGhvZCAidGVzdF90dXBsZSgodWludDY0LHVpbnQ1MTIsc3RyaW5nLGJ5dGVbXSkpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIF9fcHV5YV9hcmM0X3JvdXRlcl9fX2J1aWxkX3R1cGxlX3JvdXRlQDIgX19wdXlhX2FyYzRfcm91dGVyX19fdGVzdF90dXBsZV9yb3V0ZUAzCiAgICBpbnRjXzEgLy8gMAogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19idWlsZF90dXBsZV9yb3V0ZUAyOgogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjE2CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MTUKICAgIC8vIGNsYXNzIE5hbWVkVHVwbGVzQ29udHJhY3QoYXJjNC5BUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwogICAgZXh0cmFjdCAyIDAKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDQKICAgIGV4dHJhY3QgMiAwCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MTYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIGJ1aWxkX3R1cGxlCiAgICB1bmNvdmVyIDMKICAgIGl0b2IKICAgIGRpZyAzCiAgICBsZW4KICAgIGludGNfMiAvLyA2NAogICAgPD0KICAgIGFzc2VydCAvLyBvdmVyZmxvdwogICAgaW50Y18yIC8vIDY0CiAgICBiemVybwogICAgdW5jb3ZlciA0CiAgICBifAogICAgZGlnIDMKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHVuY292ZXIgNAogICAgY29uY2F0CiAgICBkaWcgMwogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgdW5jb3ZlciA0CiAgICBjb25jYXQKICAgIHVuY292ZXIgMwogICAgdW5jb3ZlciAzCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDAwNGMKICAgIGNvbmNhdAogICAgZGlnIDIKICAgIGxlbgogICAgcHVzaGludCA3NiAvLyA3NgogICAgKwogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIGNvbmNhdAogICAgdW5jb3ZlciAyCiAgICBjb25jYXQKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX190ZXN0X3R1cGxlX3JvdXRlQDM6CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNQogICAgLy8gY2xhc3MgTmFtZWRUdXBsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBkdXAKICAgIGV4dHJhY3QgMCA4IC8vIG9uIGVycm9yOiBJbmRleCBhY2Nlc3MgaXMgb3V0IG9mIGJvdW5kcwogICAgYnRvaQogICAgZGlnIDEKICAgIGV4dHJhY3QgOCA2NCAvLyBvbiBlcnJvcjogSW5kZXggYWNjZXNzIGlzIG91dCBvZiBib3VuZHMKICAgIGRpZyAyCiAgICBwdXNoaW50IDcyIC8vIDcyCiAgICBleHRyYWN0X3VpbnQxNgogICAgZGlnIDMKICAgIHB1c2hpbnQgNzQgLy8gNzQKICAgIGV4dHJhY3RfdWludDE2CiAgICBkaWcgNAogICAgdW5jb3ZlciAyCiAgICBkaWcgMgogICAgc3Vic3RyaW5nMwogICAgZXh0cmFjdCAyIDAKICAgIGRpZyA0CiAgICBsZW4KICAgIHVuY292ZXIgNQogICAgdW5jb3ZlciAzCiAgICB1bmNvdmVyIDIKICAgIHN1YnN0cmluZzMKICAgIGV4dHJhY3QgMiAwCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MzEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIHRlc3RfdHVwbGUKICAgIGludGNfMCAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2JhcmVfcm91dGluZ0A2OgogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjE1CiAgICAvLyBjbGFzcyBOYW1lZFR1cGxlc0NvbnRyYWN0KGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19hZnRlcl9pZl9lbHNlQDEwCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHN1YgoKX19wdXlhX2FyYzRfcm91dGVyX19fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxNQogICAgLy8gY2xhc3MgTmFtZWRUdXBsZXNDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICBpbnRjXzEgLy8gMAogICAgcmV0c3ViCgoKLy8gdGVzdF9jYXNlcy5uYW1lZF90dXBsZXMuY29udHJhY3QuTmFtZWRUdXBsZXNDb250cmFjdC5idWlsZF90dXBsZShhOiB1aW50NjQsIGI6IGJ5dGVzLCBjOiBieXRlcywgZDogYnl0ZXMpIC0+IHVpbnQ2NCwgYnl0ZXMsIGJ5dGVzLCBieXRlczoKYnVpbGRfdHVwbGU6CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MTYtMTcKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgYnVpbGRfdHVwbGUoc2VsZiwgYTogVUludDY0LCBiOiBCaWdVSW50LCBjOiBTdHJpbmcsIGQ6IEJ5dGVzKSAtPiBUZXN0VHVwbGU6CiAgICBwcm90byA0IDQKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToxOAogICAgLy8gdDEgPSBzZWxmLmJ1aWxkX3R1cGxlX2J5X25hbWUoYSwgYiwgYywgZCkKICAgIGZyYW1lX2RpZyAtNAogICAgZnJhbWVfZGlnIC0zCiAgICBmcmFtZV9kaWcgLTIKICAgIGZyYW1lX2RpZyAtMQogICAgY2FsbHN1YiBidWlsZF90dXBsZV9ieV9uYW1lCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MTkKICAgIC8vIHQyID0gc2VsZi5idWlsZF90dXBsZV9ieV9wb3NpdGlvbihhLCBiLCBjLCBkKQogICAgZnJhbWVfZGlnIC00CiAgICBmcmFtZV9kaWcgLTMKICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfZGlnIC0xCiAgICBjYWxsc3ViIGJ1aWxkX3R1cGxlX2J5X3Bvc2l0aW9uCiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MjAKICAgIC8vIGFzc2VydCB0MSA9PSB0MgogICAgZGlnIDcKICAgIHVuY292ZXIgNAogICAgPT0KICAgIGRpZyA2CiAgICB1bmNvdmVyIDQKICAgIGI9PQogICAgJiYKICAgIGRpZyA0CiAgICB1bmNvdmVyIDMKICAgID09CiAgICAmJgogICAgZGlnIDIKICAgIHVuY292ZXIgMgogICAgPT0KICAgICYmCiAgICBhc3NlcnQKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToyMQogICAgLy8gcmV0dXJuIHQxCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLm5hbWVkX3R1cGxlcy5jb250cmFjdC5OYW1lZFR1cGxlc0NvbnRyYWN0LmJ1aWxkX3R1cGxlX2J5X25hbWUoYTogdWludDY0LCBiOiBieXRlcywgYzogYnl0ZXMsIGQ6IGJ5dGVzKSAtPiB1aW50NjQsIGJ5dGVzLCBieXRlcywgYnl0ZXM6CmJ1aWxkX3R1cGxlX2J5X25hbWU6CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MjMtMjQKICAgIC8vIEBzdWJyb3V0aW5lCiAgICAvLyBkZWYgYnVpbGRfdHVwbGVfYnlfbmFtZShzZWxmLCBhOiBVSW50NjQsIGI6IEJpZ1VJbnQsIGM6IFN0cmluZywgZDogQnl0ZXMpIC0+IFRlc3RUdXBsZToKICAgIHByb3RvIDQgNAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjI1CiAgICAvLyByZXR1cm4gVGVzdFR1cGxlKGE9YSwgYj1iLCBjPWMsIGQ9ZCkKICAgIGZyYW1lX2RpZyAtNAogICAgZnJhbWVfZGlnIC0zCiAgICBmcmFtZV9kaWcgLTIKICAgIGZyYW1lX2RpZyAtMQogICAgcmV0c3ViCgoKLy8gdGVzdF9jYXNlcy5uYW1lZF90dXBsZXMuY29udHJhY3QuTmFtZWRUdXBsZXNDb250cmFjdC5idWlsZF90dXBsZV9ieV9wb3NpdGlvbihhOiB1aW50NjQsIGI6IGJ5dGVzLCBjOiBieXRlcywgZDogYnl0ZXMpIC0+IHVpbnQ2NCwgYnl0ZXMsIGJ5dGVzLCBieXRlczoKYnVpbGRfdHVwbGVfYnlfcG9zaXRpb246CiAgICAvLyBuYW1lZF90dXBsZXMvY29udHJhY3QucHk6MjctMjgKICAgIC8vIEBzdWJyb3V0aW5lCiAgICAvLyBkZWYgYnVpbGRfdHVwbGVfYnlfcG9zaXRpb24oc2VsZiwgYTogVUludDY0LCBiOiBCaWdVSW50LCBjOiBTdHJpbmcsIGQ6IEJ5dGVzKSAtPiBUZXN0VHVwbGU6CiAgICBwcm90byA0IDQKICAgIC8vIG5hbWVkX3R1cGxlcy9jb250cmFjdC5weToyOQogICAgLy8gcmV0dXJuIFRlc3RUdXBsZShhLCBiLCBjLCBkKQogICAgZnJhbWVfZGlnIC00CiAgICBmcmFtZV9kaWcgLTMKICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfZGlnIC0xCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLm5hbWVkX3R1cGxlcy5jb250cmFjdC5OYW1lZFR1cGxlc0NvbnRyYWN0LnRlc3RfdHVwbGUodmFsdWUuYTogdWludDY0LCB2YWx1ZS5iOiBieXRlcywgdmFsdWUuYzogYnl0ZXMsIHZhbHVlLmQ6IGJ5dGVzKSAtPiB2b2lkOgp0ZXN0X3R1cGxlOgogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjMxLTMyCiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgLy8gZGVmIHRlc3RfdHVwbGUoc2VsZiwgdmFsdWU6IFRlc3RUdXBsZSkgLT4gTm9uZToKICAgIHByb3RvIDQgMAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjMzCiAgICAvLyBhc3NlcnQgdmFsdWUuYSA8IDEwMDAKICAgIGZyYW1lX2RpZyAtNAogICAgcHVzaGludCAxMDAwIC8vIDEwMDAKICAgIDwKICAgIGFzc2VydAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjM0CiAgICAvLyBhc3NlcnQgdmFsdWUuYiA8IDIqKjY1CiAgICBmcmFtZV9kaWcgLTMKICAgIHB1c2hieXRlcyAweDAyMDAwMDAwMDAwMDAwMDAwMAogICAgYjwKICAgIGFzc2VydAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjM1CiAgICAvLyBhc3NlcnQgdmFsdWUuYy5ieXRlcy5sZW5ndGggPiAxCiAgICBmcmFtZV9kaWcgLTIKICAgIGxlbgogICAgaW50Y18wIC8vIDEKICAgID4KICAgIGFzc2VydAogICAgLy8gbmFtZWRfdHVwbGVzL2NvbnRyYWN0LnB5OjM2CiAgICAvLyBhc3NlcnQgdmFsdWUuZCA9PSBUeG4uc2VuZGVyLmJ5dGVzCiAgICBmcmFtZV9kaWcgLTEKICAgIHR4biBTZW5kZXIKICAgID09CiAgICBhc3NlcnQKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLm5hbWVkX3R1cGxlcy5jb250cmFjdC5OYW1lZFR1cGxlc0NvbnRyYWN0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "NamedTuplesContract",
        "methods": [
            {
                "name": "build_tuple",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    },
                    {
                        "type": "string",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,uint512,string,byte[])"
                }
            },
            {
                "name": "test_tuple",
                "args": [
                    {
                        "type": "(uint64,uint512,string,byte[])",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}