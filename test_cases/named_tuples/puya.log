debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=11, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, validate_abi_values=True, validate_abi_dynamic_severity=<LogLevel.warning: 30>, paths=['named_tuples'], resource_encoding='value', output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: writing named_tuples/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'value_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let value_internal%1#1: uint64 = undefined while trying to resolve 'value_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added value_internal%1#0 to Phi node: let value_internal%1#1: uint64 = φ(value_internal%1#0 <- block@4) in block@4
debug: Added value_internal%1#2 to Phi node: let value_internal%1#1: uint64 = φ(value_internal%1#0 <- block@4, value_internal%1#2 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.named_tuples.contract.echo
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple
debug: Sealing block@0
named_tuples/contract.py:26:16 debug: encountered already materialized expression (t1), reusing result: (t1.a#0, t1.b#0, t1.c#0, t1.d#0)
named_tuples/contract.py:26:22 debug: encountered already materialized expression (t2), reusing result: (t2.a#0, t2.b#0, t2.c#0, t2.d#0)
named_tuples/contract.py:26:16 debug: encountered already materialized expression (t1), reusing result: (t1.a#0, t1.b#0, t1.c#0, t1.d#0)
named_tuples/contract.py:26:22 debug: encountered already materialized expression (t2), reusing result: (t2.a#0, t2.b#0, t2.c#0, t2.d#0)
named_tuples/contract.py:26:16 debug: encountered already materialized expression (t1), reusing result: (t1.a#0, t1.b#0, t1.c#0, t1.d#0)
named_tuples/contract.py:26:22 debug: encountered already materialized expression (t2), reusing result: (t2.a#0, t2.b#0, t2.c#0, t2.d#0)
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.test_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.named_tuples.contract.echo
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.000.ssa.ir
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.clear.000.ssa.ir
debug: optimizing approval program of test_cases.named_tuples.contract.NamedTuplesContract at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple for inlining
debug: marking trivial method test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name as inlineable
debug: marking trivial method test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position as inlineable
debug: marking single-use function test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects for inlining
debug: marking single-use function test_cases.named_tuples.contract.NamedTuplesContract.test_tuple for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@11 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@10
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@11 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@7
debug: Removing jump block block@8
debug: branching to block@7 will be replaced with block@9
debug: branching to block@8 will be replaced with block@9
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@12
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create in test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@10 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@11 with block@9 in block@12
debug: Merged linear block@11 into block@9
debug: Merged linear block@12 into block@9
debug: Merged linear block@10 into block@8
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@6
debug: Removing jump block block@7
debug: branching to block@6 will be replaced with block@8
debug: branching to block@7 will be replaced with block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
named_tuples/contract.py:22:6 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.build_tuple in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(uint512)%0#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%4#0, as_Encoded(len+utf8[])%0#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%6#0, as_Encoded(len+uint8[])%0#0
debug: selected tmp%6#0 from equivalence set
debug: Found equivalence set: tmp%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: tmp%3#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%5#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: tmp%7#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: tmp%0#1, t1.a#0, tmp%8#0
debug: selected t1.a#0 from equivalence set
debug: Found equivalence set: tmp%1#1, t1.b#0, tmp%9#0
debug: selected t1.b#0 from equivalence set
debug: Found equivalence set: tmp%2#1, t1.c#0, tmp%10#0
debug: selected t1.c#0 from equivalence set
debug: Found equivalence set: tmp%3#1, t1.d#0, tmp%11#0
debug: selected t1.d#0 from equivalence set
debug: Found equivalence set: tmp%4#1, t2.a#0
debug: selected t2.a#0 from equivalence set
debug: Found equivalence set: tmp%5#1, t2.b#0
debug: selected t2.b#0 from equivalence set
debug: Found equivalence set: tmp%6#1, t2.c#0
debug: selected t2.c#0 from equivalence set
debug: Found equivalence set: tmp%7#1, t2.d#0
debug: selected t2.d#0 from equivalence set
debug: Copy propagation made 20 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* length%0#0 1u) to length%0#0
debug: Simplified (* length%1#0 1u) to length%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
named_tuples/contract.py:37:6 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#1, tmp%0#0
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: tmp%2#1, tmp%1#0
debug: selected tmp%2#1 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%2#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
named_tuples/contract.py:41:6 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.test_tuple in test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value.a#0
debug: selected value.a#0 from equivalence set
debug: Found equivalence set: tmp%4#0, value.b#0
debug: selected value.b#0 from equivalence set
debug: Found equivalence set: tmp%5#0, value.c#0
debug: selected value.c#0 from equivalence set
debug: Found equivalence set: tmp%6#0, value.d#0
debug: selected value.d#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* length%0#0 1u) to length%0#0
debug: Simplified (+ 76u add%0#0) to (+ length%0#0 78u)
debug: Simplified (* length%1#0 1u) to length%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple
debug: Optimizer: Perform Subroutine Inlining
named_tuples/contract.py:24:14 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple
named_tuples/contract.py:25:14 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a#0, a#1, tmp%0#0, t1.a#0, a#2, tmp%4#0, t2.a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: b#0, b#1, tmp%1#0, t1.b#0, b#2, tmp%5#0, t2.b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: c#0, c#1, tmp%2#0, t1.c#0, c#2, tmp%6#0, t2.c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: d#0, d#1, tmp%3#0, t1.d#0, d#2, tmp%7#0, t2.d#0
debug: selected d#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 a#0) to 1u
debug: Simplified (b== b#0 b#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== c#0 c#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== d#0 d#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple
debug: Unused subroutines removed
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name as inlineable
debug: marking trivial method test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position as inlineable
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@2 from goto tmp%4#0 ? block@3 : block@9 to goto block@3
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@6
debug: Replaced predecessor block@3 with block@2 in block@9
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@11 with block@10 in block@12
debug: Merged linear block@11 into block@10
debug: Merged linear block@12 into block@10
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
named_tuples/contract.py:24:14 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
named_tuples/contract.py:25:14 debug: inlining call to test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: length%0#0, mul%0#0
debug: selected length%0#0 from equivalence set
debug: Found equivalence set: length%1#0, mul%1#0
debug: selected length%1#0 from equivalence set
debug: Found equivalence set: a#0, a#1, t1.a#0, a#2, t2.a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: b#0, b#1, t1.b#0, b#2, t2.b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: c#0, c#1, t1.c#0, c#2, t2.c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: d#0, d#1, t1.d#0, d#2, t2.d#0
debug: selected d#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 a#0) to 1u
debug: Simplified (b== b#0 b#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== c#0 c#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (== d#0 d#0) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: length%0#0, mul%0#0
debug: selected length%0#0 from equivalence set
debug: Found equivalence set: length%1#0, mul%1#0
debug: selected length%1#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable add%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_name
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_by_position
debug: removing unused subroutine test_cases.named_tuples.contract.NamedTuplesContract.__algopy_default_create
debug: Unused subroutines removed
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: marking simple function test_cases.named_tuples.contract.echo for inlining (complexity=2 <= threshold=3)
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%9#1
debug: Removing unused variable tmp%10#1
debug: Removing unused variable tmp%11#1
debug: Removing unused variable tmp%12#1
debug: Removing unused variable tmp%13#1
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
named_tuples/contract.py:39:32 debug: inlining call to test_cases.named_tuples.contract.echo in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
named_tuples/contract.py:39:51 debug: inlining call to test_cases.named_tuples.contract.echo in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
named_tuples/contract.py:39:70 debug: inlining call to test_cases.named_tuples.contract.echo in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable value#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable value#2
debug: Removing unused variable tmp%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.named_tuples.contract.echo
debug: Unused subroutines removed
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.named_tuples.contract.NamedTuplesContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.named_tuples.contract.NamedTuplesContract
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.named_tuples.contract.NamedTuplesContract
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.named_tuples.contract.NamedTuplesContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, length%0#0
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, length%1#0
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%0#0, aggregate%as_Encoded(uint512)%0#0
debug: selected aggregate%arc4_encoded%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,uint512,(len+utf8[]),(len+uint8[]))%0#0, tmp%12#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x004c
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%value_len%0#0: uint64 = (len b#0) with copy of existing registers [Register(source_location=named_tuples/contract.py:22:5-21, ir_type=uint64, name='len%1', version=0)]
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: len%1#0, aggregate%value_len%0#0
debug: selected len%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(uint64,uint64,uint64)%0#0, tmp%3#0
debug: selected aggregate%head%2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (concat aggregate%val_as_bytes%0#0 aggregate%val_as_bytes%1#0) to 0x00000000000000020000000000000003
debug: Simplified (concat 0x00000000000000020000000000000003 aggregate%val_as_bytes%2#0) to 0x000000000000000200000000000000030000000000000001
debug: Simplified (concat 0x151f7c75 0x000000000000000200000000000000030000000000000001) to 0x151f7c75000000000000000200000000000000030000000000000001
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%val_as_bytes%0#0: bytes[8] = (itob 2u) with copy of existing registers [Register(source_location=named_tuples/contract.py:51:8-13, ir_type=bytes, name='tmp%0', version=3)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%1#0: bytes[8] = (itob 3u) with copy of existing registers [Register(source_location=named_tuples/contract.py:51:8-13, ir_type=bytes, name='tmp%0', version=4)]
debug: Replacing redundant declaration let aggregate%val_as_bytes%2#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=named_tuples/contract.py:51:8-13, ir_type=bytes, name='tmp%0', version=2)]
debug: Found equivalence set: tmp%0#3, aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected tmp%0#3 from equivalence set
debug: Found equivalence set: tmp%0#4, aggregate%val_as_bytes%1#0
debug: selected tmp%0#4 from equivalence set
debug: Found equivalence set: tmp%0#2, aggregate%val_as_bytes%2#0
debug: selected tmp%0#2 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%substring3%0#0, tmp%1#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, length%0#0
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, tmp%2#0
debug: selected aggregate%substring3%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, length%1#0
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%item0%0#0, value.a#0
debug: selected value.a#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, value.b#0
debug: selected value.b#0 from equivalence set
debug: Found equivalence set: aggregate%item2%0#0, value.c#0
debug: selected value.c#0 from equivalence set
debug: Found equivalence set: aggregate%item3%0#0, value.d#0
debug: selected value.d#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 tmp%0#0 0u)
debug: Simplified (extract3 tmp%0#0 0u 8u) to ((extract 0 8) tmp%0#0)
debug: Simplified (extract3 tmp%0#0 8u 64u) to ((extract 8 64) tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%extract_uint16%0#0: uint64 = (extract_uint16 tmp%0#0 72u) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='extract_uint16%0', version=0)]
debug: Replacing redundant declaration let extract_uint16%1#0: uint64 = (extract_uint16 tmp%0#0 74u) // on error: invalid tuple encoding with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%2#0: uint64 = (extract_uint16 tmp%0#0 74u) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let len%0#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='aggregate%len%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%3#0: uint64 = (extract_uint16 tmp%0#0 72u) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='extract_uint16%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%4#0: uint64 = (extract_uint16 tmp%0#0 74u) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%5#0: uint64 = (extract_uint16 tmp%0#0 74u) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%len%1#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=uint64, name='aggregate%len%0', version=0)]
debug: Found equivalence set: extract_uint16%0#0, aggregate%extract_uint16%0#0, aggregate%extract_uint16%3#0
debug: selected extract_uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%extract_uint16%1#0, extract_uint16%1#0, aggregate%extract_uint16%2#0, aggregate%extract_uint16%4#0, aggregate%extract_uint16%5#0
debug: selected aggregate%extract_uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%len%0#0, len%0#0, aggregate%len%1#0
debug: selected aggregate%len%0#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Replacing redundant declaration let aggregate%substring3%2#0: bytes = (substring3 tmp%0#0 extract_uint16%0#0 aggregate%extract_uint16%1#0) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=bytes, name='aggregate%substring3%0', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%3#0: bytes = (substring3 tmp%0#0 aggregate%extract_uint16%1#0 aggregate%len%0#0) with copy of existing registers [Register(source_location=named_tuples/contract.py:41:5-21, ir_type=bytes, name='aggregate%substring3%1', version=0)]
debug: Found equivalence set: aggregate%substring3%0#0, aggregate%substring3%2#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%1#0, aggregate%substring3%3#0
debug: selected aggregate%substring3%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable tmp%4#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.named_tuples.contract.NamedTuplesContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.named_tuples.contract.NamedTuplesContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
named_tuples/contract.py:22:6 debug: auto reserving slots in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing], []
named_tuples/contract.py:37:6 debug: auto reserving slots in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing], []
named_tuples/contract.py:41:6 debug: auto reserving slots in test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing], []
debug: Slot allocation not required
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.named_tuples.contract.NamedTuplesContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: splitting critical edge block@2->block@9
debug: Replaced predecessor block@2 with block@11 in block@9
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@11
debug: branching to block@11 will be replaced with block@9
debug: Performing SSA IR destructuring for test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing] using strategy 'root_operand'
debug: Coalescing tmp%0#2 with [tmp%0#3, tmp%0#4]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]
debug: Performing post-SSA optimizations at level 1
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to named_tuples/out/NamedTuplesContract.ir/NamedTuplesContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_abi_routing@2.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_abi_routing@2.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_abi_routing@2.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_abi_routing@2.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_abi_routing@2.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_abi_routing@2.ops[20]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main___algopy_default_create@10.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main___algopy_default_create@10.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@10.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@10.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@10.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@10.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@10.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@10.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@10.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@10.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted build_tuple_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced build_tuple_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted build_tuple_block@0.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced build_tuple_block@0.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted build_tuple_block@0.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced build_tuple_block@0.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted build_tuple_block@0.ops[18]: 'l-store-copy b#0 0'
debug: Replaced build_tuple_block@0.ops[20]: 'v-load b#0' with 'l-load b#0'
debug: Inserted build_tuple_block@0.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced build_tuple_block@0.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted build_tuple_block@0.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced build_tuple_block@0.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted build_tuple_block@0.ops[32]: 'l-store-copy tmp%4#0 0'
debug: Replaced build_tuple_block@0.ops[34]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted build_tuple_block@0.ops[37]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced build_tuple_block@0.ops[39]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted build_tuple_block@0.ops[45]: 'l-store-copy len%2#0 0'
debug: Replaced build_tuple_block@0.ops[47]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted build_tuple_block@0.ops[50]: 'l-store-copy eq%2#0 0'
debug: Replaced build_tuple_block@0.ops[52]: 'v-load eq%2#0' with 'l-load eq%2#0'
debug: Inserted build_tuple_block@0.ops[58]: 'l-store-copy tmp%6#0 0'
debug: Replaced build_tuple_block@0.ops[60]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted build_tuple_block@0.ops[63]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced build_tuple_block@0.ops[65]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted build_tuple_block@0.ops[71]: 'l-store-copy len%3#0 0'
debug: Replaced build_tuple_block@0.ops[73]: 'v-load len%3#0' with 'l-load len%3#0'
debug: Inserted build_tuple_block@0.ops[76]: 'l-store-copy eq%3#0 0'
debug: Replaced build_tuple_block@0.ops[78]: 'v-load eq%3#0' with 'l-load eq%3#0'
debug: Inserted build_tuple_block@0.ops[89]: 'l-store-copy aggregate%len_ok%0#0 0'
debug: Replaced build_tuple_block@0.ops[91]: 'v-load aggregate%len_ok%0#0' with 'l-load aggregate%len_ok%0#0'
debug: Inserted build_tuple_block@0.ops[106]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced build_tuple_block@0.ops[108]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted build_tuple_block@0.ops[110]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced build_tuple_block@0.ops[112]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted build_tuple_block@0.ops[114]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced build_tuple_block@0.ops[116]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted build_tuple_block@0.ops[133]: 'l-store-copy aggregate%length%1#0 0'
debug: Replaced build_tuple_block@0.ops[135]: 'v-load aggregate%length%1#0' with 'l-load aggregate%length%1#0'
debug: Inserted build_tuple_block@0.ops[137]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced build_tuple_block@0.ops[139]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted build_tuple_block@0.ops[141]: 'l-store-copy aggregate%length_uint16%1#0 0'
debug: Replaced build_tuple_block@0.ops[143]: 'v-load aggregate%length_uint16%1#0' with 'l-load aggregate%length_uint16%1#0'
debug: Inserted build_tuple_block@0.ops[149]: 'l-store-copy aggregate%as_bytes%3#0 0'
debug: Replaced build_tuple_block@0.ops[151]: 'v-load aggregate%as_bytes%3#0' with 'l-load aggregate%as_bytes%3#0'
debug: Inserted build_tuple_block@0.ops[157]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced build_tuple_block@0.ops[159]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted build_tuple_block@0.ops[162]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced build_tuple_block@0.ops[164]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted build_tuple_block@0.ops[171]: 'l-store-copy tmp%13#0 0'
debug: Replaced build_tuple_block@0.ops[173]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted build_tuple_block@0.ops[95]: 'l-store-copy aggregate%bzero%0#0 0'
debug: Replaced build_tuple_block@0.ops[98]: 'v-load aggregate%bzero%0#0' with 'l-load aggregate%bzero%0#0'
debug: Inserted build_tuple_block@0.ops[100]: 'l-store-copy aggregate%arc4_encoded%0#0 0'
debug: Replaced build_tuple_block@0.ops[103]: 'v-load aggregate%arc4_encoded%0#0' with 'l-load aggregate%arc4_encoded%0#0'
debug: Inserted build_tuple_block@0.ops[128]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced build_tuple_block@0.ops[131]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted build_tuple_block@0.ops[156]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced build_tuple_block@0.ops[159]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted build_tuple_block@0.ops[171]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced build_tuple_block@0.ops[174]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted build_tuple_block@0.ops[42]: 'l-store-copy add%0#0 0'
debug: Replaced build_tuple_block@0.ops[49]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted build_tuple_block@0.ops[69]: 'l-store-copy add%1#0 0'
debug: Replaced build_tuple_block@0.ops[76]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted build_tuple_block@0.ops[123]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced build_tuple_block@0.ops[129]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted build_tuple_block@0.ops[35]: 'l-store-copy tmp%4#0 0'
debug: Replaced build_tuple_block@0.ops[45]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted build_tuple_block@0.ops[63]: 'l-store-copy tmp%6#0 0'
debug: Replaced build_tuple_block@0.ops[73]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted build_tuple_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced build_tuple_block@0.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted build_tuple_block@0.ops[47]: 'l-store-copy tmp%4#0 1'
debug: Replaced build_tuple_block@0.ops[58]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted build_tuple_block@0.ops[76]: 'l-store-copy tmp%6#0 1'
debug: Replaced build_tuple_block@0.ops[87]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted build_tuple_block@0.ops[114]: 'l-store-copy c#0 0'
debug: Replaced build_tuple_block@0.ops[127]: 'v-load c#0' with 'l-load c#0'
debug: Inserted build_tuple_block@0.ops[144]: 'l-store-copy d#0 0'
debug: Replaced build_tuple_block@0.ops[157]: 'v-load d#0' with 'l-load d#0'
debug: Inserted build_tuple_block@0.ops[92]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced build_tuple_block@0.ops[110]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted build_tuple_block@0.ops[113]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced build_tuple_block@0.ops[133]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted build_tuple_block@0.ops[144]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced build_tuple_block@0.ops[163]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted build_tuple_block@0.ops[162]: 'l-store-copy aggregate%encoded_value%1#0 1'
debug: Replaced build_tuple_block@0.ops[183]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted build_tuple_block@0.ops[136]: 'l-store-copy aggregate%head%2#0 1'
debug: Replaced build_tuple_block@0.ops[173]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted build_tuple_block@0.ops[139]: 'l-store-copy aggregate%encoded_value%0#0 1'
debug: Replaced build_tuple_block@0.ops[180]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted build_tuple_block@0.ops[60]: 'l-store-copy c#0 0'
debug: Replaced build_tuple_block@0.ops[116]: 'v-load c#0' with 'l-load c#0'
debug: Inserted build_tuple_block@0.ops[90]: 'l-store-copy d#0 1'
debug: Replaced build_tuple_block@0.ops[150]: 'v-load d#0' with 'l-load d#0'
debug: Inserted build_tuple_block@0.ops[26]: 'l-store-copy len%1#0 0'
debug: Replaced build_tuple_block@0.ops[97]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted build_tuple_block@0.ops[17]: 'l-store-copy a#0 0'
debug: Replaced build_tuple_block@0.ops[94]: 'v-load a#0' with 'l-load a#0'
debug: Inserted build_tuple_block@0.ops[23]: 'l-store-copy b#0 1'
debug: Replaced build_tuple_block@0.ops[110]: 'v-load b#0' with 'l-load b#0'
debug: Inserted build_tuple_side_effects_block@0.ops[2]: 'l-store-copy tmp%0#2 0'
debug: Replaced build_tuple_side_effects_block@0.ops[4]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted build_tuple_side_effects_block@0.ops[8]: 'l-store-copy tmp%0#2 0'
debug: Replaced build_tuple_side_effects_block@0.ops[10]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted build_tuple_side_effects_block@0.ops[14]: 'l-store-copy tmp%0#2 0'
debug: Replaced build_tuple_side_effects_block@0.ops[16]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted test_tuple_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_tuple_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[6]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced test_tuple_block@0.ops[8]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted test_tuple_block@0.ops[11]: 'l-store-copy eq%0#0 0'
debug: Replaced test_tuple_block@0.ops[13]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted test_tuple_block@0.ops[23]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced test_tuple_block@0.ops[25]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted test_tuple_block@0.ops[28]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced test_tuple_block@0.ops[30]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted test_tuple_block@0.ops[37]: 'l-store-copy eq%1#0 0'
debug: Replaced test_tuple_block@0.ops[39]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted test_tuple_block@0.ops[48]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced test_tuple_block@0.ops[50]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted test_tuple_block@0.ops[53]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced test_tuple_block@0.ops[55]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted test_tuple_block@0.ops[66]: 'l-store-copy eq%2#0 0'
debug: Replaced test_tuple_block@0.ops[68]: 'v-load eq%2#0' with 'l-load eq%2#0'
debug: Inserted test_tuple_block@0.ops[86]: 'l-store-copy tmp%0#1 0'
debug: Replaced test_tuple_block@0.ops[88]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted test_tuple_block@0.ops[93]: 'l-store-copy tmp%1#1 0'
debug: Replaced test_tuple_block@0.ops[95]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted test_tuple_block@0.ops[99]: 'l-store-copy tmp%2#1 0'
debug: Replaced test_tuple_block@0.ops[101]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted test_tuple_block@0.ops[104]: 'l-store-copy tmp%3#1 0'
debug: Replaced test_tuple_block@0.ops[106]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted test_tuple_block@0.ops[113]: 'l-store-copy tmp%5#1 0'
debug: Replaced test_tuple_block@0.ops[115]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted test_tuple_block@0.ops[33]: 'l-store-copy add%1#0 0'
debug: Replaced test_tuple_block@0.ops[36]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted test_tuple_block@0.ops[59]: 'l-store-copy add%2#0 0'
debug: Replaced test_tuple_block@0.ops[62]: 'v-load add%2#0' with 'l-load add%2#0'
debug: Inserted test_tuple_block@0.ops[64]: 'l-store-copy add%3#0 0'
debug: Replaced test_tuple_block@0.ops[67]: 'v-load add%3#0' with 'l-load add%3#0'
debug: Inserted test_tuple_block@0.ops[112]: 'l-store-copy tmp%4#1 0'
debug: Replaced test_tuple_block@0.ops[115]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted test_tuple_block@0.ops[18]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced test_tuple_block@0.ops[22]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted test_tuple_block@0.ops[44]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_tuple_block@0.ops[47]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[46]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced test_tuple_block@0.ops[50]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted test_tuple_block@0.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_tuple_block@0.ops[21]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[78]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_tuple_block@0.ops[82]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_tuple_block@0.ops[16]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[39]: 'l-store-copy aggregate%extract_uint16%1#0 1'
debug: Replaced test_tuple_block@0.ops[52]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted test_tuple_block@0.ops[83]: 'l-store-copy value.a#0 1'
debug: Replaced test_tuple_block@0.ops[94]: 'v-load value.a#0' with 'l-load value.a#0'
debug: Inserted test_tuple_block@0.ops[10]: 'l-store-copy extract_uint16%0#0 1'
debug: Replaced test_tuple_block@0.ops[24]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted test_tuple_block@0.ops[26]: 'l-store-copy aggregate%extract_uint16%1#0 2'
debug: Replaced test_tuple_block@0.ops[40]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted test_tuple_block@0.ops[89]: 'l-store-copy value.b#0 1'
debug: Replaced test_tuple_block@0.ops[104]: 'v-load value.b#0' with 'l-load value.b#0'
debug: Inserted test_tuple_block@0.ops[56]: 'l-store-copy aggregate%len%0#0 2'
debug: Replaced test_tuple_block@0.ops[75]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted test_tuple_block@0.ops[94]: 'l-store-copy value.c#0 2'
debug: Replaced test_tuple_block@0.ops[113]: 'v-load value.c#0' with 'l-load value.c#0'
debug: Inserted test_tuple_block@0.ops[24]: 'l-store-copy tmp%0#0 2'
debug: Replaced test_tuple_block@0.ops[49]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[44]: 'l-store-copy add%1#0 3'
debug: Replaced test_tuple_block@0.ops[72]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted test_tuple_block@0.ops[56]: 'l-store-copy tmp%0#0 3'
debug: Replaced test_tuple_block@0.ops[85]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_tuple_block@0.ops[101]: 'l-store-copy value.d#0 3'
debug: Replaced test_tuple_block@0.ops[131]: 'v-load value.d#0' with 'l-load value.d#0'
debug: Inserted test_tuple_block@0.ops[64]: 'l-store-copy aggregate%substring3%1#0 3'
debug: Replaced test_tuple_block@0.ops[100]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted test_tuple_block@0.ops[32]: 'l-store-copy aggregate%substring3%0#0 2'
debug: Replaced test_tuple_block@0.ops[97]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Found 2 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
named_tuples/contract.py:22:6 debug: optimizing TEAL subroutine ops test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]() -> void:
named_tuples/contract.py:37:6 debug: optimizing TEAL subroutine ops test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]() -> void:
named_tuples/contract.py:41:6 debug: optimizing TEAL subroutine ops test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]() -> void:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_if_else@9` with `err`
debug: replacing `b main_after_if_else@9` with `err`
debug: replacing `b main_after_if_else@9` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_if_else@9 into main
debug: removing jump-chain block main_build_tuple_route@4
debug: removing jump-chain block main_build_tuple_side_effects_route@5
debug: removing jump-chain block main_test_tuple_route@6
debug: branching to main_build_tuple_route@4 will be replaced with build_tuple
debug: branching to main_build_tuple_side_effects_route@5 will be replaced with build_tuple_side_effects
debug: branching to main_test_tuple_route@6 will be replaced with test_tuple
named_tuples/contract.py:22:6 debug: optimizing TEAL subroutine blocks test_cases.named_tuples.contract.NamedTuplesContract.build_tuple[routing]() -> void:
debug: inlining single reference block build_tuple_block@0 into build_tuple
named_tuples/contract.py:37:6 debug: optimizing TEAL subroutine blocks test_cases.named_tuples.contract.NamedTuplesContract.build_tuple_side_effects[routing]() -> void:
debug: inlining single reference block build_tuple_side_effects_block@0 into build_tuple_side_effects
named_tuples/contract.py:41:6 debug: optimizing TEAL subroutine blocks test_cases.named_tuples.contract.NamedTuplesContract.test_tuple[routing]() -> void:
debug: inlining single reference block test_tuple_block@0 into test_tuple
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing named_tuples/out/NamedTuplesContract.arc56.json
info: Writing named_tuples/out/NamedTuplesContract.approval.teal
info: Writing named_tuples/out/NamedTuplesContract.clear.teal
info: Writing named_tuples/out/NamedTuplesContract.approval.bin
info: Writing named_tuples/out/NamedTuplesContract.clear.bin
info: Writing named_tuples/out/NamedTuplesContract.approval.stats.txt
info: Writing named_tuples/out/NamedTuplesContract.clear.stats.txt
info: Writing named_tuples/out/NamedTuplesContract.approval.puya.map
info: Writing named_tuples/out/NamedTuplesContract.clear.puya.map
info: writing named_tuples/out/client_NamedTuplesContract.py