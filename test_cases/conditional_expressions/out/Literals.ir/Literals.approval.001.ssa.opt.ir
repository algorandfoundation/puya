main test_cases.conditional_expressions.literals.Literals.approval_program:
    block@0: // L5
        test_cases.conditional_expressions.literals.Literals.with_variable_condition(0u)
        test_cases.conditional_expressions.literals.Literals.with_variable_condition(1u)
        return 1u

subroutine test_cases.conditional_expressions.literals.Literals.with_variable_condition(condition: bool) -> void:
    block@0: // L14
        let tmp%1#0: bool = 1u
        let tmp%2#0: bool = 1u
        let select%2#0: uint64 = (! condition#0)
        let y#0: uint64 = (+ condition#0 select%2#0)
        let y2#0: uint64 = (+ select%2#0 condition#0)
        let tmp%5#0: bool = (== y#0 1u)
        (assert tmp%5#0)
        let tmp%6#0: bool = (== y2#0 1u)
        (assert tmp%6#0)
        let maybe#0: bool = (> y#0 condition#0)
        let tmp%9#0: bool = (== maybe#0 select%2#0)
        (assert tmp%9#0)
        let select%5#0: bool = 1u
        return 