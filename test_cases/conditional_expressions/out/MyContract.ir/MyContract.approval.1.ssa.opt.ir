main test_cases.conditional_expressions.contract.MyContract.approval_program:
    block@0: // L7
        (log "expensive_op")
        (log "side_effecting_op")
        let ternary_result%0#1: uint64 = 1u
        goto block@3
    block@3: // ternary_merge_L14
        (log "expensive_op")
        let ternary_result%1#0: uint64 = 3u
        goto block@6
    block@6: // ternary_merge_L15
        (log "side_effecting_op")
        let ternary_result%2#0: uint64 = 0u
        goto block@9
    block@9: // ternary_merge_L17
        (log "side_effecting_op")
        (log "expensive_op")
        let ternary_result%3#1: uint64 = 3u
        goto block@12
    block@12: // ternary_merge_L18
        let ternary_result%4#1: uint64 = (+ 1u ternary_result%0#1)
        goto block@15
    block@15: // ternary_merge_L20
        let tmp%10#0: uint64 = (* 2u ternary_result%1#0)
        let tmp%11#0: uint64 = (* tmp%10#0 ternary_result%3#1)
        let tmp%12#0: uint64 = (- tmp%11#0 ternary_result%0#1)
        let tmp%13#0: uint64 = (- tmp%12#0 ternary_result%2#0)
        let result#0: uint64 = (+ tmp%13#0 ternary_result%4#1)
        let tmp%14#0: bytes = (itob result#0)
        (log tmp%14#0)
        return result#0