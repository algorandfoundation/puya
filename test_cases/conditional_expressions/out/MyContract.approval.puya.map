{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCY;AAAJ;AAMI;AAAJ;AANI;AAAJ;AAMI;AAAJ;AAAI;AAAJ;AANI;AAAJ;AAZS;;AAEL;AAAJ;AAFS;;AAIT",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.conditional_expressions.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock \"expensive_op\" \"side_effecting_op\""
    },
    "34": {
      "op": "bytec_0 // \"expensive_op\"",
      "defined_out": [
        "\"expensive_op\""
      ],
      "stack_out": [
        "\"expensive_op\""
      ]
    },
    "35": {
      "op": "log",
      "stack_out": []
    },
    "36": {
      "op": "bytec_1 // \"side_effecting_op\"",
      "defined_out": [
        "\"side_effecting_op\""
      ],
      "stack_out": [
        "\"side_effecting_op\""
      ]
    },
    "37": {
      "op": "log",
      "stack_out": []
    },
    "38": {
      "op": "bytec_0 // \"expensive_op\"",
      "stack_out": [
        "\"expensive_op\""
      ]
    },
    "39": {
      "op": "log",
      "stack_out": []
    },
    "40": {
      "op": "bytec_1 // \"side_effecting_op\"",
      "stack_out": [
        "\"side_effecting_op\""
      ]
    },
    "41": {
      "op": "log",
      "stack_out": []
    },
    "42": {
      "op": "bytec_1 // \"side_effecting_op\"",
      "stack_out": [
        "\"side_effecting_op\""
      ]
    },
    "43": {
      "op": "log",
      "stack_out": []
    },
    "44": {
      "op": "bytec_0 // \"expensive_op\"",
      "stack_out": [
        "\"expensive_op\""
      ]
    },
    "45": {
      "op": "log",
      "stack_out": []
    },
    "46": {
      "op": "pushint 19 // 19",
      "defined_out": [
        "19"
      ],
      "stack_out": [
        "19"
      ]
    },
    "48": {
      "op": "itob",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "49": {
      "op": "log",
      "stack_out": []
    },
    "50": {
      "op": "pushint 19 // 19",
      "stack_out": [
        "19"
      ]
    },
    "52": {
      "op": "return",
      "stack_out": []
    }
  }
}