// Op                                                     // Op Description                                 Stack (out)                                                                                                      X stack Source code                                                         Source line

#pragma version 8

// test_cases.conditional_expressions.contract.MyContract.approval_program() -> uint64:
main:
        byte ""
        dupn 5                                            // allocate 6 to stack                            (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0 |

main_block@0:
        int 0                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0 | 0                                                               0                                                                   File "conditional_expressions/contract.py", line 14
        callsub expensive_op                              //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0 | {expensive_op}                                                  self.expensive_op(UInt64(0))                                        File "conditional_expressions/contract.py", line 14
        dup                                               // store awst_tmp%2#0 to l-stack (copy)           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0 | awst_tmp%2#0,awst_tmp%2#0                                       self.expensive_op(UInt64(0))                                        File "conditional_expressions/contract.py", line 14
        swap                                              // store awst_tmp%2#0 to f-stack                  (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%2#0                                       self.expensive_op(UInt64(0))                                        File "conditional_expressions/contract.py", line 14
        bz main_ternary_false@8                           //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.expensive_op(UInt64(0)) or self.side_effecting_op(UInt64(1))   File "conditional_expressions/contract.py", line 14
        // Implicit fall through to main_ternary_true@7   //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.expensive_op(UInt64(0)) or self.side_effecting_op(UInt64(1))   File "conditional_expressions/contract.py", line 14

main_ternary_true@7:
        dup                                               // load awst_tmp%2#0 from f-stack                 (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%2#0                                       self.expensive_op(UInt64(0))                                        File "conditional_expressions/contract.py", line 14
        bury 4                                            // store e#0 to f-stack                           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    e                                                                   File "conditional_expressions/contract.py", line 14
        b main_ternary_merge@9                            //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |

main_ternary_false@8:
        int 1                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 1                                                  1                                                                   File "conditional_expressions/contract.py", line 14
        callsub side_effecting_op                         //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {side_effecting_op}                                self.side_effecting_op(UInt64(1))                                   File "conditional_expressions/contract.py", line 14
        bury 4                                            // store e#0 to f-stack                           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    e                                                                   File "conditional_expressions/contract.py", line 14
        // Implicit fall through to main_ternary_merge@9  //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |

main_ternary_merge@9:
        int 3                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 3                                                  3                                                                   File "conditional_expressions/contract.py", line 15
        callsub expensive_op                              //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {expensive_op}                                     self.expensive_op(UInt64(3))                                        File "conditional_expressions/contract.py", line 15
        dup                                               // store awst_tmp%4#0 to l-stack (copy)           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%4#0,awst_tmp%4#0                          self.expensive_op(UInt64(3))                                        File "conditional_expressions/contract.py", line 15
        bury 8                                            // store awst_tmp%4#0 to f-stack                  (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%4#0                                       self.expensive_op(UInt64(3))                                        File "conditional_expressions/contract.py", line 15
        bz main_ternary_false@11                          //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.expensive_op(UInt64(3)) or self.side_effecting_op(UInt64(42))  File "conditional_expressions/contract.py", line 15
        // Implicit fall through to main_ternary_true@10  //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.expensive_op(UInt64(3)) or self.side_effecting_op(UInt64(42))  File "conditional_expressions/contract.py", line 15

main_ternary_true@10:
        dig 6                                             // load awst_tmp%4#0 from f-stack                 (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%4#0                                       self.expensive_op(UInt64(3))                                        File "conditional_expressions/contract.py", line 15
        bury 3                                            // store f#0 to f-stack                           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    f                                                                   File "conditional_expressions/contract.py", line 15
        b main_ternary_merge@12                           //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |

main_ternary_false@11:
        int 42                                            //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 42                                                 42                                                                  File "conditional_expressions/contract.py", line 15
        callsub side_effecting_op                         //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {side_effecting_op}                                self.side_effecting_op(UInt64(42))                                  File "conditional_expressions/contract.py", line 15
        bury 3                                            // store f#0 to f-stack                           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    f                                                                   File "conditional_expressions/contract.py", line 15
        // Implicit fall through to main_ternary_merge@12 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |

main_ternary_merge@12:
        int 0                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 0                                                  0                                                                   File "conditional_expressions/contract.py", line 17
        callsub side_effecting_op                         //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {side_effecting_op}                                self.side_effecting_op(UInt64(0))                                   File "conditional_expressions/contract.py", line 17
        dup                                               // store awst_tmp%6#0 to l-stack (copy)           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%6#0,awst_tmp%6#0                          self.side_effecting_op(UInt64(0))                                   File "conditional_expressions/contract.py", line 17
        bury 7                                            // store awst_tmp%6#0 to f-stack                  (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%6#0                                       self.side_effecting_op(UInt64(0))                                   File "conditional_expressions/contract.py", line 17
        bnz main_ternary_false@14                         //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.side_effecting_op(UInt64(0)) and self.expensive_op(UInt64(42)) File "conditional_expressions/contract.py", line 17
        // Implicit fall through to main_ternary_true@13  //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.side_effecting_op(UInt64(0)) and self.expensive_op(UInt64(42)) File "conditional_expressions/contract.py", line 17

main_ternary_true@13:
        dig 5                                             // load awst_tmp%6#0 from f-stack                 (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%6#0                                       self.side_effecting_op(UInt64(0))                                   File "conditional_expressions/contract.py", line 17
        bury 2                                            // store g#0 to f-stack                           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    g                                                                   File "conditional_expressions/contract.py", line 17
        b main_ternary_merge@15                           //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |

main_ternary_false@14:
        int 42                                            //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 42                                                 42                                                                  File "conditional_expressions/contract.py", line 17
        callsub expensive_op                              //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {expensive_op}                                     self.expensive_op(UInt64(42))                                       File "conditional_expressions/contract.py", line 17
        bury 2                                            // store g#0 to f-stack                           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    g                                                                   File "conditional_expressions/contract.py", line 17
        // Implicit fall through to main_ternary_merge@15 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |

main_ternary_merge@15:
        int 2                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 2                                                  2                                                                   File "conditional_expressions/contract.py", line 18
        callsub side_effecting_op                         //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {side_effecting_op}                                self.side_effecting_op(UInt64(2))                                   File "conditional_expressions/contract.py", line 18
        dup                                               // store awst_tmp%8#0 to l-stack (copy)           (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%8#0,awst_tmp%8#0                          self.side_effecting_op(UInt64(2))                                   File "conditional_expressions/contract.py", line 18
        bury 6                                            // store awst_tmp%8#0 to f-stack                  (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%8#0                                       self.side_effecting_op(UInt64(2))                                   File "conditional_expressions/contract.py", line 18
        bnz main_ternary_false@17                         //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.side_effecting_op(UInt64(2)) and self.expensive_op(UInt64(3))  File "conditional_expressions/contract.py", line 18
        // Implicit fall through to main_ternary_true@16  //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    self.side_effecting_op(UInt64(2)) and self.expensive_op(UInt64(3))  File "conditional_expressions/contract.py", line 18

main_ternary_true@16:
        dig 4                                             // load awst_tmp%8#0 from f-stack                 (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | awst_tmp%8#0                                       self.side_effecting_op(UInt64(2))                                   File "conditional_expressions/contract.py", line 18
        b main_ternary_merge@18                           //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 |                                  h#0

main_ternary_false@17:
        int 3                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | 3                                                  3                                                                   File "conditional_expressions/contract.py", line 18
        callsub expensive_op                              //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {expensive_op}                                     self.expensive_op(UInt64(3))                                        File "conditional_expressions/contract.py", line 18
        // Implicit fall through to main_ternary_merge@18 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 |                                  h#0

main_ternary_merge@18:
        int 1                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | 1                                h#0     1                                                                   File "conditional_expressions/contract.py", line 8
        dig 5                                             // load e#0 from f-stack                          (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | 1,e#0                                    e                                                                   File "conditional_expressions/contract.py", line 14
        dup
        cover 2                                           // store e#0 to l-stack (copy)                    (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | e#0,1,e#0                                e                                                                   File "conditional_expressions/contract.py", line 14
        +                                                 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | e#0,{+}                                  d + e                                                               File "conditional_expressions/contract.py", line 20
        swap                                              // store ternary_result%11#1 to l-stack (no copy) (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | ternary_result%11#1,e#0                  d + e                                                               File "conditional_expressions/contract.py", line 20
        int 2                                             //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | ternary_result%11#1,e#0,2                2                                                                   File "conditional_expressions/contract.py", line 9
        dig 6                                             // load f#0 from f-stack                          (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | ternary_result%11#1,e#0,2,f#0            f                                                                   File "conditional_expressions/contract.py", line 15
        *                                                 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | (ùïè) h#0 | ternary_result%11#1,e#0,{*}              a * b * c * d * f                                                   File "conditional_expressions/contract.py", line 22
        uncover 3                                         // load h#0 from x-stack                          (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | ternary_result%11#1,e#0,tmp%15#0,h#0               h                                                                   File "conditional_expressions/contract.py", line 18
        *                                                 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | ternary_result%11#1,e#0,{*}                        a * b * c * d * f * h                                               File "conditional_expressions/contract.py", line 22
        swap                                              // load e#0 from l-stack (no copy)                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | ternary_result%11#1,tmp%16#0,e#0                   e                                                                   File "conditional_expressions/contract.py", line 14
        -                                                 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | ternary_result%11#1,{-}                            a * b * c * d * f * h - e                                           File "conditional_expressions/contract.py", line 22
        dig 3                                             // load g#0 from f-stack                          (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | ternary_result%11#1,tmp%17#0,g#0                   g                                                                   File "conditional_expressions/contract.py", line 17
        -                                                 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | ternary_result%11#1,{-}                            a * b * c * d * f * h - e - g                                       File "conditional_expressions/contract.py", line 22
        +                                                 //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | {+}                                                a * b * c * d * f * h - e - g + i                                   File "conditional_expressions/contract.py", line 22
        dup                                               // load result#0 from l-stack (copy)              (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | result#0,result#0                                  result                                                              File "conditional_expressions/contract.py", line 22
        itob                                              //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | result#0,{itob}                                    itob(result)                                                        File "conditional_expressions/contract.py", line 24
        log                                               //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 | result#0                                           log(itob(result))                                                   File "conditional_expressions/contract.py", line 24
        return                                            //                                                (ùïó) awst_tmp%4#0,awst_tmp%6#0,awst_tmp%8#0,e#0,f#0,g#0,awst_tmp%2#0 |                                                    return result                                                       File "conditional_expressions/contract.py", line 26


// test_cases.conditional_expressions.contract.MyContract.expensive_op(val#0: uint64) -> uint64:
expensive_op:
        proto 1 1                                         //                                                (ùï°) val#0 |                                                                                                              def expensive_op(self, val: UInt64) -> UInt64:                      File "conditional_expressions/contract.py", line 32

expensive_op_block@0:
        frame_dig -1                                      // load val#0 from parameters                     (ùï°) val#0 | val#0                                                                                                        val: UInt64                                                         File "conditional_expressions/contract.py", line 32
        int 42                                            //                                                (ùï°) val#0 | val#0,42                                                                                                     42                                                                  File "conditional_expressions/contract.py", line 33
        !=                                                //                                                (ùï°) val#0 | {!=}                                                                                                         val != 42, "Can't be 42"                                            File "conditional_expressions/contract.py", line 33
        assert // Can't be 42                             //                                                (ùï°) val#0 |                                                                                                              assert val != 42, "Can't be 42"                                     File "conditional_expressions/contract.py", line 33
        byte "expensive_op"                               //                                                (ùï°) val#0 | "expensive_op"                                                                                               b"expensive_op"                                                     File "conditional_expressions/contract.py", line 34
        log                                               //                                                (ùï°) val#0 |                                                                                                              log(b"expensive_op")                                                File "conditional_expressions/contract.py", line 34
        frame_dig -1                                      // load val#0 from parameters                     (ùï°) val#0 | val#0                                                                                                        val: UInt64                                                         File "conditional_expressions/contract.py", line 32
        retsub                                            //                                                val#0                                                                                                                    return val                                                          File "conditional_expressions/contract.py", line 35


// test_cases.conditional_expressions.contract.MyContract.side_effecting_op(val#0: uint64) -> uint64:
side_effecting_op:
        proto 1 1                                         //                                                (ùï°) val#0 |                                                                                                              def side_effecting_op(self, val: UInt64) -> UInt64:                 File "conditional_expressions/contract.py", line 38

side_effecting_op_block@0:
        frame_dig -1                                      // load val#0 from parameters                     (ùï°) val#0 | val#0                                                                                                        val: UInt64                                                         File "conditional_expressions/contract.py", line 38
        int 42                                            //                                                (ùï°) val#0 | val#0,42                                                                                                     42                                                                  File "conditional_expressions/contract.py", line 39
        !=                                                //                                                (ùï°) val#0 | {!=}                                                                                                         val != 42, "Can't be 42"                                            File "conditional_expressions/contract.py", line 39
        assert // Can't be 42                             //                                                (ùï°) val#0 |                                                                                                              assert val != 42, "Can't be 42"                                     File "conditional_expressions/contract.py", line 39
        byte "side_effecting_op"                          //                                                (ùï°) val#0 | "side_effecting_op"                                                                                          b"side_effecting_op"                                                File "conditional_expressions/contract.py", line 40
        log                                               //                                                (ùï°) val#0 |                                                                                                              log(b"side_effecting_op")                                           File "conditional_expressions/contract.py", line 40
        frame_dig -1                                      // load val#0 from parameters                     (ùï°) val#0 | val#0                                                                                                        val: UInt64                                                         File "conditional_expressions/contract.py", line 38
        retsub                                            //                                                val#0                                                                                                                    return val                                                          File "conditional_expressions/contract.py", line 41

