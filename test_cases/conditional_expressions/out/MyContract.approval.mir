// Op                                                 //                                                      Op Description                                                                                                 Stack (out)                                                                                                     X stack                                                             Source code                                                         Source line

#pragma version 10

// test_cases.conditional_expressions.contract.MyContract.approval_program() -> uint64:
main:
    byte ""
    dupn 5                                            //                                                      allocate 6 to stack                                                                                            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0 |

main_block@0:
    int 0                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0 | 0                                                                                                                          UInt64(0)                                                           conditional_expressions/contract.py:14
    callsub expensive_op                              //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0 | {expensive_op}                                                                                                             self.expensive_op(UInt64(0))                                        conditional_expressions/contract.py:14
    dup                                               //                                                      store awst_tmp%0#0 to l-stack (copy)                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0 | awst_tmp%0#0,awst_tmp%0#0                                                                                                  self.expensive_op(UInt64(0))                                        conditional_expressions/contract.py:14
    cover 1                                           //                                                      store awst_tmp%0#0 to f-stack                                                                                  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%0#0                                                                                                  self.expensive_op(UInt64(0))                                        conditional_expressions/contract.py:14
    //                                                virtual: load awst_tmp%0#0 from l-stack (no copy)       (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%0#0                                                                                                                                             self.expensive_op(UInt64(0)) or self.side_effecting_op(UInt64(1))   conditional_expressions/contract.py:14
    bz main_ternary_false@8                           //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.expensive_op(UInt64(0)) or self.side_effecting_op(UInt64(1))   conditional_expressions/contract.py:14
    // Implicit fall through to main_ternary_true@7   //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.expensive_op(UInt64(0)) or self.side_effecting_op(UInt64(1))   conditional_expressions/contract.py:14

main_ternary_true@7:
    dup                                               //                                                      load awst_tmp%0#0 from f-stack                                                                                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%0#0
    bury 4                                            //                                                      store e#0 to f-stack                                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |
    b main_ternary_merge@9                            //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |

main_ternary_false@8:
    int 1                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 1                                                                                                             UInt64(1)                                                           conditional_expressions/contract.py:14
    callsub side_effecting_op                         //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {side_effecting_op}                                                                                           self.side_effecting_op(UInt64(1))                                   conditional_expressions/contract.py:14
    //                                                virtual: store ternary_result%2#1 to l-stack (no copy)  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%2#1                                                                                                                                       self.expensive_op(UInt64(0)) or self.side_effecting_op(UInt64(1))   conditional_expressions/contract.py:14
    //                                                virtual: load ternary_result%2#1 from l-stack (no copy) (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%2#1
    bury 4                                            //                                                      store e#0 to f-stack                                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |
    // Implicit fall through to main_ternary_merge@9  //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |

main_ternary_merge@9:
    int 3                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 3                                                                                                             UInt64(3)                                                           conditional_expressions/contract.py:15
    callsub expensive_op                              //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {expensive_op}                                                                                                self.expensive_op(UInt64(3))                                        conditional_expressions/contract.py:15
    dup                                               //                                                      store awst_tmp%1#0 to l-stack (copy)                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%1#0,awst_tmp%1#0                                                                                     self.expensive_op(UInt64(3))                                        conditional_expressions/contract.py:15
    bury 8                                            //                                                      store awst_tmp%1#0 to f-stack                                                                                  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%1#0                                                                                                  self.expensive_op(UInt64(3))                                        conditional_expressions/contract.py:15
    //                                                virtual: load awst_tmp%1#0 from l-stack (no copy)       (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%1#0                                                                                                                                             self.expensive_op(UInt64(3)) or self.side_effecting_op(UInt64(42))  conditional_expressions/contract.py:15
    bz main_ternary_false@11                          //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.expensive_op(UInt64(3)) or self.side_effecting_op(UInt64(42))  conditional_expressions/contract.py:15
    // Implicit fall through to main_ternary_true@10  //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.expensive_op(UInt64(3)) or self.side_effecting_op(UInt64(42))  conditional_expressions/contract.py:15

main_ternary_true@10:
    dig 6                                             //                                                      load awst_tmp%1#0 from f-stack                                                                                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%1#0
    bury 3                                            //                                                      store f#0 to f-stack                                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |
    b main_ternary_merge@12                           //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |

main_ternary_false@11:
    int 42                                            //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 42                                                                                                            UInt64(42)                                                          conditional_expressions/contract.py:15
    callsub side_effecting_op                         //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {side_effecting_op}                                                                                           self.side_effecting_op(UInt64(42))                                  conditional_expressions/contract.py:15
    //                                                virtual: store ternary_result%3#1 to l-stack (no copy)  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%3#1                                                                                                                                       self.expensive_op(UInt64(3)) or self.side_effecting_op(UInt64(42))  conditional_expressions/contract.py:15
    //                                                virtual: load ternary_result%3#1 from l-stack (no copy) (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%3#1
    bury 3                                            //                                                      store f#0 to f-stack                                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |
    // Implicit fall through to main_ternary_merge@12 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |

main_ternary_merge@12:
    int 0                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 0                                                                                                             UInt64(0)                                                           conditional_expressions/contract.py:17
    callsub side_effecting_op                         //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {side_effecting_op}                                                                                           self.side_effecting_op(UInt64(0))                                   conditional_expressions/contract.py:17
    dup                                               //                                                      store awst_tmp%2#0 to l-stack (copy)                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%2#0,awst_tmp%2#0                                                                                     self.side_effecting_op(UInt64(0))                                   conditional_expressions/contract.py:17
    bury 7                                            //                                                      store awst_tmp%2#0 to f-stack                                                                                  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%2#0                                                                                                  self.side_effecting_op(UInt64(0))                                   conditional_expressions/contract.py:17
    //                                                virtual: load awst_tmp%2#0 from l-stack (no copy)       (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%2#0                                                                                                                                             self.side_effecting_op(UInt64(0)) and self.expensive_op(UInt64(42)) conditional_expressions/contract.py:17
    bnz main_ternary_false@14                         //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.side_effecting_op(UInt64(0)) and self.expensive_op(UInt64(42)) conditional_expressions/contract.py:17
    // Implicit fall through to main_ternary_true@13  //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.side_effecting_op(UInt64(0)) and self.expensive_op(UInt64(42)) conditional_expressions/contract.py:17

main_ternary_true@13:
    dig 5                                             //                                                      load awst_tmp%2#0 from f-stack                                                                                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%2#0
    bury 2                                            //                                                      store g#0 to f-stack                                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |
    b main_ternary_merge@15                           //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |

main_ternary_false@14:
    int 42                                            //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 42                                                                                                            UInt64(42)                                                          conditional_expressions/contract.py:17
    callsub expensive_op                              //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {expensive_op}                                                                                                self.expensive_op(UInt64(42))                                       conditional_expressions/contract.py:17
    //                                                virtual: store ternary_result%4#1 to l-stack (no copy)  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%4#1                                                                                                                                       self.side_effecting_op(UInt64(0)) and self.expensive_op(UInt64(42)) conditional_expressions/contract.py:17
    //                                                virtual: load ternary_result%4#1 from l-stack (no copy) (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%4#1
    bury 2                                            //                                                      store g#0 to f-stack                                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |
    // Implicit fall through to main_ternary_merge@15 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |

main_ternary_merge@15:
    int 2                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 2                                                                                                             UInt64(2)                                                           conditional_expressions/contract.py:18
    callsub side_effecting_op                         //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {side_effecting_op}                                                                                           self.side_effecting_op(UInt64(2))                                   conditional_expressions/contract.py:18
    dup                                               //                                                      store awst_tmp%3#0 to l-stack (copy)                                                                           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%3#0,awst_tmp%3#0                                                                                     self.side_effecting_op(UInt64(2))                                   conditional_expressions/contract.py:18
    bury 6                                            //                                                      store awst_tmp%3#0 to f-stack                                                                                  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%3#0                                                                                                  self.side_effecting_op(UInt64(2))                                   conditional_expressions/contract.py:18
    //                                                virtual: load awst_tmp%3#0 from l-stack (no copy)       (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%3#0                                                                                                                                             self.side_effecting_op(UInt64(2)) and self.expensive_op(UInt64(3))  conditional_expressions/contract.py:18
    bnz main_ternary_false@17                         //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.side_effecting_op(UInt64(2)) and self.expensive_op(UInt64(3))  conditional_expressions/contract.py:18
    // Implicit fall through to main_ternary_true@16  //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               self.side_effecting_op(UInt64(2)) and self.expensive_op(UInt64(3))  conditional_expressions/contract.py:18

main_ternary_true@16:
    dig 4                                             //                                                      load awst_tmp%3#0 from f-stack                                                                                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | awst_tmp%3#0
    //                                                virtual: store h#0 to x-stack (no copy)                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 |
    b main_ternary_merge@18                           //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 |                                 h#0

main_ternary_false@17:
    int 3                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | 3                                                                                                             UInt64(3)                                                           conditional_expressions/contract.py:18
    callsub expensive_op                              //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {expensive_op}                                                                                                self.expensive_op(UInt64(3))                                        conditional_expressions/contract.py:18
    //                                                virtual: store ternary_result%5#1 to l-stack (no copy)  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%5#1                                                                                                                                       self.side_effecting_op(UInt64(2)) and self.expensive_op(UInt64(3))  conditional_expressions/contract.py:18
    //                                                virtual: load ternary_result%5#1 from l-stack (no copy) (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%5#1
    //                                                virtual: store h#0 to x-stack (no copy)                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 |
    // Implicit fall through to main_ternary_merge@18 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 |                                 h#0

main_ternary_merge@18:
    int 1                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | 1                               h#0                                                                 UInt64(1)                                                           conditional_expressions/contract.py:8
    dig 5                                             //                                                      load e#0 from f-stack                                                                                          (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | 1,e#0                                                                                               a if b < c else d + e                                               conditional_expressions/contract.py:20
    dup
    cover 2                                           //                                                      store e#0 to l-stack (copy)                                                                                    (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | e#0,1,e#0                                                                                           a if b < c else d + e                                               conditional_expressions/contract.py:20
    +                                                 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | e#0,{+}                                                                                             d + e                                                               conditional_expressions/contract.py:20
    cover 1                                           //                                                      store ternary_result%6#1 to l-stack (no copy)                                                                  (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | ternary_result%6#1,e#0                                                                              a if b < c else d + e                                               conditional_expressions/contract.py:20
    int 2                                             //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | ternary_result%6#1,e#0,2                                                                            UInt64(2)                                                           conditional_expressions/contract.py:9
    dig 6                                             //                                                      load f#0 from f-stack                                                                                          (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | ternary_result%6#1,e#0,2,f#0                                                                        a * b * c * d * f                                                   conditional_expressions/contract.py:22
    *                                                 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | ternary_result%6#1,e#0,{*}                                                                          a * b * c * d * f                                                   conditional_expressions/contract.py:22
    //                                                virtual: store tmp%4#0 to l-stack (no copy)             (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | ternary_result%6#1,e#0,tmp%4#0                                                                                                                 a * b * c * d * f                                                   conditional_expressions/contract.py:22
    //                                                virtual: load tmp%4#0 from l-stack (no copy)            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | (ùïè) h#0 | ternary_result%6#1,e#0,tmp%4#0                                                                                                                 a * b * c * d * f * h                                               conditional_expressions/contract.py:22
    uncover 3                                         //                                                      load h#0 from x-stack                                                                                          (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,e#0,tmp%4#0,h#0                                                                            a * b * c * d * f * h                                               conditional_expressions/contract.py:22
    *                                                 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,e#0,{*}                                                                                    a * b * c * d * f * h                                               conditional_expressions/contract.py:22
    //                                                virtual: store tmp%5#0 to l-stack (no copy)             (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,e#0,tmp%5#0                                                                                                                           a * b * c * d * f * h                                               conditional_expressions/contract.py:22
    //                                                virtual: load tmp%5#0 from l-stack (no copy)            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,e#0,tmp%5#0                                                                                                                           a * b * c * d * f * h - e                                           conditional_expressions/contract.py:22
    uncover 1                                         //                                                      load e#0 from l-stack (no copy)                                                                                (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,tmp%5#0,e#0                                                                                a * b * c * d * f * h - e                                           conditional_expressions/contract.py:22
    -                                                 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,{-}                                                                                        a * b * c * d * f * h - e                                           conditional_expressions/contract.py:22
    //                                                virtual: store tmp%6#0 to l-stack (no copy)             (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,tmp%6#0                                                                                                                               a * b * c * d * f * h - e                                           conditional_expressions/contract.py:22
    //                                                virtual: load tmp%6#0 from l-stack (no copy)            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,tmp%6#0                                                                                                                               a * b * c * d * f * h - e - g                                       conditional_expressions/contract.py:22
    dig 3                                             //                                                      load g#0 from f-stack                                                                                          (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,tmp%6#0,g#0                                                                                a * b * c * d * f * h - e - g                                       conditional_expressions/contract.py:22
    -                                                 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,{-}                                                                                        a * b * c * d * f * h - e - g                                       conditional_expressions/contract.py:22
    //                                                virtual: store tmp%7#0 to l-stack (no copy)             (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,tmp%7#0                                                                                                                               a * b * c * d * f * h - e - g                                       conditional_expressions/contract.py:22
    //                                                virtual: load tmp%7#0 from l-stack (no copy)            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | ternary_result%6#1,tmp%7#0                                                                                                                               result = a * b * c * d * f * h - e - g + i                          conditional_expressions/contract.py:22
    uncover 1                                         //                                                      load ternary_result%6#1 from l-stack (no copy)                                                                 (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | tmp%7#0,ternary_result%6#1                                                                                    result = a * b * c * d * f * h - e - g + i                          conditional_expressions/contract.py:22
    +                                                 //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | {+}                                                                                                           a * b * c * d * f * h - e - g + i                                   conditional_expressions/contract.py:22
    //                                                virtual: store result#0 to l-stack (no copy)            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0                                                                                                                                                 result = a * b * c * d * f * h - e - g + i                          conditional_expressions/contract.py:22
    dup                                               //                                                      load result#0 from l-stack (copy)                                                                              (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0,result#0                                                                                             op.itob(result)                                                     conditional_expressions/contract.py:24
    itob                                              //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0,{itob}                                                                                               op.itob(result)                                                     conditional_expressions/contract.py:24
    //                                                virtual: store tmp%8#0 to l-stack (no copy)             (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0,tmp%8#0                                                                                                                                         op.itob(result)                                                     conditional_expressions/contract.py:24
    //                                                virtual: load tmp%8#0 from l-stack (no copy)            (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0,tmp%8#0                                                                                                                                         log(op.itob(result))                                                conditional_expressions/contract.py:24
    log                                               //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0                                                                                                      log(op.itob(result))                                                conditional_expressions/contract.py:24
    //                                                virtual: load result#0 from l-stack (no copy)           (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 | result#0                                                                                                                                                 return result                                                       conditional_expressions/contract.py:26
    return                                            //                                                                                                                                                                     (ùïó) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%3#0,e#0,f#0,g#0,awst_tmp%0#0 |                                                                                                               return result                                                       conditional_expressions/contract.py:26


// test_cases.conditional_expressions.contract.MyContract.expensive_op(val: uint64) -> uint64:
expensive_op:
    proto 1 1                                         //                                                                                                                                                                     (ùï°) val#0 |                                                                                                                                                                         @subroutine\ndef expensive_op(self, val: UInt64) -> UInt64:         conditional_expressions/contract.py:31-32

expensive_op_block@0:
    frame_dig -1                                      //                                                      load val#0 from parameters                                                                                     (ùï°) val#0 | val#0                                                                                                                                                                   val != 42, "Can't be 42"                                            conditional_expressions/contract.py:33
    int 42                                            //                                                                                                                                                                     (ùï°) val#0 | val#0,42                                                                                                                                                                42                                                                  conditional_expressions/contract.py:33
    !=                                                //                                                                                                                                                                     (ùï°) val#0 | {!=}                                                                                                                                                                    val != 42, "Can't be 42"                                            conditional_expressions/contract.py:33
    //                                                virtual: store tmp%0#0 to l-stack (no copy)             (ùï°) val#0 | tmp%0#0                                                                                                                                                                                                            val != 42, "Can't be 42"                                            conditional_expressions/contract.py:33
    //                                                virtual: load tmp%0#0 from l-stack (no copy)            (ùï°) val#0 | tmp%0#0                                                                                                                                                                                                            assert val != 42, "Can't be 42"                                     conditional_expressions/contract.py:33
    assert // Can't be 42                             //                                                                                                                                                                     (ùï°) val#0 |                                                                                                                                                                         assert val != 42, "Can't be 42"                                     conditional_expressions/contract.py:33
    byte "expensive_op"                               //                                                                                                                                                                     (ùï°) val#0 | "expensive_op"                                                                                                                                                          b"expensive_op"                                                     conditional_expressions/contract.py:34
    log                                               //                                                                                                                                                                     (ùï°) val#0 |                                                                                                                                                                         log(b"expensive_op")                                                conditional_expressions/contract.py:34
    frame_dig -1                                      //                                                      load val#0 from parameters                                                                                     (ùï°) val#0 | val#0                                                                                                                                                                   return val                                                          conditional_expressions/contract.py:35
    retsub                                            //                                                                                                                                                                     val#0                                                                                                                                                                               return val                                                          conditional_expressions/contract.py:35


// test_cases.conditional_expressions.contract.MyContract.side_effecting_op(val: uint64) -> uint64:
side_effecting_op:
    proto 1 1                                         //                                                                                                                                                                     (ùï°) val#0 |                                                                                                                                                                         @subroutine\ndef side_effecting_op(self, val: UInt64) -> UInt64:    conditional_expressions/contract.py:37-38

side_effecting_op_block@0:
    frame_dig -1                                      //                                                      load val#0 from parameters                                                                                     (ùï°) val#0 | val#0                                                                                                                                                                   val != 42, "Can't be 42"                                            conditional_expressions/contract.py:39
    int 42                                            //                                                                                                                                                                     (ùï°) val#0 | val#0,42                                                                                                                                                                42                                                                  conditional_expressions/contract.py:39
    !=                                                //                                                                                                                                                                     (ùï°) val#0 | {!=}                                                                                                                                                                    val != 42, "Can't be 42"                                            conditional_expressions/contract.py:39
    //                                                virtual: store tmp%0#0 to l-stack (no copy)             (ùï°) val#0 | tmp%0#0                                                                                                                                                                                                            val != 42, "Can't be 42"                                            conditional_expressions/contract.py:39
    //                                                virtual: load tmp%0#0 from l-stack (no copy)            (ùï°) val#0 | tmp%0#0                                                                                                                                                                                                            assert val != 42, "Can't be 42"                                     conditional_expressions/contract.py:39
    assert // Can't be 42                             //                                                                                                                                                                     (ùï°) val#0 |                                                                                                                                                                         assert val != 42, "Can't be 42"                                     conditional_expressions/contract.py:39
    byte "side_effecting_op"                          //                                                                                                                                                                     (ùï°) val#0 | "side_effecting_op"                                                                                                                                                     b"side_effecting_op"                                                conditional_expressions/contract.py:40
    log                                               //                                                                                                                                                                     (ùï°) val#0 |                                                                                                                                                                         log(b"side_effecting_op")                                           conditional_expressions/contract.py:40
    frame_dig -1                                      //                                                      load val#0 from parameters                                                                                     (ùï°) val#0 | val#0                                                                                                                                                                   return val                                                          conditional_expressions/contract.py:41
    retsub                                            //                                                                                                                                                                     val#0                                                                                                                                                                               return val                                                          conditional_expressions/contract.py:41

