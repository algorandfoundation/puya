main test_cases.compile.apps.HelloTmpl.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "greeting" TemplateVar[string](TMPL_GREETING))
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#1: bool = test_cases.compile.apps.HelloTmpl.__puya_arc4_router__()
        return tmp%0#1

subroutine test_cases.compile.apps.HelloTmpl.__puya_arc4_router__() -> bool:
    block@0: // L58
        let tmp%0#0: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#0)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        goto_nth [block@1, block@5, block@24, block@24, block@24, block@24, block@24, block@24, block@15, block@24, block@19, block@24][tmp%4#0] else goto block@24
    block@1: // switch_case_0_L58
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "greet(string)string" => block@2, * => block@4}
    block@2: // greet_route_L32
        test_cases.compile.apps.HelloBase.greet[routing]()
        goto block@4
    block@4: // switch_case_next_L58
        fail // this contract does not implement the given ABI method for call NoOp
    block@5: // switch_case_1_L58
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "create()void" => block@6, * => block@8}
    block@6: // create_route_L62
        test_cases.compile.apps.HelloTmpl.create[routing]()
        goto block@8
    block@8: // switch_case_next_L58
        fail // this contract does not implement the given ABI method for create NoOp
    block@15: // switch_case_8_L58
        let tmp%7#0: uint64 = (txn NumAppArgs)
        let tmp%8#0: bool = (! tmp%7#0)
        (assert tmp%8#0) // this contract does not implement the given ABI method for call UpdateApplication
        exit 1u
    block@19: // switch_case_10_L58
        let tmp%9#0: bytes = (txna ApplicationArgs 0)
        switch tmp%9#0 {method "delete()void" => block@20, * => block@22}
    block@20: // delete_route_L24
        test_cases.compile.apps.HelloBase.delete[routing]()
        goto block@22
    block@22: // switch_case_next_L58
        fail // this contract does not implement the given ABI method for call DeleteApplication
    block@24: // switch_case_default_L58
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

subroutine test_cases.compile.apps.HelloTmpl.create[routing]() -> void:
    block@0: // L62
        exit 1u

subroutine test_cases.compile.apps.HelloBase.delete[routing]() -> void:
    block@0: // L24
        exit 1u

subroutine test_cases.compile.apps.HelloBase.greet[routing]() -> void:
    block@0: // L32
        let reinterpret_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let name#0: string = decode_bytes<string>(reinterpret_Encoded(len+utf8[])%0#0)
        let (maybe_value%0#0: bytes, maybe_exists%0#0: bool) = (app_global_get_ex 0u "greeting")
        (assert maybe_exists%0#0) // check self.greeting exists
        let tmp%0#1: bytes = (concat maybe_value%0#0 " ")
        let tmp%1#1: bytes = (concat tmp%0#1 name#0)
        let tmp%2#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>(tmp%1#1)
        let tmp%3#0: bytes = (concat 0x151f7c75 tmp%2#0)
        (log tmp%3#0)
        exit 1u