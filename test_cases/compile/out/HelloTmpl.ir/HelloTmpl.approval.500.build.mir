// Op                                                            Stack (out)
// test_cases.compile.apps.HelloTmpl.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    block@0:
        txn ApplicationID                                        tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                           tmp%0#0
        bz call___init__@1 ; b after_if_else@2

    call___init__@1:
        // compile/apps.py:60
        // self.greeting = TemplateVar[String]("GREETING")
        byte "greeting"                                          "greeting"
        byte TMPL_GREETING                                       "greeting",TMPL_GREETING
        app_global_put
        b after_if_else@2

    after_if_else@2:
        // compile/apps.py:58
        // class HelloTmpl(HelloBase):
        txn NumAppArgs                                           tmp%0#2
        v-store tmp%0#2
        v-load tmp%0#2                                           tmp%0#2
        bz update@12 ; b abi_routing@4

    abi_routing@4:
        // compile/apps.py:58
        // class HelloTmpl(HelloBase):
        txna ApplicationArgs 0                                   tmp%2#0
        v-store tmp%2#0
        method delete()void                                      Method(delete()void)
        v-load tmp%2#0                                           Method(delete()void),tmp%2#0
        match delete_route@5 ; b switch_case_next@6

    delete_route@5:
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                           tmp%3#0
        int DeleteApplication                                    tmp%3#0,DeleteApplication
        ==                                                       tmp%4#0
        v-store tmp%4#0
        txn ApplicationID                                        tmp%5#0
        v-store tmp%5#0
        v-load tmp%4#0                                           tmp%4#0
        v-load tmp%5#0                                           tmp%4#0,tmp%5#0
        &&                                                       tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                           tmp%7#0
        assert // OnCompletion must be DeleteApplication && can only call when not creating 
        int 1                                                    1
        return

    switch_case_next@6:
        // compile/apps.py:58
        // class HelloTmpl(HelloBase):
        txn OnCompletion                                         tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                           tmp%8#0
        !                                                        tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                           tmp%9#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                        tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                          tmp%10#0
        bz create_NoOp@9 ; b call_NoOp@7

    call_NoOp@7:
        // compile/apps.py:58
        // class HelloTmpl(HelloBase):
        txna ApplicationArgs 0                                   tmp%12#0
        v-store tmp%12#0
        method greet(string)string                               Method(greet(string)string)
        v-load tmp%12#0                                          Method(greet(string)string),tmp%12#0
        match greet_route@8 ; b after_if_else@11

    greet_route@8:
        // compile/apps.py:32
        // @arc4.abimethod()
        callsub greet
        b after_if_else@11

    create_NoOp@9:
        // compile/apps.py:58
        // class HelloTmpl(HelloBase):
        txna ApplicationArgs 0                                   tmp%13#0
        v-store tmp%13#0
        method create()void                                      Method(create()void)
        v-load tmp%13#0                                          Method(create()void),tmp%13#0
        match create_route@10 ; b after_if_else@11

    create_route@10:
        // compile/apps.py:62
        // @arc4.abimethod(create="require")
        int 1                                                    1
        return

    after_if_else@11:
        // compile/apps.py:58
        // class HelloTmpl(HelloBase):
        err

    update@12:
        // compile/apps.py:28
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        txn OnCompletion                                         tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                          tmp%14#0
        int UpdateApplication                                    tmp%14#0,UpdateApplication
        ==                                                       tmp%15#0
        v-store tmp%15#0
        txn ApplicationID                                        tmp%16#0
        v-store tmp%16#0
        v-load tmp%15#0                                          tmp%15#0
        v-load tmp%16#0                                          tmp%15#0,tmp%16#0
        &&                                                       tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                          tmp%18#0
        assert // OnCompletion must be UpdateApplication && can only call when not creating 
        int 1                                                    1
        return


// test_cases.compile.apps.HelloBase.greet[routing]() -> void:
subroutine greet:
    greet_block@0:
        // compile/apps.py:32
        // @arc4.abimethod()
        txna ApplicationArgs 1                                   reinterpret_Encoded(len+utf8[])%0#0
        v-store reinterpret_Encoded(len+utf8[])%0#0
        v-load reinterpret_Encoded(len+utf8[])%0#0               reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                              name#0
        v-store name#0
        // compile/apps.py:34
        // return self.greeting + " " + name
        int 0                                                    0
        byte "greeting"                                          0,"greeting"
        app_global_get_ex                                        maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                 maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                  maybe_exists%0#0
        assert // check self.greeting exists
        v-load maybe_value%0#0                                   maybe_value%0#0
        byte " "                                                 maybe_value%0#0," "
        concat                                                   tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                           tmp%0#1
        v-load name#0                                            tmp%0#1,name#0
        concat                                                   tmp%1#1
        v-store tmp%1#1
        // compile/apps.py:32
        // @arc4.abimethod()
        v-load tmp%1#1                                           tmp%1#1
        len                                                      aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                              aggregate%length%0#0
        itob                                                     aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                            aggregate%as_bytes%0#0
        extract 6 2                                              aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                       aggregate%length_uint16%0#0
        v-load tmp%1#1                                           aggregate%length_uint16%0#0,tmp%1#1
        concat                                                   aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        byte 0x151f7c75                                          0x151f7c75
        v-load aggregate%encoded_value%0#0                       0x151f7c75,aggregate%encoded_value%0#0
        concat                                                   tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                           tmp%3#0
        log
        int 1                                                    1
        return


