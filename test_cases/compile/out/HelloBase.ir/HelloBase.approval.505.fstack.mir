// Op                                                                               Stack (out)
// test_cases.compile.apps.HelloBase.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        int 1                                                                       1
        f-store lifted%return#0                                                     (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2                            (𝕗) lifted%return#0 |

    main_call___init__@1:                                                           (𝕗) lifted%return#0 |
        // compile/apps.py:22
        // self.greeting = String()
        byte "greeting"                                                             (𝕗) lifted%return#0 | "greeting"
        byte ""                                                                     (𝕗) lifted%return#0 | "greeting",""
        app_global_put                                                              (𝕗) lifted%return#0 |
        b main_after_if_else@2                                                      (𝕗) lifted%return#0 |

    main_after_if_else@2:                                                           (𝕗) lifted%return#0 |
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn NumAppArgs                                                              (𝕗) lifted%return#0 | tmp%0#2
        bz main_bare_routing@8 ; b main_abi_routing@4                               (𝕗) lifted%return#0 |

    main_abi_routing@4:                                                             (𝕗) lifted%return#0 |
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txna ApplicationArgs 0                                                      (𝕗) lifted%return#0 | tmp%2#0
        method delete()void                                                         (𝕗) lifted%return#0 | tmp%2#0,Method(delete()void)
        method greet(string)string                                                  (𝕗) lifted%return#0 | tmp%2#0,Method(delete()void),Method(greet(string)string)
        l-load tmp%2#0 2                                                            (𝕗) lifted%return#0 | Method(delete()void),Method(greet(string)string),tmp%2#0
        match main_delete_route@5 main_greet_route@6 ; b main_switch_case_default@7 (𝕗) lifted%return#0 |

    main_delete_route@5:                                                            (𝕗) lifted%return#0 |
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                            (𝕗) lifted%return#0 | tmp%3#0
        int DeleteApplication                                                       (𝕗) lifted%return#0 | tmp%3#0,DeleteApplication
        ==                                                                          (𝕗) lifted%return#0 | tmp%4#0
        assert // OnCompletion is not DeleteApplication                             (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%5#0
        assert // can only call when not creating                                   (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                      (𝕗) lifted%return#0 | lifted%return#0
        return                                                                      (𝕗) lifted%return#0 |

    main_greet_route@6:                                                             (𝕗) lifted%return#0 |
        // compile/apps.py:32
        // @arc4.abimethod()
        txn OnCompletion                                                            (𝕗) lifted%return#0 | tmp%7#0
        !                                                                           (𝕗) lifted%return#0 | tmp%8#0
        assert // OnCompletion is not NoOp                                          (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%9#0
        assert // can only call when not creating                                   (𝕗) lifted%return#0 |
        callsub greet                                                               (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_switch_case_default@7:                                                     (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_bare_routing@8:                                                            (𝕗) lifted%return#0 |
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn OnCompletion                                                            (𝕗) lifted%return#0 | tmp%11#0
        int 4                                                                       (𝕗) lifted%return#0 | tmp%11#0,4
        int 0                                                                       (𝕗) lifted%return#0 | tmp%11#0,4,0
        l-load tmp%11#0 2                                                           (𝕗) lifted%return#0 | 4,0,tmp%11#0
        match main_update@9 main___algopy_default_create@10 ; b main_switch_case_default@11 (𝕗) lifted%return#0 | 

    main_update@9:                                                                  (𝕗) lifted%return#0 |
        // compile/apps.py:28
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%12#0
        assert // can only call when not creating                                   (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                      (𝕗) lifted%return#0 | lifted%return#0
        return                                                                      (𝕗) lifted%return#0 |

    main___algopy_default_create@10:                                                (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%14#0
        !                                                                           (𝕗) lifted%return#0 | tmp%15#0
        assert // can only call when creating                                       (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                      (𝕗) lifted%return#0 | lifted%return#0
        return                                                                      (𝕗) lifted%return#0 |

    main_switch_case_default@11:                                                    (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |


// test_cases.compile.apps.HelloBase.greet[routing]() -> void:
subroutine greet:
    greet_block@0:
        // compile/apps.py:32
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                      reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                 name#0
        // compile/apps.py:34
        // return self.greeting + " " + name
        int 0                                                                       name#0,0
        byte "greeting"                                                             name#0,0,"greeting"
        app_global_get_ex                                                           name#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.greeting exists                                        name#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                                    name#0,maybe_value%0#0
        byte " "                                                                    name#0,maybe_value%0#0," "
        concat                                                                      name#0,tmp%0#1
        l-load name#0 1                                                             tmp%0#1,name#0
        concat                                                                      tmp%1#1
        // compile/apps.py:32
        // @arc4.abimethod()
        l-load-copy tmp%1#1 0                                                       tmp%1#1,tmp%1#1 (copy)
        len                                                                         tmp%1#1,aggregate%length%0#0
        itob                                                                        tmp%1#1,aggregate%as_bytes%0#0
        extract 6 2                                                                 tmp%1#1,aggregate%length_uint16%0#0
        l-load tmp%1#1 1                                                            aggregate%length_uint16%0#0,tmp%1#1
        concat                                                                      aggregate%encoded_value%0#0
        byte 0x151f7c75                                                             aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                        0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                      tmp%3#0
        log
        int 1                                                                       1
        return


