// Op                                                                                 Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                             tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // compile/apps.py:22
        // self.greeting = String()
        byte "greeting"                                                               "greeting"
        byte ""                                                                       "greeting",""
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn NumAppArgs                                                                tmp%0#1
        bz main_bare_routing@8 ; b main_abi_routing@4

    main_abi_routing@4:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txna ApplicationArgs 0                                                        tmp%2#0
        method delete()void                                                           tmp%2#0,Method(delete()void)
        method greet(string)string                                                    tmp%2#0,Method(delete()void),Method(greet(string)string)
        l-load tmp%2#0 2                                                              Method(delete()void),Method(greet(string)string),tmp%2#0
        match main_delete_route@5 main_greet_route@6 ; b main_after_if_else@12

    main_delete_route@5:
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                              tmp%3#0
        int DeleteApplication                                                         tmp%3#0,DeleteApplication
        ==                                                                            tmp%4#0
        txn ApplicationID                                                             tmp%4#0,tmp%5#0
        l-load tmp%4#0 1                                                              tmp%5#0,tmp%4#0
        l-load tmp%5#0 1                                                              tmp%4#0,tmp%5#0
        &&                                                                            tmp%7#0
        assert // OnCompletion must be DeleteApplication && can only call when not creating 
        int 1                                                                         1
        return

    main_greet_route@6:
        // compile/apps.py:32
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%8#0
        !                                                                             tmp%9#0
        txn ApplicationID                                                             tmp%9#0,tmp%10#0
        l-load tmp%9#0 1                                                              tmp%10#0,tmp%9#0
        l-load tmp%10#0 1                                                             tmp%9#0,tmp%10#0
        &&                                                                            tmp%12#0
        assert // OnCompletion must be NoOp && can only call when not creating
        callsub greet
        b main_after_if_else@12

    main_bare_routing@8:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn OnCompletion                                                              tmp%13#0
        int NoOp                                                                      tmp%13#0,NoOp
        int UpdateApplication                                                         tmp%13#0,NoOp,UpdateApplication
        l-load tmp%13#0 2                                                             NoOp,UpdateApplication,tmp%13#0
        match main___algopy_default_create@9 main_update@10 ; b main_after_if_else@12

    main___algopy_default_create@9:
        txn ApplicationID                                                             tmp%14#0
        !                                                                             tmp%15#0
        assert // can only call when creating
        int 1                                                                         1
        return

    main_update@10:
        // compile/apps.py:28
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        txn ApplicationID                                                             tmp%16#0
        assert // can only call when not creating
        int 1                                                                         1
        return

    main_after_if_else@12:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        err


// test_cases.compile.apps.HelloBase.greet[routing]() -> void:
subroutine greet:
    greet_block@0:
        // compile/apps.py:32
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                        tmp%0#0
        l-load-copy tmp%0#0 0                                                         tmp%0#0,tmp%0#0 (copy)
        int 0                                                                         tmp%0#0,tmp%0#0 (copy),0
        extract_uint16                                                                tmp%0#0,aggregate%array_length%0#0
        int 2                                                                         tmp%0#0,aggregate%array_length%0#0,2
        +                                                                             tmp%0#0,add%0#0
        l-load-copy tmp%0#0 1                                                         tmp%0#0,add%0#0,tmp%0#0 (copy)
        len                                                                           tmp%0#0,add%0#0,len%0#0
        l-load add%0#0 1                                                              tmp%0#0,len%0#0,add%0#0
        ==                                                                            tmp%0#0,eq%0#0
        assert // invalid number of bytes for (len+utf8[])                            tmp%0#0
        l-load tmp%0#0 0                                                              tmp%0#0
        extract 2 0                                                                   name#0
        // compile/apps.py:34
        // return self.greeting + " " + name
        int 0                                                                         name#0,0
        byte "greeting"                                                               name#0,0,"greeting"
        app_global_get_ex                                                             name#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.greeting exists                                          name#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                                      name#0,maybe_value%0#0
        byte " "                                                                      name#0,maybe_value%0#0," "
        concat                                                                        name#0,tmp%0#0
        l-load name#0 1                                                               tmp%0#0,name#0
        concat                                                                        tmp%1#1
        // compile/apps.py:32
        // @arc4.abimethod()
        l-load-copy tmp%1#1 0                                                         tmp%1#1,tmp%1#1 (copy)
        len                                                                           tmp%1#1,aggregate%length%0#0
        itob                                                                          tmp%1#1,aggregate%as_bytes%0#0
        extract 6 2                                                                   tmp%1#1,aggregate%length_uint16%0#0
        l-load tmp%1#1 1                                                              aggregate%length_uint16%0#0,tmp%1#1
        concat                                                                        aggregate%encoded_value%0#0
        byte 0x151f7c75                                                               aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                          0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                        tmp%4#0
        log
        int 1                                                                         1
        return


