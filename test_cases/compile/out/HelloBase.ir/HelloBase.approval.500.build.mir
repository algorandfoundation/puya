// Op                                                                                   Stack (out)
// test_cases.compile.apps.HelloBase.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    block@0:
        txn ApplicationID                                                               tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                  tmp%0#0
        bz call___init__@1 ; b after_if_else@2

    call___init__@1:
        // compile/apps.py:22
        // self.greeting = String()
        byte "greeting"                                                                 "greeting"
        byte ""                                                                         "greeting",""
        app_global_put
        b after_if_else@2

    after_if_else@2:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn ApplicationID                                                               tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                  tmp%0#0
        !                                                                               tmp%1#0
        v-store tmp%1#0
        txn OnCompletion                                                                tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        int 1                                                                           tmp%2#0,1
        shl                                                                             tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                  tmp%1#0
        v-load tmp%3#0                                                                  tmp%1#0,tmp%3#0
        +                                                                               tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                  tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED call_UpdateApplication *NOT_IMPLEMENTED call_DeleteApplication *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%5#0
        v-store tmp%5#0
        method greet(string)string                                                      Method(greet(string)string)
        v-load tmp%5#0                                                                  Method(greet(string)string),tmp%5#0
        match greet_route@5 ; b switch_case_next@6

    greet_route@5:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        callsub greet
        b switch_case_next@6

    switch_case_next@6:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn NumAppArgs                                                                  tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        !                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                           1
        return

    call_UpdateApplication:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txn NumAppArgs                                                                  tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                  tmp%8#0
        !                                                                               tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                  tmp%9#0
        assert // this contract does not implement the given ABI method for call UpdateApplication 
        // compile/apps.py:28
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        int 1                                                                           1
        return

    call_DeleteApplication:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%10#0
        v-store tmp%10#0
        method delete()void                                                             Method(delete()void)
        v-load tmp%10#0                                                                 Method(delete()void),tmp%10#0
        match delete_route@10 ; b switch_case_next@11

    delete_route@10:
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        int 1                                                                           1
        return

    switch_case_next@11:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        err // this contract does not implement the given ABI method for call DeleteApplication 

    *NOT_IMPLEMENTED:
        // compile/apps.py:20
        // class HelloBase(ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.compile.apps.HelloBase.greet[routing]() -> void:
subroutine greet:
    greet_block@0:
        // compile/apps.py:32
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                          reinterpret_Encoded(len+utf8[])%0#0
        v-store reinterpret_Encoded(len+utf8[])%0#0
        v-load reinterpret_Encoded(len+utf8[])%0#0                                      reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                     name#0
        v-store name#0
        // compile/apps.py:34
        // return self.greeting + " " + name
        int 0                                                                           0
        byte "greeting"                                                                 0,"greeting"
        app_global_get_ex                                                               maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                        maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                         maybe_exists%0#0
        assert // check self.greeting exists
        v-load maybe_value%0#0                                                          maybe_value%0#0
        byte " "                                                                        maybe_value%0#0," "
        concat                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        v-load name#0                                                                   tmp%0#1,name#0
        concat                                                                          tmp%1#1
        v-store tmp%1#1
        // compile/apps.py:32
        // @arc4.abimethod()
        v-load tmp%1#1                                                                  tmp%1#1
        len                                                                             aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                                                     aggregate%length%0#0
        itob                                                                            aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                                                   aggregate%as_bytes%0#0
        extract 6 2                                                                     aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                                              aggregate%length_uint16%0#0
        v-load tmp%1#1                                                                  aggregate%length_uint16%0#0,tmp%1#1
        concat                                                                          aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                 0x151f7c75
        v-load aggregate%encoded_value%0#0                                              0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                          tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                  tmp%3#0
        log
        int 1                                                                           1
        return


