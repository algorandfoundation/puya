// Op                                                                                  Stack (out)
// test_cases.compile.apps.HelloPrfx.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                              tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // compile/apps.py:69
        // self.greeting = TemplateVar[String]("GREETING", prefix="PRFX_")
        byte "greeting"                                                                "greeting"
        byte PRFX_GREETING                                                             "greeting",PRFX_GREETING
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // compile/apps.py:67
        // class HelloPrfx(HelloBase):
        txn NumAppArgs                                                                 tmp%0#2
        bz main_bare_routing@8 ; b main_abi_routing@4

    main_abi_routing@4:
        // compile/apps.py:67
        // class HelloPrfx(HelloBase):
        txna ApplicationArgs 0                                                         tmp%2#0
        method create()void                                                            tmp%2#0,Method(create()void)
        method delete()void                                                            tmp%2#0,Method(create()void),Method(delete()void)
        method greet(string)string                                                     tmp%2#0,Method(create()void),Method(delete()void),Method(greet(string)string)
        l-load tmp%2#0 3                                                               Method(create()void),Method(delete()void),Method(greet(string)string),tmp%2#0
        match main_create_route@5 main_delete_route@6 main_greet_route@7 ; b main_after_if_else@10 

    main_create_route@5:
        // compile/apps.py:71
        // @arc4.abimethod(create="require")
        txn OnCompletion                                                               tmp%3#0
        !                                                                              tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                              tmp%5#0
        !                                                                              tmp%6#0
        assert // can only call when creating
        int 1                                                                          test_cases.compile.apps.HelloPrfx.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.compile.apps.HelloPrfx.__puya_arc4_router__@11 (洧뎶) tmp%0#0 |

    main_delete_route@6:
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                               tmp%7#0
        int DeleteApplication                                                          tmp%7#0,DeleteApplication
        ==                                                                             tmp%8#0
        assert // OnCompletion is not DeleteApplication
        txn ApplicationID                                                              tmp%9#0
        assert // can only call when not creating
        int 1                                                                          test_cases.compile.apps.HelloPrfx.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.compile.apps.HelloPrfx.__puya_arc4_router__@11 (洧뎶) tmp%0#0 |

    main_greet_route@7:
        // compile/apps.py:32
        // @arc4.abimethod()
        txn OnCompletion                                                               tmp%11#0
        !                                                                              tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                              tmp%13#0
        assert // can only call when not creating
        // compile/apps.py:67
        // class HelloPrfx(HelloBase):
        txna ApplicationArgs 1                                                         reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                    tmp%15#0
        // compile/apps.py:32
        // @arc4.abimethod()
        callsub greet                                                                  to_encode%0#0
        l-load-copy to_encode%0#0 0                                                    to_encode%0#0,to_encode%0#0 (copy)
        len                                                                            to_encode%0#0,length%0#0
        itob                                                                           to_encode%0#0,as_bytes%0#0
        extract 6 2                                                                    to_encode%0#0,length_uint16%0#0
        l-load to_encode%0#0 1                                                         length_uint16%0#0,to_encode%0#0
        concat                                                                         encoded_value%0#0
        byte 0x151f7c75                                                                encoded_value%0#0,0x151f7c75
        l-load encoded_value%0#0 1                                                     0x151f7c75,encoded_value%0#0
        concat                                                                         tmp%16#0
        log
        int 1                                                                          test_cases.compile.apps.HelloPrfx.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.compile.apps.HelloPrfx.__puya_arc4_router__@11 (洧뎶) tmp%0#0 |

    main_bare_routing@8:
        // compile/apps.py:67
        // class HelloPrfx(HelloBase):
        txn OnCompletion                                                               tmp%17#0
        int 4                                                                          tmp%17#0,4
        l-load tmp%17#0 1                                                              4,tmp%17#0
        match main_update@9 ; b main_after_if_else@10

    main_update@9:
        // compile/apps.py:28
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        txn ApplicationID                                                              tmp%18#0
        assert // can only call when not creating
        int 1                                                                          test_cases.compile.apps.HelloPrfx.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.compile.apps.HelloPrfx.__puya_arc4_router__@11 (洧뎶) tmp%0#0 |

    main_after_if_else@10:
        // compile/apps.py:67
        // class HelloPrfx(HelloBase):
        int 0                                                                          test_cases.compile.apps.HelloPrfx.__puya_arc4_router__%0#0
        x-store tmp%0#0                                                                (洧뎶) tmp%0#0 |
        b main_after_inlined_test_cases.compile.apps.HelloPrfx.__puya_arc4_router__@11 (洧뎶) tmp%0#0 |

    main_after_inlined_test_cases.compile.apps.HelloPrfx.__puya_arc4_router__@11:      (洧뎶) tmp%0#0 |
        x-load tmp%0#0                                                                 tmp%0#0
        return


// test_cases.compile.apps.HelloBase.greet(name: bytes) -> bytes:
subroutine greet:
    greet_block@0:                                                                     (洧도) name#0 |
        // compile/apps.py:34
        // return self.greeting + " " + name
        int 0                                                                          (洧도) name#0 | 0
        byte "greeting"                                                                (洧도) name#0 | 0,"greeting"
        app_global_get_ex                                                              (洧도) name#0 | maybe_value%0#0,maybe_exists%0#0
        assert // check self.greeting exists                                           (洧도) name#0 | maybe_value%0#0
        l-load maybe_value%0#0 0                                                       (洧도) name#0 | maybe_value%0#0
        byte " "                                                                       (洧도) name#0 | maybe_value%0#0," "
        concat                                                                         (洧도) name#0 | tmp%0#0
        p-load name#0                                                                  (洧도) name#0 | tmp%0#0,name#0 (copy)
        concat                                                                         (洧도) name#0 | tmp%1#0
        retsub                                                                         tmp%1#0


