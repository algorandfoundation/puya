// Op                                                           Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // compile/apps.py:42
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        int 1                                                   1
        f-store lifted%return#0                                 (𝕗) lifted%return#0 |
        // compile/apps.py:37
        // class LargeProgram(ARC4Contract):
        txn NumAppArgs                                          (𝕗) lifted%return#0 | tmp%0#1
        bz main_bare_routing@7 ; b main_abi_routing@2           (𝕗) lifted%return#0 |

    main_abi_routing@2:                                         (𝕗) lifted%return#0 |
        // compile/apps.py:37
        // class LargeProgram(ARC4Contract):
        txna ApplicationArgs 0                                  (𝕗) lifted%return#0 | tmp%2#0
        method delete()void                                     (𝕗) lifted%return#0 | tmp%2#0,Method(delete()void)
        method get_big_bytes_length()uint64                     (𝕗) lifted%return#0 | tmp%2#0,Method(delete()void),Method(get_big_bytes_length()uint64)
        l-load tmp%2#0 2                                        (𝕗) lifted%return#0 | Method(delete()void),Method(get_big_bytes_length()uint64),tmp%2#0
        match main_delete_route@3 main_get_big_bytes_length_route@4 ; b main_switch_case_default@5 (𝕗) lifted%return#0 | 

    main_delete_route@3:                                        (𝕗) lifted%return#0 |
        // compile/apps.py:42
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                        (𝕗) lifted%return#0 | tmp%3#0
        int DeleteApplication                                   (𝕗) lifted%return#0 | tmp%3#0,DeleteApplication
        ==                                                      (𝕗) lifted%return#0 | tmp%4#0
        assert // OnCompletion is not DeleteApplication         (𝕗) lifted%return#0 |
        txn ApplicationID                                       (𝕗) lifted%return#0 | tmp%5#0
        assert // can only call when not creating               (𝕗) lifted%return#0 |
        f-load lifted%return#0                                  (𝕗) lifted%return#0 | lifted%return#0
        return                                                  (𝕗) lifted%return#0 |

    main_get_big_bytes_length_route@4:                          (𝕗) lifted%return#0 |
        // compile/apps.py:38
        // @arc4.abimethod()
        txn OnCompletion                                        (𝕗) lifted%return#0 | tmp%7#0
        !                                                       (𝕗) lifted%return#0 | tmp%8#0
        assert // OnCompletion is not NoOp                      (𝕗) lifted%return#0 |
        txn ApplicationID                                       (𝕗) lifted%return#0 | tmp%9#0
        assert // can only call when not creating               (𝕗) lifted%return#0 |
        byte 0x151f7c750000000000001000                         (𝕗) lifted%return#0 | 0x151f7c750000000000001000
        log                                                     (𝕗) lifted%return#0 |
        f-load lifted%return#0                                  (𝕗) lifted%return#0 | lifted%return#0
        return                                                  (𝕗) lifted%return#0 |

    main_switch_case_default@5:                                 (𝕗) lifted%return#0 |
        err                                                     (𝕗) lifted%return#0 |

    main_bare_routing@7:                                        (𝕗) lifted%return#0 |
        // compile/apps.py:37
        // class LargeProgram(ARC4Contract):
        txn OnCompletion                                        (𝕗) lifted%return#0 | tmp%11#0
        !                                                       (𝕗) lifted%return#0 | not%tmp%11#0
        assert                                                  (𝕗) lifted%return#0 |
        txn ApplicationID                                       (𝕗) lifted%return#0 | tmp%12#0
        !                                                       (𝕗) lifted%return#0 | tmp%13#0
        assert // can only call when creating                   (𝕗) lifted%return#0 |
        f-load lifted%return#0                                  (𝕗) lifted%return#0 | lifted%return#0
        return                                                  (𝕗) lifted%return#0 |


