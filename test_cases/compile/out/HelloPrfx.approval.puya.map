{
  "version": 3,
  "sources": [
    "../apps.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAuBK;;;;;;;AA6CG;AAAgB;AAAhB;AAFR;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAIK;AA/CA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA2CL;;AAAA;;AAAA;;;;AAAA;AAvCK;;AAAA;AAIA;;;AAAA;;;AAEU;;AAAA;AAAA;AAAA;AAAgB;;;AAAhB;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.compile.apps.HelloPrfx.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock \"greeting\" PRFX_GREETING"
    },
    "17": {
      "op": "pushint 1 // 1"
    },
    "19": {
      "op": "txn ApplicationID",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#0"
      ]
    },
    "21": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "24": {
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\"",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "\"greeting\""
      ]
    },
    "25": {
      "op": "bytec_1 // PRFX_GREETING",
      "defined_out": [
        "\"greeting\"",
        "PRFX_GREETING",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "\"greeting\"",
        "PRFX_GREETING"
      ]
    },
    "26": {
      "op": "app_global_put",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "27": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#2"
      ]
    },
    "29": {
      "op": "bz main_bare_routing@11",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "32": {
      "op": "pushbytes 0x24378d3c // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(delete()void)"
      ]
    },
    "38": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(delete()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(delete()void)",
        "tmp%2#0"
      ]
    },
    "41": {
      "op": "match main_delete_route@5",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "45": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%7#0"
      ]
    },
    "47": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%8#0"
      ]
    },
    "48": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "49": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%10#0"
      ]
    },
    "51": {
      "op": "bz main_create_NoOp@9",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "54": {
      "op": "pushbytes 0xd0a28200 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(greet(string)string)"
      ]
    },
    "60": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(greet(string)string)",
        "tmp%11#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(greet(string)string)",
        "tmp%11#0"
      ]
    },
    "63": {
      "op": "match greet",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "67": {
      "op": "err"
    },
    "68": {
      "block": "main_create_NoOp@9",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(create()void)"
      ]
    },
    "74": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create()void)",
        "tmp%12#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(create()void)",
        "tmp%12#0"
      ]
    },
    "77": {
      "op": "match main_create_route@10",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "81": {
      "op": "err"
    },
    "82": {
      "block": "main_create_route@10",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "83": {
      "block": "main_delete_route@5",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0"
      ]
    },
    "85": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0",
        "DeleteApplication"
      ]
    },
    "87": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "88": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "89": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%5#0"
      ]
    },
    "91": {
      "error": "can only call when not creating",
      "op": "return // on error: can only call when not creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "92": {
      "block": "main_bare_routing@11",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "lifted%return#0",
        "4"
      ]
    },
    "94": {
      "op": "txn OnCompletion",
      "defined_out": [
        "4",
        "tmp%13#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "4",
        "tmp%13#0"
      ]
    },
    "96": {
      "op": "match main_update@12",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "100": {
      "op": "err"
    },
    "101": {
      "block": "main_update@12",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%14#0"
      ]
    },
    "103": {
      "error": "can only call when not creating",
      "op": "return // on error: can only call when not creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "104": {
      "subroutine": "test_cases.compile.apps.HelloBase.greet[routing]",
      "params": {},
      "block": "greet",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "107": {
      "op": "extract 2 0",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "110": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0"
      ]
    },
    "112": {
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\"",
        "0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "0",
        "\"greeting\""
      ]
    },
    "113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "114": {
      "error": "check self.greeting exists",
      "op": "assert // check self.greeting exists",
      "stack_out": [
        "name#0",
        "maybe_value%0#0"
      ]
    },
    "115": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "maybe_value%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "maybe_value%0#0",
        "\" \""
      ]
    },
    "118": {
      "op": "concat",
      "defined_out": [
        "name#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "name#0",
        "tmp%0#1"
      ]
    },
    "119": {
      "op": "swap",
      "stack_out": [
        "tmp%0#1",
        "name#0"
      ]
    },
    "120": {
      "op": "concat",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "121": {
      "op": "dup",
      "defined_out": [
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ]
    },
    "122": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "aggregate%length%0#0"
      ]
    },
    "123": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "aggregate%as_bytes%0#0"
      ]
    },
    "124": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "aggregate%length_uint16%0#0"
      ]
    },
    "127": {
      "op": "swap",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#1"
      ]
    },
    "128": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0"
      ]
    },
    "129": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "135": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ]
    },
    "136": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "137": {
      "op": "log",
      "stack_out": []
    },
    "138": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "140": {
      "op": "return",
      "stack_out": []
    }
  }
}