{
    "hints": {
        "create()uint64": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "delete()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        },
        "greet(string)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmNvbXBpbGUuYXBwcy5IZWxsb090aGVyQ29uc3RhbnRzLmFwcHJvdmFsX3Byb2dyYW06CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJncmVldGluZyIgIm51bSIgImFkZHJlc3MiICJtZXRob2QiIDB4MTUxZjdjNzUgVE1QTF9HUkVFVElORyBUTVBMX05VTSBUTVBMX0FDQ09VTlQgVE1QTF9NRVRIT0QKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDIKICAgIGNhbGxzdWIgX19pbml0X18KCm1haW5fYWZ0ZXJfaWZfZWxzZUAyOgogICAgY2FsbHN1YiBfX3B1eWFfYXJjNF9yb3V0ZXJfXwogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5jb21waWxlLmFwcHMuSGVsbG9PdGhlckNvbnN0YW50cy5fX2luaXRfXygpIC0+IHZvaWQ6Cl9faW5pdF9fOgogICAgLy8gY29tcGlsZS9hcHBzLnB5OjgzCiAgICAvLyBkZWYgX19pbml0X18oc2VsZikgLT4gTm9uZToKICAgIHByb3RvIDAgMAogICAgLy8gY29tcGlsZS9hcHBzLnB5Ojg0CiAgICAvLyBzZWxmLmdyZWV0aW5nID0gVGVtcGxhdGVWYXJbU3RyaW5nXSgiR1JFRVRJTkciKQogICAgYnl0ZWNfMCAvLyAiZ3JlZXRpbmciCiAgICBieXRlYyA1IC8vIFRNUExfR1JFRVRJTkcKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBjb21waWxlL2FwcHMucHk6ODUKICAgIC8vIHNlbGYubnVtID0gVGVtcGxhdGVWYXJbQmlnVUludF0oIk5VTSIpCiAgICBieXRlY18xIC8vICJudW0iCiAgICBieXRlYyA2IC8vIFRNUExfTlVNCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gY29tcGlsZS9hcHBzLnB5Ojg2CiAgICAvLyBzZWxmLmFkZHJlc3MgPSBUZW1wbGF0ZVZhcltBY2NvdW50XSgiQUNDT1VOVCIpCiAgICBieXRlY18yIC8vICJhZGRyZXNzIgogICAgYnl0ZWMgNyAvLyBUTVBMX0FDQ09VTlQKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBjb21waWxlL2FwcHMucHk6ODcKICAgIC8vIHNlbGYubWV0aG9kID0gVGVtcGxhdGVWYXJbQnl0ZXNdKCJNRVRIT0QiKQogICAgYnl0ZWNfMyAvLyAibWV0aG9kIgogICAgYnl0ZWMgOCAvLyBUTVBMX01FVEhPRAogICAgYXBwX2dsb2JhbF9wdXQKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMuY29tcGlsZS5hcHBzLkhlbGxvT3RoZXJDb25zdGFudHMuX19wdXlhX2FyYzRfcm91dGVyX18oKSAtPiB1aW50NjQ6Cl9fcHV5YV9hcmM0X3JvdXRlcl9fOgogICAgLy8gY29tcGlsZS9hcHBzLnB5OjgxCiAgICAvLyBjbGFzcyBIZWxsb090aGVyQ29uc3RhbnRzKEFSQzRDb250cmFjdCk6CiAgICBwcm90byAwIDEKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBfX3B1eWFfYXJjNF9yb3V0ZXJfX19hZnRlcl9pZl9lbHNlQDgKICAgIHB1c2hieXRlc3MgMHhkOTI4NWE3NCAweDI0Mzc4ZDNjIDB4NWIwYzIzNzUgLy8gbWV0aG9kICJjcmVhdGUoKXVpbnQ2NCIsIG1ldGhvZCAiZGVsZXRlKCl2b2lkIiwgbWV0aG9kICJncmVldChzdHJpbmcpYnl0ZVtdIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggX19wdXlhX2FyYzRfcm91dGVyX19fY3JlYXRlX3JvdXRlQDIgX19wdXlhX2FyYzRfcm91dGVyX19fZGVsZXRlX3JvdXRlQDMgX19wdXlhX2FyYzRfcm91dGVyX19fZ3JlZXRfcm91dGVANAogICAgaW50Y18wIC8vIDAKICAgIHJldHN1YgoKX19wdXlhX2FyYzRfcm91dGVyX19fY3JlYXRlX3JvdXRlQDI6CiAgICAvLyBjb21waWxlL2FwcHMucHk6ODkKICAgIC8vIEBhcmM0LmFiaW1ldGhvZChjcmVhdGU9InJlcXVpcmUiKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGNhbGxzdWIgY3JlYXRlCiAgICBpdG9iCiAgICBieXRlYyA0IC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0c3ViCgpfX3B1eWFfYXJjNF9yb3V0ZXJfX19kZWxldGVfcm91dGVAMzoKICAgIC8vIGNvbXBpbGUvYXBwcy5weTo5MwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJEZWxldGVBcHBsaWNhdGlvbiJdKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgcHVzaGludCA1IC8vIERlbGV0ZUFwcGxpY2F0aW9uCiAgICA9PQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgRGVsZXRlQXBwbGljYXRpb24KICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgaW50Y18xIC8vIDEKICAgIHJldHN1YgoKX19wdXlhX2FyYzRfcm91dGVyX19fZ3JlZXRfcm91dGVANDoKICAgIC8vIGNvbXBpbGUvYXBwcy5weTo5NwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gY29tcGlsZS9hcHBzLnB5OjgxCiAgICAvLyBjbGFzcyBIZWxsb090aGVyQ29uc3RhbnRzKEFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBleHRyYWN0IDIgMAogICAgLy8gY29tcGlsZS9hcHBzLnB5Ojk3CiAgICAvLyBAYXJjNC5hYmltZXRob2QoKQogICAgY2FsbHN1YiBncmVldAogICAgZHVwCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ5dGVjIDQgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXRzdWIKCl9fcHV5YV9hcmM0X3JvdXRlcl9fX2FmdGVyX2lmX2Vsc2VAODoKICAgIC8vIGNvbXBpbGUvYXBwcy5weTo4MQogICAgLy8gY2xhc3MgSGVsbG9PdGhlckNvbnN0YW50cyhBUkM0Q29udHJhY3QpOgogICAgaW50Y18wIC8vIDAKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMuY29tcGlsZS5hcHBzLkhlbGxvT3RoZXJDb25zdGFudHMuY3JlYXRlKCkgLT4gdWludDY0OgpjcmVhdGU6CiAgICAvLyBjb21waWxlL2FwcHMucHk6ODktOTAKICAgIC8vIEBhcmM0LmFiaW1ldGhvZChjcmVhdGU9InJlcXVpcmUiKQogICAgLy8gZGVmIGNyZWF0ZShzZWxmKSAtPiBVSW50NjQ6CiAgICBwcm90byAwIDEKICAgIC8vIGNvbXBpbGUvYXBwcy5weTo5MQogICAgLy8gcmV0dXJuIFVJbnQ2NCgxKQogICAgaW50Y18xIC8vIDEKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMuY29tcGlsZS5hcHBzLkhlbGxvT3RoZXJDb25zdGFudHMuZ3JlZXQobmFtZTogYnl0ZXMpIC0+IGJ5dGVzOgpncmVldDoKICAgIC8vIGNvbXBpbGUvYXBwcy5weTo5Ny05OAogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIC8vIGRlZiBncmVldChzZWxmLCBuYW1lOiBTdHJpbmcpIC0+IEJ5dGVzOgogICAgcHJvdG8gMSAxCiAgICAvLyBjb21waWxlL2FwcHMucHk6OTkKICAgIC8vIG51bV9hbHBoYSA9IChzZWxmLm51bSArIDQ4KS5ieXRlc1stMV0KICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJudW0iCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYubnVtIGV4aXN0cwogICAgcHVzaGJ5dGVzIDB4MzAKICAgIGIrCiAgICBkdXAKICAgIGxlbgogICAgaW50Y18xIC8vIDEKICAgIC0KICAgIGludGNfMSAvLyAxCiAgICBleHRyYWN0MwogICAgLy8gY29tcGlsZS9hcHBzLnB5OjEwMQogICAgLy8gc2VsZi5ncmVldGluZy5ieXRlcyArIGIiICIgKyBuYW1lLmJ5dGVzICsgbnVtX2FscGhhICsgc2VsZi5hZGRyZXNzLmJ5dGVzICsgc2VsZi5tZXRob2QKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJncmVldGluZyIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5ncmVldGluZyBleGlzdHMKICAgIHB1c2hieXRlcyAweDIwCiAgICBjb25jYXQKICAgIGZyYW1lX2RpZyAtMQogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18yIC8vICJhZGRyZXNzIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBzZWxmLmFkZHJlc3MgZXhpc3RzCiAgICBjb25jYXQKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18zIC8vICJtZXRob2QiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYubWV0aG9kIGV4aXN0cwogICAgY29uY2F0CiAgICAvLyBjb21waWxlL2FwcHMucHk6MTAwLTEwMgogICAgLy8gcmV0dXJuICgKICAgIC8vICAgICBzZWxmLmdyZWV0aW5nLmJ5dGVzICsgYiIgIiArIG5hbWUuYnl0ZXMgKyBudW1fYWxwaGEgKyBzZWxmLmFkZHJlc3MuYnl0ZXMgKyBzZWxmLm1ldGhvZAogICAgLy8gKQogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmNvbXBpbGUuYXBwcy5IZWxsb090aGVyQ29uc3RhbnRzLmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "address": {
                    "type": "bytes",
                    "key": "address"
                },
                "greeting": {
                    "type": "bytes",
                    "key": "greeting"
                },
                "method": {
                    "type": "bytes",
                    "key": "method"
                },
                "num": {
                    "type": "bytes",
                    "key": "num"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "HelloOtherConstants",
        "methods": [
            {
                "name": "create",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "delete",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "greet",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}