{
    "hints": {
        "test_logicsig()address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_compile_contract()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_compile_contract_tmpl()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_compile_contract_prfx()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_compile_contract_large()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_arc4_create()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_arc4_create_tmpl()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_arc4_create_prfx()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_arc4_create_large()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_arc4_update()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_other_constants()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmNvbXBpbGUuZmFjdG9yeS5IZWxsb0ZhY3RvcnkuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIGNvbXBpbGUvZmFjdG9yeS5weToyNAogICAgLy8gY2xhc3MgSGVsbG9GYWN0b3J5KEFSQzRDb250cmFjdCk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "HelloFactory",
        "methods": [
            {
                "name": "test_logicsig",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "test_compile_contract",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_compile_contract_tmpl",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_compile_contract_prfx",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_compile_contract_large",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_arc4_create",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_arc4_create_tmpl",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_arc4_create_prfx",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_arc4_create_large",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_arc4_update",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_other_constants",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}