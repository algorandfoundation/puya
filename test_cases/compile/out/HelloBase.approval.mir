// Op                                                                                  // Op Description                                         Stack (out)                                                     Source code                                                                      Source line

#pragma version 10

// test_cases.compile.apps.HelloBase.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                                                  //                                                        {txn}
                                                                                       // virtual: store app_id%0#0 to l-stack (no copy)         app_id%0#0
                                                                                       // virtual: load app_id%0#0 from l-stack (no copy)        app_id%0#0
    bnz main_entrypoint@2                                                              //
    // Implicit fall through to main_on_create@1                                       //

main_on_create@1:
    callsub __init__                                                                   //
    // Implicit fall through to main_entrypoint@2                                      //

main_entrypoint@2:
    callsub __puya_arc4_router__                                                       //                                                        {__puya_arc4_router__}                                                                                                                           INTERNAL:1
                                                                                       // virtual: store tmp%0#0 to l-stack (no copy)            tmp%0#0                                                                                                                                          INTERNAL:1
                                                                                       // virtual: load tmp%0#0 from l-stack (no copy)           tmp%0#0                                                                                                                                          INTERNAL:1
    return                                                                             //                                                                                                                                                                                                         INTERNAL:1


// test_cases.compile.apps.HelloBase.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1                                                                          //                                                                                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20

__puya_arc4_router___block@0:
    txn NumAppArgs                                                                     //                                                        {txn}                                                           class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%0#0 to l-stack (no copy)            tmp%0#0                                                         class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: load tmp%0#0 from l-stack (no copy)           tmp%0#0                                                         class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    bz __puya_arc4_router___bare_routing@6                                             //                                                                                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    // Implicit fall through to __puya_arc4_router___abi_routing@1                     //                                                                                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20

__puya_arc4_router___abi_routing@1:
    txna ApplicationArgs 0                                                             //                                                        {txna}                                                          class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%2#0 to l-stack (no copy)            tmp%2#0                                                         class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    method "delete()void"                                                              //                                                        tmp%2#0,method<"delete()void">                                  class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    method "greet(string)string"                                                       //                                                        tmp%2#0,method<"delete()void">,method<"greet(string)string">    class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    uncover 2                                                                          // load tmp%2#0 from l-stack (no copy)                    method<"delete()void">,method<"greet(string)string">,tmp%2#0    class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    match __puya_arc4_router___delete_route@2 __puya_arc4_router___greet_route@3       //                                                                                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    int 0                                                                              //                                                        0                                                               class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    retsub                                                                             //                                                        0                                                               class HelloBase(ARC4Contract):                                                   compile/apps.py:20

__puya_arc4_router___delete_route@2:
    txn OnCompletion                                                                   //                                                        {txn}                                                           arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
                                                                                       // virtual: store tmp%3#0 to l-stack (no copy)            tmp%3#0                                                         arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
                                                                                       // virtual: load tmp%3#0 from l-stack (no copy)           tmp%3#0                                                         arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    int DeleteApplication                                                              //                                                        tmp%3#0,DeleteApplication                                       arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    ==                                                                                 //                                                        {==}                                                            arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
                                                                                       // virtual: store tmp%4#0 to l-stack (no copy)            tmp%4#0                                                         arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
                                                                                       // virtual: load tmp%4#0 from l-stack (no copy)           tmp%4#0                                                         arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    assert // OnCompletion is DeleteApplication                                        //                                                                                                                        arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    txn ApplicationID                                                                  //                                                        {txn}                                                           arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
                                                                                       // virtual: store tmp%5#0 to l-stack (no copy)            tmp%5#0                                                         arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
                                                                                       // virtual: load tmp%5#0 from l-stack (no copy)           tmp%5#0                                                         arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    assert // is not creating                                                          //                                                                                                                        arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    int 1                                                                              //                                                        1                                                               arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25
    retsub                                                                             //                                                        1                                                               arc4.abimethod(allow_actions=["DeleteApplication"])                              compile/apps.py:25

__puya_arc4_router___greet_route@3:
    txn OnCompletion                                                                   //                                                        {txn}                                                           arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store tmp%7#0 to l-stack (no copy)            tmp%7#0                                                         arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load tmp%7#0 from l-stack (no copy)           tmp%7#0                                                         arc4.abimethod()                                                                 compile/apps.py:33
    !                                                                                  //                                                        {!}                                                             arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store tmp%8#0 to l-stack (no copy)            tmp%8#0                                                         arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load tmp%8#0 from l-stack (no copy)           tmp%8#0                                                         arc4.abimethod()                                                                 compile/apps.py:33
    assert // OnCompletion is NoOp                                                     //                                                                                                                        arc4.abimethod()                                                                 compile/apps.py:33
    txn ApplicationID                                                                  //                                                        {txn}                                                           arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store tmp%9#0 to l-stack (no copy)            tmp%9#0                                                         arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load tmp%9#0 from l-stack (no copy)           tmp%9#0                                                         arc4.abimethod()                                                                 compile/apps.py:33
    assert // is not creating                                                          //                                                                                                                        arc4.abimethod()                                                                 compile/apps.py:33
    txna ApplicationArgs 1                                                             //                                                        {txna}                                                          class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%11#0 to l-stack (no copy)           tmp%11#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: load tmp%11#0 from l-stack (no copy)          tmp%11#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    extract 2 0                                                                        //                                                        {extract}                                                       class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%12#0 to l-stack (no copy)           tmp%12#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: load tmp%12#0 from l-stack (no copy)          tmp%12#0                                                        arc4.abimethod()                                                                 compile/apps.py:33
    callsub greet                                                                      //                                                        {greet}                                                         arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store to_encode%0#0 to l-stack (no copy)      to_encode%0#0                                                   arc4.abimethod()                                                                 compile/apps.py:33
    dup                                                                                // load to_encode%0#0 from l-stack (copy)                 to_encode%0#0,to_encode%0#0                                     arc4.abimethod()                                                                 compile/apps.py:33
    len                                                                                //                                                        to_encode%0#0,{len}                                             arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store length%0#0 to l-stack (no copy)         to_encode%0#0,length%0#0                                        arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load length%0#0 from l-stack (no copy)        to_encode%0#0,length%0#0                                        arc4.abimethod()                                                                 compile/apps.py:33
    itob                                                                               //                                                        to_encode%0#0,{itob}                                            arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store as_bytes%0#0 to l-stack (no copy)       to_encode%0#0,as_bytes%0#0                                      arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load as_bytes%0#0 from l-stack (no copy)      to_encode%0#0,as_bytes%0#0                                      arc4.abimethod()                                                                 compile/apps.py:33
    extract 6 2                                                                        //                                                        to_encode%0#0,{extract}                                         arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store length_uint16%0#0 to l-stack (no copy)  to_encode%0#0,length_uint16%0#0                                 arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load length_uint16%0#0 from l-stack (no copy) to_encode%0#0,length_uint16%0#0                                 arc4.abimethod()                                                                 compile/apps.py:33
    uncover 1                                                                          // load to_encode%0#0 from l-stack (no copy)              length_uint16%0#0,to_encode%0#0                                 arc4.abimethod()                                                                 compile/apps.py:33
    concat                                                                             //                                                        {concat}                                                        arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store encoded_value%0#0 to l-stack (no copy)  encoded_value%0#0                                               arc4.abimethod()                                                                 compile/apps.py:33
    byte 0x151f7c75                                                                    //                                                        encoded_value%0#0,0x151f7c75                                    arc4.abimethod()                                                                 compile/apps.py:33
    uncover 1                                                                          // load encoded_value%0#0 from l-stack (no copy)          0x151f7c75,encoded_value%0#0                                    arc4.abimethod()                                                                 compile/apps.py:33
    concat                                                                             //                                                        {concat}                                                        arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: store tmp%13#0 to l-stack (no copy)           tmp%13#0                                                        arc4.abimethod()                                                                 compile/apps.py:33
                                                                                       // virtual: load tmp%13#0 from l-stack (no copy)          tmp%13#0                                                        arc4.abimethod()                                                                 compile/apps.py:33
    log                                                                                //                                                                                                                        arc4.abimethod()                                                                 compile/apps.py:33
    int 1                                                                              //                                                        1                                                               arc4.abimethod()                                                                 compile/apps.py:33
    retsub                                                                             //                                                        1                                                               arc4.abimethod()                                                                 compile/apps.py:33

__puya_arc4_router___bare_routing@6:
    txn OnCompletion                                                                   //                                                        {txn}                                                           class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%14#0 to l-stack (no copy)           tmp%14#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    int 0                                                                              //                                                        tmp%14#0,0                                                      class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    int 4                                                                              //                                                        tmp%14#0,0,4                                                    class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    uncover 2                                                                          // load tmp%14#0 from l-stack (no copy)                   0,4,tmp%14#0                                                    class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    match __puya_arc4_router_____algopy_default_create@7 __puya_arc4_router___update@8 //                                                                                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    int 0                                                                              //                                                        0                                                               class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    retsub                                                                             //                                                        0                                                               class HelloBase(ARC4Contract):                                                   compile/apps.py:20

__puya_arc4_router_____algopy_default_create@7:
    txn ApplicationID                                                                  //                                                        {txn}                                                           class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%15#0 to l-stack (no copy)           tmp%15#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: load tmp%15#0 from l-stack (no copy)          tmp%15#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    !                                                                                  //                                                        {!}                                                             class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: store tmp%16#0 to l-stack (no copy)           tmp%16#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
                                                                                       // virtual: load tmp%16#0 from l-stack (no copy)          tmp%16#0                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    assert // is creating                                                              //                                                                                                                        class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    int 1                                                                              //                                                        1                                                               class HelloBase(ARC4Contract):                                                   compile/apps.py:20
    retsub                                                                             //                                                        1                                                               class HelloBase(ARC4Contract):                                                   compile/apps.py:20

__puya_arc4_router___update@8:
    txn ApplicationID                                                                  //                                                        {txn}                                                           arc4.baremethod(allow_actions=["UpdateApplication"])                             compile/apps.py:29
                                                                                       // virtual: store tmp%17#0 to l-stack (no copy)           tmp%17#0                                                        arc4.baremethod(allow_actions=["UpdateApplication"])                             compile/apps.py:29
                                                                                       // virtual: load tmp%17#0 from l-stack (no copy)          tmp%17#0                                                        arc4.baremethod(allow_actions=["UpdateApplication"])                             compile/apps.py:29
    assert // is not creating                                                          //                                                                                                                        arc4.baremethod(allow_actions=["UpdateApplication"])                             compile/apps.py:29
    int 1                                                                              //                                                        1                                                               @arc4.baremethod(allow_actions=["UpdateApplication"])\ndef update(self) -> None: compile/apps.py:29-30
    retsub                                                                             //                                                        1                                                               @arc4.baremethod(allow_actions=["UpdateApplication"])\ndef update(self) -> None: compile/apps.py:29-30


// test_cases.compile.apps.HelloBase.greet(name: bytes) -> bytes:
greet:
    proto 1 1                                                                          //                                                        (𝕡) name#0 |                                                    @arc4.abimethod()\ndef greet(self, name: String) -> String:                      compile/apps.py:33-34

greet_block@0:
    int 0                                                                              //                                                        (𝕡) name#0 | 0                                                  self.greeting                                                                    compile/apps.py:35
    byte "greeting"                                                                    //                                                        (𝕡) name#0 | 0,"greeting"                                       self.greeting                                                                    compile/apps.py:35
    app_global_get_ex                                                                  //                                                        (𝕡) name#0 | {app_global_get_ex}.0,{app_global_get_ex}.1        self.greeting                                                                    compile/apps.py:35
                                                                                       // virtual: store maybe_exists%0#0 to l-stack (no copy)   (𝕡) name#0 | maybe_exists%0#0,{app_global_get_ex}.0             self.greeting                                                                    compile/apps.py:35
                                                                                       // virtual: store maybe_value%0#0 to l-stack (no copy)    (𝕡) name#0 | maybe_value%0#0,maybe_exists%0#0                   self.greeting                                                                    compile/apps.py:35
                                                                                       // virtual: load maybe_exists%0#0 from l-stack (no copy)  (𝕡) name#0 | maybe_value%0#0,maybe_exists%0#0                   self.greeting                                                                    compile/apps.py:35
    assert // check self.greeting exists                                               //                                                        (𝕡) name#0 | maybe_value%0#0                                    self.greeting                                                                    compile/apps.py:35
                                                                                       // virtual: load maybe_value%0#0 from l-stack (no copy)   (𝕡) name#0 | maybe_value%0#0                                    self.greeting + " "                                                              compile/apps.py:35
    byte " "                                                                           //                                                        (𝕡) name#0 | maybe_value%0#0," "                                " "                                                                              compile/apps.py:35
    concat                                                                             //                                                        (𝕡) name#0 | {concat}                                           self.greeting + " "                                                              compile/apps.py:35
                                                                                       // virtual: store tmp%0#0 to l-stack (no copy)            (𝕡) name#0 | tmp%0#0                                            self.greeting + " "                                                              compile/apps.py:35
                                                                                       // virtual: load tmp%0#0 from l-stack (no copy)           (𝕡) name#0 | tmp%0#0                                            self.greeting + " " + name                                                       compile/apps.py:35
    frame_dig -1                                                                       // load name#0 from parameters                            (𝕡) name#0 | tmp%0#0,name#0                                     self.greeting + " " + name                                                       compile/apps.py:35
    concat                                                                             //                                                        (𝕡) name#0 | {concat}                                           self.greeting + " " + name                                                       compile/apps.py:35
                                                                                       // virtual: store tmp%1#0 to l-stack (no copy)            (𝕡) name#0 | tmp%1#0                                            self.greeting + " " + name                                                       compile/apps.py:35
                                                                                       // virtual: load tmp%1#0 from l-stack (no copy)           (𝕡) name#0 | tmp%1#0                                            return self.greeting + " " + name                                                compile/apps.py:35
    retsub                                                                             //                                                        tmp%1#0                                                         return self.greeting + " " + name                                                compile/apps.py:35


// test_cases.compile.apps.HelloBase.__init__() -> void:
__init__:
    proto 0 0                                                                          //                                                                                                                        def __init__(self) -> None:                                                      compile/apps.py:22

__init___block@0:
    byte "greeting"                                                                    //                                                        "greeting"                                                      self.greeting                                                                    compile/apps.py:23
    byte ""                                                                            //                                                        "greeting",""                                                   String()                                                                         compile/apps.py:23
    app_global_put                                                                     //                                                                                                                        self.greeting = String()                                                         compile/apps.py:23
    retsub                                                                             //

