// Op                                                            Stack (out)
// test_cases.compile.apps.Hello.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        int 1                                                    lifted%return#0
        f-store lifted%return#0                                  (𝕗) lifted%return#0 |
        txn ApplicationID                                        (𝕗) lifted%return#0 | tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2         (𝕗) lifted%return#0 |

    main_call___init__@1:                                        (𝕗) lifted%return#0 |
        // compile/apps.py:22
        // self.greeting = String()
        byte "greeting"                                          (𝕗) lifted%return#0 | "greeting"
        byte ""                                                  (𝕗) lifted%return#0 | "greeting",""
        app_global_put                                           (𝕗) lifted%return#0 |
        b main_after_if_else@2                                   (𝕗) lifted%return#0 |

    main_after_if_else@2:                                        (𝕗) lifted%return#0 |
        // compile/apps.py:52
        // class Hello(HelloBase):
        txn NumAppArgs                                           (𝕗) lifted%return#0 | tmp%0#2
        bz main_update@12 ; b main_abi_routing@4                 (𝕗) lifted%return#0 |

    main_abi_routing@4:                                          (𝕗) lifted%return#0 |
        // compile/apps.py:52
        // class Hello(HelloBase):
        txna ApplicationArgs 0                                   (𝕗) lifted%return#0 | tmp%2#0
        method delete()void                                      (𝕗) lifted%return#0 | tmp%2#0,Method(delete()void)
        l-load tmp%2#0 1                                         (𝕗) lifted%return#0 | Method(delete()void),tmp%2#0
        match main_delete_route@5 ; b main_switch_case_next@6    (𝕗) lifted%return#0 |

    main_delete_route@5:                                         (𝕗) lifted%return#0 |
        // compile/apps.py:24
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                         (𝕗) lifted%return#0 | tmp%3#0
        int DeleteApplication                                    (𝕗) lifted%return#0 | tmp%3#0,DeleteApplication
        ==                                                       (𝕗) lifted%return#0 | tmp%4#0
        txn ApplicationID                                        (𝕗) lifted%return#0 | tmp%4#0,tmp%5#0
        l-load tmp%4#0 1                                         (𝕗) lifted%return#0 | tmp%5#0,tmp%4#0
        l-load tmp%5#0 1                                         (𝕗) lifted%return#0 | tmp%4#0,tmp%5#0
        &&                                                       (𝕗) lifted%return#0 | tmp%7#0
        assert // OnCompletion must be DeleteApplication && can only call when not creating (𝕗) lifted%return#0 | 
        f-load lifted%return#0                                   (𝕗) lifted%return#0 | lifted%return#0
        return                                                   (𝕗) lifted%return#0 |

    main_switch_case_next@6:                                     (𝕗) lifted%return#0 |
        // compile/apps.py:52
        // class Hello(HelloBase):
        txn OnCompletion                                         (𝕗) lifted%return#0 | tmp%8#0
        !                                                        (𝕗) lifted%return#0 | tmp%9#0
        assert // OnCompletion is not NoOp                       (𝕗) lifted%return#0 |
        txn ApplicationID                                        (𝕗) lifted%return#0 | tmp%10#0
        bz main_create_NoOp@9 ; b main_call_NoOp@7               (𝕗) lifted%return#0 |

    main_call_NoOp@7:                                            (𝕗) lifted%return#0 |
        // compile/apps.py:52
        // class Hello(HelloBase):
        txna ApplicationArgs 0                                   (𝕗) lifted%return#0 | tmp%11#0
        method greet(string)string                               (𝕗) lifted%return#0 | tmp%11#0,Method(greet(string)string)
        l-load tmp%11#0 1                                        (𝕗) lifted%return#0 | Method(greet(string)string),tmp%11#0
        match main_greet_route@8 ; b main_after_if_else@11       (𝕗) lifted%return#0 |

    main_greet_route@8:                                          (𝕗) lifted%return#0 |
        // compile/apps.py:32
        // @arc4.abimethod()
        callsub greet                                            (𝕗) lifted%return#0 |
        b main_after_if_else@11                                  (𝕗) lifted%return#0 |

    main_create_NoOp@9:                                          (𝕗) lifted%return#0 |
        // compile/apps.py:52
        // class Hello(HelloBase):
        txna ApplicationArgs 0                                   (𝕗) lifted%return#0 | tmp%12#0
        method create(string)void                                (𝕗) lifted%return#0 | tmp%12#0,Method(create(string)void)
        l-load tmp%12#0 1                                        (𝕗) lifted%return#0 | Method(create(string)void),tmp%12#0
        match main_create_route@10 ; b main_after_if_else@11     (𝕗) lifted%return#0 |

    main_create_route@10:                                        (𝕗) lifted%return#0 |
        // compile/apps.py:53
        // @arc4.abimethod(create="require")
        callsub create                                           (𝕗) lifted%return#0 |
        b main_after_if_else@11                                  (𝕗) lifted%return#0 |

    main_after_if_else@11:                                       (𝕗) lifted%return#0 |
        // compile/apps.py:52
        // class Hello(HelloBase):
        err                                                      (𝕗) lifted%return#0 |

    main_update@12:                                              (𝕗) lifted%return#0 |
        // compile/apps.py:28
        // @arc4.baremethod(allow_actions=["UpdateApplication"])
        txn OnCompletion                                         (𝕗) lifted%return#0 | tmp%13#0
        int UpdateApplication                                    (𝕗) lifted%return#0 | tmp%13#0,UpdateApplication
        ==                                                       (𝕗) lifted%return#0 | tmp%14#0
        txn ApplicationID                                        (𝕗) lifted%return#0 | tmp%14#0,tmp%15#0
        l-load tmp%14#0 1                                        (𝕗) lifted%return#0 | tmp%15#0,tmp%14#0
        l-load tmp%15#0 1                                        (𝕗) lifted%return#0 | tmp%14#0,tmp%15#0
        &&                                                       (𝕗) lifted%return#0 | tmp%17#0
        assert // OnCompletion must be UpdateApplication && can only call when not creating (𝕗) lifted%return#0 | 
        f-load lifted%return#0                                   (𝕗) lifted%return#0 | lifted%return#0
        return                                                   (𝕗) lifted%return#0 |


// test_cases.compile.apps.Hello.create[routing]() -> void:
subroutine create:
    create_block@0:
        // compile/apps.py:53
        // @arc4.abimethod(create="require")
        txna ApplicationArgs 1                                   reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                              greeting#0
        // compile/apps.py:55
        // self.greeting = greeting
        byte "greeting"                                          greeting#0,"greeting"
        l-load greeting#0 1                                      "greeting",greeting#0
        app_global_put
        // compile/apps.py:53
        // @arc4.abimethod(create="require")
        int 1                                                    1
        return


// test_cases.compile.apps.HelloBase.greet[routing]() -> void:
subroutine greet:
    greet_block@0:
        // compile/apps.py:32
        // @arc4.abimethod()
        txna ApplicationArgs 1                                   reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                              name#0
        // compile/apps.py:34
        // return self.greeting + " " + name
        int 0                                                    name#0,0
        byte "greeting"                                          name#0,0,"greeting"
        app_global_get_ex                                        name#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.greeting exists                     name#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                 name#0,maybe_value%0#0
        byte " "                                                 name#0,maybe_value%0#0," "
        concat                                                   name#0,tmp%0#1
        l-load name#0 1                                          tmp%0#1,name#0
        concat                                                   tmp%1#1
        // compile/apps.py:32
        // @arc4.abimethod()
        l-load-copy tmp%1#1 0                                    tmp%1#1,tmp%1#1 (copy)
        len                                                      tmp%1#1,aggregate%length%0#0
        itob                                                     tmp%1#1,aggregate%as_bytes%0#0
        extract 6 2                                              tmp%1#1,aggregate%length_uint16%0#0
        l-load tmp%1#1 1                                         aggregate%length_uint16%0#0,tmp%1#1
        concat                                                   aggregate%encoded_value%0#0
        byte 0x151f7c75                                          aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                     0x151f7c75,aggregate%encoded_value%0#0
        concat                                                   tmp%3#0
        log
        int 1                                                    1
        return


