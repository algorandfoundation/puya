// Op                                                                                             Stack (out)
// test_cases.compile.apps.HelloOtherConstants.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // compile/apps.py:87
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        int 1                                                                                     1
        v-store lifted%return#0
        txn ApplicationID                                                                         tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // compile/apps.py:78
        // self.greeting = TemplateVar[String]("GREETING")
        byte "greeting"                                                                           "greeting"
        byte TMPL_GREETING                                                                        "greeting",TMPL_GREETING
        app_global_put
        // compile/apps.py:79
        // self.num = TemplateVar[BigUInt]("NUM")
        byte "num"                                                                                "num"
        byte TMPL_NUM                                                                             "num",TMPL_NUM
        app_global_put
        // compile/apps.py:80
        // self.address = TemplateVar[Account]("ACCOUNT")
        byte "address"                                                                            "address"
        byte TMPL_ACCOUNT                                                                         "address",TMPL_ACCOUNT
        app_global_put
        // compile/apps.py:81
        // self.method = TemplateVar[Bytes]("METHOD")
        byte "method"                                                                             "method"
        byte TMPL_METHOD                                                                          "method",TMPL_METHOD
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // compile/apps.py:76
        // class HelloOtherConstants(ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%0#2
        method delete()void                                                                       tmp%0#2,Method(delete()void)
        l-load tmp%0#2 1                                                                          Method(delete()void),tmp%0#2
        match main_delete_route@4 ; b main_switch_case_next@5

    main_delete_route@4:
        // compile/apps.py:87
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                                          tmp%1#0
        int DeleteApplication                                                                     tmp%1#0,DeleteApplication
        ==                                                                                        tmp%2#0
        txn ApplicationID                                                                         tmp%2#0,tmp%3#0
        l-load tmp%2#0 1                                                                          tmp%3#0,tmp%2#0
        l-load tmp%3#0 1                                                                          tmp%2#0,tmp%3#0
        &&                                                                                        tmp%5#0
        assert // OnCompletion must be DeleteApplication && can only call when not creating 
        v-load lifted%return#0                                                                    lifted%return#0
        return

    main_switch_case_next@5:
        // compile/apps.py:76
        // class HelloOtherConstants(ARC4Contract):
        txn OnCompletion                                                                          tmp%6#0
        !                                                                                         tmp%7#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%8#0
        bz main_create_NoOp@8 ; b main_call_NoOp@6

    main_call_NoOp@6:
        // compile/apps.py:76
        // class HelloOtherConstants(ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%9#0
        method greet(string)byte[]                                                                tmp%9#0,Method(greet(string)byte[])
        l-load tmp%9#0 1                                                                          Method(greet(string)byte[]),tmp%9#0
        match main_greet_route@7 ; b main_after_if_else@10

    main_greet_route@7:
        // compile/apps.py:91
        // @arc4.abimethod()
        callsub greet
        b main_after_if_else@10

    main_create_NoOp@8:
        // compile/apps.py:76
        // class HelloOtherConstants(ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%10#0
        method create()uint64                                                                     tmp%10#0,Method(create()uint64)
        l-load tmp%10#0 1                                                                         Method(create()uint64),tmp%10#0
        match main_create_route@9 ; b main_after_if_else@10

    main_create_route@9:
        // compile/apps.py:83
        // @arc4.abimethod(create="require")
        byte 0x151f7c750000000000000001                                                           0x151f7c750000000000000001
        log
        v-load lifted%return#0                                                                    lifted%return#0
        return

    main_after_if_else@10:
        // compile/apps.py:76
        // class HelloOtherConstants(ARC4Contract):
        err


// test_cases.compile.apps.HelloOtherConstants.greet[routing]() -> void:
subroutine greet:
    greet_block@0:
        // compile/apps.py:91
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                               name#0
        // compile/apps.py:93
        // num_alpha = (self.num + 48).bytes[-1]
        int 0                                                                                     name#0,0
        byte "num"                                                                                name#0,0,"num"
        app_global_get_ex                                                                         name#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.num exists                                                           name#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                                                  name#0,maybe_value%0#0
        byte 0x30                                                                                 name#0,maybe_value%0#0,0x30
        b+                                                                                        name#0,tmp%0#1
        l-load-copy tmp%0#1 0                                                                     name#0,tmp%0#1,tmp%0#1 (copy)
        len                                                                                       name#0,tmp%0#1,tmp%1#1
        int 1                                                                                     name#0,tmp%0#1,tmp%1#1,1
        -                                                                                         name#0,tmp%0#1,tmp%2#1
        l-load tmp%0#1 1                                                                          name#0,tmp%2#1,tmp%0#1
        l-load tmp%2#1 1                                                                          name#0,tmp%0#1,tmp%2#1
        int 1                                                                                     name#0,tmp%0#1,tmp%2#1,1
        extract3                                                                                  name#0,num_alpha#0
        // compile/apps.py:95
        // self.greeting.bytes + b" " + name.bytes + num_alpha + self.address.bytes + self.method
        int 0                                                                                     name#0,num_alpha#0,0
        byte "greeting"                                                                           name#0,num_alpha#0,0,"greeting"
        app_global_get_ex                                                                         name#0,num_alpha#0,maybe_value%1#0,maybe_exists%1#0
        assert // check self.greeting exists                                                      name#0,num_alpha#0,maybe_value%1#0
        l-load maybe_value%1#0 0                                                                  name#0,num_alpha#0,maybe_value%1#0
        byte 0x20                                                                                 name#0,num_alpha#0,maybe_value%1#0,0x20
        concat                                                                                    name#0,num_alpha#0,tmp%3#0
        l-load name#0 2                                                                           num_alpha#0,tmp%3#0,name#0
        concat                                                                                    num_alpha#0,tmp%4#0
        l-load num_alpha#0 1                                                                      tmp%4#0,num_alpha#0
        concat                                                                                    tmp%5#0
        int 0                                                                                     tmp%5#0,0
        byte "address"                                                                            tmp%5#0,0,"address"
        app_global_get_ex                                                                         tmp%5#0,maybe_value%2#0,maybe_exists%2#0
        assert // check self.address exists                                                       tmp%5#0,maybe_value%2#0
        l-load tmp%5#0 1                                                                          maybe_value%2#0,tmp%5#0
        l-load maybe_value%2#0 1                                                                  tmp%5#0,maybe_value%2#0
        concat                                                                                    tmp%6#0
        int 0                                                                                     tmp%6#0,0
        byte "method"                                                                             tmp%6#0,0,"method"
        app_global_get_ex                                                                         tmp%6#0,maybe_value%3#0,maybe_exists%3#0
        assert // check self.method exists                                                        tmp%6#0,maybe_value%3#0
        l-load tmp%6#0 1                                                                          maybe_value%3#0,tmp%6#0
        l-load maybe_value%3#0 1                                                                  tmp%6#0,maybe_value%3#0
        concat                                                                                    tmp%7#0
        // compile/apps.py:91
        // @arc4.abimethod()
        l-load-copy tmp%7#0 0                                                                     tmp%7#0,tmp%7#0 (copy)
        len                                                                                       tmp%7#0,aggregate%length%0#0
        itob                                                                                      tmp%7#0,aggregate%as_bytes%0#0
        extract 6 2                                                                               tmp%7#0,aggregate%length_uint16%0#0
        l-load tmp%7#0 1                                                                          aggregate%length_uint16%0#0,tmp%7#0
        concat                                                                                    aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                           aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                                      0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                    tmp%3#0
        log
        int 1                                                                                     1
        return


