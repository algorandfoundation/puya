#pragma version 10

test_cases.compile.apps.HelloTmpl.approval_program:
    intcblock 1 0
    bytecblock "greeting" TMPL_GREETING
    txn ApplicationID
    bnz main_after_if_else@2
    callsub __init__

main_after_if_else@2:
    callsub __puya_arc4_router__
    return


// test_cases.compile.apps.HelloTmpl.__init__() -> void:
__init__:
    proto 0 0
    bytec_0 // "greeting"
    bytec_1 // TMPL_GREETING
    app_global_put
    retsub


// test_cases.compile.apps.HelloTmpl.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@7
    pushbytess 0x4c5c61ba 0x24378d3c 0xd0a28200 // method "create()void", method "delete()void", method "greet(string)string"
    txna ApplicationArgs 0
    match __puya_arc4_router___create_route@2 __puya_arc4_router___delete_route@3 __puya_arc4_router___greet_route@4
    intc_1 // 0
    retsub

__puya_arc4_router___create_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    retsub

__puya_arc4_router___delete_route@3:
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    assert // can only call when not creating
    intc_0 // 1
    retsub

__puya_arc4_router___greet_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    callsub greet
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___bare_routing@7:
    pushint 4 // 4
    txn OnCompletion
    match __puya_arc4_router___update@8
    intc_1 // 0
    retsub

__puya_arc4_router___update@8:
    txn ApplicationID
    assert // can only call when not creating
    intc_0 // 1
    retsub


// test_cases.compile.apps.HelloBase.greet(name: bytes) -> bytes:
greet:
    proto 1 1
    intc_1 // 0
    bytec_0 // "greeting"
    app_global_get_ex
    assert // check self.greeting exists
    pushbytes " "
    concat
    frame_dig -1
    concat
    retsub
