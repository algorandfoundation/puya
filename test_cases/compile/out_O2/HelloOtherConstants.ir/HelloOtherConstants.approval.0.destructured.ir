main test_cases.compile.apps.HelloOtherConstants.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "greeting" TemplateVar[bytes](TMPL_GREETING))
        (app_global_put "num" TemplateVar[biguint](TMPL_NUM))
        (app_global_put "address" TemplateVar[bytes[32]](TMPL_ACCOUNT))
        (app_global_put "method" TemplateVar[bytes](TMPL_METHOD))
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#2: uint64 = (txn NumAppArgs)
        goto tmp%0#2 ? block@4 : block@8
    block@4: // abi_routing_L76
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "create()uint64" => block@5, method "delete()void" => block@6, method "greet(string)byte[]" => block@7, * => block@8}
    block@5: // create_route_L83
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (! tmp%5#0)
        (assert tmp%6#0) // can only call when creating
        (log 0x151f7c750000000000000001)
        let test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0
        goto block@9
    block@6: // delete_route_L87
        let tmp%8#0: uint64 = (txn OnCompletion)
        let tmp%9#0: bool = (== tmp%8#0 DeleteApplication)
        (assert tmp%9#0) // OnCompletion is not DeleteApplication
        let tmp%10#0: uint64 = (txn ApplicationID)
        (assert tmp%10#0) // can only call when not creating
        let test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0
        goto block@9
    block@7: // greet_route_L91
        let tmp%12#0: uint64 = (txn OnCompletion)
        let tmp%13#0: bool = (! tmp%12#0)
        (assert tmp%13#0) // OnCompletion is not NoOp
        let tmp%14#0: uint64 = (txn ApplicationID)
        (assert tmp%14#0) // can only call when not creating
        let tmp%16#0: bytes = (txna ApplicationArgs 1)
        let name#0: bytes = ((extract 2 0) tmp%16#0)
        let (maybe_value%0#0: biguint, maybe_exists%0#0: bool) = (app_global_get_ex 0u "num")
        (assert maybe_exists%0#0) // check self.num exists
        let tmp%0#3: biguint = (b+ maybe_value%0#0 48b)
        let tmp%1#1: uint64 = (len tmp%0#3)
        let tmp%2#1: uint64 = (- tmp%1#1 1u)
        let num_alpha#0: bytes = (extract3 tmp%0#3 tmp%2#1 1u)
        let (maybe_value%1#0: bytes, maybe_exists%1#0: bool) = (app_global_get_ex 0u "greeting")
        (assert maybe_exists%1#0) // check self.greeting exists
        let tmp%3#1: bytes = (concat maybe_value%1#0 0x20)
        let tmp%4#1: bytes = (concat tmp%3#1 name#0)
        let tmp%5#1: bytes = (concat tmp%4#1 num_alpha#0)
        let (maybe_value%2#0: bytes[32], maybe_exists%2#0: bool) = (app_global_get_ex 0u "address")
        (assert maybe_exists%2#0) // check self.address exists
        let tmp%6#1: bytes = (concat tmp%5#1 maybe_value%2#0)
        let (maybe_value%3#0: bytes, maybe_exists%3#0: bool) = (app_global_get_ex 0u "method")
        (assert maybe_exists%3#0) // check self.method exists
        let tmp%7#1: bytes = (concat tmp%6#1 maybe_value%3#0)
        let length%0#0: uint64 = (len tmp%7#1)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 tmp%7#1)
        let tmp%18#0: bytes = (concat 0x151f7c75 encoded_value%0#0)
        (log tmp%18#0)
        let test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0
        goto block@9
    block@8: // after_if_else_L76
        let test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0: bool = 0u
        let tmp%0#0: bool = test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0
        goto block@9
    block@9: // after_inlined_test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router___L1
        return tmp%0#0