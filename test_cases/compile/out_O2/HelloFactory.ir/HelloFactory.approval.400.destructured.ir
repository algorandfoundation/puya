main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@20
    block@2: // abi_routing_L25
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (! tmp%2#0)
        (assert tmp%3#0) // OnCompletion must be NoOp
        let tmp%4#0: uint64 = (txn ApplicationID)
        (assert tmp%4#0)
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "test_logicsig()address" => block@4, method "test_compile_contract()void" => block@5, method "test_compile_contract_tmpl()void" => block@6, method "test_compile_contract_prfx()void" => block@7, method "test_compile_contract_large()void" => block@8, method "test_arc4_create()void" => block@9, method "test_arc4_create_tmpl()void" => block@10, method "test_arc4_create_prfx()void" => block@11, method "test_arc4_create_large()void" => block@12, method "test_arc4_create_modified_compiled()void" => block@13, method "test_arc4_update()void" => block@14, method "test_other_constants()void" => block@15, method "test_abi_call_create_params()void" => block@16, * => block@19}
    block@4: // test_logicsig_route_L26
        (log CUPXY5P7F4A3VDD6X3LCSXSF7PJUOH5SZH5POPJHXDYU5CRDMG6D7X4M7E)
        exit 1u
    block@5: // test_compile_contract_route_L30
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAQACJgEIZ3JlZXRpbmcxGEAABCiAAGcxG0EAf4AEJDeNPDYaAI4BAGcxGRREMRhBADuABNCiggA2GgCOAQABADYaAUkjWSQISwEVEkRXAgAjKGVEgAEgUExQSRUWVwYCTFCABBUffHVMULAiQ4AEIN86VDYaAI4BAAEANhoBSSNZJAhLARUSRFcCAChMZyJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create(string)void")
        ((itxn_field ApplicationArgs) 0x000568656c6c6f)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let result#1: bytes = ((extract 4 0) txn.LastLog#0)
        let aggregate%array_length%0#0: uint64 = (extract_uint16 result#1 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%0#0 2u)
        let len%0#0: uint64 = (len result#1)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%4#1: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%5#1: bool = (== tmp%4#1 0x151f7c75)
        (assert tmp%5#1) // application log value is not the result of an ABI return
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%7#1: bool = (== result#1 0x000b68656c6c6f20776f726c64)
        (assert tmp%7#1)
        exit 1u
    block@6: // test_compile_contract_tmpl_route_L61
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAQAmAghncmVldGluZwR0bXBsMRhAAAMoKWcxG0EAbYAEJDeNPDYaAI4BAFUxGRREMRhBADyABNCiggA2GgCOAQABADYaAUkjWYECCEsBFRJEVwIAIyhlRIABIFBMUEkVFlcGAkxQgAQVH3x1TFCwIkOABExcYbo2GgCOAQABACJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let result#1: bytes = ((extract 4 0) txn.LastLog#0)
        let aggregate%array_length%1#0: uint64 = (extract_uint16 result#1 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%1#0 2u)
        let len%0#0: uint64 = (len result#1)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%3#1: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%4#2: bool = (== tmp%3#1 0x151f7c75)
        (assert tmp%4#2) // application log value is not the result of an ABI return
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%6#2: bool = (== result#1 0x000968657920776f726c64)
        (assert tmp%6#2)
        exit 1u
    block@7: // test_compile_contract_prfx_route_L96
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAQAmAghncmVldGluZwJoaTEYQAADKClnMRtBAG2ABCQ3jTw2GgCOAQBVMRkURDEYQQA8gATQooIANhoAjgEAAQA2GgFJI1mBAghLARUSRFcCACMoZUSAASBQTFBJFRZXBgJMUIAEFR98dUxQsCJDgARMXGG6NhoAjgEAAQAiQzEZgQUSMRgQRCJDMRmBBBIxGBBEIkM=)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let result#1: bytes = ((extract 4 0) txn.LastLog#0)
        let aggregate%array_length%2#0: uint64 = (extract_uint16 result#1 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%2#0 2u)
        let len%0#0: uint64 = (len result#1)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%3#1: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%4#2: bool = (== tmp%3#1 0x151f7c75)
        (assert tmp%4#2) // application log value is not the result of an ABI return
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%6#2: bool = (== result#1 0x0008686920776f726c64)
        (assert tmp%6#2)
        exit 1u
    block@8: // test_compile_contract_large_route_L129
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CzEbQQA7ggIEJDeNPAT15P1NNhoAjgIAGgABADEZFDEYEESADBUffHUAAAAAAAAQALCBAUMxGYEFEjEYEESBAUMxGRQxGBQQRIEBQw==)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "get_big_bytes_length()uint64")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let txn.LastLog#0: bytes = (itxn LastLog)
        let result#1: bytes = ((extract 4 0) txn.LastLog#0)
        let len%0#0: uint64 = (len result#1)
        let eq%0#0: bool = (== len%0#0 8u)
        (assert eq%0#0) // invalid number of bytes for arc4.uint64
        let tmp%2#2: bytes = ((extract 0 4) txn.LastLog#0)
        let tmp%3#0: bool = (== tmp%2#2 0x151f7c75)
        (assert tmp%3#0) // application log value is not the result of an ABI return
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%4#2: bool = (b== result#1 0x0000000000001000)
        (assert tmp%4#2)
        exit 1u
    block@9: // test_arc4_create_route_L160
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAQACJgEIZ3JlZXRpbmcxGEAABCiAAGcxG0EAf4AEJDeNPDYaAI4BAGcxGRREMRhBADuABNCiggA2GgCOAQABADYaAUkjWSQISwEVEkRXAgAjKGVEgAEgUExQSRUWVwYCTFCABBUffHVMULAiQ4AEIN86VDYaAI4BAAEANhoBSSNZJAhLARUSRFcCAChMZyJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create(string)void")
        ((itxn_field ApplicationArgs) 0x000568656c6c6f)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%3#1: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%3#0: uint64 = (extract_uint16 tmp%3#1 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%3#0 2u)
        let len%0#0: uint64 = (len tmp%3#1)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%4#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%5#1: bool = (== tmp%4#1 0x151f7c75)
        (assert tmp%5#1) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%0#0)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%7#1: bool = (== result#0 "hello world")
        (assert tmp%7#1)
        exit 1u
    block@10: // test_arc4_create_tmpl_route_L177
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAQAmAghncmVldGluZwR0bXBsMRhAAAMoKWcxG0EAbYAEJDeNPDYaAI4BAFUxGRREMRhBADyABNCiggA2GgCOAQABADYaAUkjWYECCEsBFRJEVwIAIyhlRIABIFBMUEkVFlcGAkxQgAQVH3x1TFCwIkOABExcYbo2GgCOAQABACJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%2#2: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%4#0: uint64 = (extract_uint16 tmp%2#2 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%4#0 2u)
        let len%0#0: uint64 = (len tmp%2#2)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%3#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#2: bool = (== tmp%3#1 0x151f7c75)
        (assert tmp%4#2) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%0#0)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%6#2: bool = (== result#0 "tmpl2 world")
        (assert tmp%6#2)
        exit 1u
    block@11: // test_arc4_create_prfx_route_L198
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAQAmAghncmVldGluZwVwcmZ4MjEYQAADKClnMRtBAG2ABCQ3jTw2GgCOAQBVMRkURDEYQQA8gATQooIANhoAjgEAAQA2GgFJI1mBAghLARUSRFcCACMoZUSAASBQTFBJFRZXBgJMUIAEFR98dUxQsCJDgARMXGG6NhoAjgEAAQAiQzEZgQUSMRgQRCJDMRmBBBIxGBBEIkM=)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let hello_app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x0005776f726c64)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%2#2: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%5#0: uint64 = (extract_uint16 tmp%2#2 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%5#0 2u)
        let len%0#0: uint64 = (len tmp%2#2)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%3#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#2: bool = (== tmp%3#1 0x151f7c75)
        (assert tmp%4#2) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%0#0)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) hello_app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let tmp%6#2: bool = (== result#0 "prfx2 world")
        (assert tmp%6#2)
        exit 1u
    block@12: // test_arc4_create_large_route_L221
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CzEbQQA7ggIEJDeNPAT15P1NNhoAjgIAGgABADEZFDEYEESADBUffHUAAAAAAAAQALCBAUMxGYEFEjEYEESBAUMxGRQxGBQQRIEBQw==)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "get_big_bytes_length()uint64")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%1#3: bytes = ((extract 4 0) awst_tmp%0#0)
        let len%0#0: uint64 = (len tmp%1#3)
        let eq%0#0: bool = (== len%0#0 8u)
        (assert eq%0#0) // invalid number of bytes for arc4.uint64
        let tmp%2#2: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%3#0: bool = (== tmp%2#2 0x151f7c75)
        (assert tmp%3#0) // application log value is not the result of an ABI return
        let result#5: uint64 = (btoi tmp%1#3)
        let tmp%5#1: bool = (== result#5 4096u)
        (assert tmp%5#1)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@13: // test_arc4_create_modified_compiled_route_L236
        itxn_begin
        ((itxn_field LocalNumUint) 3u)
        ((itxn_field LocalNumByteSlice) 5u)
        ((itxn_field GlobalNumUint) 4u)
        ((itxn_field GlobalNumByteSlice) 6u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAQACJgEIZ3JlZXRpbmcxGEAABCiAAGcxG0EAf4AEJDeNPDYaAI4BAGcxGRREMRhBADuABNCiggA2GgCOAQABADYaAUkjWSQISwEVEkRXAgAjKGVEgAEgUExQSRUWVwYCTFCABBUffHVMULAiQ4AEIN86VDYaAI4BAAEANhoBSSNZJAhLARUSRFcCAChMZyJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create(string)void")
        ((itxn_field ApplicationArgs) 0x0003686579)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        let (value%0#0: uint64, check%0#0: bool) = ((app_params_get AppLocalNumUint) app#0)
        (assert check%0#0) // application exists
        let tmp%2#4: bool = (== value%0#0 3u)
        (assert tmp%2#4)
        let (value%1#0: uint64, check%1#0: bool) = ((app_params_get AppGlobalNumUint) app#0)
        (assert check%1#0) // application exists
        let tmp%3#0: bool = (== value%1#0 4u)
        (assert tmp%3#0)
        let (value%2#0: uint64, check%2#0: bool) = ((app_params_get AppLocalNumByteSlice) app#0)
        (assert check%2#0) // application exists
        let tmp%4#2: bool = (== value%2#0 5u)
        (assert tmp%4#2)
        let (value%3#0: uint64, check%3#0: bool) = ((app_params_get AppGlobalNumByteSlice) app#0)
        (assert check%3#0) // application exists
        let tmp%5#1: bool = (== value%3#0 6u)
        (assert tmp%5#1)
        itxn_begin
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x00057468657265)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%7#3: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%6#0: uint64 = (extract_uint16 tmp%7#3 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%6#0 2u)
        let len%0#0: uint64 = (len tmp%7#3)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%8#2: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%9#1: bool = (== tmp%8#2 0x151f7c75)
        (assert tmp%9#1) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%0#0)
        let tmp%11#0: bool = (== result#0 "hey there")
        (assert tmp%11#0)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@14: // test_arc4_update_route_L263
        itxn_begin
        ((itxn_field LocalNumUint) 2u)
        ((itxn_field LocalNumByteSlice) 2u)
        ((itxn_field GlobalNumUint) 2u)
        ((itxn_field GlobalNumByteSlice) 2u)
        ((itxn_field ExtraProgramPages) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAQAmAghncmVldGluZwR0bXBsMRhAAAMoKWcxG0EAbYAEJDeNPDYaAI4BAFUxGRREMRhBADyABNCiggA2GgCOAQABADYaAUkjWYECCEsBFRJEVwIAIyhlRIABIFBMUEkVFlcGAkxQgAQVH3x1TFCwIkOABExcYbo2GgCOAQABACJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x00057468657265)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%2#2: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%7#0: uint64 = (extract_uint16 tmp%2#2 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%7#0 2u)
        let len%0#0: uint64 = (len tmp%2#2)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%3#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#2: bool = (== tmp%3#1 0x151f7c75)
        (assert tmp%4#2) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%0#0)
        let tmp%6#2: bool = (== result#0 "hi there")
        (assert tmp%6#2)
        itxn_begin
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAQACJgEIZ3JlZXRpbmcxGEAABCiAAGcxG0EAf4AEJDeNPDYaAI4BAGcxGRREMRhBADuABNCiggA2GgCOAQABADYaAUkjWSQISwEVEkRXAgAjKGVEgAEgUExQSRUWVwYCTFCABBUffHVMULAiQ4AEIN86VDYaAI4BAAEANhoBSSNZJAhLARUSRFcCAChMZyJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field OnCompletion) UpdateApplication)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        itxn_begin
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x00057468657265)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%1#0: bytes = (itxn LastLog)
        let tmp%8#2: bytes = ((extract 4 0) awst_tmp%1#0)
        let aggregate%array_length%8#0: uint64 = (extract_uint16 tmp%8#2 0u) // on error: invalid array length header
        let add%1#0: uint64 = (+ aggregate%array_length%8#0 2u)
        let len%1#0: uint64 = (len tmp%8#2)
        let eq%1#0: bool = (== len%1#0 add%1#0)
        (assert eq%1#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%9#2: bytes = ((extract 0 4) awst_tmp%1#0)
        let tmp%10#0: bool = (== tmp%9#2 0x151f7c75)
        (assert tmp%10#0) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%1#0)
        let tmp%12#0: bool = (== result#0 "hi there")
        (assert tmp%12#0)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@15: // test_other_constants_route_L297
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 4u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyACAAEmCAhncmVldGluZwNudW0HYWRkcmVzcwZtZXRob2QEdG1wbAFCIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAxGEAAECgnBGcpJwVnKicGZysnB2eABCQ3jTw2GgCOAQB/MRkURDEYQQBXgARbDCN1NhoAjgEAAQA2GgFJIlmBAghLARUSRFcCACIpZUSAATCgSRUjCSNYIihlRIABIFBPAlBMUCIqZURQIitlRFBJFRZXBgJMUIAEFR98dUxQsCNDgATZKFp0NhoAjgEAAQCADBUffHUAAAAAAAAAAbAjQzEZgQUSMRgQRCND)
        ((itxn_field ApplicationArgs) method "create()uint64")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "greet(string)byte[]")
        ((itxn_field ApplicationArgs) 0x00064a6f686e6e79)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%2#2: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%9#0: uint64 = (extract_uint16 tmp%2#2 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%9#0 2u)
        let len%0#0: uint64 = (len tmp%2#2)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%3#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#2: bool = (== tmp%3#1 0x151f7c75)
        (assert tmp%4#2) // application log value is not the result of an ABI return
        let result#1: bytes = ((extract 6 0) awst_tmp%0#0)
        let tmp%9#1: bool = (== result#1 NBSWY3DPEBFG62DONZ4TKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDRTKMQ)
        (assert tmp%9#1)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@16: // test_abi_call_create_params_route_L323
        itxn_begin
        ((itxn_field GlobalNumByteSlice) 1u)
        ((itxn_field ClearStateProgramPages) C4EBQw==)
        ((itxn_field ApprovalProgramPages) CyADAQACJgEIZ3JlZXRpbmcxGEAABCiAAGcxG0EAf4AEJDeNPDYaAI4BAGcxGRREMRhBADuABNCiggA2GgCOAQABADYaAUkjWSQISwEVEkRXAgAjKGVEgAEgUExQSRUWVwYCTFCABBUffHVMULAiQ4AEIN86VDYaAI4BAAEANhoBSSNZJAhLARUSRFcCAChMZyJDMRmBBRIxGBBEIkMxGYEEEjEYEEQiQw==)
        ((itxn_field ApplicationArgs) method "create(string)void")
        ((itxn_field ApplicationArgs) 0x0003686579)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "greet(string)string")
        ((itxn_field ApplicationArgs) 0x00057468657265)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        let awst_tmp%0#0: bytes = (itxn LastLog)
        let tmp%3#1: bytes = ((extract 4 0) awst_tmp%0#0)
        let aggregate%array_length%10#0: uint64 = (extract_uint16 tmp%3#1 0u) // on error: invalid array length header
        let add%0#0: uint64 = (+ aggregate%array_length%10#0 2u)
        let len%0#0: uint64 = (len tmp%3#1)
        let eq%0#0: bool = (== len%0#0 add%0#0)
        (assert eq%0#0) // invalid number of bytes for arc4.dynamic_array<arc4.uint8>
        let tmp%4#1: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%5#1: bool = (== tmp%4#1 0x151f7c75)
        (assert tmp%5#1) // application log value is not the result of an ABI return
        let result#0: string = ((extract 6 0) awst_tmp%0#0)
        let tmp%7#1: bool = (== result#0 "hey there")
        (assert tmp%7#1)
        itxn_begin
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) app#0)
        ((itxn_field ApplicationArgs) method "delete()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        itxn_submit
        exit 1u
    block@19: // after_if_else_L25
        fail
    block@20: // __algopy_default_create_L1
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (! tmp%7#0)
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (! tmp%9#0)
        let tmp%11#0: bool = (&& tmp%8#0 tmp%10#0)
        (assert tmp%11#0) // OnCompletion must be NoOp && can only call when creating
        exit 1u