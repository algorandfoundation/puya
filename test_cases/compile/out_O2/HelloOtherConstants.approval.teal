#pragma version 10
#pragma typetrack false

// test_cases.compile.apps.HelloOtherConstants.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1
    bytecblock "greeting" "num" "address" "method" TMPL_GREETING TMPL_NUM TMPL_ACCOUNT TMPL_METHOD
    txn ApplicationID
    bnz main_after_if_else@2
    bytec_0 // "greeting"
    bytec 4 // TMPL_GREETING
    app_global_put
    bytec_1 // "num"
    bytec 5 // TMPL_NUM
    app_global_put
    bytec_2 // "address"
    bytec 6 // TMPL_ACCOUNT
    app_global_put
    bytec_3 // "method"
    bytec 7 // TMPL_METHOD
    app_global_put

main_after_if_else@2:
    txn NumAppArgs
    bz main_after_if_else@8
    pushbytess 0xd9285a74 0x24378d3c 0x5b0c2375 // method "create()uint64", method "delete()void", method "greet(string)byte[]"
    txna ApplicationArgs 0
    match main_create_route@5 main_delete_route@6 main_greet_route@7

main_after_if_else@8:
    intc_0 // 0
    return

main_greet_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    intc_0 // 0
    bytec_1 // "num"
    app_global_get_ex
    assert // check self.num exists
    pushbytes 0x30
    b+
    dup
    len
    intc_1 // 1
    -
    intc_1 // 1
    extract3
    intc_0 // 0
    bytec_0 // "greeting"
    app_global_get_ex
    assert // check self.greeting exists
    pushbytes 0x20
    concat
    uncover 2
    concat
    swap
    concat
    intc_0 // 0
    bytec_2 // "address"
    app_global_get_ex
    assert // check self.address exists
    concat
    intc_0 // 0
    bytec_3 // "method"
    app_global_get_ex
    assert // check self.method exists
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

main_delete_route@6:
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    assert // can only call when not creating
    intc_1 // 1
    return

main_create_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    !
    assert // can only call when creating
    pushbytes 0x151f7c750000000000000001
    log
    intc_1 // 1
    return
