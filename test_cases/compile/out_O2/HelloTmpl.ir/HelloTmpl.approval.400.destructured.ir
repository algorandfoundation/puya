main test_cases.compile.apps.HelloTmpl.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "greeting" TemplateVar[string](TMPL_GREETING))
        goto block@2
    block@2: // after_if_else_L1
        let tmp%0#0: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#0)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        goto_nth [block@4, block@7, block@14, block@14, block@14, block@14, block@14, block@14, block@10, block@14, block@11, block@14][tmp%4#0] else goto block@14
    block@4: // switch_case_0_L58
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "greet(string)string" => block@5, * => block@6}
    block@5: // greet_route_L32
        let reinterpret_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let name#0: string = ((extract 2 0) reinterpret_Encoded(len+utf8[])%0#0)
        let (maybe_value%0#0: bytes, maybe_exists%0#0: bool) = (app_global_get_ex 0u "greeting")
        (assert maybe_exists%0#0) // check self.greeting exists
        let tmp%0#4: bytes = (concat maybe_value%0#0 " ")
        let tmp%1#2: bytes = (concat tmp%0#4 name#0)
        let aggregate%length%0#0: uint64 = (len tmp%1#2)
        let aggregate%as_bytes%0#0: bytes[8] = (itob aggregate%length%0#0)
        let aggregate%length_uint16%0#0: bytes = ((extract 6 2) aggregate%as_bytes%0#0)
        let aggregate%encoded_value%0#0: bytes = (concat aggregate%length_uint16%0#0 tmp%1#2)
        let tmp%3#1: bytes = (concat 0x151f7c75 aggregate%encoded_value%0#0)
        (log tmp%3#1)
        exit 1u
    block@6: // switch_case_next_L58
        fail // this contract does not implement the given ABI method for call NoOp
    block@7: // switch_case_1_L58
        let tmp%6#0: bytes = (txna ApplicationArgs 0)
        switch tmp%6#0 {method "create()void" => block@8, * => block@9}
    block@8: // create_route_L62
        exit 1u
    block@9: // switch_case_next_L58
        fail // this contract does not implement the given ABI method for create NoOp
    block@10: // switch_case_8_L58
        let tmp%7#0: uint64 = (txn NumAppArgs)
        let tmp%8#0: bool = (! tmp%7#0)
        (assert tmp%8#0) // this contract does not implement the given ABI method for call UpdateApplication
        exit 1u
    block@11: // switch_case_10_L58
        let tmp%9#0: bytes = (txna ApplicationArgs 0)
        switch tmp%9#0 {method "delete()void" => block@8, * => block@13}
    block@13: // switch_case_next_L58
        fail // this contract does not implement the given ABI method for call DeleteApplication
    block@14: // switch_case_default_L58
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?