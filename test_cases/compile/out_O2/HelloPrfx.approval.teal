#pragma version 10
#pragma typetrack false

// test_cases.compile.apps.HelloPrfx.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 1 0
    bytecblock "greeting" PRFX_GREETING
    txn ApplicationID
    bnz main_after_if_else@2
    bytec_0 // "greeting"
    bytec_1 // PRFX_GREETING
    app_global_put

main_after_if_else@2:
    txn NumAppArgs
    bz main_bare_routing@8
    pushbytess 0x4c5c61ba 0x24378d3c 0xd0a28200 // method "create()void", method "delete()void", method "greet(string)string"
    txna ApplicationArgs 0
    match main_create_route@5 main_delete_route@6 main_greet_route@7

main_after_if_else@10:
    intc_1 // 0
    return

main_greet_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    intc_1 // 0
    bytec_0 // "greeting"
    app_global_get_ex
    assert // check self.greeting exists
    pushbytes " "
    concat
    swap
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_delete_route@6:
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    assert // OnCompletion is not DeleteApplication
    txn ApplicationID
    assert // can only call when not creating
    intc_0 // 1
    return

main_create_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return

main_bare_routing@8:
    pushint 4 // 4
    txn OnCompletion
    match main_update@9
    b main_after_if_else@10

main_update@9:
    txn ApplicationID
    assert // can only call when not creating
    intc_0 // 1
    return
