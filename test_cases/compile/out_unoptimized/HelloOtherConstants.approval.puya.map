{
  "version": 3,
  "sources": [
    "../apps.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAeK;;;;;;AAfL;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAOK;;;;;;AAIA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAJA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AAIA;;;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAbG;AAAgB;;AAAhB;AACA;AAAW;;AAAX;AACA;AAAe;;AAAf;AACA;;AAAc;;AAAd;;;;;AAIO;AAAP;;;;;AAMR;;;;;;AAEqB;AAAA;AAAA;AAAA;AAAW;;;AAAX;AAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAER;AAAA;AAAA;AAAA;AAAsB;;;AAAtB;AAAA;;AAAA;AAAA;;AAAA;AAAsD;AAAA;AAAA;AAAA;AAAtD;AAA2E;AAAA;;AAAA;AAAA;AAA3E;AADJ",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x151f7c75 \"greeting\" \"num\" \"address\" \"method\" TMPL_GREETING TMPL_NUM TMPL_ACCOUNT TMPL_METHOD"
    },
    "85": {
      "op": "b main_block@0"
    },
    "88": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "93": {
      "op": "b main_call___init__@1"
    },
    "96": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloOtherConstants.__init__",
      "op": "callsub __init__"
    },
    "99": {
      "op": "b main_after_if_else@2"
    },
    "102": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "b main_block@3"
    },
    "105": {
      "block": "main_block@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "108": {
      "op": "pushbytes 0x24378d3c // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "Method(delete()void)"
      ]
    },
    "114": {
      "op": "uncover 1",
      "stack_out": [
        "Method(delete()void)",
        "tmp%0#1"
      ]
    },
    "116": {
      "op": "match main_delete_route@4",
      "stack_out": []
    },
    "120": {
      "op": "b main_switch_case_next@5"
    },
    "123": {
      "block": "main_switch_case_next@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "125": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "NoOp"
      ]
    },
    "126": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "127": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "128": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "130": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "131": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "132": {
      "op": "bz main_create_NoOp@9",
      "stack_out": []
    },
    "135": {
      "op": "b main_call_NoOp@6"
    },
    "138": {
      "block": "main_call_NoOp@6",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "141": {
      "op": "pushbytes 0x5b0c2375 // method \"greet(string)byte[]\"",
      "defined_out": [
        "Method(greet(string)byte[])",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "Method(greet(string)byte[])"
      ]
    },
    "147": {
      "op": "uncover 1",
      "stack_out": [
        "Method(greet(string)byte[])",
        "tmp%10#0"
      ]
    },
    "149": {
      "op": "match main_greet_route@7",
      "stack_out": []
    },
    "153": {
      "op": "b main_switch_case_next@8"
    },
    "156": {
      "block": "main_switch_case_next@8",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "159": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "160": {
      "block": "main_greet_route@7",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloOtherConstants.greet[routing]",
      "op": "callsub greet"
    },
    "163": {
      "op": "b main_switch_case_next@8"
    },
    "166": {
      "block": "main_create_NoOp@9",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "169": {
      "op": "pushbytes 0xd9285a74 // method \"create()uint64\"",
      "defined_out": [
        "Method(create()uint64)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "Method(create()uint64)"
      ]
    },
    "175": {
      "op": "uncover 1",
      "stack_out": [
        "Method(create()uint64)",
        "tmp%11#0"
      ]
    },
    "177": {
      "op": "match main_create_route@10",
      "stack_out": []
    },
    "181": {
      "op": "b main_switch_case_next@11"
    },
    "184": {
      "block": "main_switch_case_next@11",
      "stack_in": [],
      "op": "b main_after_if_else@12"
    },
    "187": {
      "block": "main_create_route@10",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloOtherConstants.create[routing]",
      "op": "callsub create"
    },
    "190": {
      "op": "b main_switch_case_next@11"
    },
    "193": {
      "block": "main_delete_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "195": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "DeleteApplication"
      ]
    },
    "197": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "198": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "200": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "201": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "202": {
      "op": "&&",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "203": {
      "error": "OnCompletion must be DeleteApplication && can only call when not creating",
      "op": "assert // OnCompletion must be DeleteApplication && can only call when not creating",
      "stack_out": []
    },
    "204": {
      "callsub": "test_cases.compile.apps.HelloOtherConstants.delete[routing]",
      "op": "callsub delete"
    },
    "207": {
      "op": "b main_switch_case_next@5"
    },
    "210": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "213": {
      "block": "create_block@0",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloOtherConstants.create",
      "op": "callsub test_cases.compile.apps.HelloOtherConstants.create",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "216": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "217": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "218": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "221": {
      "op": "log",
      "stack_out": []
    },
    "222": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "223": {
      "op": "return",
      "stack_out": []
    },
    "224": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.delete[routing]",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "b delete_block@0"
    },
    "227": {
      "block": "delete_block@0",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloOtherConstants.delete",
      "op": "callsub test_cases.compile.apps.HelloOtherConstants.delete"
    },
    "230": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "231": {
      "op": "return",
      "stack_out": []
    },
    "232": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.greet[routing]",
      "params": {},
      "block": "greet",
      "stack_in": [],
      "op": "b greet_block@0"
    },
    "235": {
      "block": "greet_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "238": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "241": {
      "callsub": "test_cases.compile.apps.HelloOtherConstants.greet",
      "op": "callsub test_cases.compile.apps.HelloOtherConstants.greet",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "244": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "245": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "246": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "247": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "250": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "252": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "253": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "254": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "256": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "257": {
      "op": "log",
      "stack_out": []
    },
    "258": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "259": {
      "op": "return",
      "stack_out": []
    },
    "260": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "263": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_1 // \"greeting\"",
      "defined_out": [
        "\"greeting\""
      ],
      "stack_out": [
        "\"greeting\""
      ]
    },
    "264": {
      "op": "bytec 5 // TMPL_GREETING",
      "defined_out": [
        "\"greeting\"",
        "TMPL_GREETING"
      ],
      "stack_out": [
        "\"greeting\"",
        "TMPL_GREETING"
      ]
    },
    "266": {
      "op": "app_global_put",
      "stack_out": []
    },
    "267": {
      "op": "bytec_2 // \"num\"",
      "defined_out": [
        "\"num\""
      ],
      "stack_out": [
        "\"num\""
      ]
    },
    "268": {
      "op": "bytec 6 // TMPL_NUM",
      "defined_out": [
        "\"num\"",
        "TMPL_NUM"
      ],
      "stack_out": [
        "\"num\"",
        "TMPL_NUM"
      ]
    },
    "270": {
      "op": "app_global_put",
      "stack_out": []
    },
    "271": {
      "op": "bytec_3 // \"address\"",
      "defined_out": [
        "\"address\""
      ],
      "stack_out": [
        "\"address\""
      ]
    },
    "272": {
      "op": "bytec 7 // TMPL_ACCOUNT",
      "defined_out": [
        "\"address\"",
        "TMPL_ACCOUNT"
      ],
      "stack_out": [
        "\"address\"",
        "TMPL_ACCOUNT"
      ]
    },
    "274": {
      "op": "app_global_put",
      "stack_out": []
    },
    "275": {
      "op": "bytec 4 // \"method\"",
      "defined_out": [
        "\"method\""
      ],
      "stack_out": [
        "\"method\""
      ]
    },
    "277": {
      "op": "bytec 8 // TMPL_METHOD",
      "defined_out": [
        "\"method\"",
        "TMPL_METHOD"
      ],
      "stack_out": [
        "\"method\"",
        "TMPL_METHOD"
      ]
    },
    "279": {
      "op": "app_global_put",
      "stack_out": []
    },
    "280": {
      "retsub": true,
      "op": "retsub"
    },
    "281": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.create",
      "params": {},
      "block": "test_cases.compile.apps.HelloOtherConstants.create",
      "stack_in": [],
      "op": "b test_cases.compile.apps.HelloOtherConstants.create_block@0"
    },
    "284": {
      "block": "test_cases.compile.apps.HelloOtherConstants.create_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "285": {
      "retsub": true,
      "op": "retsub"
    },
    "286": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.delete",
      "params": {},
      "block": "test_cases.compile.apps.HelloOtherConstants.delete",
      "stack_in": [],
      "op": "b test_cases.compile.apps.HelloOtherConstants.delete_block@0"
    },
    "289": {
      "block": "test_cases.compile.apps.HelloOtherConstants.delete_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "290": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.greet",
      "params": {
        "name#0": "bytes"
      },
      "block": "test_cases.compile.apps.HelloOtherConstants.greet",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "293": {
      "op": "b test_cases.compile.apps.HelloOtherConstants.greet_block@0"
    },
    "296": {
      "block": "test_cases.compile.apps.HelloOtherConstants.greet_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "297": {
      "op": "bytec_2 // \"num\"",
      "defined_out": [
        "\"num\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"num\""
      ]
    },
    "298": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "299": {
      "error": "check self.num exists",
      "op": "assert // check self.num exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "300": {
      "op": "pushbytes 0x30",
      "defined_out": [
        "0x30",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x30"
      ]
    },
    "303": {
      "op": "b+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "304": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "305": {
      "op": "len",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "1"
      ]
    },
    "307": {
      "op": "-",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "308": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "309": {
      "op": "extract3",
      "defined_out": [
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0"
      ]
    },
    "310": {
      "op": "intc_0 // 0",
      "stack_out": [
        "num_alpha#0",
        "0"
      ]
    },
    "311": {
      "op": "bytec_1 // \"greeting\"",
      "defined_out": [
        "\"greeting\"",
        "0",
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "0",
        "\"greeting\""
      ]
    },
    "312": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "313": {
      "error": "check self.greeting exists",
      "op": "assert // check self.greeting exists",
      "stack_out": [
        "num_alpha#0",
        "maybe_value%1#0"
      ]
    },
    "314": {
      "op": "pushbytes 0x20",
      "defined_out": [
        "0x20",
        "maybe_value%1#0",
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "maybe_value%1#0",
        "0x20"
      ]
    },
    "317": {
      "op": "concat",
      "defined_out": [
        "num_alpha#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "tmp%3#0"
      ]
    },
    "318": {
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)",
        "num_alpha#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "tmp%3#0",
        "name#0 (copy)"
      ]
    },
    "320": {
      "op": "concat",
      "defined_out": [
        "num_alpha#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "tmp%4#0"
      ]
    },
    "321": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "num_alpha#0"
      ]
    },
    "323": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "324": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "325": {
      "op": "bytec_3 // \"address\"",
      "defined_out": [
        "\"address\"",
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "\"address\""
      ]
    },
    "326": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "327": {
      "error": "check self.address exists",
      "op": "assert // check self.address exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0"
      ]
    },
    "328": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "330": {
      "op": "bytec 4 // \"method\"",
      "defined_out": [
        "\"method\"",
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0",
        "\"method\""
      ]
    },
    "332": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "333": {
      "error": "check self.method exists",
      "op": "assert // check self.method exists",
      "stack_out": [
        "tmp%6#0",
        "maybe_value%3#0"
      ]
    },
    "334": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "335": {
      "retsub": true,
      "op": "retsub"
    }
  }
}