{
  "version": 3,
  "sources": [
    "../apps.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EQ;AAAgB;;AAAhB;AACA;AAAW;;AAAX;AACA;AAAe;;AAAf;AACA;AAAc;;AAAd;;;;;AAIO;AAAP;;;;;AAMR;;;;;;AAEqB;AAAA;AAAA;AAAA;AAAW;;;AAAX;AAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAER;AAAA;AAAA;AAAA;AAAsB;;;AAAtB;AAAA;;AAAA;AAAA;;AAAA;AAAsD;AAAA;AAAA;AAAA;AAAtD;AAA2E;AAAA;AAAA;AAAA;AAA3E;AADJ;;;;;;;;;;;;AAlBR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;;;;;AAeK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAfL;;;AAAA;;;AAeK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;AAJA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"greeting\" \"num\" \"address\" \"method\" 0x151f7c75 TMPL_GREETING TMPL_NUM TMPL_ACCOUNT TMPL_METHOD"
    },
    "85": {
      "op": "b main_block@0"
    },
    "88": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "93": {
      "op": "b main_call___init__@1"
    },
    "96": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloOtherConstants.__init__",
      "op": "callsub __init__"
    },
    "99": {
      "op": "b main_after_if_else@2"
    },
    "102": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "105": {
      "op": "return",
      "stack_out": []
    },
    "106": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "109": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\""
      ],
      "stack_out": [
        "\"greeting\""
      ]
    },
    "110": {
      "op": "bytec 5 // TMPL_GREETING",
      "defined_out": [
        "\"greeting\"",
        "TMPL_GREETING"
      ],
      "stack_out": [
        "\"greeting\"",
        "TMPL_GREETING"
      ]
    },
    "112": {
      "op": "app_global_put",
      "stack_out": []
    },
    "113": {
      "op": "bytec_1 // \"num\"",
      "defined_out": [
        "\"num\""
      ],
      "stack_out": [
        "\"num\""
      ]
    },
    "114": {
      "op": "bytec 6 // TMPL_NUM",
      "defined_out": [
        "\"num\"",
        "TMPL_NUM"
      ],
      "stack_out": [
        "\"num\"",
        "TMPL_NUM"
      ]
    },
    "116": {
      "op": "app_global_put",
      "stack_out": []
    },
    "117": {
      "op": "bytec_2 // \"address\"",
      "defined_out": [
        "\"address\""
      ],
      "stack_out": [
        "\"address\""
      ]
    },
    "118": {
      "op": "bytec 7 // TMPL_ACCOUNT",
      "defined_out": [
        "\"address\"",
        "TMPL_ACCOUNT"
      ],
      "stack_out": [
        "\"address\"",
        "TMPL_ACCOUNT"
      ]
    },
    "120": {
      "op": "app_global_put",
      "stack_out": []
    },
    "121": {
      "op": "bytec_3 // \"method\"",
      "defined_out": [
        "\"method\""
      ],
      "stack_out": [
        "\"method\""
      ]
    },
    "122": {
      "op": "bytec 8 // TMPL_METHOD",
      "defined_out": [
        "\"method\"",
        "TMPL_METHOD"
      ],
      "stack_out": [
        "\"method\"",
        "TMPL_METHOD"
      ]
    },
    "124": {
      "op": "app_global_put",
      "stack_out": []
    },
    "125": {
      "retsub": true,
      "op": "retsub"
    },
    "126": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.create",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "129": {
      "block": "create_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "130": {
      "retsub": true,
      "op": "retsub"
    },
    "131": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.delete",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "b delete_block@0"
    },
    "134": {
      "block": "delete_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "135": {
      "subroutine": "test_cases.compile.apps.HelloOtherConstants.greet",
      "params": {
        "name#0": "bytes"
      },
      "block": "greet",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "138": {
      "op": "b greet_block@0"
    },
    "141": {
      "block": "greet_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "142": {
      "op": "bytec_1 // \"num\"",
      "defined_out": [
        "\"num\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"num\""
      ]
    },
    "143": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "144": {
      "error": "check self.num exists",
      "op": "assert // check self.num exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "145": {
      "op": "pushbytes 0x30",
      "defined_out": [
        "0x30",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x30"
      ]
    },
    "148": {
      "op": "b+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "149": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "150": {
      "op": "len",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "151": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "1"
      ]
    },
    "152": {
      "op": "-",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "153": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "1"
      ]
    },
    "154": {
      "op": "extract3",
      "defined_out": [
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0"
      ]
    },
    "155": {
      "op": "intc_0 // 0",
      "stack_out": [
        "num_alpha#0",
        "0"
      ]
    },
    "156": {
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\"",
        "0",
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "0",
        "\"greeting\""
      ]
    },
    "157": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "158": {
      "error": "check self.greeting exists",
      "op": "assert // check self.greeting exists",
      "stack_out": [
        "num_alpha#0",
        "maybe_value%1#0"
      ]
    },
    "159": {
      "op": "pushbytes 0x20",
      "defined_out": [
        "0x20",
        "maybe_value%1#0",
        "num_alpha#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "maybe_value%1#0",
        "0x20"
      ]
    },
    "162": {
      "op": "concat",
      "defined_out": [
        "num_alpha#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "tmp%3#0"
      ]
    },
    "163": {
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)",
        "num_alpha#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "tmp%3#0",
        "name#0 (copy)"
      ]
    },
    "165": {
      "op": "concat",
      "defined_out": [
        "num_alpha#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "num_alpha#0",
        "tmp%4#0"
      ]
    },
    "166": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "num_alpha#0"
      ]
    },
    "168": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "169": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "170": {
      "op": "bytec_2 // \"address\"",
      "defined_out": [
        "\"address\"",
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "\"address\""
      ]
    },
    "171": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "172": {
      "error": "check self.address exists",
      "op": "assert // check self.address exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%2#0"
      ]
    },
    "173": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "174": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "175": {
      "op": "bytec_3 // \"method\"",
      "defined_out": [
        "\"method\"",
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0",
        "\"method\""
      ]
    },
    "176": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "177": {
      "error": "check self.method exists",
      "op": "assert // check self.method exists",
      "stack_out": [
        "tmp%6#0",
        "maybe_value%3#0"
      ]
    },
    "178": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "179": {
      "retsub": true,
      "op": "retsub"
    },
    "180": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "183": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "185": {
      "op": "b approval_program_block@0"
    },
    "188": {
      "block": "approval_program_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_block@1"
    },
    "191": {
      "block": "approval_program_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "193": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "194": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "195": {
      "op": "bz approval_program_bare_routing@8",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "198": {
      "op": "b approval_program_abi_routing@2"
    },
    "201": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "204": {
      "op": "pushbytes 0xd9285a74 // method \"create()uint64\"",
      "defined_out": [
        "Method(create()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(create()uint64)"
      ]
    },
    "210": {
      "op": "pushbytes 0x24378d3c // method \"delete()void\"",
      "defined_out": [
        "Method(create()uint64)",
        "Method(delete()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(create()uint64)",
        "Method(delete()void)"
      ]
    },
    "216": {
      "op": "pushbytes 0x5b0c2375 // method \"greet(string)byte[]\"",
      "defined_out": [
        "Method(create()uint64)",
        "Method(delete()void)",
        "Method(greet(string)byte[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(create()uint64)",
        "Method(delete()void)",
        "Method(greet(string)byte[])"
      ]
    },
    "222": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "Method(create()uint64)",
        "Method(delete()void)",
        "Method(greet(string)byte[])",
        "tmp%2#0"
      ]
    },
    "224": {
      "op": "match approval_program_create_route@3 approval_program_delete_route@4 approval_program_greet_route@5",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "232": {
      "op": "b approval_program_switch_case_default@6"
    },
    "235": {
      "block": "approval_program_switch_case_default@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_switch_case_next@7"
    },
    "238": {
      "block": "approval_program_switch_case_next@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_if_else@9"
    },
    "241": {
      "block": "approval_program_after_if_else@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ]
    },
    "242": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "244": {
      "op": "b approval_program_after_inlined_test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__@10"
    },
    "247": {
      "block": "approval_program_after_inlined_test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "249": {
      "op": "uncover 1"
    },
    "251": {
      "retsub": true,
      "op": "retsub"
    },
    "252": {
      "block": "approval_program_greet_route@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "254": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0",
        "NoOp"
      ]
    },
    "255": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "256": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "257": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "259": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0",
        "0"
      ]
    },
    "260": {
      "op": "!=",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "261": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "262": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "265": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "268": {
      "callsub": "test_cases.compile.apps.HelloOtherConstants.greet",
      "op": "callsub greet",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "271": {
      "op": "dup",
      "defined_out": [
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "272": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "aggregate%length%0#0"
      ]
    },
    "273": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "274": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "277": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%19#0"
      ]
    },
    "279": {
      "op": "concat",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "280": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0",
        "0x151f7c75"
      ]
    },
    "282": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%20#0"
      ]
    },
    "284": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0"
      ]
    },
    "285": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "286": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ]
    },
    "287": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "289": {
      "op": "b approval_program_after_inlined_test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__@10"
    },
    "292": {
      "block": "approval_program_delete_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "294": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0",
        "DeleteApplication"
      ]
    },
    "296": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "297": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "298": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "300": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "301": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "302": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "303": {
      "callsub": "test_cases.compile.apps.HelloOtherConstants.delete",
      "op": "callsub delete"
    },
    "306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ]
    },
    "307": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "309": {
      "op": "b approval_program_after_inlined_test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__@10"
    },
    "312": {
      "block": "approval_program_create_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "314": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "315": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "316": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "317": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "319": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "320": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "321": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "322": {
      "callsub": "test_cases.compile.apps.HelloOtherConstants.create",
      "op": "callsub create",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "325": {
      "op": "itob",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "326": {
      "op": "bytec 4 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "328": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "330": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "331": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "332": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__%0#0"
      ]
    },
    "333": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "335": {
      "op": "b approval_program_after_inlined_test_cases.compile.apps.HelloOtherConstants.__puya_arc4_router__@10"
    },
    "338": {
      "block": "approval_program_bare_routing@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_if_else@9"
    }
  }
}