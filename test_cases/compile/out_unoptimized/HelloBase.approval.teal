#pragma version 10
#pragma typetrack false

// test_cases.compile.apps.HelloBase.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1
    bytecblock "greeting"
    b block@0

block@0:
    txn ApplicationID
    bnz after_if_else@2
    b call___init__@1

call___init__@1:
    callsub __init__
    b after_if_else@2

after_if_else@2:
    callsub approval_program
    return


// test_cases.compile.apps.HelloBase.delete[routing]() -> void:
delete:
    b delete_block@0

delete_block@0:
    // compile/apps.py:24
    // @arc4.abimethod(allow_actions=["DeleteApplication"])
    callsub test_cases.compile.apps.HelloBase.delete
    intc_1 // 1
    return


// test_cases.compile.apps.HelloBase.greet[routing]() -> void:
greet:
    b greet_block@0

greet_block@0:
    // compile/apps.py:32
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    callsub test_cases.compile.apps.HelloBase.greet
    dup
    len
    itob
    extract 6 2
    uncover 1
    concat
    pushbytes 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// test_cases.compile.apps.HelloBase.__init__() -> void:
__init__:
    b __init___block@0

__init___block@0:
    // compile/apps.py:22
    // self.greeting = String()
    bytec_0 // "greeting"
    pushbytes ""
    app_global_put
    retsub


// test_cases.compile.apps.HelloBase.delete() -> void:
test_cases.compile.apps.HelloBase.delete:
    b test_cases.compile.apps.HelloBase.delete_block@0

test_cases.compile.apps.HelloBase.delete_block@0:
    retsub


// test_cases.compile.apps.HelloBase.update() -> void:
update:
    b update_block@0

update_block@0:
    retsub


// test_cases.compile.apps.HelloBase.greet(name: bytes) -> bytes:
test_cases.compile.apps.HelloBase.greet:
    // compile/apps.py:32-33
    // @arc4.abimethod()
    // def greet(self, name: String) -> String:
    proto 1 1
    b test_cases.compile.apps.HelloBase.greet_block@0

test_cases.compile.apps.HelloBase.greet_block@0:
    // compile/apps.py:34
    // return self.greeting + " " + name
    intc_0 // 0
    bytec_0 // "greeting"
    app_global_get_ex
    assert // check self.greeting exists
    pushbytes " "
    concat
    frame_dig -1
    concat
    retsub


// algopy.arc4.ARC4Contract.approval_program() -> uint64:
approval_program:
    b approval_program_block@0

approval_program_block@0:
    b approval_program_block@1

approval_program_block@1:
    // compile/apps.py:20
    // class HelloBase(ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz approval_program_bare_routing@7
    b approval_program_abi_routing@2

approval_program_abi_routing@2:
    // compile/apps.py:20
    // class HelloBase(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x24378d3c // method "delete()void"
    pushbytes 0xd0a28200 // method "greet(string)string"
    uncover 2
    match approval_program_delete_route@3 approval_program_greet_route@4
    b approval_program_switch_case_default@5

approval_program_switch_case_default@5:
    b approval_program_switch_case_next@6

approval_program_switch_case_next@6:
    b approval_program_after_if_else@14

approval_program_after_if_else@14:
    // compile/apps.py:20
    // class HelloBase(ARC4Contract):
    err

approval_program_greet_route@4:
    // compile/apps.py:32
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub greet
    b approval_program_switch_case_next@6

approval_program_delete_route@3:
    // compile/apps.py:24
    // @arc4.abimethod(allow_actions=["DeleteApplication"])
    txn OnCompletion
    pushint 5 // DeleteApplication
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be DeleteApplication && can only call when not creating
    callsub delete
    b approval_program_switch_case_next@6

approval_program_bare_routing@7:
    // compile/apps.py:20
    // class HelloBase(ARC4Contract):
    txn OnCompletion
    intc_0 // NoOp
    pushint 4 // UpdateApplication
    uncover 2
    match approval_program___algopy_default_create@8 approval_program_update@11
    b approval_program_switch_case_default@12

approval_program_switch_case_default@12:
    b approval_program_switch_case_next@13

approval_program_switch_case_next@13:
    b approval_program_after_if_else@14

approval_program_update@11:
    // compile/apps.py:28
    // @arc4.baremethod(allow_actions=["UpdateApplication"])
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub update
    intc_1 // 1
    return

approval_program___algopy_default_create@8:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating
    b approval_program_block@9

approval_program_block@9:
    b approval_program_after_inlined_test_cases.compile.apps.HelloBase.__algopy_default_create@10

approval_program_after_inlined_test_cases.compile.apps.HelloBase.__algopy_default_create@10:
    intc_1 // 1
    return
