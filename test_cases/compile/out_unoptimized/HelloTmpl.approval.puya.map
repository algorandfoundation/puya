{
  "version": 3,
  "sources": [
    "../apps.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DK;;;AAAA;AAAA;;;;AAtCA;;;AAAA;AAAA;;;;AAQA;;;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA4BG;AAAgB;AAAhB;;;;;;;;;;;;;;AA5BR;;;;;;AAEe;AAAA;AAAA;AAAA;AAAgB;;;AAAhB;AAAA;;AAAA;AAAP;;;;;;;AAwBR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AA9BK;;;AAAA;AAAA;AA8BL;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAAA;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.compile.apps.HelloTmpl.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock \"greeting\" TMPL_GREETING"
    },
    "21": {
      "op": "b block@0"
    },
    "24": {
      "block": "block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "26": {
      "op": "bnz after_if_else@2",
      "stack_out": []
    },
    "29": {
      "op": "b call___init__@1"
    },
    "32": {
      "block": "call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloTmpl.__init__",
      "op": "callsub __init__"
    },
    "35": {
      "op": "b after_if_else@2"
    },
    "38": {
      "block": "after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "41": {
      "op": "return",
      "stack_out": []
    },
    "42": {
      "subroutine": "test_cases.compile.apps.HelloTmpl.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "45": {
      "block": "create_block@0",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloTmpl.create",
      "op": "callsub test_cases.compile.apps.HelloTmpl.create"
    },
    "48": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "49": {
      "op": "return",
      "stack_out": []
    },
    "50": {
      "subroutine": "test_cases.compile.apps.HelloBase.delete[routing]",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "b delete_block@0"
    },
    "53": {
      "block": "delete_block@0",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloBase.delete",
      "op": "callsub test_cases.compile.apps.HelloBase.delete"
    },
    "56": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "57": {
      "op": "return",
      "stack_out": []
    },
    "58": {
      "subroutine": "test_cases.compile.apps.HelloBase.greet[routing]",
      "params": {},
      "block": "greet",
      "stack_in": [],
      "op": "b greet_block@0"
    },
    "61": {
      "block": "greet_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "64": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "67": {
      "callsub": "test_cases.compile.apps.HelloBase.greet",
      "op": "callsub test_cases.compile.apps.HelloBase.greet",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "70": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "71": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "72": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "73": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "76": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "78": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "79": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "85": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "87": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "88": {
      "op": "log",
      "stack_out": []
    },
    "89": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "90": {
      "op": "return",
      "stack_out": []
    },
    "91": {
      "subroutine": "test_cases.compile.apps.HelloTmpl.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "94": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\""
      ],
      "stack_out": [
        "\"greeting\""
      ]
    },
    "95": {
      "op": "bytec_1 // TMPL_GREETING",
      "defined_out": [
        "\"greeting\"",
        "TMPL_GREETING"
      ],
      "stack_out": [
        "\"greeting\"",
        "TMPL_GREETING"
      ]
    },
    "96": {
      "op": "app_global_put",
      "stack_out": []
    },
    "97": {
      "retsub": true,
      "op": "retsub"
    },
    "98": {
      "subroutine": "test_cases.compile.apps.HelloTmpl.create",
      "params": {},
      "block": "test_cases.compile.apps.HelloTmpl.create",
      "stack_in": [],
      "op": "b test_cases.compile.apps.HelloTmpl.create_block@0"
    },
    "101": {
      "block": "test_cases.compile.apps.HelloTmpl.create_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "102": {
      "subroutine": "test_cases.compile.apps.HelloBase.delete",
      "params": {},
      "block": "test_cases.compile.apps.HelloBase.delete",
      "stack_in": [],
      "op": "b test_cases.compile.apps.HelloBase.delete_block@0"
    },
    "105": {
      "block": "test_cases.compile.apps.HelloBase.delete_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "106": {
      "subroutine": "test_cases.compile.apps.HelloBase.update",
      "params": {},
      "block": "update",
      "stack_in": [],
      "op": "b update_block@0"
    },
    "109": {
      "block": "update_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "110": {
      "subroutine": "test_cases.compile.apps.HelloBase.greet",
      "params": {
        "name#0": "bytes"
      },
      "block": "test_cases.compile.apps.HelloBase.greet",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "113": {
      "op": "b test_cases.compile.apps.HelloBase.greet_block@0"
    },
    "116": {
      "block": "test_cases.compile.apps.HelloBase.greet_block@0",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "117": {
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"greeting\""
      ]
    },
    "118": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "119": {
      "error": "check self.greeting exists",
      "op": "assert // check self.greeting exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "120": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\" \""
      ]
    },
    "123": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "124": {
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "name#0 (copy)"
      ]
    },
    "126": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "127": {
      "retsub": true,
      "op": "retsub"
    },
    "128": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "131": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "134": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "136": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "137": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "139": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "140": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "141": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "142": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "143": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "144": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "146": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "148": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "150": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "152": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "154": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "156": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "158": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "160": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "162": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "164": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "166": {
      "op": "match approval_program_call_NoOp approval_program_create_NoOp approval_program_call_OptIn approval_program_create_OptIn approval_program_call_CloseOut approval_program_create_CloseOut approval_program_call_ClearState approval_program_create_ClearState approval_program_call_UpdateApplication approval_program_create_UpdateApplication approval_program_call_DeleteApplication approval_program_create_DeleteApplication",
      "stack_out": []
    },
    "192": {
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "195": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "approval_program_*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "196": {
      "block": "approval_program_create_DeleteApplication",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "199": {
      "block": "approval_program_call_DeleteApplication",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "202": {
      "op": "pushbytes 0x24378d3c // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "Method(delete()void)"
      ]
    },
    "208": {
      "op": "uncover 1",
      "stack_out": [
        "Method(delete()void)",
        "tmp%9#0"
      ]
    },
    "210": {
      "op": "match approval_program_delete_route@21",
      "stack_out": []
    },
    "214": {
      "op": "b approval_program_switch_case_default@22"
    },
    "217": {
      "block": "approval_program_switch_case_default@22",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@23"
    },
    "220": {
      "error": "this contract does not implement the given ABI method for call DeleteApplication",
      "block": "approval_program_switch_case_next@23",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call DeleteApplication"
    },
    "221": {
      "block": "approval_program_delete_route@21",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloBase.delete[routing]",
      "op": "callsub delete"
    },
    "224": {
      "op": "b approval_program_switch_case_next@23"
    },
    "227": {
      "block": "approval_program_create_UpdateApplication",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "230": {
      "block": "approval_program_call_UpdateApplication",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "232": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "233": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "234": {
      "op": "bz approval_program_else_body@18",
      "stack_out": []
    },
    "237": {
      "op": "b approval_program_update@17"
    },
    "240": {
      "block": "approval_program_update@17",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloBase.update",
      "op": "callsub update"
    },
    "243": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "244": {
      "op": "return",
      "stack_out": []
    },
    "245": {
      "error": "this contract does not implement the given ABI method for call UpdateApplication",
      "block": "approval_program_else_body@18",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call UpdateApplication"
    },
    "246": {
      "block": "approval_program_create_ClearState",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "249": {
      "block": "approval_program_call_ClearState",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "252": {
      "block": "approval_program_create_CloseOut",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "255": {
      "block": "approval_program_call_CloseOut",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "258": {
      "block": "approval_program_create_OptIn",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "261": {
      "block": "approval_program_call_OptIn",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "264": {
      "block": "approval_program_create_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "267": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create()void)"
      ]
    },
    "273": {
      "op": "uncover 1",
      "stack_out": [
        "Method(create()void)",
        "tmp%6#0"
      ]
    },
    "275": {
      "op": "match approval_program_create_route@7",
      "stack_out": []
    },
    "279": {
      "op": "b approval_program_switch_case_default@8"
    },
    "282": {
      "block": "approval_program_switch_case_default@8",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@9"
    },
    "285": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "block": "approval_program_switch_case_next@9",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create NoOp"
    },
    "286": {
      "block": "approval_program_create_route@7",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloTmpl.create[routing]",
      "op": "callsub create"
    },
    "289": {
      "op": "b approval_program_switch_case_next@9"
    },
    "292": {
      "block": "approval_program_call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "295": {
      "op": "pushbytes 0xd0a28200 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(greet(string)string)"
      ]
    },
    "301": {
      "op": "uncover 1",
      "stack_out": [
        "Method(greet(string)string)",
        "tmp%5#0"
      ]
    },
    "303": {
      "op": "match approval_program_greet_route@3",
      "stack_out": []
    },
    "307": {
      "op": "b approval_program_switch_case_default@4"
    },
    "310": {
      "block": "approval_program_switch_case_default@4",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@5"
    },
    "313": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "approval_program_switch_case_next@5",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "314": {
      "block": "approval_program_greet_route@3",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloBase.greet[routing]",
      "op": "callsub greet"
    },
    "317": {
      "op": "b approval_program_switch_case_next@5"
    }
  }
}