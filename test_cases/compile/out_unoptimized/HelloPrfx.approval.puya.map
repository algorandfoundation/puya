{
  "version": 3,
  "sources": [
    "../apps.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEK;;;AAAA;AAAA;;;;AA/CA;;;AAAA;AAAA;;;;AAQA;;;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAqCG;AAAgB;AAAhB;;;;;;;;;;;;;;AArCR;;;;;;AAEe;AAAA;AAAA;AAAA;AAAgB;;;AAAhB;AAAA;;AAAA;AAAP;;;;;;;AAiCR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;AAAA;AAnCK;;;;;;AAmCL;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAIK;;;;;;AA/CA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAIA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.compile.apps.HelloPrfx.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"greeting\" PRFX_GREETING"
    },
    "21": {
      "op": "b main_block@0"
    },
    "24": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "26": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "29": {
      "op": "b main_call___init__@1"
    },
    "32": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloPrfx.__init__",
      "op": "callsub __init__"
    },
    "35": {
      "op": "b main_after_if_else@2"
    },
    "38": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "41": {
      "op": "return",
      "stack_out": []
    },
    "42": {
      "subroutine": "test_cases.compile.apps.HelloPrfx.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "45": {
      "block": "create_block@0",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloPrfx.create",
      "op": "callsub test_cases.compile.apps.HelloPrfx.create"
    },
    "48": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "49": {
      "op": "return",
      "stack_out": []
    },
    "50": {
      "subroutine": "test_cases.compile.apps.HelloBase.delete[routing]",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "b delete_block@0"
    },
    "53": {
      "block": "delete_block@0",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloBase.delete",
      "op": "callsub test_cases.compile.apps.HelloBase.delete"
    },
    "56": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "57": {
      "op": "return",
      "stack_out": []
    },
    "58": {
      "subroutine": "test_cases.compile.apps.HelloBase.greet[routing]",
      "params": {},
      "block": "greet",
      "stack_in": [],
      "op": "b greet_block@0"
    },
    "61": {
      "block": "greet_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "64": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "67": {
      "callsub": "test_cases.compile.apps.HelloBase.greet",
      "op": "callsub test_cases.compile.apps.HelloBase.greet",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "70": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "71": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "72": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "73": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "76": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "78": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "79": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "85": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "87": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "88": {
      "op": "log",
      "stack_out": []
    },
    "89": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "90": {
      "op": "return",
      "stack_out": []
    },
    "91": {
      "subroutine": "test_cases.compile.apps.HelloPrfx.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "94": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\""
      ],
      "stack_out": [
        "\"greeting\""
      ]
    },
    "95": {
      "op": "bytec_1 // PRFX_GREETING",
      "defined_out": [
        "\"greeting\"",
        "PRFX_GREETING"
      ],
      "stack_out": [
        "\"greeting\"",
        "PRFX_GREETING"
      ]
    },
    "96": {
      "op": "app_global_put",
      "stack_out": []
    },
    "97": {
      "retsub": true,
      "op": "retsub"
    },
    "98": {
      "subroutine": "test_cases.compile.apps.HelloPrfx.create",
      "params": {},
      "block": "test_cases.compile.apps.HelloPrfx.create",
      "stack_in": [],
      "op": "b test_cases.compile.apps.HelloPrfx.create_block@0"
    },
    "101": {
      "block": "test_cases.compile.apps.HelloPrfx.create_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "102": {
      "subroutine": "test_cases.compile.apps.HelloBase.delete",
      "params": {},
      "block": "test_cases.compile.apps.HelloBase.delete",
      "stack_in": [],
      "op": "b test_cases.compile.apps.HelloBase.delete_block@0"
    },
    "105": {
      "block": "test_cases.compile.apps.HelloBase.delete_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "106": {
      "subroutine": "test_cases.compile.apps.HelloBase.update",
      "params": {},
      "block": "update",
      "stack_in": [],
      "op": "b update_block@0"
    },
    "109": {
      "block": "update_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "110": {
      "subroutine": "test_cases.compile.apps.HelloBase.greet",
      "params": {
        "name#0": "bytes"
      },
      "block": "test_cases.compile.apps.HelloBase.greet",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "113": {
      "op": "b test_cases.compile.apps.HelloBase.greet_block@0"
    },
    "116": {
      "block": "test_cases.compile.apps.HelloBase.greet_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "117": {
      "op": "bytec_0 // \"greeting\"",
      "defined_out": [
        "\"greeting\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"greeting\""
      ]
    },
    "118": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "119": {
      "error": "check self.greeting exists",
      "op": "assert // check self.greeting exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "120": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "\" \""
      ]
    },
    "123": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "124": {
      "op": "frame_dig -1",
      "defined_out": [
        "name#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "name#0 (copy)"
      ]
    },
    "126": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "127": {
      "retsub": true,
      "op": "retsub"
    },
    "128": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "131": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "134": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "136": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "137": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "138": {
      "op": "bz approval_program_update@15",
      "stack_out": []
    },
    "141": {
      "op": "b approval_program_abi_routing@2"
    },
    "144": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "147": {
      "op": "pushbytes 0x24378d3c // method \"delete()void\"",
      "defined_out": [
        "Method(delete()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(delete()void)"
      ]
    },
    "153": {
      "op": "uncover 1",
      "stack_out": [
        "Method(delete()void)",
        "tmp%2#0"
      ]
    },
    "155": {
      "op": "match approval_program_delete_route@3",
      "stack_out": []
    },
    "159": {
      "op": "b approval_program_switch_case_default@4"
    },
    "162": {
      "block": "approval_program_switch_case_default@4",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@5"
    },
    "165": {
      "block": "approval_program_switch_case_next@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "167": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "NoOp"
      ]
    },
    "168": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "169": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "170": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "172": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0"
      ]
    },
    "173": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "174": {
      "op": "bz approval_program_create_NoOp@10",
      "stack_out": []
    },
    "177": {
      "op": "b approval_program_call_NoOp@6"
    },
    "180": {
      "block": "approval_program_call_NoOp@6",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "183": {
      "op": "pushbytes 0xd0a28200 // method \"greet(string)string\"",
      "defined_out": [
        "Method(greet(string)string)",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "Method(greet(string)string)"
      ]
    },
    "189": {
      "op": "uncover 1",
      "stack_out": [
        "Method(greet(string)string)",
        "tmp%12#0"
      ]
    },
    "191": {
      "op": "match approval_program_greet_route@7",
      "stack_out": []
    },
    "195": {
      "op": "b approval_program_switch_case_default@8"
    },
    "198": {
      "block": "approval_program_switch_case_default@8",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@9"
    },
    "201": {
      "block": "approval_program_switch_case_next@9",
      "stack_in": [],
      "op": "b approval_program_after_if_else@14"
    },
    "204": {
      "block": "approval_program_after_if_else@14",
      "stack_in": [],
      "op": "b approval_program_after_if_else@16"
    },
    "207": {
      "block": "approval_program_after_if_else@16",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "208": {
      "block": "approval_program_greet_route@7",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloBase.greet[routing]",
      "op": "callsub greet"
    },
    "211": {
      "op": "b approval_program_switch_case_next@9"
    },
    "214": {
      "block": "approval_program_create_NoOp@10",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "217": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "Method(create()void)"
      ]
    },
    "223": {
      "op": "uncover 1",
      "stack_out": [
        "Method(create()void)",
        "tmp%13#0"
      ]
    },
    "225": {
      "op": "match approval_program_create_route@11",
      "stack_out": []
    },
    "229": {
      "op": "b approval_program_switch_case_default@12"
    },
    "232": {
      "block": "approval_program_switch_case_default@12",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@13"
    },
    "235": {
      "block": "approval_program_switch_case_next@13",
      "stack_in": [],
      "op": "b approval_program_after_if_else@14"
    },
    "238": {
      "block": "approval_program_create_route@11",
      "stack_in": [],
      "callsub": "test_cases.compile.apps.HelloPrfx.create[routing]",
      "op": "callsub create"
    },
    "241": {
      "op": "b approval_program_switch_case_next@13"
    },
    "244": {
      "block": "approval_program_delete_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "246": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "DeleteApplication"
      ]
    },
    "248": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "249": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "251": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0"
      ]
    },
    "252": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "253": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "254": {
      "error": "OnCompletion must be DeleteApplication && can only call when not creating",
      "op": "assert // OnCompletion must be DeleteApplication && can only call when not creating",
      "stack_out": []
    },
    "255": {
      "callsub": "test_cases.compile.apps.HelloBase.delete[routing]",
      "op": "callsub delete"
    },
    "258": {
      "op": "b approval_program_switch_case_next@5"
    },
    "261": {
      "block": "approval_program_update@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "263": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "UpdateApplication"
      ]
    },
    "265": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "266": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "268": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0",
        "0"
      ]
    },
    "269": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "270": {
      "op": "&&",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "271": {
      "error": "OnCompletion must be UpdateApplication && can only call when not creating",
      "op": "assert // OnCompletion must be UpdateApplication && can only call when not creating",
      "stack_out": []
    },
    "272": {
      "callsub": "test_cases.compile.apps.HelloBase.update",
      "op": "callsub update"
    },
    "275": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "276": {
      "op": "return",
      "stack_out": []
    }
  }
}