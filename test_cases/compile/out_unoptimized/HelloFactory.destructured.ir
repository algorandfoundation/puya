contract test_cases.compile.factory.HelloFactory:
    program approval:
        subroutine test_cases.compile.factory.HelloFactory.approval_program() -> bool:
            block@0: // L24
                let tmp%0#0: bool = (txn NumAppArgs)
                goto tmp%0#0 ? block@1 : block@15
            block@1: // abi_routing_L24
                let tmp%1#0: bytes = (txna ApplicationArgs 0)
                switch tmp%1#0 {method "test_logicsig()address" => block@2, method "test_compile_contract()void" => block@3, method "test_compile_contract_tmpl()void" => block@4, method "test_compile_contract_prfx()void" => block@5, method "test_compile_contract_large()void" => block@6, method "test_arc4_create()void" => block@7, method "test_arc4_create_tmpl()void" => block@8, method "test_arc4_create_prfx()void" => block@9, method "test_arc4_create_large()void" => block@10, method "test_arc4_update()void" => block@11, method "test_other_constants()void" => block@12, * => block@13}
            block@2: // test_logicsig_route_L26
                let tmp%2#0: uint64 = (txn OnCompletion)
                let tmp%3#0: bool = (== tmp%2#0 NoOp)
                (assert tmp%3#0) // OnCompletion is NoOp
                let tmp%4#0: bool = (txn ApplicationID)
                (assert tmp%4#0) // is not creating
                let tmp%5#0: bytes = test_cases.compile.factory.HelloFactory.test_logicsig()
                let tmp%6#0: bytes = (concat 0x151f7c75 tmp%5#0)
                (log tmp%6#0)
                return 1u
            block@3: // test_compile_contract_route_L30
                let tmp%7#0: uint64 = (txn OnCompletion)
                let tmp%8#0: bool = (== tmp%7#0 NoOp)
                (assert tmp%8#0) // OnCompletion is NoOp
                let tmp%9#0: bool = (txn ApplicationID)
                (assert tmp%9#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_compile_contract()
                return 1u
            block@4: // test_compile_contract_tmpl_route_L61
                let tmp%10#0: uint64 = (txn OnCompletion)
                let tmp%11#0: bool = (== tmp%10#0 NoOp)
                (assert tmp%11#0) // OnCompletion is NoOp
                let tmp%12#0: bool = (txn ApplicationID)
                (assert tmp%12#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_compile_contract_tmpl()
                return 1u
            block@5: // test_compile_contract_prfx_route_L96
                let tmp%13#0: uint64 = (txn OnCompletion)
                let tmp%14#0: bool = (== tmp%13#0 NoOp)
                (assert tmp%14#0) // OnCompletion is NoOp
                let tmp%15#0: bool = (txn ApplicationID)
                (assert tmp%15#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_compile_contract_prfx()
                return 1u
            block@6: // test_compile_contract_large_route_L129
                let tmp%16#0: uint64 = (txn OnCompletion)
                let tmp%17#0: bool = (== tmp%16#0 NoOp)
                (assert tmp%17#0) // OnCompletion is NoOp
                let tmp%18#0: bool = (txn ApplicationID)
                (assert tmp%18#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_compile_contract_large()
                return 1u
            block@7: // test_arc4_create_route_L160
                let tmp%19#0: uint64 = (txn OnCompletion)
                let tmp%20#0: bool = (== tmp%19#0 NoOp)
                (assert tmp%20#0) // OnCompletion is NoOp
                let tmp%21#0: bool = (txn ApplicationID)
                (assert tmp%21#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_arc4_create()
                return 1u
            block@8: // test_arc4_create_tmpl_route_L177
                let tmp%22#0: uint64 = (txn OnCompletion)
                let tmp%23#0: bool = (== tmp%22#0 NoOp)
                (assert tmp%23#0) // OnCompletion is NoOp
                let tmp%24#0: bool = (txn ApplicationID)
                (assert tmp%24#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_arc4_create_tmpl()
                return 1u
            block@9: // test_arc4_create_prfx_route_L198
                let tmp%25#0: uint64 = (txn OnCompletion)
                let tmp%26#0: bool = (== tmp%25#0 NoOp)
                (assert tmp%26#0) // OnCompletion is NoOp
                let tmp%27#0: bool = (txn ApplicationID)
                (assert tmp%27#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_arc4_create_prfx()
                return 1u
            block@10: // test_arc4_create_large_route_L221
                let tmp%28#0: uint64 = (txn OnCompletion)
                let tmp%29#0: bool = (== tmp%28#0 NoOp)
                (assert tmp%29#0) // OnCompletion is NoOp
                let tmp%30#0: bool = (txn ApplicationID)
                (assert tmp%30#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_arc4_create_large()
                return 1u
            block@11: // test_arc4_update_route_L236
                let tmp%31#0: uint64 = (txn OnCompletion)
                let tmp%32#0: bool = (== tmp%31#0 NoOp)
                (assert tmp%32#0) // OnCompletion is NoOp
                let tmp%33#0: bool = (txn ApplicationID)
                (assert tmp%33#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_arc4_update()
                return 1u
            block@12: // test_other_constants_route_L270
                let tmp%34#0: uint64 = (txn OnCompletion)
                let tmp%35#0: bool = (== tmp%34#0 NoOp)
                (assert tmp%35#0) // OnCompletion is NoOp
                let tmp%36#0: bool = (txn ApplicationID)
                (assert tmp%36#0) // is not creating
                test_cases.compile.factory.HelloFactory.test_other_constants()
                return 1u
            block@13: // switch_case_default_L24
                goto block@14
            block@14: // switch_case_next_L24
                fail // reject transaction
            block@15: // bare_routing_L24
                let tmp%37#0: uint64 = (txn OnCompletion)
                switch tmp%37#0 {0u => block@16, * => block@17}
            block@16: // create_L24
                let tmp%38#0: bool = (txn ApplicationID)
                let tmp%39#0: bool = (! tmp%38#0)
                (assert tmp%39#0) // is creating
                return 1u
            block@17: // reject_bare_on_completion_L24
                fail // reject transaction
        
        subroutine test_cases.compile.factory.HelloFactory.test_logicsig() -> bytes:
            block@0: // L26
                return addr U3ZXEUNFRSUDPPNFC6U7OBYO4S4AUOEP4RDBI23L2Q5TX3K5LTSVWQOKFM
        
        subroutine test_cases.compile.factory.HelloFactory.test_compile_contract() -> void:
            block@0: // L30
                itxn_begin
                let length%0#0: uint64 = (len "hello")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "hello")
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                ((itxn_field GlobalNumByteSlice) 1u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACkMRtBAGo2GgCCAwQg3zpUBCQ3jTwE0KKCAE8DjgMAAwAXACVCAEgxGSMSRDEYFEQ2GgFXAgCIAE0iQzEZgQUSRDEYRIgARyJDMRkjEkQxGEQ2GgFXAgCIADhJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAHiJDAIoBACiL/2eJigAAiYoBASMoZUSAASBQi/9QiYoAAImKAAAogABniQ==)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create(string)void")
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L35
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%1#0: uint64 = (len "world")
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 "world")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L45
                itxn_submit
                let txn.LastLog#0: bytes = (itxn LastLog)
                let awst_tmp%4#0: bytes = txn.LastLog#0
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%4#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%4#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = value%0#0
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L52
                itxn_submit
                let length%2#0: uint64 = (len "hello world")
                let as_bytes%2#0: bytes = (itob length%2#0)
                let length_uint16%2#0: bytes = ((extract 6 2) as_bytes%2#0)
                let encoded_value%2#0: bytes = (concat length_uint16%2#0 "hello world")
                let tmp%3#0: bool = (== result#0 encoded_value%2#0)
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_compile_contract_tmpl() -> void:
            block@0: // L61
                itxn_begin
                ((itxn_field LocalNumByteSlice) 0u)
                ((itxn_field LocalNumUint) 0u)
                ((itxn_field GlobalNumByteSlice) 1u)
                ((itxn_field GlobalNumUint) 0u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACaMRtBAGQ2GgCCAwRMXGG6BCQ3jTwE0KKCAE8DjgMAAwARAB9CAEIxGSMSRDEYFESIAE0iQzEZgQUSRDEYRIgAQyJDMRkjEkQxGEQ2GgFXAgCIADRJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAGiJDAIoAAImKAACJigEBIyhlRIABIFCL/1CJigAAiYoAACiABHRtcGxniQ==)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L67
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%0#0: uint64 = (len "world")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "world")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L80
                itxn_submit
                let txn.LastLog#0: bytes = (itxn LastLog)
                let awst_tmp%4#0: bytes = txn.LastLog#0
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%4#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%4#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = value%0#0
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L87
                itxn_submit
                let length%1#0: uint64 = (len "hey world")
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 "hey world")
                let tmp%3#0: bool = (== result#0 encoded_value%1#0)
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_compile_contract_prfx() -> void:
            block@0: // L96
                itxn_begin
                ((itxn_field GlobalNumByteSlice) 1u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACaMRtBAGQ2GgCCAwRMXGG6BCQ3jTwE0KKCAE8DjgMAAwARAB9CAEIxGSMSRDEYFESIAE0iQzEZgQUSRDEYRIgAQyJDMRkjEkQxGEQ2GgFXAgCIADRJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAGiJDAIoAAImKAACJigEBIyhlRIABIFCL/1CJigAAiYoAACiAAmhpZ4k=)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L103
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%0#0: uint64 = (len "world")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "world")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L113
                itxn_submit
                let txn.LastLog#0: bytes = (itxn LastLog)
                let awst_tmp%4#0: bytes = txn.LastLog#0
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%4#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%4#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = value%0#0
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L120
                itxn_submit
                let length%1#0: uint64 = (len "hi world")
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 "hi world")
                let tmp%3#0: bool = (== result#0 encoded_value%1#0)
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_compile_contract_large() -> void:
            block@0: // L129
                itxn_begin
                ((itxn_field GlobalNumByteSlice) 0u)
                ((itxn_field ExtraProgramPages) 2u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAxG0EAQTYaAIICBPXk/U0EJDeNPE8CjgIAAwAbQgAmMRkjEkQxGESIAC8WgAQVH3x1TwFQsCJDMRmBBRJEMRhEiBAlIkMAMRkjTwGOAQADQgAGMRgURCJDAIoAAYgAAhWJigABgIAg
                ((itxn_field ApprovalProgramPages) AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiYoAAIk=)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L134
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "get_big_bytes_length()uint64")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L144
                itxn_submit
                let txn.LastLog#0: bytes = (itxn LastLog)
                let awst_tmp%4#0: bytes = txn.LastLog#0
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%4#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%4#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = value%0#0
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L151
                itxn_submit
                let reinterpret_biguint%0#0: biguint = result#0
                let tmp%3#0: bool = (b== reinterpret_biguint%0#0 0x0000000000001000)
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_arc4_create() -> void:
            block@0: // L160
                itxn_begin
                let length%0#0: uint64 = (len "hello")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "hello")
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                ((itxn_field LocalNumUint) 0u)
                ((itxn_field LocalNumByteSlice) 0u)
                ((itxn_field GlobalNumUint) 0u)
                ((itxn_field GlobalNumByteSlice) 1u)
                ((itxn_field ExtraProgramPages) 0u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACkMRtBAGo2GgCCAwQg3zpUBCQ3jTwE0KKCAE8DjgMAAwAXACVCAEgxGSMSRDEYFEQ2GgFXAgCIAE0iQzEZgQUSRDEYRIgARyJDMRkjEkQxGEQ2GgFXAgCIADhJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAHiJDAIoBACiL/2eJigAAiYoBASMoZUSAASBQi/9QiYoAAImKAAAogABniQ==)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create(string)void")
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L162
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%1#0: uint64 = (len "world")
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 "world")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L165
                itxn_submit
                let awst_tmp%14#0: bytes = (itxn LastLog)
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%14#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%14#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = ((extract 2 0) value%0#0)
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L168
                itxn_submit
                let tmp%3#0: bool = (== result#0 "hello world")
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_arc4_create_tmpl() -> void:
            block@0: // L177
                itxn_begin
                ((itxn_field LocalNumUint) 0u)
                ((itxn_field LocalNumByteSlice) 0u)
                ((itxn_field GlobalNumUint) 0u)
                ((itxn_field GlobalNumByteSlice) 1u)
                ((itxn_field ExtraProgramPages) 0u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACaMRtBAGQ2GgCCAwRMXGG6BCQ3jTwE0KKCAE8DjgMAAwARAB9CAEIxGSMSRDEYFESIAE0iQzEZgQUSRDEYRIgAQyJDMRkjEkQxGEQ2GgFXAgCIADRJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAGiJDAIoAAImKAACJigEBIyhlRIABIFCL/1CJigAAiYoAACiABHRtcGxniQ==)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L181
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%0#0: uint64 = (len "world")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "world")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L186
                itxn_submit
                let awst_tmp%5#0: bytes = (itxn LastLog)
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = ((extract 2 0) value%0#0)
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L189
                itxn_submit
                let tmp%3#0: bool = (== result#0 "tmpl2 world")
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_arc4_create_prfx() -> void:
            block@0: // L198
                itxn_begin
                ((itxn_field LocalNumUint) 0u)
                ((itxn_field LocalNumByteSlice) 0u)
                ((itxn_field GlobalNumUint) 0u)
                ((itxn_field GlobalNumByteSlice) 1u)
                ((itxn_field ExtraProgramPages) 0u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACaMRtBAGQ2GgCCAwRMXGG6BCQ3jTwE0KKCAE8DjgMAAwARAB9CAEIxGSMSRDEYFESIAE0iQzEZgQUSRDEYRIgAQyJDMRkjEkQxGEQ2GgFXAgCIADRJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAGiJDAIoAAImKAACJigEBIyhlRIABIFCL/1CJigAAiYoAACiABXByZngyZ4k=)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L204
                itxn_submit
                let hello_app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%0#0: uint64 = (len "world")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "world")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L209
                itxn_submit
                let awst_tmp%5#0: bytes = (itxn LastLog)
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = ((extract 2 0) value%0#0)
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = hello_app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L212
                itxn_submit
                let tmp%3#0: bool = (== result#0 "prfx2 world")
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_arc4_create_large() -> void:
            block@0: // L221
                itxn_begin
                ((itxn_field LocalNumUint) 0u)
                ((itxn_field LocalNumByteSlice) 0u)
                ((itxn_field GlobalNumUint) 0u)
                ((itxn_field GlobalNumByteSlice) 0u)
                ((itxn_field ExtraProgramPages) 2u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAxG0EAQTYaAIICBPXk/U0EJDeNPE8CjgIAAwAbQgAmMRkjEkQxGESIAC8WgAQVH3x1TwFQsCJDMRmBBRJEMRhEiBAlIkMAMRkjTwGOAQADQgAGMRgURCJDAIoAAYgAAhWJigABgIAg
                ((itxn_field ApprovalProgramPages) AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiYoAAIk=)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L223
                itxn_submit
                let app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "get_big_bytes_length()uint64")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L226
                itxn_submit
                let awst_tmp%14#0: bytes = (itxn LastLog)
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%14#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%14#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: uint64 = (btoi value%0#0)
                let tmp%3#0: bool = (== result#0 4096u)
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L230
                itxn_submit
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_arc4_update() -> void:
            block@0: // L236
                itxn_begin
                ((itxn_field LocalNumUint) 2u)
                ((itxn_field LocalNumByteSlice) 2u)
                ((itxn_field GlobalNumUint) 2u)
                ((itxn_field GlobalNumByteSlice) 2u)
                ((itxn_field ExtraProgramPages) 1u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACaMRtBAGQ2GgCCAwRMXGG6BCQ3jTwE0KKCAE8DjgMAAwARAB9CAEIxGSMSRDEYFESIAE0iQzEZgQUSRDEYRIgAQyJDMRkjEkQxGEQ2GgFXAgCIADRJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAGiJDAIoAAImKAACJigEBIyhlRIABIFCL/1CJigAAiYoAACiABHRtcGxniQ==)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L238
                itxn_submit
                let app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%0#0: uint64 = (len "there")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "there")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L252
                itxn_submit
                let awst_tmp%14#0: bytes = (itxn LastLog)
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%14#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%14#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = ((extract 2 0) value%0#0)
                let tmp%3#0: bool = (== result#0 "hi there")
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAQAmAQhncmVldGluZzEYQAADiACkMRtBAGo2GgCCAwQg3zpUBCQ3jTwE0KKCAE8DjgMAAwAXACVCAEgxGSMSRDEYFEQ2GgFXAgCIAE0iQzEZgQUSRDEYRIgARyJDMRkjEkQxGEQ2GgFXAgCIADhJFRZXBgJPAVCABBUffHVPAVCwIkMAMRmBBE8BjgEAA0IACDEYRIgAHiJDAIoBACiL/2eJigAAiYoBASMoZUSAASBQi/9QiYoAAImKAAAogABniQ==)
                (itxn_field ApprovalProgramPages)
                ((itxn_field OnCompletion) UpdateApplication)
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L256
                itxn_submit
                itxn_begin
                let length%1#0: uint64 = (len "there")
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 "there")
                let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
                let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)string")
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@4
            block@4: // next_txn_L259
                itxn_submit
                let awst_tmp%29#0: bytes = (itxn LastLog)
                let tmp%4#0: bytes = ((extract 4 0) awst_tmp%29#0)
                let tmp%5#0: bytes = ((extract 0 4) awst_tmp%29#0)
                let tmp%6#0: bool = (== tmp%5#0 0x151f7c75)
                let value%1#0: bytes = tmp%4#0
                let check%1#0: bool = tmp%6#0
                (assert check%1#0) // ARC4 prefix is valid
                let result#0: bytes = ((extract 2 0) value%1#0)
                let tmp%7#0: bool = (== result#0 "hi there")
                (assert tmp%7#0)
                itxn_begin
                let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@5
            block@5: // next_txn_L263
                itxn_submit
                return 
        
        subroutine test_cases.compile.factory.HelloFactory.test_other_constants() -> void:
            block@0: // L270
                itxn_begin
                ((itxn_field LocalNumUint) 0u)
                ((itxn_field LocalNumByteSlice) 0u)
                ((itxn_field GlobalNumUint) 0u)
                ((itxn_field GlobalNumByteSlice) 4u)
                ((itxn_field ExtraProgramPages) 0u)
                ((itxn_field ClearStateProgramPages) CoEBQw==)
                (itxn_field ClearStateProgramPages)
                ((itxn_field ApprovalProgramPages) CiACAAEmBQNudW0BMAhncmVldGluZwdhZGRyZXNzBm1ldGhvZDEYQAADiACjNhoAggMETFxhugQkN408BFsMI3VPA44DAAMAEQAfQgBCMRkiEkQxGBREiAA3I0MxGYEFEkQxGESIAC0jQzEZIhJEMRhENhoBVwIAiAAeSRUWVwYCTwFQgAQVH3x1TwFQsCNDAIoAAImKAACJigEBIihlRCmgFSMJIihlRCmgSwEjCE8BTwJPAlIiKmVEgAEgUIv/UE8BUCIrZURQIicEZURQiYoAACqABHRtcGxnKIABQmcrgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcnBIAEAAAAAGeJ)
                (itxn_field ApprovalProgramPages)
                ((itxn_field ApplicationArgs) method "create()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@1
            block@1: // next_txn_L272
                itxn_submit
                let app#0: uint64 = (itxn CreatedApplicationID)
                itxn_begin
                let length%0#0: uint64 = (len "Johnny")
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 "Johnny")
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "greet(string)byte[]")
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@2
            block@2: // next_txn_L287
                itxn_submit
                let awst_tmp%14#0: bytes = (itxn LastLog)
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%14#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%14#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let value%0#0: bytes = tmp%0#0
                let check%0#0: bool = tmp%2#0
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = ((extract 2 0) value%0#0)
                let tmp%3#0: bytes = (global ZeroAddress)
                let tmp%4#0: bytes = (concat 0x68656c6c6f204a6f686e6e7935 tmp%3#0)
                let tmp%5#0: bytes = (concat tmp%4#0 method "something()void")
                let tmp%6#0: bool = (== result#0 tmp%5#0)
                (assert tmp%6#0)
                itxn_begin
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                ((itxn_field OnCompletion) DeleteApplication)
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) method "delete()void")
                ((itxn_field TypeEnum) appl)
                ((itxn_field Fee) 0u)
                goto block@3
            block@3: // next_txn_L293
                itxn_submit
                return 
    
    program clear-state:
        subroutine test_cases.compile.factory.HelloFactory.clear_state_program() -> bool:
            block@0: // L24
                return 1u