{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;AAKiB;;AACH;;AACG;AAEA;;AAHT;;AAAA;;;;;;AAAA;;;AAKR;AAAA;;;AAAA;;;AACwB;;AAAR;AAAJ;;;;AACG;AAAP;AAHiB;AAAT;;;;;AAFS;AAAT;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.control_op_simplification.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1"
    },
    "4": {
      "op": "b main_block@0"
    },
    "7": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [],
      "stack_out": [
        "do_log#0"
      ]
    },
    "9": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "do_log#0",
        "tmp%0#0"
      ]
    },
    "11": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "do_log#0",
        "tmp%0#0",
        "1"
      ]
    },
    "12": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "1",
        "3",
        "tmp%0#0"
      ],
      "stack_out": [
        "do_log#0",
        "tmp%0#0",
        "1",
        "3"
      ]
    },
    "14": {
      "op": "uncover 2",
      "stack_out": [
        "do_log#0",
        "1",
        "3",
        "tmp%0#0"
      ]
    },
    "16": {
      "op": "match main_switch_case_0@1 main_switch_case_1@2",
      "stack_out": [
        "do_log#0"
      ]
    },
    "22": {
      "op": "b main_switch_case_next@3"
    },
    "25": {
      "block": "main_switch_case_next@3",
      "stack_in": [
        "do_log#0"
      ],
      "op": "dup",
      "defined_out": [
        "do_log#0"
      ],
      "stack_out": [
        "do_log#0",
        "do_log#0"
      ]
    },
    "26": {
      "op": "bz main_after_if_else@5",
      "stack_out": [
        "do_log#0"
      ]
    },
    "29": {
      "op": "b main_if_body@4"
    },
    "32": {
      "block": "main_if_body@4",
      "stack_in": [
        "do_log#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "do_log#0",
        "tmp%1#0"
      ]
    },
    "34": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "do_log#0",
        "tmp%2#0"
      ]
    },
    "35": {
      "op": "log",
      "stack_out": [
        "do_log#0"
      ]
    },
    "36": {
      "op": "b main_after_if_else@5"
    },
    "39": {
      "block": "main_after_if_else@5",
      "stack_in": [
        "do_log#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "do_log#0",
        "1"
      ]
    },
    "40": {
      "op": "return",
      "stack_out": [
        "do_log#0"
      ]
    },
    "41": {
      "block": "main_switch_case_1@2",
      "stack_in": [
        "do_log#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "do_log#0",
        "1"
      ]
    },
    "42": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "do_log#0"
      ]
    },
    "44": {
      "op": "b main_switch_case_next@3"
    },
    "47": {
      "block": "main_switch_case_0@1",
      "stack_in": [
        "do_log#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "do_log#0",
        "1"
      ]
    },
    "48": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "do_log#0"
      ]
    },
    "50": {
      "op": "b main_switch_case_next@3"
    }
  }
}