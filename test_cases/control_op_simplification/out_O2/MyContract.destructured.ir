contract test_cases.control_op_simplification.contract.MyContract:
    program approval:
        subroutine test_cases.control_op_simplification.contract.MyContract.approval_program() -> bool:
            block@0: // L5
                let do_log#0: bool = 0u
                let tmp%0#0: uint64 = (txn NumAppArgs)
                goto_nth [block@4, block@1, block@4, block@1][tmp%0#0] else goto block@4
            block@1: // switch_case_0_L9
                let do_log#0: bool = 1u
                goto block@4
            block@4: // switch_case_next_L7
                goto do_log#0 ? block@5 : block@6
            block@5: // if_body_L13
                let tmp%1#0: uint64 = (txn NumAppArgs)
                let tmp%2#0: bytes = (itob tmp%1#0)
                (log tmp%2#0)
                goto block@6
            block@6: // after_if_else_L12
                return 1u
    
    program clear-state:
        subroutine test_cases.control_op_simplification.contract.MyContract.clear_state_program() -> bool:
            block@0: // L16
                return 1u