#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1 3 6
    bytecblock "TEST" "TST" 0x151f7c75 0x31 0x6d4700ad
    txn NumAppArgs
    bz main_bare_routing@9
    pushbytess 0x284c1e61 0xaa33c1ba 0x4f96071a 0xbb0098a2 // method "test_call_with_txn(byte[],byte[],application)void", method "test_call_with_acfg(byte[],byte[],application)void", method "test_call_with_infer(byte[],byte[],application)void", method "test_call_with_acfg_no_return(byte[],byte[],application)void"
    txna ApplicationArgs 0
    match main_test_call_with_txn_route@3 main_test_call_with_acfg_route@4 main_test_call_with_infer_route@5 main_test_call_with_acfg_no_return_route@6

main_after_if_else@13:
    intc_0 // 0
    return

main_test_call_with_acfg_no_return_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    btoi
    txnas Applications
    itxn_begin
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec_0 // "TEST"
    itxn_field ConfigAssetName
    bytec_1 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    bytec_3 // 0x31
    itxn_field Note
    itxn_field ApplicationID
    pushbytes 0xc840077d // method "call_with_acfg_no_return(byte[],acfg,byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn Note
    bytec_3 // 0x31
    ==
    assert
    gitxn 0 CreatedAssetID
    assert // expected asset to be created
    intc_1 // 1
    return

main_test_call_with_infer_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    btoi
    txnas Applications
    itxn_begin
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec_0 // "TEST"
    itxn_field ConfigAssetName
    bytec_1 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    itxn_field ApplicationID
    bytec 4 // method "call_with_acfg(byte[],acfg,byte[])uint64"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_2 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    intc_1 // 1
    return

main_test_call_with_acfg_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    btoi
    txnas Applications
    itxn_begin
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec_0 // "TEST"
    itxn_field ConfigAssetName
    bytec_1 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    itxn_field ApplicationID
    bytec 4 // method "call_with_acfg(byte[],acfg,byte[])uint64"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 1 LastLog
    extract 0 4
    bytec_2 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    intc_1 // 1
    return

main_test_call_with_txn_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    btoi
    txnas Applications
    itxn_begin
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec_0 // "TEST"
    itxn_field ConfigAssetName
    bytec_1 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    itxn_field ApplicationID
    pushbytes 0xa1f5040d // method "call_with_txn(byte[],txn,byte[])uint64"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_3 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 1 LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_2 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    btoi
    assert // expected asset id
    intc_1 // 1
    return

main_bare_routing@9:
    txn OnCompletion
    bnz main_after_if_else@13
    txn ApplicationID
    !
    assert // can only call when creating
    intc_1 // 1
    return
