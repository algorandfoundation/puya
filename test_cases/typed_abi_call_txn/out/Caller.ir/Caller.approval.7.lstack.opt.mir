// Op                                                                                       Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txn NumAppArgs                                                                      tmp%0#1
        bz main_bare_routing@9 ; b main_abi_routing@2

    main_abi_routing@2:
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txna ApplicationArgs 0                                                              tmp%2#0
        method test_call_with_txn(byte[],byte[],application)void                            tmp%2#0,Method(test_call_with_txn(byte[],byte[],application)void)
        method test_call_with_acfg(byte[],byte[],application)void                           tmp%2#0,Method(test_call_with_txn(byte[],byte[],application)void),Method(test_call_with_acfg(byte[],byte[],application)void)
        method test_call_with_infer(byte[],byte[],application)void                          tmp%2#0,Method(test_call_with_txn(byte[],byte[],application)void),Method(test_call_with_acfg(byte[],byte[],application)void),Method(test_call_with_infer(byte[],byte[],application)void)
        method test_call_with_acfg_no_return(byte[],byte[],application)void                 tmp%2#0,Method(test_call_with_txn(byte[],byte[],application)void),Method(test_call_with_acfg(byte[],byte[],application)void),Method(test_call_with_infer(byte[],byte[],application)void),Method(test_call_with_acfg_no_return(byte[],byte[],application)void)
        l-load tmp%2#0 4                                                                    Method(test_call_with_txn(byte[],byte[],application)void),Method(test_call_with_acfg(byte[],byte[],application)void),Method(test_call_with_infer(byte[],byte[],application)void),Method(test_call_with_acfg_no_return(byte[],byte[],application)void),tmp%2#0
        match main_test_call_with_txn_route@3 main_test_call_with_acfg_route@4 main_test_call_with_infer_route@5 main_test_call_with_acfg_no_return_route@6 ; b main_after_if_else@13 

    main_test_call_with_txn_route@3:
        // typed_abi_call_txn/caller.py:15
        // @arc4.abimethod
        txn OnCompletion                                                                    tmp%3#0
        !                                                                                   tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                   tmp%5#0
        assert // can only call when not creating
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txna ApplicationArgs 1                                                              reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                         tmp%7#0
        txna ApplicationArgs 2                                                              tmp%7#0,reinterpret_Encoded(len+uint8[])%1#0
        extract 2 0                                                                         tmp%7#0,tmp%8#0
        txna ApplicationArgs 3                                                              tmp%7#0,tmp%8#0,reinterpret_Encoded(uint8)%0#0
        btoi                                                                                tmp%7#0,tmp%8#0,tmp%9#0
        txnas Applications                                                                  tmp%7#0,tmp%8#0,tmp%10#0
        // typed_abi_call_txn/caller.py:15
        // @arc4.abimethod
        l-load tmp%7#0 2                                                                    tmp%8#0,tmp%10#0,tmp%7#0
        l-load tmp%8#0 2                                                                    tmp%10#0,tmp%7#0,tmp%8#0
        l-load tmp%10#0 2                                                                   tmp%7#0,tmp%8#0,tmp%10#0
        callsub test_call_with_txn
        int 1                                                                               test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14 

    main_test_call_with_acfg_route@4:
        // typed_abi_call_txn/caller.py:31
        // @arc4.abimethod
        txn OnCompletion                                                                    tmp%11#0
        !                                                                                   tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                   tmp%13#0
        assert // can only call when not creating
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txna ApplicationArgs 1                                                              reinterpret_Encoded(len+uint8[])%2#0
        extract 2 0                                                                         tmp%15#0
        txna ApplicationArgs 2                                                              tmp%15#0,reinterpret_Encoded(len+uint8[])%3#0
        extract 2 0                                                                         tmp%15#0,tmp%16#0
        txna ApplicationArgs 3                                                              tmp%15#0,tmp%16#0,reinterpret_Encoded(uint8)%1#0
        btoi                                                                                tmp%15#0,tmp%16#0,tmp%17#0
        txnas Applications                                                                  tmp%15#0,tmp%16#0,tmp%18#0
        // typed_abi_call_txn/caller.py:31
        // @arc4.abimethod
        l-load tmp%15#0 2                                                                   tmp%16#0,tmp%18#0,tmp%15#0
        l-load tmp%16#0 2                                                                   tmp%18#0,tmp%15#0,tmp%16#0
        l-load tmp%18#0 2                                                                   tmp%15#0,tmp%16#0,tmp%18#0
        callsub test_call_with_acfg
        int 1                                                                               test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14 

    main_test_call_with_infer_route@5:
        // typed_abi_call_txn/caller.py:46
        // @arc4.abimethod
        txn OnCompletion                                                                    tmp%19#0
        !                                                                                   tmp%20#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                   tmp%21#0
        assert // can only call when not creating
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txna ApplicationArgs 1                                                              reinterpret_Encoded(len+uint8[])%4#0
        extract 2 0                                                                         tmp%23#0
        txna ApplicationArgs 2                                                              tmp%23#0,reinterpret_Encoded(len+uint8[])%5#0
        extract 2 0                                                                         tmp%23#0,tmp%24#0
        txna ApplicationArgs 3                                                              tmp%23#0,tmp%24#0,reinterpret_Encoded(uint8)%2#0
        btoi                                                                                tmp%23#0,tmp%24#0,tmp%25#0
        txnas Applications                                                                  tmp%23#0,tmp%24#0,tmp%26#0
        // typed_abi_call_txn/caller.py:46
        // @arc4.abimethod
        l-load tmp%23#0 2                                                                   tmp%24#0,tmp%26#0,tmp%23#0
        l-load tmp%24#0 2                                                                   tmp%26#0,tmp%23#0,tmp%24#0
        l-load tmp%26#0 2                                                                   tmp%23#0,tmp%24#0,tmp%26#0
        callsub test_call_with_infer
        int 1                                                                               test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14 

    main_test_call_with_acfg_no_return_route@6:
        // typed_abi_call_txn/caller.py:61
        // @arc4.abimethod
        txn OnCompletion                                                                    tmp%27#0
        !                                                                                   tmp%28#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                   tmp%29#0
        assert // can only call when not creating
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txna ApplicationArgs 1                                                              reinterpret_Encoded(len+uint8[])%6#0
        extract 2 0                                                                         tmp%31#0
        txna ApplicationArgs 2                                                              tmp%31#0,reinterpret_Encoded(len+uint8[])%7#0
        extract 2 0                                                                         tmp%31#0,tmp%32#0
        txna ApplicationArgs 3                                                              tmp%31#0,tmp%32#0,reinterpret_Encoded(uint8)%3#0
        btoi                                                                                tmp%31#0,tmp%32#0,tmp%33#0
        txnas Applications                                                                  tmp%31#0,tmp%32#0,tmp%34#0
        // typed_abi_call_txn/caller.py:61
        // @arc4.abimethod
        l-load tmp%31#0 2                                                                   tmp%32#0,tmp%34#0,tmp%31#0
        l-load tmp%32#0 2                                                                   tmp%34#0,tmp%31#0,tmp%32#0
        l-load tmp%34#0 2                                                                   tmp%31#0,tmp%32#0,tmp%34#0
        callsub test_call_with_acfg_no_return
        int 1                                                                               test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14 

    main_bare_routing@9:
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        txn OnCompletion                                                                    tmp%35#0
        bz main___algopy_default_create@10 ; b main_after_if_else@13

    main___algopy_default_create@10:
        txn ApplicationID                                                                   tmp%36#0
        !                                                                                   tmp%37#0
        assert // can only call when creating
        int 1                                                                               test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14 

    main_after_if_else@13:
        // typed_abi_call_txn/caller.py:14
        // class Caller(ARC4Contract):
        int 0                                                                               test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14 

    main_after_inlined_test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__@14:
        v-load tmp%0#0                                                                      tmp%0#0
        return


// test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(a: bytes, b: bytes, app: uint64) -> void:
subroutine test_call_with_txn:
    test_call_with_txn_block@0:                                                             (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:22-28
        // asset_id, _txn = arc4.abi_call(
        //     TxnContract.call_with_txn,
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        itxn_begin                                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:20
        // total=1,
        int 1                                                                               (𝕡) a#0,b#0,app#0 | 1
        itxn_field ConfigAssetTotal                                                         (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:19
        // asset_name="TEST",
        byte "TEST"                                                                         (𝕡) a#0,b#0,app#0 | "TEST"
        itxn_field ConfigAssetName                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:18
        // unit_name="TST",
        byte "TST"                                                                          (𝕡) a#0,b#0,app#0 | "TST"
        itxn_field ConfigAssetUnitName                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:17
        // txn = itxn.AssetConfig(
        int acfg                                                                            (𝕡) a#0,b#0,app#0 | acfg
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:22-28
        // asset_id, _txn = arc4.abi_call(
        //     TxnContract.call_with_txn,
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        itxn_next                                                                           (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:24
        // a,
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | a#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | length%0#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | as_bytes%0#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | length_uint16%0#0
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | length_uint16%0#0,a#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0
        // typed_abi_call_txn/caller.py:26
        // b,
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,b#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length%1#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | encoded_value%0#0,as_bytes%1#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0,b#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        p-load app#0                                                                        (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,app#0 (copy)
        itxn_field ApplicationID                                                            (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        // typed_abi_call_txn/caller.py:22-28
        // asset_id, _txn = arc4.abi_call(
        //     TxnContract.call_with_txn,
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        method call_with_txn(byte[],txn,byte[])uint64                                       (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,Method(call_with_txn(byte[],txn,byte[])uint64)
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        l-load encoded_value%0#0 1                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0,encoded_value%0#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        l-load encoded_value%1#0 0                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 |
        int appl                                                                            (𝕡) a#0,b#0,app#0 | appl
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        itxn_submit                                                                         (𝕡) a#0,b#0,app#0 |
        gitxn 1 LastLog                                                                     (𝕡) a#0,b#0,app#0 | awst_tmp%0#0
        l-load-copy awst_tmp%0#0 0                                                          (𝕡) a#0,b#0,app#0 | awst_tmp%0#0,awst_tmp%0#0 (copy)
        extract 4 0                                                                         (𝕡) a#0,b#0,app#0 | awst_tmp%0#0,tmp%0#0
        l-load awst_tmp%0#0 1                                                               (𝕡) a#0,b#0,app#0 | tmp%0#0,awst_tmp%0#0
        extract 0 4                                                                         (𝕡) a#0,b#0,app#0 | tmp%0#0,tmp%1#0
        byte 0x151f7c75                                                                     (𝕡) a#0,b#0,app#0 | tmp%0#0,tmp%1#0,0x151f7c75
        ==                                                                                  (𝕡) a#0,b#0,app#0 | tmp%0#0,tmp%2#0
        assert // application log value is not the result of an ABI return                  (𝕡) a#0,b#0,app#0 | tmp%0#0
        l-load tmp%0#0 0                                                                    (𝕡) a#0,b#0,app#0 | tmp%0#0
        btoi                                                                                (𝕡) a#0,b#0,app#0 | asset_id#0
        // typed_abi_call_txn/caller.py:29
        // assert asset_id, "expected asset id"
        assert // expected asset id                                                         (𝕡) a#0,b#0,app#0 |
        retsub


// test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(a: bytes, b: bytes, app: uint64) -> void:
subroutine test_call_with_acfg:
    test_call_with_acfg_block@0:                                                            (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:38-44
        // arc4.abi_call(
        //     TxnContract.call_with_acfg,
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        itxn_begin                                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:36
        // total=1,
        int 1                                                                               (𝕡) a#0,b#0,app#0 | 1
        itxn_field ConfigAssetTotal                                                         (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:35
        // asset_name="TEST",
        byte "TEST"                                                                         (𝕡) a#0,b#0,app#0 | "TEST"
        itxn_field ConfigAssetName                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:34
        // unit_name="TST",
        byte "TST"                                                                          (𝕡) a#0,b#0,app#0 | "TST"
        itxn_field ConfigAssetUnitName                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:33
        // txn = itxn.AssetConfig(
        int acfg                                                                            (𝕡) a#0,b#0,app#0 | acfg
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:38-44
        // arc4.abi_call(
        //     TxnContract.call_with_acfg,
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        itxn_next                                                                           (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:40
        // a,
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | a#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | length%0#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | as_bytes%0#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | length_uint16%0#0
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | length_uint16%0#0,a#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0
        // typed_abi_call_txn/caller.py:42
        // b,
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,b#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length%1#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | encoded_value%0#0,as_bytes%1#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0,b#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        p-load app#0                                                                        (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,app#0 (copy)
        itxn_field ApplicationID                                                            (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        // typed_abi_call_txn/caller.py:38-44
        // arc4.abi_call(
        //     TxnContract.call_with_acfg,
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        method call_with_acfg(byte[],acfg,byte[])uint64                                     (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,Method(call_with_acfg(byte[],acfg,byte[])uint64)
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        l-load encoded_value%0#0 1                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0,encoded_value%0#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        l-load encoded_value%1#0 0                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 |
        int appl                                                                            (𝕡) a#0,b#0,app#0 | appl
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        itxn_submit                                                                         (𝕡) a#0,b#0,app#0 |
        gitxn 1 LastLog                                                                     (𝕡) a#0,b#0,app#0 | awst_tmp%0#0
        extract 0 4                                                                         (𝕡) a#0,b#0,app#0 | tmp%1#0
        byte 0x151f7c75                                                                     (𝕡) a#0,b#0,app#0 | tmp%1#0,0x151f7c75
        ==                                                                                  (𝕡) a#0,b#0,app#0 | tmp%2#0
        assert // application log value is not the result of an ABI return                  (𝕡) a#0,b#0,app#0 |
        retsub


// test_cases.typed_abi_call_txn.caller.Caller.test_call_with_infer(a: bytes, b: bytes, app: uint64) -> void:
subroutine test_call_with_infer:
    test_call_with_infer_block@0:                                                           (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:53-59
        // arc4.abi_call[UInt64](
        //     "call_with_acfg",
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        itxn_begin                                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:51
        // total=1,
        int 1                                                                               (𝕡) a#0,b#0,app#0 | 1
        itxn_field ConfigAssetTotal                                                         (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:50
        // asset_name="TEST",
        byte "TEST"                                                                         (𝕡) a#0,b#0,app#0 | "TEST"
        itxn_field ConfigAssetName                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:49
        // unit_name="TST",
        byte "TST"                                                                          (𝕡) a#0,b#0,app#0 | "TST"
        itxn_field ConfigAssetUnitName                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:48
        // txn = itxn.AssetConfig(
        int acfg                                                                            (𝕡) a#0,b#0,app#0 | acfg
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:53-59
        // arc4.abi_call[UInt64](
        //     "call_with_acfg",
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        itxn_next                                                                           (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:55
        // a,
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | a#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | length%0#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | as_bytes%0#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | length_uint16%0#0
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | length_uint16%0#0,a#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0
        // typed_abi_call_txn/caller.py:57
        // b,
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,b#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length%1#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | encoded_value%0#0,as_bytes%1#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0,b#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        p-load app#0                                                                        (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,app#0 (copy)
        itxn_field ApplicationID                                                            (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        // typed_abi_call_txn/caller.py:53-59
        // arc4.abi_call[UInt64](
        //     "call_with_acfg",
        //     a,
        //     txn,
        //     b,
        //     app_id=app,
        // )
        method call_with_acfg(byte[],acfg,byte[])uint64                                     (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,Method(call_with_acfg(byte[],acfg,byte[])uint64)
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        l-load encoded_value%0#0 1                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0,encoded_value%0#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        l-load encoded_value%1#0 0                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 |
        int appl                                                                            (𝕡) a#0,b#0,app#0 | appl
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        itxn_submit                                                                         (𝕡) a#0,b#0,app#0 |
        gitxn 1 LastLog                                                                     (𝕡) a#0,b#0,app#0 | awst_tmp%0#0
        extract 0 4                                                                         (𝕡) a#0,b#0,app#0 | tmp%1#0
        byte 0x151f7c75                                                                     (𝕡) a#0,b#0,app#0 | tmp%1#0,0x151f7c75
        ==                                                                                  (𝕡) a#0,b#0,app#0 | tmp%2#0
        assert // application log value is not the result of an ABI return                  (𝕡) a#0,b#0,app#0 |
        retsub


// test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg_no_return(a: bytes, b: bytes, app: uint64) -> void:
subroutine test_call_with_acfg_no_return:
    test_call_with_acfg_no_return_block@0:                                                  (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:68-70
        // txn1 = arc4.abi_call(
        //     TxnContract.call_with_acfg_no_return, a, acfg, b, app_id=app, note=b"1"
        // )
        itxn_begin                                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:66
        // total=1,
        int 1                                                                               (𝕡) a#0,b#0,app#0 | 1
        itxn_field ConfigAssetTotal                                                         (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:65
        // asset_name="TEST",
        byte "TEST"                                                                         (𝕡) a#0,b#0,app#0 | "TEST"
        itxn_field ConfigAssetName                                                          (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:64
        // unit_name="TST",
        byte "TST"                                                                          (𝕡) a#0,b#0,app#0 | "TST"
        itxn_field ConfigAssetUnitName                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:63
        // acfg = itxn.AssetConfig(
        int acfg                                                                            (𝕡) a#0,b#0,app#0 | acfg
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:68-70
        // txn1 = arc4.abi_call(
        //     TxnContract.call_with_acfg_no_return, a, acfg, b, app_id=app, note=b"1"
        // )
        itxn_next                                                                           (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:69
        // TxnContract.call_with_acfg_no_return, a, acfg, b, app_id=app, note=b"1"
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | a#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | length%0#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | as_bytes%0#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | length_uint16%0#0
        p-load a#0                                                                          (𝕡) a#0,b#0,app#0 | length_uint16%0#0,a#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,b#0 (copy)
        len                                                                                 (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length%1#0
        itob                                                                                (𝕡) a#0,b#0,app#0 | encoded_value%0#0,as_bytes%1#0
        extract 6 2                                                                         (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0
        p-load b#0                                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,length_uint16%1#0,b#0 (copy)
        concat                                                                              (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        byte 0x31                                                                           (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,0x31
        itxn_field Note                                                                     (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        p-load app#0                                                                        (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,app#0 (copy)
        itxn_field ApplicationID                                                            (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        // typed_abi_call_txn/caller.py:68-70
        // txn1 = arc4.abi_call(
        //     TxnContract.call_with_acfg_no_return, a, acfg, b, app_id=app, note=b"1"
        // )
        method call_with_acfg_no_return(byte[],acfg,byte[])void                             (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0,Method(call_with_acfg_no_return(byte[],acfg,byte[])void)
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%0#0,encoded_value%1#0
        l-load encoded_value%0#0 1                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0,encoded_value%0#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        l-load encoded_value%1#0 0                                                          (𝕡) a#0,b#0,app#0 | encoded_value%1#0
        itxn_field ApplicationArgs                                                          (𝕡) a#0,b#0,app#0 |
        int appl                                                                            (𝕡) a#0,b#0,app#0 | appl
        itxn_field TypeEnum                                                                 (𝕡) a#0,b#0,app#0 |
        int 0                                                                               (𝕡) a#0,b#0,app#0 | 0
        itxn_field Fee                                                                      (𝕡) a#0,b#0,app#0 |
        itxn_submit                                                                         (𝕡) a#0,b#0,app#0 |
        itxn Note                                                                           (𝕡) a#0,b#0,app#0 | txn1.Note#0
        // typed_abi_call_txn/caller.py:71
        // assert txn1.note == b"1"
        byte 0x31                                                                           (𝕡) a#0,b#0,app#0 | txn1.Note#0,0x31
        ==                                                                                  (𝕡) a#0,b#0,app#0 | tmp%0#0
        assert                                                                              (𝕡) a#0,b#0,app#0 |
        // typed_abi_call_txn/caller.py:74
        // asset_id = op.GITxn.created_asset_id(0)
        gitxn 0 CreatedAssetID                                                              (𝕡) a#0,b#0,app#0 | asset_id#0
        // typed_abi_call_txn/caller.py:75
        // assert asset_id, "expected asset to be created"
        assert // expected asset to be created                                              (𝕡) a#0,b#0,app#0 |
        retsub


