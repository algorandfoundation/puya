main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__() -> bool:
    block@0: // L14
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@8
    block@1: // abi_routing_L14
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "test_call_with_txn(byte[],byte[],uint64)void" => block@2, method "test_call_with_acfg(byte[],byte[],uint64)void" => block@3, method "test_call_with_infer(byte[],byte[],uint64)void" => block@4, method "test_call_with_acfg_no_return(byte[],byte[],uint64)void" => block@5, * => block@6}
    block@2: // test_call_with_txn_route_L15
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let reinterpret_Encoded(len+uint8[])%0#0: Encoded(len+uint8[]) = (txna ApplicationArgs 1)
        let tmp%7#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%0#0)
        let reinterpret_Encoded(len+uint8[])%1#0: Encoded(len+uint8[]) = (txna ApplicationArgs 2)
        let tmp%8#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%1#0)
        let reinterpret_Encoded(uint64)%0#0: Encoded(uint64) = (txna ApplicationArgs 3)
        let tmp%9#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%0#0)
        test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(tmp%7#0, tmp%8#0, tmp%9#0)
        return 1u
    block@3: // test_call_with_acfg_route_L31
        let tmp%10#0: uint64 = (txn OnCompletion)
        let tmp%11#0: bool = (== tmp%10#0 NoOp)
        (assert tmp%11#0) // OnCompletion is not NoOp
        let tmp%12#0: uint64 = (txn ApplicationID)
        let tmp%13#0: bool = (!= tmp%12#0 0u)
        (assert tmp%13#0) // can only call when not creating
        let reinterpret_Encoded(len+uint8[])%2#0: Encoded(len+uint8[]) = (txna ApplicationArgs 1)
        let tmp%14#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%2#0)
        let reinterpret_Encoded(len+uint8[])%3#0: Encoded(len+uint8[]) = (txna ApplicationArgs 2)
        let tmp%15#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%3#0)
        let reinterpret_Encoded(uint64)%1#0: Encoded(uint64) = (txna ApplicationArgs 3)
        let tmp%16#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%1#0)
        test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(tmp%14#0, tmp%15#0, tmp%16#0)
        return 1u
    block@4: // test_call_with_infer_route_L46
        let tmp%17#0: uint64 = (txn OnCompletion)
        let tmp%18#0: bool = (== tmp%17#0 NoOp)
        (assert tmp%18#0) // OnCompletion is not NoOp
        let tmp%19#0: uint64 = (txn ApplicationID)
        let tmp%20#0: bool = (!= tmp%19#0 0u)
        (assert tmp%20#0) // can only call when not creating
        let reinterpret_Encoded(len+uint8[])%4#0: Encoded(len+uint8[]) = (txna ApplicationArgs 1)
        let tmp%21#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%4#0)
        let reinterpret_Encoded(len+uint8[])%5#0: Encoded(len+uint8[]) = (txna ApplicationArgs 2)
        let tmp%22#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%5#0)
        let reinterpret_Encoded(uint64)%2#0: Encoded(uint64) = (txna ApplicationArgs 3)
        let tmp%23#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
        test_cases.typed_abi_call_txn.caller.Caller.test_call_with_infer(tmp%21#0, tmp%22#0, tmp%23#0)
        return 1u
    block@5: // test_call_with_acfg_no_return_route_L61
        let tmp%24#0: uint64 = (txn OnCompletion)
        let tmp%25#0: bool = (== tmp%24#0 NoOp)
        (assert tmp%25#0) // OnCompletion is not NoOp
        let tmp%26#0: uint64 = (txn ApplicationID)
        let tmp%27#0: bool = (!= tmp%26#0 0u)
        (assert tmp%27#0) // can only call when not creating
        let reinterpret_Encoded(len+uint8[])%6#0: Encoded(len+uint8[]) = (txna ApplicationArgs 1)
        let tmp%28#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%6#0)
        let reinterpret_Encoded(len+uint8[])%7#0: Encoded(len+uint8[]) = (txna ApplicationArgs 2)
        let tmp%29#0: bytes = decode_bytes<bytes>(reinterpret_Encoded(len+uint8[])%7#0)
        let reinterpret_Encoded(uint64)%3#0: Encoded(uint64) = (txna ApplicationArgs 3)
        let tmp%30#0: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%3#0)
        test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg_no_return(tmp%28#0, tmp%29#0, tmp%30#0)
        return 1u
    block@6: // switch_case_default_L14
        goto block@7
    block@7: // switch_case_next_L14
        goto block@12
    block@8: // bare_routing_L14
        let tmp%31#0: uint64 = (txn OnCompletion)
        switch tmp%31#0 {0u => block@9, * => block@10}
    block@9: // __algopy_default_create_L1
        let tmp%32#0: uint64 = (txn ApplicationID)
        let tmp%33#0: bool = (== tmp%32#0 0u)
        (assert tmp%33#0) // can only call when creating
        test_cases.typed_abi_call_txn.caller.Caller.__algopy_default_create()
        return 1u
    block@10: // switch_case_default_L14
        goto block@11
    block@11: // switch_case_next_L14
        goto block@12
    block@12: // after_if_else_L14
        return 0u

subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(a: bytes, b: bytes, app: uint64) -> void:
    block@0: // L15
        let txn#0: itxn_field_set = itxn_field_set(0)
        let txn%%param_Fee_idx_0#0: uint64 = 0u
        let txn%%Fee_length#0: uint64 = 1u
        let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
        let txn%%TypeEnum_length#0: uint64 = 1u
        let txn%%param_ConfigAssetUnitName_idx_0#0: string = "TST"
        let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
        let txn%%param_ConfigAssetName_idx_0#0: string = "TEST"
        let txn%%ConfigAssetName_length#0: uint64 = 1u
        let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let txn%%ConfigAssetTotal_length#0: uint64 = 1u
        let txn%%Sender_length#0: uint64 = 0u
        let txn%%Note_length#0: uint64 = 0u
        let txn%%Receiver_length#0: uint64 = 0u
        let txn%%Amount_length#0: uint64 = 0u
        let txn%%CloseRemainderTo_length#0: uint64 = 0u
        let txn%%VotePK_length#0: uint64 = 0u
        let txn%%SelectionPK_length#0: uint64 = 0u
        let txn%%VoteFirst_length#0: uint64 = 0u
        let txn%%VoteLast_length#0: uint64 = 0u
        let txn%%VoteKeyDilution_length#0: uint64 = 0u
        let txn%%Type_length#0: uint64 = 0u
        let txn%%XferAsset_length#0: uint64 = 0u
        let txn%%AssetAmount_length#0: uint64 = 0u
        let txn%%AssetSender_length#0: uint64 = 0u
        let txn%%AssetReceiver_length#0: uint64 = 0u
        let txn%%AssetCloseTo_length#0: uint64 = 0u
        let txn%%ApplicationID_length#0: uint64 = 0u
        let txn%%OnCompletion_length#0: uint64 = 0u
        let txn%%ApprovalProgram_length#0: uint64 = 0u
        let txn%%ClearStateProgram_length#0: uint64 = 0u
        let txn%%RekeyTo_length#0: uint64 = 0u
        let txn%%ConfigAsset_length#0: uint64 = 0u
        let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
        let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let txn%%ConfigAssetURL_length#0: uint64 = 0u
        let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let txn%%ConfigAssetManager_length#0: uint64 = 0u
        let txn%%ConfigAssetReserve_length#0: uint64 = 0u
        let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
        let txn%%ConfigAssetClawback_length#0: uint64 = 0u
        let txn%%FreezeAsset_length#0: uint64 = 0u
        let txn%%FreezeAssetAccount_length#0: uint64 = 0u
        let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
        let txn%%GlobalNumUint_length#0: uint64 = 0u
        let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
        let txn%%LocalNumUint_length#0: uint64 = 0u
        let txn%%LocalNumByteSlice_length#0: uint64 = 0u
        let txn%%ExtraProgramPages_length#0: uint64 = 0u
        let txn%%Nonparticipation_length#0: uint64 = 0u
        let txn%%StateProofPK_length#0: uint64 = 0u
        let txn%%ApplicationArgs_length#0: uint64 = 0u
        let txn%%Accounts_length#0: uint64 = 0u
        let txn%%Assets_length#0: uint64 = 0u
        let txn%%Applications_length#0: uint64 = 0u
        let txn%%ApprovalProgramPages_length#0: uint64 = 0u
        let txn%%ClearStateProgramPages_length#0: uint64 = 0u
        itxn_begin
        ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) txn%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L25
        itxn_next
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let tmp%0#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(a#0)
        let tmp%1#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(b#0)
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "call_with_txn(byte[],txn,byte[])uint64"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: Encoded(len+uint8[]) = tmp%0#0
        let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: Encoded(len+uint8[]) = tmp%1#0
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L22
        itxn_submit
        let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
        let tmp%2#0: Encoded(uint64) = ((extract 4 0) awst_tmp%0#0)
        let tmp%3#0: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#0: bool = (== tmp%3#0 0x151f7c75)
        (assert tmp%4#0) // application log value is not the result of an ABI return
        let tmp%5#0: uint64 = decode_bytes<uint64>(tmp%2#0)
        let asset_id#0: uint64 = tmp%5#0
        let _txn#0: itxn_group_idx = itxn_group_idx(1)
        let _txn._is_last#0: bool = 1u
        let _txn.Sender#0: account = itxn[_txn#0].Sender
        let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
        let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
        let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
        let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
        let _txn.Note#0: bytes = itxn[_txn#0].Note
        let _txn.Lease#0: bytes[32] = itxn[_txn#0].Lease
        let _txn.Receiver#0: account = itxn[_txn#0].Receiver
        let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
        let _txn.CloseRemainderTo#0: account = itxn[_txn#0].CloseRemainderTo
        let _txn.VotePK#0: bytes[32] = itxn[_txn#0].VotePK
        let _txn.SelectionPK#0: bytes[32] = itxn[_txn#0].SelectionPK
        let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
        let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
        let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
        let _txn.Type#0: bytes = itxn[_txn#0].Type
        let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
        let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
        let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
        let _txn.AssetSender#0: account = itxn[_txn#0].AssetSender
        let _txn.AssetReceiver#0: account = itxn[_txn#0].AssetReceiver
        let _txn.AssetCloseTo#0: account = itxn[_txn#0].AssetCloseTo
        let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
        let _txn.TxID#0: bytes[32] = itxn[_txn#0].TxID
        let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
        let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
        let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
        let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
        let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
        let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
        let _txn.RekeyTo#0: account = itxn[_txn#0].RekeyTo
        let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
        let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
        let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
        let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
        let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
        let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
        let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
        let _txn.ConfigAssetMetadataHash#0: bytes[32] = itxn[_txn#0].ConfigAssetMetadataHash
        let _txn.ConfigAssetManager#0: account = itxn[_txn#0].ConfigAssetManager
        let _txn.ConfigAssetReserve#0: account = itxn[_txn#0].ConfigAssetReserve
        let _txn.ConfigAssetFreeze#0: account = itxn[_txn#0].ConfigAssetFreeze
        let _txn.ConfigAssetClawback#0: account = itxn[_txn#0].ConfigAssetClawback
        let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
        let _txn.FreezeAssetAccount#0: account = itxn[_txn#0].FreezeAssetAccount
        let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
        let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
        let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
        let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
        let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
        let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
        let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
        let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
        let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
        let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
        let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
        let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
        let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
        let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
        let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
        let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
        let tmp%6#0: bool = (!= asset_id#0 0u)
        (assert tmp%6#0) // expected asset id
        return 

subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(a: bytes, b: bytes, app: uint64) -> void:
    block@0: // L31
        let txn#0: itxn_field_set = itxn_field_set(0)
        let txn%%param_Fee_idx_0#0: uint64 = 0u
        let txn%%Fee_length#0: uint64 = 1u
        let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
        let txn%%TypeEnum_length#0: uint64 = 1u
        let txn%%param_ConfigAssetUnitName_idx_0#0: string = "TST"
        let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
        let txn%%param_ConfigAssetName_idx_0#0: string = "TEST"
        let txn%%ConfigAssetName_length#0: uint64 = 1u
        let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let txn%%ConfigAssetTotal_length#0: uint64 = 1u
        let txn%%Sender_length#0: uint64 = 0u
        let txn%%Note_length#0: uint64 = 0u
        let txn%%Receiver_length#0: uint64 = 0u
        let txn%%Amount_length#0: uint64 = 0u
        let txn%%CloseRemainderTo_length#0: uint64 = 0u
        let txn%%VotePK_length#0: uint64 = 0u
        let txn%%SelectionPK_length#0: uint64 = 0u
        let txn%%VoteFirst_length#0: uint64 = 0u
        let txn%%VoteLast_length#0: uint64 = 0u
        let txn%%VoteKeyDilution_length#0: uint64 = 0u
        let txn%%Type_length#0: uint64 = 0u
        let txn%%XferAsset_length#0: uint64 = 0u
        let txn%%AssetAmount_length#0: uint64 = 0u
        let txn%%AssetSender_length#0: uint64 = 0u
        let txn%%AssetReceiver_length#0: uint64 = 0u
        let txn%%AssetCloseTo_length#0: uint64 = 0u
        let txn%%ApplicationID_length#0: uint64 = 0u
        let txn%%OnCompletion_length#0: uint64 = 0u
        let txn%%ApprovalProgram_length#0: uint64 = 0u
        let txn%%ClearStateProgram_length#0: uint64 = 0u
        let txn%%RekeyTo_length#0: uint64 = 0u
        let txn%%ConfigAsset_length#0: uint64 = 0u
        let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
        let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let txn%%ConfigAssetURL_length#0: uint64 = 0u
        let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let txn%%ConfigAssetManager_length#0: uint64 = 0u
        let txn%%ConfigAssetReserve_length#0: uint64 = 0u
        let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
        let txn%%ConfigAssetClawback_length#0: uint64 = 0u
        let txn%%FreezeAsset_length#0: uint64 = 0u
        let txn%%FreezeAssetAccount_length#0: uint64 = 0u
        let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
        let txn%%GlobalNumUint_length#0: uint64 = 0u
        let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
        let txn%%LocalNumUint_length#0: uint64 = 0u
        let txn%%LocalNumByteSlice_length#0: uint64 = 0u
        let txn%%ExtraProgramPages_length#0: uint64 = 0u
        let txn%%Nonparticipation_length#0: uint64 = 0u
        let txn%%StateProofPK_length#0: uint64 = 0u
        let txn%%ApplicationArgs_length#0: uint64 = 0u
        let txn%%Accounts_length#0: uint64 = 0u
        let txn%%Assets_length#0: uint64 = 0u
        let txn%%Applications_length#0: uint64 = 0u
        let txn%%ApprovalProgramPages_length#0: uint64 = 0u
        let txn%%ClearStateProgramPages_length#0: uint64 = 0u
        itxn_begin
        ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) txn%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L41
        itxn_next
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let tmp%0#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(a#0)
        let tmp%1#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(b#0)
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "call_with_acfg(byte[],acfg,byte[])uint64"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: Encoded(len+uint8[]) = tmp%0#0
        let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: Encoded(len+uint8[]) = tmp%1#0
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L38
        itxn_submit
        let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
        let tmp%2#0: Encoded(uint64) = ((extract 4 0) awst_tmp%0#0)
        let tmp%3#0: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#0: bool = (== tmp%3#0 0x151f7c75)
        (assert tmp%4#0) // application log value is not the result of an ABI return
        let tmp%5#0: uint64 = decode_bytes<uint64>(tmp%2#0)
        return 

subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_infer(a: bytes, b: bytes, app: uint64) -> void:
    block@0: // L46
        let txn#0: itxn_field_set = itxn_field_set(0)
        let txn%%param_Fee_idx_0#0: uint64 = 0u
        let txn%%Fee_length#0: uint64 = 1u
        let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
        let txn%%TypeEnum_length#0: uint64 = 1u
        let txn%%param_ConfigAssetUnitName_idx_0#0: string = "TST"
        let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
        let txn%%param_ConfigAssetName_idx_0#0: string = "TEST"
        let txn%%ConfigAssetName_length#0: uint64 = 1u
        let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let txn%%ConfigAssetTotal_length#0: uint64 = 1u
        let txn%%Sender_length#0: uint64 = 0u
        let txn%%Note_length#0: uint64 = 0u
        let txn%%Receiver_length#0: uint64 = 0u
        let txn%%Amount_length#0: uint64 = 0u
        let txn%%CloseRemainderTo_length#0: uint64 = 0u
        let txn%%VotePK_length#0: uint64 = 0u
        let txn%%SelectionPK_length#0: uint64 = 0u
        let txn%%VoteFirst_length#0: uint64 = 0u
        let txn%%VoteLast_length#0: uint64 = 0u
        let txn%%VoteKeyDilution_length#0: uint64 = 0u
        let txn%%Type_length#0: uint64 = 0u
        let txn%%XferAsset_length#0: uint64 = 0u
        let txn%%AssetAmount_length#0: uint64 = 0u
        let txn%%AssetSender_length#0: uint64 = 0u
        let txn%%AssetReceiver_length#0: uint64 = 0u
        let txn%%AssetCloseTo_length#0: uint64 = 0u
        let txn%%ApplicationID_length#0: uint64 = 0u
        let txn%%OnCompletion_length#0: uint64 = 0u
        let txn%%ApprovalProgram_length#0: uint64 = 0u
        let txn%%ClearStateProgram_length#0: uint64 = 0u
        let txn%%RekeyTo_length#0: uint64 = 0u
        let txn%%ConfigAsset_length#0: uint64 = 0u
        let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
        let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let txn%%ConfigAssetURL_length#0: uint64 = 0u
        let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let txn%%ConfigAssetManager_length#0: uint64 = 0u
        let txn%%ConfigAssetReserve_length#0: uint64 = 0u
        let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
        let txn%%ConfigAssetClawback_length#0: uint64 = 0u
        let txn%%FreezeAsset_length#0: uint64 = 0u
        let txn%%FreezeAssetAccount_length#0: uint64 = 0u
        let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
        let txn%%GlobalNumUint_length#0: uint64 = 0u
        let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
        let txn%%LocalNumUint_length#0: uint64 = 0u
        let txn%%LocalNumByteSlice_length#0: uint64 = 0u
        let txn%%ExtraProgramPages_length#0: uint64 = 0u
        let txn%%Nonparticipation_length#0: uint64 = 0u
        let txn%%StateProofPK_length#0: uint64 = 0u
        let txn%%ApplicationArgs_length#0: uint64 = 0u
        let txn%%Accounts_length#0: uint64 = 0u
        let txn%%Assets_length#0: uint64 = 0u
        let txn%%Applications_length#0: uint64 = 0u
        let txn%%ApprovalProgramPages_length#0: uint64 = 0u
        let txn%%ClearStateProgramPages_length#0: uint64 = 0u
        itxn_begin
        ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) txn%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L56
        itxn_next
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let tmp%0#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(a#0)
        let tmp%1#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(b#0)
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "call_with_acfg(byte[],acfg,byte[])uint64"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: Encoded(len+uint8[]) = tmp%0#0
        let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: Encoded(len+uint8[]) = tmp%1#0
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L53
        itxn_submit
        let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
        let tmp%2#0: Encoded(uint64) = ((extract 4 0) awst_tmp%0#0)
        let tmp%3#0: bytes = ((extract 0 4) awst_tmp%0#0)
        let tmp%4#0: bool = (== tmp%3#0 0x151f7c75)
        (assert tmp%4#0) // application log value is not the result of an ABI return
        let tmp%5#0: uint64 = decode_bytes<uint64>(tmp%2#0)
        return 

subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg_no_return(a: bytes, b: bytes, app: uint64) -> void:
    block@0: // L61
        let acfg#0: itxn_field_set = itxn_field_set(0)
        let acfg%%param_Fee_idx_0#0: uint64 = 0u
        let acfg%%Fee_length#0: uint64 = 1u
        let acfg%%param_TypeEnum_idx_0#0: uint64 = acfg
        let acfg%%TypeEnum_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetUnitName_idx_0#0: string = "TST"
        let acfg%%ConfigAssetUnitName_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetName_idx_0#0: string = "TEST"
        let acfg%%ConfigAssetName_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let acfg%%ConfigAssetTotal_length#0: uint64 = 1u
        let acfg%%Sender_length#0: uint64 = 0u
        let acfg%%Note_length#0: uint64 = 0u
        let acfg%%Receiver_length#0: uint64 = 0u
        let acfg%%Amount_length#0: uint64 = 0u
        let acfg%%CloseRemainderTo_length#0: uint64 = 0u
        let acfg%%VotePK_length#0: uint64 = 0u
        let acfg%%SelectionPK_length#0: uint64 = 0u
        let acfg%%VoteFirst_length#0: uint64 = 0u
        let acfg%%VoteLast_length#0: uint64 = 0u
        let acfg%%VoteKeyDilution_length#0: uint64 = 0u
        let acfg%%Type_length#0: uint64 = 0u
        let acfg%%XferAsset_length#0: uint64 = 0u
        let acfg%%AssetAmount_length#0: uint64 = 0u
        let acfg%%AssetSender_length#0: uint64 = 0u
        let acfg%%AssetReceiver_length#0: uint64 = 0u
        let acfg%%AssetCloseTo_length#0: uint64 = 0u
        let acfg%%ApplicationID_length#0: uint64 = 0u
        let acfg%%OnCompletion_length#0: uint64 = 0u
        let acfg%%ApprovalProgram_length#0: uint64 = 0u
        let acfg%%ClearStateProgram_length#0: uint64 = 0u
        let acfg%%RekeyTo_length#0: uint64 = 0u
        let acfg%%ConfigAsset_length#0: uint64 = 0u
        let acfg%%ConfigAssetDecimals_length#0: uint64 = 0u
        let acfg%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let acfg%%ConfigAssetURL_length#0: uint64 = 0u
        let acfg%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let acfg%%ConfigAssetManager_length#0: uint64 = 0u
        let acfg%%ConfigAssetReserve_length#0: uint64 = 0u
        let acfg%%ConfigAssetFreeze_length#0: uint64 = 0u
        let acfg%%ConfigAssetClawback_length#0: uint64 = 0u
        let acfg%%FreezeAsset_length#0: uint64 = 0u
        let acfg%%FreezeAssetAccount_length#0: uint64 = 0u
        let acfg%%FreezeAssetFrozen_length#0: uint64 = 0u
        let acfg%%GlobalNumUint_length#0: uint64 = 0u
        let acfg%%GlobalNumByteSlice_length#0: uint64 = 0u
        let acfg%%LocalNumUint_length#0: uint64 = 0u
        let acfg%%LocalNumByteSlice_length#0: uint64 = 0u
        let acfg%%ExtraProgramPages_length#0: uint64 = 0u
        let acfg%%Nonparticipation_length#0: uint64 = 0u
        let acfg%%StateProofPK_length#0: uint64 = 0u
        let acfg%%ApplicationArgs_length#0: uint64 = 0u
        let acfg%%Accounts_length#0: uint64 = 0u
        let acfg%%Assets_length#0: uint64 = 0u
        let acfg%%Applications_length#0: uint64 = 0u
        let acfg%%ApprovalProgramPages_length#0: uint64 = 0u
        let acfg%%ClearStateProgramPages_length#0: uint64 = 0u
        itxn_begin
        ((itxn_field ConfigAssetTotal) acfg%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field ConfigAssetName) acfg%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) acfg%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) acfg%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) acfg%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L69
        itxn_next
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let tmp%0#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(a#0)
        let tmp%1#0: Encoded(len+uint8[]) = bytes_encode<(len+uint8[])>(b#0)
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "call_with_acfg_no_return(byte[],acfg,byte[])void"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: Encoded(len+uint8[]) = tmp%0#0
        let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: Encoded(len+uint8[]) = tmp%1#0
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%0%%param_Note_idx_0#0: bytes[1] = 0x31
        let inner_txn_params%0%%Note_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field Note) inner_txn_params%0%%param_Note_idx_0#0)
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L68
        itxn_submit
        let txn1#0: itxn_group_idx = itxn_group_idx(1)
        let txn1._is_last#0: bool = 1u
        let txn1.Sender#0: account = itxn[txn1#0].Sender
        let txn1.Fee#0: uint64 = itxn[txn1#0].Fee
        let txn1.FirstValid#0: uint64 = itxn[txn1#0].FirstValid
        let txn1.FirstValidTime#0: uint64 = itxn[txn1#0].FirstValidTime
        let txn1.LastValid#0: uint64 = itxn[txn1#0].LastValid
        let txn1.Note#0: bytes = itxn[txn1#0].Note
        let txn1.Lease#0: bytes[32] = itxn[txn1#0].Lease
        let txn1.Receiver#0: account = itxn[txn1#0].Receiver
        let txn1.Amount#0: uint64 = itxn[txn1#0].Amount
        let txn1.CloseRemainderTo#0: account = itxn[txn1#0].CloseRemainderTo
        let txn1.VotePK#0: bytes[32] = itxn[txn1#0].VotePK
        let txn1.SelectionPK#0: bytes[32] = itxn[txn1#0].SelectionPK
        let txn1.VoteFirst#0: uint64 = itxn[txn1#0].VoteFirst
        let txn1.VoteLast#0: uint64 = itxn[txn1#0].VoteLast
        let txn1.VoteKeyDilution#0: uint64 = itxn[txn1#0].VoteKeyDilution
        let txn1.Type#0: bytes = itxn[txn1#0].Type
        let txn1.TypeEnum#0: uint64 = itxn[txn1#0].TypeEnum
        let txn1.XferAsset#0: uint64 = itxn[txn1#0].XferAsset
        let txn1.AssetAmount#0: uint64 = itxn[txn1#0].AssetAmount
        let txn1.AssetSender#0: account = itxn[txn1#0].AssetSender
        let txn1.AssetReceiver#0: account = itxn[txn1#0].AssetReceiver
        let txn1.AssetCloseTo#0: account = itxn[txn1#0].AssetCloseTo
        let txn1.GroupIndex#0: uint64 = itxn[txn1#0].GroupIndex
        let txn1.TxID#0: bytes[32] = itxn[txn1#0].TxID
        let txn1.ApplicationID#0: uint64 = itxn[txn1#0].ApplicationID
        let txn1.OnCompletion#0: uint64 = itxn[txn1#0].OnCompletion
        let txn1.NumAppArgs#0: uint64 = itxn[txn1#0].NumAppArgs
        let txn1.NumAccounts#0: uint64 = itxn[txn1#0].NumAccounts
        let txn1.ApprovalProgram#0: bytes = itxn[txn1#0].ApprovalProgram
        let txn1.ClearStateProgram#0: bytes = itxn[txn1#0].ClearStateProgram
        let txn1.RekeyTo#0: account = itxn[txn1#0].RekeyTo
        let txn1.ConfigAsset#0: uint64 = itxn[txn1#0].ConfigAsset
        let txn1.ConfigAssetTotal#0: uint64 = itxn[txn1#0].ConfigAssetTotal
        let txn1.ConfigAssetDecimals#0: uint64 = itxn[txn1#0].ConfigAssetDecimals
        let txn1.ConfigAssetDefaultFrozen#0: bool = itxn[txn1#0].ConfigAssetDefaultFrozen
        let txn1.ConfigAssetUnitName#0: bytes = itxn[txn1#0].ConfigAssetUnitName
        let txn1.ConfigAssetName#0: bytes = itxn[txn1#0].ConfigAssetName
        let txn1.ConfigAssetURL#0: bytes = itxn[txn1#0].ConfigAssetURL
        let txn1.ConfigAssetMetadataHash#0: bytes[32] = itxn[txn1#0].ConfigAssetMetadataHash
        let txn1.ConfigAssetManager#0: account = itxn[txn1#0].ConfigAssetManager
        let txn1.ConfigAssetReserve#0: account = itxn[txn1#0].ConfigAssetReserve
        let txn1.ConfigAssetFreeze#0: account = itxn[txn1#0].ConfigAssetFreeze
        let txn1.ConfigAssetClawback#0: account = itxn[txn1#0].ConfigAssetClawback
        let txn1.FreezeAsset#0: uint64 = itxn[txn1#0].FreezeAsset
        let txn1.FreezeAssetAccount#0: account = itxn[txn1#0].FreezeAssetAccount
        let txn1.FreezeAssetFrozen#0: bool = itxn[txn1#0].FreezeAssetFrozen
        let txn1.NumAssets#0: uint64 = itxn[txn1#0].NumAssets
        let txn1.NumApplications#0: uint64 = itxn[txn1#0].NumApplications
        let txn1.GlobalNumUint#0: uint64 = itxn[txn1#0].GlobalNumUint
        let txn1.GlobalNumByteSlice#0: uint64 = itxn[txn1#0].GlobalNumByteSlice
        let txn1.LocalNumUint#0: uint64 = itxn[txn1#0].LocalNumUint
        let txn1.LocalNumByteSlice#0: uint64 = itxn[txn1#0].LocalNumByteSlice
        let txn1.ExtraProgramPages#0: uint64 = itxn[txn1#0].ExtraProgramPages
        let txn1.Nonparticipation#0: bool = itxn[txn1#0].Nonparticipation
        let txn1.NumLogs#0: uint64 = itxn[txn1#0].NumLogs
        let txn1.CreatedAssetID#0: uint64 = itxn[txn1#0].CreatedAssetID
        let txn1.CreatedApplicationID#0: uint64 = itxn[txn1#0].CreatedApplicationID
        let txn1.LastLog#0: bytes = itxn[txn1#0].LastLog
        let txn1.StateProofPK#0: bytes = itxn[txn1#0].StateProofPK
        let txn1.NumApprovalProgramPages#0: uint64 = itxn[txn1#0].NumApprovalProgramPages
        let txn1.NumClearStateProgramPages#0: uint64 = itxn[txn1#0].NumClearStateProgramPages
        let tmp%2#0: bool = (== txn1.Note#0 0x31)
        (assert tmp%2#0)
        let txn1_copy1#0: itxn_group_idx = txn1#0
        let txn1_copy1.Sender#0: account = txn1.Sender#0
        let txn1_copy1.Fee#0: uint64 = txn1.Fee#0
        let txn1_copy1.FirstValid#0: uint64 = txn1.FirstValid#0
        let txn1_copy1.FirstValidTime#0: uint64 = txn1.FirstValidTime#0
        let txn1_copy1.LastValid#0: uint64 = txn1.LastValid#0
        let txn1_copy1.Note#0: bytes = txn1.Note#0
        let txn1_copy1.Lease#0: bytes[32] = txn1.Lease#0
        let txn1_copy1.Receiver#0: account = txn1.Receiver#0
        let txn1_copy1.Amount#0: uint64 = txn1.Amount#0
        let txn1_copy1.CloseRemainderTo#0: account = txn1.CloseRemainderTo#0
        let txn1_copy1.VotePK#0: bytes[32] = txn1.VotePK#0
        let txn1_copy1.SelectionPK#0: bytes[32] = txn1.SelectionPK#0
        let txn1_copy1.VoteFirst#0: uint64 = txn1.VoteFirst#0
        let txn1_copy1.VoteLast#0: uint64 = txn1.VoteLast#0
        let txn1_copy1.VoteKeyDilution#0: uint64 = txn1.VoteKeyDilution#0
        let txn1_copy1.Type#0: bytes = txn1.Type#0
        let txn1_copy1.TypeEnum#0: uint64 = txn1.TypeEnum#0
        let txn1_copy1.XferAsset#0: uint64 = txn1.XferAsset#0
        let txn1_copy1.AssetAmount#0: uint64 = txn1.AssetAmount#0
        let txn1_copy1.AssetSender#0: account = txn1.AssetSender#0
        let txn1_copy1.AssetReceiver#0: account = txn1.AssetReceiver#0
        let txn1_copy1.AssetCloseTo#0: account = txn1.AssetCloseTo#0
        let txn1_copy1.GroupIndex#0: uint64 = txn1.GroupIndex#0
        let txn1_copy1.TxID#0: bytes[32] = txn1.TxID#0
        let txn1_copy1.ApplicationID#0: uint64 = txn1.ApplicationID#0
        let txn1_copy1.OnCompletion#0: uint64 = txn1.OnCompletion#0
        let txn1_copy1.NumAppArgs#0: uint64 = txn1.NumAppArgs#0
        let txn1_copy1.NumAccounts#0: uint64 = txn1.NumAccounts#0
        let txn1_copy1.ApprovalProgram#0: bytes = txn1.ApprovalProgram#0
        let txn1_copy1.ClearStateProgram#0: bytes = txn1.ClearStateProgram#0
        let txn1_copy1.RekeyTo#0: account = txn1.RekeyTo#0
        let txn1_copy1.ConfigAsset#0: uint64 = txn1.ConfigAsset#0
        let txn1_copy1.ConfigAssetTotal#0: uint64 = txn1.ConfigAssetTotal#0
        let txn1_copy1.ConfigAssetDecimals#0: uint64 = txn1.ConfigAssetDecimals#0
        let txn1_copy1.ConfigAssetDefaultFrozen#0: bool = txn1.ConfigAssetDefaultFrozen#0
        let txn1_copy1.ConfigAssetUnitName#0: bytes = txn1.ConfigAssetUnitName#0
        let txn1_copy1.ConfigAssetName#0: bytes = txn1.ConfigAssetName#0
        let txn1_copy1.ConfigAssetURL#0: bytes = txn1.ConfigAssetURL#0
        let txn1_copy1.ConfigAssetMetadataHash#0: bytes[32] = txn1.ConfigAssetMetadataHash#0
        let txn1_copy1.ConfigAssetManager#0: account = txn1.ConfigAssetManager#0
        let txn1_copy1.ConfigAssetReserve#0: account = txn1.ConfigAssetReserve#0
        let txn1_copy1.ConfigAssetFreeze#0: account = txn1.ConfigAssetFreeze#0
        let txn1_copy1.ConfigAssetClawback#0: account = txn1.ConfigAssetClawback#0
        let txn1_copy1.FreezeAsset#0: uint64 = txn1.FreezeAsset#0
        let txn1_copy1.FreezeAssetAccount#0: account = txn1.FreezeAssetAccount#0
        let txn1_copy1.FreezeAssetFrozen#0: bool = txn1.FreezeAssetFrozen#0
        let txn1_copy1.NumAssets#0: uint64 = txn1.NumAssets#0
        let txn1_copy1.NumApplications#0: uint64 = txn1.NumApplications#0
        let txn1_copy1.GlobalNumUint#0: uint64 = txn1.GlobalNumUint#0
        let txn1_copy1.GlobalNumByteSlice#0: uint64 = txn1.GlobalNumByteSlice#0
        let txn1_copy1.LocalNumUint#0: uint64 = txn1.LocalNumUint#0
        let txn1_copy1.LocalNumByteSlice#0: uint64 = txn1.LocalNumByteSlice#0
        let txn1_copy1.ExtraProgramPages#0: uint64 = txn1.ExtraProgramPages#0
        let txn1_copy1.Nonparticipation#0: bool = txn1.Nonparticipation#0
        let txn1_copy1.NumLogs#0: uint64 = txn1.NumLogs#0
        let txn1_copy1.CreatedAssetID#0: uint64 = txn1.CreatedAssetID#0
        let txn1_copy1.CreatedApplicationID#0: uint64 = txn1.CreatedApplicationID#0
        let txn1_copy1.LastLog#0: bytes = txn1.LastLog#0
        let txn1_copy1.StateProofPK#0: bytes = txn1.StateProofPK#0
        let txn1_copy1.NumApprovalProgramPages#0: uint64 = txn1.NumApprovalProgramPages#0
        let txn1_copy1.NumClearStateProgramPages#0: uint64 = txn1.NumClearStateProgramPages#0
        let tmp%3#0: bool = (== txn1_copy1.Note#0 txn1.Note#0)
        (assert tmp%3#0)
        let tmp%4#0: uint64 = (gitxn 0 CreatedAssetID)
        let asset_id#0: uint64 = tmp%4#0
        let reinterpret_bool%0#0: bool = asset_id#0
        (assert reinterpret_bool%0#0) // expected asset to be created
        return 

subroutine test_cases.typed_abi_call_txn.caller.Caller.__algopy_default_create() -> void:
    block@0: // L1
        return 