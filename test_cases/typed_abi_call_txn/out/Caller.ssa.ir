contract test_cases.typed_abi_call_txn.caller.Caller:
    program approval:
        subroutine algopy.arc4.ARC4Contract.approval_program() -> bool:
            block@0: // L1
                let tmp%0#0: bool = test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__()
                return tmp%0#0
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__() -> bool:
            block@0: // L12
                let tmp%0#0: uint64 = (txn NumAppArgs)
                let tmp%1#0: bool = (!= tmp%0#0 0u)
                goto tmp%1#0 ? block@1 : block@6
            block@1: // abi_routing_L12
                let tmp%2#0: bytes = (txna ApplicationArgs 0)
                switch tmp%2#0 {method "test_call_with_txn(byte[],byte[],application)void" => block@2, method "test_call_with_acfg(byte[],byte[],application)void" => block@3, * => block@4}
            block@2: // test_call_with_txn_route_L13
                let tmp%3#0: uint64 = (txn OnCompletion)
                let tmp%4#0: bool = (== tmp%3#0 NoOp)
                (assert tmp%4#0) // OnCompletion is NoOp
                let tmp%5#0: uint64 = (txn ApplicationID)
                let tmp%6#0: bool = (!= tmp%5#0 0u)
                (assert tmp%6#0) // is not creating
                let tmp%7#0: bytes = (txna ApplicationArgs 1)
                let tmp%8#0: bytes = ((extract 2 0) tmp%7#0)
                let tmp%9#0: bytes = (txna ApplicationArgs 2)
                let tmp%10#0: bytes = ((extract 2 0) tmp%9#0)
                let tmp%11#0: bytes = (txna ApplicationArgs 3)
                let tmp%12#0: uint64 = (btoi tmp%11#0)
                let tmp%13#0: uint64 = ((txnas Applications) tmp%12#0)
                test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(tmp%8#0, tmp%10#0, tmp%13#0)
                return 1u
            block@3: // test_call_with_acfg_route_L29
                let tmp%14#0: uint64 = (txn OnCompletion)
                let tmp%15#0: bool = (== tmp%14#0 NoOp)
                (assert tmp%15#0) // OnCompletion is NoOp
                let tmp%16#0: uint64 = (txn ApplicationID)
                let tmp%17#0: bool = (!= tmp%16#0 0u)
                (assert tmp%17#0) // is not creating
                let tmp%18#0: bytes = (txna ApplicationArgs 1)
                let tmp%19#0: bytes = ((extract 2 0) tmp%18#0)
                let tmp%20#0: bytes = (txna ApplicationArgs 2)
                let tmp%21#0: bytes = ((extract 2 0) tmp%20#0)
                let tmp%22#0: bytes = (txna ApplicationArgs 3)
                let tmp%23#0: uint64 = (btoi tmp%22#0)
                let tmp%24#0: uint64 = ((txnas Applications) tmp%23#0)
                test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(tmp%19#0, tmp%21#0, tmp%24#0)
                return 1u
            block@4: // switch_case_default_L12
                goto block@5
            block@5: // switch_case_next_L12
                goto block@10
            block@6: // bare_routing_L12
                let tmp%25#0: uint64 = (txn OnCompletion)
                switch tmp%25#0 {0u => block@7, * => block@8}
            block@7: // __algopy_default_create_L12
                let tmp%26#0: uint64 = (txn ApplicationID)
                let tmp%27#0: bool = (== tmp%26#0 0u)
                (assert tmp%27#0) // is creating
                test_cases.typed_abi_call_txn.caller.Caller.__algopy_default_create()
                return 1u
            block@8: // switch_case_default_L12
                goto block@9
            block@9: // switch_case_next_L12
                goto block@10
            block@10: // after_if_else_L12
                return 0u
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(a: bytes, b: bytes, app: uint64) -> void:
            block@0: // L13
                let txn#0: itxn_field_set = itxn_field_set(0)
                let txn%%param_Fee_idx_0#0: uint64 = 0u
                let txn%%Fee_length#0: uint64 = 1u
                let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
                let txn%%TypeEnum_length#0: uint64 = 1u
                let txn%%param_ConfigAssetUnitName_idx_0#0: bytes = "TST"
                let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetName_idx_0#0: bytes = "TEST"
                let txn%%ConfigAssetName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
                let txn%%ConfigAssetTotal_length#0: uint64 = 1u
                let txn%%Sender_length#0: uint64 = 0u
                let txn%%Note_length#0: uint64 = 0u
                let txn%%Receiver_length#0: uint64 = 0u
                let txn%%Amount_length#0: uint64 = 0u
                let txn%%CloseRemainderTo_length#0: uint64 = 0u
                let txn%%VotePK_length#0: uint64 = 0u
                let txn%%SelectionPK_length#0: uint64 = 0u
                let txn%%VoteFirst_length#0: uint64 = 0u
                let txn%%VoteLast_length#0: uint64 = 0u
                let txn%%VoteKeyDilution_length#0: uint64 = 0u
                let txn%%Type_length#0: uint64 = 0u
                let txn%%XferAsset_length#0: uint64 = 0u
                let txn%%AssetAmount_length#0: uint64 = 0u
                let txn%%AssetSender_length#0: uint64 = 0u
                let txn%%AssetReceiver_length#0: uint64 = 0u
                let txn%%AssetCloseTo_length#0: uint64 = 0u
                let txn%%ApplicationID_length#0: uint64 = 0u
                let txn%%OnCompletion_length#0: uint64 = 0u
                let txn%%ApprovalProgram_length#0: uint64 = 0u
                let txn%%ClearStateProgram_length#0: uint64 = 0u
                let txn%%RekeyTo_length#0: uint64 = 0u
                let txn%%ConfigAsset_length#0: uint64 = 0u
                let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
                let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let txn%%ConfigAssetURL_length#0: uint64 = 0u
                let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let txn%%ConfigAssetManager_length#0: uint64 = 0u
                let txn%%ConfigAssetReserve_length#0: uint64 = 0u
                let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
                let txn%%ConfigAssetClawback_length#0: uint64 = 0u
                let txn%%FreezeAsset_length#0: uint64 = 0u
                let txn%%FreezeAssetAccount_length#0: uint64 = 0u
                let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
                let txn%%GlobalNumUint_length#0: uint64 = 0u
                let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
                let txn%%LocalNumUint_length#0: uint64 = 0u
                let txn%%LocalNumByteSlice_length#0: uint64 = 0u
                let txn%%ExtraProgramPages_length#0: uint64 = 0u
                let txn%%Nonparticipation_length#0: uint64 = 0u
                let txn%%StateProofPK_length#0: uint64 = 0u
                let txn%%ApplicationArgs_length#0: uint64 = 0u
                let txn%%Accounts_length#0: uint64 = 0u
                let txn%%Assets_length#0: uint64 = 0u
                let txn%%Applications_length#0: uint64 = 0u
                let txn%%ApprovalProgramPages_length#0: uint64 = 0u
                let txn%%ClearStateProgramPages_length#0: uint64 = 0u
                itxn_begin
                ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) txn%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L23
                itxn_next
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let length%0#0: uint64 = (len a#0)
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 a#0)
                let length%1#0: uint64 = (len b#0)
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 b#0)
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "call_with_txn(byte[],txn,byte[])uint64"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%1#0
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L20
                itxn_submit
                let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%0#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%0#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                (assert tmp%2#0) // ARC4 prefix is valid
                let asset_id#0: uint64 = (btoi tmp%0#0)
                let _txn#0: itxn_group_idx = itxn_group_idx(1)
                let _txn._is_last#0: bool = 1u
                let _txn.Sender#0: bytes = itxn[_txn#0].Sender
                let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
                let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
                let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
                let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
                let _txn.Note#0: bytes = itxn[_txn#0].Note
                let _txn.Lease#0: bytes = itxn[_txn#0].Lease
                let _txn.Receiver#0: bytes = itxn[_txn#0].Receiver
                let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
                let _txn.CloseRemainderTo#0: bytes = itxn[_txn#0].CloseRemainderTo
                let _txn.VotePK#0: bytes = itxn[_txn#0].VotePK
                let _txn.SelectionPK#0: bytes = itxn[_txn#0].SelectionPK
                let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
                let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
                let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
                let _txn.Type#0: bytes = itxn[_txn#0].Type
                let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
                let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
                let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
                let _txn.AssetSender#0: bytes = itxn[_txn#0].AssetSender
                let _txn.AssetReceiver#0: bytes = itxn[_txn#0].AssetReceiver
                let _txn.AssetCloseTo#0: bytes = itxn[_txn#0].AssetCloseTo
                let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
                let _txn.TxID#0: bytes = itxn[_txn#0].TxID
                let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
                let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
                let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
                let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
                let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
                let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
                let _txn.RekeyTo#0: bytes = itxn[_txn#0].RekeyTo
                let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
                let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
                let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
                let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#0: bytes = itxn[_txn#0].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#0: bytes = itxn[_txn#0].ConfigAssetManager
                let _txn.ConfigAssetReserve#0: bytes = itxn[_txn#0].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#0: bytes = itxn[_txn#0].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#0: bytes = itxn[_txn#0].ConfigAssetClawback
                let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
                let _txn.FreezeAssetAccount#0: bytes = itxn[_txn#0].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
                let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
                let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
                let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
                let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
                let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
                let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
                let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
                let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
                let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
                let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
                let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
                let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
                let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
                let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
                let tmp%3#0: bool = (!= asset_id#0 0u)
                (assert tmp%3#0) // expected asset id
                return 
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(a: bytes, b: bytes, app: uint64) -> void:
            block@0: // L29
                let txn#0: itxn_field_set = itxn_field_set(0)
                let txn%%param_Fee_idx_0#0: uint64 = 0u
                let txn%%Fee_length#0: uint64 = 1u
                let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
                let txn%%TypeEnum_length#0: uint64 = 1u
                let txn%%param_ConfigAssetUnitName_idx_0#0: bytes = "TST"
                let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetName_idx_0#0: bytes = "TEST"
                let txn%%ConfigAssetName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
                let txn%%ConfigAssetTotal_length#0: uint64 = 1u
                let txn%%Sender_length#0: uint64 = 0u
                let txn%%Note_length#0: uint64 = 0u
                let txn%%Receiver_length#0: uint64 = 0u
                let txn%%Amount_length#0: uint64 = 0u
                let txn%%CloseRemainderTo_length#0: uint64 = 0u
                let txn%%VotePK_length#0: uint64 = 0u
                let txn%%SelectionPK_length#0: uint64 = 0u
                let txn%%VoteFirst_length#0: uint64 = 0u
                let txn%%VoteLast_length#0: uint64 = 0u
                let txn%%VoteKeyDilution_length#0: uint64 = 0u
                let txn%%Type_length#0: uint64 = 0u
                let txn%%XferAsset_length#0: uint64 = 0u
                let txn%%AssetAmount_length#0: uint64 = 0u
                let txn%%AssetSender_length#0: uint64 = 0u
                let txn%%AssetReceiver_length#0: uint64 = 0u
                let txn%%AssetCloseTo_length#0: uint64 = 0u
                let txn%%ApplicationID_length#0: uint64 = 0u
                let txn%%OnCompletion_length#0: uint64 = 0u
                let txn%%ApprovalProgram_length#0: uint64 = 0u
                let txn%%ClearStateProgram_length#0: uint64 = 0u
                let txn%%RekeyTo_length#0: uint64 = 0u
                let txn%%ConfigAsset_length#0: uint64 = 0u
                let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
                let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let txn%%ConfigAssetURL_length#0: uint64 = 0u
                let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let txn%%ConfigAssetManager_length#0: uint64 = 0u
                let txn%%ConfigAssetReserve_length#0: uint64 = 0u
                let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
                let txn%%ConfigAssetClawback_length#0: uint64 = 0u
                let txn%%FreezeAsset_length#0: uint64 = 0u
                let txn%%FreezeAssetAccount_length#0: uint64 = 0u
                let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
                let txn%%GlobalNumUint_length#0: uint64 = 0u
                let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
                let txn%%LocalNumUint_length#0: uint64 = 0u
                let txn%%LocalNumByteSlice_length#0: uint64 = 0u
                let txn%%ExtraProgramPages_length#0: uint64 = 0u
                let txn%%Nonparticipation_length#0: uint64 = 0u
                let txn%%StateProofPK_length#0: uint64 = 0u
                let txn%%ApplicationArgs_length#0: uint64 = 0u
                let txn%%Accounts_length#0: uint64 = 0u
                let txn%%Assets_length#0: uint64 = 0u
                let txn%%Applications_length#0: uint64 = 0u
                let txn%%ApprovalProgramPages_length#0: uint64 = 0u
                let txn%%ClearStateProgramPages_length#0: uint64 = 0u
                itxn_begin
                ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) txn%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L39
                itxn_next
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let length%0#0: uint64 = (len a#0)
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 a#0)
                let length%1#0: uint64 = (len b#0)
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 b#0)
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "call_with_acfg(byte[],acfg,byte[])uint64"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%1#0
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L36
                itxn_submit
                let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%0#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%0#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                (assert tmp%2#0) // ARC4 prefix is valid
                let tmp%3#0: uint64 = (btoi tmp%0#0)
                return 
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.__algopy_default_create() -> void:
            block@0: // L12
                return 
    
    program clear-state:
        subroutine algopy.arc4.ARC4Contract.clear_state_program() -> bool:
            block@0: // L1
                return 1u