contract test_cases.typed_abi_call_txn.caller.Caller:
    program approval:
        subroutine algopy.arc4.ARC4Contract.approval_program() -> bool:
            block@0: // L-1
                let tmp%0#0: bool = test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__()
                return tmp%0#0
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.__puya_arc4_router__() -> bool:
            block@0: // L12
                let tmp%0#0: uint64 = (txn NumAppArgs)
                let tmp%1#0: bool = (!= tmp%0#0 0u)
                goto tmp%1#0 ? block@1 : block@6
            block@1: // abi_routing_L12
                let tmp%2#0: bytes = (txna ApplicationArgs 0)
                switch tmp%2#0 {method "test_call_with_txn(byte[],byte[],application)void" => block@2, method "test_call_with_acfg(byte[],byte[],application)void" => block@3, * => block@4}
            block@2: // test_call_with_txn_route_L13
                let tmp%3#0: uint64 = (txn OnCompletion)
                let tmp%4#0: bool = (== tmp%3#0 NoOp)
                (assert tmp%4#0) // OnCompletion is NoOp
                let tmp%5#0: uint64 = (txn ApplicationID)
                let tmp%6#0: bool = (!= tmp%5#0 0u)
                (assert tmp%6#0) // is not creating
                let tmp%7#0: bytes = (txna ApplicationArgs 1)
                let tmp%8#0: bytes = ((extract 2 0) tmp%7#0)
                let tmp%9#0: bytes = (txna ApplicationArgs 2)
                let tmp%10#0: bytes = ((extract 2 0) tmp%9#0)
                let tmp%11#0: bytes = (txna ApplicationArgs 3)
                let tmp%12#0: uint64 = (btoi tmp%11#0)
                let tmp%13#0: uint64 = ((txnas Applications) tmp%12#0)
                test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(tmp%8#0, tmp%10#0, tmp%13#0)
                return 1u
            block@3: // test_call_with_acfg_route_L28
                let tmp%14#0: uint64 = (txn OnCompletion)
                let tmp%15#0: bool = (== tmp%14#0 NoOp)
                (assert tmp%15#0) // OnCompletion is NoOp
                let tmp%16#0: uint64 = (txn ApplicationID)
                let tmp%17#0: bool = (!= tmp%16#0 0u)
                (assert tmp%17#0) // is not creating
                let tmp%18#0: bytes = (txna ApplicationArgs 1)
                let tmp%19#0: bytes = ((extract 2 0) tmp%18#0)
                let tmp%20#0: bytes = (txna ApplicationArgs 2)
                let tmp%21#0: bytes = ((extract 2 0) tmp%20#0)
                let tmp%22#0: bytes = (txna ApplicationArgs 3)
                let tmp%23#0: uint64 = (btoi tmp%22#0)
                let tmp%24#0: uint64 = ((txnas Applications) tmp%23#0)
                test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(tmp%19#0, tmp%21#0, tmp%24#0)
                return 1u
            block@4: // switch_case_default_L12
                goto block@5
            block@5: // switch_case_next_L12
                goto block@10
            block@6: // bare_routing_L12
                let tmp%25#0: uint64 = (txn OnCompletion)
                switch tmp%25#0 {0u => block@7, * => block@8}
            block@7: // __algopy_default_create_L12
                let tmp%26#0: uint64 = (txn ApplicationID)
                let tmp%27#0: bool = (== tmp%26#0 0u)
                (assert tmp%27#0) // is creating
                test_cases.typed_abi_call_txn.caller.Caller.__algopy_default_create()
                return 1u
            block@8: // switch_case_default_L12
                goto block@9
            block@9: // switch_case_next_L12
                goto block@10
            block@10: // after_if_else_L12
                return 0u
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_txn(a: bytes, b: bytes, app: uint64) -> void:
            block@0: // L13
                let txn#0: itxn_field_set = itxn_field_set(0)
                let txn%%param_Fee_idx_0#0: uint64 = 0u
                let txn%%Fee_length#0: uint64 = 1u
                let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
                let txn%%TypeEnum_length#0: uint64 = 1u
                let txn%%param_ConfigAssetUnitName_idx_0#0: bytes = "TST"
                let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetName_idx_0#0: bytes = "TEST"
                let txn%%ConfigAssetName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
                let txn%%ConfigAssetTotal_length#0: uint64 = 1u
                let txn%%Sender_length#0: uint64 = 0u
                let txn%%Note_length#0: uint64 = 0u
                let txn%%Receiver_length#0: uint64 = 0u
                let txn%%Amount_length#0: uint64 = 0u
                let txn%%CloseRemainderTo_length#0: uint64 = 0u
                let txn%%VotePK_length#0: uint64 = 0u
                let txn%%SelectionPK_length#0: uint64 = 0u
                let txn%%VoteFirst_length#0: uint64 = 0u
                let txn%%VoteLast_length#0: uint64 = 0u
                let txn%%VoteKeyDilution_length#0: uint64 = 0u
                let txn%%Type_length#0: uint64 = 0u
                let txn%%XferAsset_length#0: uint64 = 0u
                let txn%%AssetAmount_length#0: uint64 = 0u
                let txn%%AssetSender_length#0: uint64 = 0u
                let txn%%AssetReceiver_length#0: uint64 = 0u
                let txn%%AssetCloseTo_length#0: uint64 = 0u
                let txn%%ApplicationID_length#0: uint64 = 0u
                let txn%%OnCompletion_length#0: uint64 = 0u
                let txn%%ApprovalProgram_length#0: uint64 = 0u
                let txn%%ClearStateProgram_length#0: uint64 = 0u
                let txn%%RekeyTo_length#0: uint64 = 0u
                let txn%%ConfigAsset_length#0: uint64 = 0u
                let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
                let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let txn%%ConfigAssetURL_length#0: uint64 = 0u
                let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let txn%%ConfigAssetManager_length#0: uint64 = 0u
                let txn%%ConfigAssetReserve_length#0: uint64 = 0u
                let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
                let txn%%ConfigAssetClawback_length#0: uint64 = 0u
                let txn%%FreezeAsset_length#0: uint64 = 0u
                let txn%%FreezeAssetAccount_length#0: uint64 = 0u
                let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
                let txn%%GlobalNumUint_length#0: uint64 = 0u
                let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
                let txn%%LocalNumUint_length#0: uint64 = 0u
                let txn%%LocalNumByteSlice_length#0: uint64 = 0u
                let txn%%ExtraProgramPages_length#0: uint64 = 0u
                let txn%%Nonparticipation_length#0: uint64 = 0u
                let txn%%StateProofPK_length#0: uint64 = 0u
                let txn%%ApplicationArgs_length#0: uint64 = 0u
                let txn%%Accounts_length#0: uint64 = 0u
                let txn%%Assets_length#0: uint64 = 0u
                let txn%%Applications_length#0: uint64 = 0u
                let txn%%ApprovalProgramPages_length#0: uint64 = 0u
                let txn%%ClearStateProgramPages_length#0: uint64 = 0u
                itxn_begin
                ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) txn%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L23
                itxn_next
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let length%0#0: uint64 = (len a#0)
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 a#0)
                let length%1#0: uint64 = (len b#0)
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 b#0)
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "call_with_txn(byte[],txn,byte[])uint64"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%1#0
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L20
                itxn_submit
                let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%0#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%0#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                (assert tmp%2#0) // ARC4 prefix is valid
                let tmp%3#0: uint64 = (btoi tmp%0#0)
                return 
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.test_call_with_acfg(a: bytes, b: bytes, app: uint64) -> void:
            block@0: // L28
                let txn#0: itxn_field_set = itxn_field_set(0)
                let txn%%param_Fee_idx_0#0: uint64 = 0u
                let txn%%Fee_length#0: uint64 = 1u
                let txn%%param_TypeEnum_idx_0#0: uint64 = acfg
                let txn%%TypeEnum_length#0: uint64 = 1u
                let txn%%param_ConfigAssetUnitName_idx_0#0: bytes = "TST"
                let txn%%ConfigAssetUnitName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetName_idx_0#0: bytes = "TEST"
                let txn%%ConfigAssetName_length#0: uint64 = 1u
                let txn%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
                let txn%%ConfigAssetTotal_length#0: uint64 = 1u
                let txn%%Sender_length#0: uint64 = 0u
                let txn%%Note_length#0: uint64 = 0u
                let txn%%Receiver_length#0: uint64 = 0u
                let txn%%Amount_length#0: uint64 = 0u
                let txn%%CloseRemainderTo_length#0: uint64 = 0u
                let txn%%VotePK_length#0: uint64 = 0u
                let txn%%SelectionPK_length#0: uint64 = 0u
                let txn%%VoteFirst_length#0: uint64 = 0u
                let txn%%VoteLast_length#0: uint64 = 0u
                let txn%%VoteKeyDilution_length#0: uint64 = 0u
                let txn%%Type_length#0: uint64 = 0u
                let txn%%XferAsset_length#0: uint64 = 0u
                let txn%%AssetAmount_length#0: uint64 = 0u
                let txn%%AssetSender_length#0: uint64 = 0u
                let txn%%AssetReceiver_length#0: uint64 = 0u
                let txn%%AssetCloseTo_length#0: uint64 = 0u
                let txn%%ApplicationID_length#0: uint64 = 0u
                let txn%%OnCompletion_length#0: uint64 = 0u
                let txn%%ApprovalProgram_length#0: uint64 = 0u
                let txn%%ClearStateProgram_length#0: uint64 = 0u
                let txn%%RekeyTo_length#0: uint64 = 0u
                let txn%%ConfigAsset_length#0: uint64 = 0u
                let txn%%ConfigAssetDecimals_length#0: uint64 = 0u
                let txn%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let txn%%ConfigAssetURL_length#0: uint64 = 0u
                let txn%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let txn%%ConfigAssetManager_length#0: uint64 = 0u
                let txn%%ConfigAssetReserve_length#0: uint64 = 0u
                let txn%%ConfigAssetFreeze_length#0: uint64 = 0u
                let txn%%ConfigAssetClawback_length#0: uint64 = 0u
                let txn%%FreezeAsset_length#0: uint64 = 0u
                let txn%%FreezeAssetAccount_length#0: uint64 = 0u
                let txn%%FreezeAssetFrozen_length#0: uint64 = 0u
                let txn%%GlobalNumUint_length#0: uint64 = 0u
                let txn%%GlobalNumByteSlice_length#0: uint64 = 0u
                let txn%%LocalNumUint_length#0: uint64 = 0u
                let txn%%LocalNumByteSlice_length#0: uint64 = 0u
                let txn%%ExtraProgramPages_length#0: uint64 = 0u
                let txn%%Nonparticipation_length#0: uint64 = 0u
                let txn%%StateProofPK_length#0: uint64 = 0u
                let txn%%ApplicationArgs_length#0: uint64 = 0u
                let txn%%Accounts_length#0: uint64 = 0u
                let txn%%Assets_length#0: uint64 = 0u
                let txn%%Applications_length#0: uint64 = 0u
                let txn%%ApprovalProgramPages_length#0: uint64 = 0u
                let txn%%ClearStateProgramPages_length#0: uint64 = 0u
                itxn_begin
                ((itxn_field ConfigAssetTotal) txn%%param_ConfigAssetTotal_idx_0#0)
                ((itxn_field ConfigAssetName) txn%%param_ConfigAssetName_idx_0#0)
                ((itxn_field ConfigAssetUnitName) txn%%param_ConfigAssetUnitName_idx_0#0)
                ((itxn_field TypeEnum) txn%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) txn%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L38
                itxn_next
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let length%0#0: uint64 = (len a#0)
                let as_bytes%0#0: bytes = (itob length%0#0)
                let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
                let encoded_value%0#0: bytes = (concat length_uint16%0#0 a#0)
                let length%1#0: uint64 = (len b#0)
                let as_bytes%1#0: bytes = (itob length%1#0)
                let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
                let encoded_value%1#0: bytes = (concat length_uint16%1#0 b#0)
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "call_with_acfg(byte[],acfg,byte[])uint64"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%0#0
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%1#0
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 3u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L35
                itxn_submit
                let awst_tmp%0#0: bytes = itxn[itxn_group_idx(1)].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%0#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%0#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                (assert tmp%2#0) // ARC4 prefix is valid
                let tmp%3#0: uint64 = (btoi tmp%0#0)
                return 
        
        subroutine test_cases.typed_abi_call_txn.caller.Caller.__algopy_default_create() -> void:
            block@0: // L12
                return 
    
    program clear-state:
        subroutine algopy.arc4.ARC4Contract.clear_state_program() -> bool:
            block@0: // L-1
                return 1u