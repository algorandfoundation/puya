{
    "hints": {
        "call_with_txn(byte[],txn,byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "call_with_acfg(byte[],acfg,byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "call_with_acfg_no_return(byte[],acfg,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLnR5cGVkX2FiaV9jYWxsX3R4bi50eG5fY29udHJhY3QuVHhuQ29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "TxnContract",
        "methods": [
            {
                "name": "call_with_txn",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "txn",
                        "name": "acfg"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "call_with_acfg",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "acfg",
                        "name": "acfg"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "call_with_acfg_no_return",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "acfg",
                        "name": "acfg"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}