{
    "hints": {
        "call_with_txn(byte[],txn,byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "call_with_acfg(byte[],acfg,byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "call_with_acfg_no_return(byte[],acfg,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDMKICAgIGJ5dGVjYmxvY2sgMHg2MSAweDYyIDB4MTUxZjdjNzUKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MTEKICAgIC8vIGNsYXNzIFR4bkNvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdAOAogICAgcHVzaGJ5dGVzcyAweGExZjUwNDBkIDB4NmQ0NzAwYWQgMHhjODQwMDc3ZCAvLyBtZXRob2QgImNhbGxfd2l0aF90eG4oYnl0ZVtdLHR4bixieXRlW10pdWludDY0IiwgbWV0aG9kICJjYWxsX3dpdGhfYWNmZyhieXRlW10sYWNmZyxieXRlW10pdWludDY0IiwgbWV0aG9kICJjYWxsX3dpdGhfYWNmZ19ub19yZXR1cm4oYnl0ZVtdLGFjZmcsYnl0ZVtdKXZvaWQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2NhbGxfd2l0aF90eG5fcm91dGVAMyBtYWluX2NhbGxfd2l0aF9hY2ZnX3JvdXRlQDQgbWFpbl9jYWxsX3dpdGhfYWNmZ19ub19yZXR1cm5fcm91dGVANQoKbWFpbl9hZnRlcl9pZl9lbHNlQDEyOgogICAgZXJyCgptYWluX2NhbGxfd2l0aF9hY2ZnX25vX3JldHVybl9yb3V0ZUA1OgogICAgLy8gdHlwZWRfYWJpX2NhbGxfdHhuL3R4bl9jb250cmFjdC5weToyNwogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MTEKICAgIC8vIGNsYXNzIFR4bkNvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBleHRyYWN0IDIgMAogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludGNfMCAvLyAxCiAgICAtCiAgICBkdXAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnRjXzEgLy8gYWNmZwogICAgPT0KICAgIGFzc2VydCAvLyB0cmFuc2FjdGlvbiB0eXBlIGlzIGFjZmcKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGV4dHJhY3QgMiAwCiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjI3CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGNhbGxzdWIgY2FsbF93aXRoX2FjZmdfbm9fcmV0dXJuCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2NhbGxfd2l0aF9hY2ZnX3JvdXRlQDQ6CiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjIwCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdHlwZWRfYWJpX2NhbGxfdHhuL3R4bl9jb250cmFjdC5weToxMQogICAgLy8gY2xhc3MgVHhuQ29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGV4dHJhY3QgMiAwCiAgICB0eG4gR3JvdXBJbmRleAogICAgaW50Y18wIC8vIDEKICAgIC0KICAgIGR1cAogICAgZ3R4bnMgVHlwZUVudW0KICAgIGludGNfMSAvLyBhY2ZnCiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgYWNmZwogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgZXh0cmFjdCAyIDAKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MjAKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgY2FsbHN1YiBjYWxsX3dpdGhfYWNmZwogICAgaXRvYgogICAgYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9jYWxsX3dpdGhfdHhuX3JvdXRlQDM6CiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjEyCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gdHlwZWRfYWJpX2NhbGxfdHhuL3R4bl9jb250cmFjdC5weToxMQogICAgLy8gY2xhc3MgVHhuQ29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGV4dHJhY3QgMiAwCiAgICB0eG4gR3JvdXBJbmRleAogICAgaW50Y18wIC8vIDEKICAgIC0KICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGV4dHJhY3QgMiAwCiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjEyCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGNhbGxzdWIgY2FsbF93aXRoX3R4bgogICAgaXRvYgogICAgYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdAODoKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MTEKICAgIC8vIGNsYXNzIFR4bkNvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEyCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHRlc3RfY2FzZXMudHlwZWRfYWJpX2NhbGxfdHhuLnR4bl9jb250cmFjdC5UeG5Db250cmFjdC5jYWxsX3dpdGhfdHhuKGE6IGJ5dGVzLCBhY2ZnOiB1aW50NjQsIGI6IGJ5dGVzKSAtPiB1aW50NjQ6CmNhbGxfd2l0aF90eG46CiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjEyLTEzCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIC8vIGRlZiBjYWxsX3dpdGhfdHhuKHNlbGYsIGE6IEJ5dGVzLCBhY2ZnOiBndHhuLlRyYW5zYWN0aW9uLCBiOiBCeXRlcykgLT4gVUludDY0OgogICAgcHJvdG8gMyAxCiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjE0CiAgICAvLyBhc3NlcnQgYSA9PSBiImEiLCAiYSBpcyBub3QgYSIKICAgIGZyYW1lX2RpZyAtMwogICAgYnl0ZWNfMCAvLyAweDYxCiAgICA9PQogICAgYXNzZXJ0IC8vIGEgaXMgbm90IGEKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MTUKICAgIC8vIGFzc2VydCBiID09IGIiYiIsICJiIGlzIG5vdCBiIgogICAgZnJhbWVfZGlnIC0xCiAgICBieXRlY18xIC8vIDB4NjIKICAgID09CiAgICBhc3NlcnQgLy8gYiBpcyBub3QgYgogICAgLy8gdHlwZWRfYWJpX2NhbGxfdHhuL3R4bl9jb250cmFjdC5weToxNgogICAgLy8gYXNzZXJ0IGFjZmcudHlwZSA9PSBUcmFuc2FjdGlvblR5cGUuQXNzZXRDb25maWcsICJleHBlY3RlZCBhc3NldCBjb25maWciCiAgICBmcmFtZV9kaWcgLTIKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnRjXzEgLy8gYWNmZwogICAgPT0KICAgIGFzc2VydCAvLyBleHBlY3RlZCBhc3NldCBjb25maWcKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MTcKICAgIC8vIGFzc2VydCBhY2ZnLmNyZWF0ZWRfYXNzZXQuaWQsICJleHBlY3RlZCBhc3NldCBpZCIKICAgIGZyYW1lX2RpZyAtMgogICAgZ3R4bnMgQ3JlYXRlZEFzc2V0SUQKICAgIGR1cAogICAgYXNzZXJ0IC8vIGV4cGVjdGVkIGFzc2V0IGlkCiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjE4CiAgICAvLyByZXR1cm4gYWNmZy5jcmVhdGVkX2Fzc2V0LmlkCiAgICByZXRzdWIKCgovLyB0ZXN0X2Nhc2VzLnR5cGVkX2FiaV9jYWxsX3R4bi50eG5fY29udHJhY3QuVHhuQ29udHJhY3QuY2FsbF93aXRoX2FjZmcoYTogYnl0ZXMsIGFjZmc6IHVpbnQ2NCwgYjogYnl0ZXMpIC0+IHVpbnQ2NDoKY2FsbF93aXRoX2FjZmc6CiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjIwLTIxCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIC8vIGRlZiBjYWxsX3dpdGhfYWNmZyhzZWxmLCBhOiBCeXRlcywgYWNmZzogZ3R4bi5Bc3NldENvbmZpZ1RyYW5zYWN0aW9uLCBiOiBCeXRlcykgLT4gVUludDY0OgogICAgcHJvdG8gMyAxCiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjIyCiAgICAvLyBhc3NlcnQgYSA9PSBiImEiLCAiYSBpcyBub3QgYSIKICAgIGZyYW1lX2RpZyAtMwogICAgYnl0ZWNfMCAvLyAweDYxCiAgICA9PQogICAgYXNzZXJ0IC8vIGEgaXMgbm90IGEKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MjMKICAgIC8vIGFzc2VydCBiID09IGIiYiIsICJiIGlzIG5vdCBiIgogICAgZnJhbWVfZGlnIC0xCiAgICBieXRlY18xIC8vIDB4NjIKICAgID09CiAgICBhc3NlcnQgLy8gYiBpcyBub3QgYgogICAgLy8gdHlwZWRfYWJpX2NhbGxfdHhuL3R4bl9jb250cmFjdC5weToyNAogICAgLy8gYXNzZXJ0IGFjZmcuY3JlYXRlZF9hc3NldC5pZCwgImV4cGVjdGVkIGFzc2V0IGlkIgogICAgZnJhbWVfZGlnIC0yCiAgICBndHhucyBDcmVhdGVkQXNzZXRJRAogICAgZHVwCiAgICBhc3NlcnQgLy8gZXhwZWN0ZWQgYXNzZXQgaWQKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MjUKICAgIC8vIHJldHVybiBhY2ZnLmNyZWF0ZWRfYXNzZXQuaWQKICAgIHJldHN1YgoKCi8vIHRlc3RfY2FzZXMudHlwZWRfYWJpX2NhbGxfdHhuLnR4bl9jb250cmFjdC5UeG5Db250cmFjdC5jYWxsX3dpdGhfYWNmZ19ub19yZXR1cm4oYTogYnl0ZXMsIGFjZmc6IHVpbnQ2NCwgYjogYnl0ZXMpIC0+IHZvaWQ6CmNhbGxfd2l0aF9hY2ZnX25vX3JldHVybjoKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MjctMzAKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgLy8gZGVmIGNhbGxfd2l0aF9hY2ZnX25vX3JldHVybigKICAgIC8vICAgICBzZWxmLCBhOiBCeXRlcywgYWNmZzogZ3R4bi5Bc3NldENvbmZpZ1RyYW5zYWN0aW9uLCBiOiBCeXRlcwogICAgLy8gKSAtPiBOb25lOgogICAgcHJvdG8gMyAwCiAgICAvLyB0eXBlZF9hYmlfY2FsbF90eG4vdHhuX2NvbnRyYWN0LnB5OjMxCiAgICAvLyBhc3NlcnQgYSA9PSBiImEiLCAiYSBpcyBub3QgYSIKICAgIGZyYW1lX2RpZyAtMwogICAgYnl0ZWNfMCAvLyAweDYxCiAgICA9PQogICAgYXNzZXJ0IC8vIGEgaXMgbm90IGEKICAgIC8vIHR5cGVkX2FiaV9jYWxsX3R4bi90eG5fY29udHJhY3QucHk6MzIKICAgIC8vIGFzc2VydCBiID09IGIiYiIsICJiIGlzIG5vdCBiIgogICAgZnJhbWVfZGlnIC0xCiAgICBieXRlY18xIC8vIDB4NjIKICAgID09CiAgICBhc3NlcnQgLy8gYiBpcyBub3QgYgogICAgLy8gdHlwZWRfYWJpX2NhbGxfdHhuL3R4bl9jb250cmFjdC5weTozMwogICAgLy8gYXNzZXJ0IGFjZmcuY3JlYXRlZF9hc3NldC5pZCwgImV4cGVjdGVkIGFzc2V0IGlkIgogICAgZnJhbWVfZGlnIC0yCiAgICBndHhucyBDcmVhdGVkQXNzZXRJRAogICAgYXNzZXJ0IC8vIGV4cGVjdGVkIGFzc2V0IGlkCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "TxnContract",
        "methods": [
            {
                "name": "call_with_txn",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "txn",
                        "name": "acfg"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "call_with_acfg",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "acfg",
                        "name": "acfg"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "call_with_acfg_no_return",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "acfg",
                        "name": "acfg"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}