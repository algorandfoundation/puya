main test_cases.unary.contract.UnaryContract.approval_program:
    block@0: // L14
        let loop_counter%0#0: uint64 = 0u
        let i#0: uint64 = 1u
        goto block@2
    block@2: // for_body_L32
        let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@4, loop_counter%0#3 <- block@5, loop_counter%0#4 <- block@6)
        let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@4, i#3 <- block@5, i#4 <- block@6)
        let tmp%1#0: uint64 = (- 18446744073709551615u i#1)
        let tmp%2#0: uint64 = (~ tmp%1#0)
        let tmp%3#0: bool = (== tmp%2#0 i#1)
        (assert tmp%3#0) // ~ uint
        goto_nth [block@4, block@5, block@6][loop_counter%0#1] else goto block@7
    block@4: // for_header_1_L31
        let loop_counter%0#2: uint64 = 1u
        let i#2: uint64 = 2u
        goto block@2
    block@5: // for_header_2_L31
        let loop_counter%0#3: uint64 = 2u
        let i#3: uint64 = 150u
        goto block@2
    block@6: // for_header_3_L31
        let loop_counter%0#4: uint64 = 3u
        let i#4: uint64 = 18446744073709551615u
        goto block@2
    block@7: // after_for_L31
        return 1u