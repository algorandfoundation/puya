#pragma version 10
#pragma typetrack false

// test_cases.unary.contract.UnaryContract.approval_program() -> uint64:
main:
    intcblock 1 18446744073709551615 2
    // unary/contract.py:30-31
    // # test ~
    // for i in (UInt64(1), UInt64(2), UInt64(150), UInt64(MAX_UINT64)):
    intc_0 // 1
    pushint 0 // 0

for_body@2:
    // unary/contract.py:32
    // assert ~(MAX_UINT64 - i) == i, "~ uint"
    intc_1 // 18446744073709551615
    uncover 2
    dup
    cover 2
    -
    ~
    ==
    assert // ~ uint
    // unary/contract.py:30-31
    // # test ~
    // for i in (UInt64(1), UInt64(2), UInt64(150), UInt64(MAX_UINT64)):
    switch for_header_1@4 for_header_2@5 for_header_3@6
    // unary/contract.py:19
    // return True
    intc_0 // 1
    return

for_header_3@6:
    // unary/contract.py:30-31
    // # test ~
    // for i in (UInt64(1), UInt64(2), UInt64(150), UInt64(MAX_UINT64)):
    intc_1 // 18446744073709551615
    pushint 3 // 3
    b for_body@2

for_header_2@5:
    // unary/contract.py:30-31
    // # test ~
    // for i in (UInt64(1), UInt64(2), UInt64(150), UInt64(MAX_UINT64)):
    pushint 150 // 150
    intc_2 // 2
    b for_body@2

for_header_1@4:
    // unary/contract.py:30-31
    // # test ~
    // for i in (UInt64(1), UInt64(2), UInt64(150), UInt64(MAX_UINT64)):
    intc_2 // 2
    intc_0 // 1
    b for_body@2
