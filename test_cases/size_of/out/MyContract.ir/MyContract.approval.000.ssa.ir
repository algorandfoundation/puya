main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.size_of.contract.MyContract.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.size_of.contract.MyContract.__puya_arc4_router__() -> bool:
    block@0: // L11
        let tmp%0#0: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#0)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        switch tmp%4#0 {0u => block@1, 1u => block@5, 2u => block@8, 3u => block@9, 4u => block@10, 5u => block@11, 6u => block@12, 7u => block@13, 8u => block@14, 9u => block@15, 10u => block@16, 11u => block@17, * => block@18}
    block@1: // switch_case_0_L11
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "test()void" => block@2, * => block@3}
    block@2: // test_route_L12
        test_cases.size_of.contract.MyContract.test[routing]()
        goto block@4
    block@3: // switch_case_default_L11
        goto block@4
    block@4: // switch_case_next_L11
        fail // this contract does not implement the given ABI method for call NoOp
    block@5: // switch_case_1_L11
        let tmp%6#0: uint64 = (txn NumAppArgs)
        let tmp%7#0: bool = (== tmp%6#0 0u)
        goto tmp%7#0 ? block@6 : block@7
    block@6: // __algopy_default_create_L1
        test_cases.size_of.contract.MyContract.__algopy_default_create()
        exit 1u
    block@7: // else_body_L11
        fail // this contract does not implement the given ABI method for create NoOp
    block@8: // switch_case_2_L11
        goto block@18
    block@9: // switch_case_3_L11
        goto block@18
    block@10: // switch_case_4_L11
        goto block@18
    block@11: // switch_case_5_L11
        goto block@18
    block@12: // switch_case_6_L11
        goto block@18
    block@13: // switch_case_7_L11
        goto block@18
    block@14: // switch_case_8_L11
        goto block@18
    block@15: // switch_case_9_L11
        goto block@18
    block@16: // switch_case_10_L11
        goto block@18
    block@17: // switch_case_11_L11
        goto block@18
    block@18: // switch_case_default_L11
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

subroutine test_cases.size_of.contract.MyContract.test[routing]() -> void:
    block@0: // L12
        test_cases.size_of.contract.MyContract.test()
        exit 1u

subroutine test_cases.size_of.contract.MyContract.test() -> void:
    block@0: // L12
        let tmp%0#0: bool = (== 8u 8u)
        (assert tmp%0#0)
        let tmp%1#0: bool = (== 8u 8u)
        (assert tmp%1#0)
        let tmp%2#0: bool = (== 32u 32u)
        (assert tmp%2#0)
        let tmp%3#0: bool = (== 32u 32u)
        (assert tmp%3#0)
        let tmp%4#0: bool = (== 8u 8u)
        (assert tmp%4#0)
        let tmp%5#0: bool = (== 8u 8u)
        (assert tmp%5#0)
        let tmp%6#0: bool = (== 8u 8u)
        (assert tmp%6#0)
        let tmp%7#0: bool = (== 1u 1u)
        (assert tmp%7#0)
        let tmp%8#0: bool = (== 1u 1u)
        (assert tmp%8#0)
        let tmp%9#0: bool = (== 2u 2u)
        (assert tmp%9#0)
        let tmp%10#0: bool = (== 9u 9u)
        (assert tmp%10#0)
        let tmp%11#0: bool = (== 7u 7u)
        (assert tmp%11#0)
        let tmp%12#0: bool = (== 2u 2u)
        (assert tmp%12#0)
        return 

subroutine test_cases.size_of.contract.MyContract.__algopy_default_create() -> void:
    block@0: // L1
        return 