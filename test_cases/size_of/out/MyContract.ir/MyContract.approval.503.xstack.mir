// Op                                                 Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // size_of/contract.py:12
        // @arc4.abimethod()
        int 1                                         1
        x-store lifted%return#0                       (𝕏) lifted%return#0 |
        // size_of/contract.py:11
        // class MyContract(arc4.ARC4Contract):
        txn NumAppArgs                                (𝕏) lifted%return#0 | tmp%0#1
        bz main_bare_routing@6 ; b main_abi_routing@2 (𝕏) lifted%return#0 |

    main_abi_routing@2:                               (𝕏) lifted%return#0 |
        // size_of/contract.py:11
        // class MyContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                        (𝕏) lifted%return#0 | tmp%2#0
        method test()void                             (𝕏) lifted%return#0 | tmp%2#0,Method(test()void)
        ==                                            (𝕏) lifted%return#0 | eq%tmp%2#0
        assert                                        (𝕏) lifted%return#0 |
        // size_of/contract.py:12
        // @arc4.abimethod()
        txn OnCompletion                              (𝕏) lifted%return#0 | tmp%3#0
        !                                             (𝕏) lifted%return#0 | tmp%4#0
        assert // OnCompletion is not NoOp            (𝕏) lifted%return#0 |
        txn ApplicationID                             (𝕏) lifted%return#0 | tmp%5#0
        assert // can only call when not creating     (𝕏) lifted%return#0 |
        x-load lifted%return#0                        lifted%return#0
        return

    main_bare_routing@6:                              (𝕏) lifted%return#0 |
        // size_of/contract.py:11
        // class MyContract(arc4.ARC4Contract):
        txn OnCompletion                              (𝕏) lifted%return#0 | tmp%7#0
        !                                             (𝕏) lifted%return#0 | not%tmp%7#0
        assert                                        (𝕏) lifted%return#0 |
        txn ApplicationID                             (𝕏) lifted%return#0 | tmp%8#0
        !                                             (𝕏) lifted%return#0 | tmp%9#0
        assert // can only call when creating         (𝕏) lifted%return#0 |
        x-load lifted%return#0                        lifted%return#0
        return


