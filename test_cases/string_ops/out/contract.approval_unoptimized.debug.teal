// Op                                                         // Op Description                      Stack (out)                                                         Source code                                     Source line

#pragma version 10

// test_cases.string_ops.contract.MyContract.approval_program() -> uint64:
main_block@0:
        byte "brown fox"                                      //                                     "brown fox"                                                         b"brown fox"                                    File "string_ops/contract.py", line 7
        byte "The quick brown fox jumped over the lazy dog"   //                                     "brown fox","The quick brown fox jumped over the lazy dog"          b"The quick brown fox jumped over the lazy dog" File "string_ops/contract.py", line 7
        callsub is_in_str                                     //                                     {is_in_str}                                                         is_in_str(                                      File "string_ops/contract.py", line 6
        assert                                                //                                                                                                         assert is_in_str(                               File "string_ops/contract.py", line 6
        byte "red fox"                                        //                                     "red fox"                                                           b"red fox"                                      File "string_ops/contract.py", line 10
        byte "The quick brown fox jumped over the lazy dog"   //                                     "red fox","The quick brown fox jumped over the lazy dog"            b"The quick brown fox jumped over the lazy dog" File "string_ops/contract.py", line 10
        callsub is_in_str                                     //                                     {is_in_str}                                                         is_in_str(                                      File "string_ops/contract.py", line 9
        !                                                     //                                     {!}                                                                 not is_in_str(                                  File "string_ops/contract.py", line 9
        assert                                                //                                                                                                         assert not is_in_str(                           File "string_ops/contract.py", line 9
        int 1                                                 //                                     1                                                                   True                                            File "string_ops/contract.py", line 13
        return                                                //                                                                                                         return True                                     File "string_ops/contract.py", line 13


// test_cases.string_ops.contract.is_in_str(a#0: bytes, b#0: bytes) -> uint64:
is_in_str:
        proto 2 1                                             //                                     (洧도) a#0,b#0 |                                                       def is_in_str(a: Bytes, b: Bytes) -> bool:      File "string_ops/contract.py", line 20

is_in_str_block@0:
        frame_dig -2                                          // load a#0 from parameters            (洧도) a#0,b#0 | a#0                                                   a: Bytes                                        File "string_ops/contract.py", line 20
        frame_dig -1                                          // load b#0 from parameters            (洧도) a#0,b#0 | a#0,b#0                                               b: Bytes                                        File "string_ops/contract.py", line 20
        callsub is_substring                                  //                                     (洧도) a#0,b#0 | {is_substring}                                        a in b                                          File "string_ops/contract.py", line 21
        retsub                                                //                                     tmp%0#0                                                             return a in b                                   File "string_ops/contract.py", line 21


// puyapy_lib_bytes.is_substring(item#0: bytes, sequence#0: bytes) -> uint64:
is_substring:
        proto 2 1                                             //                                     (洧도) item#0,sequence#0 |                                                                                             File "<puya>/puyapy_lib_bytes.py", line 5

is_substring_block@0:
        int 0                                                 //                                     (洧도) item#0,sequence#0 | 0                                                                                           File "<puya>/puyapy_lib_bytes.py", line 10
        // Implicit fall through to is_substring_while_top@1  //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 |

is_substring_while_top@1:
        frame_dig -2                                          // load item#0 from parameters         (洧도) item#0,sequence#0 | (洧뎽) start#0 | item#0                                                                        File "<puya>/puyapy_lib_bytes.py", line 5
        len                                                   //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {len}                                                                         File "<puya>/puyapy_lib_bytes.py", line 11
        frame_dig 0                                           // load start#0 from f-stack           (洧도) item#0,sequence#0 | (洧뎽) start#0 | tmp%0#0,start#0                                                               File "<puya>/puyapy_lib_bytes.py", line 10
        +                                                     //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {+}                                                                           File "<puya>/puyapy_lib_bytes.py", line 11
        frame_dig -1                                          // load sequence#0 from parameters     (洧도) item#0,sequence#0 | (洧뎽) start#0 | tmp%1#0,sequence#0                                                            File "<puya>/puyapy_lib_bytes.py", line 5
        len                                                   //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | tmp%1#0,{len}                                                                 File "<puya>/puyapy_lib_bytes.py", line 11
        <=                                                    //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {<=}                                                                          File "<puya>/puyapy_lib_bytes.py", line 11
        bz is_substring_after_while@5                         //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 |                                                                               File "<puya>/puyapy_lib_bytes.py", line 11
        // Implicit fall through to is_substring_while_body@2 //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 |                                                                               File "<puya>/puyapy_lib_bytes.py", line 11

is_substring_while_body@2:
        frame_dig -2                                          // load item#0 from parameters         (洧도) item#0,sequence#0 | (洧뎽) start#0 | item#0                                                                        File "<puya>/puyapy_lib_bytes.py", line 5
        len                                                   //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {len}                                                                         File "<puya>/puyapy_lib_bytes.py", line 12
        frame_dig 0                                           // load start#0 from f-stack           (洧도) item#0,sequence#0 | (洧뎽) start#0 | tmp%4#0,start#0                                                               File "<puya>/puyapy_lib_bytes.py", line 10
        dup
        cover 2                                               // store start#0 to l-stack (copy)     (洧도) item#0,sequence#0 | (洧뎽) start#0 | start#0,tmp%4#0,start#0                                                       File "<puya>/puyapy_lib_bytes.py", line 10
        +                                                     //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | start#0,{+}                                                                   File "<puya>/puyapy_lib_bytes.py", line 12
        frame_dig -1                                          // load sequence#0 from parameters     (洧도) item#0,sequence#0 | (洧뎽) start#0 | start#0,tmp%5#0,sequence#0                                                    File "<puya>/puyapy_lib_bytes.py", line 5
        uncover 2                                             // load start#0 from l-stack (no copy) (洧도) item#0,sequence#0 | (洧뎽) start#0 | tmp%5#0,sequence#0,start#0                                                    File "<puya>/puyapy_lib_bytes.py", line 10
        uncover 2                                             // load tmp%5#0 from l-stack (no copy) (洧도) item#0,sequence#0 | (洧뎽) start#0 | sequence#0,start#0,tmp%5#0                                                    File "<puya>/puyapy_lib_bytes.py", line 12
        substring3                                            //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {substring3}                                                                  File "<puya>/puyapy_lib_bytes.py", line 12
        frame_dig -2                                          // load item#0 from parameters         (洧도) item#0,sequence#0 | (洧뎽) start#0 | tmp%6#0,item#0                                                                File "<puya>/puyapy_lib_bytes.py", line 5
        ==                                                    //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {==}                                                                          File "<puya>/puyapy_lib_bytes.py", line 12
        bz is_substring_after_if_else@4                       //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 |                                                                               File "<puya>/puyapy_lib_bytes.py", line 12
        // Implicit fall through to is_substring_if_body@3    //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 |                                                                               File "<puya>/puyapy_lib_bytes.py", line 12

is_substring_if_body@3:
        int 1                                                 //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | 1                                                                             File "<puya>/puyapy_lib_bytes.py", line 13
        swap
        retsub                                                //                                     1                                                                                                                   File "<puya>/puyapy_lib_bytes.py", line 13

is_substring_after_if_else@4:
        frame_dig 0                                           // load start#0 from f-stack           (洧도) item#0,sequence#0 | (洧뎽) start#0 | start#0                                                                       File "<puya>/puyapy_lib_bytes.py", line 10
        int 1                                                 //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | start#0,1                                                                     File "<puya>/puyapy_lib_bytes.py", line 14
        +                                                     //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | {+}                                                                           File "<puya>/puyapy_lib_bytes.py", line 14
        frame_bury 0                                          // store start#0 to f-stack            (洧도) item#0,sequence#0 | (洧뎽) start#0 |                                                                               File "<puya>/puyapy_lib_bytes.py", line 10
        b is_substring_while_top@1                            //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 |

is_substring_after_while@5:
        int 0                                                 //                                     (洧도) item#0,sequence#0 | (洧뎽) start#0 | 0                                                                             File "<puya>/puyapy_lib_bytes.py", line 15
        swap
        retsub                                                //                                     0                                                                                                                   File "<puya>/puyapy_lib_bytes.py", line 15

