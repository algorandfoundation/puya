// Op                                                                                               // Op Description                               Stack (out)                                                                                                        Source code                                                                            Source line

#pragma version 10

// test_cases.string_ops.contract.MyContract.approval_program() -> uint64:
main_block@0:
    byte 0x62726f776e20666f78                                                                       //                                              0x62726f776e20666f78                                                                                               Bytes(b"brown fox")                                                                    string_ops/contract.py:6
    byte 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67 //                                              0x62726f776e20666f78,0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67    Bytes(b"The quick brown fox jumped over the lazy dog")                                 string_ops/contract.py:6
    callsub is_substring                                                                            //                                              {is_substring}                                                                                                     Bytes(b"brown fox") in Bytes(b"The quick brown fox jumped over the lazy dog")          string_ops/contract.py:6
                                                                                                    // virtual: store tmp%0#0 to l-stack (no copy)  tmp%0#0                                                                                                            Bytes(b"brown fox") in Bytes(b"The quick brown fox jumped over the lazy dog")          string_ops/contract.py:6
                                                                                                    // virtual: load tmp%0#0 from l-stack (no copy) tmp%0#0                                                                                                            assert Bytes(b"brown fox") in Bytes(b"The quick brown fox jumped over the lazy dog")   string_ops/contract.py:6
    assert                                                                                          //                                                                                                                                                                 assert Bytes(b"brown fox") in Bytes(b"The quick brown fox jumped over the lazy dog")   string_ops/contract.py:6
    byte 0x62726f776e20666f78                                                                       //                                              0x62726f776e20666f78                                                                                               b"brown fox"                                                                           string_ops/contract.py:7
    byte 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67 //                                              0x62726f776e20666f78,0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67    Bytes(b"The quick brown fox jumped over the lazy dog")                                 string_ops/contract.py:7
    callsub is_substring                                                                            //                                              {is_substring}                                                                                                     b"brown fox" in Bytes(b"The quick brown fox jumped over the lazy dog")                 string_ops/contract.py:7
                                                                                                    // virtual: store tmp%1#0 to l-stack (no copy)  tmp%1#0                                                                                                            b"brown fox" in Bytes(b"The quick brown fox jumped over the lazy dog")                 string_ops/contract.py:7
                                                                                                    // virtual: load tmp%1#0 from l-stack (no copy) tmp%1#0                                                                                                            assert b"brown fox" in Bytes(b"The quick brown fox jumped over the lazy dog")          string_ops/contract.py:7
    assert                                                                                          //                                                                                                                                                                 assert b"brown fox" in Bytes(b"The quick brown fox jumped over the lazy dog")          string_ops/contract.py:7
    byte 0x72656420666f78                                                                           //                                              0x72656420666f78                                                                                                   Bytes(b"red fox")                                                                      string_ops/contract.py:8
    byte 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67 //                                              0x72656420666f78,0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67        Bytes(b"The quick brown fox jumped over the lazy dog")                                 string_ops/contract.py:8
    callsub is_substring                                                                            //                                              {is_substring}                                                                                                     Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:8
                                                                                                    // virtual: store tmp%2#0 to l-stack (no copy)  tmp%2#0                                                                                                            Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:8
                                                                                                    // virtual: load tmp%2#0 from l-stack (no copy) tmp%2#0                                                                                                            Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:8
    !                                                                                               //                                              {!}                                                                                                                Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:8
                                                                                                    // virtual: store tmp%3#0 to l-stack (no copy)  tmp%3#0                                                                                                            Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:8
                                                                                                    // virtual: load tmp%3#0 from l-stack (no copy) tmp%3#0                                                                                                            assert Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog") string_ops/contract.py:8
    assert                                                                                          //                                                                                                                                                                 assert Bytes(b"red fox") not in Bytes(b"The quick brown fox jumped over the lazy dog") string_ops/contract.py:8
    byte 0x72656420666f78                                                                           //                                              0x72656420666f78                                                                                                   b"red fox"                                                                             string_ops/contract.py:9
    byte 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67 //                                              0x72656420666f78,0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67        Bytes(b"The quick brown fox jumped over the lazy dog")                                 string_ops/contract.py:9
    callsub is_substring                                                                            //                                              {is_substring}                                                                                                     b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")               string_ops/contract.py:9
                                                                                                    // virtual: store tmp%4#0 to l-stack (no copy)  tmp%4#0                                                                                                            b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")               string_ops/contract.py:9
                                                                                                    // virtual: load tmp%4#0 from l-stack (no copy) tmp%4#0                                                                                                            b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")               string_ops/contract.py:9
    !                                                                                               //                                              {!}                                                                                                                b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")               string_ops/contract.py:9
                                                                                                    // virtual: store tmp%5#0 to l-stack (no copy)  tmp%5#0                                                                                                            b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")               string_ops/contract.py:9
                                                                                                    // virtual: load tmp%5#0 from l-stack (no copy) tmp%5#0                                                                                                            assert b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:9
    assert                                                                                          //                                                                                                                                                                 assert b"red fox" not in Bytes(b"The quick brown fox jumped over the lazy dog")        string_ops/contract.py:9
    int 1                                                                                           //                                              1                                                                                                                  True                                                                                   string_ops/contract.py:11
    return                                                                                          //                                                                                                                                                                 return True                                                                            string_ops/contract.py:11


// _puya_lib.bytes_.is_substring(item: bytes, sequence: bytes) -> uint64:
is_substring:
    proto 2 1                                                                                       //                                              (𝕡) item#0,sequence#0 |                                                                                                                                                                                   _puya_lib/bytes_.py:4-5
    byte ""                                                                                         // allocate 1 to stack                          (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0 |

is_substring_block@0:
    int 0                                                                                           //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0 | 0                                                                                                                                                                   _puya_lib/bytes_.py:10
                                                                                                    // virtual: store start#0 to f-stack            (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |                                                                                                                                                             _puya_lib/bytes_.py:10
    // Implicit fall through to is_substring_while_top@1                                            //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |

is_substring_while_top@1:
    frame_dig -2                                                                                    // load item#0 from parameters                  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | item#0                                                                                                                                                      _puya_lib/bytes_.py:11
    len                                                                                             //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | {len}                                                                                                                                                       _puya_lib/bytes_.py:11
                                                                                                    // virtual: store tmp%0#0 to l-stack (no copy)  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%0#0                                                                                                                                                     _puya_lib/bytes_.py:11
    frame_dig 1                                                                                     // load start#0 from f-stack                    (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%0#0,start#0                                                                                                                                             _puya_lib/bytes_.py:11
    uncover 1                                                                                       // load tmp%0#0 from l-stack (no copy)          (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | start#0,tmp%0#0                                                                                                                                             _puya_lib/bytes_.py:11
    +                                                                                               //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | {+}                                                                                                                                                         _puya_lib/bytes_.py:11
    dup                                                                                             // store tmp%1#0 to l-stack (copy)              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%1#0,tmp%1#0                                                                                                                                             _puya_lib/bytes_.py:11
    frame_bury 0                                                                                    // store tmp%1#0 to f-stack                     (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%1#0                                                                                                                                                     _puya_lib/bytes_.py:11
    frame_dig -1                                                                                    // load sequence#0 from parameters              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%1#0,sequence#0                                                                                                                                          _puya_lib/bytes_.py:11
    len                                                                                             //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%1#0,{len}                                                                                                                                               _puya_lib/bytes_.py:11
                                                                                                    // virtual: store tmp%2#0 to l-stack (no copy)  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                                                                                                             _puya_lib/bytes_.py:11
                                                                                                    // virtual: load tmp%1#0 from l-stack (no copy) (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%2#0,tmp%1#0                                                                                                                                             _puya_lib/bytes_.py:11
                                                                                                    // virtual: load tmp%2#0 from l-stack (no copy) (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                                                                                                             _puya_lib/bytes_.py:11
    <=                                                                                              //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | {<=}                                                                                                                                                        _puya_lib/bytes_.py:11
                                                                                                    // virtual: store tmp%3#0 to l-stack (no copy)  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%3#0                                                                                                                                                     _puya_lib/bytes_.py:11
                                                                                                    // virtual: load tmp%3#0 from l-stack (no copy) (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%3#0                                                                                                                                                     _puya_lib/bytes_.py:11
    bz is_substring_after_while@5                                                                   //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |                                                                                                                                                             _puya_lib/bytes_.py:11
    // Implicit fall through to is_substring_while_body@2                                           //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |                                                                                                                                                             _puya_lib/bytes_.py:11

is_substring_while_body@2:
    frame_dig -1                                                                                    // load sequence#0 from parameters              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | sequence#0                                                                                                                                                  _puya_lib/bytes_.py:12
    frame_dig 1                                                                                     // load start#0 from f-stack                    (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | sequence#0,start#0                                                                                                                                          _puya_lib/bytes_.py:12
    frame_dig 0                                                                                     // load tmp%1#0 from f-stack                    (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | sequence#0,start#0,tmp%1#0                                                                                                                                  _puya_lib/bytes_.py:12
    substring3                                                                                      //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | {substring3}                                                                                                                                                _puya_lib/bytes_.py:12
                                                                                                    // virtual: store tmp%6#0 to l-stack (no copy)  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%6#0                                                                                                                                                     _puya_lib/bytes_.py:12
    frame_dig -2                                                                                    // load item#0 from parameters                  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%6#0,item#0                                                                                                                                              _puya_lib/bytes_.py:12
    uncover 1                                                                                       // load tmp%6#0 from l-stack (no copy)          (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | item#0,tmp%6#0                                                                                                                                              _puya_lib/bytes_.py:12
    ==                                                                                              //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | {==}                                                                                                                                                        _puya_lib/bytes_.py:12
                                                                                                    // virtual: store tmp%7#0 to l-stack (no copy)  (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%7#0                                                                                                                                                     _puya_lib/bytes_.py:12
                                                                                                    // virtual: load tmp%7#0 from l-stack (no copy) (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | tmp%7#0                                                                                                                                                     _puya_lib/bytes_.py:12
    bz is_substring_after_if_else@4                                                                 //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |                                                                                                                                                             _puya_lib/bytes_.py:12
    // Implicit fall through to is_substring_if_body@3                                              //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |                                                                                                                                                             _puya_lib/bytes_.py:12

is_substring_if_body@3:
    int 1                                                                                           //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | 1                                                                                                                                                           _puya_lib/bytes_.py:13
    frame_bury 0
    retsub                                                                                          //                                              1                                                                                                                                                                                                         _puya_lib/bytes_.py:13

is_substring_after_if_else@4:
    frame_dig 1                                                                                     // load start#0 from f-stack                    (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | start#0                                                                                                                                                     _puya_lib/bytes_.py:14
    int 1                                                                                           //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | start#0,1                                                                                                                                                   _puya_lib/bytes_.py:14
    +                                                                                               //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | {+}                                                                                                                                                         _puya_lib/bytes_.py:14
    frame_bury 1                                                                                    // store start#0 to f-stack                     (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |                                                                                                                                                             _puya_lib/bytes_.py:14
    b is_substring_while_top@1                                                                      //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 |

is_substring_after_while@5:
    int 0                                                                                           //                                              (𝕡) item#0,sequence#0 | (𝕗) tmp%1#0,start#0 | 0                                                                                                                                                           _puya_lib/bytes_.py:15
    frame_bury 0
    retsub                                                                                          //                                              0                                                                                                                                                                                                         _puya_lib/bytes_.py:15

