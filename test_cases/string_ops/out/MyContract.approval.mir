// Op                                                     //                                           Op Description                                                Stack (out)                                                                 X stack                                                                                             Source code                                                                                         Source line

#pragma version 10

// test_cases.string_ops.contract.MyContract.approval_program() -> uint64:
main_block@0:
    byte "brown fox"                                      //                                                                                                         "brown fox"                                                                                                                                                                     b"brown fox"                                                                                        string_ops/contract.py:7
    byte "The quick brown fox jumped over the lazy dog"   //                                                                                                         "brown fox","The quick brown fox jumped over the lazy dog"                                                                                                                      b"The quick brown fox jumped over the lazy dog"                                                     string_ops/contract.py:7
    callsub is_in_str                                     //                                                                                                         {is_in_str}                                                                                                                                                                     is_in_str(\nBytes(b"brown fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)          string_ops/contract.py:6-8
    //                                                    virtual: store tmp%0#0 to l-stack (no copy)  tmp%0#0                                                                                                                                   is_in_str(\nBytes(b"brown fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)          string_ops/contract.py:6-8
    //                                                    virtual: load tmp%0#0 from l-stack (no copy) tmp%0#0                                                                                                                                   assert is_in_str(\nBytes(b"brown fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)   string_ops/contract.py:6-8
    assert                                                //                                                                                                                                                                                                                                                                                         assert is_in_str(\nBytes(b"brown fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)   string_ops/contract.py:6-8
    byte "red fox"                                        //                                                                                                         "red fox"                                                                                                                                                                       b"red fox"                                                                                          string_ops/contract.py:10
    byte "The quick brown fox jumped over the lazy dog"   //                                                                                                         "red fox","The quick brown fox jumped over the lazy dog"                                                                                                                        b"The quick brown fox jumped over the lazy dog"                                                     string_ops/contract.py:10
    callsub is_in_str                                     //                                                                                                         {is_in_str}                                                                                                                                                                     is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)            string_ops/contract.py:9-11
    //                                                    virtual: store tmp%1#0 to l-stack (no copy)  tmp%1#0                                                                                                                                   is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)            string_ops/contract.py:9-11
    //                                                    virtual: load tmp%1#0 from l-stack (no copy) tmp%1#0                                                                                                                                   not is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)        string_ops/contract.py:9-11
    !                                                     //                                                                                                         {!}                                                                                                                                                                             not is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)        string_ops/contract.py:9-11
    //                                                    virtual: store tmp%2#0 to l-stack (no copy)  tmp%2#0                                                                                                                                   not is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n)        string_ops/contract.py:9-11
    //                                                    virtual: load tmp%2#0 from l-stack (no copy) tmp%2#0                                                                                                                                   assert not is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n) string_ops/contract.py:9-11
    assert                                                //                                                                                                                                                                                                                                                                                         assert not is_in_str(\nBytes(b"red fox"), Bytes(b"The quick brown fox jumped over the lazy dog")\n) string_ops/contract.py:9-11
    int 1                                                 //                                                                                                         1                                                                                                                                                                               True                                                                                                string_ops/contract.py:13
    return                                                //                                                                                                                                                                                                                                                                                         return True                                                                                         string_ops/contract.py:13


// test_cases.string_ops.contract.is_in_str(a: bytes, b: bytes) -> uint64:
is_in_str:
    proto 2 1                                             //                                                                                                         (洧도) a#0,b#0 |                                                                                                                                                                   @subroutine\ndef is_in_str(a: Bytes, b: Bytes) -> bool:                                             string_ops/contract.py:19-20

is_in_str_block@0:
    frame_dig -2                                          //                                           load a#0 from parameters                                      (洧도) a#0,b#0 | a#0                                                                                                                                                               a in b                                                                                              string_ops/contract.py:21
    frame_dig -1                                          //                                           load b#0 from parameters                                      (洧도) a#0,b#0 | a#0,b#0                                                                                                                                                           a in b                                                                                              string_ops/contract.py:21
    callsub is_substring                                  //                                                                                                         (洧도) a#0,b#0 | {is_substring}                                                                                                                                                    a in b                                                                                              string_ops/contract.py:21
    //                                                    virtual: store tmp%0#0 to l-stack (no copy)  (洧도) a#0,b#0 | tmp%0#0                                                                                                                     a in b                                                                                              string_ops/contract.py:21
    //                                                    virtual: load tmp%0#0 from l-stack (no copy) (洧도) a#0,b#0 | tmp%0#0                                                                                                                     return a in b                                                                                       string_ops/contract.py:21
    retsub                                                //                                                                                                         tmp%0#0                                                                                                                                                                         return a in b                                                                                       string_ops/contract.py:21


// algopy_lib_bytes.is_substring(item: bytes, sequence: bytes) -> uint64:
is_substring:
    proto 2 1                                             //                                                                                                         (洧도) item#0,sequence#0 |                                                                                                                                                                                                                                                             <algopy>/algopy_lib_bytes.py:4-5
    byte ""                                               //                                           allocate 1 to stack                                           (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0 |

is_substring_block@0:
    int 0                                                 //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0 | 0                                                                                                                                                                                                                                             <algopy>/algopy_lib_bytes.py:10
    //                                                    virtual: store start#0 to f-stack            (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                                                 <algopy>/algopy_lib_bytes.py:10
    // Implicit fall through to is_substring_while_top@1  //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |

is_substring_while_top@1:
    frame_dig -2                                          //                                           load item#0 from parameters                                   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | item#0                                                                                                                                                                                                                                <algopy>/algopy_lib_bytes.py:11
    len                                                   //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {len}                                                                                                                                                                                                                                 <algopy>/algopy_lib_bytes.py:11
    //                                                    virtual: store tmp%0#0 to l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%0#0                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:11
    frame_dig 1                                           //                                           load start#0 from f-stack                                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%0#0,start#0                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:11
    uncover 1                                             //                                           load tmp%0#0 from l-stack (no copy)                           (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0,tmp%0#0                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:11
    +                                                     //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {+}                                                                                                                                                                                                                                   <algopy>/algopy_lib_bytes.py:11
    dup                                                   //                                           store tmp%1#0 to l-stack (copy)                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%1#0                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:11
    frame_bury 0                                          //                                           store tmp%1#0 to f-stack                                      (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0                                                                                                                                                                                                                               <algopy>/algopy_lib_bytes.py:11
    frame_dig -1                                          //                                           load sequence#0 from parameters                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,sequence#0                                                                                                                                                                                                                    <algopy>/algopy_lib_bytes.py:11
    len                                                   //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,{len}                                                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:11
    //                                                    virtual: store tmp%2#0 to l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                                                                                                                                                 <algopy>/algopy_lib_bytes.py:11
    //                                                    virtual: load tmp%1#0 from l-stack (no copy) (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%2#0,tmp%1#0                                                                                                                                                                                 <algopy>/algopy_lib_bytes.py:11
    //                                                    virtual: load tmp%2#0 from l-stack (no copy) (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                                                                                                                                                 <algopy>/algopy_lib_bytes.py:11
    <=                                                    //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {<=}                                                                                                                                                                                                                                  <algopy>/algopy_lib_bytes.py:11
    //                                                    virtual: store tmp%3#0 to l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%3#0                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:11
    //                                                    virtual: load tmp%3#0 from l-stack (no copy) (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%3#0                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:11
    bz is_substring_after_while@5                         //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:11
    // Implicit fall through to is_substring_while_body@2 //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:11

is_substring_while_body@2:
    frame_dig -1                                          //                                           load sequence#0 from parameters                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0                                                                                                                                                                                                                            <algopy>/algopy_lib_bytes.py:12
    frame_dig 1                                           //                                           load start#0 from f-stack                                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0,start#0                                                                                                                                                                                                                    <algopy>/algopy_lib_bytes.py:12
    frame_dig 0                                           //                                           load tmp%1#0 from f-stack                                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0,start#0,tmp%1#0                                                                                                                                                                                                            <algopy>/algopy_lib_bytes.py:12
    substring3                                            //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {substring3}                                                                                                                                                                                                                          <algopy>/algopy_lib_bytes.py:12
    //                                                    virtual: store tmp%6#0 to l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%6#0                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:12
    frame_dig -2                                          //                                           load item#0 from parameters                                   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%6#0,item#0                                                                                                                                                                                                                        <algopy>/algopy_lib_bytes.py:12
    uncover 1                                             //                                           load tmp%6#0 from l-stack (no copy)                           (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | item#0,tmp%6#0                                                                                                                                                                                                                        <algopy>/algopy_lib_bytes.py:12
    ==                                                    //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {==}                                                                                                                                                                                                                                  <algopy>/algopy_lib_bytes.py:12
    //                                                    virtual: store tmp%7#0 to l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%7#0                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:12
    //                                                    virtual: load tmp%7#0 from l-stack (no copy) (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%7#0                                                                                                                                                                                         <algopy>/algopy_lib_bytes.py:12
    bz is_substring_after_if_else@4                       //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:12
    // Implicit fall through to is_substring_if_body@3    //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:12

is_substring_if_body@3:
    int 1                                                 //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | 1                                                                                                                                                                                                                                     <algopy>/algopy_lib_bytes.py:13
    frame_bury 0
    retsub                                                //                                                                                                         1                                                                                                                                                                                                                                                                                   <algopy>/algopy_lib_bytes.py:13

is_substring_after_if_else@4:
    frame_dig 1                                           //                                           load start#0 from f-stack                                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0                                                                                                                                                                                                                               <algopy>/algopy_lib_bytes.py:14
    int 1                                                 //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0,1                                                                                                                                                                                                                             <algopy>/algopy_lib_bytes.py:14
    +                                                     //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {+}                                                                                                                                                                                                                                   <algopy>/algopy_lib_bytes.py:14
    frame_bury 1                                          //                                           store start#0 to f-stack                                      (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                                                                                       <algopy>/algopy_lib_bytes.py:14
    b is_substring_while_top@1                            //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |

is_substring_after_while@5:
    int 0                                                 //                                                                                                         (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | 0                                                                                                                                                                                                                                     <algopy>/algopy_lib_bytes.py:15
    frame_bury 0
    retsub                                                //                                                                                                         0                                                                                                                                                                                                                                                                                   <algopy>/algopy_lib_bytes.py:15

