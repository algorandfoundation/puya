{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKe;AAAuB;AAAvB;;;AAAP;AACO;AAAgB;AAAhB;;;AAAP;AACO;AAAyB;AAAzB;;;AAAA;AAAP;AACO;AAAkB;AAAlB;;;AAAA;AAAP;AAEO;AAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.string_ops.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67 0x62726f776e20666f78 0x72656420666f78"
    },
    "70": {
      "op": "bytec_1 // 0x62726f776e20666f78",
      "defined_out": [
        "0x62726f776e20666f78"
      ],
      "stack_out": [
        "0x62726f776e20666f78"
      ]
    },
    "71": {
      "op": "bytec_0 // 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67",
      "defined_out": [
        "0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67",
        "0x62726f776e20666f78"
      ],
      "stack_out": [
        "0x62726f776e20666f78",
        "0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67"
      ]
    },
    "72": {
      "callsub": "_puya_lib.bytes_.is_substring",
      "op": "callsub is_substring",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "75": {
      "op": "assert",
      "stack_out": []
    },
    "76": {
      "op": "bytec_1 // 0x62726f776e20666f78",
      "stack_out": [
        "0x62726f776e20666f78"
      ]
    },
    "77": {
      "op": "bytec_0 // 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67",
      "stack_out": [
        "0x62726f776e20666f78",
        "0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67"
      ]
    },
    "78": {
      "callsub": "_puya_lib.bytes_.is_substring",
      "op": "callsub is_substring",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "81": {
      "op": "assert",
      "stack_out": []
    },
    "82": {
      "op": "bytec_2 // 0x72656420666f78",
      "defined_out": [
        "0x72656420666f78"
      ],
      "stack_out": [
        "0x72656420666f78"
      ]
    },
    "83": {
      "op": "bytec_0 // 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67",
      "stack_out": [
        "0x72656420666f78",
        "0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67"
      ]
    },
    "84": {
      "callsub": "_puya_lib.bytes_.is_substring",
      "op": "callsub is_substring",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "87": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "88": {
      "op": "assert",
      "stack_out": []
    },
    "89": {
      "op": "bytec_2 // 0x72656420666f78",
      "stack_out": [
        "0x72656420666f78"
      ]
    },
    "90": {
      "op": "bytec_0 // 0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67",
      "stack_out": [
        "0x72656420666f78",
        "0x54686520717569636b2062726f776e20666f78206a756d706564206f76657220746865206c617a7920646f67"
      ]
    },
    "91": {
      "callsub": "_puya_lib.bytes_.is_substring",
      "op": "callsub is_substring",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "94": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "95": {
      "op": "assert",
      "stack_out": []
    },
    "96": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "97": {
      "op": "return",
      "stack_out": []
    },
    "98": {
      "subroutine": "_puya_lib.bytes_.is_substring",
      "params": {
        "item#0": "bytes",
        "sequence#0": "bytes"
      },
      "block": "is_substring",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "101": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "103": {
      "op": "intc_1 // 0",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0"
      ]
    },
    "104": {
      "block": "is_substring_while_top@1",
      "stack_in": [
        "tmp%1#0",
        "start#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "item#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "item#0 (copy)"
      ]
    },
    "106": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%0#0"
      ]
    },
    "107": {
      "op": "frame_dig 1",
      "defined_out": [
        "start#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%0#0",
        "start#0"
      ]
    },
    "109": {
      "op": "+",
      "defined_out": [
        "start#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%1#0"
      ]
    },
    "110": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "111": {
      "op": "frame_bury 0",
      "defined_out": [
        "start#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%1#0"
      ]
    },
    "113": {
      "op": "frame_dig -1",
      "defined_out": [
        "sequence#0 (copy)",
        "start#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%1#0",
        "sequence#0 (copy)"
      ]
    },
    "115": {
      "op": "len",
      "defined_out": [
        "start#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "116": {
      "op": "<=",
      "defined_out": [
        "start#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%3#0"
      ]
    },
    "117": {
      "op": "bz is_substring_after_while@5",
      "stack_out": [
        "tmp%1#0",
        "start#0"
      ]
    },
    "120": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "sequence#0 (copy)"
      ]
    },
    "122": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "sequence#0 (copy)",
        "start#0"
      ]
    },
    "124": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "sequence#0 (copy)",
        "start#0",
        "tmp%1#0"
      ]
    },
    "126": {
      "op": "substring3",
      "defined_out": [
        "start#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%6#0"
      ]
    },
    "127": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%6#0",
        "item#0 (copy)"
      ]
    },
    "129": {
      "op": "==",
      "defined_out": [
        "start#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "tmp%7#0"
      ]
    },
    "130": {
      "op": "bz is_substring_after_if_else@4",
      "stack_out": [
        "tmp%1#0",
        "start#0"
      ]
    },
    "133": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "1"
      ]
    },
    "134": {
      "op": "frame_bury 0"
    },
    "136": {
      "retsub": true,
      "op": "retsub"
    },
    "137": {
      "block": "is_substring_after_if_else@4",
      "stack_in": [
        "tmp%1#0",
        "start#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "start#0"
      ]
    },
    "139": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "start#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "start#0",
        "1"
      ]
    },
    "140": {
      "op": "+",
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "start#0"
      ]
    },
    "141": {
      "op": "frame_bury 1",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0"
      ]
    },
    "143": {
      "op": "b is_substring_while_top@1"
    },
    "146": {
      "block": "is_substring_after_while@5",
      "stack_in": [
        "tmp%1#0",
        "start#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%1#0",
        "start#0",
        "0"
      ]
    },
    "147": {
      "op": "frame_bury 0"
    },
    "149": {
      "retsub": true,
      "op": "retsub"
    }
  }
}