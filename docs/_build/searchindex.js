Search.setIndex({"alltitles": {"API": [[1, "api"], [2, "api"], [3, "api"], [4, "api"], [5, "api"]], "API Reference": [[0, null]], "ARC-28: Structured event logging": [[9, null]], "ARC-32 and ARC-56": [[10, "arc-32-and-arc-56"]], "ARC-4 Container Packing": [[10, "arc-4-container-packing"]], "ARC-4 parameter": [[23, "arc-4-parameter"]], "ARC-4 types": [[24, "arc-4-types"]], "ARC-4: Application Binary Interface": [[10, null]], "ARC4Client method": [[12, "arc4client-method"]], "AVM operations": [[20, null]], "AVM types": [[24, "avm-types"]], "Abstraction without obfuscation": [[26, "abstraction-without-obfuscation"]], "Accessing result of a submitted inner transaction": [[23, "accessing-result-of-a-submitted-inner-transaction"]], "Account": [[24, "account"]], "Address": [[10, "address"]], "Advanced options": [[6, "advanced-options"]], "Algorand Python": [[7, null]], "Algorand Python Testing": [[27, null]], "Algorand Python array types": [[15, "algorand-python-array-types"]], "Algorand Python composite types": [[15, "algorand-python-composite-types"]], "Alternative ways to use arc4.abi_call": [[12, "alternative-ways-to-use-arc4-abi-call"]], "Application": [[24, "application"]], "Assertion error handling": [[16, "assertion-error-handling"]], "Assertions": [[16, "assertions"]], "Asset": [[24, "asset"]], "Background": [[26, "background"]], "BigUInt": [[24, "biguint"]], "Booleans": [[10, "booleans"]], "Box storage": [[21, "box-storage"]], "Breakpoint debugging": [[28, null]], "Bytes": [[24, "bytes"]], "Bytes and strings": [[10, "bytes-and-strings"]], "CLI": [[13, "cli"]], "Calling other applications": [[12, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"]], "Compiler installation": [[6, "compiler-installation"]], "Compiler usage": [[6, "compiler-usage"]], "Compiling to AVM bytecode": [[13, null]], "Contract class configuration": [[22, "contract-class-configuration"]], "Contract classes": [[22, "contract-classes"]], "Control flow structures": [[14, null]], "Create an ARC-4 application, and then call it": [[23, "create-an-arc-4-application-and-then-call-it"]], "Create and submit an inner transaction": [[23, "create-and-submit-an-inner-transaction"]], "Create and submit transactions in a loop": [[23, "create-and-submit-transactions-in-a-loop"]], "Data": [[1, "data"], [2, "data"]], "Data structures": [[15, null]], "Defining template values": [[6, "defining-template-values"]], "Dynamic arrays": [[10, "dynamic-arrays"]], "Emitting Events": [[9, "emitting-events"]], "Error handling and assertions": [[16, null]], "Example: An ARC-4 call counter": [[22, "example-an-arc-4-call-counter"]], "Example: Simple call counter": [[22, "example-simple-call-counter"]], "Example: Simplest possible algopy.ARC4Contract implementation": [[22, "example-simplest-possible-algopy-arc4contract-implementation"]], "Example: Simplest possible algopy.Contract implementation": [[22, "example-simplest-possible-algopy-contract-implementation"]], "Examples": [[23, "examples"]], "Examples of Variable Definitions": [[6, "examples-of-variable-definitions"]], "Exception handling": [[16, "exception-handling"]], "Explicit failure": [[16, "explicit-failure"]], "For Loops": [[14, "for-loops"]], "Functions": [[1, "functions"], [2, "functions"], [4, "functions"], [5, "functions"]], "Global": [[20, "global"]], "Global storage": [[21, "global-storage"]], "Group Index": [[23, "group-index"]], "Group Transactions": [[23, "group-transactions"]], "If statements": [[14, "if-statements"], [18, "if-statements"]], "Inheritance (outside of contract classes)": [[25, "inheritance-outside-of-contract-classes"]], "Inherited from AlgoKit": [[26, "inherited-from-algokit"]], "Inner Transactions": [[23, "inner-transactions"]], "Inner transaction objects cannot be passed to or returned from subroutines": [[23, "inner-transaction-objects-cannot-be-passed-to-or-returned-from-subroutines"]], "Inner transaction parameters cannot be reassigned without a .copy()": [[23, "inner-transaction-parameters-cannot-be-reassigned-without-a-copy"]], "Inner transactions cannot be reassigned": [[23, "inner-transactions-cannot-be-reassigned"]], "Inner transactions methods cannot be called if there is a subsequent inner transaction submitted or another subroutine is called": [[23, "inner-transactions-methods-cannot-be-called-if-there-is-a-subsequent-inner-transaction-submitted-or-another-subroutine-is-called"]], "Integer math": [[18, "integer-math"]], "Language Guide": [[8, null]], "Least surprise": [[26, "least-surprise"]], "Limitations": [[23, "limitations"]], "Local storage": [[21, "local-storage"]], "Logging": [[17, null]], "Logic signatures": [[22, "logic-signatures"]], "Match Statements": [[14, "match-statements"]], "Method signature or name": [[12, "method-signature-or-name"]], "Methods": [[10, "methods"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"]], "Module constants": [[18, "module-constants"]], "Module level constructs": [[18, null]], "Modules": [[22, "modules"]], "Mutability": [[10, "mutability"]], "Mutability vs Immutability": [[15, "mutability-vs-immutability"]], "None": [[24, "none"]], "Obtaining bytecode within other contracts": [[13, "obtaining-bytecode-within-other-contracts"]], "Opcode budgets": [[19, null]], "Options": [[6, "options"]], "Outputting AVM bytecode from CLI": [[13, "outputting-avm-bytecode-from-cli"]], "Package Contents": [[1, "package-contents"]], "Principles": [[26, "principles"]], "Principles & Background": [[26, null]], "Program structure": [[22, null]], "Programming with Algorand Python": [[7, "programming-with-algorand-python"]], "PuyaPy compiler": [[6, null]], "Python built-in types": [[24, "python-built-in-types"]], "Python builtins": [[11, null]], "Quick Start": [[27, "quick-start"], [28, "quick-start"]], "Quick start": [[7, "quick-start"]], "Recommendations": [[15, "recommendations"]], "Reference types": [[10, "reference-types"]], "Revolution, not evolution": [[26, "revolution-not-evolution"]], "Router": [[10, "router"]], "Sample pyproject.toml": [[6, "sample-pyproject-toml"]], "Scratch storage": [[21, "scratch-storage"]], "Static arrays": [[10, "static-arrays"]], "Static size vs Dynamic size": [[15, "static-size-vs-dynamic-size"]], "Storing data on-chain": [[21, null]], "String": [[24, "string"]], "Strings": [[18, "strings"]], "Structs": [[10, "structs"]], "Submitting multiple transactions": [[23, "submitting-multiple-transactions"]], "Subroutines": [[22, "subroutines"]], "Support auditing": [[26, "support-auditing"]], "Table of Contents": [[8, "table-of-contents"]], "Template variables": [[13, "template-variables"], [24, "template-variables"]], "Ternary conditions": [[14, "ternary-conditions"]], "Transactions": [[23, null]], "Tuples": [[10, "tuples"]], "Txn": [[20, "txn"]], "Type aliases": [[18, "type-aliases"]], "Type checking": [[6, "type-checking"]], "Types": [[10, "types"], [24, null], [24, "id1"]], "Typing": [[22, "typing"]], "UInt64": [[24, "uint64"]], "Unsigned fixed point decimals": [[10, "unsigned-fixed-point-decimals"]], "Unsigned ints": [[10, "unsigned-ints"]], "Unsupported Python features": [[25, null]], "Using itxn.ApplicationCall": [[12, "using-itxn-applicationcall"]], "Using the PuyaPy compiler": [[7, "using-the-puyapy-compiler"]], "Using the compiler": [[6, "using-the-compiler"]], "While loops": [[14, "while-loops"]], "Within other contracts": [[13, "within-other-contracts"]], "algopy": [[1, null]], "algopy.Array": [[15, "algopy-array"]], "algopy.ImmutableArray": [[15, "algopy-immutablearray"]], "algopy.arc4": [[2, null]], "algopy.arc4.DynamicArray / algopy.arc4.StaticArray": [[15, "algopy-arc4-dynamicarray-algopy-arc4-staticarray"]], "algopy.arc4.abi_call": [[12, "algopy-arc4-abi-call"]], "algopy.arc4.arc4_create": [[12, "algopy-arc4-arc4-create"]], "algopy.arc4.arc4_update": [[12, "algopy-arc4-arc4-update"]], "algopy.gtxn": [[3, null]], "algopy.itxn": [[4, null]], "algopy.op": [[5, null]], "arc4.Struct": [[15, "arc4-struct"]], "arc4.Tuple": [[15, "arc4-tuple"]], "async": [[25, "async"]], "bool": [[24, "bool"], [24, "id2"]], "closures & lambdas": [[25, "closures-lambdas"]], "enumerate": [[11, "enumerate"]], "global keyword": [[25, "global-keyword"]], "int, str, bytes, float": [[24, "int-str-bytes-float"]], "len": [[11, "len"]], "raise, try/except/finally": [[25, "raise-try-except-finally"]], "range": [[11, "range"]], "reversed": [[11, "reversed"]], "tuple": [[15, "tuple"], [24, "tuple"]], "types": [[11, "types"]], "typing.NamedTuple": [[15, "typing-namedtuple"], [24, "typing-namedtuple"]], "with": [[25, "with"]], "\u201cCohesive developer tool suite\u201d + \u201cSeamless onramp\u201d": [[26, "cohesive-developer-tool-suite-seamless-onramp"]], "\u201cExtensible\u201d": [[26, "extensible"]], "\u201cLeverage existing ecosystem\u201d": [[26, "leverage-existing-ecosystem"]], "\u201cMeet developers where they are\u201d": [[26, "meet-developers-where-they-are"]], "\u201cModular components\u201d": [[26, "modular-components"]], "\u201cSecure by default\u201d": [[26, "secure-by-default"]], "\u201cSustainable\u201d": [[26, "sustainable"]]}, "docnames": ["api", "api-algopy", "api-algopy.arc4", "api-algopy.gtxn", "api-algopy.itxn", "api-algopy.op", "compiler", "index", "language-guide", "lg-arc28", "lg-arc4", "lg-builtins", "lg-calling-apps", "lg-compile", "lg-control", "lg-data-structures", "lg-errors", "lg-logs", "lg-modules", "lg-opcode-budget", "lg-ops", "lg-storage", "lg-structure", "lg-transactions", "lg-types", "lg-unsupported-python-features", "principles", "references/algopy_testing", "references/avm_debugger"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.md", "api-algopy.md", "api-algopy.arc4.md", "api-algopy.gtxn.md", "api-algopy.itxn.md", "api-algopy.op.md", "compiler.md", "index.md", "language-guide.md", "lg-arc28.md", "lg-arc4.md", "lg-builtins.md", "lg-calling-apps.md", "lg-compile.md", "lg-control.md", "lg-data-structures.md", "lg-errors.md", "lg-logs.md", "lg-modules.md", "lg-opcode-budget.md", "lg-ops.md", "lg-storage.md", "lg-structure.md", "lg-transactions.md", "lg-types.md", "lg-unsupported-python-features.md", "principles.md", "references/algopy_testing.md", "references/avm_debugger.md"], "indexentries": {"__add__() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.__add__", false]], "__add__() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.__add__", false]], "__add__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__add__", false]], "__add__() (algopy.biguint method)": [[1, "algopy.BigUInt.__add__", false]], "__add__() (algopy.bytes method)": [[1, "algopy.Bytes.__add__", false]], "__add__() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.__add__", false]], "__add__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__add__", false]], "__add__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__add__", false]], "__add__() (algopy.op.ec method)": [[5, "algopy.op.EC.__add__", false]], "__add__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__add__", false]], "__add__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__add__", false]], "__add__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__add__", false]], "__add__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__add__", false]], "__add__() (algopy.string method)": [[1, "algopy.String.__add__", false]], "__add__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__add__", false]], "__add__() (algopy.uint64 method)": [[1, "algopy.UInt64.__add__", false]], "__and__() (algopy.biguint method)": [[1, "algopy.BigUInt.__and__", false]], "__and__() (algopy.bytes method)": [[1, "algopy.Bytes.__and__", false]], "__and__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__and__", false]], "__and__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__and__", false]], "__and__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__and__", false]], "__and__() (algopy.uint64 method)": [[1, "algopy.UInt64.__and__", false]], "__bool__() (algopy.account method)": [[1, "algopy.Account.__bool__", false]], "__bool__() (algopy.application method)": [[1, "algopy.Application.__bool__", false]], "__bool__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__bool__", false]], "__bool__() (algopy.arc4.bigufixednxm method)": [[2, "algopy.arc4.BigUFixedNxM.__bool__", false]], "__bool__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__bool__", false]], "__bool__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__bool__", false]], "__bool__() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.__bool__", false]], "__bool__() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.__bool__", false]], "__bool__() (algopy.arc4.string method)": [[2, "algopy.arc4.String.__bool__", false]], "__bool__() (algopy.arc4.ufixednxm method)": [[2, "algopy.arc4.UFixedNxM.__bool__", false]], "__bool__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__bool__", false]], "__bool__() (algopy.array method)": [[1, "algopy.Array.__bool__", false]], "__bool__() (algopy.asset method)": [[1, "algopy.Asset.__bool__", false]], "__bool__() (algopy.biguint method)": [[1, "algopy.BigUInt.__bool__", false]], "__bool__() (algopy.box method)": [[1, "algopy.Box.__bool__", false]], "__bool__() (algopy.boxref method)": [[1, "algopy.BoxRef.__bool__", false]], "__bool__() (algopy.bytes method)": [[1, "algopy.Bytes.__bool__", false]], "__bool__() (algopy.globalstate method)": [[1, "algopy.GlobalState.__bool__", false]], "__bool__() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.__bool__", false]], "__bool__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__bool__", false]], "__bool__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__bool__", false]], "__bool__() (algopy.string method)": [[1, "algopy.String.__bool__", false]], "__bool__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__bool__", false]], "__bool__() (algopy.uint64 method)": [[1, "algopy.UInt64.__bool__", false]], "__contains__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__contains__", false]], "__contains__() (algopy.boxmap method)": [[1, "algopy.BoxMap.__contains__", false]], "__contains__() (algopy.bytes method)": [[1, "algopy.Bytes.__contains__", false]], "__contains__() (algopy.localstate method)": [[1, "algopy.LocalState.__contains__", false]], "__contains__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__contains__", false]], "__contains__() (algopy.op.ec method)": [[5, "algopy.op.EC.__contains__", false]], "__contains__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__contains__", false]], "__contains__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__contains__", false]], "__contains__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__contains__", false]], "__contains__() (algopy.string method)": [[1, "algopy.String.__contains__", false]], "__delattr__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__delattr__", false]], "__delattr__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__delattr__", false]], "__delattr__() (algopy.op.ec method)": [[5, "algopy.op.EC.__delattr__", false]], "__delattr__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__delattr__", false]], "__delattr__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__delattr__", false]], "__delattr__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__delattr__", false]], "__delitem__() (algopy.boxmap method)": [[1, "algopy.BoxMap.__delitem__", false]], "__delitem__() (algopy.localstate method)": [[1, "algopy.LocalState.__delitem__", false]], "__dir__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__dir__", false]], "__dir__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__dir__", false]], "__dir__() (algopy.op.ec method)": [[5, "algopy.op.EC.__dir__", false]], "__dir__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__dir__", false]], "__dir__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__dir__", false]], "__dir__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__dir__", false]], "__eq__() (algopy.account method)": [[1, "algopy.Account.__eq__", false]], "__eq__() (algopy.application method)": [[1, "algopy.Application.__eq__", false]], "__eq__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__eq__", false]], "__eq__() (algopy.arc4.bigufixednxm method)": [[2, "algopy.arc4.BigUFixedNxM.__eq__", false]], "__eq__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__eq__", false]], "__eq__() (algopy.arc4.bool method)": [[2, "algopy.arc4.Bool.__eq__", false]], "__eq__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__eq__", false]], "__eq__() (algopy.arc4.string method)": [[2, "algopy.arc4.String.__eq__", false]], "__eq__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__eq__", false]], "__eq__() (algopy.arc4.ufixednxm method)": [[2, "algopy.arc4.UFixedNxM.__eq__", false]], "__eq__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__eq__", false]], "__eq__() (algopy.asset method)": [[1, "algopy.Asset.__eq__", false]], "__eq__() (algopy.biguint method)": [[1, "algopy.BigUInt.__eq__", false]], "__eq__() (algopy.bytes method)": [[1, "algopy.Bytes.__eq__", false]], "__eq__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__eq__", false]], "__eq__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__eq__", false]], "__eq__() (algopy.op.ec method)": [[5, "algopy.op.EC.__eq__", false]], "__eq__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__eq__", false]], "__eq__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__eq__", false]], "__eq__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__eq__", false]], "__eq__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__eq__", false]], "__eq__() (algopy.string method)": [[1, "algopy.String.__eq__", false]], "__eq__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__eq__", false]], "__eq__() (algopy.uint64 method)": [[1, "algopy.UInt64.__eq__", false]], "__floordiv__() (algopy.biguint method)": [[1, "algopy.BigUInt.__floordiv__", false]], "__floordiv__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__floordiv__", false]], "__floordiv__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__floordiv__", false]], "__floordiv__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__floordiv__", false]], "__floordiv__() (algopy.uint64 method)": [[1, "algopy.UInt64.__floordiv__", false]], "__format__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__format__", false]], "__format__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__format__", false]], "__format__() (algopy.op.ec method)": [[5, "algopy.op.EC.__format__", false]], "__format__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__format__", false]], "__format__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__format__", false]], "__format__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__format__", false]], "__ge__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__ge__", false]], "__ge__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__ge__", false]], "__ge__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__ge__", false]], "__ge__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__ge__", false]], "__ge__() (algopy.biguint method)": [[1, "algopy.BigUInt.__ge__", false]], "__ge__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ge__", false]], "__ge__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__ge__", false]], "__ge__() (algopy.op.ec method)": [[5, "algopy.op.EC.__ge__", false]], "__ge__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__ge__", false]], "__ge__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__ge__", false]], "__ge__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__ge__", false]], "__ge__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ge__", false]], "__ge__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ge__", false]], "__ge__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ge__", false]], "__getattribute__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__getattribute__", false]], "__getattribute__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__getattribute__", false]], "__getattribute__() (algopy.op.ec method)": [[5, "algopy.op.EC.__getattribute__", false]], "__getattribute__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__getattribute__", false]], "__getattribute__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__getattribute__", false]], "__getattribute__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__getattribute__", false]], "__getitem__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__getitem__", false]], "__getitem__() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.__getitem__", false]], "__getitem__() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.__getitem__", false]], "__getitem__() (algopy.arc4.staticarray method)": [[2, "algopy.arc4.StaticArray.__getitem__", false]], "__getitem__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__getitem__", false]], "__getitem__() (algopy.array method)": [[1, "algopy.Array.__getitem__", false]], "__getitem__() (algopy.boxmap method)": [[1, "algopy.BoxMap.__getitem__", false]], "__getitem__() (algopy.bytes method)": [[1, "algopy.Bytes.__getitem__", false]], "__getitem__() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.__getitem__", false]], "__getitem__() (algopy.localstate method)": [[1, "algopy.LocalState.__getitem__", false]], "__getitem__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__getitem__", false]], "__getitem__() (algopy.op.ec method)": [[5, "algopy.op.EC.__getitem__", false]], "__getitem__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__getitem__", false]], "__getitem__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__getitem__", false]], "__getitem__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__getitem__", false]], "__getstate__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__getstate__", false]], "__getstate__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__getstate__", false]], "__getstate__() (algopy.op.ec method)": [[5, "algopy.op.EC.__getstate__", false]], "__getstate__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__getstate__", false]], "__getstate__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__getstate__", false]], "__getstate__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__getstate__", false]], "__gt__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__gt__", false]], "__gt__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__gt__", false]], "__gt__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__gt__", false]], "__gt__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__gt__", false]], "__gt__() (algopy.biguint method)": [[1, "algopy.BigUInt.__gt__", false]], "__gt__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__gt__", false]], "__gt__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__gt__", false]], "__gt__() (algopy.op.ec method)": [[5, "algopy.op.EC.__gt__", false]], "__gt__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__gt__", false]], "__gt__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__gt__", false]], "__gt__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__gt__", false]], "__gt__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__gt__", false]], "__gt__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__gt__", false]], "__gt__() (algopy.uint64 method)": [[1, "algopy.UInt64.__gt__", false]], "__hash__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__hash__", false]], "__hash__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__hash__", false]], "__hash__() (algopy.op.ec method)": [[5, "algopy.op.EC.__hash__", false]], "__hash__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__hash__", false]], "__hash__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__hash__", false]], "__hash__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__hash__", false]], "__iadd__() (algopy.biguint method)": [[1, "algopy.BigUInt.__iadd__", false]], "__iadd__() (algopy.bytes method)": [[1, "algopy.Bytes.__iadd__", false]], "__iadd__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__iadd__", false]], "__iadd__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__iadd__", false]], "__iadd__() (algopy.string method)": [[1, "algopy.String.__iadd__", false]], "__iadd__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__iadd__", false]], "__iadd__() (algopy.uint64 method)": [[1, "algopy.UInt64.__iadd__", false]], "__iand__() (algopy.biguint method)": [[1, "algopy.BigUInt.__iand__", false]], "__iand__() (algopy.bytes method)": [[1, "algopy.Bytes.__iand__", false]], "__iand__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__iand__", false]], "__iand__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__iand__", false]], "__iand__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__iand__", false]], "__iand__() (algopy.uint64 method)": [[1, "algopy.UInt64.__iand__", false]], "__ifloordiv__() (algopy.biguint method)": [[1, "algopy.BigUInt.__ifloordiv__", false]], "__ifloordiv__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ifloordiv__", false]], "__ifloordiv__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ifloordiv__", false]], "__ifloordiv__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ifloordiv__", false]], "__ifloordiv__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ifloordiv__", false]], "__ilshift__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ilshift__", false]], "__ilshift__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ilshift__", false]], "__ilshift__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ilshift__", false]], "__ilshift__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ilshift__", false]], "__imod__() (algopy.biguint method)": [[1, "algopy.BigUInt.__imod__", false]], "__imod__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__imod__", false]], "__imod__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__imod__", false]], "__imod__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__imod__", false]], "__imod__() (algopy.uint64 method)": [[1, "algopy.UInt64.__imod__", false]], "__imul__() (algopy.biguint method)": [[1, "algopy.BigUInt.__imul__", false]], "__imul__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__imul__", false]], "__imul__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__imul__", false]], "__imul__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__imul__", false]], "__imul__() (algopy.uint64 method)": [[1, "algopy.UInt64.__imul__", false]], "__index__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__index__", false]], "__index__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__index__", false]], "__index__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__index__", false]], "__index__() (algopy.uint64 method)": [[1, "algopy.UInt64.__index__", false]], "__init_subclass__() (algopy.arc4.arc4contract class method)": [[2, "algopy.arc4.ARC4Contract.__init_subclass__", false]], "__init_subclass__() (algopy.arc4contract class method)": [[1, "algopy.ARC4Contract.__init_subclass__", false]], "__init_subclass__() (algopy.contract class method)": [[1, "algopy.Contract.__init_subclass__", false]], "__invert__() (algopy.bytes method)": [[1, "algopy.Bytes.__invert__", false]], "__invert__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__invert__", false]], "__invert__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__invert__", false]], "__invert__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__invert__", false]], "__invert__() (algopy.uint64 method)": [[1, "algopy.UInt64.__invert__", false]], "__ior__() (algopy.biguint method)": [[1, "algopy.BigUInt.__ior__", false]], "__ior__() (algopy.bytes method)": [[1, "algopy.Bytes.__ior__", false]], "__ior__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ior__", false]], "__ior__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ior__", false]], "__ior__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ior__", false]], "__ior__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ior__", false]], "__ipow__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ipow__", false]], "__ipow__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ipow__", false]], "__ipow__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ipow__", false]], "__ipow__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ipow__", false]], "__irshift__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__irshift__", false]], "__irshift__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__irshift__", false]], "__irshift__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__irshift__", false]], "__irshift__() (algopy.uint64 method)": [[1, "algopy.UInt64.__irshift__", false]], "__isub__() (algopy.biguint method)": [[1, "algopy.BigUInt.__isub__", false]], "__isub__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__isub__", false]], "__isub__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__isub__", false]], "__isub__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__isub__", false]], "__isub__() (algopy.uint64 method)": [[1, "algopy.UInt64.__isub__", false]], "__iter__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__iter__", false]], "__iter__() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.__iter__", false]], "__iter__() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.__iter__", false]], "__iter__() (algopy.arc4.staticarray method)": [[2, "algopy.arc4.StaticArray.__iter__", false]], "__iter__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__iter__", false]], "__iter__() (algopy.array method)": [[1, "algopy.Array.__iter__", false]], "__iter__() (algopy.bytes method)": [[1, "algopy.Bytes.__iter__", false]], "__iter__() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.__iter__", false]], "__iter__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__iter__", false]], "__iter__() (algopy.op.ec method)": [[5, "algopy.op.EC.__iter__", false]], "__iter__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__iter__", false]], "__iter__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__iter__", false]], "__iter__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__iter__", false]], "__ixor__() (algopy.biguint method)": [[1, "algopy.BigUInt.__ixor__", false]], "__ixor__() (algopy.bytes method)": [[1, "algopy.Bytes.__ixor__", false]], "__ixor__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ixor__", false]], "__ixor__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ixor__", false]], "__ixor__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ixor__", false]], "__ixor__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ixor__", false]], "__le__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__le__", false]], "__le__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__le__", false]], "__le__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__le__", false]], "__le__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__le__", false]], "__le__() (algopy.biguint method)": [[1, "algopy.BigUInt.__le__", false]], "__le__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__le__", false]], "__le__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__le__", false]], "__le__() (algopy.op.ec method)": [[5, "algopy.op.EC.__le__", false]], "__le__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__le__", false]], "__le__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__le__", false]], "__le__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__le__", false]], "__le__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__le__", false]], "__le__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__le__", false]], "__le__() (algopy.uint64 method)": [[1, "algopy.UInt64.__le__", false]], "__len__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__len__", false]], "__len__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__len__", false]], "__len__() (algopy.op.ec method)": [[5, "algopy.op.EC.__len__", false]], "__len__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__len__", false]], "__len__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__len__", false]], "__len__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__len__", false]], "__lshift__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__lshift__", false]], "__lshift__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__lshift__", false]], "__lshift__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__lshift__", false]], "__lshift__() (algopy.uint64 method)": [[1, "algopy.UInt64.__lshift__", false]], "__lt__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__lt__", false]], "__lt__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__lt__", false]], "__lt__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__lt__", false]], "__lt__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__lt__", false]], "__lt__() (algopy.biguint method)": [[1, "algopy.BigUInt.__lt__", false]], "__lt__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__lt__", false]], "__lt__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__lt__", false]], "__lt__() (algopy.op.ec method)": [[5, "algopy.op.EC.__lt__", false]], "__lt__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__lt__", false]], "__lt__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__lt__", false]], "__lt__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__lt__", false]], "__lt__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__lt__", false]], "__lt__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__lt__", false]], "__lt__() (algopy.uint64 method)": [[1, "algopy.UInt64.__lt__", false]], "__mod__() (algopy.biguint method)": [[1, "algopy.BigUInt.__mod__", false]], "__mod__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__mod__", false]], "__mod__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__mod__", false]], "__mod__() (algopy.op.ec method)": [[5, "algopy.op.EC.__mod__", false]], "__mod__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__mod__", false]], "__mod__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__mod__", false]], "__mod__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__mod__", false]], "__mod__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__mod__", false]], "__mod__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__mod__", false]], "__mod__() (algopy.uint64 method)": [[1, "algopy.UInt64.__mod__", false]], "__mul__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__mul__", false]], "__mul__() (algopy.biguint method)": [[1, "algopy.BigUInt.__mul__", false]], "__mul__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__mul__", false]], "__mul__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__mul__", false]], "__mul__() (algopy.op.ec method)": [[5, "algopy.op.EC.__mul__", false]], "__mul__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__mul__", false]], "__mul__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__mul__", false]], "__mul__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__mul__", false]], "__mul__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__mul__", false]], "__mul__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__mul__", false]], "__mul__() (algopy.uint64 method)": [[1, "algopy.UInt64.__mul__", false]], "__ne__() (algopy.account method)": [[1, "algopy.Account.__ne__", false]], "__ne__() (algopy.application method)": [[1, "algopy.Application.__ne__", false]], "__ne__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__ne__", false]], "__ne__() (algopy.arc4.biguintn method)": [[2, "algopy.arc4.BigUIntN.__ne__", false]], "__ne__() (algopy.arc4.bool method)": [[2, "algopy.arc4.Bool.__ne__", false]], "__ne__() (algopy.arc4.byte method)": [[2, "algopy.arc4.Byte.__ne__", false]], "__ne__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__ne__", false]], "__ne__() (algopy.arc4.uintn method)": [[2, "algopy.arc4.UIntN.__ne__", false]], "__ne__() (algopy.asset method)": [[1, "algopy.Asset.__ne__", false]], "__ne__() (algopy.biguint method)": [[1, "algopy.BigUInt.__ne__", false]], "__ne__() (algopy.bytes method)": [[1, "algopy.Bytes.__ne__", false]], "__ne__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ne__", false]], "__ne__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__ne__", false]], "__ne__() (algopy.op.ec method)": [[5, "algopy.op.EC.__ne__", false]], "__ne__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__ne__", false]], "__ne__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__ne__", false]], "__ne__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__ne__", false]], "__ne__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ne__", false]], "__ne__() (algopy.string method)": [[1, "algopy.String.__ne__", false]], "__ne__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ne__", false]], "__ne__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ne__", false]], "__new__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__new__", false]], "__new__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__new__", false]], "__new__() (algopy.op.ec method)": [[5, "algopy.op.EC.__new__", false]], "__new__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__new__", false]], "__new__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__new__", false]], "__new__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__new__", false]], "__or__() (algopy.biguint method)": [[1, "algopy.BigUInt.__or__", false]], "__or__() (algopy.bytes method)": [[1, "algopy.Bytes.__or__", false]], "__or__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__or__", false]], "__or__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__or__", false]], "__or__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__or__", false]], "__or__() (algopy.uint64 method)": [[1, "algopy.UInt64.__or__", false]], "__pos__() (algopy.biguint method)": [[1, "algopy.BigUInt.__pos__", false]], "__pos__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__pos__", false]], "__pos__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__pos__", false]], "__pos__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__pos__", false]], "__pos__() (algopy.uint64 method)": [[1, "algopy.UInt64.__pos__", false]], "__pow__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__pow__", false]], "__pow__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__pow__", false]], "__pow__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__pow__", false]], "__pow__() (algopy.uint64 method)": [[1, "algopy.UInt64.__pow__", false]], "__radd__() (algopy.biguint method)": [[1, "algopy.BigUInt.__radd__", false]], "__radd__() (algopy.bytes method)": [[1, "algopy.Bytes.__radd__", false]], "__radd__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__radd__", false]], "__radd__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__radd__", false]], "__radd__() (algopy.string method)": [[1, "algopy.String.__radd__", false]], "__radd__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__radd__", false]], "__radd__() (algopy.uint64 method)": [[1, "algopy.UInt64.__radd__", false]], "__rand__() (algopy.biguint method)": [[1, "algopy.BigUInt.__rand__", false]], "__rand__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rand__", false]], "__rand__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rand__", false]], "__rand__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rand__", false]], "__rand__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rand__", false]], "__reduce__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__reduce__", false]], "__reduce__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__reduce__", false]], "__reduce__() (algopy.op.ec method)": [[5, "algopy.op.EC.__reduce__", false]], "__reduce__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__reduce__", false]], "__reduce__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__reduce__", false]], "__reduce__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__reduce__", false]], "__reduce_ex__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__reduce_ex__", false]], "__reduce_ex__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__reduce_ex__", false]], "__reduce_ex__() (algopy.op.ec method)": [[5, "algopy.op.EC.__reduce_ex__", false]], "__reduce_ex__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__reduce_ex__", false]], "__reduce_ex__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__reduce_ex__", false]], "__reduce_ex__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__reduce_ex__", false]], "__repr__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__repr__", false]], "__repr__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__repr__", false]], "__repr__() (algopy.op.ec method)": [[5, "algopy.op.EC.__repr__", false]], "__repr__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__repr__", false]], "__repr__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__repr__", false]], "__repr__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__repr__", false]], "__reversed__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__reversed__", false]], "__reversed__() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.__reversed__", false]], "__reversed__() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.__reversed__", false]], "__reversed__() (algopy.arc4.staticarray method)": [[2, "algopy.arc4.StaticArray.__reversed__", false]], "__reversed__() (algopy.array method)": [[1, "algopy.Array.__reversed__", false]], "__reversed__() (algopy.bytes method)": [[1, "algopy.Bytes.__reversed__", false]], "__reversed__() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.__reversed__", false]], "__rfloordiv__() (algopy.biguint method)": [[1, "algopy.BigUInt.__rfloordiv__", false]], "__rfloordiv__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rfloordiv__", false]], "__rfloordiv__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rfloordiv__", false]], "__rfloordiv__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rfloordiv__", false]], "__rfloordiv__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rfloordiv__", false]], "__rlshift__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rlshift__", false]], "__rlshift__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rlshift__", false]], "__rlshift__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rlshift__", false]], "__rlshift__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rlshift__", false]], "__rmod__() (algopy.biguint method)": [[1, "algopy.BigUInt.__rmod__", false]], "__rmod__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rmod__", false]], "__rmod__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__rmod__", false]], "__rmod__() (algopy.op.ec method)": [[5, "algopy.op.EC.__rmod__", false]], "__rmod__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__rmod__", false]], "__rmod__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__rmod__", false]], "__rmod__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__rmod__", false]], "__rmod__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rmod__", false]], "__rmod__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rmod__", false]], "__rmod__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rmod__", false]], "__rmul__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__rmul__", false]], "__rmul__() (algopy.biguint method)": [[1, "algopy.BigUInt.__rmul__", false]], "__rmul__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rmul__", false]], "__rmul__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__rmul__", false]], "__rmul__() (algopy.op.ec method)": [[5, "algopy.op.EC.__rmul__", false]], "__rmul__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__rmul__", false]], "__rmul__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__rmul__", false]], "__rmul__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__rmul__", false]], "__rmul__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rmul__", false]], "__rmul__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rmul__", false]], "__rmul__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rmul__", false]], "__ror__() (algopy.biguint method)": [[1, "algopy.BigUInt.__ror__", false]], "__ror__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__ror__", false]], "__ror__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__ror__", false]], "__ror__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__ror__", false]], "__ror__() (algopy.uint64 method)": [[1, "algopy.UInt64.__ror__", false]], "__rpow__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rpow__", false]], "__rpow__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rpow__", false]], "__rpow__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rpow__", false]], "__rpow__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rpow__", false]], "__rrshift__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rrshift__", false]], "__rrshift__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rrshift__", false]], "__rrshift__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rrshift__", false]], "__rrshift__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rrshift__", false]], "__rshift__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rshift__", false]], "__rshift__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rshift__", false]], "__rshift__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rshift__", false]], "__rshift__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rshift__", false]], "__rsub__() (algopy.biguint method)": [[1, "algopy.BigUInt.__rsub__", false]], "__rsub__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rsub__", false]], "__rsub__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rsub__", false]], "__rsub__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rsub__", false]], "__rsub__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rsub__", false]], "__rxor__() (algopy.biguint method)": [[1, "algopy.BigUInt.__rxor__", false]], "__rxor__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__rxor__", false]], "__rxor__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__rxor__", false]], "__rxor__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__rxor__", false]], "__rxor__() (algopy.uint64 method)": [[1, "algopy.UInt64.__rxor__", false]], "__setattr__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__setattr__", false]], "__setattr__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__setattr__", false]], "__setattr__() (algopy.op.ec method)": [[5, "algopy.op.EC.__setattr__", false]], "__setattr__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__setattr__", false]], "__setattr__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__setattr__", false]], "__setattr__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__setattr__", false]], "__setitem__() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.__setitem__", false]], "__setitem__() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.__setitem__", false]], "__setitem__() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.__setitem__", false]], "__setitem__() (algopy.arc4.staticarray method)": [[2, "algopy.arc4.StaticArray.__setitem__", false]], "__setitem__() (algopy.array method)": [[1, "algopy.Array.__setitem__", false]], "__setitem__() (algopy.boxmap method)": [[1, "algopy.BoxMap.__setitem__", false]], "__setitem__() (algopy.localstate method)": [[1, "algopy.LocalState.__setitem__", false]], "__sizeof__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__sizeof__", false]], "__sizeof__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__sizeof__", false]], "__sizeof__() (algopy.op.ec method)": [[5, "algopy.op.EC.__sizeof__", false]], "__sizeof__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__sizeof__", false]], "__sizeof__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__sizeof__", false]], "__sizeof__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__sizeof__", false]], "__str__() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.__str__", false]], "__str__() (algopy.op.base64 method)": [[5, "algopy.op.Base64.__str__", false]], "__str__() (algopy.op.ec method)": [[5, "algopy.op.EC.__str__", false]], "__str__() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.__str__", false]], "__str__() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.__str__", false]], "__str__() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.__str__", false]], "__sub__() (algopy.biguint method)": [[1, "algopy.BigUInt.__sub__", false]], "__sub__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__sub__", false]], "__sub__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__sub__", false]], "__sub__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__sub__", false]], "__sub__() (algopy.uint64 method)": [[1, "algopy.UInt64.__sub__", false]], "__xor__() (algopy.biguint method)": [[1, "algopy.BigUInt.__xor__", false]], "__xor__() (algopy.bytes method)": [[1, "algopy.Bytes.__xor__", false]], "__xor__() (algopy.oncompleteaction method)": [[1, "algopy.OnCompleteAction.__xor__", false]], "__xor__() (algopy.opupfeesource method)": [[1, "algopy.OpUpFeeSource.__xor__", false]], "__xor__() (algopy.transactiontype method)": [[1, "algopy.TransactionType.__xor__", false]], "__xor__() (algopy.uint64 method)": [[1, "algopy.UInt64.__xor__", false]], "_replace() (algopy.arc4.struct method)": [[2, "algopy.arc4.Struct._replace", false]], "abi_call (in module algopy.arc4)": [[2, "algopy.arc4.abi_call", false]], "abimethod() (in module algopy.arc4)": [[2, "algopy.arc4.abimethod", false]], "account (algopy.compiledlogicsig attribute)": [[1, "algopy.CompiledLogicSig.account", false]], "account (class in algopy)": [[1, "algopy.Account", false]], "accounts() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.accounts", false]], "accounts() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.accounts", false]], "accounts() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.accounts", false]], "accounts() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.accounts", false]], "accounts() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.accounts", false]], "accounts() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.accounts", false]], "accounts() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.accounts", false]], "accounts() (algopy.op.txn static method)": [[5, "algopy.op.Txn.accounts", false]], "accounts() (algopy.txn static method)": [[1, "algopy.Txn.accounts", false]], "acct_auth_addr() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_auth_addr", false]], "acct_balance() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_balance", false]], "acct_incentive_eligible() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_incentive_eligible", false]], "acct_last_heartbeat() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_last_heartbeat", false]], "acct_last_proposed() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_last_proposed", false]], "acct_min_balance() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_min_balance", false]], "acct_total_apps_created() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_apps_created", false]], "acct_total_apps_opted_in() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_apps_opted_in", false]], "acct_total_assets() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_assets", false]], "acct_total_assets_created() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_assets_created", false]], "acct_total_box_bytes() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_box_bytes", false]], "acct_total_boxes() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_boxes", false]], "acct_total_extra_app_pages() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_extra_app_pages", false]], "acct_total_num_byte_slice() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_num_byte_slice", false]], "acct_total_num_uint() (algopy.op.acctparamsget static method)": [[5, "algopy.op.AcctParamsGet.acct_total_num_uint", false]], "acctparamsget (class in algopy.op)": [[5, "algopy.op.AcctParamsGet", false]], "add() (algopy.op.ellipticcurve static method)": [[5, "algopy.op.EllipticCurve.add", false]], "address (algopy.application property)": [[1, "algopy.Application.address", false]], "address (class in algopy.arc4)": [[2, "algopy.arc4.Address", false]], "addw() (in module algopy.op)": [[5, "algopy.op.addw", false]], "algopy": [[1, "module-algopy", false]], "algopy.arc4": [[2, "module-algopy.arc4", false]], "algopy.gtxn": [[3, "module-algopy.gtxn", false]], "algopy.itxn": [[4, "module-algopy.itxn", false]], "algopy.op": [[5, "module-algopy.op", false]], "amount (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.amount", false]], "amount (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.amount", false]], "amount (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.amount", false]], "amount (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.amount", false]], "amount (algopy.op.txn attribute)": [[5, "algopy.op.Txn.amount", false]], "amount (algopy.txn attribute)": [[1, "algopy.Txn.amount", false]], "amount() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.amount", false]], "amount() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.amount", false]], "amount() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.amount", false]], "any (algopy.opupfeesource attribute)": [[1, "algopy.OpUpFeeSource.Any", false]], "app_address() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_address", false]], "app_approval_program() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_approval_program", false]], "app_args() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.app_args", false]], "app_args() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.app_args", false]], "app_args() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.app_args", false]], "app_args() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.app_args", false]], "app_clear_state_program() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_clear_state_program", false]], "app_creator() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_creator", false]], "app_extra_program_pages() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_extra_program_pages", false]], "app_global_num_byte_slice() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_global_num_byte_slice", false]], "app_global_num_uint() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_global_num_uint", false]], "app_id (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.app_id", false]], "app_id (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.app_id", false]], "app_id (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.app_id", false]], "app_id (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.app_id", false]], "app_local_num_byte_slice() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_local_num_byte_slice", false]], "app_local_num_uint() (algopy.op.appparamsget static method)": [[5, "algopy.op.AppParamsGet.app_local_num_uint", false]], "app_opted_in() (in module algopy.op)": [[5, "algopy.op.app_opted_in", false]], "appaccount (algopy.opupfeesource attribute)": [[1, "algopy.OpUpFeeSource.AppAccount", false]], "append() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.append", false]], "append() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.append", false]], "append() (algopy.array method)": [[1, "algopy.Array.append", false]], "append() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.append", false]], "appglobal (class in algopy.op)": [[5, "algopy.op.AppGlobal", false]], "application (class in algopy)": [[1, "algopy.Application", false]], "application_args() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.application_args", false]], "application_args() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.application_args", false]], "application_args() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.application_args", false]], "application_args() (algopy.op.txn static method)": [[5, "algopy.op.Txn.application_args", false]], "application_args() (algopy.txn static method)": [[1, "algopy.Txn.application_args", false]], "application_id (algopy.op.txn attribute)": [[5, "algopy.op.Txn.application_id", false]], "application_id (algopy.txn attribute)": [[1, "algopy.Txn.application_id", false]], "application_id() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.application_id", false]], "application_id() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.application_id", false]], "application_id() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.application_id", false]], "applicationcall (algopy.transactiontype attribute)": [[1, "algopy.TransactionType.ApplicationCall", false]], "applicationcall (class in algopy.itxn)": [[4, "algopy.itxn.ApplicationCall", false]], "applicationcallinnertransaction (class in algopy.itxn)": [[4, "algopy.itxn.ApplicationCallInnerTransaction", false]], "applicationcalltransaction (class in algopy.gtxn)": [[3, "algopy.gtxn.ApplicationCallTransaction", false]], "applications() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.applications", false]], "applications() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.applications", false]], "applications() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.applications", false]], "applications() (algopy.op.txn static method)": [[5, "algopy.op.Txn.applications", false]], "applications() (algopy.txn static method)": [[1, "algopy.Txn.applications", false]], "applocal (class in algopy.op)": [[5, "algopy.op.AppLocal", false]], "appparamsget (class in algopy.op)": [[5, "algopy.op.AppParamsGet", false]], "approval_program (algopy.application property)": [[1, "algopy.Application.approval_program", false]], "approval_program (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.approval_program", false]], "approval_program (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.approval_program", false]], "approval_program (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.approval_program", false]], "approval_program (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.approval_program", false]], "approval_program (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.approval_program", false]], "approval_program (algopy.op.txn attribute)": [[5, "algopy.op.Txn.approval_program", false]], "approval_program (algopy.txn attribute)": [[1, "algopy.Txn.approval_program", false]], "approval_program() (algopy.arc4.arc4contract method)": [[2, "algopy.arc4.ARC4Contract.approval_program", false]], "approval_program() (algopy.arc4contract method)": [[1, "algopy.ARC4Contract.approval_program", false]], "approval_program() (algopy.contract method)": [[1, "algopy.Contract.approval_program", false]], "approval_program() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.approval_program", false]], "approval_program() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.approval_program", false]], "approval_program() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.approval_program", false]], "approval_program_pages() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.approval_program_pages", false]], "approval_program_pages() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.approval_program_pages", false]], "approval_program_pages() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.approval_program_pages", false]], "approval_program_pages() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.approval_program_pages", false]], "approval_program_pages() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.approval_program_pages", false]], "approval_program_pages() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.approval_program_pages", false]], "approval_program_pages() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.approval_program_pages", false]], "approval_program_pages() (algopy.op.txn static method)": [[5, "algopy.op.Txn.approval_program_pages", false]], "approval_program_pages() (algopy.txn static method)": [[1, "algopy.Txn.approval_program_pages", false]], "apps() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.apps", false]], "apps() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.apps", false]], "apps() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.apps", false]], "apps() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.apps", false]], "arc4_create() (in module algopy.arc4)": [[2, "algopy.arc4.arc4_create", false]], "arc4_signature() (in module algopy.arc4)": [[2, "algopy.arc4.arc4_signature", false]], "arc4_update() (in module algopy.arc4)": [[2, "algopy.arc4.arc4_update", false]], "arc4client (class in algopy.arc4)": [[2, "algopy.arc4.ARC4Client", false]], "arc4contract (class in algopy)": [[1, "algopy.ARC4Contract", false]], "arc4contract (class in algopy.arc4)": [[2, "algopy.arc4.ARC4Contract", false]], "arg() (in module algopy.op)": [[5, "algopy.op.arg", false]], "array (class in algopy)": [[1, "algopy.Array", false]], "asset (class in algopy)": [[1, "algopy.Asset", false]], "asset_amount (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.asset_amount", false]], "asset_amount (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.asset_amount", false]], "asset_amount (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.asset_amount", false]], "asset_amount (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.asset_amount", false]], "asset_amount (algopy.op.txn attribute)": [[5, "algopy.op.Txn.asset_amount", false]], "asset_amount (algopy.txn attribute)": [[1, "algopy.Txn.asset_amount", false]], "asset_amount() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.asset_amount", false]], "asset_amount() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.asset_amount", false]], "asset_amount() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.asset_amount", false]], "asset_balance() (algopy.op.assetholdingget static method)": [[5, "algopy.op.AssetHoldingGet.asset_balance", false]], "asset_clawback() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_clawback", false]], "asset_close_to (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.asset_close_to", false]], "asset_close_to (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.asset_close_to", false]], "asset_close_to (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.asset_close_to", false]], "asset_close_to (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.asset_close_to", false]], "asset_close_to (algopy.op.txn attribute)": [[5, "algopy.op.Txn.asset_close_to", false]], "asset_close_to (algopy.txn attribute)": [[1, "algopy.Txn.asset_close_to", false]], "asset_close_to() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.asset_close_to", false]], "asset_close_to() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.asset_close_to", false]], "asset_close_to() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.asset_close_to", false]], "asset_create_min_balance (algopy.global attribute)": [[1, "algopy.Global.asset_create_min_balance", false]], "asset_create_min_balance (algopy.op.global attribute)": [[5, "algopy.op.Global.asset_create_min_balance", false]], "asset_creator() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_creator", false]], "asset_decimals() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_decimals", false]], "asset_default_frozen() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_default_frozen", false]], "asset_freeze() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_freeze", false]], "asset_frozen() (algopy.op.assetholdingget static method)": [[5, "algopy.op.AssetHoldingGet.asset_frozen", false]], "asset_manager() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_manager", false]], "asset_metadata_hash() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_metadata_hash", false]], "asset_name (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.asset_name", false]], "asset_name (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.asset_name", false]], "asset_name (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.asset_name", false]], "asset_name (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.asset_name", false]], "asset_name() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_name", false]], "asset_opt_in_min_balance (algopy.global attribute)": [[1, "algopy.Global.asset_opt_in_min_balance", false]], "asset_opt_in_min_balance (algopy.op.global attribute)": [[5, "algopy.op.Global.asset_opt_in_min_balance", false]], "asset_receiver (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.asset_receiver", false]], "asset_receiver (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.asset_receiver", false]], "asset_receiver (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.asset_receiver", false]], "asset_receiver (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.asset_receiver", false]], "asset_receiver (algopy.op.txn attribute)": [[5, "algopy.op.Txn.asset_receiver", false]], "asset_receiver (algopy.txn attribute)": [[1, "algopy.Txn.asset_receiver", false]], "asset_receiver() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.asset_receiver", false]], "asset_receiver() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.asset_receiver", false]], "asset_receiver() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.asset_receiver", false]], "asset_reserve() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_reserve", false]], "asset_sender (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.asset_sender", false]], "asset_sender (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.asset_sender", false]], "asset_sender (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.asset_sender", false]], "asset_sender (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.asset_sender", false]], "asset_sender (algopy.op.txn attribute)": [[5, "algopy.op.Txn.asset_sender", false]], "asset_sender (algopy.txn attribute)": [[1, "algopy.Txn.asset_sender", false]], "asset_sender() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.asset_sender", false]], "asset_sender() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.asset_sender", false]], "asset_sender() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.asset_sender", false]], "asset_total() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_total", false]], "asset_unit_name() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_unit_name", false]], "asset_url() (algopy.op.assetparamsget static method)": [[5, "algopy.op.AssetParamsGet.asset_url", false]], "assetconfig (algopy.transactiontype attribute)": [[1, "algopy.TransactionType.AssetConfig", false]], "assetconfig (class in algopy.itxn)": [[4, "algopy.itxn.AssetConfig", false]], "assetconfiginnertransaction (class in algopy.itxn)": [[4, "algopy.itxn.AssetConfigInnerTransaction", false]], "assetconfigtransaction (class in algopy.gtxn)": [[3, "algopy.gtxn.AssetConfigTransaction", false]], "assetfreeze (algopy.transactiontype attribute)": [[1, "algopy.TransactionType.AssetFreeze", false]], "assetfreeze (class in algopy.itxn)": [[4, "algopy.itxn.AssetFreeze", false]], "assetfreezeinnertransaction (class in algopy.itxn)": [[4, "algopy.itxn.AssetFreezeInnerTransaction", false]], "assetfreezetransaction (class in algopy.gtxn)": [[3, "algopy.gtxn.AssetFreezeTransaction", false]], "assetholdingget (class in algopy.op)": [[5, "algopy.op.AssetHoldingGet", false]], "assetparamsget (class in algopy.op)": [[5, "algopy.op.AssetParamsGet", false]], "assets() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.assets", false]], "assets() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.assets", false]], "assets() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.assets", false]], "assets() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.assets", false]], "assets() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.assets", false]], "assets() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.assets", false]], "assets() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.assets", false]], "assets() (algopy.op.txn static method)": [[5, "algopy.op.Txn.assets", false]], "assets() (algopy.txn static method)": [[1, "algopy.Txn.assets", false]], "assettransfer (algopy.transactiontype attribute)": [[1, "algopy.TransactionType.AssetTransfer", false]], "assettransfer (class in algopy.itxn)": [[4, "algopy.itxn.AssetTransfer", false]], "assettransferinnertransaction (class in algopy.itxn)": [[4, "algopy.itxn.AssetTransferInnerTransaction", false]], "assettransfertransaction (class in algopy.gtxn)": [[3, "algopy.gtxn.AssetTransferTransaction", false]], "auth_address (algopy.account property)": [[1, "algopy.Account.auth_address", false]], "balance (algopy.account property)": [[1, "algopy.Account.balance", false]], "balance() (algopy.asset method)": [[1, "algopy.Asset.balance", false]], "balance() (in module algopy.op)": [[5, "algopy.op.balance", false]], "baremethod() (in module algopy.arc4)": [[2, "algopy.arc4.baremethod", false]], "base64 (class in algopy.op)": [[5, "algopy.op.Base64", false]], "base64_decode() (in module algopy.op)": [[5, "algopy.op.base64_decode", false]], "begin() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.begin", false]], "bigufixednxm (class in algopy.arc4)": [[2, "algopy.arc4.BigUFixedNxM", false]], "biguint (class in algopy)": [[1, "algopy.BigUInt", false]], "biguintn (class in algopy.arc4)": [[2, "algopy.arc4.BigUIntN", false]], "bitlen() (in module algopy.op)": [[5, "algopy.op.bitlen", false]], "blk_bonus() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_bonus", false]], "blk_branch() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_branch", false]], "blk_fee_sink() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_fee_sink", false]], "blk_fees_collected() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_fees_collected", false]], "blk_proposer() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_proposer", false]], "blk_proposer_payout() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_proposer_payout", false]], "blk_protocol() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_protocol", false]], "blk_seed() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_seed", false]], "blk_timestamp() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_timestamp", false]], "blk_txn_counter() (algopy.op.block static method)": [[5, "algopy.op.Block.blk_txn_counter", false]], "block (class in algopy.op)": [[5, "algopy.op.Block", false]], "bls12_381g1 (algopy.op.ec attribute)": [[5, "algopy.op.EC.BLS12_381g1", false]], "bls12_381g2 (algopy.op.ec attribute)": [[5, "algopy.op.EC.BLS12_381g2", false]], "bls12_381mp111 (algopy.op.mimcconfigurations attribute)": [[5, "algopy.op.MiMCConfigurations.BLS12_381Mp111", false]], "bn254g1 (algopy.op.ec attribute)": [[5, "algopy.op.EC.BN254g1", false]], "bn254g2 (algopy.op.ec attribute)": [[5, "algopy.op.EC.BN254g2", false]], "bn254mp110 (algopy.op.mimcconfigurations attribute)": [[5, "algopy.op.MiMCConfigurations.BN254Mp110", false]], "bool (class in algopy.arc4)": [[2, "algopy.arc4.Bool", false]], "box (class in algopy)": [[1, "algopy.Box", false]], "box (class in algopy.op)": [[5, "algopy.op.Box", false]], "boxmap (class in algopy)": [[1, "algopy.BoxMap", false]], "boxref (class in algopy)": [[1, "algopy.BoxRef", false]], "bsqrt() (in module algopy.op)": [[5, "algopy.op.bsqrt", false]], "btoi() (in module algopy.op)": [[5, "algopy.op.btoi", false]], "byte (class in algopy.arc4)": [[2, "algopy.arc4.Byte", false]], "bytes (algopy.account property)": [[1, "algopy.Account.bytes", false]], "bytes (algopy.arc4.address property)": [[2, "algopy.arc4.Address.bytes", false]], "bytes (algopy.arc4.bigufixednxm property)": [[2, "algopy.arc4.BigUFixedNxM.bytes", false]], "bytes (algopy.arc4.biguintn property)": [[2, "algopy.arc4.BigUIntN.bytes", false]], "bytes (algopy.arc4.bool property)": [[2, "algopy.arc4.Bool.bytes", false]], "bytes (algopy.arc4.byte property)": [[2, "algopy.arc4.Byte.bytes", false]], "bytes (algopy.arc4.dynamicarray property)": [[2, "algopy.arc4.DynamicArray.bytes", false]], "bytes (algopy.arc4.dynamicbytes property)": [[2, "algopy.arc4.DynamicBytes.bytes", false]], "bytes (algopy.arc4.staticarray property)": [[2, "algopy.arc4.StaticArray.bytes", false]], "bytes (algopy.arc4.string property)": [[2, "algopy.arc4.String.bytes", false]], "bytes (algopy.arc4.struct property)": [[2, "algopy.arc4.Struct.bytes", false]], "bytes (algopy.arc4.tuple property)": [[2, "algopy.arc4.Tuple.bytes", false]], "bytes (algopy.arc4.ufixednxm property)": [[2, "algopy.arc4.UFixedNxM.bytes", false]], "bytes (algopy.arc4.uintn property)": [[2, "algopy.arc4.UIntN.bytes", false]], "bytes (algopy.biguint property)": [[1, "algopy.BigUInt.bytes", false]], "bytes (algopy.bytesbacked property)": [[1, "algopy.BytesBacked.bytes", false]], "bytes (algopy.string property)": [[1, "algopy.String.bytes", false]], "bytes (class in algopy)": [[1, "algopy.Bytes", false]], "bytesbacked (class in algopy)": [[1, "algopy.BytesBacked", false]], "bzero() (in module algopy.op)": [[5, "algopy.op.bzero", false]], "caller_application_address (algopy.global attribute)": [[1, "algopy.Global.caller_application_address", false]], "caller_application_address (algopy.op.global attribute)": [[5, "algopy.op.Global.caller_application_address", false]], "caller_application_id (algopy.global attribute)": [[1, "algopy.Global.caller_application_id", false]], "caller_application_id (algopy.op.global attribute)": [[5, "algopy.op.Global.caller_application_id", false]], "capitalize() (algopy.op.base64 method)": [[5, "algopy.op.Base64.capitalize", false]], "capitalize() (algopy.op.ec method)": [[5, "algopy.op.EC.capitalize", false]], "capitalize() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.capitalize", false]], "capitalize() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.capitalize", false]], "capitalize() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.capitalize", false]], "casefold() (algopy.op.base64 method)": [[5, "algopy.op.Base64.casefold", false]], "casefold() (algopy.op.ec method)": [[5, "algopy.op.EC.casefold", false]], "casefold() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.casefold", false]], "casefold() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.casefold", false]], "casefold() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.casefold", false]], "center() (algopy.op.base64 method)": [[5, "algopy.op.Base64.center", false]], "center() (algopy.op.ec method)": [[5, "algopy.op.EC.center", false]], "center() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.center", false]], "center() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.center", false]], "center() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.center", false]], "clawback (algopy.asset property)": [[1, "algopy.Asset.clawback", false]], "clawback (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.clawback", false]], "clawback (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.clawback", false]], "clawback (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.clawback", false]], "clawback (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.clawback", false]], "clear_state_program (algopy.application property)": [[1, "algopy.Application.clear_state_program", false]], "clear_state_program (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.clear_state_program", false]], "clear_state_program (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.clear_state_program", false]], "clear_state_program (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.clear_state_program", false]], "clear_state_program (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.clear_state_program", false]], "clear_state_program (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.clear_state_program", false]], "clear_state_program (algopy.op.txn attribute)": [[5, "algopy.op.Txn.clear_state_program", false]], "clear_state_program (algopy.txn attribute)": [[1, "algopy.Txn.clear_state_program", false]], "clear_state_program() (algopy.arc4.arc4contract method)": [[2, "algopy.arc4.ARC4Contract.clear_state_program", false]], "clear_state_program() (algopy.arc4contract method)": [[1, "algopy.ARC4Contract.clear_state_program", false]], "clear_state_program() (algopy.contract method)": [[1, "algopy.Contract.clear_state_program", false]], "clear_state_program() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.clear_state_program", false]], "clear_state_program() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.clear_state_program", false]], "clear_state_program() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.clear_state_program", false]], "clear_state_program_pages() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.op.txn static method)": [[5, "algopy.op.Txn.clear_state_program_pages", false]], "clear_state_program_pages() (algopy.txn static method)": [[1, "algopy.Txn.clear_state_program_pages", false]], "clearstate (algopy.oncompleteaction attribute)": [[1, "algopy.OnCompleteAction.ClearState", false]], "close_remainder_to (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.close_remainder_to", false]], "close_remainder_to (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.close_remainder_to", false]], "close_remainder_to (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.close_remainder_to", false]], "close_remainder_to (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.close_remainder_to", false]], "close_remainder_to (algopy.op.txn attribute)": [[5, "algopy.op.Txn.close_remainder_to", false]], "close_remainder_to (algopy.txn attribute)": [[1, "algopy.Txn.close_remainder_to", false]], "close_remainder_to() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.close_remainder_to", false]], "close_remainder_to() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.close_remainder_to", false]], "close_remainder_to() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.close_remainder_to", false]], "closeout (algopy.oncompleteaction attribute)": [[1, "algopy.OnCompleteAction.CloseOut", false]], "compile_contract() (in module algopy)": [[1, "algopy.compile_contract", false]], "compile_logicsig() (in module algopy)": [[1, "algopy.compile_logicsig", false]], "compiledcontract (class in algopy)": [[1, "algopy.CompiledContract", false]], "compiledlogicsig (class in algopy)": [[1, "algopy.CompiledLogicSig", false]], "concat() (in module algopy.op)": [[5, "algopy.op.concat", false]], "config_asset (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.config_asset", false]], "config_asset (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.config_asset", false]], "config_asset (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.config_asset", false]], "config_asset (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.config_asset", false]], "config_asset (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset", false]], "config_asset (algopy.txn attribute)": [[1, "algopy.Txn.config_asset", false]], "config_asset() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset", false]], "config_asset() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset", false]], "config_asset() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset", false]], "config_asset_clawback (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_clawback", false]], "config_asset_clawback (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_clawback", false]], "config_asset_clawback() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_clawback", false]], "config_asset_clawback() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_clawback", false]], "config_asset_clawback() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_clawback", false]], "config_asset_decimals (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_decimals", false]], "config_asset_decimals (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_decimals", false]], "config_asset_decimals() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_decimals", false]], "config_asset_decimals() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_decimals", false]], "config_asset_decimals() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_decimals", false]], "config_asset_default_frozen (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_default_frozen", false]], "config_asset_default_frozen (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_default_frozen", false]], "config_asset_default_frozen() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_default_frozen", false]], "config_asset_default_frozen() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_default_frozen", false]], "config_asset_default_frozen() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_default_frozen", false]], "config_asset_freeze (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_freeze", false]], "config_asset_freeze (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_freeze", false]], "config_asset_freeze() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_freeze", false]], "config_asset_freeze() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_freeze", false]], "config_asset_freeze() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_freeze", false]], "config_asset_manager (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_manager", false]], "config_asset_manager (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_manager", false]], "config_asset_manager() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_manager", false]], "config_asset_manager() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_manager", false]], "config_asset_manager() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_manager", false]], "config_asset_metadata_hash (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_metadata_hash", false]], "config_asset_metadata_hash (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_metadata_hash", false]], "config_asset_metadata_hash() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_metadata_hash", false]], "config_asset_metadata_hash() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_metadata_hash", false]], "config_asset_metadata_hash() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_metadata_hash", false]], "config_asset_name (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_name", false]], "config_asset_name (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_name", false]], "config_asset_name() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_name", false]], "config_asset_name() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_name", false]], "config_asset_name() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_name", false]], "config_asset_reserve (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_reserve", false]], "config_asset_reserve (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_reserve", false]], "config_asset_reserve() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_reserve", false]], "config_asset_reserve() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_reserve", false]], "config_asset_reserve() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_reserve", false]], "config_asset_total (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_total", false]], "config_asset_total (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_total", false]], "config_asset_total() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_total", false]], "config_asset_total() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_total", false]], "config_asset_total() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_total", false]], "config_asset_unit_name (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_unit_name", false]], "config_asset_unit_name (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_unit_name", false]], "config_asset_unit_name() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_unit_name", false]], "config_asset_unit_name() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_unit_name", false]], "config_asset_unit_name() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_unit_name", false]], "config_asset_url (algopy.op.txn attribute)": [[5, "algopy.op.Txn.config_asset_url", false]], "config_asset_url (algopy.txn attribute)": [[1, "algopy.Txn.config_asset_url", false]], "config_asset_url() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.config_asset_url", false]], "config_asset_url() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.config_asset_url", false]], "config_asset_url() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.config_asset_url", false]], "contract (class in algopy)": [[1, "algopy.Contract", false]], "copy() (algopy.arc4.address method)": [[2, "algopy.arc4.Address.copy", false]], "copy() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.copy", false]], "copy() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.copy", false]], "copy() (algopy.arc4.staticarray method)": [[2, "algopy.arc4.StaticArray.copy", false]], "copy() (algopy.arc4.struct method)": [[2, "algopy.arc4.Struct.copy", false]], "copy() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.copy", false]], "copy() (algopy.array method)": [[1, "algopy.Array.copy", false]], "copy() (algopy.itxn.applicationcall method)": [[4, "algopy.itxn.ApplicationCall.copy", false]], "copy() (algopy.itxn.assetconfig method)": [[4, "algopy.itxn.AssetConfig.copy", false]], "copy() (algopy.itxn.assetfreeze method)": [[4, "algopy.itxn.AssetFreeze.copy", false]], "copy() (algopy.itxn.assettransfer method)": [[4, "algopy.itxn.AssetTransfer.copy", false]], "copy() (algopy.itxn.innertransaction method)": [[4, "algopy.itxn.InnerTransaction.copy", false]], "copy() (algopy.itxn.keyregistration method)": [[4, "algopy.itxn.KeyRegistration.copy", false]], "copy() (algopy.itxn.payment method)": [[4, "algopy.itxn.Payment.copy", false]], "count() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.count", false]], "count() (algopy.op.base64 method)": [[5, "algopy.op.Base64.count", false]], "count() (algopy.op.ec method)": [[5, "algopy.op.EC.count", false]], "count() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.count", false]], "count() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.count", false]], "count() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.count", false]], "create() (algopy.boxref method)": [[1, "algopy.BoxRef.create", false]], "create() (algopy.op.box static method)": [[5, "algopy.op.Box.create", false]], "created_app (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.created_app", false]], "created_app (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.created_app", false]], "created_app (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.created_app", false]], "created_app (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.created_app", false]], "created_application_id (algopy.op.txn attribute)": [[5, "algopy.op.Txn.created_application_id", false]], "created_application_id (algopy.txn attribute)": [[1, "algopy.Txn.created_application_id", false]], "created_application_id() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.created_application_id", false]], "created_application_id() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.created_application_id", false]], "created_application_id() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.created_application_id", false]], "created_asset (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.created_asset", false]], "created_asset (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.created_asset", false]], "created_asset (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.created_asset", false]], "created_asset (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.created_asset", false]], "created_asset_id (algopy.op.txn attribute)": [[5, "algopy.op.Txn.created_asset_id", false]], "created_asset_id (algopy.txn attribute)": [[1, "algopy.Txn.created_asset_id", false]], "created_asset_id() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.created_asset_id", false]], "created_asset_id() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.created_asset_id", false]], "created_asset_id() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.created_asset_id", false]], "creator (algopy.application property)": [[1, "algopy.Application.creator", false]], "creator (algopy.asset property)": [[1, "algopy.Asset.creator", false]], "creator_address (algopy.global attribute)": [[1, "algopy.Global.creator_address", false]], "creator_address (algopy.op.global attribute)": [[5, "algopy.op.Global.creator_address", false]], "current_application_address (algopy.global attribute)": [[1, "algopy.Global.current_application_address", false]], "current_application_address (algopy.op.global attribute)": [[5, "algopy.op.Global.current_application_address", false]], "current_application_id (algopy.global attribute)": [[1, "algopy.Global.current_application_id", false]], "current_application_id (algopy.op.global attribute)": [[5, "algopy.op.Global.current_application_id", false]], "decimals (algopy.asset property)": [[1, "algopy.Asset.decimals", false]], "decimals (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.decimals", false]], "decimals (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.decimals", false]], "decimals (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.decimals", false]], "decimals (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.decimals", false]], "default_frozen (algopy.asset property)": [[1, "algopy.Asset.default_frozen", false]], "default_frozen (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.default_frozen", false]], "default_frozen (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.default_frozen", false]], "default_frozen (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.default_frozen", false]], "default_frozen (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.default_frozen", false]], "delete() (algopy.boxref method)": [[1, "algopy.BoxRef.delete", false]], "delete() (algopy.op.appglobal static method)": [[5, "algopy.op.AppGlobal.delete", false]], "delete() (algopy.op.applocal static method)": [[5, "algopy.op.AppLocal.delete", false]], "delete() (algopy.op.box static method)": [[5, "algopy.op.Box.delete", false]], "deleteapplication (algopy.oncompleteaction attribute)": [[1, "algopy.OnCompleteAction.DeleteApplication", false]], "divmodw() (in module algopy.op)": [[5, "algopy.op.divmodw", false]], "divw() (in module algopy.op)": [[5, "algopy.op.divw", false]], "dynamicarray (class in algopy.arc4)": [[2, "algopy.arc4.DynamicArray", false]], "dynamicbytes (class in algopy.arc4)": [[2, "algopy.arc4.DynamicBytes", false]], "ec (class in algopy.op)": [[5, "algopy.op.EC", false]], "ecdsa (class in algopy.op)": [[5, "algopy.op.ECDSA", false]], "ecdsa_pk_decompress() (in module algopy.op)": [[5, "algopy.op.ecdsa_pk_decompress", false]], "ecdsa_pk_recover() (in module algopy.op)": [[5, "algopy.op.ecdsa_pk_recover", false]], "ecdsa_verify() (in module algopy.op)": [[5, "algopy.op.ecdsa_verify", false]], "ed25519verify() (in module algopy.op)": [[5, "algopy.op.ed25519verify", false]], "ed25519verify_bare() (in module algopy.op)": [[5, "algopy.op.ed25519verify_bare", false]], "ellipticcurve (class in algopy.op)": [[5, "algopy.op.EllipticCurve", false]], "emit() (in module algopy.arc4)": [[2, "algopy.arc4.emit", false]], "encode() (algopy.op.base64 method)": [[5, "algopy.op.Base64.encode", false]], "encode() (algopy.op.ec method)": [[5, "algopy.op.EC.encode", false]], "encode() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.encode", false]], "encode() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.encode", false]], "encode() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.encode", false]], "endswith() (algopy.op.base64 method)": [[5, "algopy.op.Base64.endswith", false]], "endswith() (algopy.op.ec method)": [[5, "algopy.op.EC.endswith", false]], "endswith() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.endswith", false]], "endswith() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.endswith", false]], "endswith() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.endswith", false]], "endswith() (algopy.string method)": [[1, "algopy.String.endswith", false]], "ensure_budget() (in module algopy)": [[1, "algopy.ensure_budget", false]], "err() (in module algopy.op)": [[5, "algopy.op.err", false]], "exit() (in module algopy.op)": [[5, "algopy.op.exit", false]], "exp() (in module algopy.op)": [[5, "algopy.op.exp", false]], "expandtabs() (algopy.op.base64 method)": [[5, "algopy.op.Base64.expandtabs", false]], "expandtabs() (algopy.op.ec method)": [[5, "algopy.op.EC.expandtabs", false]], "expandtabs() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.expandtabs", false]], "expandtabs() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.expandtabs", false]], "expandtabs() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.expandtabs", false]], "expw() (in module algopy.op)": [[5, "algopy.op.expw", false]], "extend() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.extend", false]], "extend() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.extend", false]], "extend() (algopy.array method)": [[1, "algopy.Array.extend", false]], "extra_program_pages (algopy.application property)": [[1, "algopy.Application.extra_program_pages", false]], "extra_program_pages (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.extra_program_pages", false]], "extra_program_pages (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.extra_program_pages", false]], "extra_program_pages (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.extra_program_pages", false]], "extra_program_pages (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.extra_program_pages", false]], "extra_program_pages (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.extra_program_pages", false]], "extra_program_pages (algopy.op.txn attribute)": [[5, "algopy.op.Txn.extra_program_pages", false]], "extra_program_pages (algopy.txn attribute)": [[1, "algopy.Txn.extra_program_pages", false]], "extra_program_pages() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.extra_program_pages", false]], "extra_program_pages() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.extra_program_pages", false]], "extra_program_pages() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.extra_program_pages", false]], "extract() (algopy.boxref method)": [[1, "algopy.BoxRef.extract", false]], "extract() (algopy.op.box static method)": [[5, "algopy.op.Box.extract", false]], "extract() (in module algopy.op)": [[5, "algopy.op.extract", false]], "extract_uint16() (in module algopy.op)": [[5, "algopy.op.extract_uint16", false]], "extract_uint32() (in module algopy.op)": [[5, "algopy.op.extract_uint32", false]], "extract_uint64() (in module algopy.op)": [[5, "algopy.op.extract_uint64", false]], "falcon_verify() (in module algopy.op)": [[5, "algopy.op.falcon_verify", false]], "fee (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.fee", false]], "fee (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.fee", false]], "fee (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.fee", false]], "fee (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.fee", false]], "fee (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.fee", false]], "fee (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.fee", false]], "fee (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.fee", false]], "fee (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.fee", false]], "fee (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.fee", false]], "fee (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.fee", false]], "fee (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.fee", false]], "fee (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.fee", false]], "fee (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.fee", false]], "fee (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.fee", false]], "fee (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.fee", false]], "fee (algopy.op.txn attribute)": [[5, "algopy.op.Txn.fee", false]], "fee (algopy.txn attribute)": [[1, "algopy.Txn.fee", false]], "fee() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.fee", false]], "fee() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.fee", false]], "fee() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.fee", false]], "find() (algopy.op.base64 method)": [[5, "algopy.op.Base64.find", false]], "find() (algopy.op.ec method)": [[5, "algopy.op.EC.find", false]], "find() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.find", false]], "find() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.find", false]], "find() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.find", false]], "first_valid (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.first_valid", false]], "first_valid (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.first_valid", false]], "first_valid (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.first_valid", false]], "first_valid (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.first_valid", false]], "first_valid (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.first_valid", false]], "first_valid (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.first_valid", false]], "first_valid (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.first_valid", false]], "first_valid (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.first_valid", false]], "first_valid (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.first_valid", false]], "first_valid (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.first_valid", false]], "first_valid (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.first_valid", false]], "first_valid (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.first_valid", false]], "first_valid (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.first_valid", false]], "first_valid (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.first_valid", false]], "first_valid (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.first_valid", false]], "first_valid (algopy.op.txn attribute)": [[5, "algopy.op.Txn.first_valid", false]], "first_valid (algopy.txn attribute)": [[1, "algopy.Txn.first_valid", false]], "first_valid() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.first_valid", false]], "first_valid() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.first_valid", false]], "first_valid() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.first_valid", false]], "first_valid_time (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.first_valid_time", false]], "first_valid_time (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.first_valid_time", false]], "first_valid_time (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.first_valid_time", false]], "first_valid_time (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.first_valid_time", false]], "first_valid_time (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.first_valid_time", false]], "first_valid_time (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.first_valid_time", false]], "first_valid_time (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.first_valid_time", false]], "first_valid_time (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.first_valid_time", false]], "first_valid_time (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.first_valid_time", false]], "first_valid_time (algopy.op.txn attribute)": [[5, "algopy.op.Txn.first_valid_time", false]], "first_valid_time (algopy.txn attribute)": [[1, "algopy.Txn.first_valid_time", false]], "first_valid_time() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.first_valid_time", false]], "first_valid_time() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.first_valid_time", false]], "first_valid_time() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.first_valid_time", false]], "format() (algopy.op.base64 method)": [[5, "algopy.op.Base64.format", false]], "format() (algopy.op.ec method)": [[5, "algopy.op.EC.format", false]], "format() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.format", false]], "format() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.format", false]], "format() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.format", false]], "format_map() (algopy.op.base64 method)": [[5, "algopy.op.Base64.format_map", false]], "format_map() (algopy.op.ec method)": [[5, "algopy.op.EC.format_map", false]], "format_map() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.format_map", false]], "format_map() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.format_map", false]], "format_map() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.format_map", false]], "freeze (algopy.asset property)": [[1, "algopy.Asset.freeze", false]], "freeze (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.freeze", false]], "freeze (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.freeze", false]], "freeze (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.freeze", false]], "freeze (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.freeze", false]], "freeze() (algopy.array method)": [[1, "algopy.Array.freeze", false]], "freeze_account (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.freeze_account", false]], "freeze_account (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.freeze_account", false]], "freeze_account (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.freeze_account", false]], "freeze_account (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.freeze_account", false]], "freeze_asset (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.freeze_asset", false]], "freeze_asset (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.freeze_asset", false]], "freeze_asset (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.freeze_asset", false]], "freeze_asset (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.freeze_asset", false]], "freeze_asset (algopy.op.txn attribute)": [[5, "algopy.op.Txn.freeze_asset", false]], "freeze_asset (algopy.txn attribute)": [[1, "algopy.Txn.freeze_asset", false]], "freeze_asset() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.freeze_asset", false]], "freeze_asset() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.freeze_asset", false]], "freeze_asset() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.freeze_asset", false]], "freeze_asset_account (algopy.op.txn attribute)": [[5, "algopy.op.Txn.freeze_asset_account", false]], "freeze_asset_account (algopy.txn attribute)": [[1, "algopy.Txn.freeze_asset_account", false]], "freeze_asset_account() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.freeze_asset_account", false]], "freeze_asset_account() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.freeze_asset_account", false]], "freeze_asset_account() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.freeze_asset_account", false]], "freeze_asset_frozen (algopy.op.txn attribute)": [[5, "algopy.op.Txn.freeze_asset_frozen", false]], "freeze_asset_frozen (algopy.txn attribute)": [[1, "algopy.Txn.freeze_asset_frozen", false]], "freeze_asset_frozen() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.freeze_asset_frozen", false]], "freeze_asset_frozen() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.freeze_asset_frozen", false]], "freeze_asset_frozen() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.freeze_asset_frozen", false]], "from_base32() (algopy.bytes static method)": [[1, "algopy.Bytes.from_base32", false]], "from_base64() (algopy.bytes static method)": [[1, "algopy.Bytes.from_base64", false]], "from_bytes() (algopy.account class method)": [[1, "algopy.Account.from_bytes", false]], "from_bytes() (algopy.arc4.address class method)": [[2, "algopy.arc4.Address.from_bytes", false]], "from_bytes() (algopy.arc4.bigufixednxm class method)": [[2, "algopy.arc4.BigUFixedNxM.from_bytes", false]], "from_bytes() (algopy.arc4.biguintn class method)": [[2, "algopy.arc4.BigUIntN.from_bytes", false]], "from_bytes() (algopy.arc4.bool class method)": [[2, "algopy.arc4.Bool.from_bytes", false]], "from_bytes() (algopy.arc4.byte class method)": [[2, "algopy.arc4.Byte.from_bytes", false]], "from_bytes() (algopy.arc4.dynamicarray class method)": [[2, "algopy.arc4.DynamicArray.from_bytes", false]], "from_bytes() (algopy.arc4.dynamicbytes class method)": [[2, "algopy.arc4.DynamicBytes.from_bytes", false]], "from_bytes() (algopy.arc4.staticarray class method)": [[2, "algopy.arc4.StaticArray.from_bytes", false]], "from_bytes() (algopy.arc4.string class method)": [[2, "algopy.arc4.String.from_bytes", false]], "from_bytes() (algopy.arc4.struct class method)": [[2, "algopy.arc4.Struct.from_bytes", false]], "from_bytes() (algopy.arc4.tuple class method)": [[2, "algopy.arc4.Tuple.from_bytes", false]], "from_bytes() (algopy.arc4.ufixednxm class method)": [[2, "algopy.arc4.UFixedNxM.from_bytes", false]], "from_bytes() (algopy.arc4.uintn class method)": [[2, "algopy.arc4.UIntN.from_bytes", false]], "from_bytes() (algopy.biguint class method)": [[1, "algopy.BigUInt.from_bytes", false]], "from_bytes() (algopy.bytesbacked class method)": [[1, "algopy.BytesBacked.from_bytes", false]], "from_bytes() (algopy.string class method)": [[1, "algopy.String.from_bytes", false]], "from_hex() (algopy.bytes static method)": [[1, "algopy.Bytes.from_hex", false]], "from_log() (algopy.arc4.address class method)": [[2, "algopy.arc4.Address.from_log", false]], "from_log() (algopy.arc4.bigufixednxm class method)": [[2, "algopy.arc4.BigUFixedNxM.from_log", false]], "from_log() (algopy.arc4.biguintn class method)": [[2, "algopy.arc4.BigUIntN.from_log", false]], "from_log() (algopy.arc4.bool class method)": [[2, "algopy.arc4.Bool.from_log", false]], "from_log() (algopy.arc4.byte class method)": [[2, "algopy.arc4.Byte.from_log", false]], "from_log() (algopy.arc4.dynamicarray class method)": [[2, "algopy.arc4.DynamicArray.from_log", false]], "from_log() (algopy.arc4.dynamicbytes class method)": [[2, "algopy.arc4.DynamicBytes.from_log", false]], "from_log() (algopy.arc4.staticarray class method)": [[2, "algopy.arc4.StaticArray.from_log", false]], "from_log() (algopy.arc4.string class method)": [[2, "algopy.arc4.String.from_log", false]], "from_log() (algopy.arc4.struct class method)": [[2, "algopy.arc4.Struct.from_log", false]], "from_log() (algopy.arc4.tuple class method)": [[2, "algopy.arc4.Tuple.from_log", false]], "from_log() (algopy.arc4.ufixednxm class method)": [[2, "algopy.arc4.UFixedNxM.from_log", false]], "from_log() (algopy.arc4.uintn class method)": [[2, "algopy.arc4.UIntN.from_log", false]], "frozen (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.frozen", false]], "frozen (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.frozen", false]], "frozen (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.frozen", false]], "frozen (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.frozen", false]], "frozen() (algopy.asset method)": [[1, "algopy.Asset.frozen", false]], "gaid() (in module algopy.op)": [[5, "algopy.op.gaid", false]], "genesis_hash (algopy.global attribute)": [[1, "algopy.Global.genesis_hash", false]], "genesis_hash (algopy.op.global attribute)": [[5, "algopy.op.Global.genesis_hash", false]], "get() (algopy.box method)": [[1, "algopy.Box.get", false]], "get() (algopy.boxmap method)": [[1, "algopy.BoxMap.get", false]], "get() (algopy.boxref method)": [[1, "algopy.BoxRef.get", false]], "get() (algopy.globalstate method)": [[1, "algopy.GlobalState.get", false]], "get() (algopy.localstate method)": [[1, "algopy.LocalState.get", false]], "get() (algopy.op.box static method)": [[5, "algopy.op.Box.get", false]], "get_bytes() (algopy.op.appglobal static method)": [[5, "algopy.op.AppGlobal.get_bytes", false]], "get_bytes() (algopy.op.applocal static method)": [[5, "algopy.op.AppLocal.get_bytes", false]], "get_ex_bytes() (algopy.op.appglobal static method)": [[5, "algopy.op.AppGlobal.get_ex_bytes", false]], "get_ex_bytes() (algopy.op.applocal static method)": [[5, "algopy.op.AppLocal.get_ex_bytes", false]], "get_ex_uint64() (algopy.op.appglobal static method)": [[5, "algopy.op.AppGlobal.get_ex_uint64", false]], "get_ex_uint64() (algopy.op.applocal static method)": [[5, "algopy.op.AppLocal.get_ex_uint64", false]], "get_uint64() (algopy.op.appglobal static method)": [[5, "algopy.op.AppGlobal.get_uint64", false]], "get_uint64() (algopy.op.applocal static method)": [[5, "algopy.op.AppLocal.get_uint64", false]], "getbit() (in module algopy.op)": [[5, "algopy.op.getbit", false]], "getbyte() (in module algopy.op)": [[5, "algopy.op.getbyte", false]], "gitxn (class in algopy.op)": [[5, "algopy.op.GITxn", false]], "gload_bytes() (in module algopy.op)": [[5, "algopy.op.gload_bytes", false]], "gload_uint64() (in module algopy.op)": [[5, "algopy.op.gload_uint64", false]], "global (class in algopy)": [[1, "algopy.Global", false]], "global (class in algopy.op)": [[5, "algopy.op.Global", false]], "global_bytes (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.global_bytes", false]], "global_num_byte_slice (algopy.op.txn attribute)": [[5, "algopy.op.Txn.global_num_byte_slice", false]], "global_num_byte_slice (algopy.txn attribute)": [[1, "algopy.Txn.global_num_byte_slice", false]], "global_num_byte_slice() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.global_num_byte_slice", false]], "global_num_byte_slice() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.global_num_byte_slice", false]], "global_num_byte_slice() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.global_num_byte_slice", false]], "global_num_bytes (algopy.application property)": [[1, "algopy.Application.global_num_bytes", false]], "global_num_bytes (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.global_num_bytes", false]], "global_num_bytes (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.global_num_bytes", false]], "global_num_bytes (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.global_num_bytes", false]], "global_num_bytes (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.global_num_bytes", false]], "global_num_uint (algopy.application property)": [[1, "algopy.Application.global_num_uint", false]], "global_num_uint (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.global_num_uint", false]], "global_num_uint (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.global_num_uint", false]], "global_num_uint (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.global_num_uint", false]], "global_num_uint (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.global_num_uint", false]], "global_num_uint (algopy.op.txn attribute)": [[5, "algopy.op.Txn.global_num_uint", false]], "global_num_uint (algopy.txn attribute)": [[1, "algopy.Txn.global_num_uint", false]], "global_num_uint() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.global_num_uint", false]], "global_num_uint() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.global_num_uint", false]], "global_num_uint() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.global_num_uint", false]], "global_uints (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.global_uints", false]], "globalstate (class in algopy)": [[1, "algopy.GlobalState", false]], "group_id (algopy.global attribute)": [[1, "algopy.Global.group_id", false]], "group_id (algopy.op.global attribute)": [[5, "algopy.op.Global.group_id", false]], "group_index (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.group_index", false]], "group_index (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.group_index", false]], "group_index (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.group_index", false]], "group_index (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.group_index", false]], "group_index (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.group_index", false]], "group_index (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.group_index", false]], "group_index (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.group_index", false]], "group_index (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.group_index", false]], "group_index (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.group_index", false]], "group_index (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.group_index", false]], "group_index (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.group_index", false]], "group_index (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.group_index", false]], "group_index (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.group_index", false]], "group_index (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.group_index", false]], "group_index (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.group_index", false]], "group_index (algopy.op.txn attribute)": [[5, "algopy.op.Txn.group_index", false]], "group_index (algopy.txn attribute)": [[1, "algopy.Txn.group_index", false]], "group_index() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.group_index", false]], "group_index() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.group_index", false]], "group_index() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.group_index", false]], "group_size (algopy.global attribute)": [[1, "algopy.Global.group_size", false]], "group_size (algopy.op.global attribute)": [[5, "algopy.op.Global.group_size", false]], "groupcredit (algopy.opupfeesource attribute)": [[1, "algopy.OpUpFeeSource.GroupCredit", false]], "gtxn (class in algopy.op)": [[5, "algopy.op.GTxn", false]], "id (algopy.application property)": [[1, "algopy.Application.id", false]], "id (algopy.asset property)": [[1, "algopy.Asset.id", false]], "immutablearray (class in algopy)": [[1, "algopy.ImmutableArray", false]], "index() (algopy.arc4.tuple method)": [[2, "algopy.arc4.Tuple.index", false]], "index() (algopy.op.base64 method)": [[5, "algopy.op.Base64.index", false]], "index() (algopy.op.ec method)": [[5, "algopy.op.EC.index", false]], "index() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.index", false]], "index() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.index", false]], "index() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.index", false]], "innertransaction (class in algopy.itxn)": [[4, "algopy.itxn.InnerTransaction", false]], "innertransactionresult (class in algopy.itxn)": [[4, "algopy.itxn.InnerTransactionResult", false]], "is_opted_in() (algopy.account method)": [[1, "algopy.Account.is_opted_in", false]], "isalnum() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isalnum", false]], "isalnum() (algopy.op.ec method)": [[5, "algopy.op.EC.isalnum", false]], "isalnum() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isalnum", false]], "isalnum() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isalnum", false]], "isalnum() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isalnum", false]], "isalpha() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isalpha", false]], "isalpha() (algopy.op.ec method)": [[5, "algopy.op.EC.isalpha", false]], "isalpha() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isalpha", false]], "isalpha() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isalpha", false]], "isalpha() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isalpha", false]], "isascii() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isascii", false]], "isascii() (algopy.op.ec method)": [[5, "algopy.op.EC.isascii", false]], "isascii() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isascii", false]], "isascii() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isascii", false]], "isascii() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isascii", false]], "isdecimal() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isdecimal", false]], "isdecimal() (algopy.op.ec method)": [[5, "algopy.op.EC.isdecimal", false]], "isdecimal() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isdecimal", false]], "isdecimal() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isdecimal", false]], "isdecimal() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isdecimal", false]], "isdigit() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isdigit", false]], "isdigit() (algopy.op.ec method)": [[5, "algopy.op.EC.isdigit", false]], "isdigit() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isdigit", false]], "isdigit() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isdigit", false]], "isdigit() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isdigit", false]], "isidentifier() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isidentifier", false]], "isidentifier() (algopy.op.ec method)": [[5, "algopy.op.EC.isidentifier", false]], "isidentifier() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isidentifier", false]], "isidentifier() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isidentifier", false]], "isidentifier() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isidentifier", false]], "islower() (algopy.op.base64 method)": [[5, "algopy.op.Base64.islower", false]], "islower() (algopy.op.ec method)": [[5, "algopy.op.EC.islower", false]], "islower() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.islower", false]], "islower() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.islower", false]], "islower() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.islower", false]], "isnumeric() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isnumeric", false]], "isnumeric() (algopy.op.ec method)": [[5, "algopy.op.EC.isnumeric", false]], "isnumeric() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isnumeric", false]], "isnumeric() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isnumeric", false]], "isnumeric() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isnumeric", false]], "isprintable() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isprintable", false]], "isprintable() (algopy.op.ec method)": [[5, "algopy.op.EC.isprintable", false]], "isprintable() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isprintable", false]], "isprintable() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isprintable", false]], "isprintable() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isprintable", false]], "isspace() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isspace", false]], "isspace() (algopy.op.ec method)": [[5, "algopy.op.EC.isspace", false]], "isspace() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isspace", false]], "isspace() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isspace", false]], "isspace() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isspace", false]], "istitle() (algopy.op.base64 method)": [[5, "algopy.op.Base64.istitle", false]], "istitle() (algopy.op.ec method)": [[5, "algopy.op.EC.istitle", false]], "istitle() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.istitle", false]], "istitle() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.istitle", false]], "istitle() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.istitle", false]], "isupper() (algopy.op.base64 method)": [[5, "algopy.op.Base64.isupper", false]], "isupper() (algopy.op.ec method)": [[5, "algopy.op.EC.isupper", false]], "isupper() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.isupper", false]], "isupper() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.isupper", false]], "isupper() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.isupper", false]], "itob() (in module algopy.op)": [[5, "algopy.op.itob", false]], "itxn (class in algopy.op)": [[5, "algopy.op.ITxn", false]], "itxncreate (class in algopy.op)": [[5, "algopy.op.ITxnCreate", false]], "join() (algopy.op.base64 method)": [[5, "algopy.op.Base64.join", false]], "join() (algopy.op.ec method)": [[5, "algopy.op.EC.join", false]], "join() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.join", false]], "join() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.join", false]], "join() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.join", false]], "join() (algopy.string method)": [[1, "algopy.String.join", false]], "json_object() (algopy.op.jsonref static method)": [[5, "algopy.op.JsonRef.json_object", false]], "json_string() (algopy.op.jsonref static method)": [[5, "algopy.op.JsonRef.json_string", false]], "json_uint64() (algopy.op.jsonref static method)": [[5, "algopy.op.JsonRef.json_uint64", false]], "jsonref (class in algopy.op)": [[5, "algopy.op.JsonRef", false]], "keccak256() (in module algopy.op)": [[5, "algopy.op.keccak256", false]], "key (algopy.box property)": [[1, "algopy.Box.key", false]], "key (algopy.boxref property)": [[1, "algopy.BoxRef.key", false]], "key (algopy.globalstate property)": [[1, "algopy.GlobalState.key", false]], "key (algopy.localstate property)": [[1, "algopy.LocalState.key", false]], "key_prefix (algopy.boxmap property)": [[1, "algopy.BoxMap.key_prefix", false]], "keyregistration (algopy.transactiontype attribute)": [[1, "algopy.TransactionType.KeyRegistration", false]], "keyregistration (class in algopy.itxn)": [[4, "algopy.itxn.KeyRegistration", false]], "keyregistrationinnertransaction (class in algopy.itxn)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction", false]], "keyregistrationtransaction (class in algopy.gtxn)": [[3, "algopy.gtxn.KeyRegistrationTransaction", false]], "last_log (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.last_log", false]], "last_log (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.last_log", false]], "last_log (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.last_log", false]], "last_log (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.last_log", false]], "last_log (algopy.op.txn attribute)": [[5, "algopy.op.Txn.last_log", false]], "last_log (algopy.txn attribute)": [[1, "algopy.Txn.last_log", false]], "last_log() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.last_log", false]], "last_log() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.last_log", false]], "last_log() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.last_log", false]], "last_valid (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.last_valid", false]], "last_valid (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.last_valid", false]], "last_valid (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.last_valid", false]], "last_valid (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.last_valid", false]], "last_valid (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.last_valid", false]], "last_valid (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.last_valid", false]], "last_valid (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.last_valid", false]], "last_valid (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.last_valid", false]], "last_valid (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.last_valid", false]], "last_valid (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.last_valid", false]], "last_valid (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.last_valid", false]], "last_valid (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.last_valid", false]], "last_valid (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.last_valid", false]], "last_valid (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.last_valid", false]], "last_valid (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.last_valid", false]], "last_valid (algopy.op.txn attribute)": [[5, "algopy.op.Txn.last_valid", false]], "last_valid (algopy.txn attribute)": [[1, "algopy.Txn.last_valid", false]], "last_valid() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.last_valid", false]], "last_valid() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.last_valid", false]], "last_valid() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.last_valid", false]], "latest_timestamp (algopy.global attribute)": [[1, "algopy.Global.latest_timestamp", false]], "latest_timestamp (algopy.op.global attribute)": [[5, "algopy.op.Global.latest_timestamp", false]], "lease (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.lease", false]], "lease (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.lease", false]], "lease (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.lease", false]], "lease (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.lease", false]], "lease (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.lease", false]], "lease (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.lease", false]], "lease (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.lease", false]], "lease (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.lease", false]], "lease (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.lease", false]], "lease (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.lease", false]], "lease (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.lease", false]], "lease (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.lease", false]], "lease (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.lease", false]], "lease (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.lease", false]], "lease (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.lease", false]], "lease (algopy.op.txn attribute)": [[5, "algopy.op.Txn.lease", false]], "lease (algopy.txn attribute)": [[1, "algopy.Txn.lease", false]], "lease() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.lease", false]], "lease() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.lease", false]], "lease() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.lease", false]], "length (algopy.arc4.address property)": [[2, "algopy.arc4.Address.length", false]], "length (algopy.arc4.dynamicarray property)": [[2, "algopy.arc4.DynamicArray.length", false]], "length (algopy.arc4.dynamicbytes property)": [[2, "algopy.arc4.DynamicBytes.length", false]], "length (algopy.arc4.staticarray property)": [[2, "algopy.arc4.StaticArray.length", false]], "length (algopy.array property)": [[1, "algopy.Array.length", false]], "length (algopy.box property)": [[1, "algopy.Box.length", false]], "length (algopy.boxref property)": [[1, "algopy.BoxRef.length", false]], "length (algopy.bytes property)": [[1, "algopy.Bytes.length", false]], "length (algopy.immutablearray property)": [[1, "algopy.ImmutableArray.length", false]], "length() (algopy.boxmap method)": [[1, "algopy.BoxMap.length", false]], "length() (algopy.op.box static method)": [[5, "algopy.op.Box.length", false]], "ljust() (algopy.op.base64 method)": [[5, "algopy.op.Base64.ljust", false]], "ljust() (algopy.op.ec method)": [[5, "algopy.op.EC.ljust", false]], "ljust() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.ljust", false]], "ljust() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.ljust", false]], "ljust() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.ljust", false]], "load_bytes() (algopy.op.scratch static method)": [[5, "algopy.op.Scratch.load_bytes", false]], "load_uint64() (algopy.op.scratch static method)": [[5, "algopy.op.Scratch.load_uint64", false]], "local_bytes (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.local_bytes", false]], "local_num_byte_slice (algopy.op.txn attribute)": [[5, "algopy.op.Txn.local_num_byte_slice", false]], "local_num_byte_slice (algopy.txn attribute)": [[1, "algopy.Txn.local_num_byte_slice", false]], "local_num_byte_slice() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.local_num_byte_slice", false]], "local_num_byte_slice() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.local_num_byte_slice", false]], "local_num_byte_slice() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.local_num_byte_slice", false]], "local_num_bytes (algopy.application property)": [[1, "algopy.Application.local_num_bytes", false]], "local_num_bytes (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.local_num_bytes", false]], "local_num_bytes (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.local_num_bytes", false]], "local_num_bytes (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.local_num_bytes", false]], "local_num_bytes (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.local_num_bytes", false]], "local_num_uint (algopy.application property)": [[1, "algopy.Application.local_num_uint", false]], "local_num_uint (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.local_num_uint", false]], "local_num_uint (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.local_num_uint", false]], "local_num_uint (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.local_num_uint", false]], "local_num_uint (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.local_num_uint", false]], "local_num_uint (algopy.op.txn attribute)": [[5, "algopy.op.Txn.local_num_uint", false]], "local_num_uint (algopy.txn attribute)": [[1, "algopy.Txn.local_num_uint", false]], "local_num_uint() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.local_num_uint", false]], "local_num_uint() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.local_num_uint", false]], "local_num_uint() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.local_num_uint", false]], "local_uints (algopy.compiledcontract attribute)": [[1, "algopy.CompiledContract.local_uints", false]], "localstate (class in algopy)": [[1, "algopy.LocalState", false]], "log() (in module algopy)": [[1, "algopy.log", false]], "logic_sig_version (algopy.global attribute)": [[1, "algopy.Global.logic_sig_version", false]], "logic_sig_version (algopy.op.global attribute)": [[5, "algopy.op.Global.logic_sig_version", false]], "logicsig (class in algopy)": [[1, "algopy.LogicSig", false]], "logicsig() (in module algopy)": [[1, "algopy.logicsig", false]], "logs() (algopy.gtxn.applicationcalltransaction method)": [[3, "algopy.gtxn.ApplicationCallTransaction.logs", false]], "logs() (algopy.gtxn.transaction method)": [[3, "algopy.gtxn.Transaction.logs", false]], "logs() (algopy.itxn.applicationcallinnertransaction method)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.logs", false]], "logs() (algopy.itxn.innertransactionresult method)": [[4, "algopy.itxn.InnerTransactionResult.logs", false]], "logs() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.logs", false]], "logs() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.logs", false]], "logs() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.logs", false]], "logs() (algopy.op.txn static method)": [[5, "algopy.op.Txn.logs", false]], "logs() (algopy.txn static method)": [[1, "algopy.Txn.logs", false]], "lower() (algopy.op.base64 method)": [[5, "algopy.op.Base64.lower", false]], "lower() (algopy.op.ec method)": [[5, "algopy.op.EC.lower", false]], "lower() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.lower", false]], "lower() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.lower", false]], "lower() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.lower", false]], "lstrip() (algopy.op.base64 method)": [[5, "algopy.op.Base64.lstrip", false]], "lstrip() (algopy.op.ec method)": [[5, "algopy.op.EC.lstrip", false]], "lstrip() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.lstrip", false]], "lstrip() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.lstrip", false]], "lstrip() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.lstrip", false]], "manager (algopy.asset property)": [[1, "algopy.Asset.manager", false]], "manager (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.manager", false]], "manager (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.manager", false]], "manager (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.manager", false]], "manager (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.manager", false]], "map_to() (algopy.op.ellipticcurve static method)": [[5, "algopy.op.EllipticCurve.map_to", false]], "max_txn_life (algopy.global attribute)": [[1, "algopy.Global.max_txn_life", false]], "max_txn_life (algopy.op.global attribute)": [[5, "algopy.op.Global.max_txn_life", false]], "maybe() (algopy.box method)": [[1, "algopy.Box.maybe", false]], "maybe() (algopy.boxmap method)": [[1, "algopy.BoxMap.maybe", false]], "maybe() (algopy.boxref method)": [[1, "algopy.BoxRef.maybe", false]], "maybe() (algopy.globalstate method)": [[1, "algopy.GlobalState.maybe", false]], "maybe() (algopy.localstate method)": [[1, "algopy.LocalState.maybe", false]], "metadata_hash (algopy.asset property)": [[1, "algopy.Asset.metadata_hash", false]], "metadata_hash (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.metadata_hash", false]], "metadata_hash (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.metadata_hash", false]], "metadata_hash (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.metadata_hash", false]], "metadata_hash (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.metadata_hash", false]], "mimc() (in module algopy.op)": [[5, "algopy.op.mimc", false]], "mimcconfigurations (class in algopy.op)": [[5, "algopy.op.MiMCConfigurations", false]], "min_balance (algopy.account property)": [[1, "algopy.Account.min_balance", false]], "min_balance (algopy.global attribute)": [[1, "algopy.Global.min_balance", false]], "min_balance (algopy.op.global attribute)": [[5, "algopy.op.Global.min_balance", false]], "min_balance() (in module algopy.op)": [[5, "algopy.op.min_balance", false]], "min_txn_fee (algopy.global attribute)": [[1, "algopy.Global.min_txn_fee", false]], "min_txn_fee (algopy.op.global attribute)": [[5, "algopy.op.Global.min_txn_fee", false]], "module": [[1, "module-algopy", false], [2, "module-algopy.arc4", false], [3, "module-algopy.gtxn", false], [4, "module-algopy.itxn", false], [5, "module-algopy.op", false]], "mulw() (in module algopy.op)": [[5, "algopy.op.mulw", false]], "name (algopy.asset property)": [[1, "algopy.Asset.name", false]], "native (algopy.arc4.address property)": [[2, "algopy.arc4.Address.native", false]], "native (algopy.arc4.biguintn property)": [[2, "algopy.arc4.BigUIntN.native", false]], "native (algopy.arc4.bool property)": [[2, "algopy.arc4.Bool.native", false]], "native (algopy.arc4.byte property)": [[2, "algopy.arc4.Byte.native", false]], "native (algopy.arc4.dynamicbytes property)": [[2, "algopy.arc4.DynamicBytes.native", false]], "native (algopy.arc4.string property)": [[2, "algopy.arc4.String.native", false]], "native (algopy.arc4.tuple property)": [[2, "algopy.arc4.Tuple.native", false]], "native (algopy.arc4.uintn property)": [[2, "algopy.arc4.UIntN.native", false]], "next() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.next", false]], "non_participation (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.non_participation", false]], "non_participation (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.non_participation", false]], "non_participation (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.non_participation", false]], "non_participation (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.non_participation", false]], "nonparticipation (algopy.op.txn attribute)": [[5, "algopy.op.Txn.nonparticipation", false]], "nonparticipation (algopy.txn attribute)": [[1, "algopy.Txn.nonparticipation", false]], "nonparticipation() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.nonparticipation", false]], "nonparticipation() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.nonparticipation", false]], "nonparticipation() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.nonparticipation", false]], "noop (algopy.oncompleteaction attribute)": [[1, "algopy.OnCompleteAction.NoOp", false]], "note (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.note", false]], "note (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.note", false]], "note (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.note", false]], "note (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.note", false]], "note (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.note", false]], "note (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.note", false]], "note (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.note", false]], "note (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.note", false]], "note (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.note", false]], "note (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.note", false]], "note (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.note", false]], "note (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.note", false]], "note (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.note", false]], "note (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.note", false]], "note (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.note", false]], "note (algopy.op.txn attribute)": [[5, "algopy.op.Txn.note", false]], "note (algopy.txn attribute)": [[1, "algopy.Txn.note", false]], "note() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.note", false]], "note() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.note", false]], "note() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.note", false]], "num_accounts (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_accounts", false]], "num_accounts (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_accounts", false]], "num_accounts (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_accounts", false]], "num_accounts (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_accounts", false]], "num_accounts (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_accounts", false]], "num_accounts (algopy.txn attribute)": [[1, "algopy.Txn.num_accounts", false]], "num_accounts() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_accounts", false]], "num_accounts() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_accounts", false]], "num_accounts() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_accounts", false]], "num_app_args (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_app_args", false]], "num_app_args (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_app_args", false]], "num_app_args (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_app_args", false]], "num_app_args (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_app_args", false]], "num_app_args (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_app_args", false]], "num_app_args (algopy.txn attribute)": [[1, "algopy.Txn.num_app_args", false]], "num_app_args() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_app_args", false]], "num_app_args() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_app_args", false]], "num_app_args() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_app_args", false]], "num_applications (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_applications", false]], "num_applications (algopy.txn attribute)": [[1, "algopy.Txn.num_applications", false]], "num_applications() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_applications", false]], "num_applications() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_applications", false]], "num_applications() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_applications", false]], "num_approval_program_pages (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_approval_program_pages", false]], "num_approval_program_pages (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_approval_program_pages", false]], "num_approval_program_pages (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_approval_program_pages", false]], "num_approval_program_pages (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_approval_program_pages", false]], "num_approval_program_pages (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_approval_program_pages", false]], "num_approval_program_pages (algopy.txn attribute)": [[1, "algopy.Txn.num_approval_program_pages", false]], "num_approval_program_pages() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_approval_program_pages", false]], "num_approval_program_pages() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_approval_program_pages", false]], "num_approval_program_pages() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_approval_program_pages", false]], "num_apps (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_apps", false]], "num_apps (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_apps", false]], "num_apps (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_apps", false]], "num_apps (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_apps", false]], "num_assets (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_assets", false]], "num_assets (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_assets", false]], "num_assets (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_assets", false]], "num_assets (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_assets", false]], "num_assets (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_assets", false]], "num_assets (algopy.txn attribute)": [[1, "algopy.Txn.num_assets", false]], "num_assets() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_assets", false]], "num_assets() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_assets", false]], "num_assets() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_assets", false]], "num_clear_state_program_pages (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_clear_state_program_pages", false]], "num_clear_state_program_pages (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_clear_state_program_pages", false]], "num_clear_state_program_pages (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_clear_state_program_pages", false]], "num_clear_state_program_pages (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_clear_state_program_pages", false]], "num_clear_state_program_pages (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_clear_state_program_pages", false]], "num_clear_state_program_pages (algopy.txn attribute)": [[1, "algopy.Txn.num_clear_state_program_pages", false]], "num_clear_state_program_pages() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_clear_state_program_pages", false]], "num_clear_state_program_pages() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_clear_state_program_pages", false]], "num_clear_state_program_pages() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_clear_state_program_pages", false]], "num_logs (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.num_logs", false]], "num_logs (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.num_logs", false]], "num_logs (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.num_logs", false]], "num_logs (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.num_logs", false]], "num_logs (algopy.op.txn attribute)": [[5, "algopy.op.Txn.num_logs", false]], "num_logs (algopy.txn attribute)": [[1, "algopy.Txn.num_logs", false]], "num_logs() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.num_logs", false]], "num_logs() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.num_logs", false]], "num_logs() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.num_logs", false]], "on_completion (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.on_completion", false]], "on_completion (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.on_completion", false]], "on_completion (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.on_completion", false]], "on_completion (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.on_completion", false]], "on_completion (algopy.op.txn attribute)": [[5, "algopy.op.Txn.on_completion", false]], "on_completion (algopy.txn attribute)": [[1, "algopy.Txn.on_completion", false]], "on_completion() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.on_completion", false]], "on_completion() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.on_completion", false]], "on_completion() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.on_completion", false]], "oncompleteaction (class in algopy)": [[1, "algopy.OnCompleteAction", false]], "online_stake() (in module algopy.op)": [[5, "algopy.op.online_stake", false]], "opcode_budget() (algopy.global static method)": [[1, "algopy.Global.opcode_budget", false]], "opcode_budget() (algopy.op.global static method)": [[5, "algopy.op.Global.opcode_budget", false]], "optin (algopy.oncompleteaction attribute)": [[1, "algopy.OnCompleteAction.OptIn", false]], "opupfeesource (class in algopy)": [[1, "algopy.OpUpFeeSource", false]], "pairing_check() (algopy.op.ellipticcurve static method)": [[5, "algopy.op.EllipticCurve.pairing_check", false]], "partition() (algopy.op.base64 method)": [[5, "algopy.op.Base64.partition", false]], "partition() (algopy.op.ec method)": [[5, "algopy.op.EC.partition", false]], "partition() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.partition", false]], "partition() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.partition", false]], "partition() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.partition", false]], "payment (algopy.transactiontype attribute)": [[1, "algopy.TransactionType.Payment", false]], "payment (class in algopy.itxn)": [[4, "algopy.itxn.Payment", false]], "paymentinnertransaction (class in algopy.itxn)": [[4, "algopy.itxn.PaymentInnerTransaction", false]], "paymenttransaction (class in algopy.gtxn)": [[3, "algopy.gtxn.PaymentTransaction", false]], "payouts_enabled (algopy.global attribute)": [[1, "algopy.Global.payouts_enabled", false]], "payouts_enabled (algopy.op.global attribute)": [[5, "algopy.op.Global.payouts_enabled", false]], "payouts_go_online_fee (algopy.global attribute)": [[1, "algopy.Global.payouts_go_online_fee", false]], "payouts_go_online_fee (algopy.op.global attribute)": [[5, "algopy.op.Global.payouts_go_online_fee", false]], "payouts_max_balance (algopy.global attribute)": [[1, "algopy.Global.payouts_max_balance", false]], "payouts_max_balance (algopy.op.global attribute)": [[5, "algopy.op.Global.payouts_max_balance", false]], "payouts_min_balance (algopy.global attribute)": [[1, "algopy.Global.payouts_min_balance", false]], "payouts_min_balance (algopy.op.global attribute)": [[5, "algopy.op.Global.payouts_min_balance", false]], "payouts_percent (algopy.global attribute)": [[1, "algopy.Global.payouts_percent", false]], "payouts_percent (algopy.op.global attribute)": [[5, "algopy.op.Global.payouts_percent", false]], "pop() (algopy.arc4.dynamicarray method)": [[2, "algopy.arc4.DynamicArray.pop", false]], "pop() (algopy.arc4.dynamicbytes method)": [[2, "algopy.arc4.DynamicBytes.pop", false]], "pop() (algopy.array method)": [[1, "algopy.Array.pop", false]], "pop() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.pop", false]], "put() (algopy.boxref method)": [[1, "algopy.BoxRef.put", false]], "put() (algopy.op.appglobal static method)": [[5, "algopy.op.AppGlobal.put", false]], "put() (algopy.op.applocal static method)": [[5, "algopy.op.AppLocal.put", false]], "put() (algopy.op.box static method)": [[5, "algopy.op.Box.put", false]], "receiver (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.receiver", false]], "receiver (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.receiver", false]], "receiver (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.receiver", false]], "receiver (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.receiver", false]], "receiver (algopy.op.txn attribute)": [[5, "algopy.op.Txn.receiver", false]], "receiver (algopy.txn attribute)": [[1, "algopy.Txn.receiver", false]], "receiver() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.receiver", false]], "receiver() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.receiver", false]], "receiver() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.receiver", false]], "rekey_to (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.rekey_to", false]], "rekey_to (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.rekey_to", false]], "rekey_to (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.rekey_to", false]], "rekey_to (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.rekey_to", false]], "rekey_to (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.rekey_to", false]], "rekey_to (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.rekey_to", false]], "rekey_to (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.rekey_to", false]], "rekey_to (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.rekey_to", false]], "rekey_to (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.rekey_to", false]], "rekey_to (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.rekey_to", false]], "rekey_to (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.rekey_to", false]], "rekey_to (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.rekey_to", false]], "rekey_to (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.rekey_to", false]], "rekey_to (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.rekey_to", false]], "rekey_to (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.rekey_to", false]], "rekey_to (algopy.op.txn attribute)": [[5, "algopy.op.Txn.rekey_to", false]], "rekey_to (algopy.txn attribute)": [[1, "algopy.Txn.rekey_to", false]], "rekey_to() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.rekey_to", false]], "rekey_to() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.rekey_to", false]], "rekey_to() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.rekey_to", false]], "removeprefix() (algopy.op.base64 method)": [[5, "algopy.op.Base64.removeprefix", false]], "removeprefix() (algopy.op.ec method)": [[5, "algopy.op.EC.removeprefix", false]], "removeprefix() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.removeprefix", false]], "removeprefix() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.removeprefix", false]], "removeprefix() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.removeprefix", false]], "removesuffix() (algopy.op.base64 method)": [[5, "algopy.op.Base64.removesuffix", false]], "removesuffix() (algopy.op.ec method)": [[5, "algopy.op.EC.removesuffix", false]], "removesuffix() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.removesuffix", false]], "removesuffix() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.removesuffix", false]], "removesuffix() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.removesuffix", false]], "replace() (algopy.boxref method)": [[1, "algopy.BoxRef.replace", false]], "replace() (algopy.immutablearray method)": [[1, "algopy.ImmutableArray.replace", false]], "replace() (algopy.op.base64 method)": [[5, "algopy.op.Base64.replace", false]], "replace() (algopy.op.box static method)": [[5, "algopy.op.Box.replace", false]], "replace() (algopy.op.ec method)": [[5, "algopy.op.EC.replace", false]], "replace() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.replace", false]], "replace() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.replace", false]], "replace() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.replace", false]], "replace() (in module algopy.op)": [[5, "algopy.op.replace", false]], "reserve (algopy.asset property)": [[1, "algopy.Asset.reserve", false]], "reserve (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.reserve", false]], "reserve (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.reserve", false]], "reserve (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.reserve", false]], "reserve (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.reserve", false]], "resize() (algopy.boxref method)": [[1, "algopy.BoxRef.resize", false]], "resize() (algopy.op.box static method)": [[5, "algopy.op.Box.resize", false]], "rfind() (algopy.op.base64 method)": [[5, "algopy.op.Base64.rfind", false]], "rfind() (algopy.op.ec method)": [[5, "algopy.op.EC.rfind", false]], "rfind() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.rfind", false]], "rfind() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.rfind", false]], "rfind() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.rfind", false]], "rindex() (algopy.op.base64 method)": [[5, "algopy.op.Base64.rindex", false]], "rindex() (algopy.op.ec method)": [[5, "algopy.op.EC.rindex", false]], "rindex() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.rindex", false]], "rindex() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.rindex", false]], "rindex() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.rindex", false]], "rjust() (algopy.op.base64 method)": [[5, "algopy.op.Base64.rjust", false]], "rjust() (algopy.op.ec method)": [[5, "algopy.op.EC.rjust", false]], "rjust() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.rjust", false]], "rjust() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.rjust", false]], "rjust() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.rjust", false]], "round (algopy.global attribute)": [[1, "algopy.Global.round", false]], "round (algopy.op.global attribute)": [[5, "algopy.op.Global.round", false]], "rpartition() (algopy.op.base64 method)": [[5, "algopy.op.Base64.rpartition", false]], "rpartition() (algopy.op.ec method)": [[5, "algopy.op.EC.rpartition", false]], "rpartition() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.rpartition", false]], "rpartition() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.rpartition", false]], "rpartition() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.rpartition", false]], "rsplit() (algopy.op.base64 method)": [[5, "algopy.op.Base64.rsplit", false]], "rsplit() (algopy.op.ec method)": [[5, "algopy.op.EC.rsplit", false]], "rsplit() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.rsplit", false]], "rsplit() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.rsplit", false]], "rsplit() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.rsplit", false]], "rstrip() (algopy.op.base64 method)": [[5, "algopy.op.Base64.rstrip", false]], "rstrip() (algopy.op.ec method)": [[5, "algopy.op.EC.rstrip", false]], "rstrip() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.rstrip", false]], "rstrip() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.rstrip", false]], "rstrip() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.rstrip", false]], "scalar_mul() (algopy.op.ellipticcurve static method)": [[5, "algopy.op.EllipticCurve.scalar_mul", false]], "scalar_mul_multi() (algopy.op.ellipticcurve static method)": [[5, "algopy.op.EllipticCurve.scalar_mul_multi", false]], "scratch (class in algopy.op)": [[5, "algopy.op.Scratch", false]], "secp256k1 (algopy.op.ecdsa attribute)": [[5, "algopy.op.ECDSA.Secp256k1", false]], "secp256r1 (algopy.op.ecdsa attribute)": [[5, "algopy.op.ECDSA.Secp256r1", false]], "select_bytes() (in module algopy.op)": [[5, "algopy.op.select_bytes", false]], "select_uint64() (in module algopy.op)": [[5, "algopy.op.select_uint64", false]], "selection_key (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.selection_key", false]], "selection_key (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.selection_key", false]], "selection_key (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.selection_key", false]], "selection_key (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.selection_key", false]], "selection_pk (algopy.op.txn attribute)": [[5, "algopy.op.Txn.selection_pk", false]], "selection_pk (algopy.txn attribute)": [[1, "algopy.Txn.selection_pk", false]], "selection_pk() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.selection_pk", false]], "selection_pk() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.selection_pk", false]], "selection_pk() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.selection_pk", false]], "sender (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.sender", false]], "sender (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.sender", false]], "sender (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.sender", false]], "sender (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.sender", false]], "sender (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.sender", false]], "sender (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.sender", false]], "sender (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.sender", false]], "sender (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.sender", false]], "sender (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.sender", false]], "sender (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.sender", false]], "sender (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.sender", false]], "sender (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.sender", false]], "sender (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.sender", false]], "sender (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.sender", false]], "sender (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.sender", false]], "sender (algopy.op.txn attribute)": [[5, "algopy.op.Txn.sender", false]], "sender (algopy.txn attribute)": [[1, "algopy.Txn.sender", false]], "sender() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.sender", false]], "sender() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.sender", false]], "sender() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.sender", false]], "set() (algopy.itxn.applicationcall method)": [[4, "algopy.itxn.ApplicationCall.set", false]], "set() (algopy.itxn.assetconfig method)": [[4, "algopy.itxn.AssetConfig.set", false]], "set() (algopy.itxn.assetfreeze method)": [[4, "algopy.itxn.AssetFreeze.set", false]], "set() (algopy.itxn.assettransfer method)": [[4, "algopy.itxn.AssetTransfer.set", false]], "set() (algopy.itxn.innertransaction method)": [[4, "algopy.itxn.InnerTransaction.set", false]], "set() (algopy.itxn.keyregistration method)": [[4, "algopy.itxn.KeyRegistration.set", false]], "set() (algopy.itxn.payment method)": [[4, "algopy.itxn.Payment.set", false]], "set_accounts() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_accounts", false]], "set_amount() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_amount", false]], "set_application_args() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_application_args", false]], "set_application_id() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_application_id", false]], "set_applications() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_applications", false]], "set_approval_program() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_approval_program", false]], "set_approval_program_pages() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_approval_program_pages", false]], "set_asset_amount() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_asset_amount", false]], "set_asset_close_to() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_asset_close_to", false]], "set_asset_receiver() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_asset_receiver", false]], "set_asset_sender() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_asset_sender", false]], "set_assets() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_assets", false]], "set_clear_state_program() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_clear_state_program", false]], "set_clear_state_program_pages() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_clear_state_program_pages", false]], "set_close_remainder_to() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_close_remainder_to", false]], "set_config_asset() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset", false]], "set_config_asset_clawback() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_clawback", false]], "set_config_asset_decimals() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_decimals", false]], "set_config_asset_default_frozen() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_default_frozen", false]], "set_config_asset_freeze() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_freeze", false]], "set_config_asset_manager() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_manager", false]], "set_config_asset_metadata_hash() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_metadata_hash", false]], "set_config_asset_name() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_name", false]], "set_config_asset_reserve() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_reserve", false]], "set_config_asset_total() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_total", false]], "set_config_asset_unit_name() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_unit_name", false]], "set_config_asset_url() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_config_asset_url", false]], "set_extra_program_pages() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_extra_program_pages", false]], "set_fee() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_fee", false]], "set_freeze_asset() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_freeze_asset", false]], "set_freeze_asset_account() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_freeze_asset_account", false]], "set_freeze_asset_frozen() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_freeze_asset_frozen", false]], "set_global_num_byte_slice() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_global_num_byte_slice", false]], "set_global_num_uint() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_global_num_uint", false]], "set_local_num_byte_slice() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_local_num_byte_slice", false]], "set_local_num_uint() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_local_num_uint", false]], "set_nonparticipation() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_nonparticipation", false]], "set_note() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_note", false]], "set_on_completion() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_on_completion", false]], "set_receiver() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_receiver", false]], "set_rekey_to() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_rekey_to", false]], "set_selection_pk() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_selection_pk", false]], "set_sender() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_sender", false]], "set_state_proof_pk() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_state_proof_pk", false]], "set_type() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_type", false]], "set_type_enum() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_type_enum", false]], "set_vote_first() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_vote_first", false]], "set_vote_key_dilution() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_vote_key_dilution", false]], "set_vote_last() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_vote_last", false]], "set_vote_pk() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_vote_pk", false]], "set_xfer_asset() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.set_xfer_asset", false]], "setbit_bytes() (in module algopy.op)": [[5, "algopy.op.setbit_bytes", false]], "setbit_uint64() (in module algopy.op)": [[5, "algopy.op.setbit_uint64", false]], "setbyte() (in module algopy.op)": [[5, "algopy.op.setbyte", false]], "sha256() (in module algopy.op)": [[5, "algopy.op.sha256", false]], "sha3_256() (in module algopy.op)": [[5, "algopy.op.sha3_256", false]], "sha512_256() (in module algopy.op)": [[5, "algopy.op.sha512_256", false]], "shl() (in module algopy.op)": [[5, "algopy.op.shl", false]], "shr() (in module algopy.op)": [[5, "algopy.op.shr", false]], "splice() (algopy.boxref method)": [[1, "algopy.BoxRef.splice", false]], "splice() (algopy.op.box static method)": [[5, "algopy.op.Box.splice", false]], "split() (algopy.op.base64 method)": [[5, "algopy.op.Base64.split", false]], "split() (algopy.op.ec method)": [[5, "algopy.op.EC.split", false]], "split() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.split", false]], "split() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.split", false]], "split() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.split", false]], "splitlines() (algopy.op.base64 method)": [[5, "algopy.op.Base64.splitlines", false]], "splitlines() (algopy.op.ec method)": [[5, "algopy.op.EC.splitlines", false]], "splitlines() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.splitlines", false]], "splitlines() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.splitlines", false]], "splitlines() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.splitlines", false]], "sqrt() (in module algopy.op)": [[5, "algopy.op.sqrt", false]], "startswith() (algopy.op.base64 method)": [[5, "algopy.op.Base64.startswith", false]], "startswith() (algopy.op.ec method)": [[5, "algopy.op.EC.startswith", false]], "startswith() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.startswith", false]], "startswith() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.startswith", false]], "startswith() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.startswith", false]], "startswith() (algopy.string method)": [[1, "algopy.String.startswith", false]], "state_proof_key (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.state_proof_key", false]], "state_proof_key (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.state_proof_key", false]], "state_proof_key (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.state_proof_key", false]], "state_proof_key (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.state_proof_key", false]], "state_proof_pk (algopy.op.txn attribute)": [[5, "algopy.op.Txn.state_proof_pk", false]], "state_proof_pk (algopy.txn attribute)": [[1, "algopy.Txn.state_proof_pk", false]], "state_proof_pk() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.state_proof_pk", false]], "state_proof_pk() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.state_proof_pk", false]], "state_proof_pk() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.state_proof_pk", false]], "statetotals (class in algopy)": [[1, "algopy.StateTotals", false]], "staticarray (class in algopy.arc4)": [[2, "algopy.arc4.StaticArray", false]], "store() (algopy.op.scratch static method)": [[5, "algopy.op.Scratch.store", false]], "string (class in algopy)": [[1, "algopy.String", false]], "string (class in algopy.arc4)": [[2, "algopy.arc4.String", false]], "strip() (algopy.op.base64 method)": [[5, "algopy.op.Base64.strip", false]], "strip() (algopy.op.ec method)": [[5, "algopy.op.EC.strip", false]], "strip() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.strip", false]], "strip() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.strip", false]], "strip() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.strip", false]], "struct (class in algopy.arc4)": [[2, "algopy.arc4.Struct", false]], "subgroup_check() (algopy.op.ellipticcurve static method)": [[5, "algopy.op.EllipticCurve.subgroup_check", false]], "submit() (algopy.itxn.applicationcall method)": [[4, "algopy.itxn.ApplicationCall.submit", false]], "submit() (algopy.itxn.assetconfig method)": [[4, "algopy.itxn.AssetConfig.submit", false]], "submit() (algopy.itxn.assetfreeze method)": [[4, "algopy.itxn.AssetFreeze.submit", false]], "submit() (algopy.itxn.assettransfer method)": [[4, "algopy.itxn.AssetTransfer.submit", false]], "submit() (algopy.itxn.innertransaction method)": [[4, "algopy.itxn.InnerTransaction.submit", false]], "submit() (algopy.itxn.keyregistration method)": [[4, "algopy.itxn.KeyRegistration.submit", false]], "submit() (algopy.itxn.payment method)": [[4, "algopy.itxn.Payment.submit", false]], "submit() (algopy.op.itxncreate static method)": [[5, "algopy.op.ITxnCreate.submit", false]], "submit_txns() (in module algopy.itxn)": [[4, "algopy.itxn.submit_txns", false]], "subroutine() (in module algopy)": [[1, "algopy.subroutine", false]], "substring() (in module algopy.op)": [[5, "algopy.op.substring", false]], "sumhash512() (in module algopy.op)": [[5, "algopy.op.sumhash512", false]], "swapcase() (algopy.op.base64 method)": [[5, "algopy.op.Base64.swapcase", false]], "swapcase() (algopy.op.ec method)": [[5, "algopy.op.EC.swapcase", false]], "swapcase() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.swapcase", false]], "swapcase() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.swapcase", false]], "swapcase() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.swapcase", false]], "templatevar (in module algopy)": [[1, "algopy.TemplateVar", false]], "title() (algopy.op.base64 method)": [[5, "algopy.op.Base64.title", false]], "title() (algopy.op.ec method)": [[5, "algopy.op.EC.title", false]], "title() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.title", false]], "title() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.title", false]], "title() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.title", false]], "total (algopy.asset property)": [[1, "algopy.Asset.total", false]], "total (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.total", false]], "total (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.total", false]], "total (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.total", false]], "total (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.total", false]], "total_apps_created (algopy.account property)": [[1, "algopy.Account.total_apps_created", false]], "total_apps_opted_in (algopy.account property)": [[1, "algopy.Account.total_apps_opted_in", false]], "total_assets (algopy.account property)": [[1, "algopy.Account.total_assets", false]], "total_assets_created (algopy.account property)": [[1, "algopy.Account.total_assets_created", false]], "total_box_bytes (algopy.account property)": [[1, "algopy.Account.total_box_bytes", false]], "total_boxes (algopy.account property)": [[1, "algopy.Account.total_boxes", false]], "total_extra_app_pages (algopy.account property)": [[1, "algopy.Account.total_extra_app_pages", false]], "total_num_byte_slice (algopy.account property)": [[1, "algopy.Account.total_num_byte_slice", false]], "total_num_uint (algopy.account property)": [[1, "algopy.Account.total_num_uint", false]], "transaction (class in algopy.gtxn)": [[3, "algopy.gtxn.Transaction", false]], "transactionbase (class in algopy.gtxn)": [[3, "algopy.gtxn.TransactionBase", false]], "transactiontype (class in algopy)": [[1, "algopy.TransactionType", false]], "translate() (algopy.op.base64 method)": [[5, "algopy.op.Base64.translate", false]], "translate() (algopy.op.ec method)": [[5, "algopy.op.EC.translate", false]], "translate() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.translate", false]], "translate() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.translate", false]], "translate() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.translate", false]], "tuple (class in algopy.arc4)": [[2, "algopy.arc4.Tuple", false]], "tx_id (algopy.op.txn attribute)": [[5, "algopy.op.Txn.tx_id", false]], "tx_id (algopy.txn attribute)": [[1, "algopy.Txn.tx_id", false]], "tx_id() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.tx_id", false]], "tx_id() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.tx_id", false]], "tx_id() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.tx_id", false]], "txn (class in algopy)": [[1, "algopy.Txn", false]], "txn (class in algopy.op)": [[5, "algopy.op.Txn", false]], "txn_id (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.txn_id", false]], "txn_id (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.txn_id", false]], "txn_id (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.txn_id", false]], "txn_id (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.txn_id", false]], "txn_id (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.txn_id", false]], "txn_id (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.txn_id", false]], "txn_id (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.txn_id", false]], "txn_id (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.txn_id", false]], "txn_id (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.txn_id", false]], "txn_id (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.txn_id", false]], "txn_id (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.txn_id", false]], "txn_id (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.txn_id", false]], "txn_id (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.txn_id", false]], "txn_id (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.txn_id", false]], "txn_id (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.txn_id", false]], "type (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.type", false]], "type (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.type", false]], "type (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.type", false]], "type (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.type", false]], "type (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.type", false]], "type (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.type", false]], "type (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.type", false]], "type (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.type", false]], "type (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.type", false]], "type (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.type", false]], "type (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.type", false]], "type (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.type", false]], "type (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.type", false]], "type (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.type", false]], "type (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.type", false]], "type (algopy.op.txn attribute)": [[5, "algopy.op.Txn.type", false]], "type (algopy.txn attribute)": [[1, "algopy.Txn.type", false]], "type() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.type", false]], "type() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.type", false]], "type() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.type", false]], "type_bytes (algopy.gtxn.applicationcalltransaction property)": [[3, "algopy.gtxn.ApplicationCallTransaction.type_bytes", false]], "type_bytes (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.type_bytes", false]], "type_bytes (algopy.gtxn.assetfreezetransaction property)": [[3, "algopy.gtxn.AssetFreezeTransaction.type_bytes", false]], "type_bytes (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.type_bytes", false]], "type_bytes (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.type_bytes", false]], "type_bytes (algopy.gtxn.paymenttransaction property)": [[3, "algopy.gtxn.PaymentTransaction.type_bytes", false]], "type_bytes (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.type_bytes", false]], "type_bytes (algopy.gtxn.transactionbase property)": [[3, "algopy.gtxn.TransactionBase.type_bytes", false]], "type_bytes (algopy.itxn.applicationcallinnertransaction property)": [[4, "algopy.itxn.ApplicationCallInnerTransaction.type_bytes", false]], "type_bytes (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.type_bytes", false]], "type_bytes (algopy.itxn.assetfreezeinnertransaction property)": [[4, "algopy.itxn.AssetFreezeInnerTransaction.type_bytes", false]], "type_bytes (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.type_bytes", false]], "type_bytes (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.type_bytes", false]], "type_bytes (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.type_bytes", false]], "type_bytes (algopy.itxn.paymentinnertransaction property)": [[4, "algopy.itxn.PaymentInnerTransaction.type_bytes", false]], "type_enum (algopy.op.txn attribute)": [[5, "algopy.op.Txn.type_enum", false]], "type_enum (algopy.txn attribute)": [[1, "algopy.Txn.type_enum", false]], "type_enum() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.type_enum", false]], "type_enum() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.type_enum", false]], "type_enum() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.type_enum", false]], "uenumerate (class in algopy)": [[1, "algopy.uenumerate", false]], "ufixednxm (class in algopy.arc4)": [[2, "algopy.arc4.UFixedNxM", false]], "uint128 (in module algopy.arc4)": [[2, "algopy.arc4.UInt128", false]], "uint16 (in module algopy.arc4)": [[2, "algopy.arc4.UInt16", false]], "uint256 (in module algopy.arc4)": [[2, "algopy.arc4.UInt256", false]], "uint32 (in module algopy.arc4)": [[2, "algopy.arc4.UInt32", false]], "uint512 (in module algopy.arc4)": [[2, "algopy.arc4.UInt512", false]], "uint64 (class in algopy)": [[1, "algopy.UInt64", false]], "uint64 (in module algopy.arc4)": [[2, "algopy.arc4.UInt64", false]], "uint8 (in module algopy.arc4)": [[2, "algopy.arc4.UInt8", false]], "uintn (class in algopy.arc4)": [[2, "algopy.arc4.UIntN", false]], "unit_name (algopy.asset property)": [[1, "algopy.Asset.unit_name", false]], "unit_name (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.unit_name", false]], "unit_name (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.unit_name", false]], "unit_name (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.unit_name", false]], "unit_name (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.unit_name", false]], "updateapplication (algopy.oncompleteaction attribute)": [[1, "algopy.OnCompleteAction.UpdateApplication", false]], "upper() (algopy.op.base64 method)": [[5, "algopy.op.Base64.upper", false]], "upper() (algopy.op.ec method)": [[5, "algopy.op.EC.upper", false]], "upper() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.upper", false]], "upper() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.upper", false]], "upper() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.upper", false]], "urange (class in algopy)": [[1, "algopy.urange", false]], "url (algopy.asset property)": [[1, "algopy.Asset.url", false]], "url (algopy.gtxn.assetconfigtransaction property)": [[3, "algopy.gtxn.AssetConfigTransaction.url", false]], "url (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.url", false]], "url (algopy.itxn.assetconfiginnertransaction property)": [[4, "algopy.itxn.AssetConfigInnerTransaction.url", false]], "url (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.url", false]], "value (algopy.box property)": [[1, "algopy.Box.value", false]], "value (algopy.globalstate property)": [[1, "algopy.GlobalState.value", false]], "vote_first (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.vote_first", false]], "vote_first (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.vote_first", false]], "vote_first (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.vote_first", false]], "vote_first (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.vote_first", false]], "vote_first (algopy.op.txn attribute)": [[5, "algopy.op.Txn.vote_first", false]], "vote_first (algopy.txn attribute)": [[1, "algopy.Txn.vote_first", false]], "vote_first() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.vote_first", false]], "vote_first() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.vote_first", false]], "vote_first() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.vote_first", false]], "vote_key (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.vote_key", false]], "vote_key (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.vote_key", false]], "vote_key (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.vote_key", false]], "vote_key (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.vote_key", false]], "vote_key_dilution (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.vote_key_dilution", false]], "vote_key_dilution (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.vote_key_dilution", false]], "vote_key_dilution (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.vote_key_dilution", false]], "vote_key_dilution (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.vote_key_dilution", false]], "vote_key_dilution (algopy.op.txn attribute)": [[5, "algopy.op.Txn.vote_key_dilution", false]], "vote_key_dilution (algopy.txn attribute)": [[1, "algopy.Txn.vote_key_dilution", false]], "vote_key_dilution() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.vote_key_dilution", false]], "vote_key_dilution() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.vote_key_dilution", false]], "vote_key_dilution() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.vote_key_dilution", false]], "vote_last (algopy.gtxn.keyregistrationtransaction property)": [[3, "algopy.gtxn.KeyRegistrationTransaction.vote_last", false]], "vote_last (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.vote_last", false]], "vote_last (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.vote_last", false]], "vote_last (algopy.itxn.keyregistrationinnertransaction property)": [[4, "algopy.itxn.KeyRegistrationInnerTransaction.vote_last", false]], "vote_last (algopy.op.txn attribute)": [[5, "algopy.op.Txn.vote_last", false]], "vote_last (algopy.txn attribute)": [[1, "algopy.Txn.vote_last", false]], "vote_last() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.vote_last", false]], "vote_last() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.vote_last", false]], "vote_last() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.vote_last", false]], "vote_pk (algopy.op.txn attribute)": [[5, "algopy.op.Txn.vote_pk", false]], "vote_pk (algopy.txn attribute)": [[1, "algopy.Txn.vote_pk", false]], "vote_pk() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.vote_pk", false]], "vote_pk() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.vote_pk", false]], "vote_pk() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.vote_pk", false]], "voter_balance() (algopy.op.voterparamsget static method)": [[5, "algopy.op.VoterParamsGet.voter_balance", false]], "voter_incentive_eligible() (algopy.op.voterparamsget static method)": [[5, "algopy.op.VoterParamsGet.voter_incentive_eligible", false]], "voterparamsget (class in algopy.op)": [[5, "algopy.op.VoterParamsGet", false]], "vrf_verify() (in module algopy.op)": [[5, "algopy.op.vrf_verify", false]], "vrfverify (class in algopy.op)": [[5, "algopy.op.VrfVerify", false]], "xfer_asset (algopy.gtxn.assettransfertransaction property)": [[3, "algopy.gtxn.AssetTransferTransaction.xfer_asset", false]], "xfer_asset (algopy.gtxn.transaction property)": [[3, "algopy.gtxn.Transaction.xfer_asset", false]], "xfer_asset (algopy.itxn.assettransferinnertransaction property)": [[4, "algopy.itxn.AssetTransferInnerTransaction.xfer_asset", false]], "xfer_asset (algopy.itxn.innertransactionresult property)": [[4, "algopy.itxn.InnerTransactionResult.xfer_asset", false]], "xfer_asset (algopy.op.txn attribute)": [[5, "algopy.op.Txn.xfer_asset", false]], "xfer_asset (algopy.txn attribute)": [[1, "algopy.Txn.xfer_asset", false]], "xfer_asset() (algopy.op.gitxn static method)": [[5, "algopy.op.GITxn.xfer_asset", false]], "xfer_asset() (algopy.op.gtxn static method)": [[5, "algopy.op.GTxn.xfer_asset", false]], "xfer_asset() (algopy.op.itxn static method)": [[5, "algopy.op.ITxn.xfer_asset", false]], "zero_address (algopy.global attribute)": [[1, "algopy.Global.zero_address", false]], "zero_address (algopy.op.global attribute)": [[5, "algopy.op.Global.zero_address", false]], "zfill() (algopy.op.base64 method)": [[5, "algopy.op.Base64.zfill", false]], "zfill() (algopy.op.ec method)": [[5, "algopy.op.EC.zfill", false]], "zfill() (algopy.op.ecdsa method)": [[5, "algopy.op.ECDSA.zfill", false]], "zfill() (algopy.op.mimcconfigurations method)": [[5, "algopy.op.MiMCConfigurations.zfill", false]], "zfill() (algopy.op.vrfverify method)": [[5, "algopy.op.VrfVerify.zfill", false]]}, "objects": {"": [[1, 0, 0, "-", "algopy"]], "algopy": [[1, 1, 1, "", "ARC4Contract"], [1, 1, 1, "", "Account"], [1, 1, 1, "", "Application"], [1, 1, 1, "", "Array"], [1, 1, 1, "", "Asset"], [1, 1, 1, "", "BigUInt"], [1, 1, 1, "", "Box"], [1, 1, 1, "", "BoxMap"], [1, 1, 1, "", "BoxRef"], [1, 1, 1, "", "Bytes"], [1, 1, 1, "", "BytesBacked"], [1, 1, 1, "", "CompiledContract"], [1, 1, 1, "", "CompiledLogicSig"], [1, 1, 1, "", "Contract"], [1, 1, 1, "", "Global"], [1, 1, 1, "", "GlobalState"], [1, 1, 1, "", "ImmutableArray"], [1, 1, 1, "", "LocalState"], [1, 1, 1, "", "LogicSig"], [1, 1, 1, "", "OnCompleteAction"], [1, 1, 1, "", "OpUpFeeSource"], [1, 1, 1, "", "StateTotals"], [1, 1, 1, "", "String"], [1, 5, 1, "", "TemplateVar"], [1, 1, 1, "", "TransactionType"], [1, 1, 1, "", "Txn"], [1, 1, 1, "", "UInt64"], [2, 0, 0, "-", "arc4"], [1, 6, 1, "", "compile_contract"], [1, 6, 1, "", "compile_logicsig"], [1, 6, 1, "", "ensure_budget"], [3, 0, 0, "-", "gtxn"], [4, 0, 0, "-", "itxn"], [1, 6, 1, "", "log"], [1, 6, 1, "", "logicsig"], [5, 0, 0, "-", "op"], [1, 6, 1, "", "subroutine"], [1, 1, 1, "", "uenumerate"], [1, 1, 1, "", "urange"]], "algopy.ARC4Contract": [[1, 2, 1, "", "__init_subclass__"], [1, 2, 1, "", "approval_program"], [1, 2, 1, "", "clear_state_program"]], "algopy.Account": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__ne__"], [1, 3, 1, "", "auth_address"], [1, 3, 1, "", "balance"], [1, 3, 1, "", "bytes"], [1, 2, 1, "", "from_bytes"], [1, 2, 1, "", "is_opted_in"], [1, 3, 1, "", "min_balance"], [1, 3, 1, "", "total_apps_created"], [1, 3, 1, "", "total_apps_opted_in"], [1, 3, 1, "", "total_assets"], [1, 3, 1, "", "total_assets_created"], [1, 3, 1, "", "total_box_bytes"], [1, 3, 1, "", "total_boxes"], [1, 3, 1, "", "total_extra_app_pages"], [1, 3, 1, "", "total_num_byte_slice"], [1, 3, 1, "", "total_num_uint"]], "algopy.Application": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__ne__"], [1, 3, 1, "", "address"], [1, 3, 1, "", "approval_program"], [1, 3, 1, "", "clear_state_program"], [1, 3, 1, "", "creator"], [1, 3, 1, "", "extra_program_pages"], [1, 3, 1, "", "global_num_bytes"], [1, 3, 1, "", "global_num_uint"], [1, 3, 1, "", "id"], [1, 3, 1, "", "local_num_bytes"], [1, 3, 1, "", "local_num_uint"]], "algopy.Array": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__reversed__"], [1, 2, 1, "", "__setitem__"], [1, 2, 1, "", "append"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "extend"], [1, 2, 1, "", "freeze"], [1, 3, 1, "", "length"], [1, 2, 1, "", "pop"]], "algopy.Asset": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "balance"], [1, 3, 1, "", "clawback"], [1, 3, 1, "", "creator"], [1, 3, 1, "", "decimals"], [1, 3, 1, "", "default_frozen"], [1, 3, 1, "", "freeze"], [1, 2, 1, "", "frozen"], [1, 3, 1, "", "id"], [1, 3, 1, "", "manager"], [1, 3, 1, "", "metadata_hash"], [1, 3, 1, "", "name"], [1, 3, 1, "", "reserve"], [1, 3, 1, "", "total"], [1, 3, 1, "", "unit_name"], [1, 3, 1, "", "url"]], "algopy.BigUInt": [[1, 2, 1, "", "__add__"], [1, 2, 1, "", "__and__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__floordiv__"], [1, 2, 1, "", "__ge__"], [1, 2, 1, "", "__gt__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__iand__"], [1, 2, 1, "", "__ifloordiv__"], [1, 2, 1, "", "__imod__"], [1, 2, 1, "", "__imul__"], [1, 2, 1, "", "__ior__"], [1, 2, 1, "", "__isub__"], [1, 2, 1, "", "__ixor__"], [1, 2, 1, "", "__le__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "__mod__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__or__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__rand__"], [1, 2, 1, "", "__rfloordiv__"], [1, 2, 1, "", "__rmod__"], [1, 2, 1, "", "__rmul__"], [1, 2, 1, "", "__ror__"], [1, 2, 1, "", "__rsub__"], [1, 2, 1, "", "__rxor__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__xor__"], [1, 3, 1, "", "bytes"], [1, 2, 1, "", "from_bytes"]], "algopy.Box": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "get"], [1, 3, 1, "", "key"], [1, 3, 1, "", "length"], [1, 2, 1, "", "maybe"], [1, 3, 1, "", "value"]], "algopy.BoxMap": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__delitem__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__setitem__"], [1, 2, 1, "", "get"], [1, 3, 1, "", "key_prefix"], [1, 2, 1, "", "length"], [1, 2, 1, "", "maybe"]], "algopy.BoxRef": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "extract"], [1, 2, 1, "", "get"], [1, 3, 1, "", "key"], [1, 3, 1, "", "length"], [1, 2, 1, "", "maybe"], [1, 2, 1, "", "put"], [1, 2, 1, "", "replace"], [1, 2, 1, "", "resize"], [1, 2, 1, "", "splice"]], "algopy.Bytes": [[1, 2, 1, "", "__add__"], [1, 2, 1, "", "__and__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__iand__"], [1, 2, 1, "", "__invert__"], [1, 2, 1, "", "__ior__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__ixor__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__or__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__reversed__"], [1, 2, 1, "", "__xor__"], [1, 2, 1, "", "from_base32"], [1, 2, 1, "", "from_base64"], [1, 2, 1, "", "from_hex"], [1, 3, 1, "", "length"]], "algopy.BytesBacked": [[1, 3, 1, "", "bytes"], [1, 2, 1, "", "from_bytes"]], "algopy.CompiledContract": [[1, 4, 1, "", "approval_program"], [1, 4, 1, "", "clear_state_program"], [1, 4, 1, "", "extra_program_pages"], [1, 4, 1, "", "global_bytes"], [1, 4, 1, "", "global_uints"], [1, 4, 1, "", "local_bytes"], [1, 4, 1, "", "local_uints"]], "algopy.CompiledLogicSig": [[1, 4, 1, "", "account"]], "algopy.Contract": [[1, 2, 1, "", "__init_subclass__"], [1, 2, 1, "", "approval_program"], [1, 2, 1, "", "clear_state_program"]], "algopy.Global": [[1, 4, 1, "", "asset_create_min_balance"], [1, 4, 1, "", "asset_opt_in_min_balance"], [1, 4, 1, "", "caller_application_address"], [1, 4, 1, "", "caller_application_id"], [1, 4, 1, "", "creator_address"], [1, 4, 1, "", "current_application_address"], [1, 4, 1, "", "current_application_id"], [1, 4, 1, "", "genesis_hash"], [1, 4, 1, "", "group_id"], [1, 4, 1, "", "group_size"], [1, 4, 1, "", "latest_timestamp"], [1, 4, 1, "", "logic_sig_version"], [1, 4, 1, "", "max_txn_life"], [1, 4, 1, "", "min_balance"], [1, 4, 1, "", "min_txn_fee"], [1, 2, 1, "", "opcode_budget"], [1, 4, 1, "", "payouts_enabled"], [1, 4, 1, "", "payouts_go_online_fee"], [1, 4, 1, "", "payouts_max_balance"], [1, 4, 1, "", "payouts_min_balance"], [1, 4, 1, "", "payouts_percent"], [1, 4, 1, "", "round"], [1, 4, 1, "", "zero_address"]], "algopy.GlobalState": [[1, 2, 1, "", "__bool__"], [1, 2, 1, "", "get"], [1, 3, 1, "", "key"], [1, 2, 1, "", "maybe"], [1, 3, 1, "", "value"]], "algopy.ImmutableArray": [[1, 2, 1, "", "__add__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__reversed__"], [1, 2, 1, "", "append"], [1, 3, 1, "", "length"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "replace"]], "algopy.LocalState": [[1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__delitem__"], [1, 2, 1, "", "__getitem__"], [1, 2, 1, "", "__setitem__"], [1, 2, 1, "", "get"], [1, 3, 1, "", "key"], [1, 2, 1, "", "maybe"]], "algopy.OnCompleteAction": [[1, 4, 1, "", "ClearState"], [1, 4, 1, "", "CloseOut"], [1, 4, 1, "", "DeleteApplication"], [1, 4, 1, "", "NoOp"], [1, 4, 1, "", "OptIn"], [1, 4, 1, "", "UpdateApplication"], [1, 2, 1, "", "__add__"], [1, 2, 1, "", "__and__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__floordiv__"], [1, 2, 1, "", "__ge__"], [1, 2, 1, "", "__gt__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__iand__"], [1, 2, 1, "", "__ifloordiv__"], [1, 2, 1, "", "__ilshift__"], [1, 2, 1, "", "__imod__"], [1, 2, 1, "", "__imul__"], [1, 2, 1, "", "__index__"], [1, 2, 1, "", "__invert__"], [1, 2, 1, "", "__ior__"], [1, 2, 1, "", "__ipow__"], [1, 2, 1, "", "__irshift__"], [1, 2, 1, "", "__isub__"], [1, 2, 1, "", "__ixor__"], [1, 2, 1, "", "__le__"], [1, 2, 1, "", "__lshift__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "__mod__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__or__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__pow__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__rand__"], [1, 2, 1, "", "__rfloordiv__"], [1, 2, 1, "", "__rlshift__"], [1, 2, 1, "", "__rmod__"], [1, 2, 1, "", "__rmul__"], [1, 2, 1, "", "__ror__"], [1, 2, 1, "", "__rpow__"], [1, 2, 1, "", "__rrshift__"], [1, 2, 1, "", "__rshift__"], [1, 2, 1, "", "__rsub__"], [1, 2, 1, "", "__rxor__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__xor__"]], "algopy.OpUpFeeSource": [[1, 4, 1, "", "Any"], [1, 4, 1, "", "AppAccount"], [1, 4, 1, "", "GroupCredit"], [1, 2, 1, "", "__add__"], [1, 2, 1, "", "__and__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__floordiv__"], [1, 2, 1, "", "__ge__"], [1, 2, 1, "", "__gt__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__iand__"], [1, 2, 1, "", "__ifloordiv__"], [1, 2, 1, "", "__ilshift__"], [1, 2, 1, "", "__imod__"], [1, 2, 1, "", "__imul__"], [1, 2, 1, "", "__index__"], [1, 2, 1, "", "__invert__"], [1, 2, 1, "", "__ior__"], [1, 2, 1, "", "__ipow__"], [1, 2, 1, "", "__irshift__"], [1, 2, 1, "", "__isub__"], [1, 2, 1, "", "__ixor__"], [1, 2, 1, "", "__le__"], [1, 2, 1, "", "__lshift__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "__mod__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__or__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__pow__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__rand__"], [1, 2, 1, "", "__rfloordiv__"], [1, 2, 1, "", "__rlshift__"], [1, 2, 1, "", "__rmod__"], [1, 2, 1, "", "__rmul__"], [1, 2, 1, "", "__ror__"], [1, 2, 1, "", "__rpow__"], [1, 2, 1, "", "__rrshift__"], [1, 2, 1, "", "__rshift__"], [1, 2, 1, "", "__rsub__"], [1, 2, 1, "", "__rxor__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__xor__"]], "algopy.String": [[1, 2, 1, "", "__add__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__contains__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__radd__"], [1, 3, 1, "", "bytes"], [1, 2, 1, "", "endswith"], [1, 2, 1, "", "from_bytes"], [1, 2, 1, "", "join"], [1, 2, 1, "", "startswith"]], "algopy.TransactionType": [[1, 4, 1, "", "ApplicationCall"], [1, 4, 1, "", "AssetConfig"], [1, 4, 1, "", "AssetFreeze"], [1, 4, 1, "", "AssetTransfer"], [1, 4, 1, "", "KeyRegistration"], [1, 4, 1, "", "Payment"], [1, 2, 1, "", "__add__"], [1, 2, 1, "", "__and__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__floordiv__"], [1, 2, 1, "", "__ge__"], [1, 2, 1, "", "__gt__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__iand__"], [1, 2, 1, "", "__ifloordiv__"], [1, 2, 1, "", "__ilshift__"], [1, 2, 1, "", "__imod__"], [1, 2, 1, "", "__imul__"], [1, 2, 1, "", "__index__"], [1, 2, 1, "", "__invert__"], [1, 2, 1, "", "__ior__"], [1, 2, 1, "", "__ipow__"], [1, 2, 1, "", "__irshift__"], [1, 2, 1, "", "__isub__"], [1, 2, 1, "", "__ixor__"], [1, 2, 1, "", "__le__"], [1, 2, 1, "", "__lshift__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "__mod__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__or__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__pow__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__rand__"], [1, 2, 1, "", "__rfloordiv__"], [1, 2, 1, "", "__rlshift__"], [1, 2, 1, "", "__rmod__"], [1, 2, 1, "", "__rmul__"], [1, 2, 1, "", "__ror__"], [1, 2, 1, "", "__rpow__"], [1, 2, 1, "", "__rrshift__"], [1, 2, 1, "", "__rshift__"], [1, 2, 1, "", "__rsub__"], [1, 2, 1, "", "__rxor__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__xor__"]], "algopy.Txn": [[1, 2, 1, "", "accounts"], [1, 4, 1, "", "amount"], [1, 2, 1, "", "application_args"], [1, 4, 1, "", "application_id"], [1, 2, 1, "", "applications"], [1, 4, 1, "", "approval_program"], [1, 2, 1, "", "approval_program_pages"], [1, 4, 1, "", "asset_amount"], [1, 4, 1, "", "asset_close_to"], [1, 4, 1, "", "asset_receiver"], [1, 4, 1, "", "asset_sender"], [1, 2, 1, "", "assets"], [1, 4, 1, "", "clear_state_program"], [1, 2, 1, "", "clear_state_program_pages"], [1, 4, 1, "", "close_remainder_to"], [1, 4, 1, "", "config_asset"], [1, 4, 1, "", "config_asset_clawback"], [1, 4, 1, "", "config_asset_decimals"], [1, 4, 1, "", "config_asset_default_frozen"], [1, 4, 1, "", "config_asset_freeze"], [1, 4, 1, "", "config_asset_manager"], [1, 4, 1, "", "config_asset_metadata_hash"], [1, 4, 1, "", "config_asset_name"], [1, 4, 1, "", "config_asset_reserve"], [1, 4, 1, "", "config_asset_total"], [1, 4, 1, "", "config_asset_unit_name"], [1, 4, 1, "", "config_asset_url"], [1, 4, 1, "", "created_application_id"], [1, 4, 1, "", "created_asset_id"], [1, 4, 1, "", "extra_program_pages"], [1, 4, 1, "", "fee"], [1, 4, 1, "", "first_valid"], [1, 4, 1, "", "first_valid_time"], [1, 4, 1, "", "freeze_asset"], [1, 4, 1, "", "freeze_asset_account"], [1, 4, 1, "", "freeze_asset_frozen"], [1, 4, 1, "", "global_num_byte_slice"], [1, 4, 1, "", "global_num_uint"], [1, 4, 1, "", "group_index"], [1, 4, 1, "", "last_log"], [1, 4, 1, "", "last_valid"], [1, 4, 1, "", "lease"], [1, 4, 1, "", "local_num_byte_slice"], [1, 4, 1, "", "local_num_uint"], [1, 2, 1, "", "logs"], [1, 4, 1, "", "nonparticipation"], [1, 4, 1, "", "note"], [1, 4, 1, "", "num_accounts"], [1, 4, 1, "", "num_app_args"], [1, 4, 1, "", "num_applications"], [1, 4, 1, "", "num_approval_program_pages"], [1, 4, 1, "", "num_assets"], [1, 4, 1, "", "num_clear_state_program_pages"], [1, 4, 1, "", "num_logs"], [1, 4, 1, "", "on_completion"], [1, 4, 1, "", "receiver"], [1, 4, 1, "", "rekey_to"], [1, 4, 1, "", "selection_pk"], [1, 4, 1, "", "sender"], [1, 4, 1, "", "state_proof_pk"], [1, 4, 1, "", "tx_id"], [1, 4, 1, "", "type"], [1, 4, 1, "", "type_enum"], [1, 4, 1, "", "vote_first"], [1, 4, 1, "", "vote_key_dilution"], [1, 4, 1, "", "vote_last"], [1, 4, 1, "", "vote_pk"], [1, 4, 1, "", "xfer_asset"]], "algopy.UInt64": [[1, 2, 1, "", "__add__"], [1, 2, 1, "", "__and__"], [1, 2, 1, "", "__bool__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__floordiv__"], [1, 2, 1, "", "__ge__"], [1, 2, 1, "", "__gt__"], [1, 2, 1, "", "__iadd__"], [1, 2, 1, "", "__iand__"], [1, 2, 1, "", "__ifloordiv__"], [1, 2, 1, "", "__ilshift__"], [1, 2, 1, "", "__imod__"], [1, 2, 1, "", "__imul__"], [1, 2, 1, "", "__index__"], [1, 2, 1, "", "__invert__"], [1, 2, 1, "", "__ior__"], [1, 2, 1, "", "__ipow__"], [1, 2, 1, "", "__irshift__"], [1, 2, 1, "", "__isub__"], [1, 2, 1, "", "__ixor__"], [1, 2, 1, "", "__le__"], [1, 2, 1, "", "__lshift__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "__mod__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__or__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__pow__"], [1, 2, 1, "", "__radd__"], [1, 2, 1, "", "__rand__"], [1, 2, 1, "", "__rfloordiv__"], [1, 2, 1, "", "__rlshift__"], [1, 2, 1, "", "__rmod__"], [1, 2, 1, "", "__rmul__"], [1, 2, 1, "", "__ror__"], [1, 2, 1, "", "__rpow__"], [1, 2, 1, "", "__rrshift__"], [1, 2, 1, "", "__rshift__"], [1, 2, 1, "", "__rsub__"], [1, 2, 1, "", "__rxor__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__xor__"]], "algopy.arc4": [[2, 1, 1, "", "ARC4Client"], [2, 1, 1, "", "ARC4Contract"], [2, 1, 1, "", "Address"], [2, 1, 1, "", "BigUFixedNxM"], [2, 1, 1, "", "BigUIntN"], [2, 1, 1, "", "Bool"], [2, 1, 1, "", "Byte"], [2, 1, 1, "", "DynamicArray"], [2, 1, 1, "", "DynamicBytes"], [2, 1, 1, "", "StaticArray"], [2, 1, 1, "", "String"], [2, 1, 1, "", "Struct"], [2, 1, 1, "", "Tuple"], [2, 1, 1, "", "UFixedNxM"], [2, 5, 1, "", "UInt128"], [2, 5, 1, "", "UInt16"], [2, 5, 1, "", "UInt256"], [2, 5, 1, "", "UInt32"], [2, 5, 1, "", "UInt512"], [2, 5, 1, "", "UInt64"], [2, 5, 1, "", "UInt8"], [2, 1, 1, "", "UIntN"], [2, 5, 1, "", "abi_call"], [2, 6, 1, "", "abimethod"], [2, 6, 1, "", "arc4_create"], [2, 6, 1, "", "arc4_signature"], [2, 6, 1, "", "arc4_update"], [2, 6, 1, "", "baremethod"], [2, 6, 1, "", "emit"]], "algopy.arc4.ARC4Contract": [[2, 2, 1, "", "__init_subclass__"], [2, 2, 1, "", "approval_program"], [2, 2, 1, "", "clear_state_program"]], "algopy.arc4.Address": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__ne__"], [2, 2, 1, "", "__reversed__"], [2, 2, 1, "", "__setitem__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "length"], [2, 3, 1, "", "native"]], "algopy.arc4.BigUFixedNxM": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"]], "algopy.arc4.BigUIntN": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__ge__"], [2, 2, 1, "", "__gt__"], [2, 2, 1, "", "__le__"], [2, 2, 1, "", "__lt__"], [2, 2, 1, "", "__ne__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "native"]], "algopy.arc4.Bool": [[2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__ne__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "native"]], "algopy.arc4.Byte": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__ge__"], [2, 2, 1, "", "__gt__"], [2, 2, 1, "", "__le__"], [2, 2, 1, "", "__lt__"], [2, 2, 1, "", "__ne__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "native"]], "algopy.arc4.DynamicArray": [[2, 2, 1, "", "__add__"], [2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__reversed__"], [2, 2, 1, "", "__setitem__"], [2, 2, 1, "", "append"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "extend"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "length"], [2, 2, 1, "", "pop"]], "algopy.arc4.DynamicBytes": [[2, 2, 1, "", "__add__"], [2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__reversed__"], [2, 2, 1, "", "__setitem__"], [2, 2, 1, "", "append"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "extend"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "length"], [2, 3, 1, "", "native"], [2, 2, 1, "", "pop"]], "algopy.arc4.StaticArray": [[2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__reversed__"], [2, 2, 1, "", "__setitem__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "length"]], "algopy.arc4.String": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "native"]], "algopy.arc4.Struct": [[2, 2, 1, "", "_replace"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"]], "algopy.arc4.Tuple": [[2, 2, 1, "", "__add__"], [2, 2, 1, "", "__contains__"], [2, 2, 1, "", "__delattr__"], [2, 2, 1, "", "__dir__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__format__"], [2, 2, 1, "", "__ge__"], [2, 2, 1, "", "__getattribute__"], [2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__getstate__"], [2, 2, 1, "", "__gt__"], [2, 2, 1, "", "__hash__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__le__"], [2, 2, 1, "", "__len__"], [2, 2, 1, "", "__lt__"], [2, 2, 1, "", "__mul__"], [2, 2, 1, "", "__ne__"], [2, 2, 1, "", "__new__"], [2, 2, 1, "", "__reduce__"], [2, 2, 1, "", "__reduce_ex__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "__rmul__"], [2, 2, 1, "", "__setattr__"], [2, 2, 1, "", "__sizeof__"], [2, 2, 1, "", "__str__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "count"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 2, 1, "", "index"], [2, 3, 1, "", "native"]], "algopy.arc4.UFixedNxM": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"]], "algopy.arc4.UIntN": [[2, 2, 1, "", "__bool__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__ge__"], [2, 2, 1, "", "__gt__"], [2, 2, 1, "", "__le__"], [2, 2, 1, "", "__lt__"], [2, 2, 1, "", "__ne__"], [2, 3, 1, "", "bytes"], [2, 2, 1, "", "from_bytes"], [2, 2, 1, "", "from_log"], [2, 3, 1, "", "native"]], "algopy.gtxn": [[3, 1, 1, "", "ApplicationCallTransaction"], [3, 1, 1, "", "AssetConfigTransaction"], [3, 1, 1, "", "AssetFreezeTransaction"], [3, 1, 1, "", "AssetTransferTransaction"], [3, 1, 1, "", "KeyRegistrationTransaction"], [3, 1, 1, "", "PaymentTransaction"], [3, 1, 1, "", "Transaction"], [3, 1, 1, "", "TransactionBase"]], "algopy.gtxn.ApplicationCallTransaction": [[3, 2, 1, "", "accounts"], [3, 2, 1, "", "app_args"], [3, 3, 1, "", "app_id"], [3, 3, 1, "", "approval_program"], [3, 2, 1, "", "approval_program_pages"], [3, 2, 1, "", "apps"], [3, 2, 1, "", "assets"], [3, 3, 1, "", "clear_state_program"], [3, 2, 1, "", "clear_state_program_pages"], [3, 3, 1, "", "created_app"], [3, 3, 1, "", "extra_program_pages"], [3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "global_num_bytes"], [3, 3, 1, "", "global_num_uint"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_log"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "local_num_bytes"], [3, 3, 1, "", "local_num_uint"], [3, 2, 1, "", "logs"], [3, 3, 1, "", "note"], [3, 3, 1, "", "num_accounts"], [3, 3, 1, "", "num_app_args"], [3, 3, 1, "", "num_approval_program_pages"], [3, 3, 1, "", "num_apps"], [3, 3, 1, "", "num_assets"], [3, 3, 1, "", "num_clear_state_program_pages"], [3, 3, 1, "", "num_logs"], [3, 3, 1, "", "on_completion"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"]], "algopy.gtxn.AssetConfigTransaction": [[3, 3, 1, "", "asset_name"], [3, 3, 1, "", "clawback"], [3, 3, 1, "", "config_asset"], [3, 3, 1, "", "created_asset"], [3, 3, 1, "", "decimals"], [3, 3, 1, "", "default_frozen"], [3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "freeze"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "manager"], [3, 3, 1, "", "metadata_hash"], [3, 3, 1, "", "note"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "reserve"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "total"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"], [3, 3, 1, "", "unit_name"], [3, 3, 1, "", "url"]], "algopy.gtxn.AssetFreezeTransaction": [[3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "freeze_account"], [3, 3, 1, "", "freeze_asset"], [3, 3, 1, "", "frozen"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "note"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"]], "algopy.gtxn.AssetTransferTransaction": [[3, 3, 1, "", "asset_amount"], [3, 3, 1, "", "asset_close_to"], [3, 3, 1, "", "asset_receiver"], [3, 3, 1, "", "asset_sender"], [3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "note"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"], [3, 3, 1, "", "xfer_asset"]], "algopy.gtxn.KeyRegistrationTransaction": [[3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "non_participation"], [3, 3, 1, "", "note"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "selection_key"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "state_proof_key"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"], [3, 3, 1, "", "vote_first"], [3, 3, 1, "", "vote_key"], [3, 3, 1, "", "vote_key_dilution"], [3, 3, 1, "", "vote_last"]], "algopy.gtxn.PaymentTransaction": [[3, 3, 1, "", "amount"], [3, 3, 1, "", "close_remainder_to"], [3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "note"], [3, 3, 1, "", "receiver"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"]], "algopy.gtxn.Transaction": [[3, 2, 1, "", "accounts"], [3, 3, 1, "", "amount"], [3, 2, 1, "", "app_args"], [3, 3, 1, "", "app_id"], [3, 3, 1, "", "approval_program"], [3, 2, 1, "", "approval_program_pages"], [3, 2, 1, "", "apps"], [3, 3, 1, "", "asset_amount"], [3, 3, 1, "", "asset_close_to"], [3, 3, 1, "", "asset_name"], [3, 3, 1, "", "asset_receiver"], [3, 3, 1, "", "asset_sender"], [3, 2, 1, "", "assets"], [3, 3, 1, "", "clawback"], [3, 3, 1, "", "clear_state_program"], [3, 2, 1, "", "clear_state_program_pages"], [3, 3, 1, "", "close_remainder_to"], [3, 3, 1, "", "config_asset"], [3, 3, 1, "", "created_app"], [3, 3, 1, "", "created_asset"], [3, 3, 1, "", "decimals"], [3, 3, 1, "", "default_frozen"], [3, 3, 1, "", "extra_program_pages"], [3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "freeze"], [3, 3, 1, "", "freeze_account"], [3, 3, 1, "", "freeze_asset"], [3, 3, 1, "", "frozen"], [3, 3, 1, "", "global_num_bytes"], [3, 3, 1, "", "global_num_uint"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_log"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "local_num_bytes"], [3, 3, 1, "", "local_num_uint"], [3, 2, 1, "", "logs"], [3, 3, 1, "", "manager"], [3, 3, 1, "", "metadata_hash"], [3, 3, 1, "", "non_participation"], [3, 3, 1, "", "note"], [3, 3, 1, "", "num_accounts"], [3, 3, 1, "", "num_app_args"], [3, 3, 1, "", "num_approval_program_pages"], [3, 3, 1, "", "num_apps"], [3, 3, 1, "", "num_assets"], [3, 3, 1, "", "num_clear_state_program_pages"], [3, 3, 1, "", "num_logs"], [3, 3, 1, "", "on_completion"], [3, 3, 1, "", "receiver"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "reserve"], [3, 3, 1, "", "selection_key"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "state_proof_key"], [3, 3, 1, "", "total"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"], [3, 3, 1, "", "unit_name"], [3, 3, 1, "", "url"], [3, 3, 1, "", "vote_first"], [3, 3, 1, "", "vote_key"], [3, 3, 1, "", "vote_key_dilution"], [3, 3, 1, "", "vote_last"], [3, 3, 1, "", "xfer_asset"]], "algopy.gtxn.TransactionBase": [[3, 3, 1, "", "fee"], [3, 3, 1, "", "first_valid"], [3, 3, 1, "", "first_valid_time"], [3, 3, 1, "", "group_index"], [3, 3, 1, "", "last_valid"], [3, 3, 1, "", "lease"], [3, 3, 1, "", "note"], [3, 3, 1, "", "rekey_to"], [3, 3, 1, "", "sender"], [3, 3, 1, "", "txn_id"], [3, 3, 1, "", "type"], [3, 3, 1, "", "type_bytes"]], "algopy.itxn": [[4, 1, 1, "", "ApplicationCall"], [4, 1, 1, "", "ApplicationCallInnerTransaction"], [4, 1, 1, "", "AssetConfig"], [4, 1, 1, "", "AssetConfigInnerTransaction"], [4, 1, 1, "", "AssetFreeze"], [4, 1, 1, "", "AssetFreezeInnerTransaction"], [4, 1, 1, "", "AssetTransfer"], [4, 1, 1, "", "AssetTransferInnerTransaction"], [4, 1, 1, "", "InnerTransaction"], [4, 1, 1, "", "InnerTransactionResult"], [4, 1, 1, "", "KeyRegistration"], [4, 1, 1, "", "KeyRegistrationInnerTransaction"], [4, 1, 1, "", "Payment"], [4, 1, 1, "", "PaymentInnerTransaction"], [4, 6, 1, "", "submit_txns"]], "algopy.itxn.ApplicationCall": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.ApplicationCallInnerTransaction": [[4, 2, 1, "", "accounts"], [4, 2, 1, "", "app_args"], [4, 3, 1, "", "app_id"], [4, 3, 1, "", "approval_program"], [4, 2, 1, "", "approval_program_pages"], [4, 2, 1, "", "apps"], [4, 2, 1, "", "assets"], [4, 3, 1, "", "clear_state_program"], [4, 2, 1, "", "clear_state_program_pages"], [4, 3, 1, "", "created_app"], [4, 3, 1, "", "extra_program_pages"], [4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "global_num_bytes"], [4, 3, 1, "", "global_num_uint"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_log"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "local_num_bytes"], [4, 3, 1, "", "local_num_uint"], [4, 2, 1, "", "logs"], [4, 3, 1, "", "note"], [4, 3, 1, "", "num_accounts"], [4, 3, 1, "", "num_app_args"], [4, 3, 1, "", "num_approval_program_pages"], [4, 3, 1, "", "num_apps"], [4, 3, 1, "", "num_assets"], [4, 3, 1, "", "num_clear_state_program_pages"], [4, 3, 1, "", "num_logs"], [4, 3, 1, "", "on_completion"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"]], "algopy.itxn.AssetConfig": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.AssetConfigInnerTransaction": [[4, 3, 1, "", "asset_name"], [4, 3, 1, "", "clawback"], [4, 3, 1, "", "config_asset"], [4, 3, 1, "", "created_asset"], [4, 3, 1, "", "decimals"], [4, 3, 1, "", "default_frozen"], [4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "freeze"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "manager"], [4, 3, 1, "", "metadata_hash"], [4, 3, 1, "", "note"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "reserve"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "total"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"], [4, 3, 1, "", "unit_name"], [4, 3, 1, "", "url"]], "algopy.itxn.AssetFreeze": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.AssetFreezeInnerTransaction": [[4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "freeze_account"], [4, 3, 1, "", "freeze_asset"], [4, 3, 1, "", "frozen"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "note"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"]], "algopy.itxn.AssetTransfer": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.AssetTransferInnerTransaction": [[4, 3, 1, "", "asset_amount"], [4, 3, 1, "", "asset_close_to"], [4, 3, 1, "", "asset_receiver"], [4, 3, 1, "", "asset_sender"], [4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "note"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"], [4, 3, 1, "", "xfer_asset"]], "algopy.itxn.InnerTransaction": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.InnerTransactionResult": [[4, 2, 1, "", "accounts"], [4, 3, 1, "", "amount"], [4, 2, 1, "", "app_args"], [4, 3, 1, "", "app_id"], [4, 3, 1, "", "approval_program"], [4, 2, 1, "", "approval_program_pages"], [4, 2, 1, "", "apps"], [4, 3, 1, "", "asset_amount"], [4, 3, 1, "", "asset_close_to"], [4, 3, 1, "", "asset_name"], [4, 3, 1, "", "asset_receiver"], [4, 3, 1, "", "asset_sender"], [4, 2, 1, "", "assets"], [4, 3, 1, "", "clawback"], [4, 3, 1, "", "clear_state_program"], [4, 2, 1, "", "clear_state_program_pages"], [4, 3, 1, "", "close_remainder_to"], [4, 3, 1, "", "config_asset"], [4, 3, 1, "", "created_app"], [4, 3, 1, "", "created_asset"], [4, 3, 1, "", "decimals"], [4, 3, 1, "", "default_frozen"], [4, 3, 1, "", "extra_program_pages"], [4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "freeze"], [4, 3, 1, "", "freeze_account"], [4, 3, 1, "", "freeze_asset"], [4, 3, 1, "", "frozen"], [4, 3, 1, "", "global_num_bytes"], [4, 3, 1, "", "global_num_uint"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_log"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "local_num_bytes"], [4, 3, 1, "", "local_num_uint"], [4, 2, 1, "", "logs"], [4, 3, 1, "", "manager"], [4, 3, 1, "", "metadata_hash"], [4, 3, 1, "", "non_participation"], [4, 3, 1, "", "note"], [4, 3, 1, "", "num_accounts"], [4, 3, 1, "", "num_app_args"], [4, 3, 1, "", "num_approval_program_pages"], [4, 3, 1, "", "num_apps"], [4, 3, 1, "", "num_assets"], [4, 3, 1, "", "num_clear_state_program_pages"], [4, 3, 1, "", "num_logs"], [4, 3, 1, "", "on_completion"], [4, 3, 1, "", "receiver"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "reserve"], [4, 3, 1, "", "selection_key"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "state_proof_key"], [4, 3, 1, "", "total"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"], [4, 3, 1, "", "unit_name"], [4, 3, 1, "", "url"], [4, 3, 1, "", "vote_first"], [4, 3, 1, "", "vote_key"], [4, 3, 1, "", "vote_key_dilution"], [4, 3, 1, "", "vote_last"], [4, 3, 1, "", "xfer_asset"]], "algopy.itxn.KeyRegistration": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.KeyRegistrationInnerTransaction": [[4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "non_participation"], [4, 3, 1, "", "note"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "selection_key"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "state_proof_key"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"], [4, 3, 1, "", "vote_first"], [4, 3, 1, "", "vote_key"], [4, 3, 1, "", "vote_key_dilution"], [4, 3, 1, "", "vote_last"]], "algopy.itxn.Payment": [[4, 2, 1, "", "copy"], [4, 2, 1, "", "set"], [4, 2, 1, "", "submit"]], "algopy.itxn.PaymentInnerTransaction": [[4, 3, 1, "", "amount"], [4, 3, 1, "", "close_remainder_to"], [4, 3, 1, "", "fee"], [4, 3, 1, "", "first_valid"], [4, 3, 1, "", "first_valid_time"], [4, 3, 1, "", "group_index"], [4, 3, 1, "", "last_valid"], [4, 3, 1, "", "lease"], [4, 3, 1, "", "note"], [4, 3, 1, "", "receiver"], [4, 3, 1, "", "rekey_to"], [4, 3, 1, "", "sender"], [4, 3, 1, "", "txn_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "type_bytes"]], "algopy.op": [[5, 1, 1, "", "AcctParamsGet"], [5, 1, 1, "", "AppGlobal"], [5, 1, 1, "", "AppLocal"], [5, 1, 1, "", "AppParamsGet"], [5, 1, 1, "", "AssetHoldingGet"], [5, 1, 1, "", "AssetParamsGet"], [5, 1, 1, "", "Base64"], [5, 1, 1, "", "Block"], [5, 1, 1, "", "Box"], [5, 1, 1, "", "EC"], [5, 1, 1, "", "ECDSA"], [5, 1, 1, "", "EllipticCurve"], [5, 1, 1, "", "GITxn"], [5, 1, 1, "", "GTxn"], [5, 1, 1, "", "Global"], [5, 1, 1, "", "ITxn"], [5, 1, 1, "", "ITxnCreate"], [5, 1, 1, "", "JsonRef"], [5, 1, 1, "", "MiMCConfigurations"], [5, 1, 1, "", "Scratch"], [5, 1, 1, "", "Txn"], [5, 1, 1, "", "VoterParamsGet"], [5, 1, 1, "", "VrfVerify"], [5, 6, 1, "", "addw"], [5, 6, 1, "", "app_opted_in"], [5, 6, 1, "", "arg"], [5, 6, 1, "", "balance"], [5, 6, 1, "", "base64_decode"], [5, 6, 1, "", "bitlen"], [5, 6, 1, "", "bsqrt"], [5, 6, 1, "", "btoi"], [5, 6, 1, "", "bzero"], [5, 6, 1, "", "concat"], [5, 6, 1, "", "divmodw"], [5, 6, 1, "", "divw"], [5, 6, 1, "", "ecdsa_pk_decompress"], [5, 6, 1, "", "ecdsa_pk_recover"], [5, 6, 1, "", "ecdsa_verify"], [5, 6, 1, "", "ed25519verify"], [5, 6, 1, "", "ed25519verify_bare"], [5, 6, 1, "", "err"], [5, 6, 1, "", "exit"], [5, 6, 1, "", "exp"], [5, 6, 1, "", "expw"], [5, 6, 1, "", "extract"], [5, 6, 1, "", "extract_uint16"], [5, 6, 1, "", "extract_uint32"], [5, 6, 1, "", "extract_uint64"], [5, 6, 1, "", "falcon_verify"], [5, 6, 1, "", "gaid"], [5, 6, 1, "", "getbit"], [5, 6, 1, "", "getbyte"], [5, 6, 1, "", "gload_bytes"], [5, 6, 1, "", "gload_uint64"], [5, 6, 1, "", "itob"], [5, 6, 1, "", "keccak256"], [5, 6, 1, "", "mimc"], [5, 6, 1, "", "min_balance"], [5, 6, 1, "", "mulw"], [5, 6, 1, "", "online_stake"], [5, 6, 1, "", "replace"], [5, 6, 1, "", "select_bytes"], [5, 6, 1, "", "select_uint64"], [5, 6, 1, "", "setbit_bytes"], [5, 6, 1, "", "setbit_uint64"], [5, 6, 1, "", "setbyte"], [5, 6, 1, "", "sha256"], [5, 6, 1, "", "sha3_256"], [5, 6, 1, "", "sha512_256"], [5, 6, 1, "", "shl"], [5, 6, 1, "", "shr"], [5, 6, 1, "", "sqrt"], [5, 6, 1, "", "substring"], [5, 6, 1, "", "sumhash512"], [5, 6, 1, "", "vrf_verify"]], "algopy.op.AcctParamsGet": [[5, 2, 1, "", "acct_auth_addr"], [5, 2, 1, "", "acct_balance"], [5, 2, 1, "", "acct_incentive_eligible"], [5, 2, 1, "", "acct_last_heartbeat"], [5, 2, 1, "", "acct_last_proposed"], [5, 2, 1, "", "acct_min_balance"], [5, 2, 1, "", "acct_total_apps_created"], [5, 2, 1, "", "acct_total_apps_opted_in"], [5, 2, 1, "", "acct_total_assets"], [5, 2, 1, "", "acct_total_assets_created"], [5, 2, 1, "", "acct_total_box_bytes"], [5, 2, 1, "", "acct_total_boxes"], [5, 2, 1, "", "acct_total_extra_app_pages"], [5, 2, 1, "", "acct_total_num_byte_slice"], [5, 2, 1, "", "acct_total_num_uint"]], "algopy.op.AppGlobal": [[5, 2, 1, "", "delete"], [5, 2, 1, "", "get_bytes"], [5, 2, 1, "", "get_ex_bytes"], [5, 2, 1, "", "get_ex_uint64"], [5, 2, 1, "", "get_uint64"], [5, 2, 1, "", "put"]], "algopy.op.AppLocal": [[5, 2, 1, "", "delete"], [5, 2, 1, "", "get_bytes"], [5, 2, 1, "", "get_ex_bytes"], [5, 2, 1, "", "get_ex_uint64"], [5, 2, 1, "", "get_uint64"], [5, 2, 1, "", "put"]], "algopy.op.AppParamsGet": [[5, 2, 1, "", "app_address"], [5, 2, 1, "", "app_approval_program"], [5, 2, 1, "", "app_clear_state_program"], [5, 2, 1, "", "app_creator"], [5, 2, 1, "", "app_extra_program_pages"], [5, 2, 1, "", "app_global_num_byte_slice"], [5, 2, 1, "", "app_global_num_uint"], [5, 2, 1, "", "app_local_num_byte_slice"], [5, 2, 1, "", "app_local_num_uint"]], "algopy.op.AssetHoldingGet": [[5, 2, 1, "", "asset_balance"], [5, 2, 1, "", "asset_frozen"]], "algopy.op.AssetParamsGet": [[5, 2, 1, "", "asset_clawback"], [5, 2, 1, "", "asset_creator"], [5, 2, 1, "", "asset_decimals"], [5, 2, 1, "", "asset_default_frozen"], [5, 2, 1, "", "asset_freeze"], [5, 2, 1, "", "asset_manager"], [5, 2, 1, "", "asset_metadata_hash"], [5, 2, 1, "", "asset_name"], [5, 2, 1, "", "asset_reserve"], [5, 2, 1, "", "asset_total"], [5, 2, 1, "", "asset_unit_name"], [5, 2, 1, "", "asset_url"]], "algopy.op.Base64": [[5, 2, 1, "", "__add__"], [5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__delattr__"], [5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__format__"], [5, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getattribute__"], [5, 2, 1, "", "__getitem__"], [5, 2, 1, "", "__getstate__"], [5, 2, 1, "", "__gt__"], [5, 2, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__le__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__lt__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__ne__"], [5, 2, 1, "", "__new__"], [5, 2, 1, "", "__reduce__"], [5, 2, 1, "", "__reduce_ex__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "__rmod__"], [5, 2, 1, "", "__rmul__"], [5, 2, 1, "", "__setattr__"], [5, 2, 1, "", "__sizeof__"], [5, 2, 1, "", "__str__"], [5, 2, 1, "", "capitalize"], [5, 2, 1, "", "casefold"], [5, 2, 1, "", "center"], [5, 2, 1, "", "count"], [5, 2, 1, "", "encode"], [5, 2, 1, "", "endswith"], [5, 2, 1, "", "expandtabs"], [5, 2, 1, "", "find"], [5, 2, 1, "", "format"], [5, 2, 1, "", "format_map"], [5, 2, 1, "", "index"], [5, 2, 1, "", "isalnum"], [5, 2, 1, "", "isalpha"], [5, 2, 1, "", "isascii"], [5, 2, 1, "", "isdecimal"], [5, 2, 1, "", "isdigit"], [5, 2, 1, "", "isidentifier"], [5, 2, 1, "", "islower"], [5, 2, 1, "", "isnumeric"], [5, 2, 1, "", "isprintable"], [5, 2, 1, "", "isspace"], [5, 2, 1, "", "istitle"], [5, 2, 1, "", "isupper"], [5, 2, 1, "", "join"], [5, 2, 1, "", "ljust"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "lstrip"], [5, 2, 1, "", "partition"], [5, 2, 1, "", "removeprefix"], [5, 2, 1, "", "removesuffix"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "rfind"], [5, 2, 1, "", "rindex"], [5, 2, 1, "", "rjust"], [5, 2, 1, "", "rpartition"], [5, 2, 1, "", "rsplit"], [5, 2, 1, "", "rstrip"], [5, 2, 1, "", "split"], [5, 2, 1, "", "splitlines"], [5, 2, 1, "", "startswith"], [5, 2, 1, "", "strip"], [5, 2, 1, "", "swapcase"], [5, 2, 1, "", "title"], [5, 2, 1, "", "translate"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "zfill"]], "algopy.op.Block": [[5, 2, 1, "", "blk_bonus"], [5, 2, 1, "", "blk_branch"], [5, 2, 1, "", "blk_fee_sink"], [5, 2, 1, "", "blk_fees_collected"], [5, 2, 1, "", "blk_proposer"], [5, 2, 1, "", "blk_proposer_payout"], [5, 2, 1, "", "blk_protocol"], [5, 2, 1, "", "blk_seed"], [5, 2, 1, "", "blk_timestamp"], [5, 2, 1, "", "blk_txn_counter"]], "algopy.op.Box": [[5, 2, 1, "", "create"], [5, 2, 1, "", "delete"], [5, 2, 1, "", "extract"], [5, 2, 1, "", "get"], [5, 2, 1, "", "length"], [5, 2, 1, "", "put"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "resize"], [5, 2, 1, "", "splice"]], "algopy.op.EC": [[5, 4, 1, "", "BLS12_381g1"], [5, 4, 1, "", "BLS12_381g2"], [5, 4, 1, "", "BN254g1"], [5, 4, 1, "", "BN254g2"], [5, 2, 1, "", "__add__"], [5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__delattr__"], [5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__format__"], [5, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getattribute__"], [5, 2, 1, "", "__getitem__"], [5, 2, 1, "", "__getstate__"], [5, 2, 1, "", "__gt__"], [5, 2, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__le__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__lt__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__ne__"], [5, 2, 1, "", "__new__"], [5, 2, 1, "", "__reduce__"], [5, 2, 1, "", "__reduce_ex__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "__rmod__"], [5, 2, 1, "", "__rmul__"], [5, 2, 1, "", "__setattr__"], [5, 2, 1, "", "__sizeof__"], [5, 2, 1, "", "__str__"], [5, 2, 1, "", "capitalize"], [5, 2, 1, "", "casefold"], [5, 2, 1, "", "center"], [5, 2, 1, "", "count"], [5, 2, 1, "", "encode"], [5, 2, 1, "", "endswith"], [5, 2, 1, "", "expandtabs"], [5, 2, 1, "", "find"], [5, 2, 1, "", "format"], [5, 2, 1, "", "format_map"], [5, 2, 1, "", "index"], [5, 2, 1, "", "isalnum"], [5, 2, 1, "", "isalpha"], [5, 2, 1, "", "isascii"], [5, 2, 1, "", "isdecimal"], [5, 2, 1, "", "isdigit"], [5, 2, 1, "", "isidentifier"], [5, 2, 1, "", "islower"], [5, 2, 1, "", "isnumeric"], [5, 2, 1, "", "isprintable"], [5, 2, 1, "", "isspace"], [5, 2, 1, "", "istitle"], [5, 2, 1, "", "isupper"], [5, 2, 1, "", "join"], [5, 2, 1, "", "ljust"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "lstrip"], [5, 2, 1, "", "partition"], [5, 2, 1, "", "removeprefix"], [5, 2, 1, "", "removesuffix"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "rfind"], [5, 2, 1, "", "rindex"], [5, 2, 1, "", "rjust"], [5, 2, 1, "", "rpartition"], [5, 2, 1, "", "rsplit"], [5, 2, 1, "", "rstrip"], [5, 2, 1, "", "split"], [5, 2, 1, "", "splitlines"], [5, 2, 1, "", "startswith"], [5, 2, 1, "", "strip"], [5, 2, 1, "", "swapcase"], [5, 2, 1, "", "title"], [5, 2, 1, "", "translate"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "zfill"]], "algopy.op.ECDSA": [[5, 4, 1, "", "Secp256k1"], [5, 4, 1, "", "Secp256r1"], [5, 2, 1, "", "__add__"], [5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__delattr__"], [5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__format__"], [5, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getattribute__"], [5, 2, 1, "", "__getitem__"], [5, 2, 1, "", "__getstate__"], [5, 2, 1, "", "__gt__"], [5, 2, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__le__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__lt__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__ne__"], [5, 2, 1, "", "__new__"], [5, 2, 1, "", "__reduce__"], [5, 2, 1, "", "__reduce_ex__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "__rmod__"], [5, 2, 1, "", "__rmul__"], [5, 2, 1, "", "__setattr__"], [5, 2, 1, "", "__sizeof__"], [5, 2, 1, "", "__str__"], [5, 2, 1, "", "capitalize"], [5, 2, 1, "", "casefold"], [5, 2, 1, "", "center"], [5, 2, 1, "", "count"], [5, 2, 1, "", "encode"], [5, 2, 1, "", "endswith"], [5, 2, 1, "", "expandtabs"], [5, 2, 1, "", "find"], [5, 2, 1, "", "format"], [5, 2, 1, "", "format_map"], [5, 2, 1, "", "index"], [5, 2, 1, "", "isalnum"], [5, 2, 1, "", "isalpha"], [5, 2, 1, "", "isascii"], [5, 2, 1, "", "isdecimal"], [5, 2, 1, "", "isdigit"], [5, 2, 1, "", "isidentifier"], [5, 2, 1, "", "islower"], [5, 2, 1, "", "isnumeric"], [5, 2, 1, "", "isprintable"], [5, 2, 1, "", "isspace"], [5, 2, 1, "", "istitle"], [5, 2, 1, "", "isupper"], [5, 2, 1, "", "join"], [5, 2, 1, "", "ljust"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "lstrip"], [5, 2, 1, "", "partition"], [5, 2, 1, "", "removeprefix"], [5, 2, 1, "", "removesuffix"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "rfind"], [5, 2, 1, "", "rindex"], [5, 2, 1, "", "rjust"], [5, 2, 1, "", "rpartition"], [5, 2, 1, "", "rsplit"], [5, 2, 1, "", "rstrip"], [5, 2, 1, "", "split"], [5, 2, 1, "", "splitlines"], [5, 2, 1, "", "startswith"], [5, 2, 1, "", "strip"], [5, 2, 1, "", "swapcase"], [5, 2, 1, "", "title"], [5, 2, 1, "", "translate"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "zfill"]], "algopy.op.EllipticCurve": [[5, 2, 1, "", "add"], [5, 2, 1, "", "map_to"], [5, 2, 1, "", "pairing_check"], [5, 2, 1, "", "scalar_mul"], [5, 2, 1, "", "scalar_mul_multi"], [5, 2, 1, "", "subgroup_check"]], "algopy.op.GITxn": [[5, 2, 1, "", "accounts"], [5, 2, 1, "", "amount"], [5, 2, 1, "", "application_args"], [5, 2, 1, "", "application_id"], [5, 2, 1, "", "applications"], [5, 2, 1, "", "approval_program"], [5, 2, 1, "", "approval_program_pages"], [5, 2, 1, "", "asset_amount"], [5, 2, 1, "", "asset_close_to"], [5, 2, 1, "", "asset_receiver"], [5, 2, 1, "", "asset_sender"], [5, 2, 1, "", "assets"], [5, 2, 1, "", "clear_state_program"], [5, 2, 1, "", "clear_state_program_pages"], [5, 2, 1, "", "close_remainder_to"], [5, 2, 1, "", "config_asset"], [5, 2, 1, "", "config_asset_clawback"], [5, 2, 1, "", "config_asset_decimals"], [5, 2, 1, "", "config_asset_default_frozen"], [5, 2, 1, "", "config_asset_freeze"], [5, 2, 1, "", "config_asset_manager"], [5, 2, 1, "", "config_asset_metadata_hash"], [5, 2, 1, "", "config_asset_name"], [5, 2, 1, "", "config_asset_reserve"], [5, 2, 1, "", "config_asset_total"], [5, 2, 1, "", "config_asset_unit_name"], [5, 2, 1, "", "config_asset_url"], [5, 2, 1, "", "created_application_id"], [5, 2, 1, "", "created_asset_id"], [5, 2, 1, "", "extra_program_pages"], [5, 2, 1, "", "fee"], [5, 2, 1, "", "first_valid"], [5, 2, 1, "", "first_valid_time"], [5, 2, 1, "", "freeze_asset"], [5, 2, 1, "", "freeze_asset_account"], [5, 2, 1, "", "freeze_asset_frozen"], [5, 2, 1, "", "global_num_byte_slice"], [5, 2, 1, "", "global_num_uint"], [5, 2, 1, "", "group_index"], [5, 2, 1, "", "last_log"], [5, 2, 1, "", "last_valid"], [5, 2, 1, "", "lease"], [5, 2, 1, "", "local_num_byte_slice"], [5, 2, 1, "", "local_num_uint"], [5, 2, 1, "", "logs"], [5, 2, 1, "", "nonparticipation"], [5, 2, 1, "", "note"], [5, 2, 1, "", "num_accounts"], [5, 2, 1, "", "num_app_args"], [5, 2, 1, "", "num_applications"], [5, 2, 1, "", "num_approval_program_pages"], [5, 2, 1, "", "num_assets"], [5, 2, 1, "", "num_clear_state_program_pages"], [5, 2, 1, "", "num_logs"], [5, 2, 1, "", "on_completion"], [5, 2, 1, "", "receiver"], [5, 2, 1, "", "rekey_to"], [5, 2, 1, "", "selection_pk"], [5, 2, 1, "", "sender"], [5, 2, 1, "", "state_proof_pk"], [5, 2, 1, "", "tx_id"], [5, 2, 1, "", "type"], [5, 2, 1, "", "type_enum"], [5, 2, 1, "", "vote_first"], [5, 2, 1, "", "vote_key_dilution"], [5, 2, 1, "", "vote_last"], [5, 2, 1, "", "vote_pk"], [5, 2, 1, "", "xfer_asset"]], "algopy.op.GTxn": [[5, 2, 1, "", "accounts"], [5, 2, 1, "", "amount"], [5, 2, 1, "", "application_args"], [5, 2, 1, "", "application_id"], [5, 2, 1, "", "applications"], [5, 2, 1, "", "approval_program"], [5, 2, 1, "", "approval_program_pages"], [5, 2, 1, "", "asset_amount"], [5, 2, 1, "", "asset_close_to"], [5, 2, 1, "", "asset_receiver"], [5, 2, 1, "", "asset_sender"], [5, 2, 1, "", "assets"], [5, 2, 1, "", "clear_state_program"], [5, 2, 1, "", "clear_state_program_pages"], [5, 2, 1, "", "close_remainder_to"], [5, 2, 1, "", "config_asset"], [5, 2, 1, "", "config_asset_clawback"], [5, 2, 1, "", "config_asset_decimals"], [5, 2, 1, "", "config_asset_default_frozen"], [5, 2, 1, "", "config_asset_freeze"], [5, 2, 1, "", "config_asset_manager"], [5, 2, 1, "", "config_asset_metadata_hash"], [5, 2, 1, "", "config_asset_name"], [5, 2, 1, "", "config_asset_reserve"], [5, 2, 1, "", "config_asset_total"], [5, 2, 1, "", "config_asset_unit_name"], [5, 2, 1, "", "config_asset_url"], [5, 2, 1, "", "created_application_id"], [5, 2, 1, "", "created_asset_id"], [5, 2, 1, "", "extra_program_pages"], [5, 2, 1, "", "fee"], [5, 2, 1, "", "first_valid"], [5, 2, 1, "", "first_valid_time"], [5, 2, 1, "", "freeze_asset"], [5, 2, 1, "", "freeze_asset_account"], [5, 2, 1, "", "freeze_asset_frozen"], [5, 2, 1, "", "global_num_byte_slice"], [5, 2, 1, "", "global_num_uint"], [5, 2, 1, "", "group_index"], [5, 2, 1, "", "last_log"], [5, 2, 1, "", "last_valid"], [5, 2, 1, "", "lease"], [5, 2, 1, "", "local_num_byte_slice"], [5, 2, 1, "", "local_num_uint"], [5, 2, 1, "", "logs"], [5, 2, 1, "", "nonparticipation"], [5, 2, 1, "", "note"], [5, 2, 1, "", "num_accounts"], [5, 2, 1, "", "num_app_args"], [5, 2, 1, "", "num_applications"], [5, 2, 1, "", "num_approval_program_pages"], [5, 2, 1, "", "num_assets"], [5, 2, 1, "", "num_clear_state_program_pages"], [5, 2, 1, "", "num_logs"], [5, 2, 1, "", "on_completion"], [5, 2, 1, "", "receiver"], [5, 2, 1, "", "rekey_to"], [5, 2, 1, "", "selection_pk"], [5, 2, 1, "", "sender"], [5, 2, 1, "", "state_proof_pk"], [5, 2, 1, "", "tx_id"], [5, 2, 1, "", "type"], [5, 2, 1, "", "type_enum"], [5, 2, 1, "", "vote_first"], [5, 2, 1, "", "vote_key_dilution"], [5, 2, 1, "", "vote_last"], [5, 2, 1, "", "vote_pk"], [5, 2, 1, "", "xfer_asset"]], "algopy.op.Global": [[5, 4, 1, "", "asset_create_min_balance"], [5, 4, 1, "", "asset_opt_in_min_balance"], [5, 4, 1, "", "caller_application_address"], [5, 4, 1, "", "caller_application_id"], [5, 4, 1, "", "creator_address"], [5, 4, 1, "", "current_application_address"], [5, 4, 1, "", "current_application_id"], [5, 4, 1, "", "genesis_hash"], [5, 4, 1, "", "group_id"], [5, 4, 1, "", "group_size"], [5, 4, 1, "", "latest_timestamp"], [5, 4, 1, "", "logic_sig_version"], [5, 4, 1, "", "max_txn_life"], [5, 4, 1, "", "min_balance"], [5, 4, 1, "", "min_txn_fee"], [5, 2, 1, "", "opcode_budget"], [5, 4, 1, "", "payouts_enabled"], [5, 4, 1, "", "payouts_go_online_fee"], [5, 4, 1, "", "payouts_max_balance"], [5, 4, 1, "", "payouts_min_balance"], [5, 4, 1, "", "payouts_percent"], [5, 4, 1, "", "round"], [5, 4, 1, "", "zero_address"]], "algopy.op.ITxn": [[5, 2, 1, "", "accounts"], [5, 2, 1, "", "amount"], [5, 2, 1, "", "application_args"], [5, 2, 1, "", "application_id"], [5, 2, 1, "", "applications"], [5, 2, 1, "", "approval_program"], [5, 2, 1, "", "approval_program_pages"], [5, 2, 1, "", "asset_amount"], [5, 2, 1, "", "asset_close_to"], [5, 2, 1, "", "asset_receiver"], [5, 2, 1, "", "asset_sender"], [5, 2, 1, "", "assets"], [5, 2, 1, "", "clear_state_program"], [5, 2, 1, "", "clear_state_program_pages"], [5, 2, 1, "", "close_remainder_to"], [5, 2, 1, "", "config_asset"], [5, 2, 1, "", "config_asset_clawback"], [5, 2, 1, "", "config_asset_decimals"], [5, 2, 1, "", "config_asset_default_frozen"], [5, 2, 1, "", "config_asset_freeze"], [5, 2, 1, "", "config_asset_manager"], [5, 2, 1, "", "config_asset_metadata_hash"], [5, 2, 1, "", "config_asset_name"], [5, 2, 1, "", "config_asset_reserve"], [5, 2, 1, "", "config_asset_total"], [5, 2, 1, "", "config_asset_unit_name"], [5, 2, 1, "", "config_asset_url"], [5, 2, 1, "", "created_application_id"], [5, 2, 1, "", "created_asset_id"], [5, 2, 1, "", "extra_program_pages"], [5, 2, 1, "", "fee"], [5, 2, 1, "", "first_valid"], [5, 2, 1, "", "first_valid_time"], [5, 2, 1, "", "freeze_asset"], [5, 2, 1, "", "freeze_asset_account"], [5, 2, 1, "", "freeze_asset_frozen"], [5, 2, 1, "", "global_num_byte_slice"], [5, 2, 1, "", "global_num_uint"], [5, 2, 1, "", "group_index"], [5, 2, 1, "", "last_log"], [5, 2, 1, "", "last_valid"], [5, 2, 1, "", "lease"], [5, 2, 1, "", "local_num_byte_slice"], [5, 2, 1, "", "local_num_uint"], [5, 2, 1, "", "logs"], [5, 2, 1, "", "nonparticipation"], [5, 2, 1, "", "note"], [5, 2, 1, "", "num_accounts"], [5, 2, 1, "", "num_app_args"], [5, 2, 1, "", "num_applications"], [5, 2, 1, "", "num_approval_program_pages"], [5, 2, 1, "", "num_assets"], [5, 2, 1, "", "num_clear_state_program_pages"], [5, 2, 1, "", "num_logs"], [5, 2, 1, "", "on_completion"], [5, 2, 1, "", "receiver"], [5, 2, 1, "", "rekey_to"], [5, 2, 1, "", "selection_pk"], [5, 2, 1, "", "sender"], [5, 2, 1, "", "state_proof_pk"], [5, 2, 1, "", "tx_id"], [5, 2, 1, "", "type"], [5, 2, 1, "", "type_enum"], [5, 2, 1, "", "vote_first"], [5, 2, 1, "", "vote_key_dilution"], [5, 2, 1, "", "vote_last"], [5, 2, 1, "", "vote_pk"], [5, 2, 1, "", "xfer_asset"]], "algopy.op.ITxnCreate": [[5, 2, 1, "", "begin"], [5, 2, 1, "", "next"], [5, 2, 1, "", "set_accounts"], [5, 2, 1, "", "set_amount"], [5, 2, 1, "", "set_application_args"], [5, 2, 1, "", "set_application_id"], [5, 2, 1, "", "set_applications"], [5, 2, 1, "", "set_approval_program"], [5, 2, 1, "", "set_approval_program_pages"], [5, 2, 1, "", "set_asset_amount"], [5, 2, 1, "", "set_asset_close_to"], [5, 2, 1, "", "set_asset_receiver"], [5, 2, 1, "", "set_asset_sender"], [5, 2, 1, "", "set_assets"], [5, 2, 1, "", "set_clear_state_program"], [5, 2, 1, "", "set_clear_state_program_pages"], [5, 2, 1, "", "set_close_remainder_to"], [5, 2, 1, "", "set_config_asset"], [5, 2, 1, "", "set_config_asset_clawback"], [5, 2, 1, "", "set_config_asset_decimals"], [5, 2, 1, "", "set_config_asset_default_frozen"], [5, 2, 1, "", "set_config_asset_freeze"], [5, 2, 1, "", "set_config_asset_manager"], [5, 2, 1, "", "set_config_asset_metadata_hash"], [5, 2, 1, "", "set_config_asset_name"], [5, 2, 1, "", "set_config_asset_reserve"], [5, 2, 1, "", "set_config_asset_total"], [5, 2, 1, "", "set_config_asset_unit_name"], [5, 2, 1, "", "set_config_asset_url"], [5, 2, 1, "", "set_extra_program_pages"], [5, 2, 1, "", "set_fee"], [5, 2, 1, "", "set_freeze_asset"], [5, 2, 1, "", "set_freeze_asset_account"], [5, 2, 1, "", "set_freeze_asset_frozen"], [5, 2, 1, "", "set_global_num_byte_slice"], [5, 2, 1, "", "set_global_num_uint"], [5, 2, 1, "", "set_local_num_byte_slice"], [5, 2, 1, "", "set_local_num_uint"], [5, 2, 1, "", "set_nonparticipation"], [5, 2, 1, "", "set_note"], [5, 2, 1, "", "set_on_completion"], [5, 2, 1, "", "set_receiver"], [5, 2, 1, "", "set_rekey_to"], [5, 2, 1, "", "set_selection_pk"], [5, 2, 1, "", "set_sender"], [5, 2, 1, "", "set_state_proof_pk"], [5, 2, 1, "", "set_type"], [5, 2, 1, "", "set_type_enum"], [5, 2, 1, "", "set_vote_first"], [5, 2, 1, "", "set_vote_key_dilution"], [5, 2, 1, "", "set_vote_last"], [5, 2, 1, "", "set_vote_pk"], [5, 2, 1, "", "set_xfer_asset"], [5, 2, 1, "", "submit"]], "algopy.op.JsonRef": [[5, 2, 1, "", "json_object"], [5, 2, 1, "", "json_string"], [5, 2, 1, "", "json_uint64"]], "algopy.op.MiMCConfigurations": [[5, 4, 1, "", "BLS12_381Mp111"], [5, 4, 1, "", "BN254Mp110"], [5, 2, 1, "", "__add__"], [5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__delattr__"], [5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__format__"], [5, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getattribute__"], [5, 2, 1, "", "__getitem__"], [5, 2, 1, "", "__getstate__"], [5, 2, 1, "", "__gt__"], [5, 2, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__le__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__lt__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__ne__"], [5, 2, 1, "", "__new__"], [5, 2, 1, "", "__reduce__"], [5, 2, 1, "", "__reduce_ex__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "__rmod__"], [5, 2, 1, "", "__rmul__"], [5, 2, 1, "", "__setattr__"], [5, 2, 1, "", "__sizeof__"], [5, 2, 1, "", "__str__"], [5, 2, 1, "", "capitalize"], [5, 2, 1, "", "casefold"], [5, 2, 1, "", "center"], [5, 2, 1, "", "count"], [5, 2, 1, "", "encode"], [5, 2, 1, "", "endswith"], [5, 2, 1, "", "expandtabs"], [5, 2, 1, "", "find"], [5, 2, 1, "", "format"], [5, 2, 1, "", "format_map"], [5, 2, 1, "", "index"], [5, 2, 1, "", "isalnum"], [5, 2, 1, "", "isalpha"], [5, 2, 1, "", "isascii"], [5, 2, 1, "", "isdecimal"], [5, 2, 1, "", "isdigit"], [5, 2, 1, "", "isidentifier"], [5, 2, 1, "", "islower"], [5, 2, 1, "", "isnumeric"], [5, 2, 1, "", "isprintable"], [5, 2, 1, "", "isspace"], [5, 2, 1, "", "istitle"], [5, 2, 1, "", "isupper"], [5, 2, 1, "", "join"], [5, 2, 1, "", "ljust"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "lstrip"], [5, 2, 1, "", "partition"], [5, 2, 1, "", "removeprefix"], [5, 2, 1, "", "removesuffix"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "rfind"], [5, 2, 1, "", "rindex"], [5, 2, 1, "", "rjust"], [5, 2, 1, "", "rpartition"], [5, 2, 1, "", "rsplit"], [5, 2, 1, "", "rstrip"], [5, 2, 1, "", "split"], [5, 2, 1, "", "splitlines"], [5, 2, 1, "", "startswith"], [5, 2, 1, "", "strip"], [5, 2, 1, "", "swapcase"], [5, 2, 1, "", "title"], [5, 2, 1, "", "translate"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "zfill"]], "algopy.op.Scratch": [[5, 2, 1, "", "load_bytes"], [5, 2, 1, "", "load_uint64"], [5, 2, 1, "", "store"]], "algopy.op.Txn": [[5, 2, 1, "", "accounts"], [5, 4, 1, "", "amount"], [5, 2, 1, "", "application_args"], [5, 4, 1, "", "application_id"], [5, 2, 1, "", "applications"], [5, 4, 1, "", "approval_program"], [5, 2, 1, "", "approval_program_pages"], [5, 4, 1, "", "asset_amount"], [5, 4, 1, "", "asset_close_to"], [5, 4, 1, "", "asset_receiver"], [5, 4, 1, "", "asset_sender"], [5, 2, 1, "", "assets"], [5, 4, 1, "", "clear_state_program"], [5, 2, 1, "", "clear_state_program_pages"], [5, 4, 1, "", "close_remainder_to"], [5, 4, 1, "", "config_asset"], [5, 4, 1, "", "config_asset_clawback"], [5, 4, 1, "", "config_asset_decimals"], [5, 4, 1, "", "config_asset_default_frozen"], [5, 4, 1, "", "config_asset_freeze"], [5, 4, 1, "", "config_asset_manager"], [5, 4, 1, "", "config_asset_metadata_hash"], [5, 4, 1, "", "config_asset_name"], [5, 4, 1, "", "config_asset_reserve"], [5, 4, 1, "", "config_asset_total"], [5, 4, 1, "", "config_asset_unit_name"], [5, 4, 1, "", "config_asset_url"], [5, 4, 1, "", "created_application_id"], [5, 4, 1, "", "created_asset_id"], [5, 4, 1, "", "extra_program_pages"], [5, 4, 1, "", "fee"], [5, 4, 1, "", "first_valid"], [5, 4, 1, "", "first_valid_time"], [5, 4, 1, "", "freeze_asset"], [5, 4, 1, "", "freeze_asset_account"], [5, 4, 1, "", "freeze_asset_frozen"], [5, 4, 1, "", "global_num_byte_slice"], [5, 4, 1, "", "global_num_uint"], [5, 4, 1, "", "group_index"], [5, 4, 1, "", "last_log"], [5, 4, 1, "", "last_valid"], [5, 4, 1, "", "lease"], [5, 4, 1, "", "local_num_byte_slice"], [5, 4, 1, "", "local_num_uint"], [5, 2, 1, "", "logs"], [5, 4, 1, "", "nonparticipation"], [5, 4, 1, "", "note"], [5, 4, 1, "", "num_accounts"], [5, 4, 1, "", "num_app_args"], [5, 4, 1, "", "num_applications"], [5, 4, 1, "", "num_approval_program_pages"], [5, 4, 1, "", "num_assets"], [5, 4, 1, "", "num_clear_state_program_pages"], [5, 4, 1, "", "num_logs"], [5, 4, 1, "", "on_completion"], [5, 4, 1, "", "receiver"], [5, 4, 1, "", "rekey_to"], [5, 4, 1, "", "selection_pk"], [5, 4, 1, "", "sender"], [5, 4, 1, "", "state_proof_pk"], [5, 4, 1, "", "tx_id"], [5, 4, 1, "", "type"], [5, 4, 1, "", "type_enum"], [5, 4, 1, "", "vote_first"], [5, 4, 1, "", "vote_key_dilution"], [5, 4, 1, "", "vote_last"], [5, 4, 1, "", "vote_pk"], [5, 4, 1, "", "xfer_asset"]], "algopy.op.VoterParamsGet": [[5, 2, 1, "", "voter_balance"], [5, 2, 1, "", "voter_incentive_eligible"]], "algopy.op.VrfVerify": [[5, 2, 1, "", "__add__"], [5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__delattr__"], [5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__format__"], [5, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getattribute__"], [5, 2, 1, "", "__getitem__"], [5, 2, 1, "", "__getstate__"], [5, 2, 1, "", "__gt__"], [5, 2, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__le__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__lt__"], [5, 2, 1, "", "__mod__"], [5, 2, 1, "", "__mul__"], [5, 2, 1, "", "__ne__"], [5, 2, 1, "", "__new__"], [5, 2, 1, "", "__reduce__"], [5, 2, 1, "", "__reduce_ex__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "__rmod__"], [5, 2, 1, "", "__rmul__"], [5, 2, 1, "", "__setattr__"], [5, 2, 1, "", "__sizeof__"], [5, 2, 1, "", "__str__"], [5, 2, 1, "", "capitalize"], [5, 2, 1, "", "casefold"], [5, 2, 1, "", "center"], [5, 2, 1, "", "count"], [5, 2, 1, "", "encode"], [5, 2, 1, "", "endswith"], [5, 2, 1, "", "expandtabs"], [5, 2, 1, "", "find"], [5, 2, 1, "", "format"], [5, 2, 1, "", "format_map"], [5, 2, 1, "", "index"], [5, 2, 1, "", "isalnum"], [5, 2, 1, "", "isalpha"], [5, 2, 1, "", "isascii"], [5, 2, 1, "", "isdecimal"], [5, 2, 1, "", "isdigit"], [5, 2, 1, "", "isidentifier"], [5, 2, 1, "", "islower"], [5, 2, 1, "", "isnumeric"], [5, 2, 1, "", "isprintable"], [5, 2, 1, "", "isspace"], [5, 2, 1, "", "istitle"], [5, 2, 1, "", "isupper"], [5, 2, 1, "", "join"], [5, 2, 1, "", "ljust"], [5, 2, 1, "", "lower"], [5, 2, 1, "", "lstrip"], [5, 2, 1, "", "partition"], [5, 2, 1, "", "removeprefix"], [5, 2, 1, "", "removesuffix"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "rfind"], [5, 2, 1, "", "rindex"], [5, 2, 1, "", "rjust"], [5, 2, 1, "", "rpartition"], [5, 2, 1, "", "rsplit"], [5, 2, 1, "", "rstrip"], [5, 2, 1, "", "split"], [5, 2, 1, "", "splitlines"], [5, 2, 1, "", "startswith"], [5, 2, 1, "", "strip"], [5, 2, 1, "", "swapcase"], [5, 2, 1, "", "title"], [5, 2, 1, "", "translate"], [5, 2, 1, "", "upper"], [5, 2, 1, "", "zfill"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:data", "6": "py:function"}, "terms": {"": [1, 2, 3, 4, 5, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 25, 26], "0": [1, 2, 3, 4, 5, 6, 10, 15, 16, 17, 20, 21, 22, 23, 24], "0000": 5, "00123": 18, "007f": 5, "03": 5, "03020100": 14, "05": 18, "096": 5, "0f": 1, "0x00": 5, "0x10": 5, "0x151f7c75": 2, "0x1a2b": 6, "0xabcd": 13, "0xfff00000": 5, "1": [1, 3, 4, 5, 6, 10, 15, 17, 21, 22, 23, 24, 26], "10": [1, 2, 6, 10], "100": 18, "1000": 23, "100000": 18, "1002": 5, "1024": [1, 3, 4, 5], "11": [1, 5], "110": [5, 22], "111": 5, "115": 22, "12": [5, 6, 7, 15, 18], "120": 6, "123": [13, 18], "1234": [6, 12, 23], "128": 5, "16": [4, 10, 20], "1991": 26, "1_000_000": 23, "2": [1, 3, 4, 5, 6, 13, 15, 17, 18, 21, 22, 24, 26], "20": [21, 26], "200": 24, "2022": 26, "2023": 26, "2048": [1, 3, 4, 5], "25": 22, "255": 5, "28": [2, 8, 17], "2n": 1, "3": [1, 5, 6, 7, 9, 17, 18, 21, 22, 23, 24, 26], "314159": 18, "32": [1, 2, 3, 4, 5, 6, 7, 8, 12, 18, 21, 22, 24], "320": 5, "33": [5, 21], "34": 15, "381": 5, "4": [1, 2, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 21, 26], "40": [10, 21], "4096": [1, 5, 8, 21, 24], "42": [1, 18, 24], "456": 18, "4648": 5, "48": 5, "5": [1, 2, 5, 14, 17, 18, 21, 22, 26], "512": [1, 2, 8, 10, 24], "55": 21, "555": 18, "56": [6, 8, 15, 21], "58": [1, 2], "6": [6, 9, 14, 17], "64": [1, 2, 3, 4, 5, 8, 10, 21, 24], "7": [15, 17, 18], "74": [1, 24], "768": [1, 5], "8": [1, 5, 9, 10, 15, 17, 24], "8000": 21, "8bit": 10, "9": [10, 17], "96": 5, "A": [1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 16, 21, 22, 24, 27], "And": 22, "As": [5, 8, 15, 22, 26], "At": [1, 5], "Be": 26, "Being": [8, 26], "But": 20, "By": [1, 8, 26], "For": [2, 5, 6, 8, 10, 13, 16, 18, 20, 21, 22, 23, 24, 26, 28], "If": [1, 2, 5, 6, 8, 9, 12, 15, 16, 17, 21, 23, 24, 25], "In": [1, 2, 5, 6, 8, 10, 15, 16, 21, 22, 24, 26], "It": [1, 2, 5, 7, 9, 10, 22, 24, 25, 26, 28], "No": [6, 25], "OR": 6, "On": [1, 2], "One": 26, "That": 26, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28], "There": [2, 5, 6, 8, 12, 18, 21, 24], "These": [1, 2, 8, 10, 12, 13, 20, 21, 22, 24, 26], "To": [1, 2, 6, 7, 9, 10, 21, 22, 26, 27], "Will": [1, 2], "With": 5, "_": [14, 17, 22], "__add__": [1, 2, 5], "__and__": 1, "__bool__": [1, 2], "__contains__": [1, 2, 5], "__delattr__": [2, 5], "__delitem__": 1, "__dir__": [2, 5], "__eq__": [1, 2, 5], "__floordiv__": 1, "__format__": [2, 5], "__ge__": [1, 2, 5], "__getattribute__": [2, 5], "__getitem__": [1, 2, 5], "__getstate__": [2, 5], "__gt__": [1, 2, 5], "__hash__": [2, 5], "__iadd__": 1, "__iand__": 1, "__ifloordiv__": 1, "__ilshift__": 1, "__imod__": 1, "__imul__": 1, "__index__": 1, "__init__": [21, 22], "__init_subclass__": [1, 2], "__invert__": 1, "__ior__": 1, "__ipow__": 1, "__irshift__": 1, "__isub__": 1, "__iter__": [1, 2, 5], "__ixor__": 1, "__le__": [1, 2, 5], "__len__": [2, 5], "__lshift__": 1, "__lt__": [1, 2, 5], "__mod__": [1, 5], "__mul__": [1, 2, 5], "__ne__": [1, 2, 5], "__new__": [2, 5], "__or__": 1, "__pos__": 1, "__pow__": 1, "__radd__": 1, "__rand__": 1, "__reduce__": [2, 5], "__reduce_ex__": [2, 5], "__repr__": [2, 5], "__reversed__": [1, 2], "__rfloordiv__": 1, "__rlshift__": 1, "__rmod__": [1, 5], "__rmul__": [1, 2, 5], "__ror__": 1, "__rpow__": 1, "__rrshift__": 1, "__rshift__": 1, "__rsub__": 1, "__rxor__": 1, "__setattr__": [2, 5], "__setitem__": [1, 2], "__sizeof__": [2, 5], "__str__": [2, 5], "__sub__": 1, "__xor__": 1, "_abicallprotocoltyp": 2, "_innertransact": 4, "_p": [1, 2], "_r": [1, 2], "_readonlynoargsmethod": 2, "_replac": [2, 15], "_t": 1, "_t1": 4, "_t10": 4, "_t11": 4, "_t12": 4, "_t13": 4, "_t14": 4, "_t15": 4, "_t16": 4, "_t2": 4, "_t3": 4, "_t4": 4, "_t5": 4, "_t6": 4, "_t7": 4, "_t8": 4, "_t9": 4, "_tabiresult_co": 2, "_tarc4contract": 2, "_tarrayitem": 2, "_tbitsiz": 2, "_templatevargener": 1, "_tkei": 1, "_tresult_co": 4, "_tstate": 1, "_ttupl": 2, "_tvalu": 1, "_txn": 12, "a_": 21, "ab": [5, 24], "abc": [1, 2, 22, 24], "abcdef": 24, "abi": [1, 2, 5, 6, 10, 15, 23], "abi_cal": [0, 2, 8], "abicontract": 22, "abil": [21, 22, 26], "abimethod": [0, 1, 2, 7, 9, 10, 12, 13, 15, 22, 23, 24], "abl": [9, 15, 21, 25, 26], "about": [1, 5, 21, 22, 24], "abov": [8, 12, 13, 22, 24], "absent": 5, "absolut": 22, "abstract": [1, 2, 6, 20, 21, 22], "accept": [5, 26], "access": [1, 10, 20, 21, 24], "accommod": 1, "accord": [1, 2], "account": [0, 1, 2, 3, 4, 5, 8, 10, 17, 21, 23], "account_nam": 1, "acct_auth_addr": 5, "acct_bal": 5, "acct_incentive_elig": 5, "acct_last_heartbeat": 5, "acct_last_propos": 5, "acct_min_bal": 5, "acct_params_get": 5, "acct_total_apps_cr": 5, "acct_total_apps_opted_in": 5, "acct_total_asset": 5, "acct_total_assets_cr": 5, "acct_total_box": 5, "acct_total_box_byt": 5, "acct_total_extra_app_pag": 5, "acct_total_num_byte_slic": 5, "acct_total_num_uint": 5, "acctparamsget": [0, 5], "accur": [2, 5, 26], "achiev": 16, "across": [21, 22], "action": [1, 2, 3, 4, 5, 10, 22], "actual": [8, 24], "ad": [1, 5, 6, 10, 16, 24, 26], "add": [1, 5, 6, 7, 8, 17, 26], "addit": [1, 3, 4, 5, 6, 10, 15, 21, 26], "addition": [6, 12, 15, 24], "address": [0, 1, 2, 3, 4, 5, 8, 21, 24], "addw": [0, 5, 24], "adher": 10, "advanc": 28, "advantag": 8, "affect": [1, 2, 5, 22], "affin": 5, "after": [1, 2, 3, 4, 5, 6, 22, 26], "against": [1, 2, 5, 8, 21, 26], "aggreg": 15, "aggress": 6, "agreement": [1, 5], "aim": 26, "aka": 26, "al": [6, 20], "albeit": 26, "algo": [2, 5, 12], "algokit": [6, 7, 16, 24, 28], "algopi": [0, 6, 7, 8, 9, 10, 11, 13, 17, 18, 19, 20, 21, 23, 24], "algorand": [1, 2, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28], "algorand_python_contract": 6, "algorandfound": 6, "alia": [2, 10], "alias": [2, 8, 10], "align": [6, 26], "all": [1, 2, 5, 6, 8, 9, 10, 15, 17, 20, 22, 23, 24, 25, 26], "alloc": [1, 3, 4, 5, 12, 13, 21], "allow": [1, 2, 5, 6, 8, 10, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26], "allow_act": [2, 10, 24], "almost": 5, "alogpi": 22, "alon": [1, 3, 4, 5], "along": 12, "alpha": 5, "alphabet": 5, "alreadi": [1, 5, 9], "also": [1, 2, 5, 6, 8, 9, 10, 12, 15, 18, 21, 22, 23, 24, 25, 26], "alter": 8, "altern": [6, 7, 8, 16], "although": 26, "alwai": [1, 5, 11, 15, 22, 26], "among": [6, 14, 26], "amount": [1, 3, 4, 5, 21, 23, 26], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 24, 25, 26, 27], "ani": [1, 2, 3, 4, 5, 6, 10, 12, 15, 21, 22, 24], "ann": 6, "ann101": 6, "ann102": 6, "annot": [6, 10, 22, 24], "anonym": 15, "anoth": [1, 2, 5, 10, 12, 24, 26], "another_log_from_call1": 23, "answer_id": 21, "anticip": 26, "anyth": 21, "anywher": 21, "apa": 10, "apart": 20, "apat": 10, "apfa": 10, "api": [6, 15, 21, 22, 24], "app": [1, 2, 3, 4, 5, 6, 7, 10, 12, 16, 21, 22, 23], "app1_txn_id": 23, "app_1": 23, "app_address": [5, 21], "app_approval_program": 5, "app_arg": [3, 4, 23], "app_clear_state_program": 5, "app_creat": 5, "app_extra_program_pag": 5, "app_global_del": 5, "app_global_get": 5, "app_global_get_ex": 5, "app_global_num_byte_slic": 5, "app_global_num_uint": 5, "app_global_put": 5, "app_id": [2, 3, 4, 12, 23], "app_local_del": 5, "app_local_get": [5, 20], "app_local_get_ex": 5, "app_local_num_byte_slic": 5, "app_local_num_uint": 5, "app_local_put": 5, "app_opted_in": [0, 5], "app_param": 23, "app_params_get": 5, "app_txn": 23, "appaccount": 1, "appear": [9, 21, 22, 24, 26], "append": [1, 2, 5, 10, 15], "appglob": [0, 1, 5, 25], "appl": 10, "appli": [1, 2, 15, 22, 26], "applic": [0, 1, 2, 3, 4, 5, 8, 13, 15, 22, 26], "application_arg": [1, 5], "application_id": [1, 5], "application_txn": 23, "applicationarg": [1, 3, 4, 5], "applicationcal": [0, 1, 3, 4, 5, 8, 10, 13, 23], "applicationcallinnertransact": [0, 2, 4, 23], "applicationcalltransact": [0, 3, 10, 23], "applicationid": [1, 3, 4, 5], "apploc": [0, 5], "appparam": 1, "appparamsget": [0, 5], "approach": [8, 12, 21, 26], "appropri": [12, 26], "approv": [1, 2, 3, 4, 5, 7, 10, 12, 13, 22, 26], "approval_program": [1, 2, 3, 4, 5, 17, 21, 22, 23], "approval_program_pag": [1, 3, 4, 5], "approvalprogram": 1, "ar": [1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 28], "ar4contract": 22, "arbitrari": [1, 5, 22, 25], "arc": [1, 2, 6, 7, 8, 12, 13, 14, 15, 17, 21, 26], "arc32": [6, 7, 10, 12], "arc4": [0, 1, 7, 8, 9, 10, 13, 14, 18, 21, 22, 23, 24, 25], "arc4_creat": [0, 2, 8, 13], "arc4_signatur": [0, 2, 9, 23], "arc4_upd": [0, 2, 8], "arc4client": [0, 2], "arc4contract": [0, 1, 2, 7, 8, 9, 10, 12, 13, 15, 23, 24], "arc4count": 22, "arc56": [6, 10], "architectur": [6, 26], "aren": 8, "arg": [0, 1, 2, 5, 6, 22], "arg1": 23, "argument": [1, 2, 3, 4, 5, 12, 22, 24], "around": [6, 21, 26], "arr": [1, 15], "arrai": [0, 1, 2, 3, 4, 5, 8, 14, 21, 23, 24], "artefact": 6, "artifact": 22, "asa": [1, 3, 4, 5], "ascii": [5, 17], "ask": 7, "aspect": 26, "assembli": 26, "assert": [1, 2, 8, 12, 14, 15, 20, 21, 24, 25], "asset": [0, 1, 3, 4, 5, 8, 10, 23], "asset1_param": 23, "asset1_txn": 23, "asset_amount": [1, 3, 4, 5], "asset_bal": 5, "asset_clawback": 5, "asset_close_to": [1, 3, 4, 5], "asset_cr": 5, "asset_create_min_bal": [1, 5], "asset_decim": 5, "asset_default_frozen": 5, "asset_freez": 5, "asset_frozen": 5, "asset_holding_get": 5, "asset_id": 1, "asset_manag": 5, "asset_metadata_hash": 5, "asset_nam": [3, 4, 5, 23], "asset_opt_in_min_bal": [1, 5], "asset_or_app": 1, "asset_params_get": 5, "asset_receiv": [1, 3, 4, 5], "asset_reserv": 5, "asset_send": [1, 3, 4, 5], "asset_tot": 5, "asset_txn": 23, "asset_unit_nam": 5, "asset_url": 5, "assetconfig": [0, 1, 4, 23], "assetconfiginnertransact": [0, 4, 23], "assetconfigtransact": [0, 3, 10, 23], "assetfreez": [0, 1, 4, 23], "assetfreezeinnertransact": [0, 4, 23], "assetfreezetransact": [0, 3, 10, 23], "assetholdingget": [0, 5], "assetparam": [1, 5], "assetparamsget": [0, 5], "assettransf": [0, 1, 4, 23], "assettransferinnertransact": [0, 4, 23], "assettransfertransact": [0, 3, 10, 23], "assign": [1, 2, 6, 10, 21, 22, 23, 24], "assist": 26, "associ": [1, 5, 8, 10, 25, 26], "assum": [5, 9, 10, 26], "async": 8, "asynchron": 25, "ath": 5, "atom": [1, 3, 4, 5], "attach": 17, "attempt": 5, "audit": 6, "augment": 24, "auth_address": 1, "authaddr": [1, 3, 4, 5], "author": [1, 5, 6, 10], "auto": [1, 8], "automat": [1, 2, 6, 7, 10, 12, 14, 17, 21, 22, 24], "avail": [1, 5, 6, 8, 10, 12, 17, 19, 20, 21, 23, 24, 26], "avm": [1, 2, 5, 6, 7, 8, 10, 16, 17, 21, 25, 26, 27, 28], "avm_vers": [1, 2], "avoid": [1, 2, 20], "awai": 26, "await": 8, "awst": 6, "axfr": 10, "b": [1, 2, 5, 6, 9, 13, 17, 21, 22, 23, 24], "b0a0": 5, "b1a1": 5, "b2a2": 5, "ba": 5, "back": [8, 24, 26], "backend": [6, 26], "balanc": [0, 1, 5], "bar": [15, 18, 22, 24], "bare": [2, 22], "baremethod": [0, 1, 2, 22, 24], "barrier": 26, "base": [1, 2, 5, 6, 10, 22, 26], "base32": [1, 2], "base32_seq": 24, "base64": [0, 1, 5], "base64_decod": [0, 5], "base64_seq": 24, "basi": 26, "basic": [8, 14, 24], "bc": 24, "beaker": 26, "bear": 26, "becaus": [6, 25], "becom": [1, 2, 21, 22], "been": [1, 5, 10, 13, 16, 20, 22], "befor": [1, 3, 4, 5, 6, 8, 21, 23, 26], "began": [1, 5], "begin": 5, "behav": [11, 26], "behavior": [10, 27], "behaviour": [1, 6, 16, 24, 26], "being": [1, 3, 4, 5, 8, 10, 12, 21, 26], "believ": 26, "below": [6, 8, 9, 26], "benefit": 25, "bespok": 26, "best": [6, 26], "better": 25, "between": [5, 10, 24, 26], "bewar": 8, "big": [5, 10], "bigint": [8, 24], "bigufixednxm": [0, 2, 10], "biguint": [0, 1, 2, 5, 8, 10, 17], "biguintn": [0, 2, 10], "bin": 13, "binari": [1, 8, 21, 24], "bit": [1, 2, 5, 8, 10, 24], "bitcoin": 5, "bitlen": [0, 5], "bitwis": 1, "bl": 5, "black": 6, "blk_bonu": 5, "blk_branch": 5, "blk_fee_sink": 5, "blk_fees_collect": 5, "blk_propos": 5, "blk_proposer_payout": 5, "blk_protocol": 5, "blk_seed": 5, "blk_timestamp": 5, "blk_txn_counter": 5, "blob": 21, "block": [0, 1, 3, 4, 5, 14, 25], "blockchain": [15, 17, 26], "bls12": 5, "bls12_381g1": 5, "bls12_381g2": 5, "bls12_381mp111": 5, "bn254": 5, "bn254g1": 5, "bn254g2": 5, "bn254mp110": 5, "bnan": 5, "bodi": 22, "bool": [0, 1, 2, 3, 4, 5, 8, 10, 14, 17, 18, 20, 21, 22], "boolean": [1, 8, 16, 24], "both": [1, 2, 8, 13, 14, 15, 22, 24, 26], "bottl": 26, "bottom": 5, "bound": [8, 24], "boundari": 5, "box": [0, 1, 5, 8], "box_a": 21, "box_b": 21, "box_creat": 5, "box_del": 5, "box_extract": 5, "box_get": 5, "box_len": 5, "box_put": 5, "box_replac": 5, "box_res": 5, "box_splic": 5, "boxmap": [0, 1, 21], "boxref": [0, 1, 21], "brace": 5, "branch": 26, "break": [5, 8, 14], "breakpoint": [6, 7], "broad": 26, "broader": 26, "broadli": 26, "bsqrt": [0, 5], "bth": 5, "btoi": [0, 5], "budget": [1, 8, 15, 26], "build": [6, 26], "built": [8, 14, 16, 17, 18, 22, 26], "builtin": [8, 10, 24, 26], "byte": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 14, 15, 17, 18, 21, 22, 23], "bytecod": [1, 5, 6, 7, 8, 26], "bytes32": 18, "bytes_with_default_specifi": 21, "bytesback": [0, 1, 17], "byteslic": [1, 3, 4, 5], "bzero": [0, 5, 21], "c": [1, 5, 22, 24], "c4": 6, "calcul": [1, 2, 10], "call": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 21, 24, 26], "call_another_contract": 12, "call_existing_appl": 12, "call_some_other_subroutin": 23, "call_txn": 23, "callabl": [1, 2, 10, 22], "caller": [16, 17], "caller_application_address": [1, 5], "caller_application_id": [1, 5], "can": [1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], "cannot": 15, "capabl": [26, 27], "capit": 5, "captur": 14, "care": 9, "carri": 5, "case": [1, 2, 5, 6, 9, 12, 14, 18, 20, 21, 22, 24, 25, 26], "casefold": 5, "caseless": 5, "cast": 24, "catch": [16, 25], "categor": 9, "caus": [5, 16], "cd": [6, 7], "center": 5, "certain": [24, 26], "cfrg": 5, "chain": [8, 13], "chang": [5, 10, 15, 26], "char": 5, "charact": [1, 2, 5, 10], "check": [1, 2, 5, 7, 10, 12, 21, 22, 23, 24], "check_untyped_def": 6, "checker": 8, "checksum": [1, 2, 24], "choic": [6, 15], "choos": 26, "chosen": [2, 5], "ci": [6, 7], "circle_area": 18, "circle_area_100": 18, "circuit": [5, 24], "cl": 6, "class": [0, 7, 8, 9, 10, 12, 13, 15, 17, 20, 21, 23, 24, 26], "classmethod": [1, 2], "claus": 14, "clawback": [1, 3, 4, 5], "clear": [1, 2, 3, 4, 5, 7, 10, 12, 13, 22, 25], "clear_state_program": [1, 2, 3, 4, 5, 17, 21, 22, 23], "clear_state_program_pag": [1, 3, 4, 5], "clearstat": [1, 2, 5, 10], "clearstateprogram": 1, "cli": [6, 7, 8], "client": [2, 6, 7, 9, 10, 12, 16, 17, 21], "clientgen": 12, "clone": 6, "close": [5, 21], "close_remainder_to": [1, 3, 4, 5], "closeout": [1, 2], "closur": 8, "coalesc": 6, "code": [1, 5, 6, 7, 8, 10, 14, 16, 18, 20, 22, 24, 25, 26, 28], "codec": 5, "coeffici": 5, "collater": 26, "collect": [1, 2], "collis": 5, "com": 6, "combin": [1, 2, 8, 21], "comfort": 26, "command": [1, 2, 6, 13], "comment": 16, "commit": [1, 3, 4, 5, 6, 26], "common": [1, 5, 10, 11, 18, 21, 22, 25, 26], "commonli": 20, "commun": 26, "companion": 27, "compar": [1, 2, 5, 26], "comparison": [1, 5], "compat": [6, 7, 8, 10, 24, 26, 27], "compil": [1, 2, 8, 9, 10, 12, 15, 18, 20, 21, 22, 23, 25, 26], "compile_contract": [0, 1, 6, 13], "compile_logicsig": [0, 1, 6, 13], "compiledcontract": [0, 1, 2, 12, 13], "compiledlogicsig": [0, 1, 13], "complet": [1, 2, 3, 4, 5, 8, 22, 26], "complex": 26, "compon": [2, 5], "compos": 10, "composit": [1, 8], "compress": [5, 10], "compris": 9, "comput": [1, 3, 4, 5, 15], "concat": [0, 2, 5, 9], "concaten": [1, 5, 17], "concept": [9, 10, 24], "conceptu": 8, "concern": 26, "concert": 16, "concret": [22, 25], "condit": [5, 8, 24], "condition2": 14, "config": [1, 3, 4, 5, 6], "config_asset": [1, 3, 4, 5], "config_asset_clawback": [1, 5], "config_asset_decim": [1, 5], "config_asset_default_frozen": [1, 5], "config_asset_freez": [1, 5], "config_asset_manag": [1, 5], "config_asset_metadata_hash": [1, 5], "config_asset_nam": [1, 5], "config_asset_reserv": [1, 5], "config_asset_tot": [1, 5], "config_asset_unit_nam": [1, 5], "config_asset_url": [1, 5], "configur": [1, 2, 5, 6, 8], "confirm": [1, 5], "conflict": 20, "conform": [1, 2, 9], "confus": 20, "connect": 27, "consecut": [1, 10], "consid": [2, 5, 21, 22, 26], "consist": [2, 5, 22, 26], "consol": 6, "constant": [1, 2, 5, 8, 9, 21, 22, 24, 25], "construct": [1, 2, 6, 8, 9, 13, 24, 25, 26], "constructor": [1, 2, 10], "consumpt": [7, 12], "contain": [1, 2, 5, 6, 8, 9, 15, 18, 21, 22], "content": [0, 21], "context": [25, 26], "continu": [8, 14, 26], "contract": [0, 1, 2, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 26, 27, 28], "contractnam": 10, "contrast": 24, "contribut": 26, "control": [1, 2, 5, 8, 21], "conveni": [2, 9], "convers": 15, "convert": [1, 2, 5, 12, 15, 17, 21, 24], "copi": [1, 2, 4, 5, 10, 15], "copied_pay": 23, "core": [6, 27], "correct": [9, 15, 16, 20, 22, 26], "correspond": 11, "cost": [1, 5, 9, 24, 26], "costli": [15, 24, 25], "could": [13, 15, 26], "count": [1, 2, 5, 22], "counter": [8, 14], "coupl": 26, "cours": [21, 22], "cov": 6, "cover": 1, "cpython": [11, 26], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 18, 21, 22, 26], "create_new_appl": 12, "create_templated_contract": 13, "created_app": [3, 4, 12, 23], "created_application_id": [1, 5], "created_asset": [3, 4, 23], "created_asset_id": [1, 5], "creation": [1, 2, 3, 4, 5, 12, 22], "creator": [1, 5, 20], "creator_address": [1, 5, 20], "credit": [1, 5], "critic": [6, 26], "crucial": [15, 16], "cumul": [1, 2], "current": [1, 2, 5, 6, 10, 14, 15, 18, 21, 22, 23, 24, 25, 26], "current_application_address": [1, 5, 21], "current_application_id": [1, 5], "current_vot": 21, "curv": [5, 26], "custom": [1, 8, 12, 13, 21], "customnam": [1, 2, 22], "cycl": [21, 22], "d": [2, 5, 6, 9, 24], "dai": 26, "data": [0, 3, 4, 5, 8, 9, 10, 24, 25], "dealloc": 1, "debug": [6, 7, 8, 17, 26], "debugg": 28, "decad": 26, "decid": 1, "decim": [1, 2, 3, 4, 5, 8, 23], "decis": 26, "declar": [1, 2, 21, 22, 24, 26], "decod": [2, 5, 10, 12], "decompress": 5, "decor": [1, 2, 10, 22], "decreas": 5, "deduct": 5, "def": [2, 5, 7, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24], "default": [1, 2, 3, 4, 5, 6, 13, 16, 17, 21, 22, 24], "default_arg": 2, "default_frozen": [1, 3, 4], "defin": [1, 2, 5, 9, 10, 13, 15, 18, 22, 23], "definit": [15, 22], "del": [1, 21], "delattr": [2, 5], "deleg": 22, "delet": [1, 5, 21, 24], "delete_data": 21, "deleteappl": [1, 2, 24], "delimit": 5, "deliv": 26, "denot": 5, "depend": [6, 26], "deploi": [1, 8, 21, 22, 24, 26], "deploy": [6, 7, 22, 26], "deriv": [1, 2, 5, 9, 13, 24], "describ": [1, 5, 10, 15], "descript": [1, 6, 21], "design": [8, 26], "desir": 26, "destructur": 6, "detail": [7, 10, 16, 23, 28], "determin": [1, 2, 6, 15], "dev": 6, "develop": [6, 7, 8], "dictionari": 5, "did_exist": 5, "differ": [1, 5, 6, 8, 21, 22, 24, 26], "difficult": 26, "difficulti": 26, "digit": [1, 3, 4, 5], "dilut": [1, 3, 4, 5], "dir": [2, 5, 6], "direct": 15, "directli": [5, 6, 7, 10, 13, 20, 22, 26], "directori": 6, "disabl": 2, "disallow": [2, 25], "disallow_any_decor": 6, "disallow_any_explicit": 6, "disallow_any_expr": 6, "disallow_any_gener": 6, "disallow_any_unimport": 6, "disallow_incomplete_def": 6, "disallow_subclassing_ani": 6, "disallow_untyped_cal": 6, "disallow_untyped_decor": 6, "disallow_untyped_def": 6, "discard": 5, "discov": [6, 20], "dispatch": [10, 26], "displai": [1, 3, 4, 5], "distinct": [21, 22, 24], "dive": [7, 26], "divid": [1, 5], "divis": 24, "divmodw": [0, 5], "divw": [0, 5], "do": [1, 5, 6, 7, 8, 9, 10, 15, 16, 20, 23, 25, 26], "do_someth": 23, "docstr": 10, "document": [7, 22, 24, 26, 27], "doe": [1, 2, 5, 12, 15, 26], "doesn": [1, 16], "domain": 6, "don": [20, 22, 24, 25], "done": [1, 5, 12, 15], "dotenv": 6, "down": 26, "draft": 5, "dry": 2, "due": [1, 8, 11, 12, 24], "duplic": 18, "dure": [6, 13, 21], "dynam": [1, 2, 8, 9, 26], "dynamicarrai": [0, 2, 8, 10, 18], "dynamicbyt": [0, 2, 10], "e": [1, 5, 6, 7, 9, 10, 12, 15, 21, 22, 24, 26], "each": [1, 2, 3, 4, 5, 6, 9, 10, 13, 15, 21, 22, 25, 26], "earlier": [1, 2, 5], "easi": [6, 7], "easier": [10, 26], "easiest": [6, 7], "easili": [20, 26], "ec": [0, 5], "ec_add": 5, "ec_map_to": 5, "ec_multi_scalar_mul": 5, "ec_pairing_check": 5, "ec_scalar_mul": 5, "ec_subgroup_check": 5, "ecdsa": [0, 5], "ecdsa_pk_decompress": [0, 5], "ecdsa_pk_recov": [0, 5], "ecdsa_verifi": [0, 5], "ecvrf": 5, "ed25519": 5, "ed25519verifi": [0, 5], "ed25519verify_bar": [0, 5], "edit": 24, "effect": [5, 8, 24, 25, 26], "effici": [1, 10, 15, 26, 27], "eg": 10, "either": [1, 2, 5, 6, 12, 21, 22, 24, 26], "element": [1, 2, 3, 4, 5, 8, 15, 26], "elif": 14, "elig": [1, 5], "elimin": 10, "elligator2": 5, "ellipsi": [1, 2, 5], "ellipt": 5, "ellipticcurv": [0, 5], "els": [5, 14, 17, 18, 21, 24], "embrac": 26, "emit": [0, 1, 2, 3, 4, 5, 8, 17, 24], "emit_swap": [2, 9], "empti": [1, 2, 3, 4, 5, 24], "emul": 27, "enabl": [1, 5, 27, 28], "enclos": 9, "encod": [1, 2, 5, 9, 10, 12, 15, 17, 24], "encoded_valu": 10, "end": [1, 5, 16, 22, 26], "endian": [5, 10], "endswith": [1, 5, 24], "enforc": [11, 26], "enhanc": 26, "enough": 26, "ensur": [1, 2, 6, 7, 10, 16, 23, 26], "ensure_budget": [0, 1, 19], "entir": 20, "entri": 26, "enum": 5, "enumer": [1, 8, 14], "environ": [6, 7, 8, 15, 26, 27], "epydoc": 10, "equal": [1, 2, 5], "equival": [10, 11, 15], "err": [0, 5, 16], "error": [1, 2, 5, 6, 8, 22, 23, 24, 25, 26], "error_if_not_set": 21, "essenc": 26, "essenti": [9, 26], "et": [6, 20], "etc": [1, 6, 10, 12, 24, 26], "evalu": [1, 2, 14, 16], "even": [8, 22, 26], "event": [2, 8, 17], "event_nam": 9, "event_selector": 9, "event_suffix": 9, "eventemitt": [2, 9], "eventnam": 9, "everi": [20, 22], "evolv": 26, "exact": [1, 2, 5, 21], "exactli": [5, 11, 22, 24], "exampl": [1, 2, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 24, 26], "exce": [5, 24], "except": [8, 11, 22, 24], "excess": 1, "exclus": [1, 5], "execut": [1, 5, 6, 7, 8, 14, 16, 21, 22, 26, 28], "exhaust": 15, "exist": [1, 5, 8, 12, 21, 22], "existing_app": 12, "exit": [0, 5, 6, 16], "exp": [0, 5], "expand": 5, "expandtab": 5, "expect": [5, 6, 23, 24, 26], "expens": [1, 5], "expensive_op": 24, "experi": [7, 26, 27, 28], "experiment": 6, "explan": [5, 24], "explicit": [8, 26], "explicitli": [2, 10, 16, 22, 24], "explor": 6, "expon": 5, "expos": [10, 20, 21, 24], "express": [1, 2, 5, 14, 18, 20, 24, 26], "expw": [0, 5], "extend": [1, 2, 10, 15, 22], "extens": [5, 9, 28], "extent": 26, "extern": [10, 15], "external_nam": 10, "extra": [1, 2, 5, 6, 17, 21], "extra_program_pag": [1, 2, 3, 4, 5], "extract": [0, 1, 5, 21, 23], "extract3": 5, "extract_uint16": [0, 5], "extract_uint32": [0, 5], "extract_uint64": [0, 5], "extraprogrampag": [1, 3, 4, 5], "f": [5, 6, 18, 24], "facet": 26, "facilit": [14, 26], "factor": 26, "fail": [1, 3, 4, 5, 8, 16, 24], "failur": [5, 8, 22], "falcon_verifi": [0, 5], "fall": 5, "fallback": [1, 14], "fals": [1, 2, 5, 6, 10, 14, 16, 22, 24], "familiar": [8, 27], "familiaris": 21, "fashion": 26, "fast": 27, "fbt": 6, "featur": [8, 16, 21, 26, 28], "fee": [1, 2, 3, 4, 5, 12, 23], "fee_sourc": 1, "feed": 26, "feedback": 26, "feel": 26, "few": 15, "ff": [1, 24], "field": [2, 4, 5, 9, 10, 12, 15, 23, 24], "fifth": 5, "file": [1, 2, 6, 7, 10, 13, 21, 22], "filenam": 5, "fill": 5, "final": [1, 5, 8, 21], "financi": 26, "find": 5, "first": [1, 2, 3, 4, 5, 6, 10, 12, 20, 22, 24, 26], "first_64": 21, "first_valid": [1, 3, 4, 5], "first_valid_tim": [1, 3, 4, 5], "firstvalid": [1, 3, 4, 5], "fit": [1, 5, 22], "fix": [1, 2, 8], "flag": 5, "flake8": 6, "flexibl": 26, "float": 8, "floor": 1, "flow": 8, "fly": 22, "focu": 26, "folder": 6, "follow": [1, 2, 5, 7, 9, 10, 12, 13, 22, 23, 24, 26], "foo": [15, 18, 22, 24], "for_account": 21, "forc": [1, 10], "foreign": [1, 3, 4, 5, 10], "foreignapp": 5, "foreignasset": 5, "form": [1, 2, 5, 6, 26], "formal": 5, "format": [5, 6, 7, 18], "format_map": 5, "format_spec": [2, 5], "formatt": [2, 8], "formula": 2, "forty_nin": 18, "forward": [14, 22], "found": 5, "foundat": 26, "fourbyt": 10, "fp": 5, "fp2": 5, "framework": [7, 8, 22, 24, 26, 27], "free": 22, "freez": [1, 3, 4, 5, 15], "freeze_account": [3, 4], "freeze_asset": [1, 3, 4, 5], "freeze_asset_account": [1, 5], "freeze_asset_frozen": [1, 5], "frequent": 26, "friendli": 26, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 17, 18, 20, 21, 22, 24], "from_base32": [1, 24], "from_base64": [1, 24], "from_byt": [1, 2, 21], "from_hex": [1, 14, 24], "from_log": [2, 23], "front": 5, "frontend": [6, 26], "frozen": [1, 3, 4, 5, 10, 15], "fstring": 18, "full": [6, 7, 14, 18, 21, 22, 24], "fulli": [12, 22], "function": [0, 6, 7, 8, 9, 13, 14, 15, 17, 20, 22, 24, 25, 26, 27], "fundament": 26, "further": [8, 24, 26], "furthermor": [25, 26], "futur": [1, 6, 8, 22, 25, 26], "g": [1, 5, 6, 7, 9, 12, 15, 21, 24, 26], "g1": 5, "g2": 5, "gaid": [0, 5], "game": 18, "gener": [5, 7, 10, 12, 13, 14, 20, 21, 22, 26], "genesi": [1, 5], "genesis_hash": [1, 5], "get": [1, 2, 5, 6, 7, 21, 22, 24, 26, 27], "get_arrai": 15, "get_big_uint": 24, "get_byt": [1, 5, 24], "get_data_or_assert": 21, "get_data_with_default": 21, "get_ex_byt": [5, 25], "get_ex_uint64": [5, 25], "get_guaranteed_data": 21, "get_uint64": 5, "getattr": [2, 5], "getbit": [0, 5], "getbyt": [0, 5], "getitem": 5, "gif": 21, "git": 6, "github": [6, 26], "gitxn": [0, 5], "gitxna": 5, "give": [6, 7, 21, 26], "given": [1, 2, 5, 6, 7, 22, 25], "gload": 5, "gload_byt": [0, 1, 2, 5, 25], "gload_uint64": [0, 1, 2, 5, 25], "gloadss": 5, "global": [0, 1, 2, 3, 4, 5, 6, 8, 12, 13, 22], "global_byt": [1, 22], "global_bytes_ful": 21, "global_bytes_no_default": 21, "global_bytes_simplifi": 21, "global_int_ful": 21, "global_int_full_set": 21, "global_int_no_default": 21, "global_int_simplifi": 21, "global_num_byt": [1, 2, 3, 4], "global_num_byte_slic": [1, 5], "global_num_uint": [1, 2, 3, 4, 5], "global_uint": [1, 13, 22], "globalst": [0, 1, 21], "go": 26, "goal": 26, "goe": 26, "good": [6, 8, 22], "googl": 10, "grant": 26, "great": 26, "greater": [1, 5], "greatest": 8, "greet": 12, "greet_txn": 12, "groundbreak": 26, "group": [1, 2, 3, 4, 5, 6, 8, 10, 12, 21], "group_id": [1, 5], "group_index": [1, 3, 4, 5, 23], "group_siz": [1, 5], "groupcredit": 1, "groupindex": 5, "grow": [5, 8], "grown": 26, "gt": 5, "gtxn": [0, 5, 10, 23], "gtxna": 5, "gtxnsa": 5, "guard": 14, "guid": [7, 22, 26], "guidanc": 7, "h": [6, 7, 24], "ha": [1, 5, 8, 9, 11, 13, 15, 20, 22, 24, 26], "had": 5, "halt": 5, "hand": 26, "handl": [1, 2, 5, 8, 10, 12, 24, 25], "happen": 10, "happi": 24, "has_no_app_arg": 20, "hash": [1, 2, 5], "have": [1, 2, 5, 6, 7, 10, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26], "head": 10, "header": 10, "heap": 10, "heartbeat": 5, "heavili": 9, "held": [1, 5], "hello": [1, 2, 6, 7, 10, 12, 15, 18, 21, 23], "hello_world": 6, "hello_world_app": 12, "hello_world_approv": 23, "hello_world_arc4": 12, "hello_world_clear": 23, "hello_world_result": 23, "helloworld": 12, "helloworldcli": 12, "helloworldcontract": [2, 7, 10, 12], "help": [2, 5, 6, 10, 26], "helper": [2, 5, 19], "here": [7, 9, 10, 11, 12, 14, 17, 22, 24, 25, 26], "hex": 1, "hex_seq": 24, "high": [5, 26], "higher": [20, 24, 26], "highest": [5, 26], "highlight": 8, "hold": 5, "holist": 10, "how": [6, 10, 14, 22, 23, 24], "howev": [1, 8, 15, 22, 26], "http": 6, "hurdl": 26, "hypothesi": 27, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27], "id": [1, 2, 3, 4, 5, 8, 22, 24, 26], "ident": [5, 26], "identifi": [5, 9, 26], "idiomat": 26, "ie": [1, 2, 22, 26], "ietf": 5, "ignor": [5, 6], "illustr": 6, "imm_arrai": 15, "immedi": [5, 16, 24, 25], "immut": [1, 8, 10, 24, 26], "immutablearrai": [0, 1, 8], "impact": 26, "imper": 26, "implement": [1, 2, 5, 7, 8, 9, 11, 16, 24, 25, 26], "implicitli": [1, 3, 4, 5, 22], "import": [1, 2, 7, 9, 10, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26], "importantli": 8, "imposs": [25, 26], "improv": 26, "incent": [1, 5], "incid": 26, "includ": [1, 2, 5, 7, 9, 10, 14, 17, 21, 22, 26], "inclus": [1, 2, 12], "increas": [1, 5, 19, 24], "increment": 1, "increment_count": 22, "index": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 21, 24], "indic": [1, 2, 5, 10, 22, 24], "indirectli": 22, "individu": [5, 10, 23], "infer": [2, 10, 12], "infin": 5, "influenc": 26, "info": [1, 5, 6, 22], "inform": [1, 6, 8, 17, 21, 24], "inherit": [1, 2, 8, 22], "ini_opt": 6, "init": [6, 7], "initi": [1, 2, 3, 4, 5, 15, 21, 26], "initialis": 22, "inlin": 1, "inner": [2, 4, 5, 6, 8, 12, 22], "inner_tx": 1, "innertransact": [0, 4, 23], "innertransactionresult": [0, 4, 23], "innov": 26, "input": [5, 26], "insert": [1, 5, 22], "inspir": 26, "instal": [7, 8], "instanc": [1, 2, 5, 10, 20, 21, 22, 24], "instanti": [6, 7, 21, 22, 23, 24], "instead": [1, 2, 5, 10, 11, 22, 23, 24, 26], "instruct": 28, "insuffici": 1, "int": [1, 2, 3, 4, 5, 8, 11, 17, 18, 21, 22], "integ": [1, 3, 4, 5, 8, 24], "integr": 26, "intellisens": [6, 7, 20], "intend": [24, 26], "intention": 5, "interact": [1, 10, 21, 24, 26], "interfac": [1, 2, 7, 8, 27], "intermedi": 6, "intern": [22, 26], "internal_method": 10, "internet": 5, "interop": 10, "interoper": 5, "interpret": [5, 24], "interv": 10, "introduc": [9, 15], "introduct": 26, "intuit": 26, "invalid": 1, "invert": 1, "invoc": [21, 22], "invok": [5, 6, 10, 22, 23, 25], "involv": 26, "ir": [6, 26], "irtf": 5, "is_opted_in": 1, "isalnum": 5, "isalpha": 5, "isascii": 5, "isdecim": 5, "isdigit": 5, "isidentifi": 5, "iskeyword": 5, "islow": 5, "isn": [9, 24, 25], "isnumer": 5, "isol": [21, 22, 26], "isprint": 5, "isspac": 5, "istitl": 5, "isupp": 5, "item": [1, 2, 10, 11, 14, 17], "iter": [1, 2, 5, 11, 14, 24], "itob": [0, 5, 21], "its": [1, 5, 9, 10, 15, 21, 26], "itself": [1, 2, 5, 10, 22, 26], "itxn": [0, 1, 2, 5, 8, 13, 23], "itxn_begin": 5, "itxn_field": 5, "itxn_next": 5, "itxn_submit": 5, "itxna": 5, "itxncreat": [0, 5], "j": [1, 5], "javascript": 26, "join": [1, 5, 24], "json": [1, 2, 5, 6, 7, 10, 12, 22], "json_object": 5, "json_ref": 5, "json_str": 5, "json_uint64": 5, "jsonref": [0, 5], "june": 26, "just": [1, 2, 6, 8, 12, 15, 20, 21, 23, 24, 25, 26], "justifi": 5, "k": 5, "keccak256": [0, 5], "keep": 10, "keepend": 5, "kei": [1, 2, 3, 4, 5, 10, 21, 22, 24, 26, 27], "key_prefix": [1, 21], "key_typ": 1, "keyreg": [1, 5], "keyregistr": [0, 1, 4, 23], "keyregistrationinnertransact": [0, 4, 23], "keyregistrationtransact": [0, 3, 10, 23], "keyword": [5, 8, 10, 12, 22, 24], "knowledg": 5, "known": [1, 5, 6, 9], "kw_onli": 10, "kwarg": [2, 5, 22], "lack": [1, 24], "lambda": 8, "langaug": 26, "languag": [6, 7, 22, 26], "larg": [5, 26], "larger": [1, 5], "largest": [1, 5], "last": [1, 2, 3, 4, 5], "last_log": [1, 3, 4, 5, 23], "last_valid": [1, 3, 4, 5], "lastvalid": 5, "latest": [6, 26], "latest_timestamp": [1, 5], "lead": 5, "learn": [8, 26], "leas": [1, 3, 4, 5], "least": [1, 5], "ledger": 17, "left": [1, 5, 24], "leftmost": 5, "len": [1, 2, 5, 8, 24], "length": [1, 2, 5, 6, 8, 10, 11, 15, 21, 24], "less": [5, 26], "let": [1, 2], "level": [1, 3, 4, 5, 6, 8, 22, 24, 25, 26], "leverag": [6, 28], "librari": 22, "life": [21, 22], "like": [1, 2, 6, 8, 12, 14, 20, 21, 22, 24, 26, 27], "likelihood": 26, "limit": [1, 2, 5, 8, 15, 20, 21, 22, 24], "line": [1, 2, 5, 6, 16, 26, 28], "lint": [6, 7], "linter": 8, "list": [1, 2, 3, 4, 5, 22, 26], "liter": [1, 2, 6, 9, 10, 17, 18, 21, 24], "littl": [20, 25], "ljust": 5, "ll": 9, "load": [2, 5, 16], "load_byt": [5, 21], "load_uint64": [5, 21], "local": [1, 2, 3, 4, 5, 6, 8, 12, 13, 20, 22, 24], "local_byt": [1, 22], "local_num_byt": [1, 2, 3, 4], "local_num_byte_slic": [1, 5], "local_num_uint": [1, 2, 3, 4, 5], "local_uint": [1, 22], "local_with_metadata": 21, "localst": [0, 1, 21], "lock": 6, "log": [0, 1, 2, 3, 4, 5, 6, 8, 20, 23, 24], "log_from_call1": 23, "logic": [1, 6, 7, 8, 13, 24, 26], "logic_sig_vers": [1, 5], "logicsig": [0, 1, 5, 22], "long": [5, 10, 26], "longer": [1, 5, 21, 23], "look": [7, 24, 25, 26], "lookup": 5, "lookuperror": 5, "loop": [8, 11, 15], "loos": 26, "low": 5, "lower": [5, 6, 26], "lowercas": 5, "lowest": 5, "lstrip": 5, "lwm": 21, "m": [2, 10], "machin": [24, 26], "macro": 26, "made": [1, 10, 15, 21, 22], "magnitud": 24, "mai": [1, 5, 9, 15, 23, 24, 25], "main": 5, "mainli": 5, "mainnet": [1, 2, 26], "mainstream": 26, "maintain": [8, 22, 24, 26], "mainten": 26, "major": 6, "make": [1, 5, 6, 7, 8, 10, 15, 16, 18, 20, 22, 24, 26], "manag": [1, 3, 4, 5, 10, 22, 25], "mani": [15, 20, 22, 24, 26], "manipul": [1, 2, 20, 24], "manner": 13, "manual": [1, 9, 22], "map": [1, 2, 5, 8, 16, 24, 28], "map_to": 5, "mark": [1, 2, 3, 4, 5, 16, 22], "masonri": 6, "match": [1, 2, 5, 6, 7, 8, 10, 21, 22, 24], "math": [8, 24], "max": [1, 2, 24], "max_txn_lif": [1, 5], "maximum": [1, 5, 8, 24], "maxsplit": 5, "mayb": [1, 21], "md": 6, "mean": [1, 2, 3, 4, 5, 8, 10, 22, 25, 26], "meant": 5, "mechan": 26, "medium": 26, "member": [1, 2, 15, 25], "memori": [2, 5, 6, 8, 15, 24], "mention": 8, "messag": [1, 3, 4, 5, 6, 16, 22], "metadata": [1, 3, 4, 5, 9, 21], "metadata_hash": [1, 3, 4], "metaprogram": 26, "method": [1, 2, 5, 8, 9, 14, 15, 17, 19, 20, 21, 22, 24, 25], "methodologi": 9, "microalgo": [1, 3, 4, 5], "might": [24, 26], "migrat": 26, "mimc": [0, 5], "mimcconfigur": [0, 5], "min": [1, 5], "min_bal": [0, 1, 5], "min_tx_fe": 1, "min_txn_fe": [1, 5], "mind": 26, "minim": [21, 26], "minimum": [1, 5, 6, 10], "mintxnfe": 5, "minut": 26, "mir": 6, "mirror": 1, "mistak": 26, "mix": 10, "miyaguchi": 5, "mod": 1, "mode": [1, 3, 4, 5], "model": 26, "modif": [1, 15], "modifi": [5, 6, 15, 22], "modify_arrai": 15, "modul": [0, 1, 8, 9, 10, 17, 20, 21, 24, 25], "modulo": 5, "modulu": 5, "more": [1, 3, 4, 5, 6, 8, 10, 12, 15, 16, 18, 22, 24, 26], "most": [6, 7, 8, 10, 15, 24, 26], "mostli": 22, "move": 18, "much": 26, "multi": [6, 26], "multipl": [1, 2, 5, 6, 17, 21, 22, 24], "multipli": [1, 5], "mulw": [0, 5, 24], "must": [1, 2, 5, 9, 13, 14, 16, 21, 22, 24], "mutabl": [1, 2, 8], "mutable_arr": 15, "mutat": [10, 15, 24], "my_arr": 15, "my_arr2": 15, "my_blob": 21, "my_formatted_str": 18, "my_log_sig": 22, "my_map": 21, "my_method": [13, 22], "my_other_method": 13, "my_project": 6, "mycontract": [1, 2, 17, 21, 22, 23], "mypi": 6, "mytupl": 15, "n": [1, 5, 6, 10, 24], "name": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 21, 22, 24, 26], "name_exist": 1, "namedtupl": [8, 10], "namespac": 9, "nativ": [1, 2, 5, 10, 11, 15, 24], "natur": [5, 8, 26], "nearli": 5, "neck": 26, "need": [1, 5, 6, 7, 9, 10, 12, 15, 16, 20, 21, 22, 24, 25, 26], "neg": [1, 3, 4, 5], "nest": [22, 25], "network": [1, 5, 27], "never": [1, 2, 5, 8], "new": [1, 2, 3, 4, 5, 6, 10, 15, 21, 24, 26], "new_siz": 1, "newapp": 12, "newli": 5, "next": [5, 24], "nist": 5, "no_return": 2, "node": 26, "non": [1, 2, 5, 6, 8, 9, 16, 22, 24, 26], "non_particip": [3, 4], "none": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 20, 21, 22, 23], "nonparticip": [1, 3, 4, 5], "noop": [1, 2, 10, 22], "normal": 24, "notat": 5, "note": [1, 2, 3, 4, 5, 6, 9, 14, 15, 22, 24], "noth": 26, "notset": 6, "now": [7, 26], "nuanc": 26, "num": [1, 24], "num2": 24, "num_account": [1, 3, 4, 5], "num_app": [3, 4], "num_app_arg": [1, 3, 4, 5, 17, 20], "num_appl": [1, 5], "num_approval_program_pag": [1, 3, 4, 5], "num_asset": [1, 3, 4, 5], "num_clear_state_program_pag": [1, 3, 4, 5], "num_log": [1, 3, 4, 5], "number": [1, 2, 3, 4, 5, 6, 10, 14, 24], "numer": 5, "numpydoc": 10, "o": [1, 6, 24], "object": [1, 2, 4, 5, 10, 26], "observ": [5, 15], "obtain": [1, 8, 10, 23], "obviou": 8, "occur": [1, 2, 5, 24], "occurr": [2, 5], "octal": 1, "off": [1, 2, 13, 22], "offer": 27, "offici": [8, 26, 27, 28], "offlin": 27, "offset": [1, 5, 10], "often": [15, 24, 26], "ok": 23, "okai": 22, "old": 5, "omit": [1, 2, 21], "on_complet": [1, 2, 3, 4, 5, 22], "on_delet": 24, "on_upd": 24, "onc": [1, 6, 13, 21, 22, 24], "oncomplet": [1, 2, 10], "oncompleteact": [0, 1, 2, 3, 4, 5, 22], "oncompletionact": 22, "one": [1, 2, 5, 6, 10, 22, 23, 24, 26], "ones": [5, 10], "onli": [1, 2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 20, 22, 24, 25, 26], "onlin": 5, "online_stak": [0, 5], "only_allow_cr": 20, "op": [0, 1, 2, 9, 15, 16, 17, 20, 21, 24, 25, 26], "opcod": [1, 5, 8, 9, 20, 21], "opcode_budget": [1, 5], "oper": [1, 2, 5, 8, 10, 16, 21, 24, 25, 26], "operand": 2, "opportun": 26, "oppos": [8, 26], "opposit": 16, "opt": [1, 5], "optim": [1, 5, 6, 7], "optimis": [6, 7, 26], "optin": [1, 2, 10], "option": [1, 2, 5, 13, 15, 16, 17, 21, 22, 26], "opup": 1, "opupfeesourc": [0, 1], "order": [1, 2, 5, 8, 10, 20, 24, 26], "ordin": 5, "organis": 22, "origin": [1, 2, 5, 15, 26], "other": [1, 2, 5, 6, 8, 10, 14, 15, 18, 21, 22, 23, 24, 25, 26], "otherwis": [1, 2, 5, 25], "our": 26, "out": [5, 6, 8, 9, 12, 26], "out_dir": 6, "outcom": 26, "outer": 1, "outlin": 26, "output": [1, 2, 5, 6, 7, 8, 9, 10, 12, 22, 26], "outsid": [5, 8], "over": [8, 13, 14, 21, 24, 26], "overal": 26, "overflow": [1, 5, 24], "overlap": [1, 2, 5], "overload": 9, "overpai": 5, "overridden": [1, 2, 13, 22], "own": [5, 6, 10, 26], "pack": 8, "packag": [0, 22, 26, 27], "pad": [1, 5, 18], "page": [1, 2, 3, 4, 5, 13], "pai": [2, 10], "paid": [1, 5], "pair": [1, 5, 24], "pairing_check": 5, "paradigm": 26, "parallel": 26, "param": [5, 21], "paramet": [1, 2, 4, 5, 8, 9, 10, 12, 13, 22], "parameter_not_allow": 23, "parenthes": 9, "pars": [6, 9], "part": [1, 5, 9, 21, 22, 26], "parti": [5, 22], "partial": [7, 8], "particip": [1, 3, 4, 5], "particular": [5, 13, 25], "particularli": [1, 2, 22, 26], "partit": 5, "pass": [1, 2, 3, 4, 5, 10, 12, 15, 21, 22, 24, 26], "passing_fields_allow": 23, "patch": 26, "path": 6, "pattern": [14, 26], "pattern1": 14, "pattern2": 14, "pay_txn": 23, "payload": 9, "payment": [0, 1, 3, 4, 23], "payment_txn": 23, "paymentinnertransact": [0, 4, 23], "paymenttransact": [0, 3, 10, 23], "payout": [1, 5], "payouts_en": [1, 5], "payouts_go_online_fe": [1, 5], "payouts_max_bal": [1, 5], "payouts_min_bal": [1, 5], "payouts_perc": [1, 5], "pep": 26, "per": [6, 22, 24], "percentag": [1, 5], "perform": [1, 6, 10, 20], "persist": [21, 22], "philosophi": 8, "pick": 26, "pickl": [2, 5], "pip": [6, 8], "pipelin": 6, "pipx": 6, "pit": 26, "place": [1, 3, 4, 5, 8, 10, 18, 22, 24], "placehold": [1, 24], "plai": [6, 16], "plain": [8, 24, 26], "platform": 26, "pleas": [7, 8, 24, 28], "plu": [5, 26], "poetri": [6, 7, 8], "point": [5, 8, 15, 26], "pointer": [10, 25], "poke": 6, "polymorph": 25, "pop": [1, 2, 10], "popul": 12, "popular": 26, "portion": [10, 21], "posit": [1, 3, 4, 5, 22], "position": 22, "possibl": [2, 5, 8, 10, 16, 18, 24, 25, 26], "potenti": [8, 15, 26], "power": [1, 5, 23, 24, 26], "pq": 5, "practic": [22, 26], "pre": 6, "preced": [1, 5, 26], "precis": 2, "prefer": [12, 15, 24, 25], "prefix": [1, 2, 5, 6, 10, 21], "preneel": 5, "prepar": [5, 6], "prescrib": 10, "present": [1, 2, 5, 26], "prevent": 26, "previou": [1, 5], "primari": [1, 26], "primarili": [11, 26], "prime": 5, "primit": [8, 24], "principl": 8, "printabl": 5, "prioriti": 13, "privat": 22, "procedur": 26, "process": 26, "process_pay": 23, "produc": [1, 6, 7, 12, 13, 15, 22, 26], "product": [5, 6, 26], "profession": 26, "progdata": 5, "program": [1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 15, 16, 25, 26], "program_hash": 5, "project": [6, 7, 22, 26], "promot": 26, "proof": [1, 3, 4, 5, 18], "propag": 21, "properti": [1, 2, 3, 4, 10, 11, 23, 24], "propos": [1, 5], "proto": 26, "protocol": [1, 26], "provid": [1, 2, 6, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28], "proxi": [1, 21], "pubkei": 5, "public": [1, 2, 3, 4, 5, 10, 22, 24], "publish": 12, "punctuat": 5, "pure": 8, "purpos": [1, 5, 17, 22], "put": [1, 5, 15, 21, 22], "puya": [1, 2, 6, 10, 22, 23, 26], "puyapi": [10, 12, 13, 24], "py": [6, 7, 10, 13, 22], "pya": 23, "pycharm": 6, "pypi": 8, "pypl": 26, "pyteal": 26, "pytest": [6, 27], "python": [1, 2, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28], "python_vers": 6, "pythonpath": 6, "q": 6, "quadrat": 5, "qualifi": 12, "qualiti": 26, "quickli": [15, 26], "quit": [5, 24], "r": 5, "radiu": 18, "rais": [1, 2, 5, 8, 16], "rang": [1, 2, 5, 8, 14, 22], "rank": 26, "rapidli": 26, "rare": 5, "rather": [6, 15, 17, 22, 24, 26], "raw": [1, 17, 21], "re": [6, 22, 25, 26], "reach": [5, 20], "read": [1, 2, 5, 15, 21, 22], "readm": 6, "readonli": 2, "real": [21, 25], "realis": 8, "reason": [9, 15], "reassign": [15, 21], "reassigned_pay": 23, "reassigned_payment_txn": 23, "rebind": 25, "receiv": [1, 3, 4, 5, 6, 23], "reclaim": 1, "recognis": 26, "recommend": [6, 7, 8, 12, 20], "reconfigur": 1, "record": [1, 17], "recov": 5, "recoveri": 5, "reduc": 26, "redund": [1, 25], "refer": [1, 2, 8, 12, 15, 22, 23, 24, 25, 26, 27, 28], "referenc": [5, 12], "reflect": 5, "regardless": [1, 26], "regist": [5, 21], "register_error": 5, "registr": [1, 3, 4], "regular": [5, 8, 15, 23], "reject": 22, "rekei": [1, 2, 5], "rekey_to": [1, 2, 3, 4, 5], "rel": [6, 22], "relat": [12, 24, 26], "releas": 26, "relev": [10, 24], "reliabl": 27, "remain": [1, 5], "remit": 26, "remov": [1, 2, 5, 10, 26], "removeprefix": 5, "removesuffix": 5, "render": 25, "repeat": 25, "replac": [0, 1, 2, 5, 6, 21], "replace2": 5, "replace3": 5, "repo": 6, "repositori": 28, "repr": [2, 5], "repres": [1, 2, 5, 8, 10, 12, 21, 24, 26], "represent": [2, 5, 6, 20, 24], "request": 5, "requir": [1, 2, 5, 6, 8, 10, 12, 15, 21, 22, 23, 25, 26, 27], "required_budget": 1, "resembl": 26, "reserv": [1, 2, 3, 4, 5, 6], "reset": 5, "residu": 5, "resiz": [1, 5], "resolv": [1, 2, 25], "resourc": 1, "respect": [5, 8, 24, 26], "rest": [5, 10], "restrict": [5, 8, 10, 15, 21, 23], "resubmit": 5, "result": [1, 2, 4, 5, 6, 7, 12, 16, 18, 21, 24, 26], "retriev": [1, 21, 24], "return": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25], "return_not_allow": 23, "return_two_th": 22, "reus": [22, 26], "revers": [1, 2, 8, 14], "reward": [1, 3, 4, 5], "rfc": 5, "rfind": 5, "richer": 1, "right": [1, 5, 24, 26], "rindex": 5, "rjust": 5, "rky": [1, 24], "roadmap": 9, "robust": 16, "role": [16, 22], "root_operand": 6, "root_operand_excluding_arg": 6, "round": [1, 2, 3, 4, 5], "rout": [1, 2, 10], "router": [8, 22], "row": 18, "rpartit": 5, "rsplit": 5, "rstrip": 5, "ruf": 6, "ruff": 6, "rule": [5, 10, 22], "run": [2, 5, 6, 7, 8, 22, 26], "runtim": 26, "rust": 26, "safe": [5, 12], "safeguard": 26, "sai": [24, 26], "said": 26, "same": [1, 2, 5, 6, 8, 10, 11, 14, 15, 16, 21, 22, 24, 25, 26], "scalar": 5, "scalar_mul": 5, "scalar_mul_multi": 5, "scale": 18, "scaled_pi": 18, "scaled_result": 18, "scenario": 16, "schema": [1, 2], "scheme": 5, "scratch": [0, 1, 2, 5, 7, 8, 15], "scratch_slot": [1, 2, 21, 22], "seamless": 28, "search": 5, "second": [5, 6, 10, 26], "secp256k1": 5, "secp256r1": 5, "section": [5, 22], "see": [1, 2, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24], "seed": 5, "seen": 6, "select": [5, 6], "select_byt": [0, 5], "select_uint64": [0, 5], "selection_kei": [3, 4], "selection_pk": [1, 5], "selector": [2, 12], "self": [1, 2, 4, 5, 6, 7, 9, 10, 12, 13, 15, 17, 21, 22, 23, 24], "semant": [6, 7, 8, 10, 16, 21, 22, 24], "sender": [1, 2, 3, 4, 5, 20, 21], "sender_byt": 21, "sens": [8, 24], "sent": 5, "sep": [1, 5, 17], "separ": [1, 5, 17, 25, 26], "seper": 24, "seq": 1, "sequenc": [1, 2, 14, 24], "seri": 9, "serv": 22, "set": [1, 2, 4, 5, 6, 8, 10, 21, 23, 24, 26], "set_account": 5, "set_amount": 5, "set_appl": 5, "set_application_arg": 5, "set_application_id": 5, "set_approval_program": 5, "set_approval_program_pag": 5, "set_asset": 5, "set_asset_amount": 5, "set_asset_close_to": 5, "set_asset_receiv": 5, "set_asset_send": 5, "set_clear_state_program": 5, "set_clear_state_program_pag": 5, "set_close_remainder_to": 5, "set_config_asset": 5, "set_config_asset_clawback": 5, "set_config_asset_decim": 5, "set_config_asset_default_frozen": 5, "set_config_asset_freez": 5, "set_config_asset_manag": 5, "set_config_asset_metadata_hash": 5, "set_config_asset_nam": 5, "set_config_asset_reserv": 5, "set_config_asset_tot": 5, "set_config_asset_unit_nam": 5, "set_config_asset_url": 5, "set_data": 21, "set_extra_program_pag": 5, "set_fe": 5, "set_freeze_asset": 5, "set_freeze_asset_account": 5, "set_freeze_asset_frozen": 5, "set_global_num_byte_slic": 5, "set_global_num_uint": 5, "set_local_num_byte_slic": 5, "set_local_num_uint": 5, "set_nonparticip": 5, "set_not": 5, "set_on_complet": 5, "set_receiv": 5, "set_rekey_to": 5, "set_selection_pk": 5, "set_send": 5, "set_state_proof_pk": 5, "set_typ": 5, "set_type_enum": 5, "set_valu": 16, "set_vote_first": 5, "set_vote_key_dilut": 5, "set_vote_last": 5, "set_vote_pk": 5, "set_xfer_asset": 5, "setattr": [2, 5], "setbit": 5, "setbit_byt": [0, 5], "setbit_uint64": [0, 5], "setbyt": [0, 5], "setup": 28, "seven": 18, "sha256": [0, 5], "sha3_256": [0, 5], "sha512": 5, "sha512_256": [0, 5, 9], "share": 3, "shell": 6, "shift": [1, 24], "shl": [0, 5], "short": [24, 26], "shorter": 1, "should": [1, 2, 5, 6, 7, 9, 10, 12, 22, 26], "shouldn": 26, "show": [6, 16], "shr": [0, 5], "side_effecting_op": 24, "sig": 1, "sign": [5, 13], "signatur": [1, 2, 5, 7, 8, 9, 10, 13, 15, 24, 26], "signific": [5, 6, 10], "significantli": 26, "similar": [1, 10, 14, 21, 22, 26], "similarli": [8, 22, 24], "simpl": [8, 9, 24, 27], "simpler": [1, 5, 26], "simplest": 8, "simpli": 24, "simplifi": 26, "simul": [2, 26, 27, 28], "sinc": [1, 5, 9, 22, 25, 26], "singl": [1, 2, 6, 10, 15, 17, 21, 22, 25], "size": [1, 2, 5, 8, 10, 21, 24], "slice": [1, 5, 24], "slot": [1, 2, 3, 4, 5, 15, 22], "small": [5, 26], "smaller": [5, 26], "smart": [1, 5, 6, 7, 8, 9, 10, 12, 13, 16, 21, 22, 23, 24, 26, 27, 28], "smart_contract": 6, "smooth": 26, "so": [1, 2, 5, 6, 9, 10, 12, 15, 16, 20, 22, 24, 25, 26], "softwar": 26, "solut": 26, "some": [1, 6, 9, 11, 15, 21, 22, 23, 24, 26], "some_big_uint": 24, "some_byt": [6, 13, 24], "some_int": 6, "some_str": 6, "some_uint": 13, "some_vari": 1, "somecontract": 15, "someth": 20, "sourc": [1, 2, 3, 4, 5, 12, 16, 28], "space": [1, 5], "spec": [6, 7, 9, 12, 21, 22], "special": [5, 24, 25], "specialis": 21, "specif": [1, 2, 5, 9, 10, 12, 21, 23, 26], "specifi": [1, 2, 5, 6, 10, 12, 15, 21], "spent": [1, 5], "splice": [1, 5, 21], "split": 5, "splitlin": 5, "sqrt": [0, 5, 20], "sqrt_16": 20, "ssa": 6, "sswu": 5, "stabil": 26, "stack": [5, 10, 15, 16, 20, 26], "stackoverflow": 26, "stage": 6, "stake": 5, "stand": [1, 3, 4, 5, 26], "standalon": 22, "standard": [5, 6, 7, 8, 14, 22, 24, 26], "star": 6, "start": [1, 5, 8, 10, 26], "start_index": 1, "startswith": [1, 5, 24], "state": [1, 2, 3, 4, 5, 10, 12, 13, 21, 22, 25], "state_proof_kei": [3, 4], "state_proof_pk": [1, 5], "state_tot": [1, 2, 22], "stateless": 22, "statement": [8, 16, 24, 25], "statetot": [0, 1, 2, 22], "static": [1, 2, 5, 6, 7, 8, 9, 20, 24], "staticarrai": [0, 2, 8, 10, 14, 18, 21], "stdencod": 5, "steadili": 26, "step": [1, 6, 8, 26], "stifl": 26, "still": [1, 20, 23, 24, 26], "stop": [1, 5, 16], "storag": [1, 2, 8, 15, 20, 22], "store": [1, 5, 8, 10, 15, 17, 22, 24, 25], "str": [1, 2, 4, 5, 8, 17, 18, 26], "stratch": 21, "strategi": [6, 26], "strict": 5, "strict_concaten": 6, "strict_equ": 6, "strictli": 26, "stride": 26, "string": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 21, 22, 23], "strip": 5, "strive": 26, "stronger": 5, "strongli": 26, "struct": [0, 2, 8, 9, 25], "structur": [8, 26], "studio": 6, "style": 10, "sub": [5, 22], "subclass": [1, 2, 10, 22, 24], "subgroup": 5, "subgroup_check": 5, "submit": [4, 5, 26], "submit_txn": [0, 4, 23], "submodul": 20, "suboptim": 26, "subroutin": [0, 1, 8, 10, 12, 13, 16, 18, 20, 21, 24], "subset": [8, 26], "substanti": 26, "substitut": [1, 5, 13], "substr": [0, 1, 5], "substring3": 5, "subtract": 1, "succe": [16, 21, 22], "success": [5, 22, 26], "successfulli": 6, "suffix": [1, 5], "suit": 21, "suitabl": 5, "sumhash512": [0, 5], "summari": 10, "superior": 20, "superset": 17, "suppli": [1, 2, 6, 8], "support": [1, 2, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25], "suppress": 6, "sure": [21, 25], "svdw": 5, "swap": [2, 9], "swapcas": 5, "switch": [14, 26], "syntact": 8, "syntax": [6, 8, 18, 26], "system": [6, 7, 26], "t": [1, 5, 6, 7, 8, 9, 10, 16, 20, 21, 22, 24, 25, 26], "tab": 5, "tabl": [5, 6], "tabsiz": 5, "tail": 10, "take": [5, 6, 7, 9, 13, 22, 24, 25, 26], "taken": [1, 26], "tally_box_kei": 21, "target": [5, 6], "teal": [1, 2, 5, 6, 7, 16, 22, 24, 26], "tealish": 26, "tealop": 6, "team": 26, "templat": [1, 2, 7, 8, 12], "template_var": [1, 13], "template_vars_prefix": 1, "templated_contract": 13, "templatedcontract": 13, "templatevar": [0, 1, 6, 13, 24], "templatevariablescontract": 24, "temporari": 21, "ten": 18, "term": [15, 25, 26], "termin": 25, "ternari": 8, "ters": 21, "terser": [18, 20], "test": [1, 5, 6, 8, 18, 22, 24, 26], "test_arrai": 14, "text": 5, "than": [1, 5, 6, 12, 15, 17, 21, 22, 24, 26], "thei": [1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25], "them": [1, 8, 9, 18, 22, 24, 26], "themselv": 6, "therefor": [5, 25], "therein": 6, "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27], "thing": [8, 22, 25, 26], "third": [5, 22], "those": [8, 15, 24, 26], "thought": 26, "thread": 25, "three": [5, 6, 21], "through": [1, 5, 6, 10, 13, 22, 24, 25, 26], "thu": [5, 6, 16, 21, 24], "ti": 22, "tie": 26, "tightli": 26, "time": [1, 2, 5, 6, 8, 9, 10, 15, 18, 21, 22, 24, 25, 26], "timestamp": [1, 3, 4, 5], "tiob": 26, "titl": 5, "titlecas": 5, "tld": 6, "tmpl_": [1, 6, 24], "todai": 26, "togeth": [2, 17, 22, 24, 26], "too": [5, 18, 26], "tool": [6, 7, 8], "top": [1, 5, 26], "total": [1, 2, 3, 4, 5, 10, 15, 23], "total_apps_cr": 1, "total_apps_opted_in": 1, "total_asset": 1, "total_assets_cr": 1, "total_box": 1, "total_box_byt": 1, "total_extra_app_pag": 1, "total_num_byte_slic": 1, "total_num_uint": 1, "toward": 26, "trace": [16, 28], "trail": 5, "train": 26, "transact": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 17, 21, 22, 25, 26], "transactionbas": [0, 3], "transactiontyp": [0, 1, 3, 4, 5], "transfer": [1, 3, 4], "transform": 26, "translat": [5, 24], "transpil": 26, "trap": 16, "tree": [6, 26], "trivial": [8, 9], "true": [1, 2, 5, 6, 10, 12, 14, 17, 21, 22, 24, 25], "truli": 9, "truncat": [1, 5, 24], "truthi": 1, "try": [5, 8, 22], "tup1": 15, "tup2": 15, "tupl": [0, 1, 2, 4, 5, 8, 9, 12, 18, 22, 23], "tutori": 8, "tweak": 6, "twenti": 21, "two": [2, 5, 8, 10, 15, 21, 22, 24, 26], "tx_id": [1, 5], "txn": [0, 1, 2, 3, 4, 5, 8, 12, 17, 21, 22, 23], "txn_id": [3, 4, 23], "txna": [1, 5], "type": [1, 2, 3, 4, 5, 7, 8, 9, 12, 17, 20, 21, 23, 26], "type1": 9, "type2": 9, "type_": 1, "type_byt": [3, 4], "type_enum": [1, 5], "typealia": [2, 10, 18], "typeerror": 2, "typesaf": 2, "typescript": 26, "u": 5, "uenumer": [0, 1, 11, 14], "ufix": 2, "ufixednxm": [0, 2, 10], "uint": [1, 2, 10, 13, 22], "uint128": [0, 2, 5], "uint16": [0, 2, 5, 10], "uint256": [0, 2], "uint32": [0, 2, 5, 21], "uint40": 10, "uint512": [0, 2, 24], "uint64": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "uint64arrai": 10, "uint8": [0, 2, 10, 14, 18], "uintn": [0, 2, 10], "ultim": 26, "un": [1, 3, 4, 5], "unari": 1, "unbound": [8, 24], "uncas": 5, "unchang": 5, "uncondition": 16, "under": [8, 10, 24], "underflow": 1, "underli": [1, 2, 7, 8, 17, 20, 21, 24, 26], "underlin": 26, "understand": [8, 21, 22, 26], "underwai": 26, "unfix": 6, "unfortun": [8, 24], "unicod": [5, 24], "unicodeencodeerror": 5, "unimpl": 22, "union": 22, "uniqu": 9, "unit": [1, 3, 4, 5, 26, 27], "unit_nam": [1, 3, 4, 23], "unittest": 27, "unix": [1, 3, 4, 5], "unless": [5, 6], "unlik": 5, "unnot": 26, "unpack": 2, "unset": 1, "unsign": [1, 5, 8, 24], "unspecifi": [1, 2, 3, 4, 5], "unsupport": [8, 16], "unsurpris": 26, "until": 26, "untouch": 5, "unus": 5, "up": [1, 3, 4, 5, 6, 8, 24, 26], "updat": [1, 2, 4, 12, 15, 24, 26], "update_existing_appl": 12, "updateappl": [1, 2, 24], "upon": 5, "upper": 5, "uppercas": 5, "urang": [0, 1, 2, 11, 14, 21, 22], "url": [1, 3, 4, 5], "urlencod": 5, "us": [1, 2, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], "usag": [5, 10, 28], "useless": 25, "user": [1, 6, 10, 25, 26], "usual": 5, "utf": [1, 5, 9, 10, 17, 24], "utf8": [1, 2, 24], "util": [1, 6, 13, 16, 24], "utilis": 21, "v": [2, 5, 8, 22, 26, 28], "v4": 5, "v5": [1, 5], "v8": 26, "valid": [1, 2, 3, 4, 5, 22, 26], "valu": [1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26], "value1": 14, "value2": 14, "value_typ": 1, "valueerror": [2, 5], "var": [1, 6, 13], "variabl": [1, 2, 8, 9, 10, 12, 17, 21, 22, 23], "variad": 22, "variou": [17, 24], "vector": 10, "verbos": 12, "veri": [5, 22, 25, 26], "verif": 5, "verifi": [5, 13], "versa": 5, "version": [1, 2, 5, 6, 10, 11, 26], "via": [1, 2, 5, 6, 7, 10, 12, 13, 20, 21, 22, 24], "vice": 5, "view": 15, "virtu": 8, "virtual": [24, 26], "visibl": 5, "visual": 6, "vote": 21, "vote_first": [1, 3, 4, 5], "vote_kei": [3, 4], "vote_key_dilut": [1, 3, 4, 5], "vote_last": [1, 3, 4, 5], "vote_pk": [1, 5], "voteindexarrai": 18, "voter_bal": 5, "voter_incentive_elig": 5, "voter_params_get": 5, "voterparamsget": [0, 5], "vrf": 5, "vrf_verifi": [0, 5], "vrfalgorand": 5, "vrfverifi": [0, 5], "w": [5, 6], "wa": [1, 5, 21, 22, 26], "wai": [2, 6, 7, 8, 10, 15, 17, 22, 26], "want": [1, 6, 7, 9, 12, 17, 20, 21, 26], "warn": [1, 2, 5, 6, 22], "warn_redundant_cast": 6, "warn_return_ani": 6, "warn_unused_ignor": 6, "wasn": 22, "we": [6, 7, 20, 21, 22, 25, 26], "welcom": 26, "well": [5, 8, 17, 22, 23, 26], "were": [1, 3, 4, 5, 15], "what": [1, 2, 6, 9, 10, 18, 22, 24, 25, 26], "when": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 21, 22, 24, 26], "where": [1, 2, 5, 6, 9, 10, 12, 15, 16, 22, 24], "wherea": [8, 24], "wherev": 26, "whether": [1, 3, 4, 5, 22, 25], "which": [1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 21, 22, 24, 26], "while": [8, 24], "whilst": [24, 26], "whitespac": 5, "whole": [10, 15, 26], "whose": [1, 3, 4, 5], "why": 24, "wide": 24, "width": 5, "wish": 1, "with_transact": 10, "within": [1, 2, 3, 4, 5, 6, 8, 11, 21, 22, 24, 25, 26], "without": [1, 2, 8, 24, 25, 27], "won": [6, 9, 22], "word": [5, 22], "work": [5, 6, 7, 8, 9, 14, 16, 22, 24, 26], "world": [1, 2, 6, 12, 21, 23, 26], "wors": 26, "worth": 9, "would": [5, 10, 12, 15, 20, 24, 25, 26], "wrap": 24, "write": [1, 5, 18, 21, 26], "written": [1, 2, 12], "wyvern": 26, "x": [5, 10, 24], "xab": 13, "xcd": 13, "xfer_asset": [1, 3, 4, 5], "xmlcharrefreplac": 5, "xor": 1, "y": [5, 10], "yet": [9, 25], "yield": [1, 5], "you": [1, 2, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26], "your": [6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 23], "yourself": 21, "ytt": 6, "z": 5, "z0": 5, "z1": 5, "zen": 26, "zero": [1, 2, 5, 16, 22, 24], "zero_address": [1, 5], "zeroaddress": [1, 5], "zfill": 5, "zk": 5}, "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algopy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algopy.arc4</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algopy.gtxn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algopy.itxn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algopy.op</span></code>", "PuyaPy compiler", "Algorand Python", "Language Guide", "ARC-28: Structured event logging", "ARC-4: Application Binary Interface", "Python builtins", "Calling other applications", "Compiling to AVM bytecode", "Control flow structures", "Data structures", "Error handling and assertions", "Logging", "Module level constructs", "Opcode budgets", "AVM operations", "Storing data on-chain", "Program structure", "Transactions", "Types", "Unsupported Python features", "Principles &amp; Background", "Algorand Python Testing", "Breakpoint debugging"], "titleterms": {"28": 9, "32": 10, "4": [10, 22, 23, 24], "56": 10, "For": 14, "If": [14, 18], "abi_cal": 12, "abstract": 26, "access": 23, "account": 24, "address": 10, "advanc": 6, "algokit": 26, "algopi": [1, 2, 3, 4, 5, 12, 15, 22], "algorand": [7, 15, 27], "alias": 18, "altern": 12, "an": [22, 23], "anoth": 23, "api": [0, 1, 2, 3, 4, 5], "applic": [10, 12, 23, 24], "applicationcal": 12, "ar": 26, "arc": [9, 10, 22, 23, 24], "arc4": [2, 12, 15], "arc4_creat": 12, "arc4_upd": 12, "arc4client": 12, "arc4contract": 22, "arrai": [10, 15], "assert": 16, "asset": 24, "async": 25, "audit": 26, "avm": [13, 20, 24], "background": 26, "biguint": 24, "binari": 10, "bool": 24, "boolean": 10, "box": 21, "breakpoint": 28, "budget": 19, "built": 24, "builtin": 11, "byte": [10, 24], "bytecod": 13, "call": [12, 22, 23], "cannot": 23, "chain": 21, "check": 6, "class": [1, 2, 3, 4, 5, 22, 25], "cli": 13, "closur": 25, "cohes": 26, "compil": [6, 7, 13], "compon": 26, "composit": 15, "condit": 14, "configur": 22, "constant": 18, "construct": 18, "contain": 10, "content": [1, 2, 3, 4, 5, 8], "contract": [13, 22, 25], "control": 14, "copi": 23, "counter": 22, "creat": 23, "data": [1, 2, 15, 21], "debug": 28, "decim": 10, "default": 26, "defin": 6, "definit": 6, "develop": 26, "dynam": [10, 15], "dynamicarrai": 15, "ecosystem": 26, "emit": 9, "enumer": 11, "error": 16, "event": 9, "evolut": 26, "exampl": [6, 22, 23], "except": [16, 25], "exist": 26, "explicit": 16, "extens": 26, "failur": 16, "featur": 25, "final": 25, "fix": 10, "float": 24, "flow": 14, "from": [13, 23, 26], "function": [1, 2, 4, 5], "global": [20, 21, 25], "group": 23, "gtxn": 3, "guid": 8, "handl": 16, "i": 23, "immut": 15, "immutablearrai": 15, "implement": 22, "index": 23, "inherit": [25, 26], "inner": 23, "instal": 6, "int": [10, 24], "integ": 18, "interfac": 10, "itxn": [4, 12], "keyword": 25, "lambda": 25, "languag": 8, "least": 26, "len": 11, "level": 18, "leverag": 26, "limit": 23, "local": 21, "log": [9, 17], "logic": 22, "loop": [14, 23], "match": 14, "math": 18, "meet": 26, "method": [10, 12, 23], "modul": [2, 3, 4, 5, 18, 22], "modular": 26, "multipl": 23, "mutabl": [10, 15], "name": 12, "namedtupl": [15, 24], "none": 24, "obfusc": 26, "object": 23, "obtain": 13, "onramp": 26, "op": 5, "opcod": 19, "oper": 20, "option": 6, "other": [12, 13], "output": 13, "outsid": 25, "pack": 10, "packag": 1, "paramet": 23, "pass": 23, "point": 10, "possibl": 22, "principl": 26, "program": [7, 22], "puyapi": [6, 7], "pyproject": 6, "python": [7, 11, 15, 24, 25, 27], "quick": [7, 27, 28], "rais": 25, "rang": 11, "reassign": 23, "recommend": 15, "refer": [0, 10], "result": 23, "return": 23, "revers": 11, "revolut": 26, "router": 10, "sampl": 6, "scratch": 21, "seamless": 26, "secur": 26, "signatur": [12, 22], "simpl": 22, "simplest": 22, "size": 15, "start": [7, 27, 28], "statement": [14, 18], "static": [10, 15], "staticarrai": 15, "storag": 21, "store": 21, "str": 24, "string": [10, 18, 24], "struct": [10, 15], "structur": [9, 14, 15, 22], "submit": 23, "subroutin": [22, 23], "subsequ": 23, "suit": 26, "support": 26, "surpris": 26, "sustain": 26, "tabl": 8, "templat": [6, 13, 24], "ternari": 14, "test": 27, "thei": 26, "toml": 6, "tool": 26, "transact": 23, "try": 25, "tupl": [10, 15, 24], "txn": 20, "type": [6, 10, 11, 15, 18, 22, 24], "uint64": 24, "unsign": 10, "unsupport": 25, "us": [6, 7, 12], "usag": 6, "v": 15, "valu": 6, "variabl": [6, 13, 24], "wai": 12, "where": 26, "while": 14, "within": 13, "without": [23, 26]}})