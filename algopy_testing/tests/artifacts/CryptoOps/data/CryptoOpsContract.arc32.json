{
    "hints": {
        "verify_ed25519_bare(byte[],byte[],address)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_sha256(byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_verify(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_recover(byte[],byte[])(byte[],byte[])": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_decompress(byte[])(byte[],byte[])": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy5hcnRpZmFjdHMuQ3J5cHRvT3BzLmNvbnRyYWN0LkNyeXB0b09wc0NvbnRyYWN0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyB0ZXN0cy9hcnRpZmFjdHMvQ3J5cHRvT3BzL2NvbnRyYWN0LnB5OjQKICAgIC8vIGNsYXNzIENyeXB0b09wc0NvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "CryptoOpsContract",
        "methods": [
            {
                "name": "verify_ed25519_bare",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "message"
                    },
                    {
                        "type": "byte[]",
                        "name": "signature"
                    },
                    {
                        "type": "address",
                        "name": "pubkey"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_sha256",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "message"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_ecdsa_verify",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "hash_value"
                    },
                    {
                        "type": "byte[]",
                        "name": "signature"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_ecdsa_recover",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "hash_value"
                    },
                    {
                        "type": "byte[]",
                        "name": "signature"
                    }
                ],
                "returns": {
                    "type": "(byte[],byte[])"
                }
            },
            {
                "name": "verify_ecdsa_decompress",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "compressed_pk"
                    }
                ],
                "returns": {
                    "type": "(byte[],byte[])"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}