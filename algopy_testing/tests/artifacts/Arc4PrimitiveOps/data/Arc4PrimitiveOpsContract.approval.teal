#pragma version 10

tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.approval_program:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@49
    method "verify_uintn_uintn_eq(byte[],byte[])bool"
    method "verify_biguintn_uintn_eq(byte[],byte[])bool"
    method "verify_uintn_biguintn_eq(byte[],byte[])bool"
    method "verify_biguintn_biguintn_eq(byte[],byte[])bool"
    method "verify_uintn_uintn_ne(byte[],byte[])bool"
    method "verify_biguintn_uintn_ne(byte[],byte[])bool"
    method "verify_uintn_biguintn_ne(byte[],byte[])bool"
    method "verify_biguintn_biguintn_ne(byte[],byte[])bool"
    method "verify_uintn_uintn_lt(byte[],byte[])bool"
    method "verify_biguintn_uintn_lt(byte[],byte[])bool"
    method "verify_uintn_biguintn_lt(byte[],byte[])bool"
    method "verify_biguintn_biguintn_lt(byte[],byte[])bool"
    method "verify_uintn_uintn_le(byte[],byte[])bool"
    method "verify_biguintn_uintn_le(byte[],byte[])bool"
    method "verify_uintn_biguintn_le(byte[],byte[])bool"
    method "verify_biguintn_biguintn_le(byte[],byte[])bool"
    method "verify_uintn_uintn_gt(byte[],byte[])bool"
    method "verify_biguintn_uintn_gt(byte[],byte[])bool"
    method "verify_uintn_biguintn_gt(byte[],byte[])bool"
    method "verify_biguintn_biguintn_gt(byte[],byte[])bool"
    method "verify_uintn_uintn_ge(byte[],byte[])bool"
    method "verify_biguintn_uintn_ge(byte[],byte[])bool"
    method "verify_uintn_biguintn_ge(byte[],byte[])bool"
    method "verify_biguintn_biguintn_ge(byte[],byte[])bool"
    method "verify_uintn_init(byte[])uint32"
    method "verify_biguintn_init(byte[])uint256"
    method "verify_uintn_from_bytes(byte[])uint32"
    method "verify_biguintn_from_bytes(byte[])uint256"
    method "verify_uintn_from_log(byte[])uint32"
    method "verify_biguintn_from_log(byte[])uint256"
    method "verify_ufixednxm_bytes(ufixed32x8)byte[]"
    method "verify_bigufixednxm_bytes(ufixed256x16)byte[]"
    method "verify_ufixednxm_from_bytes(byte[])ufixed32x8"
    method "verify_bigufixednxm_from_bytes(byte[])ufixed256x16"
    method "verify_ufixednxm_from_log(byte[])ufixed32x8"
    method "verify_bigufixednxm_from_log(byte[])ufixed256x16"
    method "verify_string_init(string)string"
    method "verify_string_add(string,string)string"
    method "verify_string_eq(string,string)bool"
    method "verify_string_bytes(string)byte[]"
    method "verify_string_from_bytes(byte[])string"
    method "verify_string_from_log(byte[])string"
    method "verify_bool_bytes(bool)byte[]"
    method "verify_bool_from_bytes(byte[])bool"
    method "verify_bool_from_log(byte[])bool"
    txna ApplicationArgs 0
    match main_verify_uintn_uintn_eq_route@2 main_verify_biguintn_uintn_eq_route@3 main_verify_uintn_biguintn_eq_route@4 main_verify_biguintn_biguintn_eq_route@5 main_verify_uintn_uintn_ne_route@6 main_verify_biguintn_uintn_ne_route@7 main_verify_uintn_biguintn_ne_route@8 main_verify_biguintn_biguintn_ne_route@9 main_verify_uintn_uintn_lt_route@10 main_verify_biguintn_uintn_lt_route@11 main_verify_uintn_biguintn_lt_route@12 main_verify_biguintn_biguintn_lt_route@13 main_verify_uintn_uintn_le_route@14 main_verify_biguintn_uintn_le_route@15 main_verify_uintn_biguintn_le_route@16 main_verify_biguintn_biguintn_le_route@17 main_verify_uintn_uintn_gt_route@18 main_verify_biguintn_uintn_gt_route@19 main_verify_uintn_biguintn_gt_route@20 main_verify_biguintn_biguintn_gt_route@21 main_verify_uintn_uintn_ge_route@22 main_verify_biguintn_uintn_ge_route@23 main_verify_uintn_biguintn_ge_route@24 main_verify_biguintn_biguintn_ge_route@25 main_verify_uintn_init_route@26 main_verify_biguintn_init_route@27 main_verify_uintn_from_bytes_route@28 main_verify_biguintn_from_bytes_route@29 main_verify_uintn_from_log_route@30 main_verify_biguintn_from_log_route@31 main_verify_ufixednxm_bytes_route@32 main_verify_bigufixednxm_bytes_route@33 main_verify_ufixednxm_from_bytes_route@34 main_verify_bigufixednxm_from_bytes_route@35 main_verify_ufixednxm_from_log_route@36 main_verify_bigufixednxm_from_log_route@37 main_verify_string_init_route@38 main_verify_string_add_route@39 main_verify_string_eq_route@40 main_verify_string_bytes_route@41 main_verify_string_from_bytes_route@42 main_verify_string_from_log_route@43 main_verify_bool_bytes_route@44 main_verify_bool_from_bytes_route@45 main_verify_bool_from_log_route@46
    err // reject transaction

main_verify_uintn_uintn_eq_route@2:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:7
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:7
    // @arc4.abimethod()
    callsub verify_uintn_uintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_eq_route@3:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:13
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:13
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_eq_route@4:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:19
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:19
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_eq_route@5:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_ne_route@6:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:31
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:31
    // @arc4.abimethod()
    callsub verify_uintn_uintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_ne_route@7:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:37
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:37
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_ne_route@8:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:43
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:43
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_ne_route@9:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:49
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:49
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_lt_route@10:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:55
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:55
    // @arc4.abimethod()
    callsub verify_uintn_uintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_lt_route@11:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:61
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:61
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_lt_route@12:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:67
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:67
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_lt_route@13:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:73
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:73
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_le_route@14:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:79
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:79
    // @arc4.abimethod()
    callsub verify_uintn_uintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_le_route@15:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:85
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:85
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_le_route@16:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:91
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:91
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_le_route@17:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:97
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:97
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_gt_route@18:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:103
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:103
    // @arc4.abimethod()
    callsub verify_uintn_uintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_gt_route@19:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:109
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:109
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_gt_route@20:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:115
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:115
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_gt_route@21:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:121
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:121
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_ge_route@22:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:127
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:127
    // @arc4.abimethod()
    callsub verify_uintn_uintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_ge_route@23:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:133
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:133
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_ge_route@24:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:139
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:139
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_ge_route@25:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:145
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:145
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_init_route@26:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:151
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:151
    // @arc4.abimethod()
    callsub verify_uintn_init
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_init_route@27:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:156
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:156
    // @arc4.abimethod()
    callsub verify_biguintn_init
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_from_bytes_route@28:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:161
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:161
    // @arc4.abimethod()
    callsub verify_uintn_from_bytes
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_from_bytes_route@29:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:165
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:165
    // @arc4.abimethod()
    callsub verify_biguintn_from_bytes
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_from_log_route@30:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:169
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:169
    // @arc4.abimethod()
    callsub verify_uintn_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_from_log_route@31:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:173
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:173
    // @arc4.abimethod()
    callsub verify_biguintn_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_ufixednxm_bytes_route@32:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:177
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:177
    // @arc4.abimethod()
    callsub verify_ufixednxm_bytes
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bigufixednxm_bytes_route@33:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:183
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:183
    // @arc4.abimethod()
    callsub verify_bigufixednxm_bytes
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_ufixednxm_from_bytes_route@34:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:189
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:189
    // @arc4.abimethod()
    callsub verify_ufixednxm_from_bytes
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bigufixednxm_from_bytes_route@35:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:195
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:195
    // @arc4.abimethod()
    callsub verify_bigufixednxm_from_bytes
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_ufixednxm_from_log_route@36:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:201
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:201
    // @arc4.abimethod()
    callsub verify_ufixednxm_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bigufixednxm_from_log_route@37:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:207
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:207
    // @arc4.abimethod()
    callsub verify_bigufixednxm_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_init_route@38:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:213
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:213
    // @arc4.abimethod
    callsub verify_string_init
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_add_route@39:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:218
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    // tests/artifacts/Arc4PrimitiveOps/contract.py:218
    // @arc4.abimethod
    callsub verify_string_add
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_eq_route@40:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:223
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    // tests/artifacts/Arc4PrimitiveOps/contract.py:223
    // @arc4.abimethod()
    callsub verify_string_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_bytes_route@41:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:227
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:227
    // @arc4.abimethod()
    callsub verify_string_bytes
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_from_bytes_route@42:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:232
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:232
    // @arc4.abimethod()
    callsub verify_string_from_bytes
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_from_log_route@43:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:236
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:236
    // @arc4.abimethod()
    callsub verify_string_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bool_bytes_route@44:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:240
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:240
    // @arc4.abimethod()
    callsub verify_bool_bytes
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bool_from_bytes_route@45:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:244
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:244
    // @arc4.abimethod()
    callsub verify_bool_from_bytes
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bool_from_log_route@46:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:248
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:248
    // @arc4.abimethod()
    callsub verify_bool_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_bare_routing@49:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txn OnCompletion
    !
    assert // reject transaction
    txn ApplicationID
    !
    assert // is creating
    int 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_eq(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:7-8
    // @arc4.abimethod()
    // def verify_uintn_uintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:11
    // return arc4.UInt64(a_biguint) == arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_eq(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:13-14
    // @arc4.abimethod()
    // def verify_biguintn_uintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:17
    // return arc4.UInt512(a_biguint) == arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_eq(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:19-20
    // @arc4.abimethod()
    // def verify_uintn_biguintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:23
    // return arc4.UInt64(a_biguint) == arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_eq(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:25-26
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:29
    // return arc4.UInt512(a_biguint) == arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_ne(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:31-32
    // @arc4.abimethod()
    // def verify_uintn_uintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:35
    // return arc4.UInt64(a_biguint) != arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_ne(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:37-38
    // @arc4.abimethod()
    // def verify_biguintn_uintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:41
    // return arc4.UInt512(a_biguint) != arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_ne(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:43-44
    // @arc4.abimethod()
    // def verify_uintn_biguintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:47
    // return arc4.UInt64(a_biguint) != arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_ne(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:49-50
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:53
    // return arc4.UInt512(a_biguint) != arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_lt(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:55-56
    // @arc4.abimethod()
    // def verify_uintn_uintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:59
    // return arc4.UInt64(a_biguint) < arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_lt(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:61-62
    // @arc4.abimethod()
    // def verify_biguintn_uintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:65
    // return arc4.UInt512(a_biguint) < arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_lt(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:67-68
    // @arc4.abimethod()
    // def verify_uintn_biguintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:71
    // return arc4.UInt64(a_biguint) < arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_lt(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:73-74
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:77
    // return arc4.UInt512(a_biguint) < arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_le(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:79-80
    // @arc4.abimethod()
    // def verify_uintn_uintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:83
    // return arc4.UInt64(a_biguint) <= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_le(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:85-86
    // @arc4.abimethod()
    // def verify_biguintn_uintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:89
    // return arc4.UInt512(a_biguint) <= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_le(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:91-92
    // @arc4.abimethod()
    // def verify_uintn_biguintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:95
    // return arc4.UInt64(a_biguint) <= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_le(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:97-98
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:101
    // return arc4.UInt512(a_biguint) <= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_gt(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:103-104
    // @arc4.abimethod()
    // def verify_uintn_uintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:107
    // return arc4.UInt64(a_biguint) > arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_gt(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:109-110
    // @arc4.abimethod()
    // def verify_biguintn_uintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:113
    // return arc4.UInt512(a_biguint) > arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_gt(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:115-116
    // @arc4.abimethod()
    // def verify_uintn_biguintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:119
    // return arc4.UInt64(a_biguint) > arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_gt(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:121-122
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:125
    // return arc4.UInt512(a_biguint) > arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_ge(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:127-128
    // @arc4.abimethod()
    // def verify_uintn_uintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:131
    // return arc4.UInt64(a_biguint) >= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_ge(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:133-134
    // @arc4.abimethod()
    // def verify_biguintn_uintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:137
    // return arc4.UInt512(a_biguint) >= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_ge(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:139-140
    // @arc4.abimethod()
    // def verify_uintn_biguintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:143
    // return arc4.UInt64(a_biguint) >= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_ge(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:145-146
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:149
    // return arc4.UInt512(a_biguint) >= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_init(a: bytes) -> bytes:
verify_uintn_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:151-152
    // @arc4.abimethod()
    // def verify_uintn_init(self, a: Bytes) -> arc4.UInt32:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:154
    // return arc4.UInt32(a_biguint)
    frame_dig -1
    len
    int 4
    <=
    assert // overflow
    int 4
    bzero
    frame_dig -1
    b|
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_init(a: bytes) -> bytes:
verify_biguintn_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:156-157
    // @arc4.abimethod()
    // def verify_biguintn_init(self, a: Bytes) -> arc4.UInt256:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:159
    // return arc4.UInt256(a_biguint)
    frame_dig -1
    len
    int 32
    <=
    assert // overflow
    int 32
    bzero
    frame_dig -1
    b|
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_from_bytes(a: bytes) -> bytes:
verify_uintn_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:161-162
    // @arc4.abimethod()
    // def verify_uintn_from_bytes(self, a: Bytes) -> arc4.UInt32:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:163
    // return arc4.UInt32.from_bytes(a)
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_from_bytes(a: bytes) -> bytes:
verify_biguintn_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:165-166
    // @arc4.abimethod()
    // def verify_biguintn_from_bytes(self, a: Bytes) -> arc4.UInt256:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:167
    // return arc4.UInt256.from_bytes(a)
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_from_log(a: bytes) -> bytes:
verify_uintn_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:169-170
    // @arc4.abimethod()
    // def verify_uintn_from_log(self, a: Bytes) -> arc4.UInt32:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:171
    // return arc4.UInt32.from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_from_log(a: bytes) -> bytes:
verify_biguintn_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:173-174
    // @arc4.abimethod()
    // def verify_biguintn_from_log(self, a: Bytes) -> arc4.UInt256:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:175
    // return arc4.UInt256.from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_ufixednxm_bytes(a: bytes) -> bytes:
verify_ufixednxm_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:177-180
    // @arc4.abimethod()
    // def verify_ufixednxm_bytes(
    //     self, a: arc4.UFixedNxM[typing.Literal[32], typing.Literal[8]]
    // ) -> Bytes:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:181
    // return a.bytes
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bigufixednxm_bytes(a: bytes) -> bytes:
verify_bigufixednxm_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:183-186
    // @arc4.abimethod()
    // def verify_bigufixednxm_bytes(
    //     self, a: arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]]
    // ) -> Bytes:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:187
    // return a.bytes
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_ufixednxm_from_bytes(a: bytes) -> bytes:
verify_ufixednxm_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:189-192
    // @arc4.abimethod()
    // def verify_ufixednxm_from_bytes(
    //     self, a: Bytes
    // ) -> arc4.UFixedNxM[typing.Literal[32], typing.Literal[8]]:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:193
    // return arc4.UFixedNxM[typing.Literal[32], typing.Literal[8]].from_bytes(a)
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bigufixednxm_from_bytes(a: bytes) -> bytes:
verify_bigufixednxm_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:195-198
    // @arc4.abimethod()
    // def verify_bigufixednxm_from_bytes(
    //     self, a: Bytes
    // ) -> arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]]:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:199
    // return arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]].from_bytes(a)
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_ufixednxm_from_log(a: bytes) -> bytes:
verify_ufixednxm_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:201-204
    // @arc4.abimethod()
    // def verify_ufixednxm_from_log(
    //     self, a: Bytes
    // ) -> arc4.UFixedNxM[typing.Literal[32], typing.Literal[8]]:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:205
    // return arc4.UFixedNxM[typing.Literal[32], typing.Literal[8]].from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bigufixednxm_from_log(a: bytes) -> bytes:
verify_bigufixednxm_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:207-210
    // @arc4.abimethod()
    // def verify_bigufixednxm_from_log(
    //     self, a: Bytes
    // ) -> arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]]:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:211
    // return arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]].from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_init(a: bytes) -> bytes:
verify_string_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:213-214
    // @arc4.abimethod
    // def verify_string_init(self, a: String) -> arc4.String:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:215
    // result = arc4.String(String("Hello, ") + a)
    byte "Hello, "
    frame_dig -1
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // tests/artifacts/Arc4PrimitiveOps/contract.py:216
    // return result
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_add(a: bytes, b: bytes) -> bytes:
verify_string_add:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:218-219
    // @arc4.abimethod
    // def verify_string_add(self, a: arc4.String, b: arc4.String) -> arc4.String:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:220
    // result = a + b
    frame_dig -2
    extract 2 0
    frame_dig -1
    extract 2 0
    concat
    dup
    len
    itob
    extract 6 0
    swap
    concat
    // tests/artifacts/Arc4PrimitiveOps/contract.py:221
    // return result
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_eq(a: bytes, b: bytes) -> uint64:
verify_string_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:223-224
    // @arc4.abimethod()
    // def verify_string_eq(self, a: arc4.String, b: arc4.String) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:225
    // return a == b
    frame_dig -2
    frame_dig -1
    ==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_bytes(a: bytes) -> bytes:
verify_string_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:227-228
    // @arc4.abimethod()
    // def verify_string_bytes(self, a: String) -> Bytes:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:229
    // result = arc4.String(a)
    frame_dig -1
    len
    itob
    extract 6 2
    frame_dig -1
    concat
    // tests/artifacts/Arc4PrimitiveOps/contract.py:230
    // return result.bytes
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_from_bytes(a: bytes) -> bytes:
verify_string_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:232-233
    // @arc4.abimethod()
    // def verify_string_from_bytes(self, a: Bytes) -> arc4.String:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:234
    // return arc4.String.from_bytes(a)
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_from_log(a: bytes) -> bytes:
verify_string_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:236-237
    // @arc4.abimethod()
    // def verify_string_from_log(self, a: Bytes) -> arc4.String:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:238
    // return arc4.String.from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bool_bytes(a: bytes) -> bytes:
verify_bool_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:240-241
    // @arc4.abimethod()
    // def verify_bool_bytes(self, a: arc4.Bool) -> Bytes:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:242
    // return a.bytes
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bool_from_bytes(a: bytes) -> bytes:
verify_bool_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:244-245
    // @arc4.abimethod()
    // def verify_bool_from_bytes(self, a: Bytes) -> arc4.Bool:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:246
    // return arc4.Bool.from_bytes(a)
    frame_dig -1
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bool_from_log(a: bytes) -> bytes:
verify_bool_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:248-249
    // @arc4.abimethod()
    // def verify_bool_from_log(self, a: Bytes) -> arc4.Bool:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:250
    // return arc4.Bool.from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub
