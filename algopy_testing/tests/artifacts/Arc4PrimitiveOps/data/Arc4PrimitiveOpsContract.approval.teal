#pragma version 10

tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.approval_program:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@32
    method "verify_uintn_uintn_eq(byte[],byte[])bool"
    method "verify_biguintn_uintn_eq(byte[],byte[])bool"
    method "verify_uintn_biguintn_eq(byte[],byte[])bool"
    method "verify_biguintn_biguintn_eq(byte[],byte[])bool"
    method "verify_uintn_uintn_ne(byte[],byte[])bool"
    method "verify_biguintn_uintn_ne(byte[],byte[])bool"
    method "verify_uintn_biguintn_ne(byte[],byte[])bool"
    method "verify_biguintn_biguintn_ne(byte[],byte[])bool"
    method "verify_uintn_uintn_lt(byte[],byte[])bool"
    method "verify_biguintn_uintn_lt(byte[],byte[])bool"
    method "verify_uintn_biguintn_lt(byte[],byte[])bool"
    method "verify_biguintn_biguintn_lt(byte[],byte[])bool"
    method "verify_uintn_uintn_le(byte[],byte[])bool"
    method "verify_biguintn_uintn_le(byte[],byte[])bool"
    method "verify_uintn_biguintn_le(byte[],byte[])bool"
    method "verify_biguintn_biguintn_le(byte[],byte[])bool"
    method "verify_uintn_uintn_gt(byte[],byte[])bool"
    method "verify_biguintn_uintn_gt(byte[],byte[])bool"
    method "verify_uintn_biguintn_gt(byte[],byte[])bool"
    method "verify_biguintn_biguintn_gt(byte[],byte[])bool"
    method "verify_uintn_uintn_ge(byte[],byte[])bool"
    method "verify_biguintn_uintn_ge(byte[],byte[])bool"
    method "verify_uintn_biguintn_ge(byte[],byte[])bool"
    method "verify_biguintn_biguintn_ge(byte[],byte[])bool"
    method "verify_uintn_init(byte[])uint32"
    method "verify_biguintn_init(byte[])uint256"
    method "verify_uintn_from_log(byte[])uint32"
    method "verify_biguintn_from_log(byte[])uint256"
    txna ApplicationArgs 0
    match main_verify_uintn_uintn_eq_route@2 main_verify_biguintn_uintn_eq_route@3 main_verify_uintn_biguintn_eq_route@4 main_verify_biguintn_biguintn_eq_route@5 main_verify_uintn_uintn_ne_route@6 main_verify_biguintn_uintn_ne_route@7 main_verify_uintn_biguintn_ne_route@8 main_verify_biguintn_biguintn_ne_route@9 main_verify_uintn_uintn_lt_route@10 main_verify_biguintn_uintn_lt_route@11 main_verify_uintn_biguintn_lt_route@12 main_verify_biguintn_biguintn_lt_route@13 main_verify_uintn_uintn_le_route@14 main_verify_biguintn_uintn_le_route@15 main_verify_uintn_biguintn_le_route@16 main_verify_biguintn_biguintn_le_route@17 main_verify_uintn_uintn_gt_route@18 main_verify_biguintn_uintn_gt_route@19 main_verify_uintn_biguintn_gt_route@20 main_verify_biguintn_biguintn_gt_route@21 main_verify_uintn_uintn_ge_route@22 main_verify_biguintn_uintn_ge_route@23 main_verify_uintn_biguintn_ge_route@24 main_verify_biguintn_biguintn_ge_route@25 main_verify_uintn_init_route@26 main_verify_biguintn_init_route@27 main_verify_uintn_from_log_route@28 main_verify_biguintn_from_log_route@29
    err // reject transaction

main_verify_uintn_uintn_eq_route@2:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:5
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:5
    // @arc4.abimethod()
    callsub verify_uintn_uintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_eq_route@3:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:11
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:11
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_eq_route@4:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:17
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:17
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_eq_route@5:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:23
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:23
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_ne_route@6:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:29
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:29
    // @arc4.abimethod()
    callsub verify_uintn_uintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_ne_route@7:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:35
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:35
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_ne_route@8:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:41
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:41
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_ne_route@9:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:47
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:47
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_lt_route@10:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:53
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:53
    // @arc4.abimethod()
    callsub verify_uintn_uintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_lt_route@11:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:59
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:59
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_lt_route@12:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:65
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:65
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_lt_route@13:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:71
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:71
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_le_route@14:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:77
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:77
    // @arc4.abimethod()
    callsub verify_uintn_uintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_le_route@15:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:83
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:83
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_le_route@16:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:89
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:89
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_le_route@17:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:95
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:95
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_gt_route@18:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:101
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:101
    // @arc4.abimethod()
    callsub verify_uintn_uintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_gt_route@19:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:107
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:107
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_gt_route@20:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:113
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:113
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_gt_route@21:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:119
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:119
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_uintn_ge_route@22:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:125
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:125
    // @arc4.abimethod()
    callsub verify_uintn_uintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_uintn_ge_route@23:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:131
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:131
    // @arc4.abimethod()
    callsub verify_biguintn_uintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_biguintn_ge_route@24:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:137
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:137
    // @arc4.abimethod()
    callsub verify_uintn_biguintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_biguintn_ge_route@25:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:143
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:143
    // @arc4.abimethod()
    callsub verify_biguintn_biguintn_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_init_route@26:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:149
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:149
    // @arc4.abimethod()
    callsub verify_uintn_init
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_init_route@27:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:154
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:154
    // @arc4.abimethod()
    callsub verify_biguintn_init
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uintn_from_log_route@28:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:159
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:159
    // @arc4.abimethod()
    callsub verify_uintn_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguintn_from_log_route@29:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:163
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:163
    // @arc4.abimethod()
    callsub verify_biguintn_from_log
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_bare_routing@32:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:4
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txn OnCompletion
    !
    assert // reject transaction
    txn ApplicationID
    !
    assert // is creating
    int 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_eq(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:5-6
    // @arc4.abimethod()
    // def verify_uintn_uintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:9
    // return arc4.UInt64(a_biguint) == arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_eq(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:11-12
    // @arc4.abimethod()
    // def verify_biguintn_uintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:15
    // return arc4.UInt512(a_biguint) == arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_eq(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:17-18
    // @arc4.abimethod()
    // def verify_uintn_biguintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:21
    // return arc4.UInt64(a_biguint) == arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_eq(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:23-24
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:27
    // return arc4.UInt512(a_biguint) == arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b==
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_ne(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:29-30
    // @arc4.abimethod()
    // def verify_uintn_uintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:33
    // return arc4.UInt64(a_biguint) != arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_ne(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:35-36
    // @arc4.abimethod()
    // def verify_biguintn_uintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:39
    // return arc4.UInt512(a_biguint) != arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_ne(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:41-42
    // @arc4.abimethod()
    // def verify_uintn_biguintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:45
    // return arc4.UInt64(a_biguint) != arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_ne(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:47-48
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:51
    // return arc4.UInt512(a_biguint) != arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b!=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_lt(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:53-54
    // @arc4.abimethod()
    // def verify_uintn_uintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:57
    // return arc4.UInt64(a_biguint) < arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_lt(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:59-60
    // @arc4.abimethod()
    // def verify_biguintn_uintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:63
    // return arc4.UInt512(a_biguint) < arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_lt(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:65-66
    // @arc4.abimethod()
    // def verify_uintn_biguintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:69
    // return arc4.UInt64(a_biguint) < arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_lt(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:71-72
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:75
    // return arc4.UInt512(a_biguint) < arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b<
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_le(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:77-78
    // @arc4.abimethod()
    // def verify_uintn_uintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:81
    // return arc4.UInt64(a_biguint) <= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_le(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:83-84
    // @arc4.abimethod()
    // def verify_biguintn_uintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:87
    // return arc4.UInt512(a_biguint) <= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_le(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:89-90
    // @arc4.abimethod()
    // def verify_uintn_biguintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:93
    // return arc4.UInt64(a_biguint) <= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_le(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:95-96
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:99
    // return arc4.UInt512(a_biguint) <= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b<=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_gt(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:101-102
    // @arc4.abimethod()
    // def verify_uintn_uintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:105
    // return arc4.UInt64(a_biguint) > arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_gt(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:107-108
    // @arc4.abimethod()
    // def verify_biguintn_uintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:111
    // return arc4.UInt512(a_biguint) > arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_gt(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:113-114
    // @arc4.abimethod()
    // def verify_uintn_biguintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:117
    // return arc4.UInt64(a_biguint) > arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_gt(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:119-120
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:123
    // return arc4.UInt512(a_biguint) > arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b>
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_ge(a: bytes, b: bytes) -> uint64:
verify_uintn_uintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:125-126
    // @arc4.abimethod()
    // def verify_uintn_uintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:129
    // return arc4.UInt64(a_biguint) >= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_ge(a: bytes, b: bytes) -> uint64:
verify_biguintn_uintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:131-132
    // @arc4.abimethod()
    // def verify_biguintn_uintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:135
    // return arc4.UInt512(a_biguint) >= arc4.UInt64(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_ge(a: bytes, b: bytes) -> uint64:
verify_uintn_biguintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:137-138
    // @arc4.abimethod()
    // def verify_uintn_biguintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:141
    // return arc4.UInt64(a_biguint) >= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 8
    <=
    assert // overflow
    int 8
    bzero
    frame_dig -2
    b|
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_ge(a: bytes, b: bytes) -> uint64:
verify_biguintn_biguintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:143-144
    // @arc4.abimethod()
    // def verify_biguintn_biguintn_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:147
    // return arc4.UInt512(a_biguint) >= arc4.UInt512(b_biguint)
    frame_dig -2
    len
    int 64
    <=
    assert // overflow
    int 64
    bzero
    frame_dig -2
    dig 1
    b|
    swap
    frame_dig -1
    len
    int 64
    <=
    assert // overflow
    frame_dig -1
    b|
    b>=
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_init(a: bytes) -> bytes:
verify_uintn_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:149-150
    // @arc4.abimethod()
    // def verify_uintn_init(self, a: Bytes) -> arc4.UInt32:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:152
    // return arc4.UInt32(a_biguint)
    frame_dig -1
    len
    int 4
    <=
    assert // overflow
    int 4
    bzero
    frame_dig -1
    b|
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_init(a: bytes) -> bytes:
verify_biguintn_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:154-155
    // @arc4.abimethod()
    // def verify_biguintn_init(self, a: Bytes) -> arc4.UInt256:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:157
    // return arc4.UInt256(a_biguint)
    frame_dig -1
    len
    int 32
    <=
    assert // overflow
    int 32
    bzero
    frame_dig -1
    b|
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_from_log(a: bytes) -> bytes:
verify_uintn_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:159-160
    // @arc4.abimethod()
    // def verify_uintn_from_log(self, a: Bytes) -> arc4.UInt32:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:161
    // return arc4.UInt32.from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_from_log(a: bytes) -> bytes:
verify_biguintn_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:163-164
    // @arc4.abimethod()
    // def verify_biguintn_from_log(self, a: Bytes) -> arc4.UInt256:
    proto 1 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:165
    // return arc4.UInt256.from_log(a)
    frame_dig -1
    extract 4 0
    frame_dig -1
    extract 0 4
    byte 0x151f7c75
    ==
    assert // ARC4 prefix is valid
    retsub
