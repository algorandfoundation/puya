{
    "hints": {
        "verify_uint64_init(byte[])uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_add(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_sub(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_mul(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_div(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_mod(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_and(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_or(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_xor(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_not(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_lshift(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_rshift(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_pow(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_eq(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_ne(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_lt(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_le(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_gt(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uint64_ge(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_init(uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_add(byte[],byte[],uint64,uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_eq(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_ne(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_and(byte[],byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_or(byte[],byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_xor(byte[],byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bytes_not(byte[],uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_add(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_sub(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_mul(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_div(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_mod(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_and(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_or(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_xor(uint512,uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_eq(uint512,uint512)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_ne(uint512,uint512)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_lt(uint512,uint512)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_le(uint512,uint512)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_gt(uint512,uint512)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguint_ge(uint512,uint512)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy5hcnRpZmFjdHMuUHJpbWl0aXZlT3BzLmNvbnRyYWN0LlByaW1pdGl2ZU9wc0NvbnRyYWN0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyB0ZXN0cy9hcnRpZmFjdHMvUHJpbWl0aXZlT3BzL2NvbnRyYWN0LnB5OjQKICAgIC8vIGNsYXNzIFByaW1pdGl2ZU9wc0NvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "PrimitiveOpsContract",
        "methods": [
            {
                "name": "verify_uint64_init",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "raw_value"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_add",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_sub",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_mul",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_div",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_mod",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_and",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_or",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_xor",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_not",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_lshift",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_rshift",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_pow",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "verify_uint64_eq",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uint64_ne",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uint64_lt",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uint64_le",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uint64_gt",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uint64_ge",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_bytes_init",
                "args": [
                    {
                        "type": "uint64",
                        "name": "raw_value"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bytes_add",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_a_size"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_b_size"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bytes_eq",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_bytes_ne",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_bytes_and",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bytes_or",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bytes_xor",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bytes_not",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_size"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_biguint_add",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_sub",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_mul",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_div",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_mod",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_and",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_or",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_xor",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "verify_biguint_eq",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguint_ne",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguint_lt",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguint_le",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguint_gt",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguint_ge",
                "args": [
                    {
                        "type": "uint512",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}