#pragma version 10

tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.approval_program:
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@17
    method "verify_uint64_init(byte[])uint64"
    method "verify_uint64_add(uint64,uint64)uint64"
    method "verify_uint64_sub(uint64,uint64)uint64"
    method "verify_uint64_mul(uint64,uint64)uint64"
    method "verify_uint64_div(uint64,uint64)uint64"
    method "verify_uint64_mod(uint64,uint64)uint64"
    method "verify_uint64_and(uint64,uint64)uint64"
    method "verify_uint64_or(uint64,uint64)uint64"
    method "verify_uint64_xor(uint64,uint64)uint64"
    method "verify_uint64_not(uint64)uint64"
    method "verify_uint64_lshift(uint64,uint64)uint64"
    method "verify_uint64_rshift(uint64,uint64)uint64"
    method "verify_uint64_pow(uint64,uint64)uint64"
    txna ApplicationArgs 0
    match main_verify_uint64_init_route@2 main_verify_uint64_add_route@3 main_verify_uint64_sub_route@4 main_verify_uint64_mul_route@5 main_verify_uint64_div_route@6 main_verify_uint64_mod_route@7 main_verify_uint64_and_route@8 main_verify_uint64_or_route@9 main_verify_uint64_xor_route@10 main_verify_uint64_not_route@11 main_verify_uint64_lshift_route@12 main_verify_uint64_rshift_route@13 main_verify_uint64_pow_route@14
    err // reject transaction

main_verify_uint64_init_route@2:
    // tests/artifacts/PrimitiveOps/contract.py:5
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:5
    // @arc4.abimethod()
    callsub verify_uint64_init
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_add_route@3:
    // tests/artifacts/PrimitiveOps/contract.py:9
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:9
    // @arc4.abimethod()
    callsub verify_uint64_add
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_sub_route@4:
    // tests/artifacts/PrimitiveOps/contract.py:13
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:13
    // @arc4.abimethod()
    callsub verify_uint64_sub
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_mul_route@5:
    // tests/artifacts/PrimitiveOps/contract.py:17
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:17
    // @arc4.abimethod()
    callsub verify_uint64_mul
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_div_route@6:
    // tests/artifacts/PrimitiveOps/contract.py:21
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:21
    // @arc4.abimethod()
    callsub verify_uint64_div
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_mod_route@7:
    // tests/artifacts/PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    callsub verify_uint64_mod
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_and_route@8:
    // tests/artifacts/PrimitiveOps/contract.py:29
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:29
    // @arc4.abimethod()
    callsub verify_uint64_and
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_or_route@9:
    // tests/artifacts/PrimitiveOps/contract.py:33
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:33
    // @arc4.abimethod()
    callsub verify_uint64_or
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_xor_route@10:
    // tests/artifacts/PrimitiveOps/contract.py:37
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:37
    // @arc4.abimethod()
    callsub verify_uint64_xor
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_not_route@11:
    // tests/artifacts/PrimitiveOps/contract.py:41
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:41
    // @arc4.abimethod()
    callsub verify_uint64_not
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_lshift_route@12:
    // tests/artifacts/PrimitiveOps/contract.py:45
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:45
    // @arc4.abimethod()
    callsub verify_uint64_lshift
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_rshift_route@13:
    // tests/artifacts/PrimitiveOps/contract.py:49
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:49
    // @arc4.abimethod()
    callsub verify_uint64_rshift
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_pow_route@14:
    // tests/artifacts/PrimitiveOps/contract.py:53
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:53
    // @arc4.abimethod()
    callsub verify_uint64_pow
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_bare_routing@17:
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txn OnCompletion
    !
    assert // reject transaction
    txn ApplicationID
    !
    assert // is creating
    int 1
    return


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_init(raw_value: bytes) -> uint64:
verify_uint64_init:
    // tests/artifacts/PrimitiveOps/contract.py:5-6
    // @arc4.abimethod()
    // def verify_uint64_init(self, raw_value: Bytes) -> UInt64:
    proto 1 1
    // tests/artifacts/PrimitiveOps/contract.py:7
    // return op.btoi(raw_value)
    frame_dig -1
    btoi
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_add(a: uint64, b: uint64) -> uint64:
verify_uint64_add:
    // tests/artifacts/PrimitiveOps/contract.py:9-10
    // @arc4.abimethod()
    // def verify_uint64_add(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:11
    // return a + b
    frame_dig -2
    frame_dig -1
    +
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_sub(a: uint64, b: uint64) -> uint64:
verify_uint64_sub:
    // tests/artifacts/PrimitiveOps/contract.py:13-14
    // @arc4.abimethod()
    // def verify_uint64_sub(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:15
    // return a - b
    frame_dig -2
    frame_dig -1
    -
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_mul(a: uint64, b: uint64) -> uint64:
verify_uint64_mul:
    // tests/artifacts/PrimitiveOps/contract.py:17-18
    // @arc4.abimethod()
    // def verify_uint64_mul(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:19
    // return a * b
    frame_dig -2
    frame_dig -1
    *
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_div(a: uint64, b: uint64) -> uint64:
verify_uint64_div:
    // tests/artifacts/PrimitiveOps/contract.py:21-22
    // @arc4.abimethod()
    // def verify_uint64_div(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:23
    // return a // b
    frame_dig -2
    frame_dig -1
    /
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_mod(a: uint64, b: uint64) -> uint64:
verify_uint64_mod:
    // tests/artifacts/PrimitiveOps/contract.py:25-26
    // @arc4.abimethod()
    // def verify_uint64_mod(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:27
    // return a % b
    frame_dig -2
    frame_dig -1
    %
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_and(a: uint64, b: uint64) -> uint64:
verify_uint64_and:
    // tests/artifacts/PrimitiveOps/contract.py:29-30
    // @arc4.abimethod()
    // def verify_uint64_and(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:31
    // return a & b
    frame_dig -2
    frame_dig -1
    &
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_or(a: uint64, b: uint64) -> uint64:
verify_uint64_or:
    // tests/artifacts/PrimitiveOps/contract.py:33-34
    // @arc4.abimethod()
    // def verify_uint64_or(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:35
    // return a | b
    frame_dig -2
    frame_dig -1
    |
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_xor(a: uint64, b: uint64) -> uint64:
verify_uint64_xor:
    // tests/artifacts/PrimitiveOps/contract.py:37-38
    // @arc4.abimethod()
    // def verify_uint64_xor(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:39
    // return a ^ b
    frame_dig -2
    frame_dig -1
    ^
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_not(a: uint64) -> uint64:
verify_uint64_not:
    // tests/artifacts/PrimitiveOps/contract.py:41-42
    // @arc4.abimethod()
    // def verify_uint64_not(self, a: UInt64) -> UInt64:
    proto 1 1
    // tests/artifacts/PrimitiveOps/contract.py:43
    // return ~a
    frame_dig -1
    ~
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_lshift(a: uint64, b: uint64) -> uint64:
verify_uint64_lshift:
    // tests/artifacts/PrimitiveOps/contract.py:45-46
    // @arc4.abimethod()
    // def verify_uint64_lshift(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:47
    // return a << b
    frame_dig -2
    frame_dig -1
    shl
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_rshift(a: uint64, b: uint64) -> uint64:
verify_uint64_rshift:
    // tests/artifacts/PrimitiveOps/contract.py:49-50
    // @arc4.abimethod()
    // def verify_uint64_rshift(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:51
    // return a >> b
    frame_dig -2
    frame_dig -1
    shr
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_pow(a: uint64, b: uint64) -> uint64:
verify_uint64_pow:
    // tests/artifacts/PrimitiveOps/contract.py:53-54
    // @arc4.abimethod()
    // def verify_uint64_pow(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:55
    // return a**b
    frame_dig -2
    frame_dig -1
    exp
    retsub
