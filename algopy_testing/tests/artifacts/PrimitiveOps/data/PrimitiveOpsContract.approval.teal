#pragma version 10

tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.approval_program:
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@63
    method "verify_uint64_init(byte[])uint64"
    method "verify_uint64_add(uint64,uint64)uint64"
    method "verify_uint64_sub(uint64,uint64)uint64"
    method "verify_uint64_mul(uint64,uint64)uint64"
    method "verify_uint64_div(uint64,uint64)uint64"
    method "verify_uint64_mod(uint64,uint64)uint64"
    method "verify_uint64_and(uint64,uint64)uint64"
    method "verify_uint64_or(uint64,uint64)uint64"
    method "verify_uint64_xor(uint64,uint64)uint64"
    method "verify_uint64_not(uint64)uint64"
    method "verify_uint64_lshift(uint64,uint64)uint64"
    method "verify_uint64_rshift(uint64,uint64)uint64"
    method "verify_uint64_pow(uint64,uint64)uint64"
    method "verify_uint64_eq(uint64,uint64)bool"
    method "verify_uint64_ne(uint64,uint64)bool"
    method "verify_uint64_lt(uint64,uint64)bool"
    method "verify_uint64_le(uint64,uint64)bool"
    method "verify_uint64_gt(uint64,uint64)bool"
    method "verify_uint64_ge(uint64,uint64)bool"
    method "verify_bytes_init(uint64)byte[]"
    method "verify_bytes_add(byte[],byte[],uint64,uint64)byte[]"
    method "verify_bytes_eq(byte[],byte[])bool"
    method "verify_bytes_ne(byte[],byte[])bool"
    method "verify_bytes_and(byte[],byte[])byte[]"
    method "verify_bytes_or(byte[],byte[])byte[]"
    method "verify_bytes_xor(byte[],byte[])byte[]"
    method "verify_bytes_not(byte[],uint64)byte[]"
    method "verify_biguint_add(byte[],byte[])byte[]"
    method "verify_biguint_add_uint64(byte[],uint64)byte[]"
    method "verify_biguint_sub(byte[],byte[])byte[]"
    method "verify_biguint_sub_uint64(byte[],uint64)byte[]"
    method "verify_biguint_mul(byte[],byte[])byte[]"
    method "verify_biguint_mul_uint64(byte[],uint64)byte[]"
    method "verify_biguint_div(byte[],byte[])byte[]"
    method "verify_biguint_div_uint64(byte[],uint64)byte[]"
    method "verify_biguint_mod(byte[],byte[])byte[]"
    method "verify_biguint_mod_uint64(byte[],uint64)byte[]"
    method "verify_biguint_and(byte[],byte[])byte[]"
    method "verify_biguint_and_uint64(byte[],uint64)byte[]"
    method "verify_biguint_or(byte[],byte[])byte[]"
    method "verify_biguint_or_uint64(byte[],uint64)byte[]"
    method "verify_biguint_xor(byte[],byte[])byte[]"
    method "verify_biguint_xor_uint64(byte[],uint64)byte[]"
    method "verify_biguint_eq(byte[],byte[])bool"
    method "verify_biguint_eq_uint64(byte[],uint64)bool"
    method "verify_biguint_ne(byte[],byte[])bool"
    method "verify_biguint_ne_uint64(byte[],uint64)bool"
    method "verify_biguint_lt(byte[],byte[])bool"
    method "verify_biguint_lt_uint64(byte[],uint64)bool"
    method "verify_biguint_le(byte[],byte[])bool"
    method "verify_biguint_le_uint64(byte[],uint64)bool"
    method "verify_biguint_gt(byte[],byte[])bool"
    method "verify_biguint_gt_uint64(byte[],uint64)bool"
    method "verify_biguint_ge(byte[],byte[])bool"
    method "verify_biguint_ge_uint64(byte[],uint64)bool"
    method "verify_string_init(string)string"
    method "verify_string_startswith(string,string)bool"
    method "verify_string_endswith(string,string)bool"
    method "verify_string_join(string,string)string"
    txna ApplicationArgs 0
    match main_verify_uint64_init_route@2 main_verify_uint64_add_route@3 main_verify_uint64_sub_route@4 main_verify_uint64_mul_route@5 main_verify_uint64_div_route@6 main_verify_uint64_mod_route@7 main_verify_uint64_and_route@8 main_verify_uint64_or_route@9 main_verify_uint64_xor_route@10 main_verify_uint64_not_route@11 main_verify_uint64_lshift_route@12 main_verify_uint64_rshift_route@13 main_verify_uint64_pow_route@14 main_verify_uint64_eq_route@15 main_verify_uint64_ne_route@16 main_verify_uint64_lt_route@17 main_verify_uint64_le_route@18 main_verify_uint64_gt_route@19 main_verify_uint64_ge_route@20 main_verify_bytes_init_route@21 main_verify_bytes_add_route@22 main_verify_bytes_eq_route@23 main_verify_bytes_ne_route@24 main_verify_bytes_and_route@25 main_verify_bytes_or_route@26 main_verify_bytes_xor_route@27 main_verify_bytes_not_route@28 main_verify_biguint_add_route@29 main_verify_biguint_add_uint64_route@30 main_verify_biguint_sub_route@31 main_verify_biguint_sub_uint64_route@32 main_verify_biguint_mul_route@33 main_verify_biguint_mul_uint64_route@34 main_verify_biguint_div_route@35 main_verify_biguint_div_uint64_route@36 main_verify_biguint_mod_route@37 main_verify_biguint_mod_uint64_route@38 main_verify_biguint_and_route@39 main_verify_biguint_and_uint64_route@40 main_verify_biguint_or_route@41 main_verify_biguint_or_uint64_route@42 main_verify_biguint_xor_route@43 main_verify_biguint_xor_uint64_route@44 main_verify_biguint_eq_route@45 main_verify_biguint_eq_uint64_route@46 main_verify_biguint_ne_route@47 main_verify_biguint_ne_uint64_route@48 main_verify_biguint_lt_route@49 main_verify_biguint_lt_uint64_route@50 main_verify_biguint_le_route@51 main_verify_biguint_le_uint64_route@52 main_verify_biguint_gt_route@53 main_verify_biguint_gt_uint64_route@54 main_verify_biguint_ge_route@55 main_verify_biguint_ge_uint64_route@56 main_verify_string_init_route@57 main_verify_string_startswith_route@58 main_verify_string_endswith_route@59 main_verify_string_join_route@60
    err // reject transaction

main_verify_uint64_init_route@2:
    // tests/artifacts/PrimitiveOps/contract.py:5
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:5
    // @arc4.abimethod()
    callsub verify_uint64_init
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_add_route@3:
    // tests/artifacts/PrimitiveOps/contract.py:10
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:10
    // @arc4.abimethod()
    callsub verify_uint64_add
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_sub_route@4:
    // tests/artifacts/PrimitiveOps/contract.py:15
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:15
    // @arc4.abimethod()
    callsub verify_uint64_sub
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_mul_route@5:
    // tests/artifacts/PrimitiveOps/contract.py:20
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:20
    // @arc4.abimethod()
    callsub verify_uint64_mul
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_div_route@6:
    // tests/artifacts/PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    callsub verify_uint64_div
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_mod_route@7:
    // tests/artifacts/PrimitiveOps/contract.py:30
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:30
    // @arc4.abimethod()
    callsub verify_uint64_mod
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_and_route@8:
    // tests/artifacts/PrimitiveOps/contract.py:35
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:35
    // @arc4.abimethod()
    callsub verify_uint64_and
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_or_route@9:
    // tests/artifacts/PrimitiveOps/contract.py:40
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:40
    // @arc4.abimethod()
    callsub verify_uint64_or
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_xor_route@10:
    // tests/artifacts/PrimitiveOps/contract.py:45
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:45
    // @arc4.abimethod()
    callsub verify_uint64_xor
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_not_route@11:
    // tests/artifacts/PrimitiveOps/contract.py:50
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:50
    // @arc4.abimethod()
    callsub verify_uint64_not
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_lshift_route@12:
    // tests/artifacts/PrimitiveOps/contract.py:55
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:55
    // @arc4.abimethod()
    callsub verify_uint64_lshift
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_rshift_route@13:
    // tests/artifacts/PrimitiveOps/contract.py:60
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:60
    // @arc4.abimethod()
    callsub verify_uint64_rshift
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_pow_route@14:
    // tests/artifacts/PrimitiveOps/contract.py:65
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:65
    // @arc4.abimethod()
    callsub verify_uint64_pow
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_eq_route@15:
    // tests/artifacts/PrimitiveOps/contract.py:70
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:70
    // @arc4.abimethod()
    callsub verify_uint64_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_ne_route@16:
    // tests/artifacts/PrimitiveOps/contract.py:75
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:75
    // @arc4.abimethod()
    callsub verify_uint64_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_lt_route@17:
    // tests/artifacts/PrimitiveOps/contract.py:80
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:80
    // @arc4.abimethod()
    callsub verify_uint64_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_le_route@18:
    // tests/artifacts/PrimitiveOps/contract.py:85
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:85
    // @arc4.abimethod()
    callsub verify_uint64_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_gt_route@19:
    // tests/artifacts/PrimitiveOps/contract.py:90
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:90
    // @arc4.abimethod()
    callsub verify_uint64_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_uint64_ge_route@20:
    // tests/artifacts/PrimitiveOps/contract.py:95
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:95
    // @arc4.abimethod()
    callsub verify_uint64_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_init_route@21:
    // tests/artifacts/PrimitiveOps/contract.py:100
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:100
    // @arc4.abimethod()
    callsub verify_bytes_init
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_add_route@22:
    // tests/artifacts/PrimitiveOps/contract.py:105
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    btoi
    txna ApplicationArgs 4
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:105
    // @arc4.abimethod()
    callsub verify_bytes_add
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_eq_route@23:
    // tests/artifacts/PrimitiveOps/contract.py:115
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:115
    // @arc4.abimethod()
    callsub verify_bytes_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_ne_route@24:
    // tests/artifacts/PrimitiveOps/contract.py:120
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:120
    // @arc4.abimethod()
    callsub verify_bytes_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_and_route@25:
    // tests/artifacts/PrimitiveOps/contract.py:125
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:125
    // @arc4.abimethod()
    callsub verify_bytes_and
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_or_route@26:
    // tests/artifacts/PrimitiveOps/contract.py:130
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:130
    // @arc4.abimethod()
    callsub verify_bytes_or
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_xor_route@27:
    // tests/artifacts/PrimitiveOps/contract.py:135
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:135
    // @arc4.abimethod()
    callsub verify_bytes_xor
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_bytes_not_route@28:
    // tests/artifacts/PrimitiveOps/contract.py:140
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:140
    // @arc4.abimethod()
    callsub verify_bytes_not
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_add_route@29:
    // tests/artifacts/PrimitiveOps/contract.py:147
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:147
    // @arc4.abimethod()
    callsub verify_biguint_add
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_add_uint64_route@30:
    // tests/artifacts/PrimitiveOps/contract.py:154
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:154
    // @arc4.abimethod()
    callsub verify_biguint_add_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_sub_route@31:
    // tests/artifacts/PrimitiveOps/contract.py:160
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:160
    // @arc4.abimethod()
    callsub verify_biguint_sub
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_sub_uint64_route@32:
    // tests/artifacts/PrimitiveOps/contract.py:167
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:167
    // @arc4.abimethod()
    callsub verify_biguint_sub_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_mul_route@33:
    // tests/artifacts/PrimitiveOps/contract.py:173
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:173
    // @arc4.abimethod()
    callsub verify_biguint_mul
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_mul_uint64_route@34:
    // tests/artifacts/PrimitiveOps/contract.py:180
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:180
    // @arc4.abimethod()
    callsub verify_biguint_mul_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_div_route@35:
    // tests/artifacts/PrimitiveOps/contract.py:186
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:186
    // @arc4.abimethod()
    callsub verify_biguint_div
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_div_uint64_route@36:
    // tests/artifacts/PrimitiveOps/contract.py:193
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:193
    // @arc4.abimethod()
    callsub verify_biguint_div_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_mod_route@37:
    // tests/artifacts/PrimitiveOps/contract.py:199
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:199
    // @arc4.abimethod()
    callsub verify_biguint_mod
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_mod_uint64_route@38:
    // tests/artifacts/PrimitiveOps/contract.py:206
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:206
    // @arc4.abimethod()
    callsub verify_biguint_mod_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_and_route@39:
    // tests/artifacts/PrimitiveOps/contract.py:212
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:212
    // @arc4.abimethod()
    callsub verify_biguint_and
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_and_uint64_route@40:
    // tests/artifacts/PrimitiveOps/contract.py:219
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:219
    // @arc4.abimethod()
    callsub verify_biguint_and_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_or_route@41:
    // tests/artifacts/PrimitiveOps/contract.py:225
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:225
    // @arc4.abimethod()
    callsub verify_biguint_or
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_or_uint64_route@42:
    // tests/artifacts/PrimitiveOps/contract.py:232
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:232
    // @arc4.abimethod()
    callsub verify_biguint_or_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_xor_route@43:
    // tests/artifacts/PrimitiveOps/contract.py:238
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:238
    // @arc4.abimethod()
    callsub verify_biguint_xor
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_xor_uint64_route@44:
    // tests/artifacts/PrimitiveOps/contract.py:245
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:245
    // @arc4.abimethod()
    callsub verify_biguint_xor_uint64
    dup
    len
    itob
    substring 6 8
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_eq_route@45:
    // tests/artifacts/PrimitiveOps/contract.py:251
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:251
    // @arc4.abimethod()
    callsub verify_biguint_eq
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_eq_uint64_route@46:
    // tests/artifacts/PrimitiveOps/contract.py:258
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:258
    // @arc4.abimethod()
    callsub verify_biguint_eq_uint64
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_ne_route@47:
    // tests/artifacts/PrimitiveOps/contract.py:264
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:264
    // @arc4.abimethod()
    callsub verify_biguint_ne
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_ne_uint64_route@48:
    // tests/artifacts/PrimitiveOps/contract.py:271
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:271
    // @arc4.abimethod()
    callsub verify_biguint_ne_uint64
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_lt_route@49:
    // tests/artifacts/PrimitiveOps/contract.py:277
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:277
    // @arc4.abimethod()
    callsub verify_biguint_lt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_lt_uint64_route@50:
    // tests/artifacts/PrimitiveOps/contract.py:284
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:284
    // @arc4.abimethod()
    callsub verify_biguint_lt_uint64
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_le_route@51:
    // tests/artifacts/PrimitiveOps/contract.py:290
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:290
    // @arc4.abimethod()
    callsub verify_biguint_le
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_le_uint64_route@52:
    // tests/artifacts/PrimitiveOps/contract.py:297
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:297
    // @arc4.abimethod()
    callsub verify_biguint_le_uint64
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_gt_route@53:
    // tests/artifacts/PrimitiveOps/contract.py:303
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:303
    // @arc4.abimethod()
    callsub verify_biguint_gt
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_gt_uint64_route@54:
    // tests/artifacts/PrimitiveOps/contract.py:310
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:310
    // @arc4.abimethod()
    callsub verify_biguint_gt_uint64
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_ge_route@55:
    // tests/artifacts/PrimitiveOps/contract.py:316
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:316
    // @arc4.abimethod()
    callsub verify_biguint_ge
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_biguint_ge_uint64_route@56:
    // tests/artifacts/PrimitiveOps/contract.py:323
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:323
    // @arc4.abimethod()
    callsub verify_biguint_ge_uint64
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_init_route@57:
    // tests/artifacts/PrimitiveOps/contract.py:329
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:329
    // @arc4.abimethod
    callsub verify_string_init
    dup
    len
    itob
    extract 6 2
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_startswith_route@58:
    // tests/artifacts/PrimitiveOps/contract.py:334
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:334
    // @arc4.abimethod
    callsub verify_string_startswith
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_endswith_route@59:
    // tests/artifacts/PrimitiveOps/contract.py:339
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:339
    // @arc4.abimethod
    callsub verify_string_endswith
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_verify_string_join_route@60:
    // tests/artifacts/PrimitiveOps/contract.py:344
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/PrimitiveOps/contract.py:344
    // @arc4.abimethod
    callsub verify_string_join
    dup
    len
    itob
    extract 6 2
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    return

main_bare_routing@63:
    // tests/artifacts/PrimitiveOps/contract.py:4
    // class PrimitiveOpsContract(ARC4Contract):
    txn OnCompletion
    !
    assert // reject transaction
    txn ApplicationID
    !
    assert // is creating
    int 1
    return


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_init(raw_value: bytes) -> uint64:
verify_uint64_init:
    // tests/artifacts/PrimitiveOps/contract.py:5-6
    // @arc4.abimethod()
    // def verify_uint64_init(self, raw_value: Bytes) -> UInt64:
    proto 1 1
    // tests/artifacts/PrimitiveOps/contract.py:7
    // result = op.btoi(raw_value)
    frame_dig -1
    btoi
    // tests/artifacts/PrimitiveOps/contract.py:8
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_add(a: uint64, b: uint64) -> uint64:
verify_uint64_add:
    // tests/artifacts/PrimitiveOps/contract.py:10-11
    // @arc4.abimethod()
    // def verify_uint64_add(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:12
    // result = a + b
    frame_dig -2
    frame_dig -1
    +
    // tests/artifacts/PrimitiveOps/contract.py:13
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_sub(a: uint64, b: uint64) -> uint64:
verify_uint64_sub:
    // tests/artifacts/PrimitiveOps/contract.py:15-16
    // @arc4.abimethod()
    // def verify_uint64_sub(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:17
    // result = a - b
    frame_dig -2
    frame_dig -1
    -
    // tests/artifacts/PrimitiveOps/contract.py:18
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_mul(a: uint64, b: uint64) -> uint64:
verify_uint64_mul:
    // tests/artifacts/PrimitiveOps/contract.py:20-21
    // @arc4.abimethod()
    // def verify_uint64_mul(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:22
    // result = a * b
    frame_dig -2
    frame_dig -1
    *
    // tests/artifacts/PrimitiveOps/contract.py:23
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_div(a: uint64, b: uint64) -> uint64:
verify_uint64_div:
    // tests/artifacts/PrimitiveOps/contract.py:25-26
    // @arc4.abimethod()
    // def verify_uint64_div(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:27
    // result = a // b
    frame_dig -2
    frame_dig -1
    /
    // tests/artifacts/PrimitiveOps/contract.py:28
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_mod(a: uint64, b: uint64) -> uint64:
verify_uint64_mod:
    // tests/artifacts/PrimitiveOps/contract.py:30-31
    // @arc4.abimethod()
    // def verify_uint64_mod(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:32
    // result = a % b
    frame_dig -2
    frame_dig -1
    %
    // tests/artifacts/PrimitiveOps/contract.py:33
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_and(a: uint64, b: uint64) -> uint64:
verify_uint64_and:
    // tests/artifacts/PrimitiveOps/contract.py:35-36
    // @arc4.abimethod()
    // def verify_uint64_and(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:37
    // result = a & b
    frame_dig -2
    frame_dig -1
    &
    // tests/artifacts/PrimitiveOps/contract.py:38
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_or(a: uint64, b: uint64) -> uint64:
verify_uint64_or:
    // tests/artifacts/PrimitiveOps/contract.py:40-41
    // @arc4.abimethod()
    // def verify_uint64_or(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:42
    // result = a | b
    frame_dig -2
    frame_dig -1
    |
    // tests/artifacts/PrimitiveOps/contract.py:43
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_xor(a: uint64, b: uint64) -> uint64:
verify_uint64_xor:
    // tests/artifacts/PrimitiveOps/contract.py:45-46
    // @arc4.abimethod()
    // def verify_uint64_xor(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:47
    // result = a ^ b
    frame_dig -2
    frame_dig -1
    ^
    // tests/artifacts/PrimitiveOps/contract.py:48
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_not(a: uint64) -> uint64:
verify_uint64_not:
    // tests/artifacts/PrimitiveOps/contract.py:50-51
    // @arc4.abimethod()
    // def verify_uint64_not(self, a: UInt64) -> UInt64:
    proto 1 1
    // tests/artifacts/PrimitiveOps/contract.py:52
    // result = ~a
    frame_dig -1
    ~
    // tests/artifacts/PrimitiveOps/contract.py:53
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_lshift(a: uint64, b: uint64) -> uint64:
verify_uint64_lshift:
    // tests/artifacts/PrimitiveOps/contract.py:55-56
    // @arc4.abimethod()
    // def verify_uint64_lshift(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:57
    // result = a << b
    frame_dig -2
    frame_dig -1
    shl
    // tests/artifacts/PrimitiveOps/contract.py:58
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_rshift(a: uint64, b: uint64) -> uint64:
verify_uint64_rshift:
    // tests/artifacts/PrimitiveOps/contract.py:60-61
    // @arc4.abimethod()
    // def verify_uint64_rshift(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:62
    // result = a >> b
    frame_dig -2
    frame_dig -1
    shr
    // tests/artifacts/PrimitiveOps/contract.py:63
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_pow(a: uint64, b: uint64) -> uint64:
verify_uint64_pow:
    // tests/artifacts/PrimitiveOps/contract.py:65-66
    // @arc4.abimethod()
    // def verify_uint64_pow(self, a: UInt64, b: UInt64) -> UInt64:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:67
    // result = a**b
    frame_dig -2
    frame_dig -1
    exp
    // tests/artifacts/PrimitiveOps/contract.py:68
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_eq(a: uint64, b: uint64) -> uint64:
verify_uint64_eq:
    // tests/artifacts/PrimitiveOps/contract.py:70-71
    // @arc4.abimethod()
    // def verify_uint64_eq(self, a: UInt64, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:72
    // result = a == b
    frame_dig -2
    frame_dig -1
    ==
    // tests/artifacts/PrimitiveOps/contract.py:73
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_ne(a: uint64, b: uint64) -> uint64:
verify_uint64_ne:
    // tests/artifacts/PrimitiveOps/contract.py:75-76
    // @arc4.abimethod()
    // def verify_uint64_ne(self, a: UInt64, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:77
    // result = a != b
    frame_dig -2
    frame_dig -1
    !=
    // tests/artifacts/PrimitiveOps/contract.py:78
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_lt(a: uint64, b: uint64) -> uint64:
verify_uint64_lt:
    // tests/artifacts/PrimitiveOps/contract.py:80-81
    // @arc4.abimethod()
    // def verify_uint64_lt(self, a: UInt64, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:82
    // result = a < b
    frame_dig -2
    frame_dig -1
    <
    // tests/artifacts/PrimitiveOps/contract.py:83
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_le(a: uint64, b: uint64) -> uint64:
verify_uint64_le:
    // tests/artifacts/PrimitiveOps/contract.py:85-86
    // @arc4.abimethod()
    // def verify_uint64_le(self, a: UInt64, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:87
    // result = a <= b
    frame_dig -2
    frame_dig -1
    <=
    // tests/artifacts/PrimitiveOps/contract.py:88
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_gt(a: uint64, b: uint64) -> uint64:
verify_uint64_gt:
    // tests/artifacts/PrimitiveOps/contract.py:90-91
    // @arc4.abimethod()
    // def verify_uint64_gt(self, a: UInt64, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:92
    // result = a > b
    frame_dig -2
    frame_dig -1
    >
    // tests/artifacts/PrimitiveOps/contract.py:93
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_uint64_ge(a: uint64, b: uint64) -> uint64:
verify_uint64_ge:
    // tests/artifacts/PrimitiveOps/contract.py:95-96
    // @arc4.abimethod()
    // def verify_uint64_ge(self, a: UInt64, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:97
    // result = a >= b
    frame_dig -2
    frame_dig -1
    >=
    // tests/artifacts/PrimitiveOps/contract.py:98
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_init(raw_value: uint64) -> bytes:
verify_bytes_init:
    // tests/artifacts/PrimitiveOps/contract.py:100-101
    // @arc4.abimethod()
    // def verify_bytes_init(self, raw_value: UInt64) -> Bytes:
    proto 1 1
    // tests/artifacts/PrimitiveOps/contract.py:102
    // result = op.itob(raw_value)
    frame_dig -1
    itob
    // tests/artifacts/PrimitiveOps/contract.py:103
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_add(a: bytes, b: bytes, pad_a_size: uint64, pad_b_size: uint64) -> bytes:
verify_bytes_add:
    // tests/artifacts/PrimitiveOps/contract.py:105-108
    // @arc4.abimethod()
    // def verify_bytes_add(
    //     self, a: Bytes, b: Bytes, pad_a_size: UInt64, pad_b_size: UInt64
    // ) -> Bytes:
    proto 4 1
    // tests/artifacts/PrimitiveOps/contract.py:109
    // a = op.bzero(pad_a_size) + a
    frame_dig -2
    bzero
    frame_dig -4
    concat
    frame_bury -4
    // tests/artifacts/PrimitiveOps/contract.py:110
    // b = op.bzero(pad_b_size) + b
    frame_dig -1
    bzero
    frame_dig -3
    concat
    frame_bury -3
    // tests/artifacts/PrimitiveOps/contract.py:111
    // result = a + b
    frame_dig -4
    frame_dig -3
    concat
    // tests/artifacts/PrimitiveOps/contract.py:112
    // result = op.sha256(result)
    sha256
    // tests/artifacts/PrimitiveOps/contract.py:113
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_eq(a: bytes, b: bytes) -> uint64:
verify_bytes_eq:
    // tests/artifacts/PrimitiveOps/contract.py:115-116
    // @arc4.abimethod()
    // def verify_bytes_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:117
    // result = a == b
    frame_dig -2
    frame_dig -1
    ==
    // tests/artifacts/PrimitiveOps/contract.py:118
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_ne(a: bytes, b: bytes) -> uint64:
verify_bytes_ne:
    // tests/artifacts/PrimitiveOps/contract.py:120-121
    // @arc4.abimethod()
    // def verify_bytes_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:122
    // result = a != b
    frame_dig -2
    frame_dig -1
    !=
    // tests/artifacts/PrimitiveOps/contract.py:123
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_and(a: bytes, b: bytes) -> bytes:
verify_bytes_and:
    // tests/artifacts/PrimitiveOps/contract.py:125-126
    // @arc4.abimethod()
    // def verify_bytes_and(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:127
    // result = a & b
    frame_dig -2
    frame_dig -1
    b&
    // tests/artifacts/PrimitiveOps/contract.py:128
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_or(a: bytes, b: bytes) -> bytes:
verify_bytes_or:
    // tests/artifacts/PrimitiveOps/contract.py:130-131
    // @arc4.abimethod()
    // def verify_bytes_or(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:132
    // result = a | b
    frame_dig -2
    frame_dig -1
    b|
    // tests/artifacts/PrimitiveOps/contract.py:133
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_xor(a: bytes, b: bytes) -> bytes:
verify_bytes_xor:
    // tests/artifacts/PrimitiveOps/contract.py:135-136
    // @arc4.abimethod()
    // def verify_bytes_xor(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:137
    // result = a ^ b
    frame_dig -2
    frame_dig -1
    b^
    // tests/artifacts/PrimitiveOps/contract.py:138
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_bytes_not(a: bytes, pad_size: uint64) -> bytes:
verify_bytes_not:
    // tests/artifacts/PrimitiveOps/contract.py:140-141
    // @arc4.abimethod()
    // def verify_bytes_not(self, a: Bytes, pad_size: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:142
    // a = op.bzero(pad_size) + a
    frame_dig -1
    bzero
    frame_dig -2
    concat
    dup
    frame_bury -2
    // tests/artifacts/PrimitiveOps/contract.py:143
    // result = ~a
    b~
    // tests/artifacts/PrimitiveOps/contract.py:144
    // result = op.sha256(result)
    sha256
    // tests/artifacts/PrimitiveOps/contract.py:145
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_add(a: bytes, b: bytes) -> bytes:
verify_biguint_add:
    // tests/artifacts/PrimitiveOps/contract.py:147-148
    // @arc4.abimethod()
    // def verify_biguint_add(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:151
    // result = a_biguint + b_biguint
    frame_dig -2
    frame_dig -1
    b+
    // tests/artifacts/PrimitiveOps/contract.py:152
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_add_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_add_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:154-155
    // @arc4.abimethod()
    // def verify_biguint_add_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:157
    // result = a_biguint + b
    frame_dig -1
    itob
    frame_dig -2
    b+
    // tests/artifacts/PrimitiveOps/contract.py:158
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_sub(a: bytes, b: bytes) -> bytes:
verify_biguint_sub:
    // tests/artifacts/PrimitiveOps/contract.py:160-161
    // @arc4.abimethod()
    // def verify_biguint_sub(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:164
    // result = a_biguint - b_biguint
    frame_dig -2
    frame_dig -1
    b-
    // tests/artifacts/PrimitiveOps/contract.py:165
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_sub_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_sub_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:167-168
    // @arc4.abimethod()
    // def verify_biguint_sub_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:170
    // result = a_biguint - b
    frame_dig -1
    itob
    frame_dig -2
    swap
    b-
    // tests/artifacts/PrimitiveOps/contract.py:171
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_mul(a: bytes, b: bytes) -> bytes:
verify_biguint_mul:
    // tests/artifacts/PrimitiveOps/contract.py:173-174
    // @arc4.abimethod()
    // def verify_biguint_mul(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:177
    // result = a_biguint * b_biguint
    frame_dig -2
    frame_dig -1
    b*
    // tests/artifacts/PrimitiveOps/contract.py:178
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_mul_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_mul_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:180-181
    // @arc4.abimethod()
    // def verify_biguint_mul_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:183
    // result = a_biguint * b
    frame_dig -1
    itob
    frame_dig -2
    b*
    // tests/artifacts/PrimitiveOps/contract.py:184
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_div(a: bytes, b: bytes) -> bytes:
verify_biguint_div:
    // tests/artifacts/PrimitiveOps/contract.py:186-187
    // @arc4.abimethod()
    // def verify_biguint_div(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:190
    // result = a_biguint // b_biguint
    frame_dig -2
    frame_dig -1
    b/
    // tests/artifacts/PrimitiveOps/contract.py:191
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_div_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_div_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:193-194
    // @arc4.abimethod()
    // def verify_biguint_div_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:196
    // result = a_biguint // b
    frame_dig -1
    itob
    frame_dig -2
    swap
    b/
    // tests/artifacts/PrimitiveOps/contract.py:197
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_mod(a: bytes, b: bytes) -> bytes:
verify_biguint_mod:
    // tests/artifacts/PrimitiveOps/contract.py:199-200
    // @arc4.abimethod()
    // def verify_biguint_mod(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:203
    // result = a_biguint % b_biguint
    frame_dig -2
    frame_dig -1
    b%
    // tests/artifacts/PrimitiveOps/contract.py:204
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_mod_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_mod_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:206-207
    // @arc4.abimethod()
    // def verify_biguint_mod_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:209
    // result = a_biguint % b
    frame_dig -1
    itob
    frame_dig -2
    swap
    b%
    // tests/artifacts/PrimitiveOps/contract.py:210
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_and(a: bytes, b: bytes) -> bytes:
verify_biguint_and:
    // tests/artifacts/PrimitiveOps/contract.py:212-213
    // @arc4.abimethod()
    // def verify_biguint_and(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:216
    // result = a_biguint & b_biguint
    frame_dig -2
    frame_dig -1
    b&
    // tests/artifacts/PrimitiveOps/contract.py:217
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_and_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_and_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:219-220
    // @arc4.abimethod()
    // def verify_biguint_and_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:222
    // result = a_biguint & b
    frame_dig -1
    itob
    frame_dig -2
    b&
    // tests/artifacts/PrimitiveOps/contract.py:223
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_or(a: bytes, b: bytes) -> bytes:
verify_biguint_or:
    // tests/artifacts/PrimitiveOps/contract.py:225-226
    // @arc4.abimethod()
    // def verify_biguint_or(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:229
    // result = a_biguint | b_biguint
    frame_dig -2
    frame_dig -1
    b|
    // tests/artifacts/PrimitiveOps/contract.py:230
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_or_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_or_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:232-233
    // @arc4.abimethod()
    // def verify_biguint_or_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:235
    // result = a_biguint | b
    frame_dig -1
    itob
    frame_dig -2
    b|
    // tests/artifacts/PrimitiveOps/contract.py:236
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_xor(a: bytes, b: bytes) -> bytes:
verify_biguint_xor:
    // tests/artifacts/PrimitiveOps/contract.py:238-239
    // @arc4.abimethod()
    // def verify_biguint_xor(self, a: Bytes, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:242
    // result = a_biguint ^ b_biguint
    frame_dig -2
    frame_dig -1
    b^
    // tests/artifacts/PrimitiveOps/contract.py:243
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_xor_uint64(a: bytes, b: uint64) -> bytes:
verify_biguint_xor_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:245-246
    // @arc4.abimethod()
    // def verify_biguint_xor_uint64(self, a: Bytes, b: UInt64) -> Bytes:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:248
    // result = a_biguint ^ b
    frame_dig -1
    itob
    frame_dig -2
    b^
    // tests/artifacts/PrimitiveOps/contract.py:249
    // return result.bytes
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_eq(a: bytes, b: bytes) -> uint64:
verify_biguint_eq:
    // tests/artifacts/PrimitiveOps/contract.py:251-252
    // @arc4.abimethod()
    // def verify_biguint_eq(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:255
    // result = a_biguint == b_biguint
    frame_dig -2
    frame_dig -1
    b==
    // tests/artifacts/PrimitiveOps/contract.py:256
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_eq_uint64(a: bytes, b: uint64) -> uint64:
verify_biguint_eq_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:258-259
    // @arc4.abimethod()
    // def verify_biguint_eq_uint64(self, a: Bytes, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:261
    // result = a_biguint == b
    frame_dig -1
    itob
    frame_dig -2
    b==
    // tests/artifacts/PrimitiveOps/contract.py:262
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_ne(a: bytes, b: bytes) -> uint64:
verify_biguint_ne:
    // tests/artifacts/PrimitiveOps/contract.py:264-265
    // @arc4.abimethod()
    // def verify_biguint_ne(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:268
    // result = a_biguint != b_biguint
    frame_dig -2
    frame_dig -1
    b!=
    // tests/artifacts/PrimitiveOps/contract.py:269
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_ne_uint64(a: bytes, b: uint64) -> uint64:
verify_biguint_ne_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:271-272
    // @arc4.abimethod()
    // def verify_biguint_ne_uint64(self, a: Bytes, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:274
    // result = a_biguint != b
    frame_dig -1
    itob
    frame_dig -2
    b!=
    // tests/artifacts/PrimitiveOps/contract.py:275
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_lt(a: bytes, b: bytes) -> uint64:
verify_biguint_lt:
    // tests/artifacts/PrimitiveOps/contract.py:277-278
    // @arc4.abimethod()
    // def verify_biguint_lt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:281
    // result = a_biguint < b_biguint
    frame_dig -2
    frame_dig -1
    b<
    // tests/artifacts/PrimitiveOps/contract.py:282
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_lt_uint64(a: bytes, b: uint64) -> uint64:
verify_biguint_lt_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:284-285
    // @arc4.abimethod()
    // def verify_biguint_lt_uint64(self, a: Bytes, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:287
    // result = a_biguint < b
    frame_dig -1
    itob
    frame_dig -2
    b>
    // tests/artifacts/PrimitiveOps/contract.py:288
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_le(a: bytes, b: bytes) -> uint64:
verify_biguint_le:
    // tests/artifacts/PrimitiveOps/contract.py:290-291
    // @arc4.abimethod()
    // def verify_biguint_le(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:294
    // result = a_biguint <= b_biguint
    frame_dig -2
    frame_dig -1
    b<=
    // tests/artifacts/PrimitiveOps/contract.py:295
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_le_uint64(a: bytes, b: uint64) -> uint64:
verify_biguint_le_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:297-298
    // @arc4.abimethod()
    // def verify_biguint_le_uint64(self, a: Bytes, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:300
    // result = a_biguint <= b
    frame_dig -1
    itob
    frame_dig -2
    b>=
    // tests/artifacts/PrimitiveOps/contract.py:301
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_gt(a: bytes, b: bytes) -> uint64:
verify_biguint_gt:
    // tests/artifacts/PrimitiveOps/contract.py:303-304
    // @arc4.abimethod()
    // def verify_biguint_gt(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:307
    // result = a_biguint > b_biguint
    frame_dig -2
    frame_dig -1
    b>
    // tests/artifacts/PrimitiveOps/contract.py:308
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_gt_uint64(a: bytes, b: uint64) -> uint64:
verify_biguint_gt_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:310-311
    // @arc4.abimethod()
    // def verify_biguint_gt_uint64(self, a: Bytes, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:313
    // result = a_biguint > b
    frame_dig -1
    itob
    frame_dig -2
    b<
    // tests/artifacts/PrimitiveOps/contract.py:314
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_ge(a: bytes, b: bytes) -> uint64:
verify_biguint_ge:
    // tests/artifacts/PrimitiveOps/contract.py:316-317
    // @arc4.abimethod()
    // def verify_biguint_ge(self, a: Bytes, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:320
    // result = a_biguint >= b_biguint
    frame_dig -2
    frame_dig -1
    b>=
    // tests/artifacts/PrimitiveOps/contract.py:321
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_biguint_ge_uint64(a: bytes, b: uint64) -> uint64:
verify_biguint_ge_uint64:
    // tests/artifacts/PrimitiveOps/contract.py:323-324
    // @arc4.abimethod()
    // def verify_biguint_ge_uint64(self, a: Bytes, b: UInt64) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:326
    // result = a_biguint >= b
    frame_dig -1
    itob
    frame_dig -2
    b<=
    // tests/artifacts/PrimitiveOps/contract.py:327
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_string_init(a: bytes) -> bytes:
verify_string_init:
    // tests/artifacts/PrimitiveOps/contract.py:329-330
    // @arc4.abimethod
    // def verify_string_init(self, a: String) -> String:
    proto 1 1
    // tests/artifacts/PrimitiveOps/contract.py:331
    // result = String("Hello, ") + a
    byte "Hello, "
    frame_dig -1
    concat
    // tests/artifacts/PrimitiveOps/contract.py:332
    // return result
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_string_startswith(a: bytes, b: bytes) -> uint64:
verify_string_startswith:
    // tests/artifacts/PrimitiveOps/contract.py:334-335
    // @arc4.abimethod
    // def verify_string_startswith(self, a: String, b: String) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:336
    // result = a.startswith(b)
    frame_dig -1
    len
    dup
    frame_dig -2
    len
    >
    bz verify_string_startswith_ternary_false@2
    int 0
    b verify_string_startswith_ternary_merge@3

verify_string_startswith_ternary_false@2:
    // tests/artifacts/PrimitiveOps/contract.py:336
    // result = a.startswith(b)
    frame_dig -2
    int 0
    frame_dig 0
    extract3
    frame_dig -1
    ==

verify_string_startswith_ternary_merge@3:
    // tests/artifacts/PrimitiveOps/contract.py:337
    // return result
    swap
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_string_endswith(a: bytes, b: bytes) -> uint64:
verify_string_endswith:
    // tests/artifacts/PrimitiveOps/contract.py:339-340
    // @arc4.abimethod
    // def verify_string_endswith(self, a: String, b: String) -> bool:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:341
    // result = a.endswith(b)
    frame_dig -1
    len
    dup
    frame_dig -2
    len
    dup
    cover 2
    >
    bz verify_string_endswith_ternary_false@2
    int 0
    b verify_string_endswith_ternary_merge@3

verify_string_endswith_ternary_false@2:
    // tests/artifacts/PrimitiveOps/contract.py:341
    // result = a.endswith(b)
    frame_dig 1
    frame_dig 0
    dup
    cover 2
    -
    frame_dig -2
    swap
    uncover 2
    extract3
    frame_dig -1
    ==

verify_string_endswith_ternary_merge@3:
    // tests/artifacts/PrimitiveOps/contract.py:342
    // return result
    frame_bury 0
    retsub


// tests.artifacts.PrimitiveOps.contract.PrimitiveOpsContract.verify_string_join(a: bytes, b: bytes) -> bytes:
verify_string_join:
    // tests/artifacts/PrimitiveOps/contract.py:344-345
    // @arc4.abimethod
    // def verify_string_join(self, a: String, b: String) -> String:
    proto 2 1
    // tests/artifacts/PrimitiveOps/contract.py:346
    // result = String(", ").join((a, b))
    frame_dig -2
    byte ", "
    concat
    frame_dig -1
    concat
    // tests/artifacts/PrimitiveOps/contract.py:347
    // return result
    retsub
