from puya.awst import wtypes
from puya.awst_build.intrinsic_models import (
    FunctionOpMapping,
    ImmediateArgMapping,
    StackArgMapping,
)

ENUM_CLASSES = {
    "algopy.op.Base64": {
        "URLEncoding": "URLEncoding",
        "StdEncoding": "StdEncoding",
    },
    "algopy.op.ECDSA": {
        "Secp256k1": "Secp256k1",
        "Secp256r1": "Secp256r1",
    },
    "algopy.op.VrfVerify": {
        "VrfAlgorand": "VrfAlgorand",
    },
    "algopy.op.EC": {
        "BN254g1": "BN254g1",
        "BN254g2": "BN254g2",
        "BLS12_381g1": "BLS12_381g1",
        "BLS12_381g2": "BLS12_381g2",
    },
}

STUB_TO_AST_MAPPER = {
    "algopy.op.addw": [
        FunctionOpMapping(
            op_code="addw",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.app_opted_in": [
        FunctionOpMapping(
            op_code="app_opted_in",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.arg": [
        FunctionOpMapping(
            op_code="args",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="arg",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.balance": [
        FunctionOpMapping(
            op_code="balance",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.base64_decode": [
        FunctionOpMapping(
            op_code="base64_decode",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="e",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.bitlen": [
        FunctionOpMapping(
            op_code="bitlen",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.bsqrt": [
        FunctionOpMapping(
            op_code="bsqrt",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.biguint_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.biguint_wtype,
            ],
        ),
    ],
    "algopy.op.btoi": [
        FunctionOpMapping(
            op_code="btoi",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.bzero": [
        FunctionOpMapping(
            op_code="bzero",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.concat": [
        FunctionOpMapping(
            op_code="concat",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.divmodw": [
        FunctionOpMapping(
            op_code="divmodw",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="d",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.uint64_wtype,
                wtypes.uint64_wtype,
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.divw": [
        FunctionOpMapping(
            op_code="divw",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ecdsa_pk_decompress": [
        FunctionOpMapping(
            op_code="ecdsa_pk_decompress",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="v",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ecdsa_pk_recover": [
        FunctionOpMapping(
            op_code="ecdsa_pk_recover",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="v",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="d",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ecdsa_verify": [
        FunctionOpMapping(
            op_code="ecdsa_verify",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="v",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="d",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="e",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.ed25519verify": [
        FunctionOpMapping(
            op_code="ed25519verify",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.ed25519verify_bare": [
        FunctionOpMapping(
            op_code="ed25519verify_bare",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.err": [
        FunctionOpMapping(
            op_code="err",
            is_property=False,
            immediates=[],
            stack_inputs=[],
            stack_outputs=[],
        ),
    ],
    "algopy.op.exit": [
        FunctionOpMapping(
            op_code="return",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.exp": [
        FunctionOpMapping(
            op_code="exp",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.expw": [
        FunctionOpMapping(
            op_code="expw",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.extract": [
        FunctionOpMapping(
            op_code="extract3",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="extract",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
                ImmediateArgMapping(
                    arg_name="c",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.extract_uint16": [
        FunctionOpMapping(
            op_code="extract_uint16",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.extract_uint32": [
        FunctionOpMapping(
            op_code="extract_uint32",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.extract_uint64": [
        FunctionOpMapping(
            op_code="extract_uint64",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.gaid": [
        FunctionOpMapping(
            op_code="gaids",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gaid",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.getbit": [
        FunctionOpMapping(
            op_code="getbit",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.getbyte": [
        FunctionOpMapping(
            op_code="getbyte",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.gload_bytes": [
        FunctionOpMapping(
            op_code="gloadss",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gload",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gloads",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.gload_uint64": [
        FunctionOpMapping(
            op_code="gloadss",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gload",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gloads",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.itob": [
        FunctionOpMapping(
            op_code="itob",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.keccak256": [
        FunctionOpMapping(
            op_code="keccak256",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.min_balance": [
        FunctionOpMapping(
            op_code="min_balance",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.mulw": [
        FunctionOpMapping(
            op_code="mulw",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.replace": [
        FunctionOpMapping(
            op_code="replace3",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="replace2",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.select_bytes": [
        FunctionOpMapping(
            op_code="select",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bool_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.select_uint64": [
        FunctionOpMapping(
            op_code="select",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bool_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.setbit_bytes": [
        FunctionOpMapping(
            op_code="setbit",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.setbit_uint64": [
        FunctionOpMapping(
            op_code="setbit",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.setbyte": [
        FunctionOpMapping(
            op_code="setbyte",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.sha256": [
        FunctionOpMapping(
            op_code="sha256",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.sha3_256": [
        FunctionOpMapping(
            op_code="sha3_256",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.sha512_256": [
        FunctionOpMapping(
            op_code="sha512_256",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.shl": [
        FunctionOpMapping(
            op_code="shl",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.shr": [
        FunctionOpMapping(
            op_code="shr",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.sqrt": [
        FunctionOpMapping(
            op_code="sqrt",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.substring": [
        FunctionOpMapping(
            op_code="substring3",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="substring",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
                ImmediateArgMapping(
                    arg_name="c",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.vrf_verify": [
        FunctionOpMapping(
            op_code="vrf_verify",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="s",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_balance": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctBalance",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_min_balance": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctMinBalance",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_auth_addr": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctAuthAddr",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_num_uint": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_num_byte_slice": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_extra_app_pages": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalExtraAppPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_apps_created": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalAppsCreated",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_apps_opted_in": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalAppsOptedIn",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_assets_created": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalAssetsCreated",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_assets": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalAssets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_boxes": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalBoxes",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AcctParamsGet.acct_total_box_bytes": [
        FunctionOpMapping(
            op_code="acct_params_get",
            is_property=False,
            immediates=[
                "AcctTotalBoxBytes",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppGlobal.get_bytes": [
        FunctionOpMapping(
            op_code="app_global_get",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.AppGlobal.get_uint64": [
        FunctionOpMapping(
            op_code="app_global_get",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.AppGlobal.get_ex_bytes": [
        FunctionOpMapping(
            op_code="app_global_get_ex",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppGlobal.get_ex_uint64": [
        FunctionOpMapping(
            op_code="app_global_get_ex",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppGlobal.delete": [
        FunctionOpMapping(
            op_code="app_global_del",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.AppGlobal.put": [
        FunctionOpMapping(
            op_code="app_global_put",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.AppLocal.get_bytes": [
        FunctionOpMapping(
            op_code="app_local_get",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.AppLocal.get_uint64": [
        FunctionOpMapping(
            op_code="app_local_get",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.AppLocal.get_ex_bytes": [
        FunctionOpMapping(
            op_code="app_local_get_ex",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppLocal.get_ex_uint64": [
        FunctionOpMapping(
            op_code="app_local_get_ex",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppLocal.delete": [
        FunctionOpMapping(
            op_code="app_local_del",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.AppLocal.put": [
        FunctionOpMapping(
            op_code="app_local_put",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.AppParamsGet.app_approval_program": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppApprovalProgram",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_clear_state_program": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppClearStateProgram",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_global_num_uint": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppGlobalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_global_num_byte_slice": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppGlobalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_local_num_uint": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppLocalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_local_num_byte_slice": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppLocalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_extra_program_pages": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppExtraProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_creator": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppCreator",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AppParamsGet.app_address": [
        FunctionOpMapping(
            op_code="app_params_get",
            is_property=False,
            immediates=[
                "AppAddress",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetHoldingGet.asset_balance": [
        FunctionOpMapping(
            op_code="asset_holding_get",
            is_property=False,
            immediates=[
                "AssetBalance",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetHoldingGet.asset_frozen": [
        FunctionOpMapping(
            op_code="asset_holding_get",
            is_property=False,
            immediates=[
                "AssetFrozen",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_total": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetTotal",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_decimals": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetDecimals",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_default_frozen": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetDefaultFrozen",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_unit_name": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetUnitName",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_name": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetName",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_url": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetURL",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_metadata_hash": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetMetadataHash",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_manager": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetManager",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_reserve": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetReserve",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_freeze": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetFreeze",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_clawback": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetClawback",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.AssetParamsGet.asset_creator": [
        FunctionOpMapping(
            op_code="asset_params_get",
            is_property=False,
            immediates=[
                "AssetCreator",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Block.blk_seed": [
        FunctionOpMapping(
            op_code="block",
            is_property=False,
            immediates=[
                "BlkSeed",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Block.blk_timestamp": [
        FunctionOpMapping(
            op_code="block",
            is_property=False,
            immediates=[
                "BlkTimestamp",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Box.create": [
        FunctionOpMapping(
            op_code="box_create",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Box.delete": [
        FunctionOpMapping(
            op_code="box_del",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Box.extract": [
        FunctionOpMapping(
            op_code="box_extract",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Box.get": [
        FunctionOpMapping(
            op_code="box_get",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Box.length": [
        FunctionOpMapping(
            op_code="box_len",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Box.put": [
        FunctionOpMapping(
            op_code="box_put",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.Box.replace": [
        FunctionOpMapping(
            op_code="box_replace",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.Box.resize": [
        FunctionOpMapping(
            op_code="box_resize",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.Box.splice": [
        FunctionOpMapping(
            op_code="box_splice",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="c",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="d",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.EllipticCurve.add": [
        FunctionOpMapping(
            op_code="ec_add",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="g",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.EllipticCurve.map_to": [
        FunctionOpMapping(
            op_code="ec_map_to",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="g",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.EllipticCurve.scalar_mul_multi": [
        FunctionOpMapping(
            op_code="ec_multi_scalar_mul",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="g",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.EllipticCurve.pairing_check": [
        FunctionOpMapping(
            op_code="ec_pairing_check",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="g",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.EllipticCurve.scalar_mul": [
        FunctionOpMapping(
            op_code="ec_scalar_mul",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="g",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.EllipticCurve.subgroup_check": [
        FunctionOpMapping(
            op_code="ec_subgroup_check",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="g",
                    literal_type=str,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.sender": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Sender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.fee": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Fee",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.first_valid": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "FirstValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.first_valid_time": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "FirstValidTime",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.last_valid": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "LastValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.note": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Note",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.lease": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Lease",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.receiver": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Receiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.amount": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Amount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.close_remainder_to": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "CloseRemainderTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.vote_pk": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "VotePK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.selection_pk": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "SelectionPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.vote_first": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "VoteFirst",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.vote_last": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "VoteLast",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.vote_key_dilution": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "VoteKeyDilution",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.type": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Type",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.type_enum": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "TypeEnum",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.xfer_asset": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "XferAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.asset_amount": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "AssetAmount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.asset_sender": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "AssetSender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.asset_receiver": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "AssetReceiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.asset_close_to": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "AssetCloseTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.group_index": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "GroupIndex",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.tx_id": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "TxID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.application_id": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.on_completion": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "OnCompletion",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.application_args": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ApplicationArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ApplicationArgs",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_app_args": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumAppArgs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.accounts": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Accounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Accounts",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_accounts": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumAccounts",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.approval_program": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ApprovalProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.clear_state_program": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ClearStateProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.rekey_to": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "RekeyTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_total": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetTotal",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_decimals": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetDecimals",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_default_frozen": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetDefaultFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_unit_name": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetUnitName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_name": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_url": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetURL",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_metadata_hash": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetMetadataHash",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_manager": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetManager",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_reserve": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetReserve",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_freeze": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetFreeze",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.config_asset_clawback": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ConfigAssetClawback",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.freeze_asset": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "FreezeAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.freeze_asset_account": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "FreezeAssetAccount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.freeze_asset_frozen": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "FreezeAssetFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.assets": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Assets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Assets",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_assets": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumAssets",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.applications": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Applications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Applications",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_applications": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumApplications",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.global_num_uint": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "GlobalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.global_num_byte_slice": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "GlobalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.local_num_uint": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "LocalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.local_num_byte_slice": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "LocalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.extra_program_pages": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ExtraProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.nonparticipation": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Nonparticipation",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.logs": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Logs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "Logs",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_logs": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumLogs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.created_asset_id": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "CreatedAssetID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.created_application_id": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "CreatedApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.last_log": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "LastLog",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.state_proof_pk": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "StateProofPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.approval_program_pages": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ApprovalProgramPages",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_approval_program_pages": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumApprovalProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.clear_state_program_pages": [
        FunctionOpMapping(
            op_code="gitxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gitxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "ClearStateProgramPages",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GITxn.num_clear_state_program_pages": [
        FunctionOpMapping(
            op_code="gitxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="t",
                    literal_type=int,
                ),
                "NumClearStateProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.sender": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Sender",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Sender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.fee": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Fee",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Fee",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.first_valid": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "FirstValid",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "FirstValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.first_valid_time": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "FirstValidTime",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "FirstValidTime",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.last_valid": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "LastValid",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "LastValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.note": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Note",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Note",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.lease": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Lease",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Lease",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.receiver": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Receiver",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Receiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.amount": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Amount",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Amount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.close_remainder_to": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "CloseRemainderTo",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "CloseRemainderTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.vote_pk": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "VotePK",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "VotePK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.selection_pk": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "SelectionPK",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "SelectionPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.vote_first": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "VoteFirst",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "VoteFirst",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.vote_last": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "VoteLast",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "VoteLast",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.vote_key_dilution": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "VoteKeyDilution",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "VoteKeyDilution",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.type": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Type",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Type",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.type_enum": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "TypeEnum",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "TypeEnum",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.xfer_asset": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "XferAsset",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "XferAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.asset_amount": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "AssetAmount",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "AssetAmount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.asset_sender": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "AssetSender",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "AssetSender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.asset_receiver": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "AssetReceiver",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "AssetReceiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.asset_close_to": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "AssetCloseTo",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "AssetCloseTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.group_index": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "GroupIndex",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "GroupIndex",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.tx_id": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "TxID",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "TxID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.application_id": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ApplicationID",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.on_completion": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "OnCompletion",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "OnCompletion",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.application_args": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "ApplicationArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "ApplicationArgs",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ApplicationArgs",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ApplicationArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_app_args": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumAppArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumAppArgs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.accounts": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "Accounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "Accounts",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Accounts",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Accounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_accounts": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumAccounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumAccounts",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.approval_program": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ApprovalProgram",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ApprovalProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.clear_state_program": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ClearStateProgram",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ClearStateProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.rekey_to": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "RekeyTo",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "RekeyTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAsset",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_total": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetTotal",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetTotal",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_decimals": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetDecimals",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetDecimals",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_default_frozen": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetDefaultFrozen",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetDefaultFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_unit_name": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetUnitName",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetUnitName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_name": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetName",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_url": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetURL",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetURL",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_metadata_hash": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetMetadataHash",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetMetadataHash",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_manager": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetManager",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetManager",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_reserve": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetReserve",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetReserve",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_freeze": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetFreeze",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetFreeze",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.config_asset_clawback": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ConfigAssetClawback",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ConfigAssetClawback",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.freeze_asset": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "FreezeAsset",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "FreezeAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.freeze_asset_account": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "FreezeAssetAccount",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "FreezeAssetAccount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.freeze_asset_frozen": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "FreezeAssetFrozen",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "FreezeAssetFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.assets": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "Assets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "Assets",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Assets",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Assets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_assets": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumAssets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumAssets",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.applications": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "Applications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "Applications",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Applications",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Applications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_applications": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumApplications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumApplications",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.global_num_uint": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "GlobalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "GlobalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.global_num_byte_slice": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "GlobalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "GlobalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.local_num_uint": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "LocalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "LocalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.local_num_byte_slice": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "LocalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "LocalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.extra_program_pages": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "ExtraProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ExtraProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.nonparticipation": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "Nonparticipation",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Nonparticipation",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.logs": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "Logs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "Logs",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Logs",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "Logs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_logs": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumLogs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumLogs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.created_asset_id": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "CreatedAssetID",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "CreatedAssetID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.created_application_id": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "CreatedApplicationID",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "CreatedApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.last_log": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "LastLog",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "LastLog",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.state_proof_pk": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "StateProofPK",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "StateProofPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.approval_program_pages": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ApprovalProgramPages",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_approval_program_pages": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumApprovalProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.clear_state_program_pages": [
        FunctionOpMapping(
            op_code="gtxnsas",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnsa",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxna",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ClearStateProgramPages",
                ImmediateArgMapping(
                    arg_name="b",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxnas",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "ClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.GTxn.num_clear_state_program_pages": [
        FunctionOpMapping(
            op_code="gtxns",
            is_property=False,
            immediates=[
                "NumClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="gtxn",
            is_property=False,
            immediates=[
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
                "NumClearStateProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.min_txn_fee": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "MinTxnFee",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.min_balance": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "MinBalance",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.max_txn_life": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "MaxTxnLife",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.zero_address": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "ZeroAddress",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Global.group_size": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "GroupSize",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.logic_sig_version": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "LogicSigVersion",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.round": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "Round",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.latest_timestamp": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "LatestTimestamp",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.current_application_id": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "CurrentApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.Global.creator_address": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "CreatorAddress",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Global.current_application_address": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "CurrentApplicationAddress",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Global.group_id": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "GroupID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Global.opcode_budget": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "OpcodeBudget",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.caller_application_id": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "CallerApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.caller_application_address": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "CallerApplicationAddress",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Global.asset_create_min_balance": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "AssetCreateMinBalance",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.asset_opt_in_min_balance": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "AssetOptInMinBalance",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Global.genesis_hash": [
        FunctionOpMapping(
            op_code="global",
            is_property=False,
            immediates=[
                "GenesisHash",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.sender": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Sender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.fee": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Fee",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.first_valid": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "FirstValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.first_valid_time": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "FirstValidTime",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.last_valid": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "LastValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.note": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Note",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.lease": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Lease",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.receiver": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Receiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.amount": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Amount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.close_remainder_to": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "CloseRemainderTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.vote_pk": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "VotePK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.selection_pk": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "SelectionPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.vote_first": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "VoteFirst",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.vote_last": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "VoteLast",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.vote_key_dilution": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "VoteKeyDilution",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.type": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Type",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.type_enum": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "TypeEnum",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.xfer_asset": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "XferAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.asset_amount": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "AssetAmount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.asset_sender": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "AssetSender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.asset_receiver": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "AssetReceiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.asset_close_to": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "AssetCloseTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.group_index": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "GroupIndex",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.tx_id": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "TxID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.application_id": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.on_completion": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "OnCompletion",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.application_args": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "ApplicationArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "ApplicationArgs",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_app_args": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumAppArgs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.accounts": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "Accounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "Accounts",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_accounts": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumAccounts",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.approval_program": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ApprovalProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.clear_state_program": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ClearStateProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.rekey_to": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "RekeyTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_total": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetTotal",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_decimals": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetDecimals",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_default_frozen": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetDefaultFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_unit_name": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetUnitName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_name": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_url": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetURL",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_metadata_hash": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetMetadataHash",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_manager": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetManager",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_reserve": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetReserve",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_freeze": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetFreeze",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.config_asset_clawback": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ConfigAssetClawback",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.freeze_asset": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "FreezeAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.freeze_asset_account": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "FreezeAssetAccount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.freeze_asset_frozen": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "FreezeAssetFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.assets": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "Assets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "Assets",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_assets": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumAssets",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.applications": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "Applications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "Applications",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_applications": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumApplications",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.global_num_uint": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "GlobalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.global_num_byte_slice": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "GlobalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.local_num_uint": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "LocalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.local_num_byte_slice": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "LocalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.extra_program_pages": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "ExtraProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.nonparticipation": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "Nonparticipation",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.logs": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "Logs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "Logs",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_logs": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumLogs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.created_asset_id": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "CreatedAssetID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.created_application_id": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "CreatedApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.last_log": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "LastLog",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.state_proof_pk": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "StateProofPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.approval_program_pages": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_approval_program_pages": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumApprovalProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.clear_state_program_pages": [
        FunctionOpMapping(
            op_code="itxnas",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="itxna",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.ITxn.num_clear_state_program_pages": [
        FunctionOpMapping(
            op_code="itxn",
            is_property=False,
            immediates=[
                "NumClearStateProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.ITxnCreate.begin": [
        FunctionOpMapping(
            op_code="itxn_begin",
            is_property=False,
            immediates=[],
            stack_inputs=[],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.next": [
        FunctionOpMapping(
            op_code="itxn_next",
            is_property=False,
            immediates=[],
            stack_inputs=[],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.submit": [
        FunctionOpMapping(
            op_code="itxn_submit",
            is_property=False,
            immediates=[],
            stack_inputs=[],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_sender": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Sender",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_fee": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Fee",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_note": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Note",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_receiver": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Receiver",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_amount": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Amount",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_close_remainder_to": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "CloseRemainderTo",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_vote_pk": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "VotePK",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_selection_pk": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "SelectionPK",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_vote_first": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "VoteFirst",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_vote_last": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "VoteLast",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_vote_key_dilution": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "VoteKeyDilution",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_type": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Type",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_type_enum": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "TypeEnum",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_xfer_asset": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "XferAsset",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_asset_amount": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "AssetAmount",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_asset_sender": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "AssetSender",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_asset_receiver": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "AssetReceiver",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_asset_close_to": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "AssetCloseTo",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_application_id": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ApplicationID",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.application_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_on_completion": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "OnCompletion",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_application_args": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ApplicationArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_accounts": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Accounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_approval_program": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ApprovalProgram",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_clear_state_program": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ClearStateProgram",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_rekey_to": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "RekeyTo",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAsset",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_total": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetTotal",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_decimals": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetDecimals",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_default_frozen": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetDefaultFrozen",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bool_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_unit_name": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetUnitName",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_name": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetName",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_url": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetURL",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_metadata_hash": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetMetadataHash",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_manager": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetManager",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_reserve": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetReserve",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_freeze": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetFreeze",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_config_asset_clawback": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ConfigAssetClawback",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_freeze_asset": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "FreezeAsset",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.asset_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_freeze_asset_account": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "FreezeAssetAccount",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.account_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_freeze_asset_frozen": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "FreezeAssetFrozen",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bool_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_assets": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Assets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_applications": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Applications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_global_num_uint": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "GlobalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_global_num_byte_slice": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "GlobalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_local_num_uint": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "LocalNumUint",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_local_num_byte_slice": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "LocalNumByteSlice",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_extra_program_pages": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ExtraProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_nonparticipation": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "Nonparticipation",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bool_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_state_proof_pk": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "StateProofPK",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_approval_program_pages": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.ITxnCreate.set_clear_state_program_pages": [
        FunctionOpMapping(
            op_code="itxn_field",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.JsonRef.json_string": [
        FunctionOpMapping(
            op_code="json_ref",
            is_property=False,
            immediates=[
                "JSONString",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.JsonRef.json_uint64": [
        FunctionOpMapping(
            op_code="json_ref",
            is_property=False,
            immediates=[
                "JSONUint64",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.JsonRef.json_object": [
        FunctionOpMapping(
            op_code="json_ref",
            is_property=False,
            immediates=[
                "JSONObject",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Scratch.load_bytes": [
        FunctionOpMapping(
            op_code="loads",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Scratch.load_uint64": [
        FunctionOpMapping(
            op_code="loads",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Scratch.store": [
        FunctionOpMapping(
            op_code="stores",
            is_property=False,
            immediates=[],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
                StackArgMapping(
                    arg_name="b",
                    allowed_types=[
                        wtypes.bytes_wtype,
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[],
        ),
    ],
    "algopy.op.Txn.sender": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Sender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.fee": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Fee",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.first_valid": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "FirstValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.first_valid_time": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "FirstValidTime",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.last_valid": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "LastValid",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.note": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Note",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.lease": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Lease",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.receiver": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Receiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.amount": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Amount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.close_remainder_to": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "CloseRemainderTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.vote_pk": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "VotePK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.selection_pk": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "SelectionPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.vote_first": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "VoteFirst",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.vote_last": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "VoteLast",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.vote_key_dilution": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "VoteKeyDilution",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.type": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Type",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.type_enum": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "TypeEnum",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.xfer_asset": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "XferAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.asset_amount": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "AssetAmount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.asset_sender": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "AssetSender",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.asset_receiver": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "AssetReceiver",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.asset_close_to": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "AssetCloseTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.group_index": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "GroupIndex",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.tx_id": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "TxID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.application_id": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.on_completion": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "OnCompletion",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.application_args": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "ApplicationArgs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "ApplicationArgs",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_app_args": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumAppArgs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.accounts": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "Accounts",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "Accounts",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_accounts": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumAccounts",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.approval_program": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ApprovalProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.clear_state_program": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ClearStateProgram",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.rekey_to": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "RekeyTo",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_total": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetTotal",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_decimals": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetDecimals",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_default_frozen": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetDefaultFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_unit_name": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetUnitName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_name": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetName",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_url": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetURL",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_metadata_hash": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetMetadataHash",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_manager": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetManager",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_reserve": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetReserve",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_freeze": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetFreeze",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.config_asset_clawback": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ConfigAssetClawback",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.freeze_asset": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "FreezeAsset",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.freeze_asset_account": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "FreezeAssetAccount",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.account_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.freeze_asset_frozen": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "FreezeAssetFrozen",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.assets": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "Assets",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "Assets",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_assets": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumAssets",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.applications": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "Applications",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "Applications",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_applications": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumApplications",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.global_num_uint": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "GlobalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.global_num_byte_slice": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "GlobalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.local_num_uint": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "LocalNumUint",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.local_num_byte_slice": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "LocalNumByteSlice",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.extra_program_pages": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "ExtraProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.nonparticipation": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "Nonparticipation",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bool_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.logs": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "Logs",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "Logs",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_logs": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumLogs",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.created_asset_id": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "CreatedAssetID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.asset_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.created_application_id": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "CreatedApplicationID",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.application_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.last_log": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "LastLog",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.state_proof_pk": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "StateProofPK",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.approval_program_pages": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "ApprovalProgramPages",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_approval_program_pages": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumApprovalProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.clear_state_program_pages": [
        FunctionOpMapping(
            op_code="txnas",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
            ],
            stack_inputs=[
                StackArgMapping(
                    arg_name="a",
                    allowed_types=[
                        wtypes.uint64_wtype,
                    ],
                ),
            ],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
        FunctionOpMapping(
            op_code="txna",
            is_property=False,
            immediates=[
                "ClearStateProgramPages",
                ImmediateArgMapping(
                    arg_name="a",
                    literal_type=int,
                ),
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.bytes_wtype,
            ],
        ),
    ],
    "algopy.op.Txn.num_clear_state_program_pages": [
        FunctionOpMapping(
            op_code="txn",
            is_property=False,
            immediates=[
                "NumClearStateProgramPages",
            ],
            stack_inputs=[],
            stack_outputs=[
                wtypes.uint64_wtype,
            ],
        ),
    ],
}
