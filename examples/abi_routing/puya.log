>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug abi_routing
debug: Building AWST for __init__.py
debug: Building AWST for abi_routing
debug: Building AWST for embedded puyapy lib at <puya>/puyapy_lib_bytes.py
debug: Building AWST for embedded puyapy lib at <puya>/puyapy.py
debug: Building AWST for abi_routing/contract.py
debug: Sealing block@0: // L13
debug: Terminated block@0: // L13
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@None: // while_body_L20
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L20
debug: Sealing block@None: // switch_case_default_L26
debug: Sealing block@None: // switch_case_0_L28
debug: Sealing block@None: // switch_case_1_L30
debug: Terminated block@3: // switch_case_0_L28
debug: Terminated block@4: // switch_case_1_L30
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L5
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L5
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L5
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L32
debug: Terminated block@0: // L32
debug: Sealing block@0: // L48
debug: Terminated block@0: // L48
debug: Sealing block@0: // L61
debug: Terminated block@0: // L61
debug: Sealing block@0: // L79
debug: Terminated block@0: // L79
debug: Sealing block@0: // L96
debug: Terminated block@0: // L96
debug: Sealing block@0: // L105
debug: Terminated block@0: // L105
debug: Sealing block@0: // L109
debug: Terminated block@0: // L109
debug: Sealing block@0: // L113
debug: Terminated block@0: // L113
debug: Sealing block@0: // L117
debug: Terminated block@0: // L117
debug: Sealing block@0: // L121
debug: Terminated block@0: // L121
debug: Sealing block@0: // L137
debug: Terminated block@0: // L137
debug: Sealing block@0: // L75
debug: Terminated block@0: // L75
debug: Sealing block@0: // L22
debug: Terminated block@0: // L22
debug: Sealing block@0: // L21
debug: Terminated block@0: // L21
debug: Sealing block@None: // on_create_L22
debug: Terminated block@1: // on_create_L22
debug: Sealing block@2: // entrypoint_L22
debug: Terminated block@2: // entrypoint_L22
debug: Sealing block@None: // abi_routing_L21
debug: Sealing block@None: // bare_routing_L21
debug: Terminated block@3: // abi_routing_L21
debug: Sealing block@None: // switch_case_default_L21
debug: Sealing block@None: // noop_with_uint64_route_L31
debug: Sealing block@None: // all_the_things_route_L36
debug: Sealing block@None: // mixed_oca_route_L52
debug: Sealing block@None: // opt_into_asset_route_L78
debug: Sealing block@None: // with_transactions_route_L95
debug: Sealing block@None: // compare_assets_route_L104
debug: Sealing block@None: // get_address_route_L108
debug: Sealing block@None: // get_asset_route_L112
debug: Sealing block@None: // get_application_route_L116
debug: Sealing block@None: // get_an_int_route_L120
debug: Sealing block@None: // method_with_default_args_route_L124
debug: Terminated block@4: // noop_with_uint64_route_L31
debug: Terminated block@5: // all_the_things_route_L36
debug: Terminated block@6: // mixed_oca_route_L52
debug: Terminated block@7: // opt_into_asset_route_L78
debug: Terminated block@8: // with_transactions_route_L95
debug: Terminated block@9: // compare_assets_route_L104
debug: Terminated block@10: // get_address_route_L108
debug: Terminated block@11: // get_asset_route_L112
debug: Terminated block@12: // get_application_route_L116
debug: Terminated block@13: // get_an_int_route_L120
debug: Terminated block@14: // method_with_default_args_route_L124
debug: Terminated block@15: // switch_case_default_L21
debug: Sealing block@16: // switch_case_next_L21
debug: Terminated block@16: // switch_case_next_L21
debug: Terminated block@17: // bare_routing_L21
debug: Sealing block@None: // reject_bare_on_completion_L21
debug: Sealing block@None: // bare_abi_config_L75
debug: Terminated block@18: // bare_abi_config_L75
debug: Terminated block@19: // reject_bare_on_completion_L21
debug: Sealing block@None: // switch_case_next_L21
debug: Sealing block@20: // after_if_else_L21
debug: Terminated block@20: // after_if_else_L21
debug: Sealing block@0: // L21
debug: Terminated block@0: // L21
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.ssa.ir
info: Optimizing examples.abi_routing.contract.Reference at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.abi_routing.contract.Reference.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%35#0, maybe_value%32#0
debug: Replacing {maybe_value%32#0} with awst_tmp%35#0 made 1 modifications
debug: Found equivalence set: tmp%37#0, maybe_value_did_exist%33#0
debug: Replacing {maybe_value_did_exist%33#0} with tmp%37#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Switch switch tmp%92#0 {0u => block@18, 1u => block@18, 2u => block@18, 4u => block@18, 5u => block@18, * => block@19} simplified to goto [block@18, block@18, block@18, block@19, block@18, block@18, ...block@19][tmp%92#0]
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@16: // switch_case_next_L21 with block@15: // switch_case_default_L21 in block@20: // after_if_else_L21
debug: Merged linear block@16: // switch_case_next_L21 into block@15: // switch_case_default_L21
debug: Merged linear block@20: // after_if_else_L21 into block@15: // switch_case_default_L21
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.noop_with_uint64
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.full_abi_config
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.mixed_oca
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.opt_into_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.with_transactions
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.compare_assets
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_address
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_app
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_a_int
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.method_with_default_args
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded 0u * 1u to 0u
debug: Folded 1u * 1u to 1u
debug: Folded 2u * 1u to 2u
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index%8#0
debug: Removing unused variable item_index%11#0
debug: Removing unused variable item_index%14#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.bare_abi_config
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.abi_routing.contract.Reference.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.noop_with_uint64
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.full_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.mixed_oca
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.opt_into_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.with_transactions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.compare_assets
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_address
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_app
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_a_int
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.method_with_default_args
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.bare_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#1
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.abi_routing.contract.Reference.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.noop_with_uint64
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.full_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.mixed_oca
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.opt_into_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.with_transactions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.compare_assets
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_address
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_app
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_a_int
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.method_with_default_args
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.bare_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.__init__
debug: Optimizer: Arithmetic Simplification
debug: Folded concat(0x07, 0x08) to b'/x07/x08'
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#2
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.abi_routing.contract.Reference.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.noop_with_uint64
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.full_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.mixed_oca
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.opt_into_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.with_transactions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.compare_assets
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_address
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_app
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_a_int
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.method_with_default_args
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.bare_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.__init__
debug: Optimizer: Arithmetic Simplification
debug: Folded concat(0x0708, 0x09) to b'/x07/x08/t'
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#3
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine examples.abi_routing.contract.Reference.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.noop_with_uint64
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.full_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.mixed_oca
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.opt_into_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.with_transactions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.compare_assets
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_address
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_app
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.get_a_int
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.method_with_default_args
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.bare_abi_config
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.abi_routing.contract.Reference.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 5, ending loop
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.cssa.ir
debug: Removing Phis from examples.abi_routing.contract.Reference.approval_program
debug: Removing Phis from examples.abi_routing.contract.Reference.noop_with_uint64
debug: Removing Phis from examples.abi_routing.contract.Reference.full_abi_config
debug: Removing Phis from examples.abi_routing.contract.Reference.mixed_oca
debug: Removing Phis from examples.abi_routing.contract.Reference.opt_into_asset
debug: Removing Phis from examples.abi_routing.contract.Reference.with_transactions
debug: Removing Phis from examples.abi_routing.contract.Reference.compare_assets
debug: Removing Phis from examples.abi_routing.contract.Reference.get_address
debug: Removing Phis from examples.abi_routing.contract.Reference.get_asset
debug: Removing Phis from examples.abi_routing.contract.Reference.get_app
debug: Removing Phis from examples.abi_routing.contract.Reference.get_a_int
debug: Removing Phis from examples.abi_routing.contract.Reference.method_with_default_args
debug: Removing Phis from examples.abi_routing.contract.Reference.bare_abi_config
debug: Removing Phis from examples.abi_routing.contract.Reference.__init__
debug: Removing Phis from examples.abi_routing.contract.Reference.clear_state_program
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.post_ssa.ir
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.approval_program
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.noop_with_uint64
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.full_abi_config
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.mixed_oca
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.opt_into_asset
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.with_transactions
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.compare_assets
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.get_address
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.get_asset
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.get_app
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.get_a_int
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.method_with_default_args
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.bare_abi_config
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.__init__
debug: Sequentializing parallel copies in examples.abi_routing.contract.Reference.clear_state_program
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.parallel_copies.ir
debug: Coalescing local variables in examples.abi_routing.contract.Reference.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.noop_with_uint64 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.full_abi_config using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.mixed_oca using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.opt_into_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.with_transactions using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.compare_assets using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.get_address using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.get_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.get_app using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.get_a_int using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.method_with_default_args using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.bare_abi_config using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.abi_routing.contract.Reference.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/abi_routing/out/contract_Reference.final.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_abi_routing@3.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_abi_routing@3.ops[14]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_noop_with_uint64_route@4.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_noop_with_uint64_route@4.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_noop_with_uint64_route@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_noop_with_uint64_route@4.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_noop_with_uint64_route@4.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_noop_with_uint64_route@4.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_noop_with_uint64_route@4.ops[15]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_noop_with_uint64_route@4.ops[17]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_noop_with_uint64_route@4.ops[23]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_noop_with_uint64_route@4.ops[25]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_noop_with_uint64_route@4.ops[19]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_noop_with_uint64_route@4.ops[22]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_all_the_things_route@5.ops[1]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_all_the_things_route@5.ops[3]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_all_the_things_route@5.ops[9]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_all_the_things_route@5.ops[11]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_all_the_things_route@5.ops[5]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_all_the_things_route@5.ops[8]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[5]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[7]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[10]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[12]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[15]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[17]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[20]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[22]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[28]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[30]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[1]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[4]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_mixed_oca_route@6.ops[25]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_mixed_oca_route@6.ops[28]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@7.ops[1]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@7.ops[3]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@7.ops[5]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@7.ops[7]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@7.ops[10]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@7.ops[12]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@7.ops[15]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@7.ops[17]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@7.ops[19]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@7.ops[21]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@7.ops[23]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@7.ops[25]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[1]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[3]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[5]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[7]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[10]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[12]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[15]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[17]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[19]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[21]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[27]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[29]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[32]: 'store awst_tmp%35#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[34]: 'load awst_tmp%35#0' with 'load awst_tmp%35#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[36]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[38]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[41]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[43]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[46]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[51]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[35]: 'store awst_tmp%35#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[51]: 'load awst_tmp%35#0' with 'load awst_tmp%35#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[25]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[51]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted main_with_transactions_route@8.ops[23]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced main_with_transactions_route@8.ops[51]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[1]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[3]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[5]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[7]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[10]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[12]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[15]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[17]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[19]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[21]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[25]: 'store tmp%45#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[27]: 'load tmp%45#0' with 'load tmp%45#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[29]: 'store tmp%46#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[31]: 'load tmp%46#0' with 'load tmp%46#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[33]: 'store tmp%47#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[36]: 'load tmp%47#0' with 'load tmp%47#0 from l-stack (no copy)'
debug: Inserted main_compare_assets_route@9.ops[23]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced main_compare_assets_route@9.ops[36]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted main_get_address_route@10.ops[1]: 'store tmp%48#0 to l-stack (copy)'
debug: Replaced main_get_address_route@10.ops[3]: 'load tmp%48#0' with 'load tmp%48#0 from l-stack (no copy)'
debug: Inserted main_get_address_route@10.ops[5]: 'store tmp%49#0 to l-stack (copy)'
debug: Replaced main_get_address_route@10.ops[7]: 'load tmp%49#0' with 'load tmp%49#0 from l-stack (no copy)'
debug: Inserted main_get_address_route@10.ops[10]: 'store tmp%50#0 to l-stack (copy)'
debug: Replaced main_get_address_route@10.ops[12]: 'load tmp%50#0' with 'load tmp%50#0 from l-stack (no copy)'
debug: Inserted main_get_address_route@10.ops[19]: 'store tmp%52#0 to l-stack (copy)'
debug: Replaced main_get_address_route@10.ops[21]: 'load tmp%52#0' with 'load tmp%52#0 from l-stack (no copy)'
debug: Inserted main_get_address_route@10.ops[15]: 'store tmp%51#0 to l-stack (copy)'
debug: Replaced main_get_address_route@10.ops[18]: 'load tmp%51#0' with 'load tmp%51#0 from l-stack (no copy)'
debug: Inserted main_get_asset_route@11.ops[1]: 'store tmp%53#0 to l-stack (copy)'
debug: Replaced main_get_asset_route@11.ops[3]: 'load tmp%53#0' with 'load tmp%53#0 from l-stack (no copy)'
debug: Inserted main_get_asset_route@11.ops[5]: 'store tmp%54#0 to l-stack (copy)'
debug: Replaced main_get_asset_route@11.ops[7]: 'load tmp%54#0' with 'load tmp%54#0 from l-stack (no copy)'
debug: Inserted main_get_asset_route@11.ops[10]: 'store tmp%55#0 to l-stack (copy)'
debug: Replaced main_get_asset_route@11.ops[12]: 'load tmp%55#0' with 'load tmp%55#0 from l-stack (no copy)'
debug: Inserted main_get_asset_route@11.ops[19]: 'store tmp%57#0 to l-stack (copy)'
debug: Replaced main_get_asset_route@11.ops[21]: 'load tmp%57#0' with 'load tmp%57#0 from l-stack (no copy)'
debug: Inserted main_get_asset_route@11.ops[15]: 'store tmp%56#0 to l-stack (copy)'
debug: Replaced main_get_asset_route@11.ops[18]: 'load tmp%56#0' with 'load tmp%56#0 from l-stack (no copy)'
debug: Inserted main_get_application_route@12.ops[1]: 'store tmp%58#0 to l-stack (copy)'
debug: Replaced main_get_application_route@12.ops[3]: 'load tmp%58#0' with 'load tmp%58#0 from l-stack (no copy)'
debug: Inserted main_get_application_route@12.ops[5]: 'store tmp%59#0 to l-stack (copy)'
debug: Replaced main_get_application_route@12.ops[7]: 'load tmp%59#0' with 'load tmp%59#0 from l-stack (no copy)'
debug: Inserted main_get_application_route@12.ops[10]: 'store tmp%60#0 to l-stack (copy)'
debug: Replaced main_get_application_route@12.ops[12]: 'load tmp%60#0' with 'load tmp%60#0 from l-stack (no copy)'
debug: Inserted main_get_application_route@12.ops[19]: 'store tmp%62#0 to l-stack (copy)'
debug: Replaced main_get_application_route@12.ops[21]: 'load tmp%62#0' with 'load tmp%62#0 from l-stack (no copy)'
debug: Inserted main_get_application_route@12.ops[15]: 'store tmp%61#0 to l-stack (copy)'
debug: Replaced main_get_application_route@12.ops[18]: 'load tmp%61#0' with 'load tmp%61#0 from l-stack (no copy)'
debug: Inserted main_get_an_int_route@13.ops[1]: 'store tmp%63#0 to l-stack (copy)'
debug: Replaced main_get_an_int_route@13.ops[3]: 'load tmp%63#0' with 'load tmp%63#0 from l-stack (no copy)'
debug: Inserted main_get_an_int_route@13.ops[5]: 'store tmp%64#0 to l-stack (copy)'
debug: Replaced main_get_an_int_route@13.ops[7]: 'load tmp%64#0' with 'load tmp%64#0 from l-stack (no copy)'
debug: Inserted main_get_an_int_route@13.ops[10]: 'store tmp%65#0 to l-stack (copy)'
debug: Replaced main_get_an_int_route@13.ops[12]: 'load tmp%65#0' with 'load tmp%65#0 from l-stack (no copy)'
debug: Inserted main_get_an_int_route@13.ops[19]: 'store tmp%67#0 to l-stack (copy)'
debug: Replaced main_get_an_int_route@13.ops[21]: 'load tmp%67#0' with 'load tmp%67#0 from l-stack (no copy)'
debug: Inserted main_get_an_int_route@13.ops[15]: 'store tmp%66#0 to l-stack (copy)'
debug: Replaced main_get_an_int_route@13.ops[18]: 'load tmp%66#0' with 'load tmp%66#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[1]: 'store tmp%68#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[3]: 'load tmp%68#0' with 'load tmp%68#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[5]: 'store tmp%69#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[7]: 'load tmp%69#0' with 'load tmp%69#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[10]: 'store tmp%70#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[12]: 'load tmp%70#0' with 'load tmp%70#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[15]: 'store tmp%71#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[17]: 'load tmp%71#0' with 'load tmp%71#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[19]: 'store tmp%72#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[21]: 'load tmp%72#0' with 'load tmp%72#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[25]: 'store tmp%74#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[27]: 'load tmp%74#0' with 'load tmp%74#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[29]: 'store tmp%75#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[31]: 'load tmp%75#0' with 'load tmp%75#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[35]: 'store tmp%77#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[37]: 'load tmp%77#0' with 'load tmp%77#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[39]: 'store tmp%78#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[41]: 'load tmp%78#0' with 'load tmp%78#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[45]: 'store tmp%80#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[47]: 'load tmp%80#0' with 'load tmp%80#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[49]: 'store tmp%81#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[51]: 'load tmp%81#0' with 'load tmp%81#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[55]: 'store tmp%83#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[57]: 'load tmp%83#0' with 'load tmp%83#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[59]: 'store tmp%84#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[61]: 'load tmp%84#0' with 'load tmp%84#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[65]: 'store tmp%86#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[67]: 'load tmp%86#0' with 'load tmp%86#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[69]: 'store tmp%87#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[71]: 'load tmp%87#0' with 'load tmp%87#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[79]: 'store tmp%91#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%91#0' with 'load tmp%91#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[77]: 'store tmp%90#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%90#0' with 'load tmp%90#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[75]: 'store tmp%89#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%89#0' with 'load tmp%89#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[73]: 'store tmp%88#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%88#0' with 'load tmp%88#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[63]: 'store tmp%85#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%85#0' with 'load tmp%85#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[53]: 'store tmp%82#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%82#0' with 'load tmp%82#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[43]: 'store tmp%79#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%79#0' with 'load tmp%79#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[33]: 'store tmp%76#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%76#0' with 'load tmp%76#0 from l-stack (no copy)'
debug: Inserted main_method_with_default_args_route@14.ops[23]: 'store tmp%73#0 to l-stack (copy)'
debug: Replaced main_method_with_default_args_route@14.ops[89]: 'load tmp%73#0' with 'load tmp%73#0 from l-stack (no copy)'
debug: Inserted main_bare_routing@17.ops[1]: 'store tmp%92#0 to l-stack (copy)'
debug: Replaced main_bare_routing@17.ops[3]: 'load tmp%92#0' with 'load tmp%92#0 from l-stack (no copy)'
debug: Inserted main_bare_abi_config@18.ops[1]: 'store tmp%93#0 to l-stack (copy)'
debug: Replaced main_bare_abi_config@18.ops[3]: 'load tmp%93#0' with 'load tmp%93#0 from l-stack (no copy)'
debug: Inserted main_bare_abi_config@18.ops[5]: 'store tmp%94#0 to l-stack (copy)'
debug: Replaced main_bare_abi_config@18.ops[7]: 'load tmp%94#0' with 'load tmp%94#0 from l-stack (no copy)'
debug: Found 4 edge set/s for examples.abi_routing.contract.Reference.approval_program
debug: Simplified txn OnCompletion; int 1; swap to int 1; txn OnCompletion
debug: Simplified uncover 3; uncover 3; uncover 3; uncover 3 to 
debug: Simplified uncover 8; uncover 8; uncover 8; uncover 8; uncover 8; uncover 8; uncover 8; uncover 8; uncover 8 to 
debug: Inserted noop_with_uint64_block@0.ops[6]: 'store result#0 to l-stack (copy)'
debug: Replaced noop_with_uint64_block@0.ops[8]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted noop_with_uint64_block@0.ops[10]: 'store val_as_bytes%1#0 to l-stack (copy)'
debug: Replaced noop_with_uint64_block@0.ops[12]: 'load val_as_bytes%1#0' with 'load val_as_bytes%1#0 from l-stack (no copy)'
debug: Inserted noop_with_uint64_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced noop_with_uint64_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted noop_with_uint64_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced noop_with_uint64_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted full_abi_config_block@0.ops[6]: 'store result#0 to l-stack (copy)'
debug: Replaced full_abi_config_block@0.ops[8]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted full_abi_config_block@0.ops[10]: 'store val_as_bytes%1#0 to l-stack (copy)'
debug: Replaced full_abi_config_block@0.ops[12]: 'load val_as_bytes%1#0' with 'load val_as_bytes%1#0 from l-stack (no copy)'
debug: Inserted full_abi_config_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced full_abi_config_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted full_abi_config_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced full_abi_config_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted mixed_oca_block@0.ops[6]: 'store result#0 to l-stack (copy)'
debug: Replaced mixed_oca_block@0.ops[8]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted mixed_oca_block@0.ops[10]: 'store val_as_bytes%1#0 to l-stack (copy)'
debug: Replaced mixed_oca_block@0.ops[12]: 'load val_as_bytes%1#0' with 'load val_as_bytes%1#0 from l-stack (no copy)'
debug: Inserted mixed_oca_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced mixed_oca_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted mixed_oca_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced mixed_oca_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[20]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[22]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[33]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[35]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[15]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[18]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[18]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[22]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[10]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[16]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[18]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[21]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[23]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[33]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[35]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[39]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[41]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[44]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[46]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[30]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[33]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted with_transactions_block@0.ops[29]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced with_transactions_block@0.ops[34]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted compare_assets_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced compare_assets_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted get_address_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced get_address_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[19]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[28]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[30]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[35]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[37]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[42]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[44]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[50]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[52]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[55]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[57]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[63]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[65]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[68]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[70]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[76]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[78]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[81]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[83]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[87]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[89]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[92]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[94]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[98]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[100]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[103]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[105]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[15]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[18]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted method_with_default_args_block@0.ops[25]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced method_with_default_args_block@0.ops[28]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted __init___block@0.ops[19]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced __init___block@0.ops[21]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted __init___block@0.ops[10]: 'store new_state_value%1#0 to l-stack (copy)'
debug: Replaced __init___block@0.ops[13]: 'load new_state_value%1#0' with 'load new_state_value%1#0 from l-stack (no copy)'
debug: Simplified txn Sender; byte "creator"; swap to byte "creator"; txn Sender
info: Writing abi_routing/out/contract.approval.teal
info: Writing abi_routing/out/contract.approval.debug.teal
info: Writing abi_routing/out/contract.clear.teal
info: Writing abi_routing/out/contract.clear.debug.teal
info: Writing abi_routing/out/application.json
>> exit code = 0