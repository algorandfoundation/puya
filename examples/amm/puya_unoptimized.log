debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['amm'], output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.amm.contract.tokens_to_mint
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let a_amount#1: uint64 = undefined while trying to resolve 'a_amount' in block@4
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2) in block@2
debug: Created Phi assignment: let a_amount#2: uint64 = undefined while trying to resolve 'a_amount' in block@3
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0) in block@0
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0
debug: Deleting Phi assignment: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1)
debug: Replaced trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0 in current definition for 1 blocks
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0
debug: Deleting Phi assignment: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3)
debug: Replaced trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_amount#1: uint64 = undefined while trying to resolve 'b_amount' in block@4
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2) in block@2
debug: Created Phi assignment: let b_amount#2: uint64 = undefined while trying to resolve 'b_amount' in block@3
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0) in block@0
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0
debug: Deleting Phi assignment: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1)
debug: Replaced trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0 in current definition for 1 blocks
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0
debug: Deleting Phi assignment: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3)
debug: Replaced trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let pool_balance#1: uint64 = undefined while trying to resolve 'pool_balance' in block@4
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2) in block@2
debug: Created Phi assignment: let pool_balance#2: uint64 = undefined while trying to resolve 'pool_balance' in block@3
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0) in block@0
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1)
debug: Replaced trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0 in current definition for 1 blocks
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3)
debug: Replaced trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let a_balance#1: uint64 = undefined while trying to resolve 'a_balance' in block@4
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2) in block@2
debug: Created Phi assignment: let a_balance#2: uint64 = undefined while trying to resolve 'a_balance' in block@3
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0) in block@0
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0
debug: Deleting Phi assignment: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1)
debug: Replaced trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0 in current definition for 1 blocks
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0
debug: Deleting Phi assignment: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3)
debug: Replaced trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_balance#1: uint64 = undefined while trying to resolve 'b_balance' in block@4
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2) in block@2
debug: Created Phi assignment: let b_balance#2: uint64 = undefined while trying to resolve 'b_balance' in block@3
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0) in block@0
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0
debug: Deleting Phi assignment: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1)
debug: Replaced trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0 in current definition for 1 blocks
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0
debug: Deleting Phi assignment: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3)
debug: Replaced trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function examples.amm.contract.tokens_to_burn
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.tokens_to_swap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.do_asset_transfer
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.set_governor
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.bootstrap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.mint
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.burn
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.swap
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let swap_xfer#1: uint64 = undefined while trying to resolve 'swap_xfer' in block@4
debug: Added swap_xfer#0 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1) in block@1
debug: Added swap_xfer#0 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0
debug: Deleting Phi assignment: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2)
debug: Replaced trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0 in current definition for 1 blocks
debug: Created Phi assignment: let in_supply#2: uint64 = undefined while trying to resolve 'in_supply' in block@4
debug: Added in_supply#0 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1) in block@1
debug: Added in_supply#1 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1, in_supply#1 <- block@2) in block@2
debug: Created Phi assignment: let out_supply#2: uint64 = undefined while trying to resolve 'out_supply' in block@4
debug: Added out_supply#0 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1) in block@1
debug: Added out_supply#1 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1, out_supply#1 <- block@2) in block@2
debug: Created Phi assignment: let out_asset#2: uint64 = undefined while trying to resolve 'out_asset' in block@4
debug: Added out_asset#0 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1) in block@1
debug: Added out_asset#1 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1, out_asset#1 <- block@2) in block@2
debug: Terminated block@4
debug: Building IR for function examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._update_ratio
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.amm.contract.tokens_to_mint
debug: removing unused subroutine examples.amm.contract.tokens_to_burn
debug: removing unused subroutine examples.amm.contract.tokens_to_swap
debug: removing unused subroutine examples.amm.contract.do_asset_transfer
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.mint
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.burn
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.swap
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of examples.amm.contract.ConstantProductAMM at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.amm.contract.ConstantProductAMM.__algopy_default_create in examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetDecimals_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.amm.contract.ConstantProductAMM.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of examples.amm.contract.ConstantProductAMM at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.amm.contract.ConstantProductAMM
debug: lowering array IR nodes in clear program of examples.amm.contract.ConstantProductAMM
debug: optimizing approval program of examples.amm.contract.ConstantProductAMM at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of examples.amm.contract.ConstantProductAMM at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.amm.contract.ConstantProductAMM
debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init, []
amm/contract.py:322 debug: auto reserving slots in examples.amm.contract.tokens_to_mint, []
amm/contract.py:343 debug: auto reserving slots in examples.amm.contract.tokens_to_burn, []
amm/contract.py:349 debug: auto reserving slots in examples.amm.contract.tokens_to_swap, []
amm/contract.py:356 debug: auto reserving slots in examples.amm.contract.do_asset_transfer, []
amm/contract.py:28 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.__init__, []
amm/contract.py:43 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.set_governor, []
amm/contract.py:49 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.bootstrap, []
amm/contract.py:81 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.mint, []
amm/contract.py:147 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.burn, []
amm/contract.py:204 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.swap, []
amm/contract.py:251 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._check_bootstrapped, []
amm/contract.py:255 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._update_ratio, []
amm/contract.py:262 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._check_is_governor, []
amm/contract.py:268 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._create_pool_token, []
amm/contract.py:283 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._do_opt_in, []
amm/contract.py:291 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._current_pool_balance, []
amm/contract.py:295 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._current_a_balance, []
amm/contract.py:299 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._current_b_balance, []
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.amm.contract.ConstantProductAMM
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.tokens_to_mint
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.tokens_to_mint using strategy 'root_operand'
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_mint
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.tokens_to_burn
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.tokens_to_burn using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_burn
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.tokens_to_swap
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.tokens_to_swap using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_swap
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.do_asset_transfer
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.do_asset_transfer using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.do_asset_transfer
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.__init__ using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.set_governor
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.set_governor using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.set_governor
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.bootstrap
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.bootstrap using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.bootstrap
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.mint
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.mint using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.mint
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.burn
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.burn using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.burn
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.swap
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.swap using strategy 'root_operand'
debug: Coalescing in_supply#0 with [in_supply#5, in_supply#1, in_supply#2]
debug: Coalescing out_supply#0 with [out_supply#5, out_supply#1, out_supply#2]
debug: Coalescing out_asset#0 with [out_asset#5, out_asset#1, out_asset#2]
debug: Coalescing resulted in 21 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.swap
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_bootstrapped using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._update_ratio
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._update_ratio using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._update_ratio
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_is_governor using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._create_pool_token using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._do_opt_in using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_pool_balance using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_a_balance using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_b_balance using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 with [examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#1, examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#2, examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#3, examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#4, examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#5, examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#6]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 20 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to amm/out_unoptimized/ConstantProductAMM.ir/ConstantProductAMM.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to amm/out_unoptimized/ConstantProductAMM.ir/ConstantProductAMM.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted tokens_to_mint_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced tokens_to_mint_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted tokens_to_mint_and_contd@1.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced tokens_to_mint_and_contd@1.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted tokens_to_mint_bool_merge@4.ops[1]: 'l-store-copy is_initial_mint#0 0'
debug: Replaced tokens_to_mint_bool_merge@4.ops[3]: 'v-load is_initial_mint#0' with 'l-load is_initial_mint#0'
debug: Inserted tokens_to_mint_if_body@5.ops[3]: 'l-store-copy tmp%2#0 0'
debug: Replaced tokens_to_mint_if_body@5.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted tokens_to_mint_if_body@5.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced tokens_to_mint_if_body@5.ops[9]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted tokens_to_mint_if_body@5.ops[12]: 'l-store-copy tmp%4#0 0'
debug: Replaced tokens_to_mint_if_body@5.ops[14]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[3]: 'l-store-copy tmp%5#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[18]: 'l-store-copy tmp%8#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[20]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[33]: 'l-store-copy tmp%11#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[35]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[40]: 'l-store-copy tmp%12#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[42]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[14]: 'l-store-copy tmp%7#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[17]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[30]: 'l-store-copy tmp%10#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[33]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[38]: 'l-store-copy b_ratio#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[41]: 'v-load b_ratio#0' with 'l-load b_ratio#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[10]: 'l-store-copy tmp%6#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[17]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[27]: 'l-store-copy tmp%9#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[34]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted tokens_to_mint_after_if_else@6.ops[23]: 'l-store-copy a_ratio#0 0'
debug: Replaced tokens_to_mint_after_if_else@6.ops[43]: 'v-load a_ratio#0' with 'l-load a_ratio#0'
debug: Inserted tokens_to_mint_if_body@7.ops[3]: 'l-store-copy tmp%13#0 0'
debug: Replaced tokens_to_mint_if_body@7.ops[5]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted tokens_to_mint_if_body@7.ops[8]: 'l-store-copy tmp%14#0 0'
debug: Replaced tokens_to_mint_if_body@7.ops[10]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted tokens_to_mint_else_body@8.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced tokens_to_mint_else_body@8.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted tokens_to_mint_else_body@8.ops[8]: 'l-store-copy tmp%16#0 0'
debug: Replaced tokens_to_mint_else_body@8.ops[10]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted tokens_to_burn_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced tokens_to_burn_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted tokens_to_burn_block@0.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced tokens_to_burn_block@0.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted tokens_to_burn_block@0.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced tokens_to_burn_block@0.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted tokens_to_burn_block@0.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced tokens_to_burn_block@0.ops[22]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted tokens_to_burn_block@0.ops[11]: 'l-store-copy issued#0 0'
debug: Replaced tokens_to_burn_block@0.ops[19]: 'v-load issued#0' with 'l-load issued#0'
debug: Inserted tokens_to_swap_block@0.ops[15]: 'l-store-copy tmp%3#0 0'
debug: Replaced tokens_to_swap_block@0.ops[17]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted tokens_to_swap_block@0.ops[22]: 'l-store-copy tmp%4#0 0'
debug: Replaced tokens_to_swap_block@0.ops[24]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted tokens_to_swap_block@0.ops[27]: 'l-store-copy tmp%5#0 0'
debug: Replaced tokens_to_swap_block@0.ops[29]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted tokens_to_swap_block@0.ops[30]: 'l-store-copy out_total#0 0'
debug: Replaced tokens_to_swap_block@0.ops[32]: 'v-load out_total#0' with 'l-load out_total#0'
debug: Inserted tokens_to_swap_block@0.ops[35]: 'l-store-copy tmp%6#0 0'
debug: Replaced tokens_to_swap_block@0.ops[37]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted tokens_to_swap_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced tokens_to_swap_block@0.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted tokens_to_swap_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced tokens_to_swap_block@0.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted tokens_to_swap_block@0.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced tokens_to_swap_block@0.ops[15]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted tokens_to_swap_block@0.ops[21]: 'l-store-copy in_total#0 0'
debug: Replaced tokens_to_swap_block@0.ops[37]: 'v-load in_total#0' with 'l-load in_total#0'
debug: Inserted do_asset_transfer_block@0.ops[6]: 'l-store-copy inner_txn_params%0%%param_AssetReceiver_idx_0#0 0'
debug: Replaced do_asset_transfer_block@0.ops[8]: 'v-load inner_txn_params%0%%param_AssetReceiver_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetReceiver_idx_0#0'
debug: Inserted do_asset_transfer_block@0.ops[4]: 'l-store-copy inner_txn_params%0%%param_AssetAmount_idx_0#0 0'
debug: Replaced do_asset_transfer_block@0.ops[11]: 'v-load inner_txn_params%0%%param_AssetAmount_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetAmount_idx_0#0'
debug: Inserted do_asset_transfer_block@0.ops[2]: 'l-store-copy inner_txn_params%0%%param_XferAsset_idx_0#0 0'
debug: Replaced do_asset_transfer_block@0.ops[14]: 'v-load inner_txn_params%0%%param_XferAsset_idx_0#0' with 'l-load inner_txn_params%0%%param_XferAsset_idx_0#0'
debug: Inserted __init___block@0.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced __init___block@0.ops[10]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted bootstrap_block@0.ops[8]: 'l-store-copy reinterpret_bool%0#0 0'
debug: Replaced bootstrap_block@0.ops[10]: 'v-load reinterpret_bool%0#0' with 'l-load reinterpret_bool%0#0'
debug: Inserted bootstrap_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced bootstrap_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted bootstrap_block@0.ops[18]: 'l-store-copy tmp%1#0 0'
debug: Replaced bootstrap_block@0.ops[20]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted bootstrap_block@0.ops[23]: 'l-store-copy tmp%2#0 0'
debug: Replaced bootstrap_block@0.ops[25]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted bootstrap_block@0.ops[35]: 'l-store-copy tmp%5#0 0'
debug: Replaced bootstrap_block@0.ops[37]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted bootstrap_block@0.ops[41]: 'l-store-copy tmp%6#0 0'
debug: Replaced bootstrap_block@0.ops[43]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted bootstrap_block@0.ops[46]: 'l-store-copy tmp%7#0 0'
debug: Replaced bootstrap_block@0.ops[48]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted bootstrap_block@0.ops[53]: 'l-store-copy tmp%8#0 0'
debug: Replaced bootstrap_block@0.ops[55]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted bootstrap_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced bootstrap_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted bootstrap_block@0.ops[32]: 'l-store-copy tmp%4#0 0'
debug: Replaced bootstrap_block@0.ops[35]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted bootstrap_block@0.ops[66]: 'l-store-copy tmp%9#0 0'
debug: Replaced bootstrap_block@0.ops[69]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted bootstrap_block@0.ops[74]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced bootstrap_block@0.ops[77]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted bootstrap_block@0.ops[84]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced bootstrap_block@0.ops[87]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted bootstrap_block@0.ops[94]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced bootstrap_block@0.ops[97]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted bootstrap_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced bootstrap_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted bootstrap_block@0.ops[31]: 'l-store-copy tmp%3#0 0'
debug: Replaced bootstrap_block@0.ops[36]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted bootstrap_block@0.ops[78]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced bootstrap_block@0.ops[82]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted bootstrap_block@0.ops[89]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced bootstrap_block@0.ops[93]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted bootstrap_block@0.ops[100]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced bootstrap_block@0.ops[104]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted mint_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced mint_block@0.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted mint_block@0.ops[25]: 'l-store-copy tmp%1#0 0'
debug: Replaced mint_block@0.ops[27]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted mint_block@0.ops[39]: 'l-store-copy tmp%2#0 0'
debug: Replaced mint_block@0.ops[41]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted mint_block@0.ops[51]: 'l-store-copy tmp%5#0 0'
debug: Replaced mint_block@0.ops[53]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted mint_block@0.ops[63]: 'l-store-copy tmp%8#0 0'
debug: Replaced mint_block@0.ops[65]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted mint_block@0.ops[75]: 'l-store-copy tmp%11#0 0'
debug: Replaced mint_block@0.ops[77]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted mint_block@0.ops[92]: 'l-store-copy tmp%13#0 0'
debug: Replaced mint_block@0.ops[94]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted mint_block@0.ops[98]: 'l-store-copy tmp%14#0 0'
debug: Replaced mint_block@0.ops[100]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted mint_block@0.ops[103]: 'l-store-copy tmp%15#0 0'
debug: Replaced mint_block@0.ops[105]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted mint_block@0.ops[115]: 'l-store-copy tmp%18#0 0'
debug: Replaced mint_block@0.ops[117]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted mint_block@0.ops[132]: 'l-store-copy tmp%20#0 0'
debug: Replaced mint_block@0.ops[134]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted mint_block@0.ops[138]: 'l-store-copy tmp%21#0 0'
debug: Replaced mint_block@0.ops[140]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted mint_block@0.ops[143]: 'l-store-copy tmp%22#0 0'
debug: Replaced mint_block@0.ops[145]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted mint_block@0.ops[165]: 'l-store-copy tmp%28#0 0'
debug: Replaced mint_block@0.ops[167]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted mint_block@0.ops[168]: 'l-store-copy to_mint#0 0'
debug: Replaced mint_block@0.ops[170]: 'v-load to_mint#0' with 'l-load to_mint#0'
debug: Inserted mint_block@0.ops[173]: 'l-store-copy tmp%29#0 0'
debug: Replaced mint_block@0.ops[175]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted mint_block@0.ops[4]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced mint_block@0.ops[7]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted mint_block@0.ops[19]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced mint_block@0.ops[22]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted mint_block@0.ops[34]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced mint_block@0.ops[37]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted mint_block@0.ops[50]: 'l-store-copy tmp%4#0 0'
debug: Replaced mint_block@0.ops[53]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted mint_block@0.ops[63]: 'l-store-copy tmp%7#0 0'
debug: Replaced mint_block@0.ops[66]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted mint_block@0.ops[76]: 'l-store-copy tmp%10#0 0'
debug: Replaced mint_block@0.ops[79]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted mint_block@0.ops[91]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced mint_block@0.ops[94]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted mint_block@0.ops[118]: 'l-store-copy tmp%17#0 0'
debug: Replaced mint_block@0.ops[121]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted mint_block@0.ops[133]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced mint_block@0.ops[136]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted mint_block@0.ops[191]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced mint_block@0.ops[194]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted mint_block@0.ops[48]: 'l-store-copy tmp%3#0 0'
debug: Replaced mint_block@0.ops[53]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted mint_block@0.ops[62]: 'l-store-copy tmp%6#0 0'
debug: Replaced mint_block@0.ops[67]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted mint_block@0.ops[76]: 'l-store-copy tmp%9#0 0'
debug: Replaced mint_block@0.ops[81]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted mint_block@0.ops[119]: 'l-store-copy tmp%16#0 0'
debug: Replaced mint_block@0.ops[124]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted mint_block@0.ops[6]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced mint_block@0.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted mint_block@0.ops[22]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced mint_block@0.ops[27]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted mint_block@0.ops[38]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced mint_block@0.ops[43]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted mint_block@0.ops[99]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced mint_block@0.ops[104]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted mint_block@0.ops[143]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced mint_block@0.ops[148]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted mint_block@0.ops[202]: 'l-store-copy maybe_value%5#0 1'
debug: Replaced mint_block@0.ops[207]: 'v-load maybe_value%5#0' with 'l-load maybe_value%5#0'
debug: Inserted mint_block@0.ops[176]: 'l-store-copy tmp%27#0 0'
debug: Replaced mint_block@0.ops[182]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted mint_block@0.ops[173]: 'l-store-copy tmp%26#0 0'
debug: Replaced mint_block@0.ops[182]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted mint_block@0.ops[93]: 'l-store-copy tmp%12#0 0'
debug: Replaced mint_block@0.ops[104]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted mint_block@0.ops[138]: 'l-store-copy tmp%19#0 0'
debug: Replaced mint_block@0.ops[149]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted mint_block@0.ops[200]: 'l-store-copy tmp%30#0 0'
debug: Replaced mint_block@0.ops[211]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted mint_block@0.ops[172]: 'l-store-copy tmp%25#0 0'
debug: Replaced mint_block@0.ops[184]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted mint_block@0.ops[170]: 'l-store-copy tmp%24#0 0'
debug: Replaced mint_block@0.ops[184]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted mint_block@0.ops[168]: 'l-store-copy tmp%23#0 0'
debug: Replaced mint_block@0.ops[184]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted mint_block@0.ops[196]: 'l-store-copy to_mint#0 0'
debug: Replaced mint_block@0.ops[217]: 'v-load to_mint#0' with 'l-load to_mint#0'
debug: Inserted burn_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced burn_block@0.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted burn_block@0.ops[25]: 'l-store-copy tmp%1#0 0'
debug: Replaced burn_block@0.ops[27]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted burn_block@0.ops[39]: 'l-store-copy tmp%2#0 0'
debug: Replaced burn_block@0.ops[41]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted burn_block@0.ops[51]: 'l-store-copy tmp%5#0 0'
debug: Replaced burn_block@0.ops[53]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted burn_block@0.ops[57]: 'l-store-copy tmp%6#0 0'
debug: Replaced burn_block@0.ops[59]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted burn_block@0.ops[62]: 'l-store-copy tmp%7#0 0'
debug: Replaced burn_block@0.ops[64]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted burn_block@0.ops[79]: 'l-store-copy tmp%9#0 0'
debug: Replaced burn_block@0.ops[81]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted burn_block@0.ops[91]: 'l-store-copy tmp%12#0 0'
debug: Replaced burn_block@0.ops[93]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted burn_block@0.ops[96]: 'l-store-copy tmp%13#0 0'
debug: Replaced burn_block@0.ops[98]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted burn_block@0.ops[109]: 'l-store-copy tmp%16#0 0'
debug: Replaced burn_block@0.ops[111]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted burn_block@0.ops[122]: 'l-store-copy tmp%19#0 0'
debug: Replaced burn_block@0.ops[124]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted burn_block@0.ops[4]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced burn_block@0.ops[7]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted burn_block@0.ops[19]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced burn_block@0.ops[22]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted burn_block@0.ops[34]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced burn_block@0.ops[37]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted burn_block@0.ops[50]: 'l-store-copy tmp%4#0 0'
debug: Replaced burn_block@0.ops[53]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted burn_block@0.ops[76]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced burn_block@0.ops[79]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted burn_block@0.ops[92]: 'l-store-copy tmp%11#0 0'
debug: Replaced burn_block@0.ops[95]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted burn_block@0.ops[137]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced burn_block@0.ops[140]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted burn_block@0.ops[151]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced burn_block@0.ops[154]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted burn_block@0.ops[48]: 'l-store-copy tmp%3#0 0'
debug: Replaced burn_block@0.ops[53]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted burn_block@0.ops[91]: 'l-store-copy tmp%10#0 0'
debug: Replaced burn_block@0.ops[96]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted burn_block@0.ops[112]: 'l-store-copy tmp%15#0 0'
debug: Replaced burn_block@0.ops[116]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted burn_block@0.ops[126]: 'l-store-copy tmp%18#0 0'
debug: Replaced burn_block@0.ops[130]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted burn_block@0.ops[6]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced burn_block@0.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted burn_block@0.ops[22]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced burn_block@0.ops[27]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted burn_block@0.ops[38]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced burn_block@0.ops[43]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted burn_block@0.ops[82]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced burn_block@0.ops[87]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted burn_block@0.ops[147]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced burn_block@0.ops[152]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted burn_block@0.ops[162]: 'l-store-copy maybe_value%5#0 1'
debug: Replaced burn_block@0.ops[167]: 'v-load maybe_value%5#0' with 'l-load maybe_value%5#0'
debug: Inserted burn_block@0.ops[113]: 'l-store-copy tmp%14#0 0'
debug: Replaced burn_block@0.ops[120]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted burn_block@0.ops[128]: 'l-store-copy tmp%17#0 0'
debug: Replaced burn_block@0.ops[135]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted burn_block@0.ops[111]: 'l-store-copy pool_balance#0 0'
debug: Replaced burn_block@0.ops[120]: 'v-load pool_balance#0' with 'l-load pool_balance#0'
debug: Inserted burn_block@0.ops[76]: 'l-store-copy tmp%8#0 0'
debug: Replaced burn_block@0.ops[87]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted burn_block@0.ops[145]: 'l-store-copy tmp%20#0 0'
debug: Replaced burn_block@0.ops[156]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted burn_block@0.ops[161]: 'l-store-copy tmp%21#0 0'
debug: Replaced burn_block@0.ops[172]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted burn_block@0.ops[122]: 'l-store-copy pool_balance#0 2'
debug: Replaced burn_block@0.ops[137]: 'v-load pool_balance#0' with 'l-load pool_balance#0'
debug: Inserted burn_block@0.ops[129]: 'l-store-copy a_amt#0 1'
debug: Replaced burn_block@0.ops[160]: 'v-load a_amt#0' with 'l-load a_amt#0'
debug: Inserted burn_block@0.ops[145]: 'l-store-copy b_amt#0 1'
debug: Replaced burn_block@0.ops[177]: 'v-load b_amt#0' with 'l-load b_amt#0'
debug: Inserted swap_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced swap_block@0.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted swap_block@0.ops[25]: 'l-store-copy tmp%1#0 0'
debug: Replaced swap_block@0.ops[27]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted swap_block@0.ops[31]: 'l-store-copy tmp%2#0 0'
debug: Replaced swap_block@0.ops[33]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted swap_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced swap_block@0.ops[38]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted swap_block@0.ops[48]: 'l-store-copy tmp%6#0 0'
debug: Replaced swap_block@0.ops[50]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted swap_block@0.ops[4]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced swap_block@0.ops[7]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted swap_block@0.ops[19]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced swap_block@0.ops[22]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted swap_block@0.ops[46]: 'l-store-copy tmp%5#0 0'
debug: Replaced swap_block@0.ops[49]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted swap_block@0.ops[58]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced swap_block@0.ops[61]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted swap_block@0.ops[66]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced swap_block@0.ops[69]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted swap_block@0.ops[44]: 'l-store-copy tmp%4#0 0'
debug: Replaced swap_block@0.ops[49]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted swap_block@0.ops[74]: 'l-store-copy tmp%7#0 0'
debug: Replaced swap_block@0.ops[78]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted swap_block@0.ops[6]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced swap_block@0.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted swap_block@0.ops[22]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced swap_block@0.ops[27]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted swap_block@0.ops[71]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced swap_block@0.ops[80]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted swap_block@0.ops[63]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced swap_block@0.ops[80]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted swap_switch_case_0@1.ops[1]: 'l-store-copy tmp%8#0 0'
debug: Replaced swap_switch_case_0@1.ops[3]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted swap_switch_case_0@1.ops[6]: 'l-store-copy tmp%9#0 0'
debug: Replaced swap_switch_case_0@1.ops[8]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted swap_switch_case_0@1.ops[13]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced swap_switch_case_0@1.ops[16]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted swap_switch_case_0@1.ops[15]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced swap_switch_case_0@1.ops[19]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted swap_switch_case_1@2.ops[1]: 'l-store-copy tmp%10#0 0'
debug: Replaced swap_switch_case_1@2.ops[3]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted swap_switch_case_1@2.ops[6]: 'l-store-copy tmp%11#0 0'
debug: Replaced swap_switch_case_1@2.ops[8]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted swap_switch_case_1@2.ops[13]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced swap_switch_case_1@2.ops[16]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted swap_switch_case_1@2.ops[15]: 'l-store-copy maybe_value%5#0 1'
debug: Replaced swap_switch_case_1@2.ops[19]: 'v-load maybe_value%5#0' with 'l-load maybe_value%5#0'
debug: Inserted swap_switch_case_next@4.ops[2]: 'l-store-copy tmp%12#0 0'
debug: Replaced swap_switch_case_next@4.ops[4]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted swap_switch_case_next@4.ops[8]: 'l-store-copy tmp%13#0 0'
debug: Replaced swap_switch_case_next@4.ops[10]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted swap_switch_case_next@4.ops[11]: 'l-store-copy to_swap#0 0'
debug: Replaced swap_switch_case_next@4.ops[13]: 'v-load to_swap#0' with 'l-load to_swap#0'
debug: Inserted swap_switch_case_next@4.ops[16]: 'l-store-copy tmp%14#0 0'
debug: Replaced swap_switch_case_next@4.ops[18]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted swap_switch_case_next@4.ops[21]: 'l-store-copy tmp%15#0 0'
debug: Replaced swap_switch_case_next@4.ops[23]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted swap_switch_case_next@4.ops[14]: 'l-store-copy to_swap#0 0'
debug: Replaced swap_switch_case_next@4.ops[26]: 'v-load to_swap#0' with 'l-load to_swap#0'
debug: Inserted _check_bootstrapped_block@0.ops[8]: 'l-store-copy reinterpret_bool%0#0 0'
debug: Replaced _check_bootstrapped_block@0.ops[10]: 'v-load reinterpret_bool%0#0' with 'l-load reinterpret_bool%0#0'
debug: Inserted _check_bootstrapped_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _check_bootstrapped_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _check_bootstrapped_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _check_bootstrapped_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _update_ratio_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _update_ratio_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _update_ratio_block@0.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced _update_ratio_block@0.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _update_ratio_block@0.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced _update_ratio_block@0.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted _update_ratio_block@0.ops[18]: 'l-store-copy tmp%3#0 0'
debug: Replaced _update_ratio_block@0.ops[21]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted _update_ratio_block@0.ops[4]: 'l-store-copy a_balance#0 0'
debug: Replaced _update_ratio_block@0.ops[11]: 'v-load a_balance#0' with 'l-load a_balance#0'
debug: Inserted _update_ratio_block@0.ops[10]: 'l-store-copy b_balance#0 1'
debug: Replaced _update_ratio_block@0.ops[18]: 'v-load b_balance#0' with 'l-load b_balance#0'
debug: Inserted _check_is_governor_block@0.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced _check_is_governor_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _check_is_governor_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _check_is_governor_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _check_is_governor_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _check_is_governor_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _check_is_governor_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _check_is_governor_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _create_pool_token_block@0.ops[17]: 'l-store-copy tmp%0#0 0'
debug: Replaced _create_pool_token_block@0.ops[19]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _create_pool_token_block@0.ops[43]: 'l-store-copy inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0 0'
debug: Replaced _create_pool_token_block@0.ops[45]: 'v-load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0' with 'l-load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0'
debug: Inserted _create_pool_token_block@0.ops[4]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _create_pool_token_block@0.ops[7]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _create_pool_token_block@0.ops[11]: 'l-store-copy check%0#0 1'
debug: Replaced _create_pool_token_block@0.ops[14]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _create_pool_token_block@0.ops[28]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced _create_pool_token_block@0.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted _create_pool_token_block@0.ops[35]: 'l-store-copy check%1#0 1'
debug: Replaced _create_pool_token_block@0.ops[38]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted _create_pool_token_block@0.ops[6]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _create_pool_token_block@0.ops[10]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _create_pool_token_block@0.ops[31]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced _create_pool_token_block@0.ops[35]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted _create_pool_token_block@0.ops[14]: 'l-store-copy value%0#0 1'
debug: Replaced _create_pool_token_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _create_pool_token_block@0.ops[40]: 'l-store-copy value%1#0 1'
debug: Replaced _create_pool_token_block@0.ops[45]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted _create_pool_token_block@0.ops[49]: 'l-store-copy inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 0'
debug: Replaced _create_pool_token_block@0.ops[56]: 'v-load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0' with 'l-load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0'
debug: Inserted _create_pool_token_block@0.ops[26]: 'l-store-copy tmp%1#0 0'
debug: Replaced _create_pool_token_block@0.ops[45]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _create_pool_token_block@0.ops[48]: 'l-store-copy inner_txn_params%0%%param_ConfigAssetName_idx_0#0 0'
debug: Replaced _create_pool_token_block@0.ops[66]: 'v-load inner_txn_params%0%%param_ConfigAssetName_idx_0#0' with 'l-load inner_txn_params%0%%param_ConfigAssetName_idx_0#0'
debug: Inserted _create_pool_token_next_txn@1.ops[2]: 'l-store-copy tmp%2#0 0'
debug: Replaced _create_pool_token_next_txn@1.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted _do_opt_in_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _do_opt_in_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _current_pool_balance_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _current_pool_balance_block@0.ops[13]: 'l-store-copy check%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[16]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _current_pool_balance_block@0.ops[15]: 'l-store-copy value%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _current_pool_balance_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _current_pool_balance_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _current_a_balance_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _current_a_balance_block@0.ops[13]: 'l-store-copy check%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[16]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _current_a_balance_block@0.ops[15]: 'l-store-copy value%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _current_a_balance_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _current_a_balance_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _current_a_balance_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _current_b_balance_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _current_b_balance_block@0.ops[13]: 'l-store-copy check%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[16]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _current_b_balance_block@0.ops[15]: 'l-store-copy value%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _current_b_balance_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _current_b_balance_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _current_b_balance_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_set_governor_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_set_governor_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_set_governor_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_set_governor_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program_set_governor_route@3.ops[21]: 'l-store-copy reinterpret_Encoded(uint8)%0#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[23]: 'v-load reinterpret_Encoded(uint8)%0#0' with 'l-load reinterpret_Encoded(uint8)%0#0'
debug: Inserted approval_program_set_governor_route@3.ops[25]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[27]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program_set_governor_route@3.ops[29]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[31]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_set_governor_route@3.ops[34]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_set_governor_route@3.ops[36]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Inserted approval_program_bootstrap_route@4.ops[1]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[3]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program_bootstrap_route@4.ops[6]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[8]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program_bootstrap_route@4.ops[11]: 'l-store-copy tmp%11#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[13]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program_bootstrap_route@4.ops[16]: 'l-store-copy tmp%12#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[18]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted approval_program_bootstrap_route@4.ops[21]: 'l-store-copy tmp%13#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[23]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted approval_program_bootstrap_route@4.ops[26]: 'l-store-copy gtxn_idx%0#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[28]: 'v-load gtxn_idx%0#0' with 'l-load gtxn_idx%0#0'
debug: Inserted approval_program_bootstrap_route@4.ops[30]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[32]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted approval_program_bootstrap_route@4.ops[35]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[37]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted approval_program_bootstrap_route@4.ops[40]: 'l-store-copy reinterpret_Encoded(uint8)%1#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[42]: 'v-load reinterpret_Encoded(uint8)%1#0' with 'l-load reinterpret_Encoded(uint8)%1#0'
debug: Inserted approval_program_bootstrap_route@4.ops[44]: 'l-store-copy tmp%14#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[46]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted approval_program_bootstrap_route@4.ops[50]: 'l-store-copy reinterpret_Encoded(uint8)%2#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[52]: 'v-load reinterpret_Encoded(uint8)%2#0' with 'l-load reinterpret_Encoded(uint8)%2#0'
debug: Inserted approval_program_bootstrap_route@4.ops[54]: 'l-store-copy tmp%16#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[56]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted approval_program_bootstrap_route@4.ops[63]: 'l-store-copy tmp%18#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[65]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted approval_program_bootstrap_route@4.ops[67]: 'l-store-copy aggregate%val_as_bytes%0#1 0'
debug: Replaced approval_program_bootstrap_route@4.ops[69]: 'v-load aggregate%val_as_bytes%0#1' with 'l-load aggregate%val_as_bytes%0#1'
debug: Inserted approval_program_bootstrap_route@4.ops[70]: 'l-store-copy aggregate%as_Encoded(uint64)%0#1 0'
debug: Replaced approval_program_bootstrap_route@4.ops[72]: 'v-load aggregate%as_Encoded(uint64)%0#1' with 'l-load aggregate%as_Encoded(uint64)%0#1'
debug: Inserted approval_program_bootstrap_route@4.ops[77]: 'l-store-copy tmp%20#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[79]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted approval_program_bootstrap_route@4.ops[82]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[84]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Inserted approval_program_bootstrap_route@4.ops[73]: 'l-store-copy tmp%19#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[76]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted approval_program_bootstrap_route@4.ops[58]: 'l-store-copy tmp%17#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[62]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted approval_program_bootstrap_route@4.ops[48]: 'l-store-copy tmp%15#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[62]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted approval_program_bootstrap_route@4.ops[29]: 'l-store-copy gtxn_idx%0#0 0'
debug: Replaced approval_program_bootstrap_route@4.ops[62]: 'v-load gtxn_idx%0#0' with 'l-load gtxn_idx%0#0'
debug: Inserted approval_program_mint_route@5.ops[1]: 'l-store-copy tmp%21#0 0'
debug: Replaced approval_program_mint_route@5.ops[3]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted approval_program_mint_route@5.ops[6]: 'l-store-copy tmp%22#0 0'
debug: Replaced approval_program_mint_route@5.ops[8]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted approval_program_mint_route@5.ops[11]: 'l-store-copy tmp%23#0 0'
debug: Replaced approval_program_mint_route@5.ops[13]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted approval_program_mint_route@5.ops[16]: 'l-store-copy tmp%24#0 0'
debug: Replaced approval_program_mint_route@5.ops[18]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted approval_program_mint_route@5.ops[21]: 'l-store-copy tmp%25#0 0'
debug: Replaced approval_program_mint_route@5.ops[23]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted approval_program_mint_route@5.ops[26]: 'l-store-copy gtxn_idx%1#0 0'
debug: Replaced approval_program_mint_route@5.ops[28]: 'v-load gtxn_idx%1#0' with 'l-load gtxn_idx%1#0'
debug: Inserted approval_program_mint_route@5.ops[30]: 'l-store-copy gtxn_type%1#0 0'
debug: Replaced approval_program_mint_route@5.ops[32]: 'v-load gtxn_type%1#0' with 'l-load gtxn_type%1#0'
debug: Inserted approval_program_mint_route@5.ops[35]: 'l-store-copy gtxn_type_matches%1#0 0'
debug: Replaced approval_program_mint_route@5.ops[37]: 'v-load gtxn_type_matches%1#0' with 'l-load gtxn_type_matches%1#0'
debug: Inserted approval_program_mint_route@5.ops[40]: 'l-store-copy tmp%26#0 0'
debug: Replaced approval_program_mint_route@5.ops[42]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted approval_program_mint_route@5.ops[45]: 'l-store-copy gtxn_idx%2#0 0'
debug: Replaced approval_program_mint_route@5.ops[47]: 'v-load gtxn_idx%2#0' with 'l-load gtxn_idx%2#0'
debug: Inserted approval_program_mint_route@5.ops[49]: 'l-store-copy gtxn_type%2#0 0'
debug: Replaced approval_program_mint_route@5.ops[51]: 'v-load gtxn_type%2#0' with 'l-load gtxn_type%2#0'
debug: Inserted approval_program_mint_route@5.ops[54]: 'l-store-copy gtxn_type_matches%2#0 0'
debug: Replaced approval_program_mint_route@5.ops[56]: 'v-load gtxn_type_matches%2#0' with 'l-load gtxn_type_matches%2#0'
debug: Inserted approval_program_mint_route@5.ops[59]: 'l-store-copy reinterpret_Encoded(uint8)%3#0 0'
debug: Replaced approval_program_mint_route@5.ops[61]: 'v-load reinterpret_Encoded(uint8)%3#0' with 'l-load reinterpret_Encoded(uint8)%3#0'
debug: Inserted approval_program_mint_route@5.ops[63]: 'l-store-copy tmp%27#0 0'
debug: Replaced approval_program_mint_route@5.ops[65]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted approval_program_mint_route@5.ops[69]: 'l-store-copy reinterpret_Encoded(uint8)%4#0 0'
debug: Replaced approval_program_mint_route@5.ops[71]: 'v-load reinterpret_Encoded(uint8)%4#0' with 'l-load reinterpret_Encoded(uint8)%4#0'
debug: Inserted approval_program_mint_route@5.ops[73]: 'l-store-copy tmp%29#0 0'
debug: Replaced approval_program_mint_route@5.ops[75]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted approval_program_mint_route@5.ops[79]: 'l-store-copy reinterpret_Encoded(uint8)%5#0 0'
debug: Replaced approval_program_mint_route@5.ops[81]: 'v-load reinterpret_Encoded(uint8)%5#0' with 'l-load reinterpret_Encoded(uint8)%5#0'
debug: Inserted approval_program_mint_route@5.ops[83]: 'l-store-copy tmp%31#0 0'
debug: Replaced approval_program_mint_route@5.ops[85]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted approval_program_mint_route@5.ops[95]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_mint_route@5.ops[97]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Inserted approval_program_mint_route@5.ops[87]: 'l-store-copy tmp%32#0 0'
debug: Replaced approval_program_mint_route@5.ops[93]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted approval_program_mint_route@5.ops[77]: 'l-store-copy tmp%30#0 0'
debug: Replaced approval_program_mint_route@5.ops[93]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted approval_program_mint_route@5.ops[67]: 'l-store-copy tmp%28#0 0'
debug: Replaced approval_program_mint_route@5.ops[93]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted approval_program_mint_route@5.ops[48]: 'l-store-copy gtxn_idx%2#0 0'
debug: Replaced approval_program_mint_route@5.ops[93]: 'v-load gtxn_idx%2#0' with 'l-load gtxn_idx%2#0'
debug: Inserted approval_program_mint_route@5.ops[29]: 'l-store-copy gtxn_idx%1#0 0'
debug: Replaced approval_program_mint_route@5.ops[93]: 'v-load gtxn_idx%1#0' with 'l-load gtxn_idx%1#0'
debug: Inserted approval_program_burn_route@6.ops[1]: 'l-store-copy tmp%33#0 0'
debug: Replaced approval_program_burn_route@6.ops[3]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted approval_program_burn_route@6.ops[6]: 'l-store-copy tmp%34#0 0'
debug: Replaced approval_program_burn_route@6.ops[8]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted approval_program_burn_route@6.ops[11]: 'l-store-copy tmp%35#0 0'
debug: Replaced approval_program_burn_route@6.ops[13]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted approval_program_burn_route@6.ops[16]: 'l-store-copy tmp%36#0 0'
debug: Replaced approval_program_burn_route@6.ops[18]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted approval_program_burn_route@6.ops[21]: 'l-store-copy tmp%37#0 0'
debug: Replaced approval_program_burn_route@6.ops[23]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted approval_program_burn_route@6.ops[26]: 'l-store-copy gtxn_idx%3#0 0'
debug: Replaced approval_program_burn_route@6.ops[28]: 'v-load gtxn_idx%3#0' with 'l-load gtxn_idx%3#0'
debug: Inserted approval_program_burn_route@6.ops[30]: 'l-store-copy gtxn_type%3#0 0'
debug: Replaced approval_program_burn_route@6.ops[32]: 'v-load gtxn_type%3#0' with 'l-load gtxn_type%3#0'
debug: Inserted approval_program_burn_route@6.ops[35]: 'l-store-copy gtxn_type_matches%3#0 0'
debug: Replaced approval_program_burn_route@6.ops[37]: 'v-load gtxn_type_matches%3#0' with 'l-load gtxn_type_matches%3#0'
debug: Inserted approval_program_burn_route@6.ops[40]: 'l-store-copy reinterpret_Encoded(uint8)%6#0 0'
debug: Replaced approval_program_burn_route@6.ops[42]: 'v-load reinterpret_Encoded(uint8)%6#0' with 'l-load reinterpret_Encoded(uint8)%6#0'
debug: Inserted approval_program_burn_route@6.ops[44]: 'l-store-copy tmp%38#0 0'
debug: Replaced approval_program_burn_route@6.ops[46]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted approval_program_burn_route@6.ops[50]: 'l-store-copy reinterpret_Encoded(uint8)%7#0 0'
debug: Replaced approval_program_burn_route@6.ops[52]: 'v-load reinterpret_Encoded(uint8)%7#0' with 'l-load reinterpret_Encoded(uint8)%7#0'
debug: Inserted approval_program_burn_route@6.ops[54]: 'l-store-copy tmp%40#0 0'
debug: Replaced approval_program_burn_route@6.ops[56]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted approval_program_burn_route@6.ops[60]: 'l-store-copy reinterpret_Encoded(uint8)%8#0 0'
debug: Replaced approval_program_burn_route@6.ops[62]: 'v-load reinterpret_Encoded(uint8)%8#0' with 'l-load reinterpret_Encoded(uint8)%8#0'
debug: Inserted approval_program_burn_route@6.ops[64]: 'l-store-copy tmp%42#0 0'
debug: Replaced approval_program_burn_route@6.ops[66]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted approval_program_burn_route@6.ops[75]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_burn_route@6.ops[77]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Inserted approval_program_burn_route@6.ops[68]: 'l-store-copy tmp%43#0 0'
debug: Replaced approval_program_burn_route@6.ops[73]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted approval_program_burn_route@6.ops[58]: 'l-store-copy tmp%41#0 0'
debug: Replaced approval_program_burn_route@6.ops[73]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted approval_program_burn_route@6.ops[48]: 'l-store-copy tmp%39#0 0'
debug: Replaced approval_program_burn_route@6.ops[73]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted approval_program_burn_route@6.ops[29]: 'l-store-copy gtxn_idx%3#0 0'
debug: Replaced approval_program_burn_route@6.ops[73]: 'v-load gtxn_idx%3#0' with 'l-load gtxn_idx%3#0'
debug: Inserted approval_program_swap_route@7.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced approval_program_swap_route@7.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted approval_program_swap_route@7.ops[6]: 'l-store-copy tmp%45#0 0'
debug: Replaced approval_program_swap_route@7.ops[8]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted approval_program_swap_route@7.ops[11]: 'l-store-copy tmp%46#0 0'
debug: Replaced approval_program_swap_route@7.ops[13]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted approval_program_swap_route@7.ops[16]: 'l-store-copy tmp%47#0 0'
debug: Replaced approval_program_swap_route@7.ops[18]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted approval_program_swap_route@7.ops[21]: 'l-store-copy tmp%48#0 0'
debug: Replaced approval_program_swap_route@7.ops[23]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted approval_program_swap_route@7.ops[26]: 'l-store-copy gtxn_idx%4#0 0'
debug: Replaced approval_program_swap_route@7.ops[28]: 'v-load gtxn_idx%4#0' with 'l-load gtxn_idx%4#0'
debug: Inserted approval_program_swap_route@7.ops[30]: 'l-store-copy gtxn_type%4#0 0'
debug: Replaced approval_program_swap_route@7.ops[32]: 'v-load gtxn_type%4#0' with 'l-load gtxn_type%4#0'
debug: Inserted approval_program_swap_route@7.ops[35]: 'l-store-copy gtxn_type_matches%4#0 0'
debug: Replaced approval_program_swap_route@7.ops[37]: 'v-load gtxn_type_matches%4#0' with 'l-load gtxn_type_matches%4#0'
debug: Inserted approval_program_swap_route@7.ops[40]: 'l-store-copy reinterpret_Encoded(uint8)%9#0 0'
debug: Replaced approval_program_swap_route@7.ops[42]: 'v-load reinterpret_Encoded(uint8)%9#0' with 'l-load reinterpret_Encoded(uint8)%9#0'
debug: Inserted approval_program_swap_route@7.ops[44]: 'l-store-copy tmp%49#0 0'
debug: Replaced approval_program_swap_route@7.ops[46]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted approval_program_swap_route@7.ops[50]: 'l-store-copy reinterpret_Encoded(uint8)%10#0 0'
debug: Replaced approval_program_swap_route@7.ops[52]: 'v-load reinterpret_Encoded(uint8)%10#0' with 'l-load reinterpret_Encoded(uint8)%10#0'
debug: Inserted approval_program_swap_route@7.ops[54]: 'l-store-copy tmp%51#0 0'
debug: Replaced approval_program_swap_route@7.ops[56]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted approval_program_swap_route@7.ops[64]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_swap_route@7.ops[66]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Inserted approval_program_swap_route@7.ops[58]: 'l-store-copy tmp%52#0 0'
debug: Replaced approval_program_swap_route@7.ops[62]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted approval_program_swap_route@7.ops[48]: 'l-store-copy tmp%50#0 0'
debug: Replaced approval_program_swap_route@7.ops[62]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted approval_program_swap_route@7.ops[29]: 'l-store-copy gtxn_idx%4#0 0'
debug: Replaced approval_program_swap_route@7.ops[62]: 'v-load gtxn_idx%4#0' with 'l-load gtxn_idx%4#0'
debug: Inserted approval_program_bare_routing@10.ops[1]: 'l-store-copy tmp%53#0 0'
debug: Replaced approval_program_bare_routing@10.ops[4]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted approval_program___algopy_default_create@11.ops[1]: 'l-store-copy tmp%54#0 0'
debug: Replaced approval_program___algopy_default_create@11.ops[3]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted approval_program___algopy_default_create@11.ops[6]: 'l-store-copy tmp%55#0 0'
debug: Replaced approval_program___algopy_default_create@11.ops[8]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__algopy_default_create@13.ops[1]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__algopy_default_create@13.ops[3]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Inserted approval_program_after_if_else@16.ops[1]: 'l-store-copy examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_if_else@16.ops[3]: 'v-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0' with 'l-load examples.amm.contract.ConstantProductAMM.__puya_arc4_router__%0#0'
debug: Found 1 edge set/s for examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init
debug: Found 4 edge set/s for examples.amm.contract.tokens_to_mint
debug: Allocated 2 variable/s to x-stack: and_result%0#0, issued#0
debug: shared x-stack for tokens_to_mint_bool_true@2 -> tokens_to_mint_bool_merge@4: and_result%0#0
debug: shared x-stack for tokens_to_mint_bool_false@3 -> tokens_to_mint_bool_merge@4: and_result%0#0
debug: shared x-stack for tokens_to_mint_after_if_else@6 -> tokens_to_mint_if_body@7: issued#0
debug: shared x-stack for tokens_to_mint_after_if_else@6 -> tokens_to_mint_else_body@8: issued#0
debug: Found 1 edge set/s for examples.amm.contract.do_asset_transfer
debug: Found 2 edge set/s for examples.amm.contract.ConstantProductAMM.swap
debug: Allocated 1 variable/s to x-stack: out_supply#0
debug: shared x-stack for swap_switch_case_0@1 -> swap_switch_case_next@4: out_supply#0
debug: shared x-stack for swap_switch_case_1@2 -> swap_switch_case_next@4: out_supply#0
debug: Found 1 edge set/s for examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for approval_program_set_governor_route@3 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: shared x-stack for approval_program_bootstrap_route@4 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: shared x-stack for approval_program_mint_route@5 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: shared x-stack for approval_program_burn_route@6 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: shared x-stack for approval_program_swap_route@7 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: shared x-stack for approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__algopy_default_create@13 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: shared x-stack for approval_program_after_if_else@16 -> approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17: tmp%0#0
debug: examples.amm.contract.tokens_to_mint f-stack entry: ['a_ratio#0', 'b_ratio#0']
debug: examples.amm.contract.tokens_to_mint f-stack on first store: []
debug: examples.amm.contract.ConstantProductAMM.swap f-stack entry: ['in_supply#0', 'out_asset#0']
debug: examples.amm.contract.ConstantProductAMM.swap f-stack on first store: []
debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init() -> uint64:
amm/contract.py:322 debug: optimizing TEAL subroutine ops examples.amm.contract.tokens_to_mint(pool_balance: uint64, a_balance: uint64, b_balance: uint64, a_amount: uint64, b_amount: uint64) -> uint64:
amm/contract.py:343 debug: optimizing TEAL subroutine ops examples.amm.contract.tokens_to_burn(pool_balance: uint64, supply: uint64, amount: uint64) -> uint64:
amm/contract.py:349 debug: optimizing TEAL subroutine ops examples.amm.contract.tokens_to_swap(in_amount: uint64, in_supply: uint64, out_supply: uint64) -> uint64:
amm/contract.py:356 debug: optimizing TEAL subroutine ops examples.amm.contract.do_asset_transfer(receiver: bytes, asset: uint64, amount: uint64) -> void:
amm/contract.py:28 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.__init__() -> void:
amm/contract.py:43 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.set_governor(new_governor: bytes) -> void:
amm/contract.py:49 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.bootstrap(seed: uint64, a_asset: uint64, b_asset: uint64) -> uint64:
amm/contract.py:81 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.mint(a_xfer: uint64, b_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
amm/contract.py:147 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.burn(pool_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
amm/contract.py:204 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.swap(swap_xfer: uint64, a_asset: uint64, b_asset: uint64) -> void:
amm/contract.py:251 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._check_bootstrapped() -> void:
amm/contract.py:255 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
amm/contract.py:262 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
amm/contract.py:268 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._create_pool_token() -> uint64:
amm/contract.py:283 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._do_opt_in(asset: uint64) -> void:
amm/contract.py:291 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
amm/contract.py:295 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
amm/contract.py:299 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.__algopy_entrypoint_with_init() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
debug: removing explicit jump to fall-through block main_call___init__@1
debug: removing explicit jump to fall-through block main_after_if_else@2
amm/contract.py:322 debug: optimizing TEAL subroutine blocks examples.amm.contract.tokens_to_mint(pool_balance: uint64, a_balance: uint64, b_balance: uint64, a_amount: uint64, b_amount: uint64) -> uint64:
debug: removing explicit jump to fall-through block tokens_to_mint_block@0
debug: removing explicit jump to fall-through block tokens_to_mint_and_contd@1
debug: removing explicit jump to fall-through block tokens_to_mint_bool_true@2
debug: removing explicit jump to fall-through block tokens_to_mint_bool_merge@4
debug: removing explicit jump to fall-through block tokens_to_mint_if_body@5
debug: removing explicit jump to fall-through block tokens_to_mint_if_body@7
amm/contract.py:343 debug: optimizing TEAL subroutine blocks examples.amm.contract.tokens_to_burn(pool_balance: uint64, supply: uint64, amount: uint64) -> uint64:
debug: removing explicit jump to fall-through block tokens_to_burn_block@0
amm/contract.py:349 debug: optimizing TEAL subroutine blocks examples.amm.contract.tokens_to_swap(in_amount: uint64, in_supply: uint64, out_supply: uint64) -> uint64:
debug: removing explicit jump to fall-through block tokens_to_swap_block@0
amm/contract.py:356 debug: optimizing TEAL subroutine blocks examples.amm.contract.do_asset_transfer(receiver: bytes, asset: uint64, amount: uint64) -> void:
debug: removing explicit jump to fall-through block do_asset_transfer_block@0
debug: removing explicit jump to fall-through block do_asset_transfer_next_txn@1
amm/contract.py:28 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.__init__() -> void:
debug: removing explicit jump to fall-through block __init___block@0
amm/contract.py:43 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.set_governor(new_governor: bytes) -> void:
debug: removing explicit jump to fall-through block set_governor_block@0
amm/contract.py:49 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.bootstrap(seed: uint64, a_asset: uint64, b_asset: uint64) -> uint64:
debug: removing explicit jump to fall-through block bootstrap_block@0
amm/contract.py:81 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.mint(a_xfer: uint64, b_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
debug: removing explicit jump to fall-through block mint_block@0
amm/contract.py:147 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.burn(pool_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
debug: removing explicit jump to fall-through block burn_block@0
amm/contract.py:204 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.swap(swap_xfer: uint64, a_asset: uint64, b_asset: uint64) -> void:
debug: removing explicit jump to fall-through block swap_block@0
debug: removing explicit jump to fall-through block swap_switch_case_default@3
debug: removing explicit jump to fall-through block swap_switch_case_next@4
amm/contract.py:251 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._check_bootstrapped() -> void:
debug: removing explicit jump to fall-through block _check_bootstrapped_block@0
amm/contract.py:255 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
debug: removing explicit jump to fall-through block _update_ratio_block@0
amm/contract.py:262 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
debug: removing explicit jump to fall-through block _check_is_governor_block@0
amm/contract.py:268 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._create_pool_token() -> uint64:
debug: removing explicit jump to fall-through block _create_pool_token_block@0
debug: removing explicit jump to fall-through block _create_pool_token_next_txn@1
amm/contract.py:283 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._do_opt_in(asset: uint64) -> void:
debug: removing explicit jump to fall-through block _do_opt_in_block@0
amm/contract.py:291 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
debug: removing explicit jump to fall-through block _current_pool_balance_block@0
amm/contract.py:295 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
debug: removing explicit jump to fall-through block _current_a_balance_block@0
amm/contract.py:299 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
debug: removing explicit jump to fall-through block _current_b_balance_block@0
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block approval_program_block@0
debug: removing explicit jump to fall-through block approval_program_block@1
debug: removing explicit jump to fall-through block approval_program_abi_routing@2
debug: removing explicit jump to fall-through block approval_program_switch_case_default@8
debug: removing explicit jump to fall-through block approval_program_switch_case_next@9
debug: removing explicit jump to fall-through block approval_program_after_if_else@16
debug: removing explicit jump to fall-through block approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__puya_arc4_router__@17
debug: removing explicit jump to fall-through block approval_program_switch_case_default@14
debug: removing explicit jump to fall-through block approval_program_switch_case_next@15
debug: removing explicit jump to fall-through block approval_program_block@12
debug: removing explicit jump to fall-through block approval_program_after_inlined_examples.amm.contract.ConstantProductAMM.__algopy_default_create@13
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
info: Writing amm/out_unoptimized/ConstantProductAMM.approval.teal
info: Writing amm/out_unoptimized/ConstantProductAMM.clear.teal
info: Writing amm/out_unoptimized/ConstantProductAMM.approval.bin
info: Writing amm/out_unoptimized/ConstantProductAMM.clear.bin
info: Writing amm/out_unoptimized/ConstantProductAMM.approval.stats.txt
info: Writing amm/out_unoptimized/ConstantProductAMM.clear.stats.txt
info: Writing amm/out_unoptimized/ConstantProductAMM.approval.puya.map
info: Writing amm/out_unoptimized/ConstantProductAMM.clear.puya.map