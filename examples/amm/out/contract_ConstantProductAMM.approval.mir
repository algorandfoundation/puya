// Op                                                                                                            //                                                                    Op Description                                                                                                                                                         Stack (out)                                                                                                                                                                                                                   Live (out)           X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// examples.amm.contract.ConstantProductAMM.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}
    //                                                                                                           virtual: store app_id%0#0 to l-stack (no copy)                        app_id%0#0
    //                                                                                                           virtual: load app_id%0#0 from l-stack (no copy)                       app_id%0#0
    bnz main_entrypoint@2                                                                                        //
    // Implicit fall through to main_on_create@1                                                                 //

main_on_create@1:
    callsub __init__                                                                                             //
    // Implicit fall through to main_entrypoint@2                                                                //

main_entrypoint@2:
    txn NumAppArgs                                                                                               //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                           tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                          tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    bz main_bare_routingclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    // Implicit fall through to main_abi_routingclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30

main_abi_routing@3:
    txna ApplicationArgs 0                                                                                       //                                                                                                                                                                                                                                           {txna}                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    method "set_governor(account)void"                                                                           //                                                                                                                                                                                                                                           tmp%2#0,method<"set_governor(account)void">                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    method "bootstrap(pay,asset,asset)uint64"                                                                    //                                                                                                                                                                                                                                           tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    method "mint(axfer,axfer,asset,asset,asset)void"                                                             //                                                                                                                                                                                                                                           tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">                                                                                                                                                                                                                class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    method "burn(axfer,asset,asset,asset)void"                                                                   //                                                                                                                                                                                                                                           tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    method "swap(axfer,asset,asset)void"                                                                         //                                                                                                                                                                                                                                           tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    uncover 5                                                                                                    //                                                                    load tmp%2#0 from l-stack (no copy)                                                                                                                                    method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">,tmp%2#0                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    match main_set_governor_route@4 main_bootstrap_route@5 main_mint_route@6 main_burn_route@7 main_swap_routeclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    err // reject transactionclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30

main_set_governor_route@4:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                           tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                          tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod()                                                                                     amm/contract.py:46
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                           tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                          tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    assert // OnCompletion is NoOparc4.abimethod()                                                                                     amm/contract.py:46
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    assert // is not creatingarc4.abimethod()                                                                                     amm/contract.py:46
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                           {txna}                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                           tmp%6#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                          tmp%6#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           {btoi}                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                           tmp%7#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                          tmp%7#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Accounts                                                                                               //                                                                                                                                                                                                                                           {txnas}                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                           tmp%8#0                                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                          tmp%8#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:46
    callsub set_governorarc4.abimethod()                                                                                     amm/contract.py:46
    intarc4.abimethod()                                                                                     amm/contract.py:46
    returnarc4.abimethod()                                                                                     amm/contract.py:46

main_bootstrap_route@5:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                           tmp%9#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                          tmp%9#0                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:52
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    assert // OnCompletion is NoOparc4.abimethod()                                                                                     amm/contract.py:52
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                          tmp%11#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                         tmp%11#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    assert // is not creatingarc4.abimethod()                                                                                     amm/contract.py:52
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%14#0 to l-stack (no copy)                          tmp%14#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%14#0 from l-stack (no copy)                         tmp%14#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int 1                                                                                                        //                                                                                                                                                                                                                                           tmp%14#0,1                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    -                                                                                                            //                                                                                                                                                                                                                                           {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store awst_tmp%15#0 to l-stack (no copy)                     awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    dup                                                                                                          //                                                                    load awst_tmp%15#0 from l-stack (copy)                                                                                                                                 awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                           awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%16#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%16#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%16#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%16#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int pay                                                                                                      //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%16#0,pay                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    ==                                                                                                           //                                                                                                                                                                                                                                           awst_tmp%15#0,{==}                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%17#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%17#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // transaction type is pay                                                                            //                                                                                                                                                                                                                                           awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,{txna}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%18#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%18#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,{btoi}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%19#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%19#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%19#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%19#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,{txnas}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%20#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%20#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%20#0,{txna}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%21#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%20#0,tmp%21#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%21#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%20#0,tmp%21#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%20#0,{btoi}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%22#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%20#0,tmp%22#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%22#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%20#0,tmp%22#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%20#0,{txnas}                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%23#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%20#0,tmp%23#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    uncover 2                                                                                                    //                                                                    load awst_tmp%15#0 from l-stack (no copy)                                                                                                                              tmp%20#0,tmp%23#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod()                                                                                     amm/contract.py:52
    uncover 2                                                                                                    //                                                                    load tmp%20#0 from l-stack (no copy)                                                                                                                                   tmp%23#0,awst_tmp%15#0,tmp%20#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod()                                                                                     amm/contract.py:52
    uncover 2                                                                                                    //                                                                    load tmp%23#0 from l-stack (no copy)                                                                                                                                   awst_tmp%15#0,tmp%20#0,tmp%23#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod()                                                                                     amm/contract.py:52
    callsub bootstrap                                                                                            //                                                                                                                                                                                                                                           {bootstrap}                                                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: store tmp%24#0 to l-stack (no copy)                          tmp%24#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    byte 0x151f7c75                                                                                              //                                                                                                                                                                                                                                           tmp%24#0,0x151f7c75                                                                                                                                                                                                                                                                                                                                     arc4.abimethod()                                                                                     amm/contract.py:52
    swap                                                                                                         //                                                                    load tmp%24#0 from l-stack (no copy)                                                                                                                                   0x151f7c75,tmp%24#0                                                                                                                                                                                                                                                                                                                                     arc4.abimethod()                                                                                     amm/contract.py:52
    concat                                                                                                       //                                                                                                                                                                                                                                           {concat}                                                                                                                                                                                                                                                                                                                                                arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: store tmp%25#0 to l-stack (no copy)                          tmp%25#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    //                                                                                                           virtual: load tmp%25#0 from l-stack (no copy)                         tmp%25#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:52
    logarc4.abimethod()                                                                                     amm/contract.py:52
    intarc4.abimethod()                                                                                     amm/contract.py:52
    return                                                                                                       //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:52

main_mint_route@6:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    //                                                                                                           virtual: store tmp%26#0 to l-stack (no copy)                          tmp%26#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    //                                                                                                           virtual: load tmp%26#0 from l-stack (no copy)                         tmp%26#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    //                                                                                                           virtual: store tmp%27#0 to l-stack (no copy)                          tmp%27#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    //                                                                                                           virtual: load tmp%27#0 from l-stack (no copy)                         tmp%27#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    assert // OnCompletion is NoOparc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    //                                                                                                           virtual: store tmp%28#0 to l-stack (no copy)                          tmp%28#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    //                                                                                                           virtual: load tmp%28#0 from l-stack (no copy)                         tmp%28#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    assert // is not creatingarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%31#0 to l-stack (no copy)                          tmp%31#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%31#0 from l-stack (no copy)                         tmp%31#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int 2                                                                                                        //                                                                                                                                                                                                                                           tmp%31#0,2                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    -                                                                                                            //                                                                                                                                                                                                                                           {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store awst_tmp%32#0 to l-stack (no copy)                     awst_tmp%32#0                                                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    dup                                                                                                          //                                                                    load awst_tmp%32#0 from l-stack (copy)                                                                                                                                 awst_tmp%32#0,awst_tmp%32#0                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                           awst_tmp%32#0,{gtxns}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%33#0 to l-stack (no copy)                          awst_tmp%32#0,tmp%33#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%33#0 from l-stack (no copy)                         awst_tmp%32#0,tmp%33#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int axfer                                                                                                    //                                                                                                                                                                                                                                           awst_tmp%32#0,tmp%33#0,axfer                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    ==                                                                                                           //                                                                                                                                                                                                                                           awst_tmp%32#0,{==}                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%34#0 to l-stack (no copy)                          awst_tmp%32#0,tmp%34#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%34#0 from l-stack (no copy)                         awst_tmp%32#0,tmp%34#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                           awst_tmp%32#0                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                           awst_tmp%32#0,{txn}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%37#0 to l-stack (no copy)                          awst_tmp%32#0,tmp%37#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%37#0 from l-stack (no copy)                         awst_tmp%32#0,tmp%37#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int 1                                                                                                        //                                                                                                                                                                                                                                           awst_tmp%32#0,tmp%37#0,1                                                                                                                                                                                                                                                                                                                                class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    -                                                                                                            //                                                                                                                                                                                                                                           awst_tmp%32#0,{-}                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store awst_tmp%15#0 to l-stack (no copy)                     awst_tmp%32#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    dup                                                                                                          //                                                                    load awst_tmp%15#0 from l-stack (copy)                                                                                                                                 awst_tmp%32#0,awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%38#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%38#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%38#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%38#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int axfer                                                                                                    //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%38#0,axfer                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    ==                                                                                                           //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,{==}                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%39#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%39#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%39#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%39#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,{txna}                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%40#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%40#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%40#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%40#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,{btoi}                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%41#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%41#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%41#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%41#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,{txnas}                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%42#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,{txna}                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%43#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%43#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%43#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%43#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,{btoi}                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%44#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%44#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%44#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%44#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,{txnas}                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%45#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 3                                                                                       //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,{txna}                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%46#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%46#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%46#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%46#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,{btoi}                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%47#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%47#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%47#0 from l-stack (no copy)                         awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%47#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,{txnas}                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%48#0 to l-stack (no copy)                          awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%48#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    uncover 4                                                                                                    //                                                                    load awst_tmp%32#0 from l-stack (no copy)                                                                                                                              awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%48#0,awst_tmp%32#0                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    uncover 4                                                                                                    //                                                                    load awst_tmp%15#0 from l-stack (no copy)                                                                                                                              tmp%42#0,tmp%45#0,tmp%48#0,awst_tmp%32#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    uncover 4                                                                                                    //                                                                    load tmp%42#0 from l-stack (no copy)                                                                                                                                   tmp%45#0,tmp%48#0,awst_tmp%32#0,awst_tmp%15#0,tmp%42#0                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    uncover 4                                                                                                    //                                                                    load tmp%45#0 from l-stack (no copy)                                                                                                                                   tmp%48#0,awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    uncover 4                                                                                                    //                                                                    load tmp%48#0 from l-stack (no copy)                                                                                                                                   awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,tmp%48#0                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    callsub mintarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    intarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90
    returnarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:84-90

main_burn_route@7:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    //                                                                                                           virtual: store tmp%49#0 to l-stack (no copy)                          tmp%49#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    //                                                                                                           virtual: load tmp%49#0 from l-stack (no copy)                         tmp%49#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    //                                                                                                           virtual: store tmp%50#0 to l-stack (no copy)                          tmp%50#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    //                                                                                                           virtual: load tmp%50#0 from l-stack (no copy)                         tmp%50#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    assert // OnCompletion is NoOparc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    //                                                                                                           virtual: store tmp%51#0 to l-stack (no copy)                          tmp%51#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    //                                                                                                           virtual: load tmp%51#0 from l-stack (no copy)                         tmp%51#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    assert // is not creatingarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%54#0 to l-stack (no copy)                          tmp%54#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%54#0 from l-stack (no copy)                         tmp%54#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int 1                                                                                                        //                                                                                                                                                                                                                                           tmp%54#0,1                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    -                                                                                                            //                                                                                                                                                                                                                                           {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store awst_tmp%15#0 to l-stack (no copy)                     awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    dup                                                                                                          //                                                                    load awst_tmp%15#0 from l-stack (copy)                                                                                                                                 awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                           awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%55#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%55#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%55#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%55#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int axfer                                                                                                    //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%55#0,axfer                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    ==                                                                                                           //                                                                                                                                                                                                                                           awst_tmp%15#0,{==}                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%56#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%56#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%56#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%56#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                           awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,{txna}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%57#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%57#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%57#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%57#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,{btoi}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%58#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%58#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%58#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%58#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,{txnas}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%59#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%59#0,{txna}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%60#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0,tmp%60#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%60#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%59#0,tmp%60#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%59#0,{btoi}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%61#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0,tmp%61#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%61#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%59#0,tmp%61#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%59#0,{txnas}                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%62#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0,tmp%62#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 3                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%59#0,tmp%62#0,{txna}                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%63#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0,tmp%62#0,tmp%63#0                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%63#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%59#0,tmp%62#0,tmp%63#0                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%59#0,tmp%62#0,{btoi}                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%64#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0,tmp%62#0,tmp%64#0                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%64#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%59#0,tmp%62#0,tmp%64#0                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%59#0,tmp%62#0,{txnas}                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%65#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%59#0,tmp%62#0,tmp%65#0                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    uncover 3                                                                                                    //                                                                    load awst_tmp%15#0 from l-stack (no copy)                                                                                                                              tmp%59#0,tmp%62#0,tmp%65#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    uncover 3                                                                                                    //                                                                    load tmp%59#0 from l-stack (no copy)                                                                                                                                   tmp%62#0,tmp%65#0,awst_tmp%15#0,tmp%59#0                                                                                                                                                                                                                                                                                                                arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    uncover 3                                                                                                    //                                                                    load tmp%62#0 from l-stack (no copy)                                                                                                                                   tmp%65#0,awst_tmp%15#0,tmp%59#0,tmp%62#0                                                                                                                                                                                                                                                                                                                arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    uncover 3                                                                                                    //                                                                    load tmp%65#0 from l-stack (no copy)                                                                                                                                   awst_tmp%15#0,tmp%59#0,tmp%62#0,tmp%65#0                                                                                                                                                                                                                                                                                                                arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    callsub burnarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    intarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156
    returnarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:150-156

main_swap_route@8:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    //                                                                                                           virtual: store tmp%66#0 to l-stack (no copy)                          tmp%66#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    //                                                                                                           virtual: load tmp%66#0 from l-stack (no copy)                         tmp%66#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    //                                                                                                           virtual: store tmp%67#0 to l-stack (no copy)                          tmp%67#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    //                                                                                                           virtual: load tmp%67#0 from l-stack (no copy)                         tmp%67#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    assert // OnCompletion is NoOparc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    //                                                                                                           virtual: store tmp%68#0 to l-stack (no copy)                          tmp%68#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    //                                                                                                           virtual: load tmp%68#0 from l-stack (no copy)                         tmp%68#0                                                                                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    assert // is not creatingarc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%71#0 to l-stack (no copy)                          tmp%71#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%71#0 from l-stack (no copy)                         tmp%71#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int 1                                                                                                        //                                                                                                                                                                                                                                           tmp%71#0,1                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    -                                                                                                            //                                                                                                                                                                                                                                           {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store awst_tmp%15#0 to l-stack (no copy)                     awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    dup                                                                                                          //                                                                    load awst_tmp%15#0 from l-stack (copy)                                                                                                                                 awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                           awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%72#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%72#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%72#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%72#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    int axfer                                                                                                    //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%72#0,axfer                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    ==                                                                                                           //                                                                                                                                                                                                                                           awst_tmp%15#0,{==}                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%73#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%73#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%73#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%73#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                           awst_tmp%15#0                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,{txna}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%74#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%74#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%74#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%74#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,{btoi}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%75#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%75#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%75#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%75#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,{txnas}                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%76#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%76#0                                                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%76#0,{txna}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%77#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%76#0,tmp%77#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%77#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%76#0,tmp%77#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    btoi                                                                                                         //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%76#0,{btoi}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%78#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%76#0,tmp%78#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%78#0 from l-stack (no copy)                         awst_tmp%15#0,tmp%76#0,tmp%78#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                           awst_tmp%15#0,tmp%76#0,{txnas}                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%79#0 to l-stack (no copy)                          awst_tmp%15#0,tmp%76#0,tmp%79#0                                                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    uncover 2                                                                                                    //                                                                    load awst_tmp%15#0 from l-stack (no copy)                                                                                                                              tmp%76#0,tmp%79#0,awst_tmp%15#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    uncover 2                                                                                                    //                                                                    load tmp%76#0 from l-stack (no copy)                                                                                                                                   tmp%79#0,awst_tmp%15#0,tmp%76#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    uncover 2                                                                                                    //                                                                    load tmp%79#0 from l-stack (no copy)                                                                                                                                   awst_tmp%15#0,tmp%76#0,tmp%79#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    callsub swaparc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    intarc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212
    returnarc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:207-212

main_bare_routing@11:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%80#0 to l-stack (no copy)                          tmp%80#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%80#0 from l-stack (no copy)                         tmp%80#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store not%tmp%80#0 to l-stack (no copy)                      not%tmp%80#0                                                                                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load not%tmp%80#0 from l-stack (no copy)                     not%tmp%80#0                                                                                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // reject transactionclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%81#0 to l-stack (no copy)                          tmp%81#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%81#0 from l-stack (no copy)                         tmp%81#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    !                                                                                                            //                                                                                                                                                                                                                                           {!}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: store tmp%82#0 to l-stack (no copy)                          tmp%82#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    //                                                                                                           virtual: load tmp%82#0 from l-stack (no copy)                         tmp%82#0                                                                                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    assert // is creatingclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    intclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30
    returnclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:30


// examples.amm.contract.ConstantProductAMM.set_governor(new_governor: bytes) -> void:
set_governor:
    proto 1 0                                                                                                    //                                                                                                                                                                                                                                           (𝕡) new_governor#0 |                                                                                                                                                                                                                                                                                                                                    @arc4.abimethod()\ndef set_governor(self, new_governor: Account) -> None:                            amm/contract.py:46-47

set_governor_block@0:
    callsub _check_is_governor                                                                                   //                                                                                                                                                                                                                                           (𝕡) new_governor#0 |                                                                                                                                                                                                                                                                                                                                    self._check_is_governor()                                                                            amm/contract.py:49
    byte "governor"                                                                                              //                                                                                                                                                                                                                                           (𝕡) new_governor#0 | "governor"                                                                                                                                                                                                                                                                                                                         self.governor                                                                                        amm/contract.py:50
    frame_dig -1                                                                                                 //                                                                    load new_governor#0 from parameters                                                                                                                                    (𝕡) new_governor#0 | "governor",new_governor#0                                                                                                                                                                                                                                                                                                          self.governor = new_governor                                                                         amm/contract.py:50
    app_global_put                                                                                               //                                                                                                                                                                                                                                           (𝕡) new_governor#0 |                                                                                                                                                                                                                                                                                                                                    self.governor = new_governor                                                                         amm/contract.py:50
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
_check_is_governor:
    protosubroutine\ndef _check_is_governor(self) -> None:                                                   amm/contract.py:265-266

_check_is_governor_block@0:
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   Transaction.sender()                                                                                 amm/contract.py:268
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                           tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                                   Transaction.sender()                                                                                 amm/contract.py:268
    int 0                                                                                                        //                                                                                                                                                                                                                                           tmp%0#0,0                                                                                                                                                                                                                                                                                                                                               self.governor                                                                                        amm/contract.py:268
    byte "governor"                                                                                              //                                                                                                                                                                                                                                           tmp%0#0,0,"governor"                                                                                                                                                                                                                                                                                                                                    self.governor                                                                                        amm/contract.py:268
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.governor                                                                                        amm/contract.py:268
    //                                                                                                           virtual: store app_global_get_ex_did_exist%2#0 to l-stack (no copy)   tmp%0#0,app_global_get_ex_did_exist%2#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                             self.governor                                                                                        amm/contract.py:268
    //                                                                                                           virtual: store app_global_get_ex_value%1#0 to l-stack (no copy)       tmp%0#0,app_global_get_ex_value%1#0,app_global_get_ex_did_exist%2#0                                                                                                                                                                                                                                                                                                                                                       self.governor                                                                                        amm/contract.py:268
    //                                                                                                           virtual: load app_global_get_ex_did_exist%2#0 from l-stack (no copy)  tmp%0#0,app_global_get_ex_value%1#0,app_global_get_ex_did_exist%2#0                                                                                                                                                                                                                                                                                                                                                       self.governor                                                                                        amm/contract.py:268
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           tmp%0#0,app_global_get_ex_value%1#0                                                                                                                                                                                                                                                                                                                     self.governor                                                                                        amm/contract.py:268
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                          app_global_get_ex_value%1#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                       Transaction.sender() == self.governor                                                                amm/contract.py:268
    //                                                                                                           virtual: load app_global_get_ex_value%1#0 from l-stack (no copy)      tmp%0#0,app_global_get_ex_value%1#0                                                                                                                                                                                                                                                                                                                                                                                       Transaction.sender() == self.governor                                                                amm/contract.py:268
    ==                                                                                                           //                                                                                                                                                                                                                                           {==}                                                                                                                                                                                                                                                                                                                                                    Transaction.sender() == self.governor                                                                amm/contract.py:268
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                           tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                                   Transaction.sender() == self.governor                                                                amm/contract.py:268
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                          tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                                   assert (\nTransaction.sender() == self.governor\n), "Only the account set in global_state.governo... amm/contract.py:267-269
    assert // Only the account set in global_state.governor may call this methodassert (\nTransaction.sender() == self.governor\n), "Only the account set in global_state.governo... amm/contract.py:267-269
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.bootstrap(seed: uint64, a_asset: uint64, b_asset: uint64) -> bytes:
bootstrap:
    proto 3 1                                                                                                    //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        @arc4.abimethod()\ndef bootstrap(self, seed: PaymentTransaction, a_asset: Asset, b_asset: Asset) ... amm/contract.py:52-53

bootstrap_block@0:
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.pool_token                                                                                      amm/contract.py:69
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                                         self.pool_token                                                                                      amm/contract.py:69
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:69
    //                                                                                                           virtual: store app_global_get_ex_did_exist%1#0 to l-stack (no copy)   (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:69
    //                                                                                                           virtual: store app_global_get_ex_value%0#0 to l-stack (no copy)       (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                                              self.pool_token                                                                                      amm/contract.py:69
    //                                                                                                           virtual: load app_global_get_ex_did_exist%1#0 from l-stack (no copy)  (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                                              self.pool_token                                                                                      amm/contract.py:69
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:69
    //                                                                                                           virtual: load app_global_get_ex_value%0#0 from l-stack (no copy)      (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                                                                                                                                                                                              not self.pool_token                                                                                  amm/contract.py:69
    !                                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {!}                                                                                                                                                                                                                                                                                                                    not self.pool_token                                                                                  amm/contract.py:69
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                  not self.pool_token                                                                                  amm/contract.py:69
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                  assert not self.pool_token, "application has already been bootstrapped"                              amm/contract.py:69
    assert // application has already been bootstrapped                                                          //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert not self.pool_token, "application has already been bootstrapped"                              amm/contract.py:69
    callsub _check_is_governor                                                                                   //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self._check_is_governor()                                                                            amm/contract.py:70
    global GroupSize                                                                                             //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {global}                                                                                                                                                                                                                                                                                                               Global.group_size()                                                                                  amm/contract.py:71
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                  Global.group_size()                                                                                  amm/contract.py:71
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                  Global.group_size() == 2, "group size not 2"                                                         amm/contract.py:71
    int 2                                                                                                        //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0,2                                                                                                                                                                                                                                                                                                              2                                                                                                    amm/contract.py:71
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                                   Global.group_size() == 2, "group size not 2"                                                         amm/contract.py:71
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                  Global.group_size() == 2, "group size not 2"                                                         amm/contract.py:71
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                  assert Global.group_size() == 2, "group size not 2"                                                  amm/contract.py:71
    assert // group size not 2                                                                                   //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert Global.group_size() == 2, "group size not 2"                                                  amm/contract.py:71
    frame_dig -3                                                                                                 //                                                                    load seed#0 from parameters                                                                                                                                            (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                                                                                                                                 seed.receiver                                                                                        amm/contract.py:72
    gtxns Receiver                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                                                seed.receiver                                                                                        amm/contract.py:72
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                  seed.receiver                                                                                        amm/contract.py:72
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0,{global}                                                                                                                                                                                                                                                                                                       Global.current_application_address()                                                                 amm/contract.py:72
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0,tmp%6#0                                                                                                                                                                                                                                                                                                                                                                          Global.current_application_address()                                                                 amm/contract.py:72
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%5#0                                                                                                                                                                                                                                                                                                                                                                          seed.receiver == Global.current_application_address(), "receiver not app address"                    amm/contract.py:72
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0,tmp%6#0                                                                                                                                                                                                                                                                                                                                                                          seed.receiver == Global.current_application_address(), "receiver not app address"                    amm/contract.py:72
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                                   seed.receiver == Global.current_application_address(), "receiver not app address"                    amm/contract.py:72
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%7#0                                                                                                                                                                                                                                                                                                                                                                                  seed.receiver == Global.current_application_address(), "receiver not app address"                    amm/contract.py:72
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%7#0                                                                                                                                                                                                                                                                                                                                                                                  assert seed.receiver == Global.current_application_address(), "receiver not app address"             amm/contract.py:72
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert seed.receiver == Global.current_application_address(), "receiver not app address"             amm/contract.py:72
    frame_dig -3                                                                                                 //                                                                    load seed#0 from parameters                                                                                                                                            (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                                                                                                                                 seed.amount                                                                                          amm/contract.py:74
    gtxns Amount                                                                                                 //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                                                seed.amount                                                                                          amm/contract.py:74
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                                                  seed.amount                                                                                          amm/contract.py:74
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                                                  seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                        amm/contract.py:74
    int 300000                                                                                                   //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0,300000                                                                                                                                                                                                                                                                                                         300_000                                                                                              amm/contract.py:74
    >=                                                                                                           //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {>=}                                                                                                                                                                                                                                                                                                                   seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                        amm/contract.py:74
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                           (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%9#0                                                                                                                                                                                                                                                                                                                                                                                  seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                        amm/contract.py:74
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%9#0                                                                                                                                                                                                                                                                                                                                                                                  assert seed.amount >= 300_000, "amount minimum not met"                                              amm/contract.py:74
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert seed.amount >= 300_000, "amount minimum not met"                                              amm/contract.py:74
    frame_dig -2                                                                                                 //                                                                    load a_asset#0 from parameters                                                                                                                                         (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0                                                                                                                                                                                                                                                                                                              a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                             amm/contract.py:75
    frame_dig -1                                                                                                 //                                                                    load b_asset#0 from parameters                                                                                                                                         (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0,b_asset#0                                                                                                                                                                                                                                                                                                    a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                             amm/contract.py:75
    <                                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {<}                                                                                                                                                                                                                                                                                                                    a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                             amm/contract.py:75
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                 a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                             amm/contract.py:75
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                 assert a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                      amm/contract.py:75
    assert // asset a must be less than asset b                                                                  //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                      amm/contract.py:75
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a"                                                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:76
    frame_dig -2                                                                                                 //                                                                    load a_asset#0 from parameters                                                                                                                                         (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a",a_asset#0                                                                                                                                                                                                                                                                                                    self.asset_a = a_asset                                                                               amm/contract.py:76
    app_global_put                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self.asset_a = a_asset                                                                               amm/contract.py:76
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b"                                                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:77
    frame_dig -1                                                                                                 //                                                                    load b_asset#0 from parameters                                                                                                                                         (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b",b_asset#0                                                                                                                                                                                                                                                                                                    self.asset_b = b_asset                                                                               amm/contract.py:77
    app_global_put                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self.asset_b = b_asset                                                                               amm/contract.py:77
    callsub _create_pool_token                                                                                   //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {_create_pool_token}                                                                                                                                                                                                                                                                                                   self._create_pool_token()                                                                            amm/contract.py:78
    //                                                                                                           virtual: store new_state_value%11#0 to l-stack (no copy)              (𝕡) seed#0,a_asset#0,b_asset#0 | new_state_value%11#0                                                                                                                                                                                                                                                                                                                                                                     self._create_pool_token()                                                                            amm/contract.py:78
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | new_state_value%11#0,"pool_token"                                                                                                                                                                                                                                                                                      self.pool_token                                                                                      amm/contract.py:78
    swap                                                                                                         //                                                                    load new_state_value%11#0 from l-stack (no copy)                                                                                                                       (𝕡) seed#0,a_asset#0,b_asset#0 | "pool_token",new_state_value%11#0                                                                                                                                                                                                                                                                                      self.pool_token = self._create_pool_token()                                                          amm/contract.py:78
    app_global_put                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self.pool_token = self._create_pool_token()                                                          amm/contract.py:78
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.asset_a                                                                                         amm/contract.py:80
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:80
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:80
    //                                                                                                           virtual: store app_global_get_ex_did_exist%13#0 to l-stack (no copy)  (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%13#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:80
    //                                                                                                           virtual: store app_global_get_ex_value%12#0 to l-stack (no copy)      (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%12#0,app_global_get_ex_did_exist%13#0                                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:80
    //                                                                                                           virtual: load app_global_get_ex_did_exist%13#0 from l-stack (no copy) (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%12#0,app_global_get_ex_did_exist%13#0                                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:80
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%12#0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:80
    //                                                                                                           virtual: load app_global_get_ex_value%12#0 from l-stack (no copy)     (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%12#0                                                                                                                                                                                                                                                                                                                                                             self._do_opt_in(self.asset_a)                                                                        amm/contract.py:80
    callsub _do_opt_in                                                                                           //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self._do_opt_in(self.asset_a)                                                                        amm/contract.py:80
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.asset_b                                                                                         amm/contract.py:81
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:81
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:81
    //                                                                                                           virtual: store app_global_get_ex_did_exist%15#0 to l-stack (no copy)  (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%15#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:81
    //                                                                                                           virtual: store app_global_get_ex_value%14#0 to l-stack (no copy)      (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%14#0,app_global_get_ex_did_exist%15#0                                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:81
    //                                                                                                           virtual: load app_global_get_ex_did_exist%15#0 from l-stack (no copy) (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%14#0,app_global_get_ex_did_exist%15#0                                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:81
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%14#0                                                                                                                                                                                                                                                                                           self.asset_b                                                                                         amm/contract.py:81
    //                                                                                                           virtual: load app_global_get_ex_value%14#0 from l-stack (no copy)     (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%14#0                                                                                                                                                                                                                                                                                                                                                             self._do_opt_in(self.asset_b)                                                                        amm/contract.py:81
    callsub _do_opt_in                                                                                           //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self._do_opt_in(self.asset_b)                                                                        amm/contract.py:81
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.pool_token                                                                                      amm/contract.py:82
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                                         self.pool_token                                                                                      amm/contract.py:82
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:82
    //                                                                                                           virtual: store app_global_get_ex_did_exist%17#0 to l-stack (no copy)  (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%17#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                   self.pool_token                                                                                      amm/contract.py:82
    //                                                                                                           virtual: store app_global_get_ex_value%16#0 to l-stack (no copy)      (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%16#0,app_global_get_ex_did_exist%17#0                                                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:82
    //                                                                                                           virtual: load app_global_get_ex_did_exist%17#0 from l-stack (no copy) (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%16#0,app_global_get_ex_did_exist%17#0                                                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:82
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%16#0                                                                                                                                                                                                                                                                                           self.pool_token                                                                                      amm/contract.py:82
    //                                                                                                           virtual: load app_global_get_ex_value%16#0 from l-stack (no copy)     (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%16#0                                                                                                                                                                                                                                                                                                                                                             arc4.UInt64(self.pool_token.asset_id)                                                                amm/contract.py:82
    itob                                                                                                         //                                                                                                                                                                                                                                           (𝕡) seed#0,a_asset#0,b_asset#0 | {itob}                                                                                                                                                                                                                                                                                                                 arc4.UInt64(self.pool_token.asset_id)                                                                amm/contract.py:82
    //                                                                                                           virtual: store val_as_bytes%18#0 to l-stack (no copy)                 (𝕡) seed#0,a_asset#0,b_asset#0 | val_as_bytes%18#0                                                                                                                                                                                                                                                                                                                                                                        arc4.UInt64(self.pool_token.asset_id)                                                                amm/contract.py:82
    //                                                                                                           virtual: load val_as_bytes%18#0 from l-stack (no copy)                (𝕡) seed#0,a_asset#0,b_asset#0 | val_as_bytes%18#0                                                                                                                                                                                                                                                                                                                                                                        return arc4.UInt64(self.pool_token.asset_id)                                                         amm/contract.py:82
    retsub                                                                                                       //                                                                                                                                                                                                                                           val_as_bytes%18#0                                                                                                                                                                                                                                                                                                                                       return arc4.UInt64(self.pool_token.asset_id)                                                         amm/contract.py:82


// examples.amm.contract.ConstantProductAMM._create_pool_token() -> uint64:
_create_pool_token:
    protosubroutine\ndef _create_pool_token(self) -> Asset:                                                  amm/contract.py:271-272

_create_pool_token_block@0:
    itxn_begin                                                                                                   //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   CreateInnerTransaction.begin()                                                                       amm/contract.py:273
    int acfg                                                                                                     //                                                                                                                                                                                                                                           acfg                                                                                                                                                                                                                                                                                                                                                    TransactionType.AssetConfig                                                                          amm/contract.py:274
    itxn_field TypeEnumreateInnerTransaction.set_type_enum(TransactionType.AssetConfig)                                    amm/contract.py:274
    int 0                                                                                                        //                                                                                                                                                                                                                                           0                                                                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:276
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           0,"asset_a"                                                                                                                                                                                                                                                                                                                                             self.asset_a                                                                                         amm/contract.py:276
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                             self.asset_a                                                                                         amm/contract.py:276
    //                                                                                                           virtual: store app_global_get_ex_did_exist%3#0 to l-stack (no copy)   app_global_get_ex_did_exist%3#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:276
    //                                                                                                           virtual: store app_global_get_ex_value%2#0 to l-stack (no copy)       app_global_get_ex_value%2#0,app_global_get_ex_did_exist%3#0                                                                                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:276
    //                                                                                                           virtual: load app_global_get_ex_did_exist%3#0 from l-stack (no copy)  app_global_get_ex_value%2#0,app_global_get_ex_did_exist%3#0                                                                                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:276
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           app_global_get_ex_value%2#0                                                                                                                                                                                                                                                                                                                             self.asset_a                                                                                         amm/contract.py:276
    //                                                                                                           virtual: load app_global_get_ex_value%2#0 from l-stack (no copy)      app_global_get_ex_value%2#0                                                                                                                                                                                                                                                                                                                                                                                               self.asset_a.unit_name                                                                               amm/contract.py:276
    asset_params_get AssetUnitName                                                                               //                                                                                                                                                                                                                                           {asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                                                                                                                                               self.asset_a.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: store maybe_value_did_exist%1#0 to l-stack (no copy)         maybe_value_did_exist%1#0,{asset_params_get}.0                                                                                                                                                                                                                                                                                                                                                                            self.asset_a.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: store maybe_value%0#0 to l-stack (no copy)                   maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_a.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: load maybe_value_did_exist%1#0 from l-stack (no copy)        maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_a.unit_name                                                                               amm/contract.py:276
    assert // asset exists                                                                                       //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         self.asset_a.unit_name                                                                               amm/contract.py:276
    byte "DPT-"                                                                                                  //                                                                                                                                                                                                                                           maybe_value%0#0,"DPT-"                                                                                                                                                                                                                                                                                                                                  b"DPT-"                                                                                              amm/contract.py:276
    swap                                                                                                         //                                                                    load maybe_value%0#0 from l-stack (no copy)                                                                                                                            "DPT-",maybe_value%0#0                                                                                                                                                                                                                                                                                                                                  b"DPT-" + self.asset_a.unit_name                                                                     amm/contract.py:276
    concat                                                                                                       //                                                                                                                                                                                                                                           {concat}                                                                                                                                                                                                                                                                                                                                                b"DPT-" + self.asset_a.unit_name                                                                     amm/contract.py:276
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                           tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                                   b"DPT-" + self.asset_a.unit_name                                                                     amm/contract.py:276
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                          tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                                   b"DPT-" + self.asset_a.unit_name + b"-"                                                              amm/contract.py:276
    byte "-"                                                                                                     //                                                                                                                                                                                                                                           tmp%4#0,"-"                                                                                                                                                                                                                                                                                                                                             b"-"                                                                                                 amm/contract.py:276
    concat                                                                                                       //                                                                                                                                                                                                                                           {concat}                                                                                                                                                                                                                                                                                                                                                b"DPT-" + self.asset_a.unit_name + b"-"                                                              amm/contract.py:276
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                                                   b"DPT-" + self.asset_a.unit_name + b"-"                                                              amm/contract.py:276
    int 0                                                                                                        //                                                                                                                                                                                                                                           tmp%5#0,0                                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:276
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           tmp%5#0,0,"asset_b"                                                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:276
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           tmp%5#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:276
    //                                                                                                           virtual: store app_global_get_ex_did_exist%9#0 to l-stack (no copy)   tmp%5#0,app_global_get_ex_did_exist%9#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                             self.asset_b                                                                                         amm/contract.py:276
    //                                                                                                           virtual: store app_global_get_ex_value%8#0 to l-stack (no copy)       tmp%5#0,app_global_get_ex_value%8#0,app_global_get_ex_did_exist%9#0                                                                                                                                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:276
    //                                                                                                           virtual: load app_global_get_ex_did_exist%9#0 from l-stack (no copy)  tmp%5#0,app_global_get_ex_value%8#0,app_global_get_ex_did_exist%9#0                                                                                                                                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:276
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           tmp%5#0,app_global_get_ex_value%8#0                                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:276
    //                                                                                                           virtual: load app_global_get_ex_value%8#0 from l-stack (no copy)      tmp%5#0,app_global_get_ex_value%8#0                                                                                                                                                                                                                                                                                                                                                                                       self.asset_b.unit_name                                                                               amm/contract.py:276
    asset_params_get AssetUnitName                                                                               //                                                                                                                                                                                                                                           tmp%5#0,{asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                                                                                                                                       self.asset_b.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: store maybe_value_did_exist%7#0 to l-stack (no copy)         tmp%5#0,maybe_value_did_exist%7#0,{asset_params_get}.0                                                                                                                                                                                                                                                                                                                                                                    self.asset_b.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: store maybe_value%6#0 to l-stack (no copy)                   tmp%5#0,maybe_value%6#0,maybe_value_did_exist%7#0                                                                                                                                                                                                                                                                                                                                                                         self.asset_b.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: load maybe_value_did_exist%7#0 from l-stack (no copy)        tmp%5#0,maybe_value%6#0,maybe_value_did_exist%7#0                                                                                                                                                                                                                                                                                                                                                                         self.asset_b.unit_name                                                                               amm/contract.py:276
    assert // asset exists                                                                                       //                                                                                                                                                                                                                                           tmp%5#0,maybe_value%6#0                                                                                                                                                                                                                                                                                                                                 self.asset_b.unit_name                                                                               amm/contract.py:276
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          maybe_value%6#0,tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                                   b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:276
    //                                                                                                           virtual: load maybe_value%6#0 from l-stack (no copy)                  tmp%5#0,maybe_value%6#0                                                                                                                                                                                                                                                                                                                                                                                                   b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:276
    concat                                                                                                       //                                                                                                                                                                                                                                           {concat}                                                                                                                                                                                                                                                                                                                                                b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:276
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                                                  b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:276
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                                                  CreateInnerTransaction.set_config_asset_name(\nb"DPT-" + self.asset_a.unit_name + b"-" + self.ass... amm/contract.py:275-277
    itxn_field ConfigAssetNamereateInnerTransaction.set_config_asset_name(\nb"DPT-" + self.asset_a.unit_name + b"-" + self.ass... amm/contract.py:275-277
    byte "dpt"                                                                                                   //                                                                                                                                                                                                                                           "dpt"                                                                                                                                                                                                                                                                                                                                                   b"dpt"                                                                                               amm/contract.py:278
    itxn_field ConfigAssetUnitNamereateInnerTransaction.set_config_asset_unit_name(b"dpt")                                            amm/contract.py:278
    intamm/contract.py:279
    itxn_field ConfigAssetTotalreateInnerTransaction.set_config_asset_total(TOTAL_SUPPLY)                                          amm/contract.py:279
    intamm/contract.py:280
    itxn_field ConfigAssetDecimals                                                                               //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   CreateInnerTransaction.set_config_asset_decimals(3)                                                  amm/contract.py:280
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address()                                                                 amm/contract.py:281
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                          tmp%11#0                                                                                                                                                                                                                                                                                                                                                                                                                  Global.current_application_address()                                                                 amm/contract.py:281
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                         tmp%11#0                                                                                                                                                                                                                                                                                                                                                                                                                  CreateInnerTransaction.set_config_asset_manager(Global.current_application_address())                amm/contract.py:281
    itxn_field ConfigAssetManagerreateInnerTransaction.set_config_asset_manager(Global.current_application_address())                amm/contract.py:281
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address()                                                                 amm/contract.py:282
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                          tmp%12#0                                                                                                                                                                                                                                                                                                                                                                                                                  Global.current_application_address()                                                                 amm/contract.py:282
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                         tmp%12#0                                                                                                                                                                                                                                                                                                                                                                                                                  CreateInnerTransaction.set_config_asset_reserve(Global.current_application_address())                amm/contract.py:282
    itxn_field ConfigAssetReservereateInnerTransaction.set_config_asset_reserve(Global.current_application_address())                amm/contract.py:282
    intamm/contract.py:283
    itxn_field FeereateInnerTransaction.set_fee(0)                                                                    amm/contract.py:283
    itxn_submitreateInnerTransaction.submit()                                                                      amm/contract.py:284
    itxn CreatedAssetID                                                                                          //                                                                                                                                                                                                                                           {itxn}                                                                                                                                                                                                                                                                                                                                                  InnerTransaction.created_asset_id()                                                                  amm/contract.py:286
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                          tmp%13#0                                                                                                                                                                                                                                                                                                                                                                                                                  InnerTransaction.created_asset_id()                                                                  amm/contract.py:286
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                         tmp%13#0                                                                                                                                                                                                                                                                                                                                                                                                                  return Asset(InnerTransaction.created_asset_id())                                                    amm/contract.py:286
    retsub                                                                                                       //                                                                                                                                                                                                                                           tmp%13#0                                                                                                                                                                                                                                                                                                                                                return Asset(InnerTransaction.created_asset_id())                                                    amm/contract.py:286


// examples.amm.contract.ConstantProductAMM._do_opt_in(asset: uint64) -> void:
_do_opt_in:
    proto 1 0                                                                                                    //                                                                                                                                                                                                                                           (𝕡) asset#0 |                                                                                                                                                                                                                                                                                                                                           @subroutine\ndef _do_opt_in(self, asset: Asset) -> None:                                             amm/contract.py:288-289

_do_opt_in_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           (𝕡) asset#0 | {global}                                                                                                                                                                                                                                                                                                                                  Global.current_application_address()                                                                 amm/contract.py:291
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                           (𝕡) asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                     Global.current_application_address()                                                                 amm/contract.py:291
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                          (𝕡) asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                     do_asset_transfer(\nreceiver=Global.current_application_address(),\nasset=asset,\namount=UInt64(0... amm/contract.py:290-294
    frame_dig -1                                                                                                 //                                                                    load asset#0 from parameters                                                                                                                                           (𝕡) asset#0 | tmp%0#0,asset#0                                                                                                                                                                                                                                                                                                                           do_asset_transfer(\nreceiver=Global.current_application_address(),\nasset=asset,\namount=UInt64(0... amm/contract.py:290-294
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) asset#0 | tmp%0#0,asset#0,0                                                                                                                                                                                                                                                                                                                         0                                                                                                    amm/contract.py:293
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                           (𝕡) asset#0 |                                                                                                                                                                                                                                                                                                                                           do_asset_transfer(\nreceiver=Global.current_application_address(),\nasset=asset,\namount=UInt64(0... amm/contract.py:290-294
    retsub                                                                                                       //


// examples.amm.contract.do_asset_transfer(receiver: bytes, asset: uint64, amount: uint64) -> void:
do_asset_transfer:
    proto 3 0                                                                                                    //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       @subroutine\ndef do_asset_transfer(*, receiver: Account, asset: Asset, amount: UInt64) -> None:      amm/contract.py:361-362

do_asset_transfer_block@0:
    itxn_begin                                                                                                   //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.begin()                                                                       amm/contract.py:363
    int axfer                                                                                                    //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 | axfer                                                                                                                                                                                                                                                                                                                 TransactionType.AssetTransfer                                                                        amm/contract.py:364
    itxn_field TypeEnum                                                                                          //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_type_enum(TransactionType.AssetTransfer)                                  amm/contract.py:364
    frame_dig -2                                                                                                 //                                                                    load asset#0 from parameters                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 | asset#0                                                                                                                                                                                                                                                                                                               CreateInnerTransaction.set_xfer_asset(asset.asset_id)                                                amm/contract.py:365
    itxn_field XferAsset                                                                                         //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_xfer_asset(asset.asset_id)                                                amm/contract.py:365
    frame_dig -1                                                                                                 //                                                                    load amount#0 from parameters                                                                                                                                          (𝕡) receiver#0,asset#0,amount#0 | amount#0                                                                                                                                                                                                                                                                                                              CreateInnerTransaction.set_asset_amount(amount)                                                      amm/contract.py:366
    itxn_field AssetAmount                                                                                       //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_asset_amount(amount)                                                      amm/contract.py:366
    frame_dig -3                                                                                                 //                                                                    load receiver#0 from parameters                                                                                                                                        (𝕡) receiver#0,asset#0,amount#0 | receiver#0                                                                                                                                                                                                                                                                                                            CreateInnerTransaction.set_asset_receiver(receiver)                                                  amm/contract.py:367
    itxn_field AssetReceiver                                                                                     //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_asset_receiver(receiver)                                                  amm/contract.py:367
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 | 0                                                                                                                                                                                                                                                                                                                     0                                                                                                    amm/contract.py:368
    itxn_field Fee                                                                                               //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_fee(0)                                                                    amm/contract.py:368
    itxn_submit                                                                                                  //                                                                                                                                                                                                                                           (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.submit()                                                                      amm/contract.py:369
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.mint(a_xfer: uint64, b_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
mint:
    proto 5 0                                                                                                    //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                @arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": ... amm/contract.py:84-98

mint_block@0:
    callsub _check_bootstrapped                                                                                  //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                self._check_bootstrapped()                                                                           amm/contract.py:114
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                              \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                 \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                    \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    //                                                                                                           virtual: store app_global_get_ex_did_exist%1#0 to l-stack (no copy)   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                            \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    //                                                                                                           virtual: store app_global_get_ex_value%0#0 to l-stack (no copy)       (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                      \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    //                                                                                                           virtual: load app_global_get_ex_did_exist%1#0 from l-stack (no copy)  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                      \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                                                                                                    \nassert pool_asset == self.pool_token                                                               amm/contract.py:116-117
    frame_dig -3                                                                                                 //                                                                    load pool_asset#0 from parameters                                                                                                                                      (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,pool_asset#0                                                                                                                                                                                                                                                       formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:116-117
    swap                                                                                                         //                                                                    load app_global_get_ex_value%0#0 from l-stack (no copy)                                                                                                                (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_asset#0,app_global_get_ex_value%0#0                                                                                                                                                                                                                                                       formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:116-117
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:116-117
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                          formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:116-117
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                          # well-formed mint\nassert pool_asset == self.pool_token, "asset pool incorrect"                     amm/contract.py:116-117
    assert // asset pool incorrect                                                                               //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                # well-formed mint\nassert pool_asset == self.pool_token, "asset pool incorrect"                     amm/contract.py:116-117
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:118
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:118
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:118
    //                                                                                                           virtual: store app_global_get_ex_did_exist%4#0 to l-stack (no copy)   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%4#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:118
    //                                                                                                           virtual: store app_global_get_ex_value%3#0 to l-stack (no copy)       (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                      self.asset_a                                                                                         amm/contract.py:118
    //                                                                                                           virtual: load app_global_get_ex_did_exist%4#0 from l-stack (no copy)  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                      self.asset_a                                                                                         amm/contract.py:118
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:118
    frame_dig -2                                                                                                 //                                                                    load a_asset#0 from parameters                                                                                                                                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,a_asset#0                                                                                                                                                                                                                                                          a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:118
    swap                                                                                                         //                                                                    load app_global_get_ex_value%3#0 from l-stack (no copy)                                                                                                                (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_asset#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                          a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:118
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:118
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                          a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:118
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                          assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:118
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:118
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:119
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:119
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:119
    //                                                                                                           virtual: store app_global_get_ex_did_exist%7#0 to l-stack (no copy)   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%7#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:119
    //                                                                                                           virtual: store app_global_get_ex_value%6#0 to l-stack (no copy)       (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,app_global_get_ex_did_exist%7#0                                                                                                                                                                                                                                                                                                      self.asset_b                                                                                         amm/contract.py:119
    //                                                                                                           virtual: load app_global_get_ex_did_exist%7#0 from l-stack (no copy)  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,app_global_get_ex_did_exist%7#0                                                                                                                                                                                                                                                                                                      self.asset_b                                                                                         amm/contract.py:119
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:119
    frame_dig -1                                                                                                 //                                                                    load b_asset#0 from parameters                                                                                                                                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,b_asset#0                                                                                                                                                                                                                                                          b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:119
    swap                                                                                                         //                                                                    load app_global_get_ex_value%6#0 from l-stack (no copy)                                                                                                                (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_asset#0,app_global_get_ex_value%6#0                                                                                                                                                                                                                                                          b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:119
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:119
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                          b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:119
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                          assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:119
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:119
    frame_dig -5                                                                                                 //                                                                    load a_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.sender                                                                                        amm/contract.py:120
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.sender                                                                                        amm/contract.py:120
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0                                                                                                                                                                                                                                                                                                                                                          a_xfer.sender                                                                                        amm/contract.py:120
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{txn}                                                                                                                                                                                                                                                                                  Transaction.sender()                                                                                 amm/contract.py:120
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                                 Transaction.sender()                                                                                 amm/contract.py:120
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%10#0,tmp%9#0                                                                                                                                                                                                                                                                                                                                                 a_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:120
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                                 a_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:120
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:120
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                                                         a_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:120
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                                                         assert a_xfer.sender == Transaction.sender(), "sender invalid"                                       amm/contract.py:120
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert a_xfer.sender == Transaction.sender(), "sender invalid"                                       amm/contract.py:120
    frame_dig -4                                                                                                 //                                                                    load b_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                                                                                                                                       b_xfer.sender                                                                                        amm/contract.py:121
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        b_xfer.sender                                                                                        amm/contract.py:121
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0                                                                                                                                                                                                                                                                                                                                                         b_xfer.sender                                                                                        amm/contract.py:121
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{txn}                                                                                                                                                                                                                                                                                 Transaction.sender()                                                                                 amm/contract.py:121
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%13#0                                                                                                                                                                                                                                                                                                                                                Transaction.sender()                                                                                 amm/contract.py:121
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%13#0,tmp%12#0                                                                                                                                                                                                                                                                                                                                                b_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:121
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%13#0                                                                                                                                                                                                                                                                                                                                                b_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:121
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           b_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:121
    //                                                                                                           virtual: store tmp%14#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0                                                                                                                                                                                                                                                                                                                                                         b_xfer.sender == Transaction.sender(), "sender invalid"                                              amm/contract.py:121
    //                                                                                                           virtual: load tmp%14#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0                                                                                                                                                                                                                                                                                                                                                         assert b_xfer.sender == Transaction.sender(), "sender invalid"                                       amm/contract.py:121
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert b_xfer.sender == Transaction.sender(), "sender invalid"                                       amm/contract.py:121
    frame_dig -5                                                                                                 //                                                                    load a_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.asset_receiver                                                                                amm/contract.py:125
    gtxns AssetReceiver                                                                                          //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.asset_receiver                                                                                amm/contract.py:125
    //                                                                                                           virtual: store tmp%15#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%15#0                                                                                                                                                                                                                                                                                                                                                         a_xfer.asset_receiver                                                                                amm/contract.py:125
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%15#0,{global}                                                                                                                                                                                                                                                                              Global.current_application_address()                                                                 amm/contract.py:125
    //                                                                                                           virtual: store tmp%16#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%15#0,tmp%16#0                                                                                                                                                                                                                                                                                                                                                Global.current_application_address()                                                                 amm/contract.py:125
    //                                                                                                           virtual: load tmp%15#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%16#0,tmp%15#0                                                                                                                                                                                                                                                                                                                                                a_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:125
    //                                                                                                           virtual: load tmp%16#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%15#0,tmp%16#0                                                                                                                                                                                                                                                                                                                                                a_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:125
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:125
    //                                                                                                           virtual: store tmp%17#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%17#0                                                                                                                                                                                                                                                                                                                                                         a_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:125
    //                                                                                                           virtual: load tmp%17#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%17#0                                                                                                                                                                                                                                                                                                                                                         # valid asset a xfer\nassert (\na_xfer.asset_receiver == Global.current_application_address()\n),... amm/contract.py:123-126
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                # valid asset a xfer\nassert (\na_xfer.asset_receiver == Global.current_application_address()\n),... amm/contract.py:123-126
    frame_dig -5                                                                                                 //                                                                    load a_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.xfer_asset                                                                                    amm/contract.py:127
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.xfer_asset                                                                                    amm/contract.py:127
    //                                                                                                           virtual: store tmp%18#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0                                                                                                                                                                                                                                                                                                                                                         a_xfer.xfer_asset                                                                                    amm/contract.py:127
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,0                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:127
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,0,"asset_a"                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:127
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:127
    //                                                                                                           virtual: store app_global_get_ex_did_exist%20#0 to l-stack (no copy)  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_did_exist%20#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                  self.asset_a                                                                                         amm/contract.py:127
    //                                                                                                           virtual: store app_global_get_ex_value%19#0 to l-stack (no copy)      (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_value%19#0,app_global_get_ex_did_exist%20#0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:127
    //                                                                                                           virtual: load app_global_get_ex_did_exist%20#0 from l-stack (no copy) (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_value%19#0,app_global_get_ex_did_exist%20#0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:127
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_value%19#0                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:127
    //                                                                                                           virtual: load tmp%18#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%19#0,tmp%18#0                                                                                                                                                                                                                                                                                                                            a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:127
    //                                                                                                           virtual: load app_global_get_ex_value%19#0 from l-stack (no copy)     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_value%19#0                                                                                                                                                                                                                                                                                                                            a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:127
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:127
    //                                                                                                           virtual: store tmp%21#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%21#0                                                                                                                                                                                                                                                                                                                                                         a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:127
    //                                                                                                           virtual: load tmp%21#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%21#0                                                                                                                                                                                                                                                                                                                                                         assert a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                        amm/contract.py:127
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                        amm/contract.py:127
    frame_dig -5                                                                                                 //                                                                    load a_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.asset_amount                                                                                  amm/contract.py:128
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.asset_amount                                                                                  amm/contract.py:128
    //                                                                                                           virtual: store tmp%22#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0                                                                                                                                                                                                                                                                                                                                                         a_xfer.asset_amount                                                                                  amm/contract.py:128
    dup                                                                                                          //                                                                    load tmp%22#0 from l-stack (copy)                                                                                                                                      (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%22#0                                                                                                                                                                                                                                                                              a_xfer.asset_amount > 0, "amount minimum not met"                                                    amm/contract.py:128
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%22#0,0                                                                                                                                                                                                                                                                            0                                                                                                    amm/contract.py:128
    >                                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,{>}                                                                                                                                                                                                                                                                                   a_xfer.asset_amount > 0, "amount minimum not met"                                                    amm/contract.py:128
    //                                                                                                           virtual: store tmp%23#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%23#0                                                                                                                                                                                                                                                                                                                                                a_xfer.asset_amount > 0, "amount minimum not met"                                                    amm/contract.py:128
    //                                                                                                           virtual: load tmp%23#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%23#0                                                                                                                                                                                                                                                                                                                                                assert a_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:128
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0                                                                                                                                                                                                                                                                                       assert a_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:128
    frame_dig -4                                                                                                 //                                                                    load b_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,b_xfer#0                                                                                                                                                                                                                                                                              b_xfer.asset_receiver                                                                                amm/contract.py:132
    gtxns AssetReceiver                                                                                          //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,{gtxns}                                                                                                                                                                                                                                                                               b_xfer.asset_receiver                                                                                amm/contract.py:132
    //                                                                                                           virtual: store tmp%24#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%24#0                                                                                                                                                                                                                                                                                                                                                b_xfer.asset_receiver                                                                                amm/contract.py:132
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%24#0,{global}                                                                                                                                                                                                                                                                     Global.current_application_address()                                                                 amm/contract.py:132
    //                                                                                                           virtual: store tmp%25#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%24#0,tmp%25#0                                                                                                                                                                                                                                                                                                                                       Global.current_application_address()                                                                 amm/contract.py:132
    //                                                                                                           virtual: load tmp%24#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%25#0,tmp%24#0                                                                                                                                                                                                                                                                                                                                       b_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:132
    //                                                                                                           virtual: load tmp%25#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%24#0,tmp%25#0                                                                                                                                                                                                                                                                                                                                       b_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:132
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,{==}                                                                                                                                                                                                                                                                                  b_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:132
    //                                                                                                           virtual: store tmp%26#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%26#0                                                                                                                                                                                                                                                                                                                                                b_xfer.asset_receiver == Global.current_application_address()                                        amm/contract.py:132
    //                                                                                                           virtual: load tmp%26#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%26#0                                                                                                                                                                                                                                                                                                                                                # valid asset b xfer\nassert (\nb_xfer.asset_receiver == Global.current_application_address()\n),... amm/contract.py:130-133
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0                                                                                                                                                                                                                                                                                       # valid asset b xfer\nassert (\nb_xfer.asset_receiver == Global.current_application_address()\n),... amm/contract.py:130-133
    frame_dig -4                                                                                                 //                                                                    load b_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,b_xfer#0                                                                                                                                                                                                                                                                              b_xfer.xfer_asset                                                                                    amm/contract.py:134
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,{gtxns}                                                                                                                                                                                                                                                                               b_xfer.xfer_asset                                                                                    amm/contract.py:134
    //                                                                                                           virtual: store tmp%27#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0                                                                                                                                                                                                                                                                                                                                                b_xfer.xfer_asset                                                                                    amm/contract.py:134
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,0                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:134
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,0,"asset_b"                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:134
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:134
    //                                                                                                           virtual: store app_global_get_ex_did_exist%29#0 to l-stack (no copy)  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,app_global_get_ex_did_exist%29#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:134
    //                                                                                                           virtual: store app_global_get_ex_value%28#0 to l-stack (no copy)      (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,app_global_get_ex_value%28#0,app_global_get_ex_did_exist%29#0                                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:134
    //                                                                                                           virtual: load app_global_get_ex_did_exist%29#0 from l-stack (no copy) (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,app_global_get_ex_value%28#0,app_global_get_ex_did_exist%29#0                                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:134
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,app_global_get_ex_value%28#0                                                                                                                                                                                                                                                 self.asset_b                                                                                         amm/contract.py:134
    //                                                                                                           virtual: load tmp%27#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,app_global_get_ex_value%28#0,tmp%27#0                                                                                                                                                                                                                                                                                                                   b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:134
    //                                                                                                           virtual: load app_global_get_ex_value%28#0 from l-stack (no copy)     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%27#0,app_global_get_ex_value%28#0                                                                                                                                                                                                                                                                                                                   b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:134
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,{==}                                                                                                                                                                                                                                                                                  b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:134
    //                                                                                                           virtual: store tmp%30#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%30#0                                                                                                                                                                                                                                                                                                                                                b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:134
    //                                                                                                           virtual: load tmp%30#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%30#0                                                                                                                                                                                                                                                                                                                                                assert b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                        amm/contract.py:134
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0                                                                                                                                                                                                                                                                                       assert b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                        amm/contract.py:134
    frame_dig -4                                                                                                 //                                                                    load b_xfer#0 from parameters                                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,b_xfer#0                                                                                                                                                                                                                                                                              b_xfer.asset_amount                                                                                  amm/contract.py:135
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,{gtxns}                                                                                                                                                                                                                                                                               b_xfer.asset_amount                                                                                  amm/contract.py:135
    //                                                                                                           virtual: store tmp%31#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0                                                                                                                                                                                                                                                                                                                                                b_xfer.asset_amount                                                                                  amm/contract.py:135
    dup                                                                                                          //                                                                    load tmp%31#0 from l-stack (copy)                                                                                                                                      (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%31#0                                                                                                                                                                                                                                                                     b_xfer.asset_amount > 0, "amount minimum not met"                                                    amm/contract.py:135
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%31#0,0                                                                                                                                                                                                                                                                   0                                                                                                    amm/contract.py:135
    >                                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,{>}                                                                                                                                                                                                                                                                          b_xfer.asset_amount > 0, "amount minimum not met"                                                    amm/contract.py:135
    //                                                                                                           virtual: store tmp%32#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%32#0                                                                                                                                                                                                                                                                                                                                       b_xfer.asset_amount > 0, "amount minimum not met"                                                    amm/contract.py:135
    //                                                                                                           virtual: load tmp%32#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%32#0                                                                                                                                                                                                                                                                                                                                       assert b_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:135
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0                                                                                                                                                                                                                                                                              assert b_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:135
    callsub _current_pool_balance                                                                                //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,{_current_pool_balance}                                                                                                                                                                                                                                                      self._current_pool_balance()                                                                         amm/contract.py:138
    //                                                                                                           virtual: store tmp%33#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%33#0                                                                                                                                                                                                                                                                                                                                       self._current_pool_balance()                                                                         amm/contract.py:138
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%33#0,{_current_a_balance}                                                                                                                                                                                                                                                self._current_a_balance()                                                                            amm/contract.py:139
    //                                                                                                           virtual: store tmp%34#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%33#0,tmp%34#0                                                                                                                                                                                                                                                                                                                              self._current_a_balance()                                                                            amm/contract.py:139
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%33#0,tmp%34#0,{_current_b_balance}                                                                                                                                                                                                                                       self._current_b_balance()                                                                            amm/contract.py:140
    //                                                                                                           virtual: store tmp%35#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%33#0,tmp%34#0,tmp%35#0                                                                                                                                                                                                                                                                                                                     self._current_b_balance()                                                                            amm/contract.py:140
    uncover 2                                                                                                    //                                                                    load tmp%33#0 from l-stack (no copy)                                                                                                                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%34#0,tmp%35#0,tmp%33#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:137-143
    uncover 2                                                                                                    //                                                                    load tmp%34#0 from l-stack (no copy)                                                                                                                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%35#0,tmp%33#0,tmp%34#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:137-143
    uncover 2                                                                                                    //                                                                    load tmp%35#0 from l-stack (no copy)                                                                                                                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,tmp%31#0,tmp%33#0,tmp%34#0,tmp%35#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:137-143
    uncover 4                                                                                                    //                                                                    load tmp%22#0 from l-stack (no copy)                                                                                                                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%31#0,tmp%33#0,tmp%34#0,tmp%35#0,tmp%22#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:137-143
    uncover 4                                                                                                    //                                                                    load tmp%31#0 from l-stack (no copy)                                                                                                                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,tmp%22#0,tmp%31#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:137-143
    callsub tokens_to_mint                                                                                       //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {tokens_to_mint}                                                                                                                                                                                                                                                                               tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_balance(),... amm/contract.py:137-143
    //                                                                                                           virtual: store to_mint#0 to l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0                                                                                                                                                                                                                                                                                                                                                        to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:137-143
    dup                                                                                                          //                                                                    load to_mint#0 from l-stack (copy)                                                                                                                                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0                                                                                                                                                                                                                                                                            to_mint > 0, "send amount too low"                                                                   amm/contract.py:144
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0,0                                                                                                                                                                                                                                                                          0                                                                                                    amm/contract.py:144
    >                                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{>}                                                                                                                                                                                                                                                                                  to_mint > 0, "send amount too low"                                                                   amm/contract.py:144
    //                                                                                                           virtual: store tmp%38#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%38#0                                                                                                                                                                                                                                                                                                                                               to_mint > 0, "send amount too low"                                                                   amm/contract.py:144
    //                                                                                                           virtual: load tmp%38#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%38#0                                                                                                                                                                                                                                                                                                                                               assert to_mint > 0, "send amount too low"                                                            amm/contract.py:144
    assert // send amount too low                                                                                //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0                                                                                                                                                                                                                                                                                      assert to_mint > 0, "send amount too low"                                                            amm/contract.py:144
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{txn}                                                                                                                                                                                                                                                                                \ndo_asset_transfer(receiver=Transaction.sender()                                                    amm/contract.py:146-147
    //                                                                                                           virtual: store tmp%39#0 to l-stack (no copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0                                                                                                                                                                                                                                                                                                                                               \ndo_asset_transfer(receiver=Transaction.sender()                                                    amm/contract.py:146-147
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,0                                                                                                                                                                                                                                                                           \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,0,"pool_token"                                                                                                                                                                                                                                                              \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    //                                                                                                           virtual: store app_global_get_ex_did_exist%41#0 to l-stack (no copy)  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_did_exist%41#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                        \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    //                                                                                                           virtual: store app_global_get_ex_value%40#0 to l-stack (no copy)      (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_value%40#0,app_global_get_ex_did_exist%41#0                                                                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    //                                                                                                           virtual: load app_global_get_ex_did_exist%41#0 from l-stack (no copy) (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_value%40#0,app_global_get_ex_did_exist%41#0                                                                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_value%40#0                                                                                                                                                                                                                                                \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token                             amm/contract.py:146-147
    //                                                                                                           virtual: load tmp%39#0 from l-stack (no copy)                         (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,app_global_get_ex_value%40#0,tmp%39#0                                                                                                                                                                                                                                                                                                                  # mint tokens\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token, amount=to_... amm/contract.py:146-147
    //                                                                                                           virtual: load app_global_get_ex_value%40#0 from l-stack (no copy)     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_value%40#0                                                                                                                                                                                                                                                                                                                  # mint tokens\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token, amount=to_... amm/contract.py:146-147
    uncover 2                                                                                                    //                                                                    load to_mint#0 from l-stack (no copy)                                                                                                                                  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%39#0,app_global_get_ex_value%40#0,to_mint#0                                                                                                                                                                                                                                                # mint tokens\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token, amount=to_... amm/contract.py:146-147
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                # mint tokens\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token, amount=to_... amm/contract.py:146-147
    callsub _update_ratio                                                                                        //                                                                                                                                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                self._update_ratio()                                                                                 amm/contract.py:148
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_bootstrapped() -> void:
_check_bootstrapped:
    protosubroutine\ndef _check_bootstrapped(self) -> None:                                                  amm/contract.py:254-255

_check_bootstrapped_block@0:
    intself.pool_token                                                                                      amm/contract.py:256
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           0,"pool_token"                                                                                                                                                                                                                                                                                                                                          self.pool_token                                                                                      amm/contract.py:256
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                             self.pool_token                                                                                      amm/contract.py:256
    //                                                                                                           virtual: store app_global_get_ex_did_exist%1#0 to l-stack (no copy)   app_global_get_ex_did_exist%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:256
    //                                                                                                           virtual: store app_global_get_ex_value%0#0 to l-stack (no copy)       app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                               self.pool_token                                                                                      amm/contract.py:256
    //                                                                                                           virtual: load app_global_get_ex_did_exist%1#0 from l-stack (no copy)  app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                               self.pool_token                                                                                      amm/contract.py:256
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           app_global_get_ex_value%0#0                                                                                                                                                                                                                                                                                                                             self.pool_token                                                                                      amm/contract.py:256
    //                                                                                                           virtual: load app_global_get_ex_value%0#0 from l-stack (no copy)      app_global_get_ex_value%0#0                                                                                                                                                                                                                                                                                                                                                                                               assert self.pool_token, "bootstrap method needs to be called first"                                  amm/contract.py:256
    assert // bootstrap method needs to be called firstassert self.pool_token, "bootstrap method needs to be called first"                                  amm/contract.py:256
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
_current_pool_balance:
    protosubroutine\ndef _current_pool_balance(self) -> UInt64:                                              amm/contract.py:296-297

_current_pool_balance_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address()                                                                 amm/contract.py:298
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                                   Global.current_application_address()                                                                 amm/contract.py:298
    int 0                                                                                                        //                                                                                                                                                                                                                                           tmp%2#0,0                                                                                                                                                                                                                                                                                                                                               self.pool_token                                                                                      amm/contract.py:298
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           tmp%2#0,0,"pool_token"                                                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:298
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:298
    //                                                                                                           virtual: store app_global_get_ex_did_exist%4#0 to l-stack (no copy)   tmp%2#0,app_global_get_ex_did_exist%4#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                             self.pool_token                                                                                      amm/contract.py:298
    //                                                                                                           virtual: store app_global_get_ex_value%3#0 to l-stack (no copy)       tmp%2#0,app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:298
    //                                                                                                           virtual: load app_global_get_ex_did_exist%4#0 from l-stack (no copy)  tmp%2#0,app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:298
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:298
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          app_global_get_ex_value%3#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                       self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    //                                                                                                           virtual: load app_global_get_ex_value%3#0 from l-stack (no copy)      tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                                                                                                                                       self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    asset_holding_get AssetBalance                                                                               //                                                                                                                                                                                                                                           {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                                                                                                                             self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    //                                                                                                           virtual: store maybe_value_did_exist%1#0 to l-stack (no copy)         maybe_value_did_exist%1#0,{asset_holding_get}.0                                                                                                                                                                                                                                                                                                                                                                           self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    //                                                                                                           virtual: store maybe_value%0#0 to l-stack (no copy)                   maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    //                                                                                                           virtual: load maybe_value_did_exist%1#0 from l-stack (no copy)        maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    assert // account opted into asset                                                                           //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         self.pool_token.balance(Global.current_application_address())                                        amm/contract.py:298
    //                                                                                                           virtual: load maybe_value%0#0 from l-stack (no copy)                  maybe_value%0#0                                                                                                                                                                                                                                                                                                                                                                                                           return self.pool_token.balance(Global.current_application_address())                                 amm/contract.py:298
    retsub                                                                                                       //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         return self.pool_token.balance(Global.current_application_address())                                 amm/contract.py:298


// examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
_current_a_balance:
    protosubroutine\ndef _current_a_balance(self) -> UInt64:                                                 amm/contract.py:300-301

_current_a_balance_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address()                                                                 amm/contract.py:302
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                                   Global.current_application_address()                                                                 amm/contract.py:302
    int 0                                                                                                        //                                                                                                                                                                                                                                           tmp%2#0,0                                                                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:302
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           tmp%2#0,0,"asset_a"                                                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:302
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:302
    //                                                                                                           virtual: store app_global_get_ex_did_exist%4#0 to l-stack (no copy)   tmp%2#0,app_global_get_ex_did_exist%4#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                             self.asset_a                                                                                         amm/contract.py:302
    //                                                                                                           virtual: store app_global_get_ex_value%3#0 to l-stack (no copy)       tmp%2#0,app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:302
    //                                                                                                           virtual: load app_global_get_ex_did_exist%4#0 from l-stack (no copy)  tmp%2#0,app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:302
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:302
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          app_global_get_ex_value%3#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                       self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    //                                                                                                           virtual: load app_global_get_ex_value%3#0 from l-stack (no copy)      tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                                                                                                                                       self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    asset_holding_get AssetBalance                                                                               //                                                                                                                                                                                                                                           {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                                                                                                                             self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    //                                                                                                           virtual: store maybe_value_did_exist%1#0 to l-stack (no copy)         maybe_value_did_exist%1#0,{asset_holding_get}.0                                                                                                                                                                                                                                                                                                                                                                           self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    //                                                                                                           virtual: store maybe_value%0#0 to l-stack (no copy)                   maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    //                                                                                                           virtual: load maybe_value_did_exist%1#0 from l-stack (no copy)        maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    assert // account opted into asset                                                                           //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         self.asset_a.balance(Global.current_application_address())                                           amm/contract.py:302
    //                                                                                                           virtual: load maybe_value%0#0 from l-stack (no copy)                  maybe_value%0#0                                                                                                                                                                                                                                                                                                                                                                                                           return self.asset_a.balance(Global.current_application_address())                                    amm/contract.py:302
    retsub                                                                                                       //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         return self.asset_a.balance(Global.current_application_address())                                    amm/contract.py:302


// examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
_current_b_balance:
    protosubroutine\ndef _current_b_balance(self) -> UInt64:                                                 amm/contract.py:304-305

_current_b_balance_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address()                                                                 amm/contract.py:306
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                                   Global.current_application_address()                                                                 amm/contract.py:306
    int 0                                                                                                        //                                                                                                                                                                                                                                           tmp%2#0,0                                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:306
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           tmp%2#0,0,"asset_b"                                                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:306
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:306
    //                                                                                                           virtual: store app_global_get_ex_did_exist%4#0 to l-stack (no copy)   tmp%2#0,app_global_get_ex_did_exist%4#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                             self.asset_b                                                                                         amm/contract.py:306
    //                                                                                                           virtual: store app_global_get_ex_value%3#0 to l-stack (no copy)       tmp%2#0,app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:306
    //                                                                                                           virtual: load app_global_get_ex_did_exist%4#0 from l-stack (no copy)  tmp%2#0,app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:306
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:306
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          app_global_get_ex_value%3#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                       self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    //                                                                                                           virtual: load app_global_get_ex_value%3#0 from l-stack (no copy)      tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                                                                                                                                       self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    asset_holding_get AssetBalance                                                                               //                                                                                                                                                                                                                                           {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                                                                                                                             self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    //                                                                                                           virtual: store maybe_value_did_exist%1#0 to l-stack (no copy)         maybe_value_did_exist%1#0,{asset_holding_get}.0                                                                                                                                                                                                                                                                                                                                                                           self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    //                                                                                                           virtual: store maybe_value%0#0 to l-stack (no copy)                   maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    //                                                                                                           virtual: load maybe_value_did_exist%1#0 from l-stack (no copy)        maybe_value%0#0,maybe_value_did_exist%1#0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    assert // account opted into asset                                                                           //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         self.asset_b.balance(Global.current_application_address())                                           amm/contract.py:306
    //                                                                                                           virtual: load maybe_value%0#0 from l-stack (no copy)                  maybe_value%0#0                                                                                                                                                                                                                                                                                                                                                                                                           return self.asset_b.balance(Global.current_application_address())                                    amm/contract.py:306
    retsub                                                                                                       //                                                                                                                                                                                                                                           maybe_value%0#0                                                                                                                                                                                                                                                                                                                                         return self.asset_b.balance(Global.current_application_address())                                    amm/contract.py:306


// examples.amm.contract.tokens_to_mint(pool_balance: uint64, a_balance: uint64, b_balance: uint64, a_amount: uint64, b_amount: uint64) -> uint64:
tokens_to_mint:
    proto 5 1                                                                                                    //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 |                                                                                                                                                                                                                                                                                      @subroutine\ndef tokens_to_mint(\n*,\npool_balance: UInt64,\na_balance: UInt64,\nb_balance: UInt6... amm/contract.py:327-335
    byte ""
    dup                                                                                                          //                                                                    allocate 2 to stack                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |

tokens_to_mint_block@0:
    frame_dig -4                                                                                                 //                                                                    load a_balance#0 from parameters                                                                                                                                       (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0                                                                                                                                                                                                                                                a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    frame_dig -2                                                                                                 //                                                                    load a_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0,a_amount#0                                                                                                                                                                                                                                     a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                                                                                                                                       a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                      a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                      a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    bz tokens_to_mint_bool_false@3                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    // Implicit fall through to tokens_to_mint_and_contd@1                                                       //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336

tokens_to_mint_and_contd@1:
    frame_dig -3                                                                                                 //                                                                    load b_balance#0 from parameters                                                                                                                                       (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0                                                                                                                                                                                                                                                b_balance == b_amount                                                                                amm/contract.py:336
    frame_dig -1                                                                                                 //                                                                    load b_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0,b_amount#0                                                                                                                                                                                                                                     b_balance == b_amount                                                                                amm/contract.py:336
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                                                                                                                                       b_balance == b_amount                                                                                amm/contract.py:336
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                      b_balance == b_amount                                                                                amm/contract.py:336
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                      a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    bz tokens_to_mint_bool_false@3                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336
    // Implicit fall through to tokens_to_mint_bool_true@2                                                       //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:336

tokens_to_mint_bool_true@2:
    int 1                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 1
    //                                                                                                           virtual: store and_result%2#0 to l-stack (no copy)                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%2#0
    //                                                                                                           virtual: load and_result%2#0 from l-stack (no copy)                   (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%2#0
    //                                                                                                           virtual: store is_initial_mint#0 to x-stack (no copy)                 (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |
    b tokens_to_mint_bool_merge@4                                                                                //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |                                                                                                                               is_initial_mint#0

tokens_to_mint_bool_false@3:
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 0
    //                                                                                                           virtual: store and_result%2#0 to l-stack (no copy)                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%2#0
    //                                                                                                           virtual: load and_result%2#0 from l-stack (no copy)                   (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%2#0
    //                                                                                                           virtual: store is_initial_mint#0 to x-stack (no copy)                 (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |
    // Implicit fall through to tokens_to_mint_bool_merge@4                                                      //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |                                                                                                                               is_initial_mint#0

tokens_to_mint_bool_merge@4:
    //                                                                                                           virtual: load is_initial_mint#0 from x-stack                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | is_initial_mint#0                                                                                                                                                                                                                                                                                       is_initial_mint#0    if is_initial_mint:                                                                                  amm/contract.py:337
    bz tokens_to_mint_after_if_else@6                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            if is_initial_mint:                                                                                  amm/contract.py:337
    // Implicit fall through to tokens_to_mint_if_body@5                                                         //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            if is_initial_mint:                                                                                  amm/contract.py:337

tokens_to_mint_if_body@5:
    frame_dig -2                                                                                                 //                                                                    load a_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0                                                                                                                                                                                                                                                 a_amount * b_amount                                                                                  amm/contract.py:338
    frame_dig -1                                                                                                 //                                                                    load b_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0,b_amount#0                                                                                                                                                                                                                                      a_amount * b_amount                                                                                  amm/contract.py:338
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                                                                                                                        a_amount * b_amount                                                                                  amm/contract.py:338
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                      a_amount * b_amount                                                                                  amm/contract.py:338
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                      sqrt(a_amount * b_amount)                                                                            amm/contract.py:338
    sqrt                                                                                                         //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {sqrt}                                                                                                                                                                                                                                                     sqrt(a_amount * b_amount)                                                                            amm/contract.py:338
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                      sqrt(a_amount * b_amount)                                                                            amm/contract.py:338
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                      sqrt(a_amount * b_amount) - SCALE                                                                    amm/contract.py:338
    int 1000                                                                                                     //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0,1000                                                                                                                                                                                                                                               SCALE                                                                                                amm/contract.py:338
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                                                                                                                                        sqrt(a_amount * b_amount) - SCALE                                                                    amm/contract.py:338
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                      sqrt(a_amount * b_amount) - SCALE                                                                    amm/contract.py:338
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                      return sqrt(a_amount * b_amount) - SCALE                                                             amm/contract.py:338
    frame_bury 0
    retsub                                                                                                       //                                                                                                                                                                                                                                           tmp%5#0                                                                                                                                                                                                                                                                                                                                                 return sqrt(a_amount * b_amount) - SCALE                                                             amm/contract.py:338

tokens_to_mint_after_if_else@6:
    int 10000000000                                                                                              //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000                                                                                                                                                                                                                                                TOTAL_SUPPLY                                                                                         amm/contract.py:339
    frame_dig -5                                                                                                 //                                                                    load pool_balance#0 from parameters                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000,pool_balance#0                                                                                                                                                                                                                                 issued = TOTAL_SUPPLY - pool_balance                                                                 amm/contract.py:339
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                                                                                                                                        TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:339
    //                                                                                                           virtual: store issued#0 to x-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                                                                                                                                                                                               issued = TOTAL_SUPPLY - pool_balance                                                                 amm/contract.py:339
    int 1000                                                                                                     //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000                                                                                                                                                                                                                                        SCALE                                                                                                amm/contract.py:340
    frame_dig -2                                                                                                 //                                                                    load a_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000,a_amount#0                                                                                                                                                                                                                             SCALE * a_amount                                                                                     amm/contract.py:340
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {*}                                                                                                                                                                                                                                         SCALE * a_amount                                                                                     amm/contract.py:340
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0                                                                                                                                                                                                                                                                                                       SCALE * a_amount                                                                                     amm/contract.py:340
    frame_dig -4                                                                                                 //                                                                    load a_balance#0 from parameters                                                                                                                                       (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,a_balance#0                                                                                                                                                                                                                         a_balance - a_amount                                                                                 amm/contract.py:340
    frame_dig -2                                                                                                 //                                                                    load a_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,a_balance#0,a_amount#0                                                                                                                                                                                                              a_balance - a_amount                                                                                 amm/contract.py:340
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,{-}                                                                                                                                                                                                                                 a_balance - a_amount                                                                                 amm/contract.py:340
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,tmp%7#0                                                                                                                                                                                                                                                                                               a_balance - a_amount                                                                                 amm/contract.py:340
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%7#0,tmp%6#0                                                                                                                                                                                                                                                                                               a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:340
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,tmp%7#0                                                                                                                                                                                                                                                                                               a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:340
    /                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {/}                                                                                                                                                                                                                                         SCALE * a_amount // (a_balance - a_amount)                                                           amm/contract.py:340
    dup                                                                                                          //                                                                    store a_ratio#0 to l-stack (copy)                                                                                                                                      (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,a_ratio#0                                                                                                                                                                                                                         a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:340
    frame_bury 0                                                                                                 //                                                                    store a_ratio#0 to f-stack                                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                                                                                                                                                   a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:340
    int 1000                                                                                                     //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000                                                                                                                                                                                                                              SCALE                                                                                                amm/contract.py:341
    frame_dig -1                                                                                                 //                                                                    load b_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000,b_amount#0                                                                                                                                                                                                                   SCALE * b_amount                                                                                     amm/contract.py:341
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{*}                                                                                                                                                                                                                               SCALE * b_amount                                                                                     amm/contract.py:341
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0                                                                                                                                                                                                                                                                                             SCALE * b_amount                                                                                     amm/contract.py:341
    frame_dig -3                                                                                                 //                                                                    load b_balance#0 from parameters                                                                                                                                       (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,b_balance#0                                                                                                                                                                                                               b_balance - b_amount                                                                                 amm/contract.py:341
    frame_dig -1                                                                                                 //                                                                    load b_amount#0 from parameters                                                                                                                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,b_balance#0,b_amount#0                                                                                                                                                                                                    b_balance - b_amount                                                                                 amm/contract.py:341
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,{-}                                                                                                                                                                                                                       b_balance - b_amount                                                                                 amm/contract.py:341
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,tmp%9#0                                                                                                                                                                                                                                                                                     b_balance - b_amount                                                                                 amm/contract.py:341
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%9#0,tmp%8#0                                                                                                                                                                                                                                                                                     b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:341
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,tmp%9#0                                                                                                                                                                                                                                                                                     b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:341
    /                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{/}                                                                                                                                                                                                                               SCALE * b_amount // (b_balance - b_amount)                                                           amm/contract.py:341
    dup                                                                                                          //                                                                    store b_ratio#0 to l-stack (copy)                                                                                                                                      (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0,b_ratio#0                                                                                                                                                                                                               b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:341
    frame_bury 1                                                                                                 //                                                                    store b_ratio#0 to f-stack                                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0                                                                                                                                                                                                                         b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:341
    //                                                                                                           virtual: load a_ratio#0 from l-stack (no copy)                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | b_ratio#0,a_ratio#0                                                                                                                                                                                                                                                                                           a_ratio < b_ratio:                                                                                   amm/contract.py:342
    //                                                                                                           virtual: load b_ratio#0 from l-stack (no copy)                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0                                                                                                                                                                                                                                                                                           a_ratio < b_ratio:                                                                                   amm/contract.py:342
    <                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {<}                                                                                                                                                                                                                                         a_ratio < b_ratio:                                                                                   amm/contract.py:342
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%10#0                                                                                                                                                                                                                                                                                                      a_ratio < b_ratio:                                                                                   amm/contract.py:342
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%10#0                                                                                                                                                                                                                                                                                                      if a_ratio < b_ratio:                                                                                amm/contract.py:342
    bz tokens_to_mint_else_body@8                                                                                //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                                                                                                                             if a_ratio < b_ratio:                                                                                amm/contract.py:342
    // Implicit fall through to tokens_to_mint_if_body@7                                                         //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                        issued#0                                                                                             if a_ratio < b_ratio:                                                                                amm/contract.py:342

tokens_to_mint_if_body@7:
    frame_dig 0                                                                                                  //                                                                    load a_ratio#0 from f-stack                                                                                                                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                                              issued#0                                                                                             a_ratio * issued                                                                                     amm/contract.py:343
    swap                                                                                                         //                                                                    load issued#0 from x-stack                                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_ratio#0,issued#0                                                                                                                                                                                                                                         a_ratio * issued                                                                                     amm/contract.py:343
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                                                                                                                        a_ratio * issued                                                                                     amm/contract.py:343
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                     a_ratio * issued                                                                                     amm/contract.py:343
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                     a_ratio * issued // SCALE                                                                            amm/contract.py:343
    int 1000                                                                                                     //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0,1000                                                                                                                                                                                                                                              SCALE                                                                                                amm/contract.py:343
    /                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                                                                                                                                        a_ratio * issued // SCALE                                                                            amm/contract.py:343
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%12#0                                                                                                                                                                                                                                                                                                                     a_ratio * issued // SCALE                                                                            amm/contract.py:343
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%12#0                                                                                                                                                                                                                                                                                                                     return a_ratio * issued // SCALE                                                                     amm/contract.py:343
    frame_bury 0
    retsub                                                                                                       //                                                                                                                                                                                                                                           tmp%12#0                                                                                                                                                                                                                                                                                                                                                return a_ratio * issued // SCALE                                                                     amm/contract.py:343

tokens_to_mint_else_body@8:
    frame_dig 1                                                                                                  //                                                                    load b_ratio#0 from f-stack                                                                                                                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | b_ratio#0                                                                                                                              issued#0                                                                                             b_ratio * issued                                                                                     amm/contract.py:345
    swap                                                                                                         //                                                                    load issued#0 from x-stack                                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_ratio#0,issued#0                                                                                                                                                                                                                                         b_ratio * issued                                                                                     amm/contract.py:345
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                                                                                                                        b_ratio * issued                                                                                     amm/contract.py:345
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0                                                                                                                                                                                                                                                                                                                     b_ratio * issued                                                                                     amm/contract.py:345
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0                                                                                                                                                                                                                                                                                                                     b_ratio * issued // SCALE                                                                            amm/contract.py:345
    int 1000                                                                                                     //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0,1000                                                                                                                                                                                                                                              SCALE                                                                                                amm/contract.py:345
    /                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                                                                                                                                        b_ratio * issued // SCALE                                                                            amm/contract.py:345
    //                                                                                                           virtual: store tmp%14#0 to l-stack (no copy)                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%14#0                                                                                                                                                                                                                                                                                                                     b_ratio * issued // SCALE                                                                            amm/contract.py:345
    //                                                                                                           virtual: load tmp%14#0 from l-stack (no copy)                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%14#0                                                                                                                                                                                                                                                                                                                     return b_ratio * issued // SCALE                                                                     amm/contract.py:345
    frame_bury 0
    retsub                                                                                                       //                                                                                                                                                                                                                                           tmp%14#0                                                                                                                                                                                                                                                                                                                                                return b_ratio * issued // SCALE                                                                     amm/contract.py:345


// examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
_update_ratio:
    protosubroutine\ndef _update_ratio(self) -> None:                                                        amm/contract.py:258-259

_update_ratio_block@0:
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                           {_current_a_balance}                                                                                                                                                                                                                                                                                                                                    self._current_a_balance()                                                                            amm/contract.py:260
    //                                                                                                           virtual: store a_balance#0 to l-stack (no copy)                       a_balance#0                                                                                                                                                                                                                                                                                                                                                                                                               a_balance = self._current_a_balance()                                                                amm/contract.py:260
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                           a_balance#0,{_current_b_balance}                                                                                                                                                                                                                                                                                                                        self._current_b_balance()                                                                            amm/contract.py:261
    swap                                                                                                         //                                                                    store b_balance#0 to l-stack (no copy)                                                                                                                                 b_balance#0,a_balance#0                                                                                                                                                                                                                                                                                                                                 b_balance = self._current_b_balance()                                                                amm/contract.py:261
    //                                                                                                           virtual: load a_balance#0 from l-stack (no copy)                      b_balance#0,a_balance#0                                                                                                                                                                                                                                                                                                                                                                                                   a_balance * SCALE                                                                                    amm/contract.py:263
    int 1000                                                                                                     //                                                                                                                                                                                                                                           b_balance#0,a_balance#0,1000                                                                                                                                                                                                                                                                                                                            SCALE                                                                                                amm/contract.py:263
    *                                                                                                            //                                                                                                                                                                                                                                           b_balance#0,{*}                                                                                                                                                                                                                                                                                                                                         a_balance * SCALE                                                                                    amm/contract.py:263
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                           b_balance#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                       a_balance * SCALE                                                                                    amm/contract.py:263
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                          b_balance#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                       a_balance * SCALE // b_balance                                                                       amm/contract.py:263
    swap                                                                                                         //                                                                    load b_balance#0 from l-stack (no copy)                                                                                                                                tmp%0#0,b_balance#0                                                                                                                                                                                                                                                                                                                                     a_balance * SCALE // b_balance                                                                       amm/contract.py:263
    /                                                                                                            //                                                                                                                                                                                                                                           {/}                                                                                                                                                                                                                                                                                                                                                     a_balance * SCALE // b_balance                                                                       amm/contract.py:263
    //                                                                                                           virtual: store new_state_value%1#0 to l-stack (no copy)               new_state_value%1#0                                                                                                                                                                                                                                                                                                                                                                                                       a_balance * SCALE // b_balance                                                                       amm/contract.py:263
    byte "ratio"                                                                                                 //                                                                                                                                                                                                                                           new_state_value%1#0,"ratio"                                                                                                                                                                                                                                                                                                                             self.ratio                                                                                           amm/contract.py:263
    swap                                                                                                         //                                                                    load new_state_value%1#0 from l-stack (no copy)                                                                                                                        "ratio",new_state_value%1#0                                                                                                                                                                                                                                                                                                                             self.ratio = a_balance * SCALE // b_balance                                                          amm/contract.py:263
    app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   self.ratio = a_balance * SCALE // b_balance                                                          amm/contract.py:263
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.burn(pool_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
burn:
    proto 4 0                                                                                                    //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      @arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": ... amm/contract.py:150-163

burn_block@0:
    callsub _check_bootstrapped                                                                                  //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      self._check_bootstrapped()                                                                           amm/contract.py:173
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:175
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:175
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                          self.pool_token                                                                                      amm/contract.py:175
    //                                                                                                           virtual: store app_global_get_ex_did_exist%1#0 to l-stack (no copy)   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:175
    //                                                                                                           virtual: store app_global_get_ex_value%0#0 to l-stack (no copy)       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:175
    //                                                                                                           virtual: load app_global_get_ex_did_exist%1#0 from l-stack (no copy)  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:175
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                                                                                                          self.pool_token                                                                                      amm/contract.py:175
    frame_dig -3                                                                                                 //                                                                    load pool_asset#0 from parameters                                                                                                                                      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,pool_asset#0                                                                                                                                                                                                                                                             pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:175
    swap                                                                                                         //                                                                    load app_global_get_ex_value%0#0 from l-stack (no copy)                                                                                                                (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_asset#0,app_global_get_ex_value%0#0                                                                                                                                                                                                                                                             pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:175
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:175
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:175
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                assert pool_asset == self.pool_token, "asset pool incorrect"                                         amm/contract.py:175
    assert // asset pool incorrect                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert pool_asset == self.pool_token, "asset pool incorrect"                                         amm/contract.py:175
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:176
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:176
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:176
    //                                                                                                           virtual: store app_global_get_ex_did_exist%4#0 to l-stack (no copy)   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%4#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                  self.asset_a                                                                                         amm/contract.py:176
    //                                                                                                           virtual: store app_global_get_ex_value%3#0 to l-stack (no copy)       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:176
    //                                                                                                           virtual: load app_global_get_ex_did_exist%4#0 from l-stack (no copy)  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:176
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:176
    frame_dig -2                                                                                                 //                                                                    load a_asset#0 from parameters                                                                                                                                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,a_asset#0                                                                                                                                                                                                                                                                a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:176
    swap                                                                                                         //                                                                    load app_global_get_ex_value%3#0 from l-stack (no copy)                                                                                                                (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_asset#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                                                a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:176
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:176
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                                a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:176
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                                assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:176
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:176
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:177
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:177
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:177
    //                                                                                                           virtual: store app_global_get_ex_did_exist%7#0 to l-stack (no copy)   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_did_exist%7#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:177
    //                                                                                                           virtual: store app_global_get_ex_value%6#0 to l-stack (no copy)       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,app_global_get_ex_did_exist%7#0                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:177
    //                                                                                                           virtual: load app_global_get_ex_did_exist%7#0 from l-stack (no copy)  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,app_global_get_ex_did_exist%7#0                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:177
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0                                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:177
    frame_dig -1                                                                                                 //                                                                    load b_asset#0 from parameters                                                                                                                                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,b_asset#0                                                                                                                                                                                                                                                                b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:177
    swap                                                                                                         //                                                                    load app_global_get_ex_value%6#0 from l-stack (no copy)                                                                                                                (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_asset#0,app_global_get_ex_value%6#0                                                                                                                                                                                                                                                                b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:177
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:177
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                                b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:177
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                                assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:177
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:177
    frame_dig -4                                                                                                 //                                                                    load pool_xfer#0 from parameters                                                                                                                                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                                                                                                                          pool_xfer.asset_receiver                                                                             amm/contract.py:180
    gtxns AssetReceiver                                                                                          //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                              pool_xfer.asset_receiver                                                                             amm/contract.py:180
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0                                                                                                                                                                                                                                                                                                                                                                pool_xfer.asset_receiver                                                                             amm/contract.py:180
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{global}                                                                                                                                                                                                                                                                                     Global.current_application_address()                                                                 amm/contract.py:180
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                                       Global.current_application_address()                                                                 amm/contract.py:180
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%10#0,tmp%9#0                                                                                                                                                                                                                                                                                                                                                       pool_xfer.asset_receiver == Global.current_application_address()                                     amm/contract.py:180
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                                       pool_xfer.asset_receiver == Global.current_application_address()                                     amm/contract.py:180
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 pool_xfer.asset_receiver == Global.current_application_address()                                     amm/contract.py:180
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                                                               pool_xfer.asset_receiver == Global.current_application_address()                                     amm/contract.py:180
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                                                               assert (\npool_xfer.asset_receiver == Global.current_application_address()\n), "receiver not app ... amm/contract.py:179-181
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert (\npool_xfer.asset_receiver == Global.current_application_address()\n), "receiver not app ... amm/contract.py:179-181
    frame_dig -4                                                                                                 //                                                                    load pool_xfer#0 from parameters                                                                                                                                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                                                                                                                          pool_xfer.asset_amount                                                                               amm/contract.py:182
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                              pool_xfer.asset_amount                                                                               amm/contract.py:182
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0                                                                                                                                                                                                                                                                                                                                                               pool_xfer.asset_amount                                                                               amm/contract.py:182
    dup                                                                                                          //                                                                    load tmp%12#0 from l-stack (copy)                                                                                                                                      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%12#0                                                                                                                                                                                                                                                                                    pool_xfer.asset_amount > 0, "amount minimum not met"                                                 amm/contract.py:182
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%12#0,0                                                                                                                                                                                                                                                                                  0                                                                                                    amm/contract.py:182
    >                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{>}                                                                                                                                                                                                                                                                                         pool_xfer.asset_amount > 0, "amount minimum not met"                                                 amm/contract.py:182
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%13#0                                                                                                                                                                                                                                                                                                                                                      pool_xfer.asset_amount > 0, "amount minimum not met"                                                 amm/contract.py:182
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%13#0                                                                                                                                                                                                                                                                                                                                                      assert pool_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:182
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0                                                                                                                                                                                                                                                                                             assert pool_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:182
    frame_dig -4                                                                                                 //                                                                    load pool_xfer#0 from parameters                                                                                                                                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_xfer#0                                                                                                                                                                                                                                                                                 pool_xfer.xfer_asset                                                                                 amm/contract.py:183
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{gtxns}                                                                                                                                                                                                                                                                                     pool_xfer.xfer_asset                                                                                 amm/contract.py:183
    //                                                                                                           virtual: store tmp%14#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0                                                                                                                                                                                                                                                                                                                                                      pool_xfer.xfer_asset                                                                                 amm/contract.py:183
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,0                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:183
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,0,"pool_token"                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:183
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                        self.pool_token                                                                                      amm/contract.py:183
    //                                                                                                           virtual: store app_global_get_ex_did_exist%16#0 to l-stack (no copy)  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,app_global_get_ex_did_exist%16#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                               self.pool_token                                                                                      amm/contract.py:183
    //                                                                                                           virtual: store app_global_get_ex_value%15#0 to l-stack (no copy)      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,app_global_get_ex_value%15#0,app_global_get_ex_did_exist%16#0                                                                                                                                                                                                                                                                                        self.pool_token                                                                                      amm/contract.py:183
    //                                                                                                           virtual: load app_global_get_ex_did_exist%16#0 from l-stack (no copy) (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,app_global_get_ex_value%15#0,app_global_get_ex_did_exist%16#0                                                                                                                                                                                                                                                                                        self.pool_token                                                                                      amm/contract.py:183
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,app_global_get_ex_value%15#0                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:183
    //                                                                                                           virtual: load tmp%14#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,app_global_get_ex_value%15#0,tmp%14#0                                                                                                                                                                                                                                                                                                                         pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:183
    //                                                                                                           virtual: load app_global_get_ex_value%15#0 from l-stack (no copy)     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%14#0,app_global_get_ex_value%15#0                                                                                                                                                                                                                                                                                                                         pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:183
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{==}                                                                                                                                                                                                                                                                                        pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:183
    //                                                                                                           virtual: store tmp%17#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                                      pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:183
    //                                                                                                           virtual: load tmp%17#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                                      assert pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                               amm/contract.py:183
    assert // asset pool incorrect                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0                                                                                                                                                                                                                                                                                             assert pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                               amm/contract.py:183
    frame_dig -4                                                                                                 //                                                                    load pool_xfer#0 from parameters                                                                                                                                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_xfer#0                                                                                                                                                                                                                                                                                 pool_xfer.sender                                                                                     amm/contract.py:184
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{gtxns}                                                                                                                                                                                                                                                                                     pool_xfer.sender                                                                                     amm/contract.py:184
    //                                                                                                           virtual: store tmp%18#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                                      pool_xfer.sender                                                                                     amm/contract.py:184
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%18#0,{txn}                                                                                                                                                                                                                                                                              Transaction.sender()                                                                                 amm/contract.py:184
    //                                                                                                           virtual: store tmp%19#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%18#0,tmp%19#0                                                                                                                                                                                                                                                                                                                                             Transaction.sender()                                                                                 amm/contract.py:184
    //                                                                                                           virtual: load tmp%18#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%19#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                             pool_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:184
    //                                                                                                           virtual: load tmp%19#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%18#0,tmp%19#0                                                                                                                                                                                                                                                                                                                                             pool_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:184
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{==}                                                                                                                                                                                                                                                                                        pool_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:184
    //                                                                                                           virtual: store tmp%20#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%20#0                                                                                                                                                                                                                                                                                                                                                      pool_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:184
    //                                                                                                           virtual: load tmp%20#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,tmp%20#0                                                                                                                                                                                                                                                                                                                                                      assert pool_xfer.sender == Transaction.sender(), "sender invalid"                                    amm/contract.py:184
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0                                                                                                                                                                                                                                                                                             assert pool_xfer.sender == Transaction.sender(), "sender invalid"                                    amm/contract.py:184
    callsub _current_pool_balance                                                                                //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{_current_pool_balance}                                                                                                                                                                                                                                                                     number of tokens issued\n# !important: this happens prior to receiving the current axfer of pool ... amm/contract.py:186-188
    //                                                                                                           virtual: store pool_balance#0 to l-stack (no copy)                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0                                                                                                                                                                                                                                                                                                                                                # Get the total number of tokens issued\n# !important: this happens prior to receiving the curren... amm/contract.py:186-188
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0,{_current_a_balance}                                                                                                                                                                                                                                                         self._current_a_balance()                                                                            amm/contract.py:191
    //                                                                                                           virtual: store tmp%21#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0,tmp%21#0                                                                                                                                                                                                                                                                                                                                       self._current_a_balance()                                                                            amm/contract.py:191
    dig 1                                                                                                        //                                                                    load pool_balance#0 from l-stack (copy)                                                                                                                                (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0,tmp%21#0,pool_balance#0                                                                                                                                                                                                                                                      a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:189-193
    swap                                                                                                         //                                                                    load tmp%21#0 from l-stack (no copy)                                                                                                                                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0,pool_balance#0,tmp%21#0                                                                                                                                                                                                                                                      a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:189-193
    dig 3                                                                                                        //                                                                    load tmp%12#0 from l-stack (copy)                                                                                                                                      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0,pool_balance#0,tmp%21#0,tmp%12#0                                                                                                                                                                                                                                             a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:189-193
    callsub tokens_to_burn                                                                                       //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,pool_balance#0,{tokens_to_burn}                                                                                                                                                                                                                                                             tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=pool_xfer.... amm/contract.py:189-193
    cover 2                                                                                                      //                                                                    store a_amt#0 to l-stack (no copy)                                                                                                                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%12#0,pool_balance#0                                                                                                                                                                                                                                                                      a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:189-193
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%12#0,pool_balance#0,{_current_b_balance}                                                                                                                                                                                                                                                 self._current_b_balance()                                                                            amm/contract.py:196
    //                                                                                                           virtual: store tmp%23#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%12#0,pool_balance#0,tmp%23#0                                                                                                                                                                                                                                                                                                                               self._current_b_balance()                                                                            amm/contract.py:196
    //                                                                                                           virtual: load pool_balance#0 from l-stack (no copy)                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%12#0,tmp%23#0,pool_balance#0                                                                                                                                                                                                                                                                                                                               b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:194-198
    //                                                                                                           virtual: load tmp%23#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%12#0,pool_balance#0,tmp%23#0                                                                                                                                                                                                                                                                                                                               b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:194-198
    uncover 2                                                                                                    //                                                                    load tmp%12#0 from l-stack (no copy)                                                                                                                                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%23#0,tmp%12#0                                                                                                                                                                                                                                                             b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:194-198
    callsub tokens_to_burn                                                                                       //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,{tokens_to_burn}                                                                                                                                                                                                                                                                             tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=pool_xfer.... amm/contract.py:194-198
    swap                                                                                                         //                                                                    store b_amt#0 to l-stack (no copy)                                                                                                                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0                                                                                                                                                                                                                                                                                      b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:194-198
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,{txn}                                                                                                                                                                                                                                                                                t of a\ndo_asset_transfer(receiver=Transaction.sender()                                              amm/contract.py:200-201
    //                                                                                                           virtual: store tmp%25#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0                                                                                                                                                                                                                                                                                                                                               t of a\ndo_asset_transfer(receiver=Transaction.sender()                                              amm/contract.py:200-201
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,0                                                                                                                                                                                                                                                                           \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,0,"asset_a"                                                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    //                                                                                                           virtual: store app_global_get_ex_did_exist%27#0 to l-stack (no copy)  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_did_exist%27#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                        \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    //                                                                                                           virtual: store app_global_get_ex_value%26#0 to l-stack (no copy)      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_value%26#0,app_global_get_ex_did_exist%27#0                                                                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    //                                                                                                           virtual: load app_global_get_ex_did_exist%27#0 from l-stack (no copy) (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_value%26#0,app_global_get_ex_did_exist%27#0                                                                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_value%26#0                                                                                                                                                                                                                                                \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a                                amm/contract.py:200-201
    //                                                                                                           virtual: load tmp%25#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,app_global_get_ex_value%26#0,tmp%25#0                                                                                                                                                                                                                                                                                                                  # Send back commensurate amt of a\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:200-201
    //                                                                                                           virtual: load app_global_get_ex_value%26#0 from l-stack (no copy)     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_value%26#0                                                                                                                                                                                                                                                                                                                  # Send back commensurate amt of a\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:200-201
    uncover 2                                                                                                    //                                                                    load a_amt#0 from l-stack (no copy)                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%25#0,app_global_get_ex_value%26#0,a_amt#0                                                                                                                                                                                                                                                # Send back commensurate amt of a\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:200-201
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0                                                                                                                                                                                                                                                                                              # Send back commensurate amt of a\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:200-201
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,{txn}                                                                                                                                                                                                                                                                                        t of b\ndo_asset_transfer(receiver=Transaction.sender()                                              amm/contract.py:203-204
    //                                                                                                           virtual: store tmp%28#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0                                                                                                                                                                                                                                                                                                                                                       t of b\ndo_asset_transfer(receiver=Transaction.sender()                                              amm/contract.py:203-204
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,0                                                                                                                                                                                                                                                                                   \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,0,"asset_b"                                                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    //                                                                                                           virtual: store app_global_get_ex_did_exist%30#0 to l-stack (no copy)  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_did_exist%30#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    //                                                                                                           virtual: store app_global_get_ex_value%29#0 to l-stack (no copy)      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_value%29#0,app_global_get_ex_did_exist%30#0                                                                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    //                                                                                                           virtual: load app_global_get_ex_did_exist%30#0 from l-stack (no copy) (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_value%29#0,app_global_get_ex_did_exist%30#0                                                                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_value%29#0                                                                                                                                                                                                                                                        \ndo_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b                                amm/contract.py:203-204
    //                                                                                                           virtual: load tmp%28#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,app_global_get_ex_value%29#0,tmp%28#0                                                                                                                                                                                                                                                                                                                          # Send back commensurate amt of b\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:203-204
    //                                                                                                           virtual: load app_global_get_ex_value%29#0 from l-stack (no copy)     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_value%29#0                                                                                                                                                                                                                                                                                                                          # Send back commensurate amt of b\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:203-204
    uncover 2                                                                                                    //                                                                    load b_amt#0 from l-stack (no copy)                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%28#0,app_global_get_ex_value%29#0,b_amt#0                                                                                                                                                                                                                                                        # Send back commensurate amt of b\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:203-204
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      # Send back commensurate amt of b\ndo_asset_transfer(receiver=Transaction.sender(), asset=self.as... amm/contract.py:203-204
    callsub _update_ratio                                                                                        //                                                                                                                                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      self._update_ratio()                                                                                 amm/contract.py:205
    retsub                                                                                                       //


// examples.amm.contract.tokens_to_burn(pool_balance: uint64, supply: uint64, amount: uint64) -> uint64:
tokens_to_burn:
    proto 3 1                                                                                                    //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,supply#0,amount#0 |                                                                                                                                                                                                                                                                                                                  @subroutine\ndef tokens_to_burn(*, pool_balance: UInt64, supply: UInt64, amount: UInt64) -> UInt64:  amm/contract.py:348-349

tokens_to_burn_block@0:
    int 10000000000                                                                                              //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000                                                                                                                                                                                                                                                                                                      TOTAL_SUPPLY                                                                                         amm/contract.py:350
    frame_dig -3                                                                                                 //                                                                    load pool_balance#0 from parameters                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000,pool_balance#0                                                                                                                                                                                                                                                                                       TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:350
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                                                                                                                              TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:350
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                           (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                            TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:350
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                          (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                            issued = TOTAL_SUPPLY - pool_balance - amount                                                        amm/contract.py:350
    frame_dig -1                                                                                                 //                                                                    load amount#0 from parameters                                                                                                                                          (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0,amount#0                                                                                                                                                                                                                                                                                                 issued = TOTAL_SUPPLY - pool_balance - amount                                                        amm/contract.py:350
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                                                                                                                              TOTAL_SUPPLY - pool_balance - amount                                                                 amm/contract.py:350
    //                                                                                                           virtual: store issued#0 to l-stack (no copy)                          (𝕡) pool_balance#0,supply#0,amount#0 | issued#0                                                                                                                                                                                                                                                                                                                                                                           issued = TOTAL_SUPPLY - pool_balance - amount                                                        amm/contract.py:350
    frame_dig -2                                                                                                 //                                                                    load supply#0 from parameters                                                                                                                                          (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0                                                                                                                                                                                                                                                                                                supply * amount                                                                                      amm/contract.py:351
    frame_dig -1                                                                                                 //                                                                    load amount#0 from parameters                                                                                                                                          (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0,amount#0                                                                                                                                                                                                                                                                                       supply * amount                                                                                      amm/contract.py:351
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,{*}                                                                                                                                                                                                                                                                                                     supply * amount                                                                                      amm/contract.py:351
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                           (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                                   supply * amount                                                                                      amm/contract.py:351
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                          (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                                   supply * amount // issued                                                                            amm/contract.py:351
    swap                                                                                                         //                                                                    load issued#0 from l-stack (no copy)                                                                                                                                   (𝕡) pool_balance#0,supply#0,amount#0 | tmp%1#0,issued#0                                                                                                                                                                                                                                                                                                 supply * amount // issued                                                                            amm/contract.py:351
    /                                                                                                            //                                                                                                                                                                                                                                           (𝕡) pool_balance#0,supply#0,amount#0 | {/}                                                                                                                                                                                                                                                                                                              supply * amount // issued                                                                            amm/contract.py:351
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           (𝕡) pool_balance#0,supply#0,amount#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                            supply * amount // issued                                                                            amm/contract.py:351
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) pool_balance#0,supply#0,amount#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                            return supply * amount // issued                                                                     amm/contract.py:351
    retsub                                                                                                       //                                                                                                                                                                                                                                           tmp%2#0                                                                                                                                                                                                                                                                                                                                                 return supply * amount // issued                                                                     amm/contract.py:351


// examples.amm.contract.ConstantProductAMM.swap(swap_xfer: uint64, a_asset: uint64, b_asset: uint64) -> void:
swap:
    proto 3 0                                                                                                    //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                   @arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)\ndef swap(\... amm/contract.py:207-218
    byte ""
    dup                                                                                                          //                                                                    allocate 2 to stack                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |

swap_block@0:
    callsub _check_bootstrapped                                                                                  //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                                                                                                                                     self._check_bootstrapped()                                                                           amm/contract.py:226
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:228
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:228
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:228
    //                                                                                                           virtual: store app_global_get_ex_did_exist%1#0 to l-stack (no copy)   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_did_exist%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:228
    //                                                                                                           virtual: store app_global_get_ex_value%0#0 to l-stack (no copy)       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:228
    //                                                                                                           virtual: load app_global_get_ex_did_exist%1#0 from l-stack (no copy)  (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0,app_global_get_ex_did_exist%1#0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:228
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:228
    frame_dig -2                                                                                                 //                                                                    load a_asset#0 from parameters                                                                                                                                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0,a_asset#0                                                                                                                                                                                                                                               a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:228
    swap                                                                                                         //                                                                    load app_global_get_ex_value%0#0 from l-stack (no copy)                                                                                                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | a_asset#0,app_global_get_ex_value%0#0                                                                                                                                                                                                                                               a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:228
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                                                                                                                                a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:228
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                               a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:228
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                               assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:228
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                                                                                                                                     assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:228
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:229
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:229
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:229
    //                                                                                                           virtual: store app_global_get_ex_did_exist%4#0 to l-stack (no copy)   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_did_exist%4#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                 self.asset_b                                                                                         amm/contract.py:229
    //                                                                                                           virtual: store app_global_get_ex_value%3#0 to l-stack (no copy)       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                           self.asset_b                                                                                         amm/contract.py:229
    //                                                                                                           virtual: load app_global_get_ex_did_exist%4#0 from l-stack (no copy)  (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0,app_global_get_ex_did_exist%4#0                                                                                                                                                                                                                                                                                           self.asset_b                                                                                         amm/contract.py:229
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:229
    frame_dig -1                                                                                                 //                                                                    load b_asset#0 from parameters                                                                                                                                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0,b_asset#0                                                                                                                                                                                                                                               b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:229
    swap                                                                                                         //                                                                    load app_global_get_ex_value%3#0 from l-stack (no copy)                                                                                                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | b_asset#0,app_global_get_ex_value%3#0                                                                                                                                                                                                                                               b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:229
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                                                                                                                                b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:229
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                               b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:229
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                               assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:229
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                                                                                                                                     assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:229
    frame_dig -3                                                                                                 //                                                                    load swap_xfer#0 from parameters                                                                                                                                       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | swap_xfer#0                                                                                                                                                                                                                                                                         swap_xfer.asset_amount                                                                               amm/contract.py:231
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {gtxns}                                                                                                                                                                                                                                                                             swap_xfer.asset_amount                                                                               amm/contract.py:231
    dup                                                                                                          //                                                                    store tmp%6#0 to l-stack (copy)                                                                                                                                        (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%6#0,tmp%6#0                                                                                                                                                                                                                                                                     swap_xfer.asset_amount                                                                               amm/contract.py:231
    swap                                                                                                         //                                                                    store tmp%6#0 to f-stack                                                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%6#0                                                                                                                                                                                                                                                                     swap_xfer.asset_amount                                                                               amm/contract.py:231
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                                       swap_xfer.asset_amount > 0, "amount minimum not met"                                                 amm/contract.py:231
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%6#0,0                                                                                                                                                                                                                                                                   0                                                                                                    amm/contract.py:231
    >                                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {>}                                                                                                                                                                                                                                                                         swap_xfer.asset_amount > 0, "amount minimum not met"                                                 amm/contract.py:231
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%7#0                                                                                                                                                                                                                                                                                                                                       swap_xfer.asset_amount > 0, "amount minimum not met"                                                 amm/contract.py:231
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%7#0                                                                                                                                                                                                                                                                                                                                       assert swap_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:231
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             assert swap_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:231
    frame_dig -3                                                                                                 //                                                                    load swap_xfer#0 from parameters                                                                                                                                       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | swap_xfer#0                                                                                                                                                                                                                                                                 swap_xfer.sender                                                                                     amm/contract.py:232
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {gtxns}                                                                                                                                                                                                                                                                     swap_xfer.sender                                                                                     amm/contract.py:232
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                       swap_xfer.sender                                                                                     amm/contract.py:232
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%8#0,{txn}                                                                                                                                                                                                                                                               Transaction.sender()                                                                                 amm/contract.py:232
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%8#0,tmp%9#0                                                                                                                                                                                                                                                                                                                               Transaction.sender()                                                                                 amm/contract.py:232
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%9#0,tmp%8#0                                                                                                                                                                                                                                                                                                                               swap_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:232
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%8#0,tmp%9#0                                                                                                                                                                                                                                                                                                                               swap_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:232
    ==                                                                                                           //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {==}                                                                                                                                                                                                                                                                        swap_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:232
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%10#0                                                                                                                                                                                                                                                                                                                                      swap_xfer.sender == Transaction.sender(), "sender invalid"                                           amm/contract.py:232
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%10#0                                                                                                                                                                                                                                                                                                                                      assert swap_xfer.sender == Transaction.sender(), "sender invalid"                                    amm/contract.py:232
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             assert swap_xfer.sender == Transaction.sender(), "sender invalid"                                    amm/contract.py:232
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | 0                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:235
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | 0,"asset_a"                                                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:235
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:235
    //                                                                                                           virtual: store app_global_get_ex_did_exist%12#0 to l-stack (no copy)  (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_did_exist%12#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                        self.asset_a                                                                                         amm/contract.py:235
    //                                                                                                           virtual: store app_global_get_ex_value%11#0 to l-stack (no copy)      (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_did_exist%12#0                                                                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:235
    //                                                                                                           virtual: load app_global_get_ex_did_exist%12#0 from l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_did_exist%12#0                                                                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:235
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0                                                                                                                                                                                                                                                self.asset_a                                                                                         amm/contract.py:235
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,0                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:239
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,0,"asset_b"                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:239
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:239
    //                                                                                                           virtual: store app_global_get_ex_did_exist%14#0 to l-stack (no copy)  (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_did_exist%14#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                           self.asset_b                                                                                         amm/contract.py:239
    //                                                                                                           virtual: store app_global_get_ex_value%13#0 to l-stack (no copy)      (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,app_global_get_ex_did_exist%14#0                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:239
    //                                                                                                           virtual: load app_global_get_ex_did_exist%14#0 from l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,app_global_get_ex_did_exist%14#0                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:239
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:239
    frame_dig -3                                                                                                 //                                                                    load swap_xfer#0 from parameters                                                                                                                                       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,swap_xfer#0                                                                                                                                                                                                       swap_xfer.xfer_asset                                                                                 amm/contract.py:234
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,{gtxns}                                                                                                                                                                                                           swap_xfer.xfer_asset                                                                                 amm/contract.py:234
    //                                                                                                           virtual: store awst_tmp%15#0 to l-stack (no copy)                     (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,awst_tmp%15#0                                                                                                                                                                                                                                                                       swap_xfer.xfer_asset                                                                                 amm/contract.py:234
    uncover 2                                                                                                    //                                                                    load app_global_get_ex_value%11#0 from l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%13#0,awst_tmp%15#0,app_global_get_ex_value%11#0                                                                                                                                                                                                     match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:234-244
    uncover 2                                                                                                    //                                                                    load app_global_get_ex_value%13#0 from l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | awst_tmp%15#0,app_global_get_ex_value%11#0,app_global_get_ex_value%13#0                                                                                                                                                                                                     match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:234-244
    uncover 2                                                                                                    //                                                                    load awst_tmp%15#0 from l-stack (no copy)                                                                                                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,awst_tmp%15#0                                                                                                                                                                                                     match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:234-244
    match swap_switch_case_0@1 swap_switch_case_1@2                                                              //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:234-244
    err // asset id incorrect                                                                                    //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             assert False, "asset id incorrect"                                                                   amm/contract.py:244

swap_switch_case_0@1:
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {_current_b_balance}                                                                                                                                                                                                                                                        self._current_b_balance()                                                                            amm/contract.py:236
    frame_bury 0                                                                                                 //                                                                    store in_supply#0 to f-stack                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             in_supply = self._current_b_balance()                                                                amm/contract.py:236
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {_current_a_balance}                                                                                                                                                                                                                                                        self._current_a_balance()                                                                            amm/contract.py:237
    //                                                                                                           virtual: store out_supply#0 to x-stack (no copy)                      (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                                                                                            out_supply = self._current_a_balance()                                                               amm/contract.py:237
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | 0                                                                                                                                                                                                                                                        self.asset_a                                                                                         amm/contract.py:238
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | 0,"asset_a"                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:238
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:238
    swap                                                                                                         //                                                                    store app_global_get_ex_did_exist%17#0 to l-stack (no copy)                                                                                                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%17#0,{app_global_get_ex}.0                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:238
    frame_bury 1                                                                                                 //                                                                    store out_asset#0 to f-stack                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%17#0                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:238
    //                                                                                                           virtual: load app_global_get_ex_did_exist%17#0 from l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%17#0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:238
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:238
    b swap_switch_case_next@4                                                                                    //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 |                                                                                                                                                     out_supply#0

swap_switch_case_1@2:
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {_current_a_balance}                                                                                                                                                                                                                                                        self._current_a_balance()                                                                            amm/contract.py:240
    frame_bury 0                                                                                                 //                                                                    store in_supply#0 to f-stack                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             in_supply = self._current_a_balance()                                                                amm/contract.py:240
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {_current_b_balance}                                                                                                                                                                                                                                                        self._current_b_balance()                                                                            amm/contract.py:241
    //                                                                                                           virtual: store out_supply#0 to x-stack (no copy)                      (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                                                                                            out_supply = self._current_b_balance()                                                               amm/contract.py:241
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | 0                                                                                                                                                                                                                                                        self.asset_b                                                                                         amm/contract.py:242
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | 0,"asset_b"                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:242
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:242
    swap                                                                                                         //                                                                    store app_global_get_ex_did_exist%19#0 to l-stack (no copy)                                                                                                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%19#0,{app_global_get_ex}.0                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:242
    frame_bury 1                                                                                                 //                                                                    store out_asset#0 to f-stack                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%19#0                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:242
    //                                                                                                           virtual: load app_global_get_ex_did_exist%19#0 from l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%19#0                                                                                                                                                                                                                                                                                           self.asset_b                                                                                         amm/contract.py:242
    assert // check value exists                                                                                 //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:242
    // Implicit fall through to swap_switch_case_next@4                                                          //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 |                                                                                                                                                     out_supply#0

swap_switch_case_next@4:
    frame_dig 2                                                                                                  //                                                                    load tmp%6#0 from f-stack                                                                                                                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | tmp%6#0                                                                                                                                             out_supply#0                                                                                         to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:246-248
    frame_dig 0                                                                                                  //                                                                    load in_supply#0 from f-stack                                                                                                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | (𝕏) out_supply#0 | tmp%6#0,in_supply#0                                                                                                                                                                                                                                      to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:246-248
    uncover 2                                                                                                    //                                                                    load out_supply#0 from x-stack                                                                                                                                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%6#0,in_supply#0,out_supply#0                                                                                                                                                                                                                                            to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:246-248
    callsub tokens_to_swap                                                                                       //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | {tokens_to_swap}                                                                                                                                                                                                                                                            tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_supply\n)     amm/contract.py:246-248
    //                                                                                                           virtual: store to_swap#0 to l-stack (no copy)                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0                                                                                                                                                                                                                                                                                                                                     to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:246-248
    dup                                                                                                          //                                                                    load to_swap#0 from l-stack (copy)                                                                                                                                     (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,to_swap#0                                                                                                                                                                                                                                                         to_swap > 0, "send amount too low"                                                                   amm/contract.py:249
    int 0                                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,to_swap#0,0                                                                                                                                                                                                                                                       0                                                                                                    amm/contract.py:249
    >                                                                                                            //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,{>}                                                                                                                                                                                                                                                               to_swap > 0, "send amount too low"                                                                   amm/contract.py:249
    //                                                                                                           virtual: store tmp%21#0 to l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,tmp%21#0                                                                                                                                                                                                                                                                                                                            to_swap > 0, "send amount too low"                                                                   amm/contract.py:249
    //                                                                                                           virtual: load tmp%21#0 from l-stack (no copy)                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,tmp%21#0                                                                                                                                                                                                                                                                                                                            assert to_swap > 0, "send amount too low"                                                            amm/contract.py:249
    assert // send amount too low                                                                                //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0                                                                                                                                                                                                                                                                   assert to_swap > 0, "send amount too low"                                                            amm/contract.py:249
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,{txn}                                                                                                                                                                                                                                                             Transaction.sender()                                                                                 amm/contract.py:251
    //                                                                                                           virtual: store tmp%22#0 to l-stack (no copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,tmp%22#0                                                                                                                                                                                                                                                                                                                            Transaction.sender()                                                                                 amm/contract.py:251
    //                                                                                                           virtual: load tmp%22#0 from l-stack (no copy)                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,tmp%22#0                                                                                                                                                                                                                                                                                                                            do_asset_transfer(receiver=Transaction.sender(), asset=out_asset, amount=to_swap)                    amm/contract.py:251
    frame_dig 1                                                                                                  //                                                                    load out_asset#0 from f-stack                                                                                                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | to_swap#0,tmp%22#0,out_asset#0                                                                                                                                                                                                                                              do_asset_transfer(receiver=Transaction.sender(), asset=out_asset, amount=to_swap)                    amm/contract.py:251
    uncover 2                                                                                                    //                                                                    load to_swap#0 from l-stack (no copy)                                                                                                                                  (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 | tmp%22#0,out_asset#0,to_swap#0                                                                                                                                                                                                                                              do_asset_transfer(receiver=Transaction.sender(), asset=out_asset, amount=to_swap)                    amm/contract.py:251
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             do_asset_transfer(receiver=Transaction.sender(), asset=out_asset, amount=to_swap)                    amm/contract.py:251
    callsub _update_ratio                                                                                        //                                                                                                                                                                                                                                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%6#0 |                                                                                                                                                                                                                                                                             self._update_ratio()                                                                                 amm/contract.py:252
    retsub                                                                                                       //


// examples.amm.contract.tokens_to_swap(in_amount: uint64, in_supply: uint64, out_supply: uint64) -> uint64:
tokens_to_swap:
    proto 3 1                                                                                                    //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 |                                                                                                                                                                                                                                                                                                              @subroutine\ndef tokens_to_swap(*, in_amount: UInt64, in_supply: UInt64, out_supply: UInt64) -> U... amm/contract.py:354-355

tokens_to_swap_block@0:
    frame_dig -2                                                                                                 //                                                                    load in_supply#0 from parameters                                                                                                                                       (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0                                                                                                                                                                                                                                                                                                  in_supply - in_amount                                                                                amm/contract.py:356
    frame_dig -3                                                                                                 //                                                                    load in_amount#0 from parameters                                                                                                                                       (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0,in_amount#0                                                                                                                                                                                                                                                                                      in_supply - in_amount                                                                                amm/contract.py:356
    -                                                                                                            //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | {-}                                                                                                                                                                                                                                                                                                          in_supply - in_amount                                                                                amm/contract.py:356
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                        in_supply - in_amount                                                                                amm/contract.py:356
    int 1000                                                                                                     //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%0#0,1000                                                                                                                                                                                                                                                                                                 SCALE                                                                                                amm/contract.py:356
    swap                                                                                                         //                                                                    load tmp%0#0 from l-stack (no copy)                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | 1000,tmp%0#0                                                                                                                                                                                                                                                                                                 SCALE * (in_supply - in_amount)                                                                      amm/contract.py:356
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | {*}                                                                                                                                                                                                                                                                                                          SCALE * (in_supply - in_amount)                                                                      amm/contract.py:356
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                                                        SCALE * (in_supply - in_amount)                                                                      amm/contract.py:356
    frame_dig -3                                                                                                 //                                                                    load in_amount#0 from parameters                                                                                                                                       (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0                                                                                                                                                                                                                                                                                          in_amount * FACTOR                                                                                   amm/contract.py:356
    int 995                                                                                                      //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0,995                                                                                                                                                                                                                                                                                      FACTOR                                                                                               amm/contract.py:356
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,{*}                                                                                                                                                                                                                                                                                                  in_amount * FACTOR                                                                                   amm/contract.py:356
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                                in_amount * FACTOR                                                                                   amm/contract.py:356
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%2#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                                in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:356
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                                in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:356
    dup
    cover 2                                                                                                      //                                                                    store tmp%2#0 to l-stack (copy)                                                                                                                                        (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%2#0,tmp%1#0,tmp%2#0                                                                                                                                                                                                                                                                                      in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:356
    +                                                                                                            //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%2#0,{+}                                                                                                                                                                                                                                                                                                  SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                               amm/contract.py:356
    swap                                                                                                         //                                                                    store in_total#0 to l-stack (no copy)                                                                                                                                  (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%2#0                                                                                                                                                                                                                                                                                           in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:356
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                             out_total = in_amount * FACTOR * out_supply                                                          amm/contract.py:357
    frame_dig -1                                                                                                 //                                                                    load out_supply#0 from parameters                                                                                                                                      (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%2#0,out_supply#0                                                                                                                                                                                                                                                                              out_total = in_amount * FACTOR * out_supply                                                          amm/contract.py:357
    *                                                                                                            //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,{*}                                                                                                                                                                                                                                                                                               in_amount * FACTOR * out_supply                                                                      amm/contract.py:357
    //                                                                                                           virtual: store out_total#0 to l-stack (no copy)                       (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,out_total#0                                                                                                                                                                                                                                                                                                                                                         out_total = in_amount * FACTOR * out_supply                                                          amm/contract.py:357
    //                                                                                                           virtual: load out_total#0 from l-stack (no copy)                      (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,out_total#0                                                                                                                                                                                                                                                                                                                                                         out_total // in_total                                                                                amm/contract.py:358
    swap                                                                                                         //                                                                    load in_total#0 from l-stack (no copy)                                                                                                                                 (𝕡) in_amount#0,in_supply#0,out_supply#0 | out_total#0,in_total#0                                                                                                                                                                                                                                                                                       out_total // in_total                                                                                amm/contract.py:358
    /                                                                                                            //                                                                                                                                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | {/}                                                                                                                                                                                                                                                                                                          out_total // in_total                                                                                amm/contract.py:358
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                                                                        out_total // in_total                                                                                amm/contract.py:358
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                                                                        return out_total // in_total                                                                         amm/contract.py:358
    retsub                                                                                                       //                                                                                                                                                                                                                                           tmp%4#0                                                                                                                                                                                                                                                                                                                                                 return out_total // in_total                                                                         amm/contract.py:358


// examples.amm.contract.ConstantProductAMM.__init__() -> void:
__init__:
    protodef __init__(self) -> None:                                                                          amm/contract.py:31

__init___block@0:
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                           "asset_a"                                                                                                                                                                                                                                                                                                                                               # The asset id of asset A\nself.asset_a                                                              amm/contract.py:35-36
    int 0                                                                                                        //                                                                                                                                                                                                                                           "asset_a",0                                                                                                                                                                                                                                                                                                                                             et A\nself.asset_a = Asset(0                                                                         amm/contract.py:35-36
    app_global_puthe asset id of asset A\nself.asset_a = Asset(0)                                                   amm/contract.py:35-36
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                           "asset_b"                                                                                                                                                                                                                                                                                                                                               # The asset id of asset B\nself.asset_b                                                              amm/contract.py:37-38
    int 0                                                                                                        //                                                                                                                                                                                                                                           "asset_b",0                                                                                                                                                                                                                                                                                                                                             et B\nself.asset_b = Asset(0                                                                         amm/contract.py:37-38
    app_global_puthe asset id of asset B\nself.asset_b = Asset(0)                                                   amm/contract.py:37-38
    txn Sender                                                                                                   //                                                                                                                                                                                                                                           {txn}                                                                                                                                                                                                                                                                                                                                                   vernor of this contract, allowed to do admin type actions\nself.governor = Transaction.sender()      amm/contract.py:39-40
    //                                                                                                           virtual: store new_state_value%0#0 to l-stack (no copy)               new_state_value%0#0                                                                                                                                                                                                                                                                                                                                                                                                       vernor of this contract, allowed to do admin type actions\nself.governor = Transaction.sender()      amm/contract.py:39-40
    byte "governor"                                                                                              //                                                                                                                                                                                                                                           new_state_value%0#0,"governor"                                                                                                                                                                                                                                                                                                                          # The current governor of this contract, allowed to do admin type actions\nself.governor             amm/contract.py:39-40
    swap                                                                                                         //                                                                    load new_state_value%0#0 from l-stack (no copy)                                                                                                                        "governor",new_state_value%0#0                                                                                                                                                                                                                                                                                                                          # The current governor of this contract, allowed to do admin type actions\nself.governor = Transa... amm/contract.py:39-40
    app_global_puthe current governor of this contract, allowed to do admin type actions\nself.governor = Transa... amm/contract.py:39-40
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                           "pool_token"                                                                                                                                                                                                                                                                                                                                            # The asset id of the Pool Token, used to track share of pool the holder may recover\nself.pool_t... amm/contract.py:41-42
    int 0                                                                                                        //                                                                                                                                                                                                                                           "pool_token",0                                                                                                                                                                                                                                                                                                                                          ol Token, used to track share of pool the holder may recover\nself.pool_token = Asset(0              amm/contract.py:41-42
    app_global_puthe asset id of the Pool Token, used to track share of pool the holder may recover\nself.pool_t... amm/contract.py:41-42
    byte "ratio"                                                                                                 //                                                                                                                                                                                                                                           "ratio"                                                                                                                                                                                                                                                                                                                                                 # The ratio between assets (A*Scale/B)\nself.ratio                                                   amm/contract.py:43-44
    int 0                                                                                                        //                                                                                                                                                                                                                                           "ratio",0                                                                                                                                                                                                                                                                                                                                               assets (A*Scale/B)\nself.ratio = UInt64(0                                                            amm/contract.py:43-44
    app_global_puthe ratio between assets (A*Scale/B)\nself.ratio = UInt64(0)                                       amm/contract.py:43-44
    retsub                                                                                                       //

