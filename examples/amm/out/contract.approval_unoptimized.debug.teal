// Op                                                                                                                // Op Description                                           Stack (out)                                                                                                                                                                                                                   X stack        Source code                                                                                   Source line

#pragma version 8

// examples.amm.contract.ConstantProductAMM.approval_program() -> uint64:
main_block@0:
        txn ApplicationID                                                                                            //                                                          {txn}
        bnz main_entrypoint@2                                                                                        //
        // Implicit fall through to main_on_create@1                                                                 //

main_on_create@1:
        callsub __init__                                                                                             //
        // Implicit fall through to main_entrypoint@2                                                                //

main_entrypoint@2:
        txn NumAppArgs                                                                                               //                                                          {txn}                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        bz main_bare_routing@11                                                                                      //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        // Implicit fall through to main_abi_routing@3                                                               //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31

main_abi_routing@3:
        txna ApplicationArgs 0                                                                                       //                                                          {txna}                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        method "set_governor(account)void"                                                                           //                                                          tmp%2#0,method<"set_governor(account)void">                                                                                                                                                                                                  arc4.abimethod()                                                                              File "amm/contract.py", line 51
        method "bootstrap(pay,asset,asset)uint64"                                                                    //                                                          tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 57
        method "mint(axfer,axfer,asset,asset,asset)void"                                                             //                                                          tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">                                                                                                     arc4.abimethod(                                                                               File "amm/contract.py", line 89
        method "burn(axfer,asset,asset,asset)void"                                                                   //                                                          tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">                                                         arc4.abimethod(                                                                               File "amm/contract.py", line 155
        method "swap(axfer,asset,asset)void"                                                                         //                                                          tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">                   arc4.abimethod(                                                                               File "amm/contract.py", line 212
        uncover 5                                                                                                    // load tmp%2#0 from l-stack (no copy)                      method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">,tmp%2#0                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        match main_set_governor_route@4 main_bootstrap_route@5 main_mint_route@6 main_burn_route@7 main_swap_route@8 //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        b main_switch_case_default@9                                                                                 //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31

main_set_governor_route@4:
        txn OnCompletion                                                                                             //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod()                                                                              File "amm/contract.py", line 51
        int NoOp                                                                                                     //                                                          tmp%3#0,NoOp                                                                                                                                                                                                                                 arc4.abimethod()                                                                              File "amm/contract.py", line 51
        ==                                                                                                           //                                                          {==}                                                                                                                                                                                                                                         arc4.abimethod()                                                                              File "amm/contract.py", line 51
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 51
        txn ApplicationID                                                                                            //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod()                                                                              File "amm/contract.py", line 51
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 51
        txna ApplicationArgs 1                                                                                       //                                                          {txna}                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          {btoi}                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Accounts                                                                                               //                                                          {txnas}                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        callsub set_governor                                                                                         //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 51
        int 1                                                                                                        //                                                          1                                                                                                                                                                                                                                            arc4.abimethod()                                                                              File "amm/contract.py", line 51
        return                                                                                                       //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 51

main_bootstrap_route@5:
        txn OnCompletion                                                                                             //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod()                                                                              File "amm/contract.py", line 57
        int NoOp                                                                                                     //                                                          tmp%9#0,NoOp                                                                                                                                                                                                                                 arc4.abimethod()                                                                              File "amm/contract.py", line 57
        ==                                                                                                           //                                                          {==}                                                                                                                                                                                                                                         arc4.abimethod()                                                                              File "amm/contract.py", line 57
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 57
        txn ApplicationID                                                                                            //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod()                                                                              File "amm/contract.py", line 57
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 57
        txn GroupIndex                                                                                               //                                                          {txn}                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int 1                                                                                                        //                                                          tmp%14#0,1                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        -                                                                                                            //                                                          {-}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                   awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        gtxns TypeEnum                                                                                               //                                                          awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int pay                                                                                                      //                                                          awst_tmp%15#0,tmp%16#0,pay                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        ==                                                                                                           //                                                          awst_tmp%15#0,{==}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        assert // transaction type is pay                                                                            //                                                          maybe_value%12#0                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 1                                                                                       //                                                          maybe_value%12#0,{txna}                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%12#0,{btoi}                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%12#0,{txnas}                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 2                                                                                       //                                                          maybe_value%12#0,tmp%20#0,{txna}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%12#0,tmp%20#0,{btoi}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%12#0,tmp%20#0,{txnas}                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 2                                                                                                    // load maybe_value%12#0 from l-stack (no copy)             tmp%20#0,tmp%23#0,maybe_value%12#0                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 2                                                                                                    // load tmp%20#0 from l-stack (no copy)                     tmp%23#0,maybe_value%12#0,tmp%20#0                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 2                                                                                                    // load tmp%23#0 from l-stack (no copy)                     maybe_value%12#0,tmp%20#0,tmp%23#0                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        callsub bootstrap                                                                                            //                                                          {bootstrap}                                                                                                                                                                                                                                  arc4.abimethod()                                                                              File "amm/contract.py", line 57
        byte 0x151f7c75                                                                                              //                                                          tmp%24#0,0x151f7c75                                                                                                                                                                                                                          arc4.abimethod()                                                                              File "amm/contract.py", line 57
        swap                                                                                                         // load tmp%24#0 from l-stack (no copy)                     0x151f7c75,tmp%24#0                                                                                                                                                                                                                          arc4.abimethod()                                                                              File "amm/contract.py", line 57
        concat                                                                                                       //                                                          {concat}                                                                                                                                                                                                                                     arc4.abimethod()                                                                              File "amm/contract.py", line 57
        log                                                                                                          //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 57
        int 1                                                                                                        //                                                          1                                                                                                                                                                                                                                            arc4.abimethod()                                                                              File "amm/contract.py", line 57
        return                                                                                                       //                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                              File "amm/contract.py", line 57

main_mint_route@6:
        txn OnCompletion                                                                                             //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 89
        int NoOp                                                                                                     //                                                          tmp%26#0,NoOp                                                                                                                                                                                                                                arc4.abimethod(                                                                               File "amm/contract.py", line 89
        ==                                                                                                           //                                                          {==}                                                                                                                                                                                                                                         arc4.abimethod(                                                                               File "amm/contract.py", line 89
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 89
        txn ApplicationID                                                                                            //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 89
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 89
        txn GroupIndex                                                                                               //                                                          {txn}                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int 2                                                                                                        //                                                          tmp%31#0,2                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        -                                                                                                            //                                                          {-}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        dup                                                                                                          // load awst_tmp%32#0 from l-stack (copy)                   awst_tmp%32#0,awst_tmp%32#0                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        gtxns TypeEnum                                                                                               //                                                          awst_tmp%32#0,{gtxns}                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int axfer                                                                                                    //                                                          awst_tmp%32#0,tmp%33#0,axfer                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        ==                                                                                                           //                                                          awst_tmp%32#0,{==}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        assert // transaction type is axfer                                                                          //                                                          maybe_value%29#0                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txn GroupIndex                                                                                               //                                                          maybe_value%29#0,{txn}                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int 1                                                                                                        //                                                          maybe_value%29#0,tmp%37#0,1                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        -                                                                                                            //                                                          maybe_value%29#0,{-}                                                                                                                                                                                                                         class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                   maybe_value%29#0,awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        gtxns TypeEnum                                                                                               //                                                          maybe_value%29#0,awst_tmp%15#0,{gtxns}                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int axfer                                                                                                    //                                                          maybe_value%29#0,awst_tmp%15#0,tmp%38#0,axfer                                                                                                                                                                                                class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        ==                                                                                                           //                                                          maybe_value%29#0,awst_tmp%15#0,{==}                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        assert // transaction type is axfer                                                                          //                                                          maybe_value%29#0,maybe_value%35#0                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 1                                                                                       //                                                          maybe_value%29#0,maybe_value%35#0,{txna}                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%29#0,maybe_value%35#0,{btoi}                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%29#0,maybe_value%35#0,{txnas}                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 2                                                                                       //                                                          maybe_value%29#0,maybe_value%35#0,tmp%42#0,{txna}                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%29#0,maybe_value%35#0,tmp%42#0,{btoi}                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%29#0,maybe_value%35#0,tmp%42#0,{txnas}                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 3                                                                                       //                                                          maybe_value%29#0,maybe_value%35#0,tmp%42#0,tmp%45#0,{txna}                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%29#0,maybe_value%35#0,tmp%42#0,tmp%45#0,{btoi}                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%29#0,maybe_value%35#0,tmp%42#0,tmp%45#0,{txnas}                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 4                                                                                                    // load maybe_value%29#0 from l-stack (no copy)             maybe_value%35#0,tmp%42#0,tmp%45#0,tmp%48#0,maybe_value%29#0                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 4                                                                                                    // load maybe_value%35#0 from l-stack (no copy)             tmp%42#0,tmp%45#0,tmp%48#0,maybe_value%29#0,maybe_value%35#0                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 4                                                                                                    // load tmp%42#0 from l-stack (no copy)                     tmp%45#0,tmp%48#0,maybe_value%29#0,maybe_value%35#0,tmp%42#0                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 4                                                                                                    // load tmp%45#0 from l-stack (no copy)                     tmp%48#0,maybe_value%29#0,maybe_value%35#0,tmp%42#0,tmp%45#0                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 4                                                                                                    // load tmp%48#0 from l-stack (no copy)                     maybe_value%29#0,maybe_value%35#0,tmp%42#0,tmp%45#0,tmp%48#0                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        callsub mint                                                                                                 //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 89
        int 1                                                                                                        //                                                          1                                                                                                                                                                                                                                            arc4.abimethod(                                                                               File "amm/contract.py", line 89
        return                                                                                                       //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 89

main_burn_route@7:
        txn OnCompletion                                                                                             //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 155
        int NoOp                                                                                                     //                                                          tmp%49#0,NoOp                                                                                                                                                                                                                                arc4.abimethod(                                                                               File "amm/contract.py", line 155
        ==                                                                                                           //                                                          {==}                                                                                                                                                                                                                                         arc4.abimethod(                                                                               File "amm/contract.py", line 155
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 155
        txn ApplicationID                                                                                            //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 155
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 155
        txn GroupIndex                                                                                               //                                                          {txn}                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int 1                                                                                                        //                                                          tmp%54#0,1                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        -                                                                                                            //                                                          {-}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                   awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        gtxns TypeEnum                                                                                               //                                                          awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int axfer                                                                                                    //                                                          awst_tmp%15#0,tmp%55#0,axfer                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        ==                                                                                                           //                                                          awst_tmp%15#0,{==}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        assert // transaction type is axfer                                                                          //                                                          maybe_value%52#0                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 1                                                                                       //                                                          maybe_value%52#0,{txna}                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%52#0,{btoi}                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%52#0,{txnas}                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 2                                                                                       //                                                          maybe_value%52#0,tmp%59#0,{txna}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%52#0,tmp%59#0,{btoi}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%52#0,tmp%59#0,{txnas}                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 3                                                                                       //                                                          maybe_value%52#0,tmp%59#0,tmp%62#0,{txna}                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%52#0,tmp%59#0,tmp%62#0,{btoi}                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%52#0,tmp%59#0,tmp%62#0,{txnas}                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 3                                                                                                    // load maybe_value%52#0 from l-stack (no copy)             tmp%59#0,tmp%62#0,tmp%65#0,maybe_value%52#0                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 3                                                                                                    // load tmp%59#0 from l-stack (no copy)                     tmp%62#0,tmp%65#0,maybe_value%52#0,tmp%59#0                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 3                                                                                                    // load tmp%62#0 from l-stack (no copy)                     tmp%65#0,maybe_value%52#0,tmp%59#0,tmp%62#0                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 3                                                                                                    // load tmp%65#0 from l-stack (no copy)                     maybe_value%52#0,tmp%59#0,tmp%62#0,tmp%65#0                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        callsub burn                                                                                                 //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 155
        int 1                                                                                                        //                                                          1                                                                                                                                                                                                                                            arc4.abimethod(                                                                               File "amm/contract.py", line 155
        return                                                                                                       //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 155

main_swap_route@8:
        txn OnCompletion                                                                                             //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 212
        int NoOp                                                                                                     //                                                          tmp%66#0,NoOp                                                                                                                                                                                                                                arc4.abimethod(                                                                               File "amm/contract.py", line 212
        ==                                                                                                           //                                                          {==}                                                                                                                                                                                                                                         arc4.abimethod(                                                                               File "amm/contract.py", line 212
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 212
        txn ApplicationID                                                                                            //                                                          {txn}                                                                                                                                                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 212
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 212
        txn GroupIndex                                                                                               //                                                          {txn}                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int 1                                                                                                        //                                                          tmp%71#0,1                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        -                                                                                                            //                                                          {-}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                   awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        gtxns TypeEnum                                                                                               //                                                          awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int axfer                                                                                                    //                                                          awst_tmp%15#0,tmp%72#0,axfer                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        ==                                                                                                           //                                                          awst_tmp%15#0,{==}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        assert // transaction type is axfer                                                                          //                                                          maybe_value%69#0                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 1                                                                                       //                                                          maybe_value%69#0,{txna}                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%69#0,{btoi}                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%69#0,{txnas}                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txna ApplicationArgs 2                                                                                       //                                                          maybe_value%69#0,tmp%76#0,{txna}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        btoi                                                                                                         //                                                          maybe_value%69#0,tmp%76#0,{btoi}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        txnas Assets                                                                                                 //                                                          maybe_value%69#0,tmp%76#0,{txnas}                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 2                                                                                                    // load maybe_value%69#0 from l-stack (no copy)             tmp%76#0,tmp%79#0,maybe_value%69#0                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 2                                                                                                    // load tmp%76#0 from l-stack (no copy)                     tmp%79#0,maybe_value%69#0,tmp%76#0                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        uncover 2                                                                                                    // load tmp%79#0 from l-stack (no copy)                     maybe_value%69#0,tmp%76#0,tmp%79#0                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        callsub swap                                                                                                 //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 212
        int 1                                                                                                        //                                                          1                                                                                                                                                                                                                                            arc4.abimethod(                                                                               File "amm/contract.py", line 212
        return                                                                                                       //                                                                                                                                                                                                                                                                                                       arc4.abimethod(                                                                               File "amm/contract.py", line 212

main_switch_case_default@9:
        // Implicit fall through to main_switch_case_next@10                                                         //

main_switch_case_next@10:
        b main_after_if_else@14                                                                                      //

main_bare_routing@11:
        txn OnCompletion                                                                                             //                                                          {txn}                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        int 0                                                                                                        //                                                          tmp%80#0,0                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        swap                                                                                                         // load tmp%80#0 from l-stack (no copy)                     0,tmp%80#0                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        match main_create@12                                                                                         //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31
        b main_reject_bare_on_completion@13                                                                          //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31

main_create@12:
        txn ApplicationID                                                                                            //                                                          {txn}                                                                                                                                                                                                                                        arc4.baremethod(create=True)                                                                  File "amm/contract.py", line 47
        !                                                                                                            //                                                          {!}                                                                                                                                                                                                                                          arc4.baremethod(create=True)                                                                  File "amm/contract.py", line 47
        assert // is creating                                                                                        //                                                                                                                                                                                                                                                                                                       arc4.baremethod(create=True)                                                                  File "amm/contract.py", line 47
        callsub create                                                                                               //                                                                                                                                                                                                                                                                                                       def create(self) -> None:                                                                     File "amm/contract.py", line 48
        int 1                                                                                                        //                                                          1                                                                                                                                                                                                                                            def create(self) -> None:                                                                     File "amm/contract.py", line 48
        return                                                                                                       //                                                                                                                                                                                                                                                                                                       def create(self) -> None:                                                                     File "amm/contract.py", line 48

main_reject_bare_on_completion@13:
        err // reject transaction                                                                                    //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31

main_after_if_else@14:
        err // reject transaction                                                                                    //                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 31


// examples.amm.contract.ConstantProductAMM.set_governor(new_governor#0: bytes) -> void:
set_governor:
        proto 1 0                                                                                                    //                                                          (𝕡) new_governor#0 |                                                                                                                                                                                                                         def set_governor(self, new_governor: Account) -> None:                                        File "amm/contract.py", line 52

set_governor_block@0:
        callsub _check_is_governor                                                                                   //                                                          (𝕡) new_governor#0 |                                                                                                                                                                                                                         self._check_is_governor()                                                                     File "amm/contract.py", line 54
        byte "governor"                                                                                              //                                                          (𝕡) new_governor#0 | "governor"                                                                                                                                                                                                              self.governor                                                                                 File "amm/contract.py", line 55
        frame_dig -1                                                                                                 // load new_governor#0 from parameters                      (𝕡) new_governor#0 | "governor",new_governor#0                                                                                                                                                                                               new_governor: Account                                                                         File "amm/contract.py", line 52
        app_global_put                                                                                               //                                                          (𝕡) new_governor#0 |                                                                                                                                                                                                                         self.governor = new_governor                                                                  File "amm/contract.py", line 55
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
_check_is_governor:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                       def _check_is_governor(self) -> None:                                                         File "amm/contract.py", line 271

_check_is_governor_block@0:
        txn Sender                                                                                                   //                                                          {txn}                                                                                                                                                                                                                                        Transaction.sender()                                                                          File "amm/contract.py", line 273
        int 0                                                                                                        //                                                          tmp%0#0,0                                                                                                                                                                                                                                    self.governor                                                                                 File "amm/contract.py", line 273
        byte "governor"                                                                                              //                                                          tmp%0#0,0,"governor"                                                                                                                                                                                                                         self.governor                                                                                 File "amm/contract.py", line 273
        app_global_get_ex                                                                                            //                                                          tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                          self.governor                                                                                 File "amm/contract.py", line 273
        assert // check value exists                                                                                 //                                                          tmp%0#0,app_global_get_ex_value%1#0                                                                                                                                                                                                          self.governor                                                                                 File "amm/contract.py", line 273
        ==                                                                                                           //                                                          {==}                                                                                                                                                                                                                                         Transaction.sender() == self.governor                                                         File "amm/contract.py", line 273
        assert // Only the account set in global_state.governor may call this method                                 //                                                                                                                                                                                                                                                                                                       assert (                                                                                      File "amm/contract.py", line 272
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.bootstrap(seed#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> bytes:
bootstrap:
        proto 3 1                                                                                                    //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             def bootstrap(self, seed: PaymentTransaction, a_asset: Asset, b_asset: Asset) -> arc4.UInt64: File "amm/contract.py", line 58

bootstrap_block@0:
        int 0                                                                                                        //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                           self.pool_token                                                                               File "amm/contract.py", line 74
        byte "pool_token"                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                              self.pool_token                                                                               File "amm/contract.py", line 74
        app_global_get_ex                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                 self.pool_token                                                                               File "amm/contract.py", line 74
        assert // check value exists                                                                                 //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                 self.pool_token                                                                               File "amm/contract.py", line 74
        !                                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {!}                                                                                                                                                                                                         not self.pool_token                                                                           File "amm/contract.py", line 74
        assert // application has already been bootstrapped                                                          //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             assert not self.pool_token, "application has already been bootstrapped"                       File "amm/contract.py", line 74
        callsub _check_is_governor                                                                                   //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             self._check_is_governor()                                                                     File "amm/contract.py", line 75
        global GroupSize                                                                                             //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {global}                                                                                                                                                                                                    Global.group_size()                                                                           File "amm/contract.py", line 76
        int 2                                                                                                        //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0,2                                                                                                                                                                                                   2                                                                                             File "amm/contract.py", line 76
        ==                                                                                                           //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                        Global.group_size() == 2, "group size not 2"                                                  File "amm/contract.py", line 76
        assert // group size not 2                                                                                   //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             assert Global.group_size() == 2, "group size not 2"                                           File "amm/contract.py", line 76
        frame_dig -3                                                                                                 // load seed#0 from parameters                              (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                      seed: PaymentTransaction                                                                      File "amm/contract.py", line 58
        gtxns Receiver                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                     seed.receiver                                                                                 File "amm/contract.py", line 77
        global CurrentApplicationAddress                                                                             //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0,{global}                                                                                                                                                                                            Global.current_application_address()                                                          File "amm/contract.py", line 77
        ==                                                                                                           //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                        seed.receiver == Global.current_application_address(), "receiver not app address"             File "amm/contract.py", line 77
        assert // receiver not app address                                                                           //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             assert seed.receiver == Global.current_application_address(), "receiver not app address"      File "amm/contract.py", line 77
        frame_dig -3                                                                                                 // load seed#0 from parameters                              (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                      seed: PaymentTransaction                                                                      File "amm/contract.py", line 58
        gtxns Amount                                                                                                 //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                     seed.amount                                                                                   File "amm/contract.py", line 79
        int 300000                                                                                                   //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0,300000                                                                                                                                                                                              300_000                                                                                       File "amm/contract.py", line 79
        >=                                                                                                           //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {>=}                                                                                                                                                                                                        seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                 File "amm/contract.py", line 79
        assert // amount minimum not met                                                                             //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             assert seed.amount >= 300_000, "amount minimum not met"                                       File "amm/contract.py", line 79
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                           (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0                                                                                                                                                                                                   a_asset: Asset                                                                                File "amm/contract.py", line 58
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                           (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0,b_asset#0                                                                                                                                                                                         b_asset: Asset                                                                                File "amm/contract.py", line 58
        <                                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {<}                                                                                                                                                                                                         a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                      File "amm/contract.py", line 80
        assert // asset a must be less than asset b                                                                  //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             assert a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"               File "amm/contract.py", line 80
        byte "asset_a"                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a"                                                                                                                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 81
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                           (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a",a_asset#0                                                                                                                                                                                         a_asset: Asset                                                                                File "amm/contract.py", line 58
        app_global_put                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             self.asset_a = a_asset                                                                        File "amm/contract.py", line 81
        byte "asset_b"                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b"                                                                                                                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 82
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                           (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b",b_asset#0                                                                                                                                                                                         b_asset: Asset                                                                                File "amm/contract.py", line 58
        app_global_put                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             self.asset_b = b_asset                                                                        File "amm/contract.py", line 82
        callsub _create_pool_token                                                                                   //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {_create_pool_token}                                                                                                                                                                                        self._create_pool_token()                                                                     File "amm/contract.py", line 83
        byte "pool_token"                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | new_state_value%11#0,"pool_token"                                                                                                                                                                           self.pool_token                                                                               File "amm/contract.py", line 83
        swap                                                                                                         // load new_state_value%11#0 from l-stack (no copy)         (𝕡) seed#0,a_asset#0,b_asset#0 | "pool_token",new_state_value%11#0                                                                                                                                                                           self._create_pool_token()                                                                     File "amm/contract.py", line 83
        app_global_put                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             self.pool_token = self._create_pool_token()                                                   File "amm/contract.py", line 83
        int 0                                                                                                        //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                           self.asset_a                                                                                  File "amm/contract.py", line 85
        byte "asset_a"                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 85
        app_global_get_ex                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 85
        assert // check value exists                                                                                 //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%12#0                                                                                                                                                                                self.asset_a                                                                                  File "amm/contract.py", line 85
        callsub _do_opt_in                                                                                           //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             self._do_opt_in(self.asset_a)                                                                 File "amm/contract.py", line 85
        int 0                                                                                                        //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                           self.asset_b                                                                                  File "amm/contract.py", line 86
        byte "asset_b"                                                                                               //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 86
        app_global_get_ex                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 86
        assert // check value exists                                                                                 //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%14#0                                                                                                                                                                                self.asset_b                                                                                  File "amm/contract.py", line 86
        callsub _do_opt_in                                                                                           //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                             self._do_opt_in(self.asset_b)                                                                 File "amm/contract.py", line 86
        int 0                                                                                                        //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                           self.pool_token                                                                               File "amm/contract.py", line 87
        byte "pool_token"                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                              self.pool_token                                                                               File "amm/contract.py", line 87
        app_global_get_ex                                                                                            //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                 self.pool_token                                                                               File "amm/contract.py", line 87
        assert // check value exists                                                                                 //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%16#0                                                                                                                                                                                self.pool_token                                                                               File "amm/contract.py", line 87
        itob                                                                                                         //                                                          (𝕡) seed#0,a_asset#0,b_asset#0 | {itob}                                                                                                                                                                                                      arc4.UInt64.encode(self.pool_token.asset_id)                                                  File "amm/contract.py", line 87
        retsub                                                                                                       //                                                          val_as_bytes%18#0                                                                                                                                                                                                                            return arc4.UInt64.encode(self.pool_token.asset_id)                                           File "amm/contract.py", line 87


// examples.amm.contract.ConstantProductAMM._create_pool_token() -> uint64:
_create_pool_token:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                       def _create_pool_token(self) -> Asset:                                                        File "amm/contract.py", line 277

_create_pool_token_block@0:
        itxn_begin                                                                                                   //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.begin()                                                                File "amm/contract.py", line 278
        int acfg                                                                                                     //                                                          acfg                                                                                                                                                                                                                                         TransactionType.AssetConfig                                                                   File "amm/contract.py", line 279
        itxn_field TypeEnum                                                                                          //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_type_enum(TransactionType.AssetConfig)                             File "amm/contract.py", line 279
        int 0                                                                                                        //                                                          0                                                                                                                                                                                                                                            self.asset_a                                                                                  File "amm/contract.py", line 281
        byte "asset_a"                                                                                               //                                                          0,"asset_a"                                                                                                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 281
        app_global_get_ex                                                                                            //                                                          {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 281
        assert // check value exists                                                                                 //                                                          app_global_get_ex_value%2#0                                                                                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 281
        asset_params_get AssetUnitName                                                                               //                                                          {asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                                    self.asset_a.unit_name                                                                        File "amm/contract.py", line 281
        assert // asset exists                                                                                       //                                                          maybe_value%0#0                                                                                                                                                                                                                              self.asset_a.unit_name                                                                        File "amm/contract.py", line 281
        byte "DPT-"                                                                                                  //                                                          maybe_value%0#0,"DPT-"                                                                                                                                                                                                                       b"DPT-"                                                                                       File "amm/contract.py", line 281
        swap                                                                                                         // load maybe_value%0#0 from l-stack (no copy)              "DPT-",maybe_value%0#0                                                                                                                                                                                                                       self.asset_a.unit_name                                                                        File "amm/contract.py", line 281
        concat                                                                                                       //                                                          {concat}                                                                                                                                                                                                                                     Bytes(b"DPT-") + self.asset_a.unit_name                                                       File "amm/contract.py", line 281
        byte "-"                                                                                                     //                                                          tmp%4#0,"-"                                                                                                                                                                                                                                  b"-"                                                                                          File "amm/contract.py", line 281
        concat                                                                                                       //                                                          {concat}                                                                                                                                                                                                                                     Bytes(b"DPT-") + self.asset_a.unit_name + Bytes(b"-")                                         File "amm/contract.py", line 281
        int 0                                                                                                        //                                                          tmp%5#0,0                                                                                                                                                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 281
        byte "asset_b"                                                                                               //                                                          tmp%5#0,0,"asset_b"                                                                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 281
        app_global_get_ex                                                                                            //                                                          tmp%5#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 281
        assert // check value exists                                                                                 //                                                          tmp%5#0,app_global_get_ex_value%8#0                                                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 281
        asset_params_get AssetUnitName                                                                               //                                                          tmp%5#0,{asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                            self.asset_b.unit_name                                                                        File "amm/contract.py", line 281
        assert // asset exists                                                                                       //                                                          tmp%5#0,maybe_value%6#0                                                                                                                                                                                                                      self.asset_b.unit_name                                                                        File "amm/contract.py", line 281
        concat                                                                                                       //                                                          {concat}                                                                                                                                                                                                                                     Bytes(b"DPT-") + self.asset_a.unit_name + Bytes(b"-") + self.asset_b.unit_name                File "amm/contract.py", line 281
        itxn_field ConfigAssetName                                                                                   //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_config_asset_name(                                                 File "amm/contract.py", line 280
        byte "dpt"                                                                                                   //                                                          "dpt"                                                                                                                                                                                                                                        b"dpt"                                                                                        File "amm/contract.py", line 283
        itxn_field ConfigAssetUnitName                                                                               //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_config_asset_unit_name(b"dpt")                                     File "amm/contract.py", line 283
        int 10000000000                                                                                              //                                                          10000000000                                                                                                                                                                                                                                  TOTAL_SUPPLY                                                                                  File "amm/contract.py", line 284
        itxn_field ConfigAssetTotal                                                                                  //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_config_asset_total(TOTAL_SUPPLY)                                   File "amm/contract.py", line 284
        int 3                                                                                                        //                                                          3                                                                                                                                                                                                                                            3                                                                                             File "amm/contract.py", line 285
        itxn_field ConfigAssetDecimals                                                                               //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_config_asset_decimals(3)                                           File "amm/contract.py", line 285
        global CurrentApplicationAddress                                                                             //                                                          {global}                                                                                                                                                                                                                                     Global.current_application_address()                                                          File "amm/contract.py", line 286
        itxn_field ConfigAssetManager                                                                                //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_config_asset_manager(Global.current_application_address())         File "amm/contract.py", line 286
        global CurrentApplicationAddress                                                                             //                                                          {global}                                                                                                                                                                                                                                     Global.current_application_address()                                                          File "amm/contract.py", line 287
        itxn_field ConfigAssetReserve                                                                                //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_config_asset_reserve(Global.current_application_address())         File "amm/contract.py", line 287
        int 0                                                                                                        //                                                          0                                                                                                                                                                                                                                            0                                                                                             File "amm/contract.py", line 288
        itxn_field Fee                                                                                               //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.set_fee(0)                                                             File "amm/contract.py", line 288
        itxn_submit                                                                                                  //                                                                                                                                                                                                                                                                                                       CreateInnerTransaction.submit()                                                               File "amm/contract.py", line 289
        itxn CreatedAssetID                                                                                          //                                                          {itxn}                                                                                                                                                                                                                                       InnerTransaction.created_asset_id()                                                           File "amm/contract.py", line 291
        retsub                                                                                                       //                                                          tmp%13#0                                                                                                                                                                                                                                     return Asset(InnerTransaction.created_asset_id())                                             File "amm/contract.py", line 291


// examples.amm.contract.ConstantProductAMM._do_opt_in(asset#0: uint64) -> void:
_do_opt_in:
        proto 1 0                                                                                                    //                                                          (𝕡) asset#0 |                                                                                                                                                                                                                                def _do_opt_in(self, asset: Asset) -> None:                                                   File "amm/contract.py", line 294

_do_opt_in_block@0:
        global CurrentApplicationAddress                                                                             //                                                          (𝕡) asset#0 | {global}                                                                                                                                                                                                                       Global.current_application_address()                                                          File "amm/contract.py", line 296
        frame_dig -1                                                                                                 // load asset#0 from parameters                             (𝕡) asset#0 | tmp%0#0,asset#0                                                                                                                                                                                                                asset: Asset                                                                                  File "amm/contract.py", line 294
        int 0                                                                                                        //                                                          (𝕡) asset#0 | tmp%0#0,asset#0,0                                                                                                                                                                                                              0                                                                                             File "amm/contract.py", line 298
        callsub do_asset_transfer                                                                                    //                                                          (𝕡) asset#0 |                                                                                                                                                                                                                                do_asset_transfer(                                                                            File "amm/contract.py", line 295
        retsub                                                                                                       //


// examples.amm.contract.do_asset_transfer(receiver#0: bytes, asset#0: uint64, amount#0: uint64) -> void:
do_asset_transfer:
        proto 3 0                                                                                                    //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            def do_asset_transfer(*, receiver: Account, asset: Asset, amount: UInt64) -> None:            File "amm/contract.py", line 367

do_asset_transfer_block@0:
        itxn_begin                                                                                                   //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.begin()                                                                File "amm/contract.py", line 368
        int axfer                                                                                                    //                                                          (𝕡) receiver#0,asset#0,amount#0 | axfer                                                                                                                                                                                                      TransactionType.AssetTransfer                                                                 File "amm/contract.py", line 369
        itxn_field TypeEnum                                                                                          //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.set_type_enum(TransactionType.AssetTransfer)                           File "amm/contract.py", line 369
        frame_dig -2                                                                                                 // load asset#0 from parameters                             (𝕡) receiver#0,asset#0,amount#0 | asset#0                                                                                                                                                                                                    asset: Asset                                                                                  File "amm/contract.py", line 367
        itxn_field XferAsset                                                                                         //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.set_xfer_asset(asset.asset_id)                                         File "amm/contract.py", line 370
        frame_dig -1                                                                                                 // load amount#0 from parameters                            (𝕡) receiver#0,asset#0,amount#0 | amount#0                                                                                                                                                                                                   amount: UInt64                                                                                File "amm/contract.py", line 367
        itxn_field AssetAmount                                                                                       //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.set_asset_amount(amount)                                               File "amm/contract.py", line 371
        frame_dig -3                                                                                                 // load receiver#0 from parameters                          (𝕡) receiver#0,asset#0,amount#0 | receiver#0                                                                                                                                                                                                 receiver: Account                                                                             File "amm/contract.py", line 367
        itxn_field AssetReceiver                                                                                     //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.set_asset_receiver(receiver)                                           File "amm/contract.py", line 372
        int 0                                                                                                        //                                                          (𝕡) receiver#0,asset#0,amount#0 | 0                                                                                                                                                                                                          0                                                                                             File "amm/contract.py", line 373
        itxn_field Fee                                                                                               //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.set_fee(0)                                                             File "amm/contract.py", line 373
        itxn_submit                                                                                                  //                                                          (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                            CreateInnerTransaction.submit()                                                               File "amm/contract.py", line 374
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.mint(a_xfer#0: uint64, b_xfer#0: uint64, pool_asset#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> void:
mint:
        proto 5 0                                                                                                    //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     def mint(                                                                                     File "amm/contract.py", line 96

mint_block@0:
        callsub _check_bootstrapped                                                                                  //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     self._check_bootstrapped()                                                                    File "amm/contract.py", line 119
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                   self.pool_token                                                                               File "amm/contract.py", line 122
        byte "pool_token"                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                      self.pool_token                                                                               File "amm/contract.py", line 122
        app_global_get_ex                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                         self.pool_token                                                                               File "amm/contract.py", line 122
        assert // check value exists                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                         self.pool_token                                                                               File "amm/contract.py", line 122
        frame_dig -3                                                                                                 // load pool_asset#0 from parameters                        (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,pool_asset#0                                                                                                                                            pool_asset: Asset                                                                             File "amm/contract.py", line 100
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                pool_asset == self.pool_token, "asset pool incorrect"                                         File "amm/contract.py", line 122
        assert // asset pool incorrect                                                                               //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert pool_asset == self.pool_token, "asset pool incorrect"                                  File "amm/contract.py", line 122
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 123
        byte "asset_a"                                                                                               //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                         self.asset_a                                                                                  File "amm/contract.py", line 123
        app_global_get_ex                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                         self.asset_a                                                                                  File "amm/contract.py", line 123
        assert // check value exists                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                         self.asset_a                                                                                  File "amm/contract.py", line 123
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,a_asset#0                                                                                                                                               a_asset: Asset                                                                                File "amm/contract.py", line 101
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                a_asset == self.asset_a, "asset a incorrect"                                                  File "amm/contract.py", line 123
        assert // asset a incorrect                                                                                  //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert a_asset == self.asset_a, "asset a incorrect"                                           File "amm/contract.py", line 123
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 124
        byte "asset_b"                                                                                               //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                         self.asset_b                                                                                  File "amm/contract.py", line 124
        app_global_get_ex                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                         self.asset_b                                                                                  File "amm/contract.py", line 124
        assert // check value exists                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0                                                                                                                                                         self.asset_b                                                                                  File "amm/contract.py", line 124
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,b_asset#0                                                                                                                                               b_asset: Asset                                                                                File "amm/contract.py", line 102
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                b_asset == self.asset_b, "asset b incorrect"                                                  File "amm/contract.py", line 124
        assert // asset b incorrect                                                                                  //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert b_asset == self.asset_b, "asset b incorrect"                                           File "amm/contract.py", line 124
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                            a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 98
        gtxns Sender                                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             a_xfer.sender                                                                                 File "amm/contract.py", line 125
        txn Sender                                                                                                   //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{txn}                                                                                                                                                                       Transaction.sender()                                                                          File "amm/contract.py", line 125
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                a_xfer.sender == Transaction.sender(), "sender invalid"                                       File "amm/contract.py", line 125
        assert // sender invalid                                                                                     //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert a_xfer.sender == Transaction.sender(), "sender invalid"                                File "amm/contract.py", line 125
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                            b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 99
        gtxns Sender                                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             b_xfer.sender                                                                                 File "amm/contract.py", line 126
        txn Sender                                                                                                   //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{txn}                                                                                                                                                                      Transaction.sender()                                                                          File "amm/contract.py", line 126
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                b_xfer.sender == Transaction.sender(), "sender invalid"                                       File "amm/contract.py", line 126
        assert // sender invalid                                                                                     //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert b_xfer.sender == Transaction.sender(), "sender invalid"                                File "amm/contract.py", line 126
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                            a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 98
        gtxns AssetReceiver                                                                                          //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             a_xfer.asset_receiver                                                                         File "amm/contract.py", line 130
        global CurrentApplicationAddress                                                                             //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%15#0,{global}                                                                                                                                                                   Global.current_application_address()                                                          File "amm/contract.py", line 130
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                a_xfer.asset_receiver == Global.current_application_address()                                 File "amm/contract.py", line 130
        assert // receiver not app address                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert (                                                                                      File "amm/contract.py", line 129
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                            a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 98
        gtxns XferAsset                                                                                              //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             a_xfer.xfer_asset                                                                             File "amm/contract.py", line 132
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,0                                                                                                                                                                          self.asset_a                                                                                  File "amm/contract.py", line 132
        byte "asset_a"                                                                                               //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,0,"asset_a"                                                                                                                                                                self.asset_a                                                                                  File "amm/contract.py", line 132
        app_global_get_ex                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                self.asset_a                                                                                  File "amm/contract.py", line 132
        assert // check value exists                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_value%19#0                                                                                                                                               self.asset_a                                                                                  File "amm/contract.py", line 132
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                        File "amm/contract.py", line 132
        assert // asset a incorrect                                                                                  //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                 File "amm/contract.py", line 132
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                            a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 98
        gtxns AssetAmount                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             a_xfer.asset_amount                                                                           File "amm/contract.py", line 133
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,0                                                                                                                                                                          0                                                                                             File "amm/contract.py", line 133
        >                                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {>}                                                                                                                                                                                 a_xfer.asset_amount > 0, "amount minimum not met"                                             File "amm/contract.py", line 133
        assert // amount minimum not met                                                                             //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert a_xfer.asset_amount > 0, "amount minimum not met"                                      File "amm/contract.py", line 133
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                            b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 99
        gtxns AssetReceiver                                                                                          //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             b_xfer.asset_receiver                                                                         File "amm/contract.py", line 137
        global CurrentApplicationAddress                                                                             //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%24#0,{global}                                                                                                                                                                   Global.current_application_address()                                                          File "amm/contract.py", line 137
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                b_xfer.asset_receiver == Global.current_application_address()                                 File "amm/contract.py", line 137
        assert // receiver not app address                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert (                                                                                      File "amm/contract.py", line 136
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                            b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 99
        gtxns XferAsset                                                                                              //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             b_xfer.xfer_asset                                                                             File "amm/contract.py", line 139
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,0                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 139
        byte "asset_b"                                                                                               //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,0,"asset_b"                                                                                                                                                                self.asset_b                                                                                  File "amm/contract.py", line 139
        app_global_get_ex                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                self.asset_b                                                                                  File "amm/contract.py", line 139
        assert // check value exists                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,app_global_get_ex_value%28#0                                                                                                                                               self.asset_b                                                                                  File "amm/contract.py", line 139
        ==                                                                                                           //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                        File "amm/contract.py", line 139
        assert // asset b incorrect                                                                                  //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                 File "amm/contract.py", line 139
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                            b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 99
        gtxns AssetAmount                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                             b_xfer.asset_amount                                                                           File "amm/contract.py", line 140
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%31#0,0                                                                                                                                                                          0                                                                                             File "amm/contract.py", line 140
        >                                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {>}                                                                                                                                                                                 b_xfer.asset_amount > 0, "amount minimum not met"                                             File "amm/contract.py", line 140
        assert // amount minimum not met                                                                             //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     assert b_xfer.asset_amount > 0, "amount minimum not met"                                      File "amm/contract.py", line 140
        callsub _current_pool_balance                                                                                //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {_current_pool_balance}                                                                                                                                                             self._current_pool_balance()                                                                  File "amm/contract.py", line 143
        callsub _current_a_balance                                                                                   //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,{_current_a_balance}                                                                                                                                                       self._current_a_balance()                                                                     File "amm/contract.py", line 144
        callsub _current_b_balance                                                                                   //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,{_current_b_balance}                                                                                                                                              self._current_b_balance()                                                                     File "amm/contract.py", line 145
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,a_xfer#0                                                                                                                                                 a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 98
        gtxns AssetAmount                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,{gtxns}                                                                                                                                                  a_xfer.asset_amount                                                                           File "amm/contract.py", line 146
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,tmp%36#0,b_xfer#0                                                                                                                                        b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 99
        gtxns AssetAmount                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,tmp%36#0,{gtxns}                                                                                                                                         b_xfer.asset_amount                                                                           File "amm/contract.py", line 147
        uncover 4                                                                                                    // load tmp%33#0 from l-stack (no copy)                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%34#0,tmp%35#0,tmp%36#0,tmp%37#0,tmp%33#0                                                                                                                                        self._current_pool_balance()                                                                  File "amm/contract.py", line 143
        uncover 4                                                                                                    // load tmp%34#0 from l-stack (no copy)                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%35#0,tmp%36#0,tmp%37#0,tmp%33#0,tmp%34#0                                                                                                                                        self._current_a_balance()                                                                     File "amm/contract.py", line 144
        uncover 4                                                                                                    // load tmp%35#0 from l-stack (no copy)                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%36#0,tmp%37#0,tmp%33#0,tmp%34#0,tmp%35#0                                                                                                                                        self._current_b_balance()                                                                     File "amm/contract.py", line 145
        uncover 4                                                                                                    // load tmp%36#0 from l-stack (no copy)                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%37#0,tmp%33#0,tmp%34#0,tmp%35#0,tmp%36#0                                                                                                                                        a_xfer.asset_amount                                                                           File "amm/contract.py", line 146
        uncover 4                                                                                                    // load tmp%37#0 from l-stack (no copy)                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,tmp%36#0,tmp%37#0                                                                                                                                        b_xfer.asset_amount                                                                           File "amm/contract.py", line 147
        callsub tokens_to_mint                                                                                       //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {tokens_to_mint}                                                                                                                                                                    tokens_to_mint(                                                                               File "amm/contract.py", line 142
        dup                                                                                                          // load to_mint#0 from l-stack (copy)                       (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0                                                                                                                                                                 to_mint                                                                                       File "amm/contract.py", line 142
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0,0                                                                                                                                                               0                                                                                             File "amm/contract.py", line 149
        >                                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{>}                                                                                                                                                                       to_mint > 0, "send amount too low"                                                            File "amm/contract.py", line 149
        assert // send amount too low                                                                                //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0                                                                                                                                                                           assert to_mint > 0, "send amount too low"                                                     File "amm/contract.py", line 149
        txn Sender                                                                                                   //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{txn}                                                                                                                                                                     Transaction.sender()                                                                          File "amm/contract.py", line 152
        int 0                                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,0                                                                                                                                                                self.pool_token                                                                               File "amm/contract.py", line 152
        byte "pool_token"                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,0,"pool_token"                                                                                                                                                   self.pool_token                                                                               File "amm/contract.py", line 152
        app_global_get_ex                                                                                            //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                      self.pool_token                                                                               File "amm/contract.py", line 152
        assert // check value exists                                                                                 //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_value%40#0                                                                                                                                     self.pool_token                                                                               File "amm/contract.py", line 152
        uncover 2                                                                                                    // load to_mint#0 from l-stack (no copy)                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%39#0,app_global_get_ex_value%40#0,to_mint#0                                                                                                                                     to_mint                                                                                       File "amm/contract.py", line 142
        callsub do_asset_transfer                                                                                    //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     do_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token, amount=to_mint)       File "amm/contract.py", line 152
        callsub _update_ratio                                                                                        //                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                     self._update_ratio()                                                                          File "amm/contract.py", line 153
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_bootstrapped() -> void:
_check_bootstrapped:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                       def _check_bootstrapped(self) -> None:                                                        File "amm/contract.py", line 260

_check_bootstrapped_block@0:
        int 0                                                                                                        //                                                          0                                                                                                                                                                                                                                            self.pool_token                                                                               File "amm/contract.py", line 261
        byte "pool_token"                                                                                            //                                                          0,"pool_token"                                                                                                                                                                                                                               self.pool_token                                                                               File "amm/contract.py", line 261
        app_global_get_ex                                                                                            //                                                          {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                  self.pool_token                                                                               File "amm/contract.py", line 261
        assert // check value exists                                                                                 //                                                          app_global_get_ex_value%0#0                                                                                                                                                                                                                  self.pool_token                                                                               File "amm/contract.py", line 261
        assert // bootstrap method needs to be called first                                                          //                                                                                                                                                                                                                                                                                                       assert self.pool_token, "bootstrap method needs to be called first"                           File "amm/contract.py", line 261
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
_current_pool_balance:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                       def _current_pool_balance(self) -> UInt64:                                                    File "amm/contract.py", line 302

_current_pool_balance_block@0:
        global CurrentApplicationAddress                                                                             //                                                          {global}                                                                                                                                                                                                                                     Global.current_application_address()                                                          File "amm/contract.py", line 303
        int 0                                                                                                        //                                                          tmp%2#0,0                                                                                                                                                                                                                                    self.pool_token                                                                               File "amm/contract.py", line 303
        byte "pool_token"                                                                                            //                                                          tmp%2#0,0,"pool_token"                                                                                                                                                                                                                       self.pool_token                                                                               File "amm/contract.py", line 303
        app_global_get_ex                                                                                            //                                                          tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                          self.pool_token                                                                               File "amm/contract.py", line 303
        assert // check value exists                                                                                 //                                                          tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                          self.pool_token                                                                               File "amm/contract.py", line 303
        asset_holding_get AssetBalance                                                                               //                                                          {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                  self.pool_token.balance(Global.current_application_address())                                 File "amm/contract.py", line 303
        assert // account opted into asset                                                                           //                                                          maybe_value%0#0                                                                                                                                                                                                                              self.pool_token.balance(Global.current_application_address())                                 File "amm/contract.py", line 303
        retsub                                                                                                       //                                                          maybe_value%0#0                                                                                                                                                                                                                              return self.pool_token.balance(Global.current_application_address())                          File "amm/contract.py", line 303


// examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
_current_a_balance:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                       def _current_a_balance(self) -> UInt64:                                                       File "amm/contract.py", line 306

_current_a_balance_block@0:
        global CurrentApplicationAddress                                                                             //                                                          {global}                                                                                                                                                                                                                                     Global.current_application_address()                                                          File "amm/contract.py", line 307
        int 0                                                                                                        //                                                          tmp%2#0,0                                                                                                                                                                                                                                    self.asset_a                                                                                  File "amm/contract.py", line 307
        byte "asset_a"                                                                                               //                                                          tmp%2#0,0,"asset_a"                                                                                                                                                                                                                          self.asset_a                                                                                  File "amm/contract.py", line 307
        app_global_get_ex                                                                                            //                                                          tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                          self.asset_a                                                                                  File "amm/contract.py", line 307
        assert // check value exists                                                                                 //                                                          tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                          self.asset_a                                                                                  File "amm/contract.py", line 307
        asset_holding_get AssetBalance                                                                               //                                                          {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                  self.asset_a.balance(Global.current_application_address())                                    File "amm/contract.py", line 307
        assert // account opted into asset                                                                           //                                                          maybe_value%0#0                                                                                                                                                                                                                              self.asset_a.balance(Global.current_application_address())                                    File "amm/contract.py", line 307
        retsub                                                                                                       //                                                          maybe_value%0#0                                                                                                                                                                                                                              return self.asset_a.balance(Global.current_application_address())                             File "amm/contract.py", line 307


// examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
_current_b_balance:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                       def _current_b_balance(self) -> UInt64:                                                       File "amm/contract.py", line 310

_current_b_balance_block@0:
        global CurrentApplicationAddress                                                                             //                                                          {global}                                                                                                                                                                                                                                     Global.current_application_address()                                                          File "amm/contract.py", line 311
        int 0                                                                                                        //                                                          tmp%2#0,0                                                                                                                                                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 311
        byte "asset_b"                                                                                               //                                                          tmp%2#0,0,"asset_b"                                                                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 311
        app_global_get_ex                                                                                            //                                                          tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 311
        assert // check value exists                                                                                 //                                                          tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 311
        asset_holding_get AssetBalance                                                                               //                                                          {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                  self.asset_b.balance(Global.current_application_address())                                    File "amm/contract.py", line 311
        assert // account opted into asset                                                                           //                                                          maybe_value%0#0                                                                                                                                                                                                                              self.asset_b.balance(Global.current_application_address())                                    File "amm/contract.py", line 311
        retsub                                                                                                       //                                                          maybe_value%0#0                                                                                                                                                                                                                              return self.asset_b.balance(Global.current_application_address())                             File "amm/contract.py", line 311


// examples.amm.contract.tokens_to_mint(pool_balance#0: uint64, a_balance#0: uint64, b_balance#0: uint64, a_amount#0: uint64, b_amount#0: uint64) -> uint64:
tokens_to_mint:
        proto 5 1                                                                                                    //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 |                                                                                                                                                                           def tokens_to_mint(                                                                           File "amm/contract.py", line 333
        byte ""
        dup                                                                                                          // allocate 2 to stack                                      (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |

tokens_to_mint_block@0:
        frame_dig -4                                                                                                 // load a_balance#0 from parameters                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0                                                                                                                                     a_balance: UInt64                                                                             File "amm/contract.py", line 336
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0,a_amount#0                                                                                                                          a_amount: UInt64                                                                              File "amm/contract.py", line 338
        ==                                                                                                           //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 341
        bz tokens_to_mint_bool_false@3                                                                               //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                 a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 341
        // Implicit fall through to tokens_to_mint_and_contd@1                                                       //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                 a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 341

tokens_to_mint_and_contd@1:
        frame_dig -3                                                                                                 // load b_balance#0 from parameters                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0                                                                                                                                     b_balance: UInt64                                                                             File "amm/contract.py", line 337
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0,b_amount#0                                                                                                                          b_amount: UInt64                                                                              File "amm/contract.py", line 339
        ==                                                                                                           //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                            b_balance == b_amount                                                                         File "amm/contract.py", line 341
        bz tokens_to_mint_bool_false@3                                                                               //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                 a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 341
        // Implicit fall through to tokens_to_mint_bool_true@2                                                       //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                 a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 341

tokens_to_mint_bool_true@2:
        int 1                                                                                                        //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 1
        b tokens_to_mint_bool_merge@4                                                                                //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) and_result%2#0 |                                                                                                             and_result%2#0

tokens_to_mint_bool_false@3:
        int 0                                                                                                        //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 0
        // Implicit fall through to tokens_to_mint_bool_merge@4                                                      //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) and_result%2#0 |                                                                                                             and_result%2#0

tokens_to_mint_bool_merge@4:
        bz tokens_to_mint_after_if_else@6                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                  and_result%2#0 if is_initial_mint:                                                                           File "amm/contract.py", line 342
        // Implicit fall through to tokens_to_mint_if_body@5                                                         //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                 if is_initial_mint:                                                                           File "amm/contract.py", line 342

tokens_to_mint_if_body@5:
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0                                                                                                                                      a_amount: UInt64                                                                              File "amm/contract.py", line 338
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0,b_amount#0                                                                                                                           b_amount: UInt64                                                                              File "amm/contract.py", line 339
        *                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                             a_amount * b_amount                                                                           File "amm/contract.py", line 343
        sqrt                                                                                                         //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {sqrt}                                                                                                                                          sqrt(a_amount * b_amount)                                                                     File "amm/contract.py", line 343
        int 1000                                                                                                     //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0,1000                                                                                                                                    SCALE                                                                                         File "amm/contract.py", line 343
        -                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                             sqrt(a_amount * b_amount) - SCALE                                                             File "amm/contract.py", line 343
        frame_bury 0
        retsub                                                                                                       //                                                          tmp%5#0                                                                                                                                                                                                                                      return sqrt(a_amount * b_amount) - SCALE                                                      File "amm/contract.py", line 343

tokens_to_mint_after_if_else@6:
        int 10000000000                                                                                              //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000                                                                                                                                     TOTAL_SUPPLY                                                                                  File "amm/contract.py", line 344
        frame_dig -5                                                                                                 // load pool_balance#0 from parameters                      (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000,pool_balance#0                                                                                                                      pool_balance: UInt64                                                                          File "amm/contract.py", line 335
        -                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                             TOTAL_SUPPLY - pool_balance                                                                   File "amm/contract.py", line 344
        int 1000                                                                                                     //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000                                                                                                                             SCALE                                                                                         File "amm/contract.py", line 345
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000,a_amount#0                                                                                                                  a_amount: UInt64                                                                              File "amm/contract.py", line 338
        *                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {*}                                                                                                                              SCALE * a_amount                                                                              File "amm/contract.py", line 345
        frame_dig -4                                                                                                 // load a_balance#0 from parameters                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,a_balance#0                                                                                                              a_balance: UInt64                                                                             File "amm/contract.py", line 336
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,a_balance#0,a_amount#0                                                                                                   a_amount: UInt64                                                                              File "amm/contract.py", line 338
        -                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,{-}                                                                                                                      a_balance - a_amount                                                                          File "amm/contract.py", line 345
        /                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {/}                                                                                                                              SCALE * a_amount // (a_balance - a_amount)                                                    File "amm/contract.py", line 345
        dup                                                                                                          // store a_ratio#0 to l-stack (copy)                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,a_ratio#0                                                                                                              a_ratio                                                                                       File "amm/contract.py", line 345
        frame_bury 0                                                                                                 // store a_ratio#0 to f-stack                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                                        a_ratio                                                                                       File "amm/contract.py", line 345
        int 1000                                                                                                     //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000                                                                                                                   SCALE                                                                                         File "amm/contract.py", line 346
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000,b_amount#0                                                                                                        b_amount: UInt64                                                                              File "amm/contract.py", line 339
        *                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{*}                                                                                                                    SCALE * b_amount                                                                              File "amm/contract.py", line 346
        frame_dig -3                                                                                                 // load b_balance#0 from parameters                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,b_balance#0                                                                                                    b_balance: UInt64                                                                             File "amm/contract.py", line 337
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,b_balance#0,b_amount#0                                                                                         b_amount: UInt64                                                                              File "amm/contract.py", line 339
        -                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,{-}                                                                                                            b_balance - b_amount                                                                          File "amm/contract.py", line 346
        /                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{/}                                                                                                                    SCALE * b_amount // (b_balance - b_amount)                                                    File "amm/contract.py", line 346
        dup                                                                                                          // store b_ratio#0 to l-stack (copy)                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0,b_ratio#0                                                                                                    b_ratio                                                                                       File "amm/contract.py", line 346
        frame_bury 1                                                                                                 // store b_ratio#0 to f-stack                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0                                                                                                              b_ratio                                                                                       File "amm/contract.py", line 346
        <                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {<}                                                                                                                              a_ratio < b_ratio:                                                                            File "amm/contract.py", line 347
        bz tokens_to_mint_else_body@8                                                                                //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                  if a_ratio < b_ratio:                                                                         File "amm/contract.py", line 347
        // Implicit fall through to tokens_to_mint_if_body@7                                                         //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                   issued#0       if a_ratio < b_ratio:                                                                         File "amm/contract.py", line 347

tokens_to_mint_if_body@7:
        frame_dig 0                                                                                                  // load a_ratio#0 from f-stack                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                         issued#0       a_ratio                                                                                       File "amm/contract.py", line 345
        *                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                             a_ratio * issued                                                                              File "amm/contract.py", line 348
        int 1000                                                                                                     //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0,1000                                                                                                                                   SCALE                                                                                         File "amm/contract.py", line 348
        /                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                             a_ratio * issued // SCALE                                                                     File "amm/contract.py", line 348
        frame_bury 0
        retsub                                                                                                       //                                                          tmp%12#0                                                                                                                                                                                                                                     return a_ratio * issued // SCALE                                                              File "amm/contract.py", line 348

tokens_to_mint_else_body@8:
        frame_dig 1                                                                                                  // load b_ratio#0 from f-stack                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | b_ratio#0                                                                                                         issued#0       b_ratio                                                                                       File "amm/contract.py", line 346
        *                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                             b_ratio * issued                                                                              File "amm/contract.py", line 350
        int 1000                                                                                                     //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0,1000                                                                                                                                   SCALE                                                                                         File "amm/contract.py", line 350
        /                                                                                                            //                                                          (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                             b_ratio * issued // SCALE                                                                     File "amm/contract.py", line 350
        frame_bury 0
        retsub                                                                                                       //                                                          tmp%14#0                                                                                                                                                                                                                                     return b_ratio * issued // SCALE                                                              File "amm/contract.py", line 350


// examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
_update_ratio:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                       def _update_ratio(self) -> None:                                                              File "amm/contract.py", line 264

_update_ratio_block@0:
        callsub _current_a_balance                                                                                   //                                                          {_current_a_balance}                                                                                                                                                                                                                         self._current_a_balance()                                                                     File "amm/contract.py", line 265
        callsub _current_b_balance                                                                                   //                                                          a_balance#0,{_current_b_balance}                                                                                                                                                                                                             self._current_b_balance()                                                                     File "amm/contract.py", line 266
        swap                                                                                                         // store b_balance#0 to l-stack (no copy)                   b_balance#0,a_balance#0                                                                                                                                                                                                                      b_balance                                                                                     File "amm/contract.py", line 266
        int 1000                                                                                                     //                                                          b_balance#0,a_balance#0,1000                                                                                                                                                                                                                 SCALE                                                                                         File "amm/contract.py", line 268
        *                                                                                                            //                                                          b_balance#0,{*}                                                                                                                                                                                                                              a_balance * SCALE                                                                             File "amm/contract.py", line 268
        swap                                                                                                         // load b_balance#0 from l-stack (no copy)                  tmp%0#0,b_balance#0                                                                                                                                                                                                                          b_balance                                                                                     File "amm/contract.py", line 266
        /                                                                                                            //                                                          {/}                                                                                                                                                                                                                                          a_balance * SCALE // b_balance                                                                File "amm/contract.py", line 268
        byte "ratio"                                                                                                 //                                                          new_state_value%1#0,"ratio"                                                                                                                                                                                                                  self.ratio                                                                                    File "amm/contract.py", line 268
        swap                                                                                                         // load new_state_value%1#0 from l-stack (no copy)          "ratio",new_state_value%1#0                                                                                                                                                                                                                  a_balance * SCALE // b_balance                                                                File "amm/contract.py", line 268
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                       self.ratio = a_balance * SCALE // b_balance                                                   File "amm/contract.py", line 268
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.burn(pool_xfer#0: uint64, pool_asset#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> void:
burn:
        proto 4 0                                                                                                    //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           def burn(                                                                                     File "amm/contract.py", line 162

burn_block@0:
        callsub _check_bootstrapped                                                                                  //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           self._check_bootstrapped()                                                                    File "amm/contract.py", line 178
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                         self.pool_token                                                                               File "amm/contract.py", line 180
        byte "pool_token"                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                            self.pool_token                                                                               File "amm/contract.py", line 180
        app_global_get_ex                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                               self.pool_token                                                                               File "amm/contract.py", line 180
        assert // check value exists                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                               self.pool_token                                                                               File "amm/contract.py", line 180
        frame_dig -3                                                                                                 // load pool_asset#0 from parameters                        (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,pool_asset#0                                                                                                                                                  pool_asset: Asset                                                                             File "amm/contract.py", line 165
        ==                                                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                      pool_asset == self.pool_token, "asset pool incorrect"                                         File "amm/contract.py", line 180
        assert // asset pool incorrect                                                                               //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert pool_asset == self.pool_token, "asset pool incorrect"                                  File "amm/contract.py", line 180
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                         self.asset_a                                                                                  File "amm/contract.py", line 181
        byte "asset_a"                                                                                               //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                               self.asset_a                                                                                  File "amm/contract.py", line 181
        app_global_get_ex                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                               self.asset_a                                                                                  File "amm/contract.py", line 181
        assert // check value exists                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                               self.asset_a                                                                                  File "amm/contract.py", line 181
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,a_asset#0                                                                                                                                                     a_asset: Asset                                                                                File "amm/contract.py", line 166
        ==                                                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                      a_asset == self.asset_a, "asset a incorrect"                                                  File "amm/contract.py", line 181
        assert // asset a incorrect                                                                                  //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert a_asset == self.asset_a, "asset a incorrect"                                           File "amm/contract.py", line 181
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                         self.asset_b                                                                                  File "amm/contract.py", line 182
        byte "asset_b"                                                                                               //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                               self.asset_b                                                                                  File "amm/contract.py", line 182
        app_global_get_ex                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                               self.asset_b                                                                                  File "amm/contract.py", line 182
        assert // check value exists                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0                                                                                                                                                               self.asset_b                                                                                  File "amm/contract.py", line 182
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,b_asset#0                                                                                                                                                     b_asset: Asset                                                                                File "amm/contract.py", line 167
        ==                                                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                      b_asset == self.asset_b, "asset b incorrect"                                                  File "amm/contract.py", line 182
        assert // asset b incorrect                                                                                  //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert b_asset == self.asset_b, "asset b incorrect"                                           File "amm/contract.py", line 182
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                               pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 164
        gtxns AssetReceiver                                                                                          //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                   pool_xfer.asset_receiver                                                                      File "amm/contract.py", line 185
        global CurrentApplicationAddress                                                                             //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{global}                                                                                                                                                                          Global.current_application_address()                                                          File "amm/contract.py", line 185
        ==                                                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                      pool_xfer.asset_receiver == Global.current_application_address()                              File "amm/contract.py", line 185
        assert // receiver not app address                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert (                                                                                      File "amm/contract.py", line 184
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                               pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 164
        gtxns AssetAmount                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                   pool_xfer.asset_amount                                                                        File "amm/contract.py", line 187
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,0                                                                                                                                                                                0                                                                                             File "amm/contract.py", line 187
        >                                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {>}                                                                                                                                                                                       pool_xfer.asset_amount > 0, "amount minimum not met"                                          File "amm/contract.py", line 187
        assert // amount minimum not met                                                                             //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert pool_xfer.asset_amount > 0, "amount minimum not met"                                   File "amm/contract.py", line 187
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                               pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 164
        gtxns XferAsset                                                                                              //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                   pool_xfer.xfer_asset                                                                          File "amm/contract.py", line 188
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,0                                                                                                                                                                                self.pool_token                                                                               File "amm/contract.py", line 188
        byte "pool_token"                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,0,"pool_token"                                                                                                                                                                   self.pool_token                                                                               File "amm/contract.py", line 188
        app_global_get_ex                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                      self.pool_token                                                                               File "amm/contract.py", line 188
        assert // check value exists                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,app_global_get_ex_value%15#0                                                                                                                                                     self.pool_token                                                                               File "amm/contract.py", line 188
        ==                                                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                      pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                               File "amm/contract.py", line 188
        assert // asset pool incorrect                                                                               //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                        File "amm/contract.py", line 188
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                               pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 164
        gtxns Sender                                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                   pool_xfer.sender                                                                              File "amm/contract.py", line 189
        txn Sender                                                                                                   //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,{txn}                                                                                                                                                                            Transaction.sender()                                                                          File "amm/contract.py", line 189
        ==                                                                                                           //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                      pool_xfer.sender == Transaction.sender(), "sender invalid"                                    File "amm/contract.py", line 189
        assert // sender invalid                                                                                     //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           assert pool_xfer.sender == Transaction.sender(), "sender invalid"                             File "amm/contract.py", line 189
        callsub _current_pool_balance                                                                                //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {_current_pool_balance}                                                                                                                                                                   self._current_pool_balance()                                                                  File "amm/contract.py", line 193
        callsub _current_a_balance                                                                                   //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,{_current_a_balance}                                                                                                                                                       self._current_a_balance()                                                                     File "amm/contract.py", line 196
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%21#0,pool_xfer#0                                                                                                                                                       pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 164
        gtxns AssetAmount                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%21#0,{gtxns}                                                                                                                                                           pool_xfer.asset_amount                                                                        File "amm/contract.py", line 197
        dig 2                                                                                                        // load pool_balance#0 from l-stack (copy)                  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%21#0,tmp%22#0,pool_balance#0                                                                                                                                           pool_balance                                                                                  File "amm/contract.py", line 193
        uncover 2                                                                                                    // load tmp%21#0 from l-stack (no copy)                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%22#0,pool_balance#0,tmp%21#0                                                                                                                                           self._current_a_balance()                                                                     File "amm/contract.py", line 196
        uncover 2                                                                                                    // load tmp%22#0 from l-stack (no copy)                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,pool_balance#0,tmp%21#0,tmp%22#0                                                                                                                                           pool_xfer.asset_amount                                                                        File "amm/contract.py", line 197
        callsub tokens_to_burn                                                                                       //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,{tokens_to_burn}                                                                                                                                                           tokens_to_burn(                                                                               File "amm/contract.py", line 194
        swap                                                                                                         // store a_amt#0 to l-stack (no copy)                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0                                                                                                                                                                    a_amt                                                                                         File "amm/contract.py", line 194
        callsub _current_b_balance                                                                                   //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,{_current_b_balance}                                                                                                                                               self._current_b_balance()                                                                     File "amm/contract.py", line 201
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%23#0,pool_xfer#0                                                                                                                                               pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 164
        gtxns AssetAmount                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%23#0,{gtxns}                                                                                                                                                   pool_xfer.asset_amount                                                                        File "amm/contract.py", line 202
        uncover 2                                                                                                    // load pool_balance#0 from l-stack (no copy)               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%23#0,tmp%24#0,pool_balance#0                                                                                                                                                  pool_balance                                                                                  File "amm/contract.py", line 193
        uncover 2                                                                                                    // load tmp%23#0 from l-stack (no copy)                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%24#0,pool_balance#0,tmp%23#0                                                                                                                                                  self._current_b_balance()                                                                     File "amm/contract.py", line 201
        uncover 2                                                                                                    // load tmp%24#0 from l-stack (no copy)                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%23#0,tmp%24#0                                                                                                                                                  pool_xfer.asset_amount                                                                        File "amm/contract.py", line 202
        callsub tokens_to_burn                                                                                       //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,{tokens_to_burn}                                                                                                                                                                  tokens_to_burn(                                                                               File "amm/contract.py", line 199
        swap                                                                                                         // store b_amt#0 to l-stack (no copy)                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0                                                                                                                                                                           b_amt                                                                                         File "amm/contract.py", line 199
        txn Sender                                                                                                   //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,{txn}                                                                                                                                                                     Transaction.sender()                                                                          File "amm/contract.py", line 206
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,0                                                                                                                                                                self.asset_a                                                                                  File "amm/contract.py", line 206
        byte "asset_a"                                                                                               //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,0,"asset_a"                                                                                                                                                      self.asset_a                                                                                  File "amm/contract.py", line 206
        app_global_get_ex                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                      self.asset_a                                                                                  File "amm/contract.py", line 206
        assert // check value exists                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_value%26#0                                                                                                                                     self.asset_a                                                                                  File "amm/contract.py", line 206
        uncover 2                                                                                                    // load a_amt#0 from l-stack (no copy)                      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%25#0,app_global_get_ex_value%26#0,a_amt#0                                                                                                                                     a_amt                                                                                         File "amm/contract.py", line 194
        callsub do_asset_transfer                                                                                    //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0                                                                                                                                                                                   do_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a, amount=a_amt)            File "amm/contract.py", line 206
        txn Sender                                                                                                   //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,{txn}                                                                                                                                                                             Transaction.sender()                                                                          File "amm/contract.py", line 209
        int 0                                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,0                                                                                                                                                                        self.asset_b                                                                                  File "amm/contract.py", line 209
        byte "asset_b"                                                                                               //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,0,"asset_b"                                                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 209
        app_global_get_ex                                                                                            //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 209
        assert // check value exists                                                                                 //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_value%29#0                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 209
        uncover 2                                                                                                    // load b_amt#0 from l-stack (no copy)                      (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%28#0,app_global_get_ex_value%29#0,b_amt#0                                                                                                                                             b_amt                                                                                         File "amm/contract.py", line 199
        callsub do_asset_transfer                                                                                    //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           do_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b, amount=b_amt)            File "amm/contract.py", line 209
        callsub _update_ratio                                                                                        //                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                           self._update_ratio()                                                                          File "amm/contract.py", line 210
        retsub                                                                                                       //


// examples.amm.contract.tokens_to_burn(pool_balance#0: uint64, supply#0: uint64, amount#0: uint64) -> uint64:
tokens_to_burn:
        proto 3 1                                                                                                    //                                                          (𝕡) pool_balance#0,supply#0,amount#0 |                                                                                                                                                                                                       def tokens_to_burn(*, pool_balance: UInt64, supply: UInt64, amount: UInt64) -> UInt64:        File "amm/contract.py", line 354

tokens_to_burn_block@0:
        int 10000000000                                                                                              //                                                          (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000                                                                                                                                                                                           TOTAL_SUPPLY                                                                                  File "amm/contract.py", line 355
        frame_dig -3                                                                                                 // load pool_balance#0 from parameters                      (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000,pool_balance#0                                                                                                                                                                            pool_balance: UInt64                                                                          File "amm/contract.py", line 354
        -                                                                                                            //                                                          (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                   TOTAL_SUPPLY - pool_balance                                                                   File "amm/contract.py", line 355
        frame_dig -1                                                                                                 // load amount#0 from parameters                            (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0,amount#0                                                                                                                                                                                      amount: UInt64                                                                                File "amm/contract.py", line 354
        -                                                                                                            //                                                          (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                   TOTAL_SUPPLY - pool_balance - amount                                                          File "amm/contract.py", line 355
        frame_dig -2                                                                                                 // load supply#0 from parameters                            (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0                                                                                                                                                                                     supply: UInt64                                                                                File "amm/contract.py", line 354
        frame_dig -1                                                                                                 // load amount#0 from parameters                            (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0,amount#0                                                                                                                                                                            amount: UInt64                                                                                File "amm/contract.py", line 354
        *                                                                                                            //                                                          (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,{*}                                                                                                                                                                                          supply * amount                                                                               File "amm/contract.py", line 356
        swap                                                                                                         // load issued#0 from l-stack (no copy)                     (𝕡) pool_balance#0,supply#0,amount#0 | tmp%1#0,issued#0                                                                                                                                                                                      issued                                                                                        File "amm/contract.py", line 355
        /                                                                                                            //                                                          (𝕡) pool_balance#0,supply#0,amount#0 | {/}                                                                                                                                                                                                   supply * amount // issued                                                                     File "amm/contract.py", line 356
        retsub                                                                                                       //                                                          tmp%2#0                                                                                                                                                                                                                                      return supply * amount // issued                                                              File "amm/contract.py", line 356


// examples.amm.contract.ConstantProductAMM.swap(swap_xfer#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> void:
swap:
        proto 3 0                                                                                                    //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                        def swap(                                                                                     File "amm/contract.py", line 218
        byte ""
        dup                                                                                                          // allocate 2 to stack                                      (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |

swap_block@0:
        callsub _check_bootstrapped                                                                                  //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          self._check_bootstrapped()                                                                    File "amm/contract.py", line 231
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                        self.asset_a                                                                                  File "amm/contract.py", line 233
        byte "asset_a"                                                                                               //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_a"                                                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 233
        app_global_get_ex                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 233
        assert // check value exists                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0                                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 233
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0,a_asset#0                                                                                                                                    a_asset: Asset                                                                                File "amm/contract.py", line 221
        ==                                                                                                           //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                     a_asset == self.asset_a, "asset a incorrect"                                                  File "amm/contract.py", line 233
        assert // asset a incorrect                                                                                  //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          assert a_asset == self.asset_a, "asset a incorrect"                                           File "amm/contract.py", line 233
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                        self.asset_b                                                                                  File "amm/contract.py", line 234
        byte "asset_b"                                                                                               //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_b"                                                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 234
        app_global_get_ex                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 234
        assert // check value exists                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0                                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 234
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0,b_asset#0                                                                                                                                    b_asset: Asset                                                                                File "amm/contract.py", line 222
        ==                                                                                                           //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                     b_asset == self.asset_b, "asset b incorrect"                                                  File "amm/contract.py", line 234
        assert // asset b incorrect                                                                                  //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          assert b_asset == self.asset_b, "asset b incorrect"                                           File "amm/contract.py", line 234
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | swap_xfer#0                                                                                                                                                              swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 220
        gtxns AssetAmount                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {gtxns}                                                                                                                                                                  swap_xfer.asset_amount                                                                        File "amm/contract.py", line 236
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%6#0,0                                                                                                                                                                0                                                                                             File "amm/contract.py", line 236
        >                                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {>}                                                                                                                                                                      swap_xfer.asset_amount > 0, "amount minimum not met"                                          File "amm/contract.py", line 236
        assert // amount minimum not met                                                                             //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          assert swap_xfer.asset_amount > 0, "amount minimum not met"                                   File "amm/contract.py", line 236
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | swap_xfer#0                                                                                                                                                              swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 220
        gtxns Sender                                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {gtxns}                                                                                                                                                                  swap_xfer.sender                                                                              File "amm/contract.py", line 237
        txn Sender                                                                                                   //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%8#0,{txn}                                                                                                                                                            Transaction.sender()                                                                          File "amm/contract.py", line 237
        ==                                                                                                           //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                     swap_xfer.sender == Transaction.sender(), "sender invalid"                                    File "amm/contract.py", line 237
        assert // sender invalid                                                                                     //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          assert swap_xfer.sender == Transaction.sender(), "sender invalid"                             File "amm/contract.py", line 237
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                        self.asset_a                                                                                  File "amm/contract.py", line 240
        byte "asset_a"                                                                                               //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_a"                                                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 240
        app_global_get_ex                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 240
        assert // check value exists                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0                                                                                                                                             self.asset_a                                                                                  File "amm/contract.py", line 240
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,0                                                                                                                                           self.asset_b                                                                                  File "amm/contract.py", line 244
        byte "asset_b"                                                                                               //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,0,"asset_b"                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 244
        app_global_get_ex                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 244
        assert // check value exists                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0                                                                                                                self.asset_b                                                                                  File "amm/contract.py", line 244
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,swap_xfer#0                                                                                                    swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 220
        gtxns XferAsset                                                                                              //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,{gtxns}                                                                                                        swap_xfer.xfer_asset                                                                          File "amm/contract.py", line 239
        uncover 2                                                                                                    // load app_global_get_ex_value%11#0 from l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%13#0,awst_tmp%15#0,app_global_get_ex_value%11#0                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 240
        uncover 2                                                                                                    // load app_global_get_ex_value%13#0 from l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | awst_tmp%15#0,app_global_get_ex_value%11#0,app_global_get_ex_value%13#0                                                                                                  self.asset_b                                                                                  File "amm/contract.py", line 244
        uncover 2                                                                                                    // load awst_tmp%15#0 from l-stack (no copy)                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,awst_tmp%15#0                                                                                                  swap_xfer.xfer_asset                                                                          File "amm/contract.py", line 239
        match swap_switch_case_0@1 swap_switch_case_1@2                                                              //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          match swap_xfer.xfer_asset:                                                                   File "amm/contract.py", line 239
        b swap_switch_case_default@3                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          match swap_xfer.xfer_asset:                                                                   File "amm/contract.py", line 239

swap_switch_case_0@1:
        callsub _current_b_balance                                                                                   //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_b_balance}                                                                                                                                                     self._current_b_balance()                                                                     File "amm/contract.py", line 241
        frame_bury 0                                                                                                 // store in_supply#0 to f-stack                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          in_supply                                                                                     File "amm/contract.py", line 241
        callsub _current_a_balance                                                                                   //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_a_balance}                                                                                                                                                     self._current_a_balance()                                                                     File "amm/contract.py", line 242
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0                                                                                                                                                     self.asset_a                                                                                  File "amm/contract.py", line 243
        byte "asset_a"                                                                                               //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0,"asset_a"                                                                                                                                           self.asset_a                                                                                  File "amm/contract.py", line 243
        app_global_get_ex                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                           self.asset_a                                                                                  File "amm/contract.py", line 243
        assert // check value exists                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | app_global_get_ex_value%16#0                                                                                                                          self.asset_a                                                                                  File "amm/contract.py", line 243
        frame_bury 1                                                                                                 // store out_asset#0 to f-stack                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                                       out_asset                                                                                     File "amm/contract.py", line 243
        b swap_switch_case_next@4                                                                                    //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                        out_supply#0

swap_switch_case_1@2:
        callsub _current_a_balance                                                                                   //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_a_balance}                                                                                                                                                     self._current_a_balance()                                                                     File "amm/contract.py", line 245
        frame_bury 0                                                                                                 // store in_supply#0 to f-stack                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          in_supply                                                                                     File "amm/contract.py", line 241
        callsub _current_b_balance                                                                                   //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_b_balance}                                                                                                                                                     self._current_b_balance()                                                                     File "amm/contract.py", line 246
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0                                                                                                                                                     self.asset_b                                                                                  File "amm/contract.py", line 247
        byte "asset_b"                                                                                               //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0,"asset_b"                                                                                                                                           self.asset_b                                                                                  File "amm/contract.py", line 247
        app_global_get_ex                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                           self.asset_b                                                                                  File "amm/contract.py", line 247
        assert // check value exists                                                                                 //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | app_global_get_ex_value%18#0                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 247
        frame_bury 1                                                                                                 // store out_asset#0 to f-stack                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                                       out_asset                                                                                     File "amm/contract.py", line 243
        b swap_switch_case_next@4                                                                                    //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                        out_supply#0

swap_switch_case_default@3:
        err // asset id incorrect                                                                                    //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          assert False, "asset id incorrect"                                                            File "amm/contract.py", line 249

swap_switch_case_next@4:
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | swap_xfer#0                                                                                                                            out_supply#0   swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 220
        gtxns AssetAmount                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | {gtxns}                                                                                                                                               swap_xfer.asset_amount                                                                        File "amm/contract.py", line 252
        frame_dig 0                                                                                                  // load in_supply#0 from f-stack                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | tmp%20#0,in_supply#0                                                                                                                                  in_supply                                                                                     File "amm/contract.py", line 241
        uncover 2                                                                                                    // load out_supply#0 from x-stack                           (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%20#0,in_supply#0,out_supply#0                                                                                                                                        out_supply                                                                                    File "amm/contract.py", line 242
        callsub tokens_to_swap                                                                                       //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {tokens_to_swap}                                                                                                                                                         tokens_to_swap(                                                                               File "amm/contract.py", line 251
        dup                                                                                                          // load to_swap#0 from l-stack (copy)                       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,to_swap#0                                                                                                                                                      to_swap                                                                                       File "amm/contract.py", line 251
        int 0                                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,to_swap#0,0                                                                                                                                                    0                                                                                             File "amm/contract.py", line 254
        >                                                                                                            //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,{>}                                                                                                                                                            to_swap > 0, "send amount too low"                                                            File "amm/contract.py", line 254
        assert // send amount too low                                                                                //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0                                                                                                                                                                assert to_swap > 0, "send amount too low"                                                     File "amm/contract.py", line 254
        txn Sender                                                                                                   //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,{txn}                                                                                                                                                          Transaction.sender()                                                                          File "amm/contract.py", line 256
        frame_dig 1                                                                                                  // load out_asset#0 from f-stack                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,tmp%22#0,out_asset#0                                                                                                                                           out_asset                                                                                     File "amm/contract.py", line 243
        uncover 2                                                                                                    // load to_swap#0 from l-stack (no copy)                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%22#0,out_asset#0,to_swap#0                                                                                                                                           to_swap                                                                                       File "amm/contract.py", line 251
        callsub do_asset_transfer                                                                                    //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          do_asset_transfer(receiver=Transaction.sender(), asset=out_asset, amount=to_swap)             File "amm/contract.py", line 256
        callsub _update_ratio                                                                                        //                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                          self._update_ratio()                                                                          File "amm/contract.py", line 257
        retsub                                                                                                       //


// examples.amm.contract.tokens_to_swap(in_amount#0: uint64, in_supply#0: uint64, out_supply#0: uint64) -> uint64:
tokens_to_swap:
        proto 3 1                                                                                                    //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 |                                                                                                                                                                                                   def tokens_to_swap(*, in_amount: UInt64, in_supply: UInt64, out_supply: UInt64) -> UInt64:    File "amm/contract.py", line 360

tokens_to_swap_block@0:
        frame_dig -2                                                                                                 // load in_supply#0 from parameters                         (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0                                                                                                                                                                                       in_supply: UInt64                                                                             File "amm/contract.py", line 360
        frame_dig -3                                                                                                 // load in_amount#0 from parameters                         (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0,in_amount#0                                                                                                                                                                           in_amount: UInt64                                                                             File "amm/contract.py", line 360
        -                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | {-}                                                                                                                                                                                               in_supply - in_amount                                                                         File "amm/contract.py", line 361
        int 1000                                                                                                     //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%0#0,1000                                                                                                                                                                                      SCALE                                                                                         File "amm/contract.py", line 361
        *                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | {*}                                                                                                                                                                                               SCALE * (in_supply - in_amount)                                                               File "amm/contract.py", line 361
        frame_dig -3                                                                                                 // load in_amount#0 from parameters                         (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0                                                                                                                                                                               in_amount: UInt64                                                                             File "amm/contract.py", line 360
        int 995                                                                                                      //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0,995                                                                                                                                                                           FACTOR                                                                                        File "amm/contract.py", line 361
        *                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,{*}                                                                                                                                                                                       in_amount * FACTOR                                                                            File "amm/contract.py", line 361
        +                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | {+}                                                                                                                                                                                               SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                        File "amm/contract.py", line 361
        frame_dig -3                                                                                                 // load in_amount#0 from parameters                         (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,in_amount#0                                                                                                                                                                            in_amount: UInt64                                                                             File "amm/contract.py", line 360
        int 995                                                                                                      //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,in_amount#0,995                                                                                                                                                                        FACTOR                                                                                        File "amm/contract.py", line 362
        *                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,{*}                                                                                                                                                                                    in_amount * FACTOR                                                                            File "amm/contract.py", line 362
        frame_dig -1                                                                                                 // load out_supply#0 from parameters                        (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%3#0,out_supply#0                                                                                                                                                                   out_supply: UInt64                                                                            File "amm/contract.py", line 360
        *                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,{*}                                                                                                                                                                                    in_amount * FACTOR * out_supply                                                               File "amm/contract.py", line 362
        swap                                                                                                         // load in_total#0 from l-stack (no copy)                   (𝕡) in_amount#0,in_supply#0,out_supply#0 | out_total#0,in_total#0                                                                                                                                                                            in_total                                                                                      File "amm/contract.py", line 361
        /                                                                                                            //                                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | {/}                                                                                                                                                                                               out_total // in_total                                                                         File "amm/contract.py", line 363
        retsub                                                                                                       //                                                          tmp%4#0                                                                                                                                                                                                                                      return out_total // in_total                                                                  File "amm/contract.py", line 363


// examples.amm.contract.ConstantProductAMM.create() -> void:
create:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                       def create(self) -> None:                                                                     File "amm/contract.py", line 48

create_block@0:
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.__init__() -> void:
__init__:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                       def __init__(self) -> None:                                                                   File "amm/contract.py", line 32

__init___block@0:
        byte "asset_a"                                                                                               //                                                          "asset_a"                                                                                                                                                                                                                                    self.asset_a                                                                                  File "amm/contract.py", line 37
        int 0                                                                                                        //                                                          "asset_a",0                                                                                                                                                                                                                                  0                                                                                             File "amm/contract.py", line 37
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                       self.asset_a = Asset(0)                                                                       File "amm/contract.py", line 37
        byte "asset_b"                                                                                               //                                                          "asset_b"                                                                                                                                                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 39
        int 0                                                                                                        //                                                          "asset_b",0                                                                                                                                                                                                                                  0                                                                                             File "amm/contract.py", line 39
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                       self.asset_b = Asset(0)                                                                       File "amm/contract.py", line 39
        txn Sender                                                                                                   //                                                          {txn}                                                                                                                                                                                                                                        Transaction.sender()                                                                          File "amm/contract.py", line 41
        byte "governor"                                                                                              //                                                          new_state_value%0#0,"governor"                                                                                                                                                                                                               self.governor                                                                                 File "amm/contract.py", line 41
        swap                                                                                                         // load new_state_value%0#0 from l-stack (no copy)          "governor",new_state_value%0#0                                                                                                                                                                                                               Transaction.sender()                                                                          File "amm/contract.py", line 41
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                       self.governor = Transaction.sender()                                                          File "amm/contract.py", line 41
        byte "pool_token"                                                                                            //                                                          "pool_token"                                                                                                                                                                                                                                 self.pool_token                                                                               File "amm/contract.py", line 43
        int 0                                                                                                        //                                                          "pool_token",0                                                                                                                                                                                                                               0                                                                                             File "amm/contract.py", line 43
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                       self.pool_token = Asset(0)                                                                    File "amm/contract.py", line 43
        byte "ratio"                                                                                                 //                                                          "ratio"                                                                                                                                                                                                                                      self.ratio                                                                                    File "amm/contract.py", line 45
        int 0                                                                                                        //                                                          "ratio",0                                                                                                                                                                                                                                    0                                                                                             File "amm/contract.py", line 45
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                       self.ratio = UInt64(0)                                                                        File "amm/contract.py", line 45
        retsub                                                                                                       //

