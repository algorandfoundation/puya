// Op                                                                                                                // Op Description                                              Stack (out)                                                                                                                                                                                                                   X stack           Source code                                                                                   Source line

#pragma version 10

// examples.amm.contract.ConstantProductAMM.approval_program() -> uint64:
main_block@0:
        txn ApplicationID                                                                                            //                                                             {txn}
        bnz main_entrypoint@2                                                                                        //
        // Implicit fall through to main_on_create@1                                                                 //

main_on_create@1:
        callsub __init__                                                                                             //
        // Implicit fall through to main_entrypoint@2                                                                //

main_entrypoint@2:
        txn NumAppArgs                                                                                               //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        bz main_bare_routing@11                                                                                      //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        // Implicit fall through to main_abi_routing@3                                                               //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30

main_abi_routing@3:
        txna ApplicationArgs 0                                                                                       //                                                             {txna}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        method "set_governor(account)void"                                                                           //                                                             tmp%2#0,method<"set_governor(account)void">                                                                                                                                                                                                     arc4.abimethod()                                                                              File "amm/contract.py", line 46
        method "bootstrap(pay,asset,asset)uint64"                                                                    //                                                             tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">                                                                                                                                                          arc4.abimethod()                                                                              File "amm/contract.py", line 52
        method "mint(axfer,axfer,asset,asset,asset)void"                                                             //                                                             tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">                                                                                                        arc4.abimethod(                                                                               File "amm/contract.py", line 84
        method "burn(axfer,asset,asset,asset)void"                                                                   //                                                             tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">                                                            arc4.abimethod(                                                                               File "amm/contract.py", line 150
        method "swap(axfer,asset,asset)void"                                                                         //                                                             tmp%2#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">                      arc4.abimethod(                                                                               File "amm/contract.py", line 207
        uncover 5                                                                                                    // load tmp%2#0 from l-stack (no copy)                         method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">,tmp%2#0                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        match main_set_governor_route@4 main_bootstrap_route@5 main_mint_route@6 main_burn_route@7 main_swap_route@8 //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        b main_switch_case_default@9                                                                                 //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30

main_set_governor_route@4:
        txn OnCompletion                                                                                             //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod()                                                                              File "amm/contract.py", line 46
        !                                                                                                            //                                                             {!}                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 46
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 46
        txn ApplicationID                                                                                            //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod()                                                                              File "amm/contract.py", line 46
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 46
        txna ApplicationArgs 1                                                                                       //                                                             {txna}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             {btoi}                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Accounts                                                                                               //                                                             {txnas}                                                                                                                                                                                                                                         class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        callsub set_governor                                                                                         //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 46
        int 1                                                                                                        //                                                             1                                                                                                                                                                                                                                               arc4.abimethod()                                                                              File "amm/contract.py", line 46
        return                                                                                                       //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 46

main_bootstrap_route@5:
        txn OnCompletion                                                                                             //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod()                                                                              File "amm/contract.py", line 52
        !                                                                                                            //                                                             {!}                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52
        txn ApplicationID                                                                                            //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod()                                                                              File "amm/contract.py", line 52
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52
        txn GroupIndex                                                                                               //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int 1                                                                                                        //                                                             tmp%14#0,1                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        -                                                                                                            //                                                             {-}                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                      awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        gtxns TypeEnum                                                                                               //                                                             awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int pay                                                                                                      //                                                             awst_tmp%15#0,tmp%16#0,pay                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        ==                                                                                                           //                                                             awst_tmp%15#0,{==}                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        assert // transaction type is pay                                                                            //                                                             awst_tmp%15#0                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 1                                                                                       //                                                             awst_tmp%15#0,{txna}                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,{btoi}                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,{txnas}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 2                                                                                       //                                                             awst_tmp%15#0,tmp%20#0,{txna}                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,tmp%20#0,{btoi}                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,tmp%20#0,{txnas}                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        callsub bootstrap                                                                                            //                                                             {bootstrap}                                                                                                                                                                                                                                     arc4.abimethod()                                                                              File "amm/contract.py", line 52
        byte 0x151f7c75                                                                                              //                                                             tmp%24#0,0x151f7c75                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52
        swap                                                                                                         // load tmp%24#0 from l-stack (no copy)                        0x151f7c75,tmp%24#0                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52
        concat                                                                                                       //                                                             {concat}                                                                                                                                                                                                                                        arc4.abimethod()                                                                              File "amm/contract.py", line 52
        log                                                                                                          //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52
        int 1                                                                                                        //                                                             1                                                                                                                                                                                                                                               arc4.abimethod()                                                                              File "amm/contract.py", line 52
        return                                                                                                       //                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                              File "amm/contract.py", line 52

main_mint_route@6:
        txn OnCompletion                                                                                             //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod(                                                                               File "amm/contract.py", line 84
        !                                                                                                            //                                                             {!}                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 84
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 84
        txn ApplicationID                                                                                            //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod(                                                                               File "amm/contract.py", line 84
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 84
        txn GroupIndex                                                                                               //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int 2                                                                                                        //                                                             tmp%31#0,2                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        -                                                                                                            //                                                             {-}                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        dup                                                                                                          // load awst_tmp%32#0 from l-stack (copy)                      awst_tmp%32#0,awst_tmp%32#0                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        gtxns TypeEnum                                                                                               //                                                             awst_tmp%32#0,{gtxns}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int axfer                                                                                                    //                                                             awst_tmp%32#0,tmp%33#0,axfer                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        ==                                                                                                           //                                                             awst_tmp%32#0,{==}                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        assert // transaction type is axfer                                                                          //                                                             awst_tmp%32#0                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txn GroupIndex                                                                                               //                                                             awst_tmp%32#0,{txn}                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int 1                                                                                                        //                                                             awst_tmp%32#0,tmp%37#0,1                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        -                                                                                                            //                                                             awst_tmp%32#0,{-}                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                      awst_tmp%32#0,awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        gtxns TypeEnum                                                                                               //                                                             awst_tmp%32#0,awst_tmp%15#0,{gtxns}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int axfer                                                                                                    //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%38#0,axfer                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        ==                                                                                                           //                                                             awst_tmp%32#0,awst_tmp%15#0,{==}                                                                                                                                                                                                                class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        assert // transaction type is axfer                                                                          //                                                             awst_tmp%32#0,awst_tmp%15#0                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 1                                                                                       //                                                             awst_tmp%32#0,awst_tmp%15#0,{txna}                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%32#0,awst_tmp%15#0,{btoi}                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%32#0,awst_tmp%15#0,{txnas}                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 2                                                                                       //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,{txna}                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,{btoi}                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,{txnas}                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 3                                                                                       //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,{txna}                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,{btoi}                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%32#0,awst_tmp%15#0,tmp%42#0,tmp%45#0,{txnas}                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        callsub mint                                                                                                 //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 84
        int 1                                                                                                        //                                                             1                                                                                                                                                                                                                                               arc4.abimethod(                                                                               File "amm/contract.py", line 84
        return                                                                                                       //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 84

main_burn_route@7:
        txn OnCompletion                                                                                             //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod(                                                                               File "amm/contract.py", line 150
        !                                                                                                            //                                                             {!}                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 150
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 150
        txn ApplicationID                                                                                            //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod(                                                                               File "amm/contract.py", line 150
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 150
        txn GroupIndex                                                                                               //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int 1                                                                                                        //                                                             tmp%54#0,1                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        -                                                                                                            //                                                             {-}                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                      awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        gtxns TypeEnum                                                                                               //                                                             awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int axfer                                                                                                    //                                                             awst_tmp%15#0,tmp%55#0,axfer                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        ==                                                                                                           //                                                             awst_tmp%15#0,{==}                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        assert // transaction type is axfer                                                                          //                                                             awst_tmp%15#0                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 1                                                                                       //                                                             awst_tmp%15#0,{txna}                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,{btoi}                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,{txnas}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 2                                                                                       //                                                             awst_tmp%15#0,tmp%59#0,{txna}                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,tmp%59#0,{btoi}                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,tmp%59#0,{txnas}                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 3                                                                                       //                                                             awst_tmp%15#0,tmp%59#0,tmp%62#0,{txna}                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,tmp%59#0,tmp%62#0,{btoi}                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,tmp%59#0,tmp%62#0,{txnas}                                                                                                                                                                                                         class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        callsub burn                                                                                                 //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 150
        int 1                                                                                                        //                                                             1                                                                                                                                                                                                                                               arc4.abimethod(                                                                               File "amm/contract.py", line 150
        return                                                                                                       //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 150

main_swap_route@8:
        txn OnCompletion                                                                                             //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod(                                                                               File "amm/contract.py", line 207
        !                                                                                                            //                                                             {!}                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 207
        assert // OnCompletion is NoOp                                                                               //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 207
        txn ApplicationID                                                                                            //                                                             {txn}                                                                                                                                                                                                                                           arc4.abimethod(                                                                               File "amm/contract.py", line 207
        assert // is not creating                                                                                    //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 207
        txn GroupIndex                                                                                               //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int 1                                                                                                        //                                                             tmp%71#0,1                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        -                                                                                                            //                                                             {-}                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        dup                                                                                                          // load awst_tmp%15#0 from l-stack (copy)                      awst_tmp%15#0,awst_tmp%15#0                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        gtxns TypeEnum                                                                                               //                                                             awst_tmp%15#0,{gtxns}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int axfer                                                                                                    //                                                             awst_tmp%15#0,tmp%72#0,axfer                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        ==                                                                                                           //                                                             awst_tmp%15#0,{==}                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        assert // transaction type is axfer                                                                          //                                                             awst_tmp%15#0                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 1                                                                                       //                                                             awst_tmp%15#0,{txna}                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,{btoi}                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,{txnas}                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txna ApplicationArgs 2                                                                                       //                                                             awst_tmp%15#0,tmp%76#0,{txna}                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        btoi                                                                                                         //                                                             awst_tmp%15#0,tmp%76#0,{btoi}                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        txnas Assets                                                                                                 //                                                             awst_tmp%15#0,tmp%76#0,{txnas}                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        callsub swap                                                                                                 //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 207
        int 1                                                                                                        //                                                             1                                                                                                                                                                                                                                               arc4.abimethod(                                                                               File "amm/contract.py", line 207
        return                                                                                                       //                                                                                                                                                                                                                                                                                                             arc4.abimethod(                                                                               File "amm/contract.py", line 207

main_switch_case_default@9:
        err // reject transaction                                                                                    //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30

main_bare_routing@11:
        txn OnCompletion                                                                                             //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        bnz main_reject_bare_on_completion@13                                                                        //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        // Implicit fall through to main_create@12                                                                   //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30

main_create@12:
        txn ApplicationID                                                                                            //                                                             {txn}                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        !                                                                                                            //                                                             {!}                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        assert // is creating                                                                                        //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        int 1                                                                                                        //                                                             1                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30
        return                                                                                                       //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30

main_reject_bare_on_completion@13:
        err // reject transaction                                                                                    //                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                       File "amm/contract.py", line 30


// examples.amm.contract.ConstantProductAMM.set_governor(new_governor#0: bytes) -> void:
set_governor:
        proto 1 0                                                                                                    //                                                             (𝕡) new_governor#0 |                                                                                                                                                                                                                            def set_governor(self, new_governor: Account) -> None:                                        File "amm/contract.py", line 47

set_governor_block@0:
        callsub _check_is_governor                                                                                   //                                                             (𝕡) new_governor#0 |                                                                                                                                                                                                                            self._check_is_governor()                                                                     File "amm/contract.py", line 49
        byte "governor"                                                                                              //                                                             (𝕡) new_governor#0 | "governor"                                                                                                                                                                                                                 self.governor                                                                                 File "amm/contract.py", line 50
        frame_dig -1                                                                                                 // load new_governor#0 from parameters                         (𝕡) new_governor#0 | "governor",new_governor#0                                                                                                                                                                                                  new_governor: Account                                                                         File "amm/contract.py", line 47
        app_global_put                                                                                               //                                                             (𝕡) new_governor#0 |                                                                                                                                                                                                                            self.governor = new_governor                                                                  File "amm/contract.py", line 50
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
_check_is_governor:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                             def _check_is_governor(self) -> None:                                                         File "amm/contract.py", line 266

_check_is_governor_block@0:
        txn Sender                                                                                                   //                                                             {txn}                                                                                                                                                                                                                                           Transaction.sender()                                                                          File "amm/contract.py", line 268
        int 0                                                                                                        //                                                             tmp%0#0,0                                                                                                                                                                                                                                       self.governor                                                                                 File "amm/contract.py", line 268
        byte "governor"                                                                                              //                                                             tmp%0#0,0,"governor"                                                                                                                                                                                                                            self.governor                                                                                 File "amm/contract.py", line 268
        app_global_get_ex                                                                                            //                                                             tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                             self.governor                                                                                 File "amm/contract.py", line 268
        assert // check value exists                                                                                 //                                                             tmp%0#0,app_global_get_ex_value%1#0                                                                                                                                                                                                             self.governor                                                                                 File "amm/contract.py", line 268
        ==                                                                                                           //                                                             {==}                                                                                                                                                                                                                                            Transaction.sender() == self.governor                                                         File "amm/contract.py", line 268
        assert // Only the account set in global_state.governor may call this method                                 //                                                                                                                                                                                                                                                                                                             assert (                                                                                      File "amm/contract.py", line 267
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.bootstrap(seed#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> bytes:
bootstrap:
        proto 3 1                                                                                                    //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                def bootstrap(self, seed: PaymentTransaction, a_asset: Asset, b_asset: Asset) -> arc4.UInt64: File "amm/contract.py", line 53

bootstrap_block@0:
        int 0                                                                                                        //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                              self.pool_token                                                                               File "amm/contract.py", line 69
        byte "pool_token"                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                 self.pool_token                                                                               File "amm/contract.py", line 69
        app_global_get_ex                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                    self.pool_token                                                                               File "amm/contract.py", line 69
        assert // check value exists                                                                                 //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                                    self.pool_token                                                                               File "amm/contract.py", line 69
        !                                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {!}                                                                                                                                                                                                            not self.pool_token                                                                           File "amm/contract.py", line 69
        assert // application has already been bootstrapped                                                          //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                assert not self.pool_token, "application has already been bootstrapped"                       File "amm/contract.py", line 69
        callsub _check_is_governor                                                                                   //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                self._check_is_governor()                                                                     File "amm/contract.py", line 70
        global GroupSize                                                                                             //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {global}                                                                                                                                                                                                       Global.group_size()                                                                           File "amm/contract.py", line 71
        int 2                                                                                                        //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0,2                                                                                                                                                                                                      2                                                                                             File "amm/contract.py", line 71
        ==                                                                                                           //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                           Global.group_size() == 2, "group size not 2"                                                  File "amm/contract.py", line 71
        assert // group size not 2                                                                                   //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                assert Global.group_size() == 2, "group size not 2"                                           File "amm/contract.py", line 71
        frame_dig -3                                                                                                 // load seed#0 from parameters                                 (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                         seed: PaymentTransaction                                                                      File "amm/contract.py", line 53
        gtxns Receiver                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                        seed.receiver                                                                                 File "amm/contract.py", line 72
        global CurrentApplicationAddress                                                                             //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0,{global}                                                                                                                                                                                               Global.current_application_address()                                                          File "amm/contract.py", line 72
        ==                                                                                                           //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                           seed.receiver == Global.current_application_address(), "receiver not app address"             File "amm/contract.py", line 72
        assert // receiver not app address                                                                           //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                assert seed.receiver == Global.current_application_address(), "receiver not app address"      File "amm/contract.py", line 72
        frame_dig -3                                                                                                 // load seed#0 from parameters                                 (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                         seed: PaymentTransaction                                                                      File "amm/contract.py", line 53
        gtxns Amount                                                                                                 //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                        seed.amount                                                                                   File "amm/contract.py", line 74
        int 300000                                                                                                   //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0,300000                                                                                                                                                                                                 300_000                                                                                       File "amm/contract.py", line 74
        >=                                                                                                           //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {>=}                                                                                                                                                                                                           seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                 File "amm/contract.py", line 74
        assert // amount minimum not met                                                                             //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                assert seed.amount >= 300_000, "amount minimum not met"                                       File "amm/contract.py", line 74
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                              (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0                                                                                                                                                                                                      a_asset: Asset                                                                                File "amm/contract.py", line 53
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                              (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0,b_asset#0                                                                                                                                                                                            b_asset: Asset                                                                                File "amm/contract.py", line 53
        <                                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {<}                                                                                                                                                                                                            a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"                      File "amm/contract.py", line 75
        assert // asset a must be less than asset b                                                                  //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                assert a_asset.asset_id < b_asset.asset_id, "asset a must be less than asset b"               File "amm/contract.py", line 75
        byte "asset_a"                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a"                                                                                                                                                                                                      self.asset_a                                                                                  File "amm/contract.py", line 76
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                              (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a",a_asset#0                                                                                                                                                                                            a_asset: Asset                                                                                File "amm/contract.py", line 53
        app_global_put                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                self.asset_a = a_asset                                                                        File "amm/contract.py", line 76
        byte "asset_b"                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b"                                                                                                                                                                                                      self.asset_b                                                                                  File "amm/contract.py", line 77
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                              (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b",b_asset#0                                                                                                                                                                                            b_asset: Asset                                                                                File "amm/contract.py", line 53
        app_global_put                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                self.asset_b = b_asset                                                                        File "amm/contract.py", line 77
        callsub _create_pool_token                                                                                   //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {_create_pool_token}                                                                                                                                                                                           self._create_pool_token()                                                                     File "amm/contract.py", line 78
        byte "pool_token"                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | new_state_value%11#0,"pool_token"                                                                                                                                                                              self.pool_token                                                                               File "amm/contract.py", line 78
        swap                                                                                                         // load new_state_value%11#0 from l-stack (no copy)            (𝕡) seed#0,a_asset#0,b_asset#0 | "pool_token",new_state_value%11#0                                                                                                                                                                              self._create_pool_token()                                                                     File "amm/contract.py", line 78
        app_global_put                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                self.pool_token = self._create_pool_token()                                                   File "amm/contract.py", line 78
        int 0                                                                                                        //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 80
        byte "asset_a"                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                    self.asset_a                                                                                  File "amm/contract.py", line 80
        app_global_get_ex                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                    self.asset_a                                                                                  File "amm/contract.py", line 80
        assert // check value exists                                                                                 //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%12#0                                                                                                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 80
        callsub _do_opt_in                                                                                           //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                self._do_opt_in(self.asset_a)                                                                 File "amm/contract.py", line 80
        int 0                                                                                                        //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 81
        byte "asset_b"                                                                                               //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 81
        app_global_get_ex                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 81
        assert // check value exists                                                                                 //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%14#0                                                                                                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 81
        callsub _do_opt_in                                                                                           //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                self._do_opt_in(self.asset_b)                                                                 File "amm/contract.py", line 81
        int 0                                                                                                        //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                              self.pool_token                                                                               File "amm/contract.py", line 82
        byte "pool_token"                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                 self.pool_token                                                                               File "amm/contract.py", line 82
        app_global_get_ex                                                                                            //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                    self.pool_token                                                                               File "amm/contract.py", line 82
        assert // check value exists                                                                                 //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | app_global_get_ex_value%16#0                                                                                                                                                                                   self.pool_token                                                                               File "amm/contract.py", line 82
        itob                                                                                                         //                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | {itob}                                                                                                                                                                                                         arc4.UInt64(self.pool_token.asset_id)                                                         File "amm/contract.py", line 82
        retsub                                                                                                       //                                                             val_as_bytes%18#0                                                                                                                                                                                                                               return arc4.UInt64(self.pool_token.asset_id)                                                  File "amm/contract.py", line 82


// examples.amm.contract.ConstantProductAMM._create_pool_token() -> uint64:
_create_pool_token:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                             def _create_pool_token(self) -> Asset:                                                        File "amm/contract.py", line 272

_create_pool_token_block@0:
        itxn_begin                                                                                                   //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.begin()                                                                File "amm/contract.py", line 273
        int acfg                                                                                                     //                                                             acfg                                                                                                                                                                                                                                            TransactionType.AssetConfig                                                                   File "amm/contract.py", line 274
        itxn_field TypeEnum                                                                                          //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_type_enum(TransactionType.AssetConfig)                             File "amm/contract.py", line 274
        int 0                                                                                                        //                                                             0                                                                                                                                                                                                                                               self.asset_a                                                                                  File "amm/contract.py", line 276
        byte "asset_a"                                                                                               //                                                             0,"asset_a"                                                                                                                                                                                                                                     self.asset_a                                                                                  File "amm/contract.py", line 276
        app_global_get_ex                                                                                            //                                                             {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                     self.asset_a                                                                                  File "amm/contract.py", line 276
        assert // check value exists                                                                                 //                                                             app_global_get_ex_value%2#0                                                                                                                                                                                                                     self.asset_a                                                                                  File "amm/contract.py", line 276
        asset_params_get AssetUnitName                                                                               //                                                             {asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                                       self.asset_a.unit_name                                                                        File "amm/contract.py", line 276
        assert // asset exists                                                                                       //                                                             maybe_value%0#0                                                                                                                                                                                                                                 self.asset_a.unit_name                                                                        File "amm/contract.py", line 276
        byte "DPT-"                                                                                                  //                                                             maybe_value%0#0,"DPT-"                                                                                                                                                                                                                          b"DPT-"                                                                                       File "amm/contract.py", line 276
        swap                                                                                                         // load maybe_value%0#0 from l-stack (no copy)                 "DPT-",maybe_value%0#0                                                                                                                                                                                                                          self.asset_a.unit_name                                                                        File "amm/contract.py", line 276
        concat                                                                                                       //                                                             {concat}                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name                                                              File "amm/contract.py", line 276
        byte "-"                                                                                                     //                                                             tmp%4#0,"-"                                                                                                                                                                                                                                     b"-"                                                                                          File "amm/contract.py", line 276
        concat                                                                                                       //                                                             {concat}                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name + b"-"                                                       File "amm/contract.py", line 276
        int 0                                                                                                        //                                                             tmp%5#0,0                                                                                                                                                                                                                                       self.asset_b                                                                                  File "amm/contract.py", line 276
        byte "asset_b"                                                                                               //                                                             tmp%5#0,0,"asset_b"                                                                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 276
        app_global_get_ex                                                                                            //                                                             tmp%5#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 276
        assert // check value exists                                                                                 //                                                             tmp%5#0,app_global_get_ex_value%8#0                                                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 276
        asset_params_get AssetUnitName                                                                               //                                                             tmp%5#0,{asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                               self.asset_b.unit_name                                                                        File "amm/contract.py", line 276
        assert // asset exists                                                                                       //                                                             tmp%5#0,maybe_value%6#0                                                                                                                                                                                                                         self.asset_b.unit_name                                                                        File "amm/contract.py", line 276
        concat                                                                                                       //                                                             {concat}                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                              File "amm/contract.py", line 276
        itxn_field ConfigAssetName                                                                                   //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_config_asset_name(                                                 File "amm/contract.py", line 275
        byte "dpt"                                                                                                   //                                                             "dpt"                                                                                                                                                                                                                                           b"dpt"                                                                                        File "amm/contract.py", line 278
        itxn_field ConfigAssetUnitName                                                                               //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_config_asset_unit_name(b"dpt")                                     File "amm/contract.py", line 278
        int 10000000000                                                                                              //                                                             10000000000                                                                                                                                                                                                                                     TOTAL_SUPPLY                                                                                  File "amm/contract.py", line 279
        itxn_field ConfigAssetTotal                                                                                  //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_config_asset_total(TOTAL_SUPPLY)                                   File "amm/contract.py", line 279
        intile "amm/contract.py", line 280
        itxn_field ConfigAssetDecimals                                                                               //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_config_asset_decimals(3)                                           File "amm/contract.py", line 280
        global CurrentApplicationAddress                                                                             //                                                             {global}                                                                                                                                                                                                                                        Global.current_application_address()                                                          File "amm/contract.py", line 281
        itxn_field ConfigAssetManager                                                                                //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_config_asset_manager(Global.current_application_address())         File "amm/contract.py", line 281
        global CurrentApplicationAddress                                                                             //                                                             {global}                                                                                                                                                                                                                                        Global.current_application_address()                                                          File "amm/contract.py", line 282
        itxn_field ConfigAssetReserve                                                                                //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_config_asset_reserve(Global.current_application_address())         File "amm/contract.py", line 282
        intile "amm/contract.py", line 283
        itxn_field Fee                                                                                               //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.set_fee(0)                                                             File "amm/contract.py", line 283
        itxn_submit                                                                                                  //                                                                                                                                                                                                                                                                                                             CreateInnerTransaction.submit()                                                               File "amm/contract.py", line 284
        itxn CreatedAssetID                                                                                          //                                                             {itxn}                                                                                                                                                                                                                                          InnerTransaction.created_asset_id()                                                           File "amm/contract.py", line 286
        retsub                                                                                                       //                                                             tmp%13#0                                                                                                                                                                                                                                        return Asset(InnerTransaction.created_asset_id())                                             File "amm/contract.py", line 286


// examples.amm.contract.ConstantProductAMM._do_opt_in(asset#0: uint64) -> void:
_do_opt_in:
        proto 1 0                                                                                                    //                                                             (𝕡) asset#0 |                                                                                                                                                                                                                                   def _do_opt_in(self, asset: Asset) -> None:                                                   File "amm/contract.py", line 289

_do_opt_in_block@0:
        global CurrentApplicationAddress                                                                             //                                                             (𝕡) asset#0 | {global}                                                                                                                                                                                                                          Global.current_application_address()                                                          File "amm/contract.py", line 291
        frame_dig -1                                                                                                 // load asset#0 from parameters                                (𝕡) asset#0 | tmp%0#0,asset#0                                                                                                                                                                                                                   asset: Asset                                                                                  File "amm/contract.py", line 289
        int 0                                                                                                        //                                                             (𝕡) asset#0 | tmp%0#0,asset#0,0                                                                                                                                                                                                                 0                                                                                             File "amm/contract.py", line 293
        callsub do_asset_transfer                                                                                    //                                                             (𝕡) asset#0 |                                                                                                                                                                                                                                   do_asset_transfer(                                                                            File "amm/contract.py", line 290
        retsub                                                                                                       //


// examples.amm.contract.do_asset_transfer(receiver#0: bytes, asset#0: uint64, amount#0: uint64) -> void:
do_asset_transfer:
        proto 3 0                                                                                                    //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               def do_asset_transfer(*, receiver: Account, asset: Asset, amount: UInt64) -> None:            File "amm/contract.py", line 362

do_asset_transfer_block@0:
        itxn_begin                                                                                                   //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.begin()                                                                File "amm/contract.py", line 363
        int axfer                                                                                                    //                                                             (𝕡) receiver#0,asset#0,amount#0 | axfer                                                                                                                                                                                                         TransactionType.AssetTransfer                                                                 File "amm/contract.py", line 364
        itxn_field TypeEnum                                                                                          //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.set_type_enum(TransactionType.AssetTransfer)                           File "amm/contract.py", line 364
        frame_dig -2                                                                                                 // load asset#0 from parameters                                (𝕡) receiver#0,asset#0,amount#0 | asset#0                                                                                                                                                                                                       asset: Asset                                                                                  File "amm/contract.py", line 362
        itxn_field XferAsset                                                                                         //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.set_xfer_asset(asset.asset_id)                                         File "amm/contract.py", line 365
        frame_dig -1                                                                                                 // load amount#0 from parameters                               (𝕡) receiver#0,asset#0,amount#0 | amount#0                                                                                                                                                                                                      amount: UInt64                                                                                File "amm/contract.py", line 362
        itxn_field AssetAmount                                                                                       //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.set_asset_amount(amount)                                               File "amm/contract.py", line 366
        frame_dig -3                                                                                                 // load receiver#0 from parameters                             (𝕡) receiver#0,asset#0,amount#0 | receiver#0                                                                                                                                                                                                    receiver: Account                                                                             File "amm/contract.py", line 362
        itxn_field AssetReceiver                                                                                     //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.set_asset_receiver(receiver)                                           File "amm/contract.py", line 367
        int 0                                                                                                        //                                                             (𝕡) receiver#0,asset#0,amount#0 | 0                                                                                                                                                                                                             0                                                                                             File "amm/contract.py", line 368
        itxn_field Fee                                                                                               //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.set_fee(0)                                                             File "amm/contract.py", line 368
        itxn_submit                                                                                                  //                                                             (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                               CreateInnerTransaction.submit()                                                               File "amm/contract.py", line 369
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.mint(a_xfer#0: uint64, b_xfer#0: uint64, pool_asset#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> void:
mint:
        proto 5 0                                                                                                    //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        def mint(                                                                                     File "amm/contract.py", line 91

mint_block@0:
        callsub _check_bootstrapped                                                                                  //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        self._check_bootstrapped()                                                                    File "amm/contract.py", line 114
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                      self.pool_token                                                                               File "amm/contract.py", line 117
        byte "pool_token"                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                         self.pool_token                                                                               File "amm/contract.py", line 117
        app_global_get_ex                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                            self.pool_token                                                                               File "amm/contract.py", line 117
        assert // check value exists                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                            self.pool_token                                                                               File "amm/contract.py", line 117
        frame_dig -3                                                                                                 // load pool_asset#0 from parameters                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,pool_asset#0                                                                                                                                               pool_asset: Asset                                                                             File "amm/contract.py", line 95
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   pool_asset == self.pool_token, "asset pool incorrect"                                         File "amm/contract.py", line 117
        assert // asset pool incorrect                                                                               //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert pool_asset == self.pool_token, "asset pool incorrect"                                  File "amm/contract.py", line 117
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                      self.asset_a                                                                                  File "amm/contract.py", line 118
        byte "asset_a"                                                                                               //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                            self.asset_a                                                                                  File "amm/contract.py", line 118
        app_global_get_ex                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                            self.asset_a                                                                                  File "amm/contract.py", line 118
        assert // check value exists                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                            self.asset_a                                                                                  File "amm/contract.py", line 118
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,a_asset#0                                                                                                                                                  a_asset: Asset                                                                                File "amm/contract.py", line 96
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   a_asset == self.asset_a, "asset a incorrect"                                                  File "amm/contract.py", line 118
        assert // asset a incorrect                                                                                  //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert a_asset == self.asset_a, "asset a incorrect"                                           File "amm/contract.py", line 118
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                      self.asset_b                                                                                  File "amm/contract.py", line 119
        byte "asset_b"                                                                                               //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                            self.asset_b                                                                                  File "amm/contract.py", line 119
        app_global_get_ex                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                            self.asset_b                                                                                  File "amm/contract.py", line 119
        assert // check value exists                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0                                                                                                                                                            self.asset_b                                                                                  File "amm/contract.py", line 119
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,b_asset#0                                                                                                                                                  b_asset: Asset                                                                                File "amm/contract.py", line 97
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   b_asset == self.asset_b, "asset b incorrect"                                                  File "amm/contract.py", line 119
        assert // asset b incorrect                                                                                  //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert b_asset == self.asset_b, "asset b incorrect"                                           File "amm/contract.py", line 119
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                               a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 93
        gtxns Sender                                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                a_xfer.sender                                                                                 File "amm/contract.py", line 120
        txn Sender                                                                                                   //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{txn}                                                                                                                                                                          Transaction.sender()                                                                          File "amm/contract.py", line 120
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   a_xfer.sender == Transaction.sender(), "sender invalid"                                       File "amm/contract.py", line 120
        assert // sender invalid                                                                                     //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert a_xfer.sender == Transaction.sender(), "sender invalid"                                File "amm/contract.py", line 120
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                               b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 94
        gtxns Sender                                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                b_xfer.sender                                                                                 File "amm/contract.py", line 121
        txn Sender                                                                                                   //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{txn}                                                                                                                                                                         Transaction.sender()                                                                          File "amm/contract.py", line 121
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   b_xfer.sender == Transaction.sender(), "sender invalid"                                       File "amm/contract.py", line 121
        assert // sender invalid                                                                                     //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert b_xfer.sender == Transaction.sender(), "sender invalid"                                File "amm/contract.py", line 121
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                               a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 93
        gtxns AssetReceiver                                                                                          //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                a_xfer.asset_receiver                                                                         File "amm/contract.py", line 125
        global CurrentApplicationAddress                                                                             //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%15#0,{global}                                                                                                                                                                      Global.current_application_address()                                                          File "amm/contract.py", line 125
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   a_xfer.asset_receiver == Global.current_application_address()                                 File "amm/contract.py", line 125
        assert // receiver not app address                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert (                                                                                      File "amm/contract.py", line 124
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                               a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 93
        gtxns XferAsset                                                                                              //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                a_xfer.xfer_asset                                                                             File "amm/contract.py", line 127
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,0                                                                                                                                                                             self.asset_a                                                                                  File "amm/contract.py", line 127
        byte "asset_a"                                                                                               //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,0,"asset_a"                                                                                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 127
        app_global_get_ex                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 127
        assert // check value exists                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,app_global_get_ex_value%19#0                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 127
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                        File "amm/contract.py", line 127
        assert // asset a incorrect                                                                                  //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                 File "amm/contract.py", line 127
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                               a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 93
        gtxns AssetAmount                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                a_xfer.asset_amount                                                                           File "amm/contract.py", line 128
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%22#0,0                                                                                                                                                                             0                                                                                             File "amm/contract.py", line 128
        >                                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {>}                                                                                                                                                                                    a_xfer.asset_amount > 0, "amount minimum not met"                                             File "amm/contract.py", line 128
        assert // amount minimum not met                                                                             //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert a_xfer.asset_amount > 0, "amount minimum not met"                                      File "amm/contract.py", line 128
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                               b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 94
        gtxns AssetReceiver                                                                                          //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                b_xfer.asset_receiver                                                                         File "amm/contract.py", line 132
        global CurrentApplicationAddress                                                                             //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%24#0,{global}                                                                                                                                                                      Global.current_application_address()                                                          File "amm/contract.py", line 132
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   b_xfer.asset_receiver == Global.current_application_address()                                 File "amm/contract.py", line 132
        assert // receiver not app address                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert (                                                                                      File "amm/contract.py", line 131
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                               b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 94
        gtxns XferAsset                                                                                              //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                b_xfer.xfer_asset                                                                             File "amm/contract.py", line 134
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,0                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 134
        byte "asset_b"                                                                                               //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,0,"asset_b"                                                                                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 134
        app_global_get_ex                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 134
        assert // check value exists                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%27#0,app_global_get_ex_value%28#0                                                                                                                                                  self.asset_b                                                                                  File "amm/contract.py", line 134
        ==                                                                                                           //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                   b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                        File "amm/contract.py", line 134
        assert // asset b incorrect                                                                                  //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                 File "amm/contract.py", line 134
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                               b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 94
        gtxns AssetAmount                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                b_xfer.asset_amount                                                                           File "amm/contract.py", line 135
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%31#0,0                                                                                                                                                                             0                                                                                             File "amm/contract.py", line 135
        >                                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {>}                                                                                                                                                                                    b_xfer.asset_amount > 0, "amount minimum not met"                                             File "amm/contract.py", line 135
        assert // amount minimum not met                                                                             //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        assert b_xfer.asset_amount > 0, "amount minimum not met"                                      File "amm/contract.py", line 135
        callsub _current_pool_balance                                                                                //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {_current_pool_balance}                                                                                                                                                                self._current_pool_balance()                                                                  File "amm/contract.py", line 138
        callsub _current_a_balance                                                                                   //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,{_current_a_balance}                                                                                                                                                          self._current_a_balance()                                                                     File "amm/contract.py", line 139
        callsub _current_b_balance                                                                                   //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,{_current_b_balance}                                                                                                                                                 self._current_b_balance()                                                                     File "amm/contract.py", line 140
        frame_dig -5                                                                                                 // load a_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,a_xfer#0                                                                                                                                                    a_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 93
        gtxns AssetAmount                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,{gtxns}                                                                                                                                                     a_xfer.asset_amount                                                                           File "amm/contract.py", line 141
        frame_dig -4                                                                                                 // load b_xfer#0 from parameters                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,tmp%36#0,b_xfer#0                                                                                                                                           b_xfer: AssetTransferTransaction                                                              File "amm/contract.py", line 94
        gtxns AssetAmount                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%33#0,tmp%34#0,tmp%35#0,tmp%36#0,{gtxns}                                                                                                                                            b_xfer.asset_amount                                                                           File "amm/contract.py", line 142
        callsub tokens_to_mint                                                                                       //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {tokens_to_mint}                                                                                                                                                                       tokens_to_mint(                                                                               File "amm/contract.py", line 137
        dup                                                                                                          // load to_mint#0 from l-stack (copy)                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0                                                                                                                                                                    to_mint                                                                                       File "amm/contract.py", line 137
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0,0                                                                                                                                                                  0                                                                                             File "amm/contract.py", line 144
        >                                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{>}                                                                                                                                                                          to_mint > 0, "send amount too low"                                                            File "amm/contract.py", line 144
        assert // send amount too low                                                                                //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0                                                                                                                                                                              assert to_mint > 0, "send amount too low"                                                     File "amm/contract.py", line 144
        txn Sender                                                                                                   //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{txn}                                                                                                                                                                        Transaction.sender()                                                                          File "amm/contract.py", line 147
        int 0                                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,0                                                                                                                                                                   self.pool_token                                                                               File "amm/contract.py", line 147
        byte "pool_token"                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,0,"pool_token"                                                                                                                                                      self.pool_token                                                                               File "amm/contract.py", line 147
        app_global_get_ex                                                                                            //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                         self.pool_token                                                                               File "amm/contract.py", line 147
        assert // check value exists                                                                                 //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%39#0,app_global_get_ex_value%40#0                                                                                                                                        self.pool_token                                                                               File "amm/contract.py", line 147
        uncover 2                                                                                                    // load to_mint#0 from l-stack (no copy)                       (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%39#0,app_global_get_ex_value%40#0,to_mint#0                                                                                                                                        to_mint                                                                                       File "amm/contract.py", line 137
        callsub do_asset_transfer                                                                                    //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        do_asset_transfer(receiver=Transaction.sender(), asset=self.pool_token, amount=to_mint)       File "amm/contract.py", line 147
        callsub _update_ratio                                                                                        //                                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                        self._update_ratio()                                                                          File "amm/contract.py", line 148
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_bootstrapped() -> void:
_check_bootstrapped:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                             def _check_bootstrapped(self) -> None:                                                        File "amm/contract.py", line 255

_check_bootstrapped_block@0:
        int 0                                                                                                        //                                                             0                                                                                                                                                                                                                                               self.pool_token                                                                               File "amm/contract.py", line 256
        byte "pool_token"                                                                                            //                                                             0,"pool_token"                                                                                                                                                                                                                                  self.pool_token                                                                               File "amm/contract.py", line 256
        app_global_get_ex                                                                                            //                                                             {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                     self.pool_token                                                                               File "amm/contract.py", line 256
        assert // check value exists                                                                                 //                                                             app_global_get_ex_value%0#0                                                                                                                                                                                                                     self.pool_token                                                                               File "amm/contract.py", line 256
        assert // bootstrap method needs to be called first                                                          //                                                                                                                                                                                                                                                                                                             assert self.pool_token, "bootstrap method needs to be called first"                           File "amm/contract.py", line 256
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
_current_pool_balance:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                             def _current_pool_balance(self) -> UInt64:                                                    File "amm/contract.py", line 297

_current_pool_balance_block@0:
        global CurrentApplicationAddress                                                                             //                                                             {global}                                                                                                                                                                                                                                        Global.current_application_address()                                                          File "amm/contract.py", line 298
        int 0                                                                                                        //                                                             tmp%2#0,0                                                                                                                                                                                                                                       self.pool_token                                                                               File "amm/contract.py", line 298
        byte "pool_token"                                                                                            //                                                             tmp%2#0,0,"pool_token"                                                                                                                                                                                                                          self.pool_token                                                                               File "amm/contract.py", line 298
        app_global_get_ex                                                                                            //                                                             tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                             self.pool_token                                                                               File "amm/contract.py", line 298
        assert // check value exists                                                                                 //                                                             tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                             self.pool_token                                                                               File "amm/contract.py", line 298
        asset_holding_get AssetBalance                                                                               //                                                             {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                     self.pool_token.balance(Global.current_application_address())                                 File "amm/contract.py", line 298
        assert // account opted into asset                                                                           //                                                             maybe_value%0#0                                                                                                                                                                                                                                 self.pool_token.balance(Global.current_application_address())                                 File "amm/contract.py", line 298
        retsub                                                                                                       //                                                             maybe_value%0#0                                                                                                                                                                                                                                 return self.pool_token.balance(Global.current_application_address())                          File "amm/contract.py", line 298


// examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
_current_a_balance:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                             def _current_a_balance(self) -> UInt64:                                                       File "amm/contract.py", line 301

_current_a_balance_block@0:
        global CurrentApplicationAddress                                                                             //                                                             {global}                                                                                                                                                                                                                                        Global.current_application_address()                                                          File "amm/contract.py", line 302
        int 0                                                                                                        //                                                             tmp%2#0,0                                                                                                                                                                                                                                       self.asset_a                                                                                  File "amm/contract.py", line 302
        byte "asset_a"                                                                                               //                                                             tmp%2#0,0,"asset_a"                                                                                                                                                                                                                             self.asset_a                                                                                  File "amm/contract.py", line 302
        app_global_get_ex                                                                                            //                                                             tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                             self.asset_a                                                                                  File "amm/contract.py", line 302
        assert // check value exists                                                                                 //                                                             tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                             self.asset_a                                                                                  File "amm/contract.py", line 302
        asset_holding_get AssetBalance                                                                               //                                                             {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                     self.asset_a.balance(Global.current_application_address())                                    File "amm/contract.py", line 302
        assert // account opted into asset                                                                           //                                                             maybe_value%0#0                                                                                                                                                                                                                                 self.asset_a.balance(Global.current_application_address())                                    File "amm/contract.py", line 302
        retsub                                                                                                       //                                                             maybe_value%0#0                                                                                                                                                                                                                                 return self.asset_a.balance(Global.current_application_address())                             File "amm/contract.py", line 302


// examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
_current_b_balance:
        proto 0 1                                                                                                    //                                                                                                                                                                                                                                                                                                             def _current_b_balance(self) -> UInt64:                                                       File "amm/contract.py", line 305

_current_b_balance_block@0:
        global CurrentApplicationAddress                                                                             //                                                             {global}                                                                                                                                                                                                                                        Global.current_application_address()                                                          File "amm/contract.py", line 306
        int 0                                                                                                        //                                                             tmp%2#0,0                                                                                                                                                                                                                                       self.asset_b                                                                                  File "amm/contract.py", line 306
        byte "asset_b"                                                                                               //                                                             tmp%2#0,0,"asset_b"                                                                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 306
        app_global_get_ex                                                                                            //                                                             tmp%2#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 306
        assert // check value exists                                                                                 //                                                             tmp%2#0,app_global_get_ex_value%3#0                                                                                                                                                                                                             self.asset_b                                                                                  File "amm/contract.py", line 306
        asset_holding_get AssetBalance                                                                               //                                                             {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                     self.asset_b.balance(Global.current_application_address())                                    File "amm/contract.py", line 306
        assert // account opted into asset                                                                           //                                                             maybe_value%0#0                                                                                                                                                                                                                                 self.asset_b.balance(Global.current_application_address())                                    File "amm/contract.py", line 306
        retsub                                                                                                       //                                                             maybe_value%0#0                                                                                                                                                                                                                                 return self.asset_b.balance(Global.current_application_address())                             File "amm/contract.py", line 306


// examples.amm.contract.tokens_to_mint(pool_balance#0: uint64, a_balance#0: uint64, b_balance#0: uint64, a_amount#0: uint64, b_amount#0: uint64) -> uint64:
tokens_to_mint:
        proto 5 1                                                                                                    //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 |                                                                                                                                                                              def tokens_to_mint(                                                                           File "amm/contract.py", line 328
        byte ""
        dup                                                                                                          // allocate 2 to stack                                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |

tokens_to_mint_block@0:
        frame_dig -4                                                                                                 // load a_balance#0 from parameters                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0                                                                                                                                        a_balance: UInt64                                                                             File "amm/contract.py", line 331
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0,a_amount#0                                                                                                                             a_amount: UInt64                                                                              File "amm/contract.py", line 333
        ==                                                                                                           //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                               a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 336
        bz tokens_to_mint_bool_false@3                                                                               //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                    a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 336
        // Implicit fall through to tokens_to_mint_and_contd@1                                                       //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                    a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 336

tokens_to_mint_and_contd@1:
        frame_dig -3                                                                                                 // load b_balance#0 from parameters                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0                                                                                                                                        b_balance: UInt64                                                                             File "amm/contract.py", line 332
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0,b_amount#0                                                                                                                             b_amount: UInt64                                                                              File "amm/contract.py", line 334
        ==                                                                                                           //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                               b_balance == b_amount                                                                         File "amm/contract.py", line 336
        bz tokens_to_mint_bool_false@3                                                                               //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                    a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 336
        // Implicit fall through to tokens_to_mint_bool_true@2                                                       //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                    a_balance == a_amount and b_balance == b_amount                                               File "amm/contract.py", line 336

tokens_to_mint_bool_true@2:
        int 1                                                                                                        //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 1
        b tokens_to_mint_bool_merge@4                                                                                //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |                                                                                                          is_initial_mint#0

tokens_to_mint_bool_false@3:
        int 0                                                                                                        //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 0
        // Implicit fall through to tokens_to_mint_bool_merge@4                                                      //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |                                                                                                          is_initial_mint#0

tokens_to_mint_bool_merge@4:
        bz tokens_to_mint_after_if_else@6                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                  is_initial_mint#0 if is_initial_mint:                                                                           File "amm/contract.py", line 337
        // Implicit fall through to tokens_to_mint_if_body@5                                                         //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                    if is_initial_mint:                                                                           File "amm/contract.py", line 337

tokens_to_mint_if_body@5:
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0                                                                                                                                         a_amount: UInt64                                                                              File "amm/contract.py", line 333
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0,b_amount#0                                                                                                                              b_amount: UInt64                                                                              File "amm/contract.py", line 334
        *                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                a_amount * b_amount                                                                           File "amm/contract.py", line 338
        sqrt                                                                                                         //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {sqrt}                                                                                                                                             sqrt(a_amount * b_amount)                                                                     File "amm/contract.py", line 338
        int 1000                                                                                                     //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0,1000                                                                                                                                       SCALE                                                                                         File "amm/contract.py", line 338
        -                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                                sqrt(a_amount * b_amount) - SCALE                                                             File "amm/contract.py", line 338
        frame_bury 0
        retsub                                                                                                       //                                                             tmp%5#0                                                                                                                                                                                                                                         return sqrt(a_amount * b_amount) - SCALE                                                      File "amm/contract.py", line 338

tokens_to_mint_after_if_else@6:
        int 10000000000                                                                                              //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000                                                                                                                                        TOTAL_SUPPLY                                                                                  File "amm/contract.py", line 339
        frame_dig -5                                                                                                 // load pool_balance#0 from parameters                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000,pool_balance#0                                                                                                                         pool_balance: UInt64                                                                          File "amm/contract.py", line 330
        -                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                                TOTAL_SUPPLY - pool_balance                                                                   File "amm/contract.py", line 339
        int 1000                                                                                                     //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000                                                                                                                                SCALE                                                                                         File "amm/contract.py", line 340
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000,a_amount#0                                                                                                                     a_amount: UInt64                                                                              File "amm/contract.py", line 333
        *                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {*}                                                                                                                                 SCALE * a_amount                                                                              File "amm/contract.py", line 340
        frame_dig -4                                                                                                 // load a_balance#0 from parameters                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,a_balance#0                                                                                                                 a_balance: UInt64                                                                             File "amm/contract.py", line 331
        frame_dig -2                                                                                                 // load a_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,a_balance#0,a_amount#0                                                                                                      a_amount: UInt64                                                                              File "amm/contract.py", line 333
        -                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,{-}                                                                                                                         a_balance - a_amount                                                                          File "amm/contract.py", line 340
        /                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {/}                                                                                                                                 SCALE * a_amount // (a_balance - a_amount)                                                    File "amm/contract.py", line 340
        dup                                                                                                          // store a_ratio#0 to l-stack (copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,a_ratio#0                                                                                                                 a_ratio                                                                                       File "amm/contract.py", line 340
        frame_bury 0                                                                                                 // store a_ratio#0 to f-stack                                  (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                                           a_ratio                                                                                       File "amm/contract.py", line 340
        int 1000                                                                                                     //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000                                                                                                                      SCALE                                                                                         File "amm/contract.py", line 341
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000,b_amount#0                                                                                                           b_amount: UInt64                                                                              File "amm/contract.py", line 334
        *                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{*}                                                                                                                       SCALE * b_amount                                                                              File "amm/contract.py", line 341
        frame_dig -3                                                                                                 // load b_balance#0 from parameters                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,b_balance#0                                                                                                       b_balance: UInt64                                                                             File "amm/contract.py", line 332
        frame_dig -1                                                                                                 // load b_amount#0 from parameters                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,b_balance#0,b_amount#0                                                                                            b_amount: UInt64                                                                              File "amm/contract.py", line 334
        -                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,{-}                                                                                                               b_balance - b_amount                                                                          File "amm/contract.py", line 341
        /                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{/}                                                                                                                       SCALE * b_amount // (b_balance - b_amount)                                                    File "amm/contract.py", line 341
        dup                                                                                                          // store b_ratio#0 to l-stack (copy)                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0,b_ratio#0                                                                                                       b_ratio                                                                                       File "amm/contract.py", line 341
        frame_bury 1                                                                                                 // store b_ratio#0 to f-stack                                  (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0                                                                                                                 b_ratio                                                                                       File "amm/contract.py", line 341
        <                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {<}                                                                                                                                 a_ratio < b_ratio:                                                                            File "amm/contract.py", line 342
        bz tokens_to_mint_else_body@8                                                                                //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                     if a_ratio < b_ratio:                                                                         File "amm/contract.py", line 342
        // Implicit fall through to tokens_to_mint_if_body@7                                                         //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                   issued#0          if a_ratio < b_ratio:                                                                         File "amm/contract.py", line 342

tokens_to_mint_if_body@7:
        frame_dig 0                                                                                                  // load a_ratio#0 from f-stack                                 (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                         issued#0          a_ratio                                                                                       File "amm/contract.py", line 340
        *                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                a_ratio * issued                                                                              File "amm/contract.py", line 343
        int 1000                                                                                                     //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0,1000                                                                                                                                      SCALE                                                                                         File "amm/contract.py", line 343
        /                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                                a_ratio * issued // SCALE                                                                     File "amm/contract.py", line 343
        frame_bury 0
        retsub                                                                                                       //                                                             tmp%12#0                                                                                                                                                                                                                                        return a_ratio * issued // SCALE                                                              File "amm/contract.py", line 343

tokens_to_mint_else_body@8:
        frame_dig 1                                                                                                  // load b_ratio#0 from f-stack                                 (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | b_ratio#0                                                                                                         issued#0          b_ratio                                                                                       File "amm/contract.py", line 341
        *                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                b_ratio * issued                                                                              File "amm/contract.py", line 345
        int 1000                                                                                                     //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0,1000                                                                                                                                      SCALE                                                                                         File "amm/contract.py", line 345
        /                                                                                                            //                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                                b_ratio * issued // SCALE                                                                     File "amm/contract.py", line 345
        frame_bury 0
        retsub                                                                                                       //                                                             tmp%14#0                                                                                                                                                                                                                                        return b_ratio * issued // SCALE                                                              File "amm/contract.py", line 345


// examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
_update_ratio:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                             def _update_ratio(self) -> None:                                                              File "amm/contract.py", line 259

_update_ratio_block@0:
        callsub _current_a_balance                                                                                   //                                                             {_current_a_balance}                                                                                                                                                                                                                            self._current_a_balance()                                                                     File "amm/contract.py", line 260
        callsub _current_b_balance                                                                                   //                                                             a_balance#0,{_current_b_balance}                                                                                                                                                                                                                self._current_b_balance()                                                                     File "amm/contract.py", line 261
        swap                                                                                                         // store b_balance#0 to l-stack (no copy)                      b_balance#0,a_balance#0                                                                                                                                                                                                                         b_balance                                                                                     File "amm/contract.py", line 261
        int 1000                                                                                                     //                                                             b_balance#0,a_balance#0,1000                                                                                                                                                                                                                    SCALE                                                                                         File "amm/contract.py", line 263
        *                                                                                                            //                                                             b_balance#0,{*}                                                                                                                                                                                                                                 a_balance * SCALE                                                                             File "amm/contract.py", line 263
        swap                                                                                                         // load b_balance#0 from l-stack (no copy)                     tmp%0#0,b_balance#0                                                                                                                                                                                                                             b_balance                                                                                     File "amm/contract.py", line 261
        /                                                                                                            //                                                             {/}                                                                                                                                                                                                                                             a_balance * SCALE // b_balance                                                                File "amm/contract.py", line 263
        byte "ratio"                                                                                                 //                                                             new_state_value%1#0,"ratio"                                                                                                                                                                                                                     self.ratio                                                                                    File "amm/contract.py", line 263
        swap                                                                                                         // load new_state_value%1#0 from l-stack (no copy)             "ratio",new_state_value%1#0                                                                                                                                                                                                                     a_balance * SCALE // b_balance                                                                File "amm/contract.py", line 263
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                             self.ratio = a_balance * SCALE // b_balance                                                   File "amm/contract.py", line 263
        retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.burn(pool_xfer#0: uint64, pool_asset#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> void:
burn:
        proto 4 0                                                                                                    //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              def burn(                                                                                     File "amm/contract.py", line 157

burn_block@0:
        callsub _check_bootstrapped                                                                                  //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              self._check_bootstrapped()                                                                    File "amm/contract.py", line 173
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                            self.pool_token                                                                               File "amm/contract.py", line 175
        byte "pool_token"                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                               self.pool_token                                                                               File "amm/contract.py", line 175
        app_global_get_ex                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                  self.pool_token                                                                               File "amm/contract.py", line 175
        assert // check value exists                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                                  self.pool_token                                                                               File "amm/contract.py", line 175
        frame_dig -3                                                                                                 // load pool_asset#0 from parameters                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%0#0,pool_asset#0                                                                                                                                                     pool_asset: Asset                                                                             File "amm/contract.py", line 160
        ==                                                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                         pool_asset == self.pool_token, "asset pool incorrect"                                         File "amm/contract.py", line 175
        assert // asset pool incorrect                                                                               //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert pool_asset == self.pool_token, "asset pool incorrect"                                  File "amm/contract.py", line 175
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                            self.asset_a                                                                                  File "amm/contract.py", line 176
        byte "asset_a"                                                                                               //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 176
        app_global_get_ex                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 176
        assert // check value exists                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                                  self.asset_a                                                                                  File "amm/contract.py", line 176
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%3#0,a_asset#0                                                                                                                                                        a_asset: Asset                                                                                File "amm/contract.py", line 161
        ==                                                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                         a_asset == self.asset_a, "asset a incorrect"                                                  File "amm/contract.py", line 176
        assert // asset a incorrect                                                                                  //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert a_asset == self.asset_a, "asset a incorrect"                                           File "amm/contract.py", line 176
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                            self.asset_b                                                                                  File "amm/contract.py", line 177
        byte "asset_b"                                                                                               //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                  self.asset_b                                                                                  File "amm/contract.py", line 177
        app_global_get_ex                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                  self.asset_b                                                                                  File "amm/contract.py", line 177
        assert // check value exists                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0                                                                                                                                                                  self.asset_b                                                                                  File "amm/contract.py", line 177
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | app_global_get_ex_value%6#0,b_asset#0                                                                                                                                                        b_asset: Asset                                                                                File "amm/contract.py", line 162
        ==                                                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                         b_asset == self.asset_b, "asset b incorrect"                                                  File "amm/contract.py", line 177
        assert // asset b incorrect                                                                                  //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert b_asset == self.asset_b, "asset b incorrect"                                           File "amm/contract.py", line 177
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                  pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 159
        gtxns AssetReceiver                                                                                          //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                      pool_xfer.asset_receiver                                                                      File "amm/contract.py", line 180
        global CurrentApplicationAddress                                                                             //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{global}                                                                                                                                                                             Global.current_application_address()                                                          File "amm/contract.py", line 180
        ==                                                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                         pool_xfer.asset_receiver == Global.current_application_address()                              File "amm/contract.py", line 180
        assert // receiver not app address                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert (                                                                                      File "amm/contract.py", line 179
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                  pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 159
        gtxns AssetAmount                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                      pool_xfer.asset_amount                                                                        File "amm/contract.py", line 182
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,0                                                                                                                                                                                   0                                                                                             File "amm/contract.py", line 182
        >                                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {>}                                                                                                                                                                                          pool_xfer.asset_amount > 0, "amount minimum not met"                                          File "amm/contract.py", line 182
        assert // amount minimum not met                                                                             //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert pool_xfer.asset_amount > 0, "amount minimum not met"                                   File "amm/contract.py", line 182
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                  pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 159
        gtxns XferAsset                                                                                              //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                      pool_xfer.xfer_asset                                                                          File "amm/contract.py", line 183
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,0                                                                                                                                                                                   self.pool_token                                                                               File "amm/contract.py", line 183
        byte "pool_token"                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,0,"pool_token"                                                                                                                                                                      self.pool_token                                                                               File "amm/contract.py", line 183
        app_global_get_ex                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                         self.pool_token                                                                               File "amm/contract.py", line 183
        assert // check value exists                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,app_global_get_ex_value%15#0                                                                                                                                                        self.pool_token                                                                               File "amm/contract.py", line 183
        ==                                                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                         pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                               File "amm/contract.py", line 183
        assert // asset pool incorrect                                                                               //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                        File "amm/contract.py", line 183
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                  pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 159
        gtxns Sender                                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                      pool_xfer.sender                                                                              File "amm/contract.py", line 184
        txn Sender                                                                                                   //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,{txn}                                                                                                                                                                               Transaction.sender()                                                                          File "amm/contract.py", line 184
        ==                                                                                                           //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                         pool_xfer.sender == Transaction.sender(), "sender invalid"                                    File "amm/contract.py", line 184
        assert // sender invalid                                                                                     //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              assert pool_xfer.sender == Transaction.sender(), "sender invalid"                             File "amm/contract.py", line 184
        callsub _current_pool_balance                                                                                //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {_current_pool_balance}                                                                                                                                                                      self._current_pool_balance()                                                                  File "amm/contract.py", line 188
        callsub _current_a_balance                                                                                   //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,{_current_a_balance}                                                                                                                                                          self._current_a_balance()                                                                     File "amm/contract.py", line 191
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%21#0,pool_xfer#0                                                                                                                                                          pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 159
        gtxns AssetAmount                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%21#0,{gtxns}                                                                                                                                                              pool_xfer.asset_amount                                                                        File "amm/contract.py", line 192
        dig 2                                                                                                        // load pool_balance#0 from l-stack (copy)                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,tmp%21#0,tmp%22#0,pool_balance#0                                                                                                                                              pool_balance                                                                                  File "amm/contract.py", line 188
        cover 2                                                                                                      // virtual: 2 ops                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,pool_balance#0,tmp%21#0,tmp%22#0                                                                                                                                              self._current_a_balance(),                                                                    File "amm/contract.py", line 191
        callsub tokens_to_burn                                                                                       //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_balance#0,{tokens_to_burn}                                                                                                                                                              tokens_to_burn(                                                                               File "amm/contract.py", line 189
        swap                                                                                                         // store a_amt#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0                                                                                                                                                                       a_amt                                                                                         File "amm/contract.py", line 189
        callsub _current_b_balance                                                                                   //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,{_current_b_balance}                                                                                                                                                  self._current_b_balance()                                                                     File "amm/contract.py", line 196
        frame_dig -4                                                                                                 // load pool_xfer#0 from parameters                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%23#0,pool_xfer#0                                                                                                                                                  pool_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 159
        gtxns AssetAmount                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%23#0,{gtxns}                                                                                                                                                      pool_xfer.asset_amount                                                                        File "amm/contract.py", line 197
        callsub tokens_to_burn                                                                                       //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,{tokens_to_burn}                                                                                                                                                                     tokens_to_burn(                                                                               File "amm/contract.py", line 194
        swap                                                                                                         // store b_amt#0 to l-stack (no copy)                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0                                                                                                                                                                              b_amt                                                                                         File "amm/contract.py", line 194
        txn Sender                                                                                                   //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,{txn}                                                                                                                                                                        Transaction.sender()                                                                          File "amm/contract.py", line 201
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,0                                                                                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 201
        byte "asset_a"                                                                                               //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,0,"asset_a"                                                                                                                                                         self.asset_a                                                                                  File "amm/contract.py", line 201
        app_global_get_ex                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                         self.asset_a                                                                                  File "amm/contract.py", line 201
        assert // check value exists                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%25#0,app_global_get_ex_value%26#0                                                                                                                                        self.asset_a                                                                                  File "amm/contract.py", line 201
        uncover 2                                                                                                    // load a_amt#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%25#0,app_global_get_ex_value%26#0,a_amt#0                                                                                                                                        a_amt                                                                                         File "amm/contract.py", line 189
        callsub do_asset_transfer                                                                                    //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0                                                                                                                                                                                      do_asset_transfer(receiver=Transaction.sender(), asset=self.asset_a, amount=a_amt)            File "amm/contract.py", line 201
        txn Sender                                                                                                   //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,{txn}                                                                                                                                                                                Transaction.sender()                                                                          File "amm/contract.py", line 204
        int 0                                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,0                                                                                                                                                                           self.asset_b                                                                                  File "amm/contract.py", line 204
        byte "asset_b"                                                                                               //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,0,"asset_b"                                                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 204
        app_global_get_ex                                                                                            //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 204
        assert // check value exists                                                                                 //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%28#0,app_global_get_ex_value%29#0                                                                                                                                                self.asset_b                                                                                  File "amm/contract.py", line 204
        uncover 2                                                                                                    // load b_amt#0 from l-stack (no copy)                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%28#0,app_global_get_ex_value%29#0,b_amt#0                                                                                                                                                b_amt                                                                                         File "amm/contract.py", line 194
        callsub do_asset_transfer                                                                                    //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              do_asset_transfer(receiver=Transaction.sender(), asset=self.asset_b, amount=b_amt)            File "amm/contract.py", line 204
        callsub _update_ratio                                                                                        //                                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                              self._update_ratio()                                                                          File "amm/contract.py", line 205
        retsub                                                                                                       //


// examples.amm.contract.tokens_to_burn(pool_balance#0: uint64, supply#0: uint64, amount#0: uint64) -> uint64:
tokens_to_burn:
        proto 3 1                                                                                                    //                                                             (𝕡) pool_balance#0,supply#0,amount#0 |                                                                                                                                                                                                          def tokens_to_burn(*, pool_balance: UInt64, supply: UInt64, amount: UInt64) -> UInt64:        File "amm/contract.py", line 349

tokens_to_burn_block@0:
        int 10000000000                                                                                              //                                                             (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000                                                                                                                                                                                              TOTAL_SUPPLY                                                                                  File "amm/contract.py", line 350
        frame_dig -3                                                                                                 // load pool_balance#0 from parameters                         (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000,pool_balance#0                                                                                                                                                                               pool_balance: UInt64                                                                          File "amm/contract.py", line 349
        -                                                                                                            //                                                             (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                      TOTAL_SUPPLY - pool_balance                                                                   File "amm/contract.py", line 350
        frame_dig -1                                                                                                 // load amount#0 from parameters                               (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0,amount#0                                                                                                                                                                                         amount: UInt64                                                                                File "amm/contract.py", line 349
        -                                                                                                            //                                                             (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                      TOTAL_SUPPLY - pool_balance - amount                                                          File "amm/contract.py", line 350
        frame_dig -2                                                                                                 // load supply#0 from parameters                               (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0                                                                                                                                                                                        supply: UInt64                                                                                File "amm/contract.py", line 349
        frame_dig -1                                                                                                 // load amount#0 from parameters                               (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0,amount#0                                                                                                                                                                               amount: UInt64                                                                                File "amm/contract.py", line 349
        *                                                                                                            //                                                             (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,{*}                                                                                                                                                                                             supply * amount                                                                               File "amm/contract.py", line 351
        swap                                                                                                         // load issued#0 from l-stack (no copy)                        (𝕡) pool_balance#0,supply#0,amount#0 | tmp%1#0,issued#0                                                                                                                                                                                         issued                                                                                        File "amm/contract.py", line 350
        /                                                                                                            //                                                             (𝕡) pool_balance#0,supply#0,amount#0 | {/}                                                                                                                                                                                                      supply * amount // issued                                                                     File "amm/contract.py", line 351
        retsub                                                                                                       //                                                             tmp%2#0                                                                                                                                                                                                                                         return supply * amount // issued                                                              File "amm/contract.py", line 351


// examples.amm.contract.ConstantProductAMM.swap(swap_xfer#0: uint64, a_asset#0: uint64, b_asset#0: uint64) -> void:
swap:
        proto 3 0                                                                                                    //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                           def swap(                                                                                     File "amm/contract.py", line 213
        byte ""
        dup                                                                                                          // allocate 2 to stack                                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |

swap_block@0:
        callsub _check_bootstrapped                                                                                  //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             self._check_bootstrapped()                                                                    File "amm/contract.py", line 226
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                           self.asset_a                                                                                  File "amm/contract.py", line 228
        byte "asset_a"                                                                                               //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_a"                                                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 228
        app_global_get_ex                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 228
        assert // check value exists                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0                                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 228
        frame_dig -2                                                                                                 // load a_asset#0 from parameters                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%0#0,a_asset#0                                                                                                                                       a_asset: Asset                                                                                File "amm/contract.py", line 216
        ==                                                                                                           //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                        a_asset == self.asset_a, "asset a incorrect"                                                  File "amm/contract.py", line 228
        assert // asset a incorrect                                                                                  //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             assert a_asset == self.asset_a, "asset a incorrect"                                           File "amm/contract.py", line 228
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                           self.asset_b                                                                                  File "amm/contract.py", line 229
        byte "asset_b"                                                                                               //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_b"                                                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 229
        app_global_get_ex                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 229
        assert // check value exists                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0                                                                                                                                                 self.asset_b                                                                                  File "amm/contract.py", line 229
        frame_dig -1                                                                                                 // load b_asset#0 from parameters                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%3#0,b_asset#0                                                                                                                                       b_asset: Asset                                                                                File "amm/contract.py", line 217
        ==                                                                                                           //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                        b_asset == self.asset_b, "asset b incorrect"                                                  File "amm/contract.py", line 229
        assert // asset b incorrect                                                                                  //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             assert b_asset == self.asset_b, "asset b incorrect"                                           File "amm/contract.py", line 229
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | swap_xfer#0                                                                                                                                                                 swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 215
        gtxns AssetAmount                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {gtxns}                                                                                                                                                                     swap_xfer.asset_amount                                                                        File "amm/contract.py", line 231
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%6#0,0                                                                                                                                                                   0                                                                                             File "amm/contract.py", line 231
        >                                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {>}                                                                                                                                                                         swap_xfer.asset_amount > 0, "amount minimum not met"                                          File "amm/contract.py", line 231
        assert // amount minimum not met                                                                             //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             assert swap_xfer.asset_amount > 0, "amount minimum not met"                                   File "amm/contract.py", line 231
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | swap_xfer#0                                                                                                                                                                 swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 215
        gtxns Sender                                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {gtxns}                                                                                                                                                                     swap_xfer.sender                                                                              File "amm/contract.py", line 232
        txn Sender                                                                                                   //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%8#0,{txn}                                                                                                                                                               Transaction.sender()                                                                          File "amm/contract.py", line 232
        ==                                                                                                           //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                        swap_xfer.sender == Transaction.sender(), "sender invalid"                                    File "amm/contract.py", line 232
        assert // sender invalid                                                                                     //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             assert swap_xfer.sender == Transaction.sender(), "sender invalid"                             File "amm/contract.py", line 232
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                           self.asset_a                                                                                  File "amm/contract.py", line 235
        byte "asset_a"                                                                                               //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_a"                                                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 235
        app_global_get_ex                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                 self.asset_a                                                                                  File "amm/contract.py", line 235
        assert // check value exists                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0                                                                                                                                                self.asset_a                                                                                  File "amm/contract.py", line 235
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,0                                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 239
        byte "asset_b"                                                                                               //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,0,"asset_b"                                                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 239
        app_global_get_ex                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                    self.asset_b                                                                                  File "amm/contract.py", line 239
        assert // check value exists                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0                                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 239
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,swap_xfer#0                                                                                                       swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 215
        gtxns XferAsset                                                                                              //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | app_global_get_ex_value%11#0,app_global_get_ex_value%13#0,{gtxns}                                                                                                           swap_xfer.xfer_asset                                                                          File "amm/contract.py", line 234
        match swap_switch_case_0@1 swap_switch_case_1@2                                                              //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             match swap_xfer.xfer_asset:                                                                   File "amm/contract.py", line 234
        b swap_switch_case_default@3                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             match swap_xfer.xfer_asset:                                                                   File "amm/contract.py", line 234

swap_switch_case_0@1:
        callsub _current_b_balance                                                                                   //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_b_balance}                                                                                                                                                        self._current_b_balance()                                                                     File "amm/contract.py", line 236
        frame_bury 0                                                                                                 // store in_supply#0 to f-stack                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             in_supply                                                                                     File "amm/contract.py", line 236
        callsub _current_a_balance                                                                                   //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_a_balance}                                                                                                                                                        self._current_a_balance()                                                                     File "amm/contract.py", line 237
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0                                                                                                                                                        self.asset_a                                                                                  File "amm/contract.py", line 238
        byte "asset_a"                                                                                               //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0,"asset_a"                                                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 238
        app_global_get_ex                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                              self.asset_a                                                                                  File "amm/contract.py", line 238
        swap                                                                                                         // store app_global_get_ex_did_exist%17#0 to l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%17#0,{app_global_get_ex}.0                                                                                                   self.asset_a                                                                                  File "amm/contract.py", line 238
        frame_bury 1                                                                                                 // store out_asset#0 to f-stack                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%17#0                                                                                                                         out_asset                                                                                     File "amm/contract.py", line 238
        assert // check value exists                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                                          self.asset_a                                                                                  File "amm/contract.py", line 238
        b swap_switch_case_next@4                                                                                    //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                        out_supply#0

swap_switch_case_1@2:
        callsub _current_a_balance                                                                                   //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_a_balance}                                                                                                                                                        self._current_a_balance()                                                                     File "amm/contract.py", line 240
        frame_bury 0                                                                                                 // store in_supply#0 to f-stack                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             in_supply                                                                                     File "amm/contract.py", line 236
        callsub _current_b_balance                                                                                   //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {_current_b_balance}                                                                                                                                                        self._current_b_balance()                                                                     File "amm/contract.py", line 241
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0                                                                                                                                                        self.asset_b                                                                                  File "amm/contract.py", line 242
        byte "asset_b"                                                                                               //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | 0,"asset_b"                                                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 242
        app_global_get_ex                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                              self.asset_b                                                                                  File "amm/contract.py", line 242
        swap                                                                                                         // store app_global_get_ex_did_exist%19#0 to l-stack (no copy) (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%19#0,{app_global_get_ex}.0                                                                                                   self.asset_b                                                                                  File "amm/contract.py", line 242
        frame_bury 1                                                                                                 // store out_asset#0 to f-stack                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | app_global_get_ex_did_exist%19#0                                                                                                                         out_asset                                                                                     File "amm/contract.py", line 238
        assert // check value exists                                                                                 //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                                          self.asset_b                                                                                  File "amm/contract.py", line 242
        b swap_switch_case_next@4                                                                                    //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 |                                                                                                                                        out_supply#0

swap_switch_case_default@3:
        err // asset id incorrect                                                                                    //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             assert False, "asset id incorrect"                                                            File "amm/contract.py", line 244

swap_switch_case_next@4:
        frame_dig -3                                                                                                 // load swap_xfer#0 from parameters                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | swap_xfer#0                                                                                                                            out_supply#0      swap_xfer: AssetTransferTransaction                                                           File "amm/contract.py", line 215
        gtxns AssetAmount                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | {gtxns}                                                                                                                                                  swap_xfer.asset_amount                                                                        File "amm/contract.py", line 247
        frame_dig 0                                                                                                  // load in_supply#0 from f-stack                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | (𝕏) out_supply#0 | tmp%20#0,in_supply#0                                                                                                                                     in_supply                                                                                     File "amm/contract.py", line 236
        uncover 2                                                                                                    // load out_supply#0 from x-stack                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%20#0,in_supply#0,out_supply#0                                                                                                                                           out_supply                                                                                    File "amm/contract.py", line 237
        callsub tokens_to_swap                                                                                       //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {tokens_to_swap}                                                                                                                                                            tokens_to_swap(                                                                               File "amm/contract.py", line 246
        dup                                                                                                          // load to_swap#0 from l-stack (copy)                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,to_swap#0                                                                                                                                                         to_swap                                                                                       File "amm/contract.py", line 246
        int 0                                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,to_swap#0,0                                                                                                                                                       0                                                                                             File "amm/contract.py", line 249
        >                                                                                                            //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,{>}                                                                                                                                                               to_swap > 0, "send amount too low"                                                            File "amm/contract.py", line 249
        assert // send amount too low                                                                                //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0                                                                                                                                                                   assert to_swap > 0, "send amount too low"                                                     File "amm/contract.py", line 249
        txn Sender                                                                                                   //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,{txn}                                                                                                                                                             Transaction.sender()                                                                          File "amm/contract.py", line 251
        frame_dig 1                                                                                                  // load out_asset#0 from f-stack                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | to_swap#0,tmp%22#0,out_asset#0                                                                                                                                              out_asset                                                                                     File "amm/contract.py", line 238
        uncover 2                                                                                                    // load to_swap#0 from l-stack (no copy)                       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%22#0,out_asset#0,to_swap#0                                                                                                                                              to_swap                                                                                       File "amm/contract.py", line 246
        callsub do_asset_transfer                                                                                    //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             do_asset_transfer(receiver=Transaction.sender(), asset=out_asset, amount=to_swap)             File "amm/contract.py", line 251
        callsub _update_ratio                                                                                        //                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                             self._update_ratio()                                                                          File "amm/contract.py", line 252
        retsub                                                                                                       //


// examples.amm.contract.tokens_to_swap(in_amount#0: uint64, in_supply#0: uint64, out_supply#0: uint64) -> uint64:
tokens_to_swap:
        proto 3 1                                                                                                    //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 |                                                                                                                                                                                                      def tokens_to_swap(*, in_amount: UInt64, in_supply: UInt64, out_supply: UInt64) -> UInt64:    File "amm/contract.py", line 355

tokens_to_swap_block@0:
        frame_dig -2                                                                                                 // load in_supply#0 from parameters                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0                                                                                                                                                                                          in_supply: UInt64                                                                             File "amm/contract.py", line 355
        frame_dig -3                                                                                                 // load in_amount#0 from parameters                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0,in_amount#0                                                                                                                                                                              in_amount: UInt64                                                                             File "amm/contract.py", line 355
        -                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | {-}                                                                                                                                                                                                  in_supply - in_amount                                                                         File "amm/contract.py", line 356
        int 1000                                                                                                     //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%0#0,1000                                                                                                                                                                                         SCALE                                                                                         File "amm/contract.py", line 356
        *                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | {*}                                                                                                                                                                                                  SCALE * (in_supply - in_amount)                                                               File "amm/contract.py", line 356
        frame_dig -3                                                                                                 // load in_amount#0 from parameters                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0                                                                                                                                                                                  in_amount: UInt64                                                                             File "amm/contract.py", line 355
        int 995                                                                                                      //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0,995                                                                                                                                                                              FACTOR                                                                                        File "amm/contract.py", line 356
        *                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,{*}                                                                                                                                                                                          in_amount * FACTOR                                                                            File "amm/contract.py", line 356
        +                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | {+}                                                                                                                                                                                                  SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                        File "amm/contract.py", line 356
        frame_dig -3                                                                                                 // load in_amount#0 from parameters                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,in_amount#0                                                                                                                                                                               in_amount: UInt64                                                                             File "amm/contract.py", line 355
        int 995                                                                                                      //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,in_amount#0,995                                                                                                                                                                           FACTOR                                                                                        File "amm/contract.py", line 357
        *                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,{*}                                                                                                                                                                                       in_amount * FACTOR                                                                            File "amm/contract.py", line 357
        frame_dig -1                                                                                                 // load out_supply#0 from parameters                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%3#0,out_supply#0                                                                                                                                                                      out_supply: UInt64                                                                            File "amm/contract.py", line 355
        *                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,{*}                                                                                                                                                                                       in_amount * FACTOR * out_supply                                                               File "amm/contract.py", line 357
        swap                                                                                                         // load in_total#0 from l-stack (no copy)                      (𝕡) in_amount#0,in_supply#0,out_supply#0 | out_total#0,in_total#0                                                                                                                                                                               in_total                                                                                      File "amm/contract.py", line 356
        /                                                                                                            //                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | {/}                                                                                                                                                                                                  out_total // in_total                                                                         File "amm/contract.py", line 358
        retsub                                                                                                       //                                                             tmp%4#0                                                                                                                                                                                                                                         return out_total // in_total                                                                  File "amm/contract.py", line 358


// examples.amm.contract.ConstantProductAMM.__init__() -> void:
__init__:
        proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                             def __init__(self) -> None:                                                                   File "amm/contract.py", line 31

__init___block@0:
        byte "asset_a"                                                                                               //                                                             "asset_a"                                                                                                                                                                                                                                       self.asset_a                                                                                  File "amm/contract.py", line 36
        int 0                                                                                                        //                                                             "asset_a",0                                                                                                                                                                                                                                     0                                                                                             File "amm/contract.py", line 36
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                             self.asset_a = Asset(0)                                                                       File "amm/contract.py", line 36
        byte "asset_b"                                                                                               //                                                             "asset_b"                                                                                                                                                                                                                                       self.asset_b                                                                                  File "amm/contract.py", line 38
        int 0                                                                                                        //                                                             "asset_b",0                                                                                                                                                                                                                                     0                                                                                             File "amm/contract.py", line 38
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                             self.asset_b = Asset(0)                                                                       File "amm/contract.py", line 38
        byte "governor"
        txn Sender                                                                                                   // virtual: 4 ops                                              "governor",new_state_value%0#0                                                                                                                                                                                                                  self.governor = Transaction.sender()                                                          File "amm/contract.py", line 40
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                             self.governor = Transaction.sender()                                                          File "amm/contract.py", line 40
        byte "pool_token"                                                                                            //                                                             "pool_token"                                                                                                                                                                                                                                    self.pool_token                                                                               File "amm/contract.py", line 42
        int 0                                                                                                        //                                                             "pool_token",0                                                                                                                                                                                                                                  0                                                                                             File "amm/contract.py", line 42
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                             self.pool_token = Asset(0)                                                                    File "amm/contract.py", line 42
        byte "ratio"                                                                                                 //                                                             "ratio"                                                                                                                                                                                                                                         self.ratio                                                                                    File "amm/contract.py", line 44
        int 0                                                                                                        //                                                             "ratio",0                                                                                                                                                                                                                                       0                                                                                             File "amm/contract.py", line 44
        app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                             self.ratio = UInt64(0)                                                                        File "amm/contract.py", line 44
        retsub                                                                                                       //

