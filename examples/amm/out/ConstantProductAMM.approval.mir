// Op                                                                                                            //                                                                                        Op Description                                                                                                                                              Stack (out)                                                                                                                                                                                                                   Live (out)           X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// examples.amm.contract.ConstantProductAMM.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}
    //                                                                                                           virtual: store app_id%0#0 to l-stack (no copy)                                            app_id%0#0
    //                                                                                                           virtual: load app_id%0#0 from l-stack (no copy)                                           app_id%0#0
    bnz main_entrypoint@2                                                                                        //
    // Implicit fall through to main_on_create@1                                                                 //

main_on_create@1:
    callsub __init__                                                                                             //
    // Implicit fall through to main_entrypoint@2                                                                //

main_entrypoint@2:
    txn NumAppArgs                                                                                               //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    bz main_bare_routingclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    // Implicit fall through to main_abi_routingclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27

main_abi_routing@3:
    txna ApplicationArgs 0                                                                                       //                                                                                                                                                                                                                                                    {txna}                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    method "set_governor(account)void"                                                                           //                                                                                                                                                                                                                                                    tmp%1#0,method<"set_governor(account)void">                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    method "bootstrap(pay,asset,asset)uint64"                                                                    //                                                                                                                                                                                                                                                    tmp%1#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    method "mint(axfer,axfer,asset,asset,asset)void"                                                             //                                                                                                                                                                                                                                                    tmp%1#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">                                                                                                                                                                                                                class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    method "burn(axfer,asset,asset,asset)void"                                                                   //                                                                                                                                                                                                                                                    tmp%1#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    method "swap(axfer,asset,asset)void"                                                                         //                                                                                                                                                                                                                                                    tmp%1#0,method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    uncover 5                                                                                                    //                                                                                        load tmp%1#0 from l-stack (no copy)                                                                                                                         method<"set_governor(account)void">,method<"bootstrap(pay,asset,asset)uint64">,method<"mint(axfer,axfer,asset,asset,asset)void">,method<"burn(axfer,asset,asset,asset)void">,method<"swap(axfer,asset,asset)void">,tmp%1#0                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    match main_set_governor_route@4 main_bootstrap_route@5 main_mint_route@6 main_burn_route@7 main_swap_routeclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    err // reject transaction                                                                                    //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27

main_set_governor_route@4:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:43
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod()                                                                                     amm/contract.py:43
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                                               tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                                              tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    assert // OnCompletion is NoOparc4.abimethod()                                                                                     amm/contract.py:43
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:43
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    assert // is not creatingarc4.abimethod()                                                                                     amm/contract.py:43
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                                    {txna}                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                                               tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                                              tmp%5#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    {btoi}                                                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                                               tmp%6#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                                              tmp%6#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Accounts                                                                                               //                                                                                                                                                                                                                                                    {txnas}                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                                               tmp%7#0                                                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                                              tmp%7#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:43
    callsub set_governorarc4.abimethod()                                                                                     amm/contract.py:43
    intarc4.abimethod()                                                                                     amm/contract.py:43
    returnarc4.abimethod()                                                                                     amm/contract.py:43

main_bootstrap_route@5:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                                               tmp%8#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                                              tmp%8#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:49
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                                               tmp%9#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                                              tmp%9#0                                                                                                                                                                                                                                                                                                                                                                                                        arc4.abimethod()                                                                                     amm/contract.py:49
    assert // OnCompletion is NoOparc4.abimethod()                                                                                     amm/contract.py:49
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                                              tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                                             tmp%10#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                                     amm/contract.py:49
    assert // is not creatingarc4.abimethod()                                                                                     amm/contract.py:49
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                                              tmp%11#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                                             tmp%11#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int 1                                                                                                        //                                                                                                                                                                                                                                                    tmp%11#0,1                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    -                                                                                                            //                                                                                                                                                                                                                                                    {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store awst_tmp%0#0 to l-stack (no copy)                                          awst_tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    dup                                                                                                          //                                                                                        load awst_tmp%0#0 from l-stack (copy)                                                                                                                       awst_tmp%0#0,awst_tmp%0#0                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                                    awst_tmp%0#0,{gtxns}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%12#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                                             awst_tmp%0#0,tmp%12#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int pay                                                                                                      //                                                                                                                                                                                                                                                    awst_tmp%0#0,tmp%12#0,pay                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    ==                                                                                                           //                                                                                                                                                                                                                                                    awst_tmp%0#0,{==}                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%13#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                                             awst_tmp%0#0,tmp%13#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // transaction type is pay                                                                            //                                                                                                                                                                                                                                                    awst_tmp%0#0                                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%0#0,{txna}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%14#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%14#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%14#0 from l-stack (no copy)                                             awst_tmp%0#0,tmp%14#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%0#0,{btoi}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%15#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%15#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%15#0 from l-stack (no copy)                                             awst_tmp%0#0,tmp%15#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%0#0,{txnas}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%16#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%16#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%0#0,tmp%16#0,{txna}                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%17#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%16#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%17#0 from l-stack (no copy)                                             awst_tmp%0#0,tmp%16#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%0#0,tmp%16#0,{btoi}                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%18#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%16#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%18#0 from l-stack (no copy)                                             awst_tmp%0#0,tmp%16#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%0#0,tmp%16#0,{txnas}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%19#0 to l-stack (no copy)                                              awst_tmp%0#0,tmp%16#0,tmp%19#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    uncover 2                                                                                                    //                                                                                        load awst_tmp%0#0 from l-stack (no copy)                                                                                                                    tmp%16#0,tmp%19#0,awst_tmp%0#0                                                                                                                                                                                                                                                                                                                          arc4.abimethod()                                                                                     amm/contract.py:49
    uncover 2                                                                                                    //                                                                                        load tmp%16#0 from l-stack (no copy)                                                                                                                        tmp%19#0,awst_tmp%0#0,tmp%16#0                                                                                                                                                                                                                                                                                                                          arc4.abimethod()                                                                                     amm/contract.py:49
    uncover 2                                                                                                    //                                                                                        load tmp%19#0 from l-stack (no copy)                                                                                                                        awst_tmp%0#0,tmp%16#0,tmp%19#0                                                                                                                                                                                                                                                                                                                          arc4.abimethod()                                                                                     amm/contract.py:49
    callsub bootstrap                                                                                            //                                                                                                                                                                                                                                                    {bootstrap}                                                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: store tmp%20#0 to l-stack (no copy)                                              tmp%20#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: load tmp%20#0 from l-stack (no copy)                                             tmp%20#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                                     amm/contract.py:49
    itob                                                                                                         //                                                                                                                                                                                                                                                    {itob}                                                                                                                                                                                                                                                                                                                                                  arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: store val_as_bytes%0#0 to l-stack (no copy)                                      val_as_bytes%0#0                                                                                                                                                                                                                                                                                                                                                                                               arc4.abimethod()                                                                                     amm/contract.py:49
    byte 0x151f7c75                                                                                              //                                                                                                                                                                                                                                                    val_as_bytes%0#0,0x151f7c75                                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                                     amm/contract.py:49
    uncover 1                                                                                                    //                                                                                        load val_as_bytes%0#0 from l-stack (no copy)                                                                                                                0x151f7c75,val_as_bytes%0#0                                                                                                                                                                                                                                                                                                                             arc4.abimethod()                                                                                     amm/contract.py:49
    concat                                                                                                       //                                                                                                                                                                                                                                                    {concat}                                                                                                                                                                                                                                                                                                                                                arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: store tmp%21#0 to l-stack (no copy)                                              tmp%21#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                                     amm/contract.py:49
    //                                                                                                           virtual: load tmp%21#0 from l-stack (no copy)                                             tmp%21#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod()                                                                                     amm/contract.py:49
    logarc4.abimethod()                                                                                     amm/contract.py:49
    intarc4.abimethod()                                                                                     amm/contract.py:49
    returnarc4.abimethod()                                                                                     amm/contract.py:49

main_mint_route@6:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    //                                                                                                           virtual: store tmp%22#0 to l-stack (no copy)                                              tmp%22#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    //                                                                                                           virtual: load tmp%22#0 from l-stack (no copy)                                             tmp%22#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    //                                                                                                           virtual: store tmp%23#0 to l-stack (no copy)                                              tmp%23#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    //                                                                                                           virtual: load tmp%23#0 from l-stack (no copy)                                             tmp%23#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    assert // OnCompletion is NoOparc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    //                                                                                                           virtual: store tmp%24#0 to l-stack (no copy)                                              tmp%24#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    //                                                                                                           virtual: load tmp%24#0 from l-stack (no copy)                                             tmp%24#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    assert // is not creatingarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%25#0 to l-stack (no copy)                                              tmp%25#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%25#0 from l-stack (no copy)                                             tmp%25#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int 2                                                                                                        //                                                                                                                                                                                                                                                    tmp%25#0,2                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    -                                                                                                            //                                                                                                                                                                                                                                                    {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store awst_tmp%1#0 to l-stack (no copy)                                          awst_tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    dup                                                                                                          //                                                                                        load awst_tmp%1#0 from l-stack (copy)                                                                                                                       awst_tmp%1#0,awst_tmp%1#0                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                                    awst_tmp%1#0,{gtxns}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%26#0 to l-stack (no copy)                                              awst_tmp%1#0,tmp%26#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%26#0 from l-stack (no copy)                                             awst_tmp%1#0,tmp%26#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int axfer                                                                                                    //                                                                                                                                                                                                                                                    awst_tmp%1#0,tmp%26#0,axfer                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    ==                                                                                                           //                                                                                                                                                                                                                                                    awst_tmp%1#0,{==}                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%27#0 to l-stack (no copy)                                              awst_tmp%1#0,tmp%27#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%27#0 from l-stack (no copy)                                             awst_tmp%1#0,tmp%27#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                                    awst_tmp%1#0                                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                                    awst_tmp%1#0,{txn}                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%28#0 to l-stack (no copy)                                              awst_tmp%1#0,tmp%28#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%28#0 from l-stack (no copy)                                             awst_tmp%1#0,tmp%28#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int 1                                                                                                        //                                                                                                                                                                                                                                                    awst_tmp%1#0,tmp%28#0,1                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    -                                                                                                            //                                                                                                                                                                                                                                                    awst_tmp%1#0,{-}                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store awst_tmp%2#0 to l-stack (no copy)                                          awst_tmp%1#0,awst_tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    dup                                                                                                          //                                                                                        load awst_tmp%2#0 from l-stack (copy)                                                                                                                       awst_tmp%1#0,awst_tmp%2#0,awst_tmp%2#0                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,{gtxns}                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%29#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%29#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%29#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%29#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int axfer                                                                                                    //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%29#0,axfer                                                                                                                                                                                                                                                                                                                class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    ==                                                                                                           //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,{==}                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%30#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%30#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%30#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%30#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,{txna}                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%31#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%31#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%31#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%31#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,{btoi}                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%32#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%32#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%32#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%32#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,{txnas}                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%33#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0                                                                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,{txna}                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%34#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%34#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%34#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%34#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,{btoi}                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%35#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%35#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%35#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%35#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,{txnas}                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%36#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0                                                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 3                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,{txna}                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%37#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%37#0                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%37#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%37#0                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,{btoi}                                                                                                                                                                                                                                                                                                      class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%38#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%38#0                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%38#0 from l-stack (no copy)                                             awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%38#0                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,{txnas}                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%39#0 to l-stack (no copy)                                              awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%39#0                                                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    uncover 4                                                                                                    //                                                                                        load awst_tmp%1#0 from l-stack (no copy)                                                                                                                    awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%39#0,awst_tmp%1#0                                                                                                                                                                                                                                                                                                    arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    uncover 4                                                                                                    //                                                                                        load awst_tmp%2#0 from l-stack (no copy)                                                                                                                    tmp%33#0,tmp%36#0,tmp%39#0,awst_tmp%1#0,awst_tmp%2#0                                                                                                                                                                                                                                                                                                    arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    uncover 4                                                                                                    //                                                                                        load tmp%33#0 from l-stack (no copy)                                                                                                                        tmp%36#0,tmp%39#0,awst_tmp%1#0,awst_tmp%2#0,tmp%33#0                                                                                                                                                                                                                                                                                                    arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    uncover 4                                                                                                    //                                                                                        load tmp%36#0 from l-stack (no copy)                                                                                                                        tmp%39#0,awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0                                                                                                                                                                                                                                                                                                    arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    uncover 4                                                                                                    //                                                                                        load tmp%39#0 from l-stack (no copy)                                                                                                                        awst_tmp%1#0,awst_tmp%2#0,tmp%33#0,tmp%36#0,tmp%39#0                                                                                                                                                                                                                                                                                                    arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    callsub mintarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    intarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87
    returnarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:81-87

main_burn_route@7:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    //                                                                                                           virtual: store tmp%40#0 to l-stack (no copy)                                              tmp%40#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    //                                                                                                           virtual: load tmp%40#0 from l-stack (no copy)                                             tmp%40#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    //                                                                                                           virtual: store tmp%41#0 to l-stack (no copy)                                              tmp%41#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    //                                                                                                           virtual: load tmp%41#0 from l-stack (no copy)                                             tmp%41#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    assert // OnCompletion is NoOparc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    //                                                                                                           virtual: store tmp%42#0 to l-stack (no copy)                                              tmp%42#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    //                                                                                                           virtual: load tmp%42#0 from l-stack (no copy)                                             tmp%42#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    assert // is not creatingarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%43#0 to l-stack (no copy)                                              tmp%43#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%43#0 from l-stack (no copy)                                             tmp%43#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int 1                                                                                                        //                                                                                                                                                                                                                                                    tmp%43#0,1                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    -                                                                                                            //                                                                                                                                                                                                                                                    {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store awst_tmp%3#0 to l-stack (no copy)                                          awst_tmp%3#0                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    dup                                                                                                          //                                                                                        load awst_tmp%3#0 from l-stack (copy)                                                                                                                       awst_tmp%3#0,awst_tmp%3#0                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                                    awst_tmp%3#0,{gtxns}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%44#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%44#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%44#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%44#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int axfer                                                                                                    //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%44#0,axfer                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    ==                                                                                                           //                                                                                                                                                                                                                                                    awst_tmp%3#0,{==}                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%45#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%45#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%45#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%45#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                                    awst_tmp%3#0                                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%3#0,{txna}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%46#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%46#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%46#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%46#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%3#0,{btoi}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%47#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%47#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%47#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%47#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%3#0,{txnas}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%48#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%48#0,{txna}                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%49#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0,tmp%49#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%49#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%48#0,tmp%49#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%48#0,{btoi}                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%50#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0,tmp%50#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%50#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%48#0,tmp%50#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%48#0,{txnas}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%51#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0,tmp%51#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 3                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%48#0,tmp%51#0,{txna}                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%52#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0,tmp%51#0,tmp%52#0                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%52#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%48#0,tmp%51#0,tmp%52#0                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%48#0,tmp%51#0,{btoi}                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%53#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0,tmp%51#0,tmp%53#0                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%53#0 from l-stack (no copy)                                             awst_tmp%3#0,tmp%48#0,tmp%51#0,tmp%53#0                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%3#0,tmp%48#0,tmp%51#0,{txnas}                                                                                                                                                                                                                                                                                                                  class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%54#0 to l-stack (no copy)                                              awst_tmp%3#0,tmp%48#0,tmp%51#0,tmp%54#0                                                                                                                                                                                                                                                                                                                                                                        class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    uncover 3                                                                                                    //                                                                                        load awst_tmp%3#0 from l-stack (no copy)                                                                                                                    tmp%48#0,tmp%51#0,tmp%54#0,awst_tmp%3#0                                                                                                                                                                                                                                                                                                                 arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    uncover 3                                                                                                    //                                                                                        load tmp%48#0 from l-stack (no copy)                                                                                                                        tmp%51#0,tmp%54#0,awst_tmp%3#0,tmp%48#0                                                                                                                                                                                                                                                                                                                 arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    uncover 3                                                                                                    //                                                                                        load tmp%51#0 from l-stack (no copy)                                                                                                                        tmp%54#0,awst_tmp%3#0,tmp%48#0,tmp%51#0                                                                                                                                                                                                                                                                                                                 arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    uncover 3                                                                                                    //                                                                                        load tmp%54#0 from l-stack (no copy)                                                                                                                        awst_tmp%3#0,tmp%48#0,tmp%51#0,tmp%54#0                                                                                                                                                                                                                                                                                                                 arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    callsub burnarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    int 1                                                                                                        //                                                                                                                                                                                                                                                    1                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153
    returnarc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": "... amm/contract.py:147-153

main_swap_route@8:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    //                                                                                                           virtual: store tmp%55#0 to l-stack (no copy)                                              tmp%55#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    //                                                                                                           virtual: load tmp%55#0 from l-stack (no copy)                                             tmp%55#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    //                                                                                                           virtual: store tmp%56#0 to l-stack (no copy)                                              tmp%56#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    //                                                                                                           virtual: load tmp%56#0 from l-stack (no copy)                                             tmp%56#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    assert // OnCompletion is NoOparc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    //                                                                                                           virtual: store tmp%57#0 to l-stack (no copy)                                              tmp%57#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    //                                                                                                           virtual: load tmp%57#0 from l-stack (no copy)                                             tmp%57#0                                                                                                                                                                                                                                                                                                                                                                                                       arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    assert // is not creatingarc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    txn GroupIndex                                                                                               //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%58#0 to l-stack (no copy)                                              tmp%58#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%58#0 from l-stack (no copy)                                             tmp%58#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int 1                                                                                                        //                                                                                                                                                                                                                                                    tmp%58#0,1                                                                                                                                                                                                                                                                                                                                              class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    -                                                                                                            //                                                                                                                                                                                                                                                    {-}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store awst_tmp%4#0 to l-stack (no copy)                                          awst_tmp%4#0                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    dup                                                                                                          //                                                                                        load awst_tmp%4#0 from l-stack (copy)                                                                                                                       awst_tmp%4#0,awst_tmp%4#0                                                                                                                                                                                                                                                                                                                               class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    gtxns TypeEnum                                                                                               //                                                                                                                                                                                                                                                    awst_tmp%4#0,{gtxns}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%59#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%59#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%59#0 from l-stack (no copy)                                             awst_tmp%4#0,tmp%59#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    int axfer                                                                                                    //                                                                                                                                                                                                                                                    awst_tmp%4#0,tmp%59#0,axfer                                                                                                                                                                                                                                                                                                                             class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    ==                                                                                                           //                                                                                                                                                                                                                                                    awst_tmp%4#0,{==}                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%60#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%60#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%60#0 from l-stack (no copy)                                             awst_tmp%4#0,tmp%60#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // transaction type is axfer                                                                          //                                                                                                                                                                                                                                                    awst_tmp%4#0                                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 1                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%4#0,{txna}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%61#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%61#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%61#0 from l-stack (no copy)                                             awst_tmp%4#0,tmp%61#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%4#0,{btoi}                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%62#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%62#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%62#0 from l-stack (no copy)                                             awst_tmp%4#0,tmp%62#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%4#0,{txnas}                                                                                                                                                                                                                                                                                                                                    class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%63#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%63#0                                                                                                                                                                                                                                                                                                                                                                                          class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txna ApplicationArgs 2                                                                                       //                                                                                                                                                                                                                                                    awst_tmp%4#0,tmp%63#0,{txna}                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%64#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%63#0,tmp%64#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%64#0 from l-stack (no copy)                                             awst_tmp%4#0,tmp%63#0,tmp%64#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    btoi                                                                                                         //                                                                                                                                                                                                                                                    awst_tmp%4#0,tmp%63#0,{btoi}                                                                                                                                                                                                                                                                                                                            class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%65#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%63#0,tmp%65#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%65#0 from l-stack (no copy)                                             awst_tmp%4#0,tmp%63#0,tmp%65#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txnas Assets                                                                                                 //                                                                                                                                                                                                                                                    awst_tmp%4#0,tmp%63#0,{txnas}                                                                                                                                                                                                                                                                                                                           class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%66#0 to l-stack (no copy)                                              awst_tmp%4#0,tmp%63#0,tmp%66#0                                                                                                                                                                                                                                                                                                                                                                                 class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    uncover 2                                                                                                    //                                                                                        load awst_tmp%4#0 from l-stack (no copy)                                                                                                                    tmp%63#0,tmp%66#0,awst_tmp%4#0                                                                                                                                                                                                                                                                                                                          arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    uncover 2                                                                                                    //                                                                                        load tmp%63#0 from l-stack (no copy)                                                                                                                        tmp%66#0,awst_tmp%4#0,tmp%63#0                                                                                                                                                                                                                                                                                                                          arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    uncover 2                                                                                                    //                                                                                        load tmp%66#0 from l-stack (no copy)                                                                                                                        awst_tmp%4#0,tmp%63#0,tmp%66#0                                                                                                                                                                                                                                                                                                                          arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    callsub swaparc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    intarc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209
    return                                                                                                       //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)                 amm/contract.py:204-209

main_bare_routing@11:
    txn OnCompletion                                                                                             //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%67#0 to l-stack (no copy)                                              tmp%67#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%67#0 from l-stack (no copy)                                             tmp%67#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store not%tmp%67#0 to l-stack (no copy)                                          not%tmp%67#0                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load not%tmp%67#0 from l-stack (no copy)                                         not%tmp%67#0                                                                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // reject transactionclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    txn ApplicationID                                                                                            //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%68#0 to l-stack (no copy)                                              tmp%68#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%68#0 from l-stack (no copy)                                             tmp%68#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    !                                                                                                            //                                                                                                                                                                                                                                                    {!}                                                                                                                                                                                                                                                                                                                                                     class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: store tmp%69#0 to l-stack (no copy)                                              tmp%69#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    //                                                                                                           virtual: load tmp%69#0 from l-stack (no copy)                                             tmp%69#0                                                                                                                                                                                                                                                                                                                                                                                                       class ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    assert // is creatingclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    intclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27
    returnclass ConstantProductAMM(ARC4Contract):                                                              amm/contract.py:27


// examples.amm.contract.ConstantProductAMM.set_governor(new_governor: bytes) -> void:
set_governor:
    proto 1 0                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) new_governor#0 |                                                                                                                                                                                                                                                                                                                                    @arc4.abimethod()\ndef set_governor(self, new_governor: Account) -> None:                            amm/contract.py:43-44

set_governor_block@0:
    callsub _check_is_governor                                                                                   //                                                                                                                                                                                                                                                    (𝕡) new_governor#0 |                                                                                                                                                                                                                                                                                                                                    self._check_is_governor()                                                                            amm/contract.py:46
    byte "governor"                                                                                              //                                                                                                                                                                                                                                                    (𝕡) new_governor#0 | "governor"                                                                                                                                                                                                                                                                                                                         self.governor                                                                                        amm/contract.py:47
    frame_dig -1                                                                                                 //                                                                                        load new_governor#0 from parameters                                                                                                                         (𝕡) new_governor#0 | "governor",new_governor#0                                                                                                                                                                                                                                                                                                          self.governor = new_governor                                                                         amm/contract.py:47
    app_global_put                                                                                               //                                                                                                                                                                                                                                                    (𝕡) new_governor#0 |                                                                                                                                                                                                                                                                                                                                    self.governor = new_governor                                                                         amm/contract.py:47
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
_check_is_governor:
    protosubroutine\ndef _check_is_governor(self) -> None:                                                   amm/contract.py:262-263

_check_is_governor_block@0:
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   Txn.sender                                                                                           amm/contract.py:265
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        Txn.sender                                                                                           amm/contract.py:265
    int 0                                                                                                        //                                                                                                                                                                                                                                                    tmp%0#0,0                                                                                                                                                                                                                                                                                                                                               self.governor                                                                                        amm/contract.py:265
    byte "governor"                                                                                              //                                                                                                                                                                                                                                                    tmp%0#0,0,"governor"                                                                                                                                                                                                                                                                                                                                    self.governor                                                                                        amm/contract.py:265
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.governor                                                                                        amm/contract.py:265
    //                                                                                                           virtual: store governor_exists%0#0 to l-stack (no copy)                                   tmp%0#0,governor_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                              self.governor                                                                                        amm/contract.py:265
    //                                                                                                           virtual: store governor_value%0#0 to l-stack (no copy)                                    tmp%0#0,governor_value%0#0,governor_exists%0#0                                                                                                                                                                                                                                                                                                                                                                 self.governor                                                                                        amm/contract.py:265
    //                                                                                                           virtual: load governor_exists%0#0 from l-stack (no copy)                                  tmp%0#0,governor_value%0#0,governor_exists%0#0                                                                                                                                                                                                                                                                                                                                                                 self.governor                                                                                        amm/contract.py:265
    assert // check governor exists                                                                              //                                                                                                                                                                                                                                                    tmp%0#0,governor_value%0#0                                                                                                                                                                                                                                                                                                                              self.governor                                                                                        amm/contract.py:265
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              governor_value%0#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                     Txn.sender == self.governor                                                                          amm/contract.py:265
    //                                                                                                           virtual: load governor_value%0#0 from l-stack (no copy)                                   tmp%0#0,governor_value%0#0                                                                                                                                                                                                                                                                                                                                                                                     Txn.sender == self.governor                                                                          amm/contract.py:265
    ==                                                                                                           //                                                                                                                                                                                                                                                    {==}                                                                                                                                                                                                                                                                                                                                                    Txn.sender == self.governor                                                                          amm/contract.py:265
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                        Txn.sender == self.governor                                                                          amm/contract.py:265
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                        assert (\nTxn.sender == self.governor\n), "Only the account set in global_state.governor may call... amm/contract.py:264-266
    assert // Only the account set in global_state.governor may call this methodassert (\nTxn.sender == self.governor\n), "Only the account set in global_state.governor may call... amm/contract.py:264-266
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.bootstrap(seed: uint64, a_asset: uint64, b_asset: uint64) -> uint64:
bootstrap:
    proto 3 1                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        @arc4.abimethod()\ndef bootstrap(self, seed: gtxn.PaymentTransaction, a_asset: Asset, b_asset: As... amm/contract.py:49-50

bootstrap_block@0:
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.pool_token                                                                                      amm/contract.py:66
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                                         self.pool_token                                                                                      amm/contract.py:66
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:66
    //                                                                                                           virtual: store pool_token_exists%0#0 to l-stack (no copy)                                 (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                   self.pool_token                                                                                      amm/contract.py:66
    //                                                                                                           virtual: store pool_token_value%0#0 to l-stack (no copy)                                  (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:66
    //                                                                                                           virtual: load pool_token_exists%0#0 from l-stack (no copy)                                (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:66
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%0#0                                                                                                                                                                                                                                                                                                   self.pool_token                                                                                      amm/contract.py:66
    //                                                                                                           virtual: load pool_token_value%0#0 from l-stack (no copy)                                 (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%0#0                                                                                                                                                                                                                                                                                                                                                          not self.pool_token                                                                                  amm/contract.py:66
    !                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {!}                                                                                                                                                                                                                                                                                                                    not self.pool_token                                                                                  amm/contract.py:66
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                       not self.pool_token                                                                                  amm/contract.py:66
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                       assert not self.pool_token, "application has already been bootstrapped"                              amm/contract.py:66
    assert // application has already been bootstrapped                                                          //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert not self.pool_token, "application has already been bootstrapped"                              amm/contract.py:66
    callsub _check_is_governor                                                                                   //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self._check_is_governor()                                                                            amm/contract.py:67
    global GroupSize                                                                                             //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {global}                                                                                                                                                                                                                                                                                                               Global.group_size                                                                                    amm/contract.py:68
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                                                       Global.group_size                                                                                    amm/contract.py:68
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                                                       Global.group_size == 2, "group size not 2"                                                           amm/contract.py:68
    int 2                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%1#0,2                                                                                                                                                                                                                                                                                                              2                                                                                                    amm/contract.py:68
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                                   Global.group_size == 2, "group size not 2"                                                           amm/contract.py:68
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                       Global.group_size == 2, "group size not 2"                                                           amm/contract.py:68
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                       assert Global.group_size == 2, "group size not 2"                                                    amm/contract.py:68
    assert // group size not 2                                                                                   //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert Global.group_size == 2, "group size not 2"                                                    amm/contract.py:68
    frame_dig -3                                                                                                 //                                                                                        load seed#0 from parameters                                                                                                                                 (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                                                                                                                                 seed.receiver                                                                                        amm/contract.py:69
    gtxns Receiver                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                                                seed.receiver                                                                                        amm/contract.py:69
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                                                                       seed.receiver                                                                                        amm/contract.py:69
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0,{global}                                                                                                                                                                                                                                                                                                       Global.current_application_address                                                                   amm/contract.py:69
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0,tmp%4#0                                                                                                                                                                                                                                                                                                                                                               Global.current_application_address                                                                   amm/contract.py:69
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%4#0,tmp%3#0                                                                                                                                                                                                                                                                                                                                                               seed.receiver == Global.current_application_address, "receiver not app address"                      amm/contract.py:69
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%3#0,tmp%4#0                                                                                                                                                                                                                                                                                                                                                               seed.receiver == Global.current_application_address, "receiver not app address"                      amm/contract.py:69
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                                   seed.receiver == Global.current_application_address, "receiver not app address"                      amm/contract.py:69
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                                       seed.receiver == Global.current_application_address, "receiver not app address"                      amm/contract.py:69
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                                       assert seed.receiver == Global.current_application_address, "receiver not app address"               amm/contract.py:69
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert seed.receiver == Global.current_application_address, "receiver not app address"               amm/contract.py:69
    frame_dig -3                                                                                                 //                                                                                        load seed#0 from parameters                                                                                                                                 (𝕡) seed#0,a_asset#0,b_asset#0 | seed#0                                                                                                                                                                                                                                                                                                                 seed.amount                                                                                          amm/contract.py:71
    gtxns Amount                                                                                                 //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                                                seed.amount                                                                                          amm/contract.py:71
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                                                                       seed.amount                                                                                          amm/contract.py:71
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                                                                       seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                        amm/contract.py:71
    int 300000                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%6#0,300000                                                                                                                                                                                                                                                                                                         300_000                                                                                              amm/contract.py:71
    >=                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {>=}                                                                                                                                                                                                                                                                                                                   seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                        amm/contract.py:71
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%7#0                                                                                                                                                                                                                                                                                                                                                                       seed.amount >= 300_000, "amount minimum not met"  # 0.3 Algos                                        amm/contract.py:71
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%7#0                                                                                                                                                                                                                                                                                                                                                                       assert seed.amount >= 300_000, "amount minimum not met"                                              amm/contract.py:71
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert seed.amount >= 300_000, "amount minimum not met"                                              amm/contract.py:71
    frame_dig -2                                                                                                 //                                                                                        load a_asset#0 from parameters                                                                                                                              (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0                                                                                                                                                                                                                                                                                                              a_asset.id < b_asset.id, "asset a must be less than asset b"                                         amm/contract.py:72
    frame_dig -1                                                                                                 //                                                                                        load b_asset#0 from parameters                                                                                                                              (𝕡) seed#0,a_asset#0,b_asset#0 | a_asset#0,b_asset#0                                                                                                                                                                                                                                                                                                    a_asset.id < b_asset.id, "asset a must be less than asset b"                                         amm/contract.py:72
    <                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {<}                                                                                                                                                                                                                                                                                                                    a_asset.id < b_asset.id, "asset a must be less than asset b"                                         amm/contract.py:72
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                                               (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                                       a_asset.id < b_asset.id, "asset a must be less than asset b"                                         amm/contract.py:72
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                                              (𝕡) seed#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                                                       assert a_asset.id < b_asset.id, "asset a must be less than asset b"                                  amm/contract.py:72
    assert // asset a must be less than asset b                                                                  //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        assert a_asset.id < b_asset.id, "asset a must be less than asset b"                                  amm/contract.py:72
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a"                                                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:73
    frame_dig -2                                                                                                 //                                                                                        load a_asset#0 from parameters                                                                                                                              (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_a",a_asset#0                                                                                                                                                                                                                                                                                                    self.asset_a = a_asset                                                                               amm/contract.py:73
    app_global_put                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self.asset_a = a_asset                                                                               amm/contract.py:73
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b"                                                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:74
    frame_dig -1                                                                                                 //                                                                                        load b_asset#0 from parameters                                                                                                                              (𝕡) seed#0,a_asset#0,b_asset#0 | "asset_b",b_asset#0                                                                                                                                                                                                                                                                                                    self.asset_b = b_asset                                                                               amm/contract.py:74
    app_global_put                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self.asset_b = b_asset                                                                               amm/contract.py:74
    callsub _create_pool_token                                                                                   //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {_create_pool_token}                                                                                                                                                                                                                                                                                                   self._create_pool_token()                                                                            amm/contract.py:75
    //                                                                                                           virtual: store new_state_value%0#0 to l-stack (no copy)                                   (𝕡) seed#0,a_asset#0,b_asset#0 | new_state_value%0#0                                                                                                                                                                                                                                                                                                                                                           self._create_pool_token()                                                                            amm/contract.py:75
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | new_state_value%0#0,"pool_token"                                                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:75
    uncover 1                                                                                                    //                                                                                        load new_state_value%0#0 from l-stack (no copy)                                                                                                             (𝕡) seed#0,a_asset#0,b_asset#0 | "pool_token",new_state_value%0#0                                                                                                                                                                                                                                                                                       self.pool_token = self._create_pool_token()                                                          amm/contract.py:75
    app_global_put                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self.pool_token = self._create_pool_token()                                                          amm/contract.py:75
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.asset_a                                                                                         amm/contract.py:77
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:77
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.asset_a                                                                                         amm/contract.py:77
    //                                                                                                           virtual: store asset_a_exists%0#0 to l-stack (no copy)                                    (𝕡) seed#0,a_asset#0,b_asset#0 | asset_a_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                      self.asset_a                                                                                         amm/contract.py:77
    //                                                                                                           virtual: store asset_a_value%0#0 to l-stack (no copy)                                     (𝕡) seed#0,a_asset#0,b_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:77
    //                                                                                                           virtual: load asset_a_exists%0#0 from l-stack (no copy)                                   (𝕡) seed#0,a_asset#0,b_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:77
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | asset_a_value%0#0                                                                                                                                                                                                                                                                                                      self.asset_a                                                                                         amm/contract.py:77
    //                                                                                                           virtual: load asset_a_value%0#0 from l-stack (no copy)                                    (𝕡) seed#0,a_asset#0,b_asset#0 | asset_a_value%0#0                                                                                                                                                                                                                                                                                                                                                             self._do_opt_in(self.asset_a)                                                                        amm/contract.py:77
    callsub _do_opt_in                                                                                           //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self._do_opt_in(self.asset_a)                                                                        amm/contract.py:77
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.asset_b                                                                                         amm/contract.py:78
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:78
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:78
    //                                                                                                           virtual: store asset_b_exists%0#0 to l-stack (no copy)                                    (𝕡) seed#0,a_asset#0,b_asset#0 | asset_b_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                      self.asset_b                                                                                         amm/contract.py:78
    //                                                                                                           virtual: store asset_b_value%0#0 to l-stack (no copy)                                     (𝕡) seed#0,a_asset#0,b_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:78
    //                                                                                                           virtual: load asset_b_exists%0#0 from l-stack (no copy)                                   (𝕡) seed#0,a_asset#0,b_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:78
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | asset_b_value%0#0                                                                                                                                                                                                                                                                                                      self.asset_b                                                                                         amm/contract.py:78
    //                                                                                                           virtual: load asset_b_value%0#0 from l-stack (no copy)                                    (𝕡) seed#0,a_asset#0,b_asset#0 | asset_b_value%0#0                                                                                                                                                                                                                                                                                                                                                             self._do_opt_in(self.asset_b)                                                                        amm/contract.py:78
    callsub _do_opt_in                                                                                           //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                        self._do_opt_in(self.asset_b)                                                                        amm/contract.py:78
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                                      self.pool_token                                                                                      amm/contract.py:79
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                                         self.pool_token                                                                                      amm/contract.py:79
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:79
    //                                                                                                           virtual: store pool_token_exists%1#0 to l-stack (no copy)                                 (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                   self.pool_token                                                                                      amm/contract.py:79
    //                                                                                                           virtual: store pool_token_value%1#0 to l-stack (no copy)                                  (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%1#0,pool_token_exists%1#0                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:79
    //                                                                                                           virtual: load pool_token_exists%1#0 from l-stack (no copy)                                (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%1#0,pool_token_exists%1#0                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:79
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%1#0                                                                                                                                                                                                                                                                                                   self.pool_token                                                                                      amm/contract.py:79
    //                                                                                                           virtual: load pool_token_value%1#0 from l-stack (no copy)                                 (𝕡) seed#0,a_asset#0,b_asset#0 | pool_token_value%1#0                                                                                                                                                                                                                                                                                                                                                          return self.pool_token.id                                                                            amm/contract.py:79
    retsub                                                                                                       //                                                                                                                                                                                                                                                    pool_token_value%1#0                                                                                                                                                                                                                                                                                                                                    return self.pool_token.id                                                                            amm/contract.py:79


// examples.amm.contract.ConstantProductAMM._create_pool_token() -> uint64:
_create_pool_token:
    protosubroutine\ndef _create_pool_token(self) -> Asset:                                                  amm/contract.py:268-269

_create_pool_token_block@0:
    itxn_begin                                                                                                   //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            itxn.AssetConfig(\nasset_name=b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name,\n... amm/contract.py:271-279
    int 0                                                                                                        //                                                                                                                                                                                                                                                    0                                                                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:272
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    0,"asset_a"                                                                                                                                                                                                                                                                                                                                             self.asset_a                                                                                         amm/contract.py:272
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                             self.asset_a                                                                                         amm/contract.py:272
    //                                                                                                           virtual: store asset_a_exists%0#0 to l-stack (no copy)                                    asset_a_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:272
    //                                                                                                           virtual: store asset_a_value%0#0 to l-stack (no copy)                                     asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:272
    //                                                                                                           virtual: load asset_a_exists%0#0 from l-stack (no copy)                                   asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:272
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    asset_a_value%0#0                                                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:272
    //                                                                                                           virtual: load asset_a_value%0#0 from l-stack (no copy)                                    asset_a_value%0#0                                                                                                                                                                                                                                                                                                                                                                                              self.asset_a.unit_name                                                                               amm/contract.py:272
    asset_params_get AssetUnitName                                                                               //                                                                                                                                                                                                                                                    {asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                                                                                                                                               self.asset_a.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: store check%0#0 to l-stack (no copy)                                             check%0#0,{asset_params_get}.0                                                                                                                                                                                                                                                                                                                                                                                 self.asset_a.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: store value%0#0 to l-stack (no copy)                                             value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.asset_a.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: load check%0#0 from l-stack (no copy)                                            value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.asset_a.unit_name                                                                               amm/contract.py:272
    assert // asset exists                                                                                       //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               self.asset_a.unit_name                                                                               amm/contract.py:272
    byte "DPT-"                                                                                                  //                                                                                                                                                                                                                                                    value%0#0,"DPT-"                                                                                                                                                                                                                                                                                                                                        b"DPT-"                                                                                              amm/contract.py:272
    uncover 1                                                                                                    //                                                                                        load value%0#0 from l-stack (no copy)                                                                                                                       "DPT-",value%0#0                                                                                                                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name                                                                     amm/contract.py:272
    concat                                                                                                       //                                                                                                                                                                                                                                                    {concat}                                                                                                                                                                                                                                                                                                                                                b"DPT-" + self.asset_a.unit_name                                                                     amm/contract.py:272
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name                                                                     amm/contract.py:272
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name + b"-"                                                              amm/contract.py:272
    byte "-"                                                                                                     //                                                                                                                                                                                                                                                    tmp%0#0,"-"                                                                                                                                                                                                                                                                                                                                             b"-"                                                                                                 amm/contract.py:272
    concat                                                                                                       //                                                                                                                                                                                                                                                    {concat}                                                                                                                                                                                                                                                                                                                                                b"DPT-" + self.asset_a.unit_name + b"-"                                                              amm/contract.py:272
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                                        b"DPT-" + self.asset_a.unit_name + b"-"                                                              amm/contract.py:272
    int 0                                                                                                        //                                                                                                                                                                                                                                                    tmp%1#0,0                                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:272
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    tmp%1#0,0,"asset_b"                                                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:272
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    tmp%1#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:272
    //                                                                                                           virtual: store asset_b_exists%0#0 to l-stack (no copy)                                    tmp%1#0,asset_b_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:272
    //                                                                                                           virtual: store asset_b_value%0#0 to l-stack (no copy)                                     tmp%1#0,asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:272
    //                                                                                                           virtual: load asset_b_exists%0#0 from l-stack (no copy)                                   tmp%1#0,asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:272
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    tmp%1#0,asset_b_value%0#0                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:272
    //                                                                                                           virtual: load asset_b_value%0#0 from l-stack (no copy)                                    tmp%1#0,asset_b_value%0#0                                                                                                                                                                                                                                                                                                                                                                                      self.asset_b.unit_name                                                                               amm/contract.py:272
    asset_params_get AssetUnitName                                                                               //                                                                                                                                                                                                                                                    tmp%1#0,{asset_params_get}.0,{asset_params_get}.1                                                                                                                                                                                                                                                                                                       self.asset_b.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: store check%1#0 to l-stack (no copy)                                             tmp%1#0,check%1#0,{asset_params_get}.0                                                                                                                                                                                                                                                                                                                                                                         self.asset_b.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: store value%1#0 to l-stack (no copy)                                             tmp%1#0,value%1#0,check%1#0                                                                                                                                                                                                                                                                                                                                                                                    self.asset_b.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: load check%1#0 from l-stack (no copy)                                            tmp%1#0,value%1#0,check%1#0                                                                                                                                                                                                                                                                                                                                                                                    self.asset_b.unit_name                                                                               amm/contract.py:272
    assert // asset exists                                                                                       //                                                                                                                                                                                                                                                    tmp%1#0,value%1#0                                                                                                                                                                                                                                                                                                                                       self.asset_b.unit_name                                                                               amm/contract.py:272
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              value%1#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                                                              b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:272
    //                                                                                                           virtual: load value%1#0 from l-stack (no copy)                                            tmp%1#0,value%1#0                                                                                                                                                                                                                                                                                                                                                                                              b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:272
    concat                                                                                                       //                                                                                                                                                                                                                                                    {concat}                                                                                                                                                                                                                                                                                                                                                b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:272
    //                                                                                                           virtual: store inner_txn_params%0%%param_ConfigAssetName_idx_0#0 to l-stack (no copy)     inner_txn_params%0%%param_ConfigAssetName_idx_0#0                                                                                                                                                                                                                                                                                                                                                              b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name                                     amm/contract.py:272
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0,{global}                                                                                                                                                                                                                                                                                              Global.current_application_address                                                                   amm/contract.py:276
    //                                                                                                           virtual: store inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 to l-stack (no copy)  inner_txn_params%0%%param_ConfigAssetName_idx_0#0,inner_txn_params%0%%param_ConfigAssetManager_idx_0#0                                                                                                                                                                                                                                                                                                         Global.current_application_address                                                                   amm/contract.py:276
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0,inner_txn_params%0%%param_ConfigAssetManager_idx_0#0,{global}                                                                                                                                                                                                                                         Global.current_application_address                                                                   amm/contract.py:277
    //                                                                                                           virtual: store inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0 to l-stack (no copy)  inner_txn_params%0%%param_ConfigAssetName_idx_0#0,inner_txn_params%0%%param_ConfigAssetManager_idx_0#0,inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0                                                                                                                                                                                                                                                    Global.current_application_address                                                                   amm/contract.py:277
    //                                                                                                           virtual: load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0 from l-stack (no copy) inner_txn_params%0%%param_ConfigAssetName_idx_0#0,inner_txn_params%0%%param_ConfigAssetManager_idx_0#0,inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0
    itxn_field ConfigAssetReserve                                                                                //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0,inner_txn_params%0%%param_ConfigAssetManager_idx_0#0
    //                                                                                                           virtual: load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 from l-stack (no copy) inner_txn_params%0%%param_ConfigAssetName_idx_0#0,inner_txn_params%0%%param_ConfigAssetManager_idx_0#0
    itxn_field ConfigAssetManager                                                                                //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    int 3                                                                                                        //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0,3                                                                                                                                                                                                                                                                                                     3                                                                                                    amm/contract.py:275
    itxn_field ConfigAssetDecimals                                                                               //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    int 10000000000                                                                                              //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0,10000000000                                                                                                                                                                                                                                                                                           TOTAL_SUPPLY                                                                                         amm/contract.py:274
    itxn_field ConfigAssetTotal                                                                                  //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    byte "dbt"                                                                                                   //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0,"dbt"                                                                                                                                                                                                                                                                                                 b"dbt"                                                                                               amm/contract.py:273
    itxn_field ConfigAssetUnitName                                                                               //                                                                                                                                                                                                                                                    inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    //                                                                                                           virtual: load inner_txn_params%0%%param_ConfigAssetName_idx_0#0 from l-stack (no copy)    inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    itxn_field ConfigAssetName                                                                                   //
    int acfg                                                                                                     //                                                                                                                                                                                                                                                    acfg                                                                                                                                                                                                                                                                                                                                                    itxn.AssetConfig                                                                                     amm/contract.py:271
    itxn_field TypeEnum                                                                                          //
    intitxn.AssetConfig                                                                                     amm/contract.py:271
    itxn_field Fee                                                                                               //
    itxn_submititxn.AssetConfig(\nasset_name=b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name,\n... amm/contract.py:271-279
    itxn CreatedAssetID                                                                                          //                                                                                                                                                                                                                                                    {itxn}                                                                                                                                                                                                                                                                                                                                                  itxn.AssetConfig(\nasset_name=b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name,\n... amm/contract.py:271-280
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                        itxn.AssetConfig(\nasset_name=b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.unit_name,\n... amm/contract.py:271-280
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              tmp%2#0                                                                                                                                                                                                                                                                                                                                                                                                        return (\nitxn.AssetConfig(\nasset_name=b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.un... amm/contract.py:270-281
    retsub                                                                                                       //                                                                                                                                                                                                                                                    tmp%2#0                                                                                                                                                                                                                                                                                                                                                 return (\nitxn.AssetConfig(\nasset_name=b"DPT-" + self.asset_a.unit_name + b"-" + self.asset_b.un... amm/contract.py:270-281


// examples.amm.contract.ConstantProductAMM._do_opt_in(asset: uint64) -> void:
_do_opt_in:
    proto 1 0                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) asset#0 |                                                                                                                                                                                                                                                                                                                                           @subroutine\ndef _do_opt_in(self, asset: Asset) -> None:                                             amm/contract.py:283-284

_do_opt_in_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    (𝕡) asset#0 | {global}                                                                                                                                                                                                                                                                                                                                  Global.current_application_address                                                                   amm/contract.py:286
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                          Global.current_application_address                                                                   amm/contract.py:286
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                          do_asset_transfer(\nreceiver=Global.current_application_address,\nasset=asset,\namount=UInt64(0),\n) amm/contract.py:285-289
    frame_dig -1                                                                                                 //                                                                                        load asset#0 from parameters                                                                                                                                (𝕡) asset#0 | tmp%0#0,asset#0                                                                                                                                                                                                                                                                                                                           do_asset_transfer(\nreceiver=Global.current_application_address,\nasset=asset,\namount=UInt64(0),\n) amm/contract.py:285-289
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) asset#0 | tmp%0#0,asset#0,0                                                                                                                                                                                                                                                                                                                         UInt64(0)                                                                                            amm/contract.py:288
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                                    (𝕡) asset#0 |                                                                                                                                                                                                                                                                                                                                           do_asset_transfer(\nreceiver=Global.current_application_address,\nasset=asset,\namount=UInt64(0),\n) amm/contract.py:285-289
    retsub                                                                                                       //


// examples.amm.contract.do_asset_transfer(receiver: bytes, asset: uint64, amount: uint64) -> void:
do_asset_transfer:
    proto 3 0                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       @subroutine\ndef do_asset_transfer(*, receiver: Account, asset: Asset, amount: UInt64) -> None:      amm/contract.py:356-357

do_asset_transfer_block@0:
    itxn_begin                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       itxn.AssetTransfer(\nxfer_asset=asset,\nasset_amount=amount,\nasset_receiver=receiver,\n).submit()   amm/contract.py:358-362
    frame_dig -3                                                                                                 //                                                                                        load receiver#0 from parameters                                                                                                                             (𝕡) receiver#0,asset#0,amount#0 | receiver#0
    itxn_field AssetReceiver                                                                                     //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |
    frame_dig -1                                                                                                 //                                                                                        load amount#0 from parameters                                                                                                                               (𝕡) receiver#0,asset#0,amount#0 | amount#0
    itxn_field AssetAmount                                                                                       //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |
    frame_dig -2                                                                                                 //                                                                                        load asset#0 from parameters                                                                                                                                (𝕡) receiver#0,asset#0,amount#0 | asset#0
    itxn_field XferAsset                                                                                         //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |
    int axfer                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 | axfer                                                                                                                                                                                                                                                                                                                 itxn.AssetTransfer                                                                                   amm/contract.py:358
    itxn_field TypeEnum                                                                                          //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 | 0                                                                                                                                                                                                                                                                                                                     itxn.AssetTransfer                                                                                   amm/contract.py:358
    itxn_field Fee                                                                                               //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |
    itxn_submit                                                                                                  //                                                                                                                                                                                                                                                    (𝕡) receiver#0,asset#0,amount#0 |                                                                                                                                                                                                                                                                                                                       itxn.AssetTransfer(\nxfer_asset=asset,\nasset_amount=amount,\nasset_receiver=receiver,\n).submit()   amm/contract.py:358-362
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.mint(a_xfer: uint64, b_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
mint:
    proto 5 0                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                @arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": ... amm/contract.py:81-95

mint_block@0:
    callsub _check_bootstrapped                                                                                  //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                self._check_bootstrapped()                                                                           amm/contract.py:111
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                              \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                 \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                    \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    //                                                                                                           virtual: store pool_token_exists%0#0 to l-stack (no copy)                                 (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                           \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    //                                                                                                           virtual: store pool_token_value%0#0 to l-stack (no copy)                                  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                            \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    //                                                                                                           virtual: load pool_token_exists%0#0 from l-stack (no copy)                                (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                            \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0                                                                                                                                                                                                                                                                           \nassert pool_asset == self.pool_token                                                               amm/contract.py:113-114
    frame_dig -3                                                                                                 //                                                                                        load pool_asset#0 from parameters                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_asset#0                                                                                                                                                                                                                                                              formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:113-114
    uncover 1                                                                                                    //                                                                                        load pool_token_value%0#0 from l-stack (no copy)                                                                                                            (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_asset#0,pool_token_value%0#0                                                                                                                                                                                                                                                              formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:113-114
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:113-114
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                               formed mint\nassert pool_asset == self.pool_token                                                    amm/contract.py:113-114
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                               # well-formed mint\nassert pool_asset == self.pool_token, "asset pool incorrect"                     amm/contract.py:113-114
    assert // asset pool incorrect                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                # well-formed mint\nassert pool_asset == self.pool_token, "asset pool incorrect"                     amm/contract.py:113-114
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:115
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:115
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:115
    //                                                                                                           virtual: store asset_a_exists%0#0 to l-stack (no copy)                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:115
    //                                                                                                           virtual: store asset_a_value%0#0 to l-stack (no copy)                                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                  self.asset_a                                                                                         amm/contract.py:115
    //                                                                                                           virtual: load asset_a_exists%0#0 from l-stack (no copy)                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                  self.asset_a                                                                                         amm/contract.py:115
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:115
    frame_dig -2                                                                                                 //                                                                                        load a_asset#0 from parameters                                                                                                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0,a_asset#0                                                                                                                                                                                                                                                                    a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:115
    uncover 1                                                                                                    //                                                                                        load asset_a_value%0#0 from l-stack (no copy)                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_asset#0,asset_a_value%0#0                                                                                                                                                                                                                                                                    a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:115
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:115
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                               a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:115
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                               assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:115
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:115
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:116
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:116
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:116
    //                                                                                                           virtual: store asset_b_exists%0#0 to l-stack (no copy)                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:116
    //                                                                                                           virtual: store asset_b_value%0#0 to l-stack (no copy)                                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:116
    //                                                                                                           virtual: load asset_b_exists%0#0 from l-stack (no copy)                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:116
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:116
    frame_dig -1                                                                                                 //                                                                                        load b_asset#0 from parameters                                                                                                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0,b_asset#0                                                                                                                                                                                                                                                                    b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:116
    uncover 1                                                                                                    //                                                                                        load asset_b_value%0#0 from l-stack (no copy)                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_asset#0,asset_b_value%0#0                                                                                                                                                                                                                                                                    b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:116
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:116
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                               b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:116
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                               assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:116
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:116
    frame_dig -5                                                                                                 //                                                                                        load a_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.sender                                                                                        amm/contract.py:117
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.sender                                                                                        amm/contract.py:117
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                                               a_xfer.sender                                                                                        amm/contract.py:117
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0,{txn}                                                                                                                                                                                                                                                                                  Txn.sender                                                                                           amm/contract.py:117
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0,tmp%4#0                                                                                                                                                                                                                                                                                                                                       Txn.sender                                                                                           amm/contract.py:117
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%4#0,tmp%3#0                                                                                                                                                                                                                                                                                                                                       a_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:117
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0,tmp%4#0                                                                                                                                                                                                                                                                                                                                       a_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:117
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:117
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                               a_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:117
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                               assert a_xfer.sender == Txn.sender, "sender invalid"                                                 amm/contract.py:117
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert a_xfer.sender == Txn.sender, "sender invalid"                                                 amm/contract.py:117
    frame_dig -4                                                                                                 //                                                                                        load b_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_xfer#0                                                                                                                                                                                                                                                                                       b_xfer.sender                                                                                        amm/contract.py:118
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        b_xfer.sender                                                                                        amm/contract.py:118
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                                               b_xfer.sender                                                                                        amm/contract.py:118
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,{txn}                                                                                                                                                                                                                                                                                  Txn.sender                                                                                           amm/contract.py:118
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%7#0                                                                                                                                                                                                                                                                                                                                       Txn.sender                                                                                           amm/contract.py:118
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%7#0,tmp%6#0                                                                                                                                                                                                                                                                                                                                       b_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:118
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%7#0                                                                                                                                                                                                                                                                                                                                       b_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:118
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           b_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:118
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                               b_xfer.sender == Txn.sender, "sender invalid"                                                        amm/contract.py:118
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%8#0                                                                                                                                                                                                                                                                                                                                               assert b_xfer.sender == Txn.sender, "sender invalid"                                                 amm/contract.py:118
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert b_xfer.sender == Txn.sender, "sender invalid"                                                 amm/contract.py:118
    frame_dig -5                                                                                                 //                                                                                        load a_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.asset_receiver                                                                                amm/contract.py:122
    gtxns AssetReceiver                                                                                          //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.asset_receiver                                                                                amm/contract.py:122
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0                                                                                                                                                                                                                                                                                                                                               a_xfer.asset_receiver                                                                                amm/contract.py:122
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,{global}                                                                                                                                                                                                                                                                               Global.current_application_address                                                                   amm/contract.py:122
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                      Global.current_application_address                                                                   amm/contract.py:122
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%10#0,tmp%9#0                                                                                                                                                                                                                                                                                                                                      a_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:122
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                      a_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:122
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:122
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                                              a_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:122
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%11#0                                                                                                                                                                                                                                                                                                                                              # valid asset a xfer\nassert (\na_xfer.asset_receiver == Global.current_application_address\n), "... amm/contract.py:120-123
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                # valid asset a xfer\nassert (\na_xfer.asset_receiver == Global.current_application_address\n), "... amm/contract.py:120-123
    frame_dig -5                                                                                                 //                                                                                        load a_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.xfer_asset                                                                                    amm/contract.py:124
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.xfer_asset                                                                                    amm/contract.py:124
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0                                                                                                                                                                                                                                                                                                                                              a_xfer.xfer_asset                                                                                    amm/contract.py:124
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,0                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:124
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,0,"asset_a"                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:124
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:124
    //                                                                                                           virtual: store asset_a_exists%1#0 to l-stack (no copy)                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,asset_a_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:124
    //                                                                                                           virtual: store asset_a_value%1#0 to l-stack (no copy)                                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,asset_a_value%1#0,asset_a_exists%1#0                                                                                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:124
    //                                                                                                           virtual: load asset_a_exists%1#0 from l-stack (no copy)                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,asset_a_value%1#0,asset_a_exists%1#0                                                                                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:124
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,asset_a_value%1#0                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:124
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%1#0,tmp%12#0                                                                                                                                                                                                                                                                                                                            a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:124
    //                                                                                                           virtual: load asset_a_value%1#0 from l-stack (no copy)                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%12#0,asset_a_value%1#0                                                                                                                                                                                                                                                                                                                            a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:124
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                           a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:124
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%13#0                                                                                                                                                                                                                                                                                                                                              a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                               amm/contract.py:124
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%13#0                                                                                                                                                                                                                                                                                                                                              assert a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                        amm/contract.py:124
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                assert a_xfer.xfer_asset == self.asset_a, "asset a incorrect"                                        amm/contract.py:124
    frame_dig -5                                                                                                 //                                                                                        load a_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_xfer#0                                                                                                                                                                                                                                                                                       a_xfer.asset_amount                                                                                  amm/contract.py:125
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                        a_xfer.asset_amount                                                                                  amm/contract.py:125
    //                                                                                                           virtual: store tmp%14#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0                                                                                                                                                                                                                                                                                                                                              a_xfer.asset_amount                                                                                  amm/contract.py:125
    dup                                                                                                          //                                                                                        load tmp%14#0 from l-stack (copy)                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%14#0                                                                                                                                                                                                                                                                              assert a_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:125
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0                                                                                                                                                                                                                                                                                       assert a_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:125
    frame_dig -4                                                                                                 //                                                                                        load b_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,b_xfer#0                                                                                                                                                                                                                                                                              b_xfer.asset_receiver                                                                                amm/contract.py:129
    gtxns AssetReceiver                                                                                          //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{gtxns}                                                                                                                                                                                                                                                                               b_xfer.asset_receiver                                                                                amm/contract.py:129
    //                                                                                                           virtual: store tmp%16#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%16#0                                                                                                                                                                                                                                                                                                                                     b_xfer.asset_receiver                                                                                amm/contract.py:129
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%16#0,{global}                                                                                                                                                                                                                                                                     Global.current_application_address                                                                   amm/contract.py:129
    //                                                                                                           virtual: store tmp%17#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%16#0,tmp%17#0                                                                                                                                                                                                                                                                                                                            Global.current_application_address                                                                   amm/contract.py:129
    //                                                                                                           virtual: load tmp%16#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%17#0,tmp%16#0                                                                                                                                                                                                                                                                                                                            b_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:129
    //                                                                                                           virtual: load tmp%17#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%16#0,tmp%17#0                                                                                                                                                                                                                                                                                                                            b_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:129
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{==}                                                                                                                                                                                                                                                                                  b_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:129
    //                                                                                                           virtual: store tmp%18#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                     b_xfer.asset_receiver == Global.current_application_address                                          amm/contract.py:129
    //                                                                                                           virtual: load tmp%18#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                     # valid asset b xfer\nassert (\nb_xfer.asset_receiver == Global.current_application_address\n), "... amm/contract.py:127-130
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0                                                                                                                                                                                                                                                                                       # valid asset b xfer\nassert (\nb_xfer.asset_receiver == Global.current_application_address\n), "... amm/contract.py:127-130
    frame_dig -4                                                                                                 //                                                                                        load b_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,b_xfer#0                                                                                                                                                                                                                                                                              b_xfer.xfer_asset                                                                                    amm/contract.py:131
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{gtxns}                                                                                                                                                                                                                                                                               b_xfer.xfer_asset                                                                                    amm/contract.py:131
    //                                                                                                           virtual: store tmp%19#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0                                                                                                                                                                                                                                                                                                                                     b_xfer.xfer_asset                                                                                    amm/contract.py:131
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,0                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:131
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,0,"asset_b"                                                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:131
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                  self.asset_b                                                                                         amm/contract.py:131
    //                                                                                                           virtual: store asset_b_exists%1#0 to l-stack (no copy)                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,asset_b_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:131
    //                                                                                                           virtual: store asset_b_value%1#0 to l-stack (no copy)                                     (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,asset_b_value%1#0,asset_b_exists%1#0                                                                                                                                                                                                                                                                                                self.asset_b                                                                                         amm/contract.py:131
    //                                                                                                           virtual: load asset_b_exists%1#0 from l-stack (no copy)                                   (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,asset_b_value%1#0,asset_b_exists%1#0                                                                                                                                                                                                                                                                                                self.asset_b                                                                                         amm/contract.py:131
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,asset_b_value%1#0                                                                                                                                                                                                                                                            self.asset_b                                                                                         amm/contract.py:131
    //                                                                                                           virtual: load tmp%19#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,asset_b_value%1#0,tmp%19#0                                                                                                                                                                                                                                                                                                                   b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:131
    //                                                                                                           virtual: load asset_b_value%1#0 from l-stack (no copy)                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%19#0,asset_b_value%1#0                                                                                                                                                                                                                                                                                                                   b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:131
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{==}                                                                                                                                                                                                                                                                                  b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:131
    //                                                                                                           virtual: store tmp%20#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%20#0                                                                                                                                                                                                                                                                                                                                     b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                               amm/contract.py:131
    //                                                                                                           virtual: load tmp%20#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%20#0                                                                                                                                                                                                                                                                                                                                     assert b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                        amm/contract.py:131
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0                                                                                                                                                                                                                                                                                       assert b_xfer.xfer_asset == self.asset_b, "asset b incorrect"                                        amm/contract.py:131
    frame_dig -4                                                                                                 //                                                                                        load b_xfer#0 from parameters                                                                                                                               (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,b_xfer#0                                                                                                                                                                                                                                                                              b_xfer.asset_amount                                                                                  amm/contract.py:132
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,{gtxns}                                                                                                                                                                                                                                                                               b_xfer.asset_amount                                                                                  amm/contract.py:132
    //                                                                                                           virtual: store tmp%21#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0                                                                                                                                                                                                                                                                                                                                     b_xfer.asset_amount                                                                                  amm/contract.py:132
    dup                                                                                                          //                                                                                        load tmp%21#0 from l-stack (copy)                                                                                                                           (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%21#0                                                                                                                                                                                                                                                                     assert b_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:132
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0                                                                                                                                                                                                                                                                              assert b_xfer.asset_amount > 0, "amount minimum not met"                                             amm/contract.py:132
    callsub _current_pool_balance                                                                                //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,{_current_pool_balance}                                                                                                                                                                                                                                                      self._current_pool_balance()                                                                         amm/contract.py:135
    //                                                                                                           virtual: store tmp%23#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%23#0                                                                                                                                                                                                                                                                                                                            self._current_pool_balance()                                                                         amm/contract.py:135
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%23#0,{_current_a_balance}                                                                                                                                                                                                                                                self._current_a_balance()                                                                            amm/contract.py:136
    //                                                                                                           virtual: store tmp%24#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%23#0,tmp%24#0                                                                                                                                                                                                                                                                                                                   self._current_a_balance()                                                                            amm/contract.py:136
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%23#0,tmp%24#0,{_current_b_balance}                                                                                                                                                                                                                                       self._current_b_balance()                                                                            amm/contract.py:137
    //                                                                                                           virtual: store tmp%25#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%23#0,tmp%24#0,tmp%25#0                                                                                                                                                                                                                                                                                                          self._current_b_balance()                                                                            amm/contract.py:137
    uncover 2                                                                                                    //                                                                                        load tmp%23#0 from l-stack (no copy)                                                                                                                        (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%24#0,tmp%25#0,tmp%23#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:134-140
    uncover 2                                                                                                    //                                                                                        load tmp%24#0 from l-stack (no copy)                                                                                                                        (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%25#0,tmp%23#0,tmp%24#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:134-140
    uncover 2                                                                                                    //                                                                                        load tmp%25#0 from l-stack (no copy)                                                                                                                        (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%14#0,tmp%21#0,tmp%23#0,tmp%24#0,tmp%25#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:134-140
    uncover 4                                                                                                    //                                                                                        load tmp%14#0 from l-stack (no copy)                                                                                                                        (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%21#0,tmp%23#0,tmp%24#0,tmp%25#0,tmp%14#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:134-140
    uncover 4                                                                                                    //                                                                                        load tmp%21#0 from l-stack (no copy)                                                                                                                        (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%23#0,tmp%24#0,tmp%25#0,tmp%14#0,tmp%21#0                                                                                                                                                                                                                                                   to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:134-140
    callsub tokens_to_mint                                                                                       //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {tokens_to_mint}                                                                                                                                                                                                                                                                               tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_balance(),... amm/contract.py:134-140
    //                                                                                                           virtual: store to_mint#0 to l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0                                                                                                                                                                                                                                                                                                                                             to_mint = tokens_to_mint(\npool_balance=self._current_pool_balance(),\na_balance=self._current_a_... amm/contract.py:134-140
    dup                                                                                                          //                                                                                        load to_mint#0 from l-stack (copy)                                                                                                                          (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,to_mint#0                                                                                                                                                                                                                                                                            assert to_mint > 0, "send amount too low"                                                            amm/contract.py:141
    assert // send amount too low                                                                                //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0                                                                                                                                                                                                                                                                                      assert to_mint > 0, "send amount too low"                                                            amm/contract.py:141
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,{txn}                                                                                                                                                                                                                                                                                \ndo_asset_transfer(receiver=Txn.sender                                                              amm/contract.py:143-144
    //                                                                                                           virtual: store tmp%29#0 to l-stack (no copy)                                              (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0                                                                                                                                                                                                                                                                                                                                    \ndo_asset_transfer(receiver=Txn.sender                                                              amm/contract.py:143-144
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,0                                                                                                                                                                                                                                                                           \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,0,"pool_token"                                                                                                                                                                                                                                                              \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    //                                                                                                           virtual: store pool_token_exists%1#0 to l-stack (no copy)                                 (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,pool_token_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                        \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    //                                                                                                           virtual: store pool_token_value%1#0 to l-stack (no copy)                                  (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,pool_token_value%1#0,pool_token_exists%1#0                                                                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    //                                                                                                           virtual: load pool_token_exists%1#0 from l-stack (no copy)                                (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,pool_token_value%1#0,pool_token_exists%1#0                                                                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,pool_token_value%1#0                                                                                                                                                                                                                                                        \ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token                                       amm/contract.py:143-144
    //                                                                                                           virtual: load tmp%29#0 from l-stack (no copy)                                             (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,pool_token_value%1#0,tmp%29#0                                                                                                                                                                                                                                                                                                               # mint tokens\ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token, amount=to_mint)         amm/contract.py:143-144
    //                                                                                                           virtual: load pool_token_value%1#0 from l-stack (no copy)                                 (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | to_mint#0,tmp%29#0,pool_token_value%1#0                                                                                                                                                                                                                                                                                                               # mint tokens\ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token, amount=to_mint)         amm/contract.py:143-144
    uncover 2                                                                                                    //                                                                                        load to_mint#0 from l-stack (no copy)                                                                                                                       (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%29#0,pool_token_value%1#0,to_mint#0                                                                                                                                                                                                                                                        # mint tokens\ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token, amount=to_mint)         amm/contract.py:143-144
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                # mint tokens\ndo_asset_transfer(receiver=Txn.sender, asset=self.pool_token, amount=to_mint)         amm/contract.py:143-144
    callsub _update_ratio                                                                                        //                                                                                                                                                                                                                                                    (𝕡) a_xfer#0,b_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                self._update_ratio()                                                                                 amm/contract.py:145
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._check_bootstrapped() -> void:
_check_bootstrapped:
    protosubroutine\ndef _check_bootstrapped(self) -> None:                                                  amm/contract.py:251-252

_check_bootstrapped_block@0:
    intself.pool_token                                                                                      amm/contract.py:253
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    0,"pool_token"                                                                                                                                                                                                                                                                                                                                          self.pool_token                                                                                      amm/contract.py:253
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                             self.pool_token                                                                                      amm/contract.py:253
    //                                                                                                           virtual: store pool_token_exists%0#0 to l-stack (no copy)                                 pool_token_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:253
    //                                                                                                           virtual: store pool_token_value%0#0 to l-stack (no copy)                                  pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:253
    //                                                                                                           virtual: load pool_token_exists%0#0 from l-stack (no copy)                                pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:253
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    pool_token_value%0#0                                                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:253
    //                                                                                                           virtual: load pool_token_value%0#0 from l-stack (no copy)                                 pool_token_value%0#0                                                                                                                                                                                                                                                                                                                                                                                           assert self.pool_token, "bootstrap method needs to be called first"                                  amm/contract.py:253
    assert // bootstrap method needs to be called firstassert self.pool_token, "bootstrap method needs to be called first"                                  amm/contract.py:253
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
_current_pool_balance:
    protosubroutine\ndef _current_pool_balance(self) -> UInt64:                                              amm/contract.py:291-292

_current_pool_balance_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address                                                                   amm/contract.py:293
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        Global.current_application_address                                                                   amm/contract.py:293
    int 0                                                                                                        //                                                                                                                                                                                                                                                    tmp%0#0,0                                                                                                                                                                                                                                                                                                                                               self.pool_token                                                                                      amm/contract.py:293
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    tmp%0#0,0,"pool_token"                                                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:293
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.pool_token                                                                                      amm/contract.py:293
    //                                                                                                           virtual: store pool_token_exists%0#0 to l-stack (no copy)                                 tmp%0#0,pool_token_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:293
    //                                                                                                           virtual: store pool_token_value%0#0 to l-stack (no copy)                                  tmp%0#0,pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                                                             self.pool_token                                                                                      amm/contract.py:293
    //                                                                                                           virtual: load pool_token_exists%0#0 from l-stack (no copy)                                tmp%0#0,pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                                                             self.pool_token                                                                                      amm/contract.py:293
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    tmp%0#0,pool_token_value%0#0                                                                                                                                                                                                                                                                                                                            self.pool_token                                                                                      amm/contract.py:293
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              pool_token_value%0#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                   self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    //                                                                                                           virtual: load pool_token_value%0#0 from l-stack (no copy)                                 tmp%0#0,pool_token_value%0#0                                                                                                                                                                                                                                                                                                                                                                                   self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    asset_holding_get AssetBalance                                                                               //                                                                                                                                                                                                                                                    {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                                                                                                                             self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    //                                                                                                           virtual: store check%0#0 to l-stack (no copy)                                             check%0#0,{asset_holding_get}.0                                                                                                                                                                                                                                                                                                                                                                                self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    //                                                                                                           virtual: store value%0#0 to l-stack (no copy)                                             value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    //                                                                                                           virtual: load check%0#0 from l-stack (no copy)                                            value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    assert // account opted into asset                                                                           //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               self.pool_token.balance(Global.current_application_address)                                          amm/contract.py:293
    //                                                                                                           virtual: load value%0#0 from l-stack (no copy)                                            value%0#0                                                                                                                                                                                                                                                                                                                                                                                                      return self.pool_token.balance(Global.current_application_address)                                   amm/contract.py:293
    retsub                                                                                                       //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               return self.pool_token.balance(Global.current_application_address)                                   amm/contract.py:293


// examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
_current_a_balance:
    protosubroutine\ndef _current_a_balance(self) -> UInt64:                                                 amm/contract.py:295-296

_current_a_balance_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address                                                                   amm/contract.py:297
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        Global.current_application_address                                                                   amm/contract.py:297
    int 0                                                                                                        //                                                                                                                                                                                                                                                    tmp%0#0,0                                                                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:297
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    tmp%0#0,0,"asset_a"                                                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:297
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.asset_a                                                                                         amm/contract.py:297
    //                                                                                                           virtual: store asset_a_exists%0#0 to l-stack (no copy)                                    tmp%0#0,asset_a_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:297
    //                                                                                                           virtual: store asset_a_value%0#0 to l-stack (no copy)                                     tmp%0#0,asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:297
    //                                                                                                           virtual: load asset_a_exists%0#0 from l-stack (no copy)                                   tmp%0#0,asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:297
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    tmp%0#0,asset_a_value%0#0                                                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:297
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              asset_a_value%0#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                      self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    //                                                                                                           virtual: load asset_a_value%0#0 from l-stack (no copy)                                    tmp%0#0,asset_a_value%0#0                                                                                                                                                                                                                                                                                                                                                                                      self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    asset_holding_get AssetBalance                                                                               //                                                                                                                                                                                                                                                    {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                                                                                                                             self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    //                                                                                                           virtual: store check%0#0 to l-stack (no copy)                                             check%0#0,{asset_holding_get}.0                                                                                                                                                                                                                                                                                                                                                                                self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    //                                                                                                           virtual: store value%0#0 to l-stack (no copy)                                             value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    //                                                                                                           virtual: load check%0#0 from l-stack (no copy)                                            value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    assert // account opted into asset                                                                           //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               self.asset_a.balance(Global.current_application_address)                                             amm/contract.py:297
    //                                                                                                           virtual: load value%0#0 from l-stack (no copy)                                            value%0#0                                                                                                                                                                                                                                                                                                                                                                                                      return self.asset_a.balance(Global.current_application_address)                                      amm/contract.py:297
    retsub                                                                                                       //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               return self.asset_a.balance(Global.current_application_address)                                      amm/contract.py:297


// examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
_current_b_balance:
    protosubroutine\ndef _current_b_balance(self) -> UInt64:                                                 amm/contract.py:299-300

_current_b_balance_block@0:
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    {global}                                                                                                                                                                                                                                                                                                                                                Global.current_application_address                                                                   amm/contract.py:301
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                                        Global.current_application_address                                                                   amm/contract.py:301
    int 0                                                                                                        //                                                                                                                                                                                                                                                    tmp%0#0,0                                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:301
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    tmp%0#0,0,"asset_b"                                                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:301
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    tmp%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                                                                     self.asset_b                                                                                         amm/contract.py:301
    //                                                                                                           virtual: store asset_b_exists%0#0 to l-stack (no copy)                                    tmp%0#0,asset_b_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:301
    //                                                                                                           virtual: store asset_b_value%0#0 to l-stack (no copy)                                     tmp%0#0,asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:301
    //                                                                                                           virtual: load asset_b_exists%0#0 from l-stack (no copy)                                   tmp%0#0,asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:301
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    tmp%0#0,asset_b_value%0#0                                                                                                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:301
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              asset_b_value%0#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                      self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    //                                                                                                           virtual: load asset_b_value%0#0 from l-stack (no copy)                                    tmp%0#0,asset_b_value%0#0                                                                                                                                                                                                                                                                                                                                                                                      self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    asset_holding_get AssetBalance                                                                               //                                                                                                                                                                                                                                                    {asset_holding_get}.0,{asset_holding_get}.1                                                                                                                                                                                                                                                                                                             self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    //                                                                                                           virtual: store check%0#0 to l-stack (no copy)                                             check%0#0,{asset_holding_get}.0                                                                                                                                                                                                                                                                                                                                                                                self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    //                                                                                                           virtual: store value%0#0 to l-stack (no copy)                                             value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    //                                                                                                           virtual: load check%0#0 from l-stack (no copy)                                            value%0#0,check%0#0                                                                                                                                                                                                                                                                                                                                                                                            self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    assert // account opted into asset                                                                           //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               self.asset_b.balance(Global.current_application_address)                                             amm/contract.py:301
    //                                                                                                           virtual: load value%0#0 from l-stack (no copy)                                            value%0#0                                                                                                                                                                                                                                                                                                                                                                                                      return self.asset_b.balance(Global.current_application_address)                                      amm/contract.py:301
    retsub                                                                                                       //                                                                                                                                                                                                                                                    value%0#0                                                                                                                                                                                                                                                                                                                                               return self.asset_b.balance(Global.current_application_address)                                      amm/contract.py:301


// examples.amm.contract.tokens_to_mint(pool_balance: uint64, a_balance: uint64, b_balance: uint64, a_amount: uint64, b_amount: uint64) -> uint64:
tokens_to_mint:
    proto 5 1                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 |                                                                                                                                                                                                                                                                                      @subroutine\ndef tokens_to_mint(\n*,\npool_balance: UInt64,\na_balance: UInt64,\nb_balance: UInt6... amm/contract.py:322-330
    byte ""
    dup                                                                                                          //                                                                                        allocate 2 to stack                                                                                                                                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |

tokens_to_mint_block@0:
    frame_dig -4                                                                                                 //                                                                                        load a_balance#0 from parameters                                                                                                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0                                                                                                                                                                                                                                                a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    frame_dig -2                                                                                                 //                                                                                        load a_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_balance#0,a_amount#0                                                                                                                                                                                                                                     a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                                                                                                                                       a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%0#0                                                                                                                                                                                                                                                                                                           a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%0#0                                                                                                                                                                                                                                                                                                           a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    bz tokens_to_mint_bool_false@3                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    // Implicit fall through to tokens_to_mint_and_contd@1                                                       //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331

tokens_to_mint_and_contd@1:
    frame_dig -3                                                                                                 //                                                                                        load b_balance#0 from parameters                                                                                                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0                                                                                                                                                                                                                                                b_balance == b_amount                                                                                amm/contract.py:331
    frame_dig -1                                                                                                 //                                                                                        load b_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_balance#0,b_amount#0                                                                                                                                                                                                                                     b_balance == b_amount                                                                                amm/contract.py:331
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {==}                                                                                                                                                                                                                                                       b_balance == b_amount                                                                                amm/contract.py:331
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%1#0                                                                                                                                                                                                                                                                                                           b_balance == b_amount                                                                                amm/contract.py:331
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%1#0                                                                                                                                                                                                                                                                                                           a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    bz tokens_to_mint_bool_false@3                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331
    // Implicit fall through to tokens_to_mint_bool_true@2                                                       //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            a_balance == a_amount and b_balance == b_amount                                                      amm/contract.py:331

tokens_to_mint_bool_true@2:
    int 1                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 1
    //                                                                                                           virtual: store and_result%0#0 to l-stack (no copy)                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%0#0
    //                                                                                                           virtual: load and_result%0#0 from l-stack (no copy)                                       (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%0#0
    //                                                                                                           virtual: store is_initial_mint#0 to x-stack (no copy)                                     (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |
    b tokens_to_mint_bool_merge@4                                                                                //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |                                                                                                                               is_initial_mint#0

tokens_to_mint_bool_false@3:
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 0
    //                                                                                                           virtual: store and_result%0#0 to l-stack (no copy)                                        (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%0#0
    //                                                                                                           virtual: load and_result%0#0 from l-stack (no copy)                                       (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | and_result%0#0
    //                                                                                                           virtual: store is_initial_mint#0 to x-stack (no copy)                                     (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |
    // Implicit fall through to tokens_to_mint_bool_merge@4                                                      //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) is_initial_mint#0 |                                                                                                                               is_initial_mint#0

tokens_to_mint_bool_merge@4:
    //                                                                                                           virtual: load is_initial_mint#0 from x-stack                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | is_initial_mint#0                                                                                                                                                                                                                                                                            is_initial_mint#0    if is_initial_mint:                                                                                  amm/contract.py:332
    bz tokens_to_mint_after_if_else@6                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            if is_initial_mint:                                                                                  amm/contract.py:332
    // Implicit fall through to tokens_to_mint_if_body@5                                                         //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 |                                                                                                                                                                                                                                                            if is_initial_mint:                                                                                  amm/contract.py:332

tokens_to_mint_if_body@5:
    frame_dig -2                                                                                                 //                                                                                        load a_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0                                                                                                                                                                                                                                                 a_amount * b_amount                                                                                  amm/contract.py:333
    frame_dig -1                                                                                                 //                                                                                        load b_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_amount#0,b_amount#0                                                                                                                                                                                                                                      a_amount * b_amount                                                                                  amm/contract.py:333
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                                                                                                                        a_amount * b_amount                                                                                  amm/contract.py:333
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%2#0                                                                                                                                                                                                                                                                                                           a_amount * b_amount                                                                                  amm/contract.py:333
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%2#0                                                                                                                                                                                                                                                                                                           op.sqrt(a_amount * b_amount)                                                                         amm/contract.py:333
    sqrt                                                                                                         //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {sqrt}                                                                                                                                                                                                                                                     op.sqrt(a_amount * b_amount)                                                                         amm/contract.py:333
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%3#0                                                                                                                                                                                                                                                                                                           op.sqrt(a_amount * b_amount)                                                                         amm/contract.py:333
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%3#0                                                                                                                                                                                                                                                                                                           op.sqrt(a_amount * b_amount) - SCALE                                                                 amm/contract.py:333
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%3#0,1000                                                                                                                                                                                                                                               SCALE                                                                                                amm/contract.py:333
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                                                                                                                                        op.sqrt(a_amount * b_amount) - SCALE                                                                 amm/contract.py:333
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0                                                                                                                                                                                                                                                                                                           op.sqrt(a_amount * b_amount) - SCALE                                                                 amm/contract.py:333
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%4#0                                                                                                                                                                                                                                                                                                           return op.sqrt(a_amount * b_amount) - SCALE                                                          amm/contract.py:333
    frame_bury 0
    retsub                                                                                                       //                                                                                                                                                                                                                                                    tmp%4#0                                                                                                                                                                                                                                                                                                                                                 return op.sqrt(a_amount * b_amount) - SCALE                                                          amm/contract.py:333

tokens_to_mint_after_if_else@6:
    int 10000000000                                                                                              //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000                                                                                                                                                                                                                                                TOTAL_SUPPLY                                                                                         amm/contract.py:334
    frame_dig -5                                                                                                 //                                                                                        load pool_balance#0 from parameters                                                                                                                         (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | 10000000000,pool_balance#0                                                                                                                                                                                                                                 issued = TOTAL_SUPPLY - pool_balance                                                                 amm/contract.py:334
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {-}                                                                                                                                                                                                                                                        TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:334
    //                                                                                                           virtual: store issued#0 to x-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                                                                                                                                                                                    issued = TOTAL_SUPPLY - pool_balance                                                                 amm/contract.py:334
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000                                                                                                                                                                                                                                        SCALE                                                                                                amm/contract.py:335
    frame_dig -2                                                                                                 //                                                                                        load a_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | 1000,a_amount#0                                                                                                                                                                                                                             SCALE * a_amount                                                                                     amm/contract.py:335
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {*}                                                                                                                                                                                                                                         SCALE * a_amount                                                                                     amm/contract.py:335
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%5#0                                                                                                                                                                                                                                                                                            SCALE * a_amount                                                                                     amm/contract.py:335
    frame_dig -4                                                                                                 //                                                                                        load a_balance#0 from parameters                                                                                                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%5#0,a_balance#0                                                                                                                                                                                                                         a_balance - a_amount                                                                                 amm/contract.py:335
    frame_dig -2                                                                                                 //                                                                                        load a_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%5#0,a_balance#0,a_amount#0                                                                                                                                                                                                              a_balance - a_amount                                                                                 amm/contract.py:335
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%5#0,{-}                                                                                                                                                                                                                                 a_balance - a_amount                                                                                 amm/contract.py:335
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%5#0,tmp%6#0                                                                                                                                                                                                                                                                                    a_balance - a_amount                                                                                 amm/contract.py:335
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%6#0,tmp%5#0                                                                                                                                                                                                                                                                                    a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:335
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%5#0,tmp%6#0                                                                                                                                                                                                                                                                                    a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:335
    /                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {/}                                                                                                                                                                                                                                         SCALE * a_amount // (a_balance - a_amount)                                                           amm/contract.py:335
    dup                                                                                                          //                                                                                        store a_ratio#0 to l-stack (copy)                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,a_ratio#0                                                                                                                                                                                                                         a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:335
    frame_bury 0                                                                                                 //                                                                                        store a_ratio#0 to f-stack                                                                                                                                  (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                                                                                                                                                   a_ratio = SCALE * a_amount // (a_balance - a_amount)                                                 amm/contract.py:335
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000                                                                                                                                                                                                                              SCALE                                                                                                amm/contract.py:336
    frame_dig -1                                                                                                 //                                                                                        load b_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,1000,b_amount#0                                                                                                                                                                                                                   SCALE * b_amount                                                                                     amm/contract.py:336
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{*}                                                                                                                                                                                                                               SCALE * b_amount                                                                                     amm/contract.py:336
    //                                                                                                           virtual: store tmp%7#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%7#0                                                                                                                                                                                                                                                                                  SCALE * b_amount                                                                                     amm/contract.py:336
    frame_dig -3                                                                                                 //                                                                                        load b_balance#0 from parameters                                                                                                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%7#0,b_balance#0                                                                                                                                                                                                               b_balance - b_amount                                                                                 amm/contract.py:336
    frame_dig -1                                                                                                 //                                                                                        load b_amount#0 from parameters                                                                                                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%7#0,b_balance#0,b_amount#0                                                                                                                                                                                                    b_balance - b_amount                                                                                 amm/contract.py:336
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%7#0,{-}                                                                                                                                                                                                                       b_balance - b_amount                                                                                 amm/contract.py:336
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%7#0,tmp%8#0                                                                                                                                                                                                                                                                          b_balance - b_amount                                                                                 amm/contract.py:336
    //                                                                                                           virtual: load tmp%7#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%8#0,tmp%7#0                                                                                                                                                                                                                                                                          b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:336
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,tmp%7#0,tmp%8#0                                                                                                                                                                                                                                                                          b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:336
    /                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,{/}                                                                                                                                                                                                                               SCALE * b_amount // (b_balance - b_amount)                                                           amm/contract.py:336
    dup                                                                                                          //                                                                                        store b_ratio#0 to l-stack (copy)                                                                                                                           (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0,b_ratio#0                                                                                                                                                                                                               b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:336
    frame_bury 1                                                                                                 //                                                                                        store b_ratio#0 to f-stack                                                                                                                                  (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0                                                                                                                                                                                                                         b_ratio = SCALE * b_amount // (b_balance - b_amount)                                                 amm/contract.py:336
    //                                                                                                           virtual: load a_ratio#0 from l-stack (no copy)                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | b_ratio#0,a_ratio#0                                                                                                                                                                                                                                                                                a_ratio < b_ratio:                                                                                   amm/contract.py:337
    //                                                                                                           virtual: load b_ratio#0 from l-stack (no copy)                                            (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0,b_ratio#0                                                                                                                                                                                                                                                                                a_ratio < b_ratio:                                                                                   amm/contract.py:337
    <                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | {<}                                                                                                                                                                                                                                         a_ratio < b_ratio:                                                                                   amm/contract.py:337
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%9#0                                                                                                                                                                                                                                                                                            a_ratio < b_ratio:                                                                                   amm/contract.py:337
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | tmp%9#0                                                                                                                                                                                                                                                                                            if a_ratio < b_ratio:                                                                                amm/contract.py:337
    bz tokens_to_mint_else_body@8                                                                                //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                                                                                                                             if a_ratio < b_ratio:                                                                                amm/contract.py:337
    // Implicit fall through to tokens_to_mint_if_body@7                                                         //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 |                                                                                                                                        issued#0                                                                                             if a_ratio < b_ratio:                                                                                amm/contract.py:337

tokens_to_mint_if_body@7:
    frame_dig 0                                                                                                  //                                                                                        load a_ratio#0 from f-stack                                                                                                                                 (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | a_ratio#0                                                                                                                              issued#0                                                                                             a_ratio * issued                                                                                     amm/contract.py:338
    uncover 1                                                                                                    //                                                                                        load issued#0 from x-stack                                                                                                                                  (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | a_ratio#0,issued#0                                                                                                                                                                                                                                         a_ratio * issued                                                                                     amm/contract.py:338
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                                                                                                                        a_ratio * issued                                                                                     amm/contract.py:338
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%10#0                                                                                                                                                                                                                                                                                                          a_ratio * issued                                                                                     amm/contract.py:338
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%10#0                                                                                                                                                                                                                                                                                                          a_ratio * issued // SCALE                                                                            amm/contract.py:338
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%10#0,1000                                                                                                                                                                                                                                              SCALE                                                                                                amm/contract.py:338
    /                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                                                                                                                                        a_ratio * issued // SCALE                                                                            amm/contract.py:338
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0                                                                                                                                                                                                                                                                                                          a_ratio * issued // SCALE                                                                            amm/contract.py:338
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%11#0                                                                                                                                                                                                                                                                                                          return a_ratio * issued // SCALE                                                                     amm/contract.py:338
    frame_bury 0
    retsub                                                                                                       //                                                                                                                                                                                                                                                    tmp%11#0                                                                                                                                                                                                                                                                                                                                                return a_ratio * issued // SCALE                                                                     amm/contract.py:338

tokens_to_mint_else_body@8:
    frame_dig 1                                                                                                  //                                                                                        load b_ratio#0 from f-stack                                                                                                                                 (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | (𝕏) issued#0 | b_ratio#0                                                                                                                              issued#0                                                                                             b_ratio * issued                                                                                     amm/contract.py:340
    uncover 1                                                                                                    //                                                                                        load issued#0 from x-stack                                                                                                                                  (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | b_ratio#0,issued#0                                                                                                                                                                                                                                         b_ratio * issued                                                                                     amm/contract.py:340
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {*}                                                                                                                                                                                                                                                        b_ratio * issued                                                                                     amm/contract.py:340
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%12#0                                                                                                                                                                                                                                                                                                          b_ratio * issued                                                                                     amm/contract.py:340
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%12#0                                                                                                                                                                                                                                                                                                          b_ratio * issued // SCALE                                                                            amm/contract.py:340
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%12#0,1000                                                                                                                                                                                                                                              SCALE                                                                                                amm/contract.py:340
    /                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | {/}                                                                                                                                                                                                                                                        b_ratio * issued // SCALE                                                                            amm/contract.py:340
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                                              (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0                                                                                                                                                                                                                                                                                                          b_ratio * issued // SCALE                                                                            amm/contract.py:340
    //                                                                                                           virtual: load tmp%13#0 from l-stack (no copy)                                             (𝕡) pool_balance#0,a_balance#0,b_balance#0,a_amount#0,b_amount#0 | (𝕗) a_ratio#0,b_ratio#0 | tmp%13#0                                                                                                                                                                                                                                                                                                          return b_ratio * issued // SCALE                                                                     amm/contract.py:340
    frame_bury 0
    retsub                                                                                                       //                                                                                                                                                                                                                                                    tmp%13#0                                                                                                                                                                                                                                                                                                                                                return b_ratio * issued // SCALE                                                                     amm/contract.py:340


// examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
_update_ratio:
    proto 0 0                                                                                                    //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            @subroutine\ndef _update_ratio(self) -> None:                                                        amm/contract.py:255-256

_update_ratio_block@0:
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                                    {_current_a_balance}                                                                                                                                                                                                                                                                                                                                    self._current_a_balance()                                                                            amm/contract.py:257
    //                                                                                                           virtual: store a_balance#0 to l-stack (no copy)                                           a_balance#0                                                                                                                                                                                                                                                                                                                                                                                                    a_balance = self._current_a_balance()                                                                amm/contract.py:257
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                                    a_balance#0,{_current_b_balance}                                                                                                                                                                                                                                                                                                                        self._current_b_balance()                                                                            amm/contract.py:258
    cover 1                                                                                                      //                                                                                        store b_balance#0 to l-stack (no copy)                                                                                                                      b_balance#0,a_balance#0                                                                                                                                                                                                                                                                                                                                 b_balance = self._current_b_balance()                                                                amm/contract.py:258
    //                                                                                                           virtual: load a_balance#0 from l-stack (no copy)                                          b_balance#0,a_balance#0                                                                                                                                                                                                                                                                                                                                                                                        a_balance * SCALE                                                                                    amm/contract.py:260
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    b_balance#0,a_balance#0,1000                                                                                                                                                                                                                                                                                                                            SCALE                                                                                                amm/contract.py:260
    *                                                                                                            //                                                                                                                                                                                                                                                    b_balance#0,{*}                                                                                                                                                                                                                                                                                                                                         a_balance * SCALE                                                                                    amm/contract.py:260
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               b_balance#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                            a_balance * SCALE                                                                                    amm/contract.py:260
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              b_balance#0,tmp%0#0                                                                                                                                                                                                                                                                                                                                                                                            a_balance * SCALE // b_balance                                                                       amm/contract.py:260
    uncover 1                                                                                                    //                                                                                        load b_balance#0 from l-stack (no copy)                                                                                                                     tmp%0#0,b_balance#0                                                                                                                                                                                                                                                                                                                                     a_balance * SCALE // b_balance                                                                       amm/contract.py:260
    /                                                                                                            //                                                                                                                                                                                                                                                    {/}                                                                                                                                                                                                                                                                                                                                                     a_balance * SCALE // b_balance                                                                       amm/contract.py:260
    //                                                                                                           virtual: store new_state_value%0#0 to l-stack (no copy)                                   new_state_value%0#0                                                                                                                                                                                                                                                                                                                                                                                            a_balance * SCALE // b_balance                                                                       amm/contract.py:260
    byte "ratio"                                                                                                 //                                                                                                                                                                                                                                                    new_state_value%0#0,"ratio"                                                                                                                                                                                                                                                                                                                             self.ratio                                                                                           amm/contract.py:260
    uncover 1                                                                                                    //                                                                                        load new_state_value%0#0 from l-stack (no copy)                                                                                                             "ratio",new_state_value%0#0                                                                                                                                                                                                                                                                                                                             self.ratio = a_balance * SCALE // b_balance                                                          amm/contract.py:260
    app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            self.ratio = a_balance * SCALE // b_balance                                                          amm/contract.py:260
    retsub                                                                                                       //


// examples.amm.contract.ConstantProductAMM.burn(pool_xfer: uint64, pool_asset: uint64, a_asset: uint64, b_asset: uint64) -> void:
burn:
    proto 4 0                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      @arc4.abimethod(\ndefault_args={\n"pool_asset": "pool_token",\n"a_asset": "asset_a",\n"b_asset": ... amm/contract.py:147-160

burn_block@0:
    callsub _check_bootstrapped                                                                                  //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      self._check_bootstrapped()                                                                           amm/contract.py:170
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:172
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"pool_token"                                                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:172
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                          self.pool_token                                                                                      amm/contract.py:172
    //                                                                                                           virtual: store pool_token_exists%0#0 to l-stack (no copy)                                 (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                 self.pool_token                                                                                      amm/contract.py:172
    //                                                                                                           virtual: store pool_token_value%0#0 to l-stack (no copy)                                  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:172
    //                                                                                                           virtual: load pool_token_exists%0#0 from l-stack (no copy)                                (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_token_exists%0#0                                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:172
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0                                                                                                                                                                                                                                                                                 self.pool_token                                                                                      amm/contract.py:172
    frame_dig -3                                                                                                 //                                                                                        load pool_asset#0 from parameters                                                                                                                           (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_token_value%0#0,pool_asset#0                                                                                                                                                                                                                                                                    pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:172
    uncover 1                                                                                                    //                                                                                        load pool_token_value%0#0 from l-stack (no copy)                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_asset#0,pool_token_value%0#0                                                                                                                                                                                                                                                                    pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:172
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:172
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                     pool_asset == self.pool_token, "asset pool incorrect"                                                amm/contract.py:172
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                     assert pool_asset == self.pool_token, "asset pool incorrect"                                         amm/contract.py:172
    assert // asset pool incorrect                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert pool_asset == self.pool_token, "asset pool incorrect"                                         amm/contract.py:172
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:173
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:173
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:173
    //                                                                                                           virtual: store asset_a_exists%0#0 to l-stack (no copy)                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:173
    //                                                                                                           virtual: store asset_a_value%0#0 to l-stack (no copy)                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                        self.asset_a                                                                                         amm/contract.py:173
    //                                                                                                           virtual: load asset_a_exists%0#0 from l-stack (no copy)                                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                                        self.asset_a                                                                                         amm/contract.py:173
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0                                                                                                                                                                                                                                                                                    self.asset_a                                                                                         amm/contract.py:173
    frame_dig -2                                                                                                 //                                                                                        load a_asset#0 from parameters                                                                                                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_a_value%0#0,a_asset#0                                                                                                                                                                                                                                                                          a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:173
    uncover 1                                                                                                    //                                                                                        load asset_a_value%0#0 from l-stack (no copy)                                                                                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_asset#0,asset_a_value%0#0                                                                                                                                                                                                                                                                          a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:173
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:173
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                                     a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:173
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                                     assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:173
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:173
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0                                                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:174
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:174
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:174
    //                                                                                                           virtual: store asset_b_exists%0#0 to l-stack (no copy)                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:174
    //                                                                                                           virtual: store asset_b_value%0#0 to l-stack (no copy)                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                        self.asset_b                                                                                         amm/contract.py:174
    //                                                                                                           virtual: load asset_b_exists%0#0 from l-stack (no copy)                                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                                        self.asset_b                                                                                         amm/contract.py:174
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0                                                                                                                                                                                                                                                                                    self.asset_b                                                                                         amm/contract.py:174
    frame_dig -1                                                                                                 //                                                                                        load b_asset#0 from parameters                                                                                                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | asset_b_value%0#0,b_asset#0                                                                                                                                                                                                                                                                          b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:174
    uncover 1                                                                                                    //                                                                                        load asset_b_value%0#0 from l-stack (no copy)                                                                                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_asset#0,asset_b_value%0#0                                                                                                                                                                                                                                                                          b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:174
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:174
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                     b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:174
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                     assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:174
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:174
    frame_dig -4                                                                                                 //                                                                                        load pool_xfer#0 from parameters                                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                                                                                                                          pool_xfer.asset_receiver                                                                             amm/contract.py:177
    gtxns AssetReceiver                                                                                          //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                              pool_xfer.asset_receiver                                                                             amm/contract.py:177
    //                                                                                                           virtual: store tmp%3#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0                                                                                                                                                                                                                                                                                                                                                     pool_xfer.asset_receiver                                                                             amm/contract.py:177
    global CurrentApplicationAddress                                                                             //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0,{global}                                                                                                                                                                                                                                                                                     Global.current_application_address                                                                   amm/contract.py:177
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0,tmp%4#0                                                                                                                                                                                                                                                                                                                                             Global.current_application_address                                                                   amm/contract.py:177
    //                                                                                                           virtual: load tmp%3#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%4#0,tmp%3#0                                                                                                                                                                                                                                                                                                                                             pool_xfer.asset_receiver == Global.current_application_address                                       amm/contract.py:177
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%3#0,tmp%4#0                                                                                                                                                                                                                                                                                                                                             pool_xfer.asset_receiver == Global.current_application_address                                       amm/contract.py:177
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {==}                                                                                                                                                                                                                                                                                                 pool_xfer.asset_receiver == Global.current_application_address                                       amm/contract.py:177
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                     pool_xfer.asset_receiver == Global.current_application_address                                       amm/contract.py:177
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%5#0                                                                                                                                                                                                                                                                                                                                                     assert (\npool_xfer.asset_receiver == Global.current_application_address\n), "receiver not app ad... amm/contract.py:176-178
    assert // receiver not app address                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      assert (\npool_xfer.asset_receiver == Global.current_application_address\n), "receiver not app ad... amm/contract.py:176-178
    frame_dig -4                                                                                                 //                                                                                        load pool_xfer#0 from parameters                                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | pool_xfer#0                                                                                                                                                                                                                                                                                          pool_xfer.asset_amount                                                                               amm/contract.py:179
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | {gtxns}                                                                                                                                                                                                                                                                                              pool_xfer.asset_amount                                                                               amm/contract.py:179
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                                                     pool_xfer.asset_amount                                                                               amm/contract.py:179
    dup                                                                                                          //                                                                                        load tmp%6#0 from l-stack (copy)                                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%6#0                                                                                                                                                                                                                                                                                      assert pool_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:179
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                              assert pool_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:179
    frame_dig -4                                                                                                 //                                                                                        load pool_xfer#0 from parameters                                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_xfer#0                                                                                                                                                                                                                                                                                  pool_xfer.xfer_asset                                                                                 amm/contract.py:180
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,{gtxns}                                                                                                                                                                                                                                                                                      pool_xfer.xfer_asset                                                                                 amm/contract.py:180
    //                                                                                                           virtual: store tmp%8#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0                                                                                                                                                                                                                                                                                                                                             pool_xfer.xfer_asset                                                                                 amm/contract.py:180
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,0                                                                                                                                                                                                                                                                                    self.pool_token                                                                                      amm/contract.py:180
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,0,"pool_token"                                                                                                                                                                                                                                                                       self.pool_token                                                                                      amm/contract.py:180
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                          self.pool_token                                                                                      amm/contract.py:180
    //                                                                                                           virtual: store pool_token_exists%1#0 to l-stack (no copy)                                 (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,pool_token_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                 self.pool_token                                                                                      amm/contract.py:180
    //                                                                                                           virtual: store pool_token_value%1#0 to l-stack (no copy)                                  (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,pool_token_value%1#0,pool_token_exists%1#0                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:180
    //                                                                                                           virtual: load pool_token_exists%1#0 from l-stack (no copy)                                (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,pool_token_value%1#0,pool_token_exists%1#0                                                                                                                                                                                                                                                                                                  self.pool_token                                                                                      amm/contract.py:180
    assert // check pool_token exists                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,pool_token_value%1#0                                                                                                                                                                                                                                                                 self.pool_token                                                                                      amm/contract.py:180
    //                                                                                                           virtual: load tmp%8#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_token_value%1#0,tmp%8#0                                                                                                                                                                                                                                                                                                                        pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:180
    //                                                                                                           virtual: load pool_token_value%1#0 from l-stack (no copy)                                 (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%8#0,pool_token_value%1#0                                                                                                                                                                                                                                                                                                                        pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:180
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,{==}                                                                                                                                                                                                                                                                                         pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:180
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                                               (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%9#0                                                                                                                                                                                                                                                                                                                                             pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                                      amm/contract.py:180
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%9#0                                                                                                                                                                                                                                                                                                                                             assert pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                               amm/contract.py:180
    assert // asset pool incorrect                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                              assert pool_xfer.xfer_asset == self.pool_token, "asset pool incorrect"                               amm/contract.py:180
    frame_dig -4                                                                                                 //                                                                                        load pool_xfer#0 from parameters                                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_xfer#0                                                                                                                                                                                                                                                                                  pool_xfer.sender                                                                                     amm/contract.py:181
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,{gtxns}                                                                                                                                                                                                                                                                                      pool_xfer.sender                                                                                     amm/contract.py:181
    //                                                                                                           virtual: store tmp%10#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                            pool_xfer.sender                                                                                     amm/contract.py:181
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%10#0,{txn}                                                                                                                                                                                                                                                                               Txn.sender                                                                                           amm/contract.py:181
    //                                                                                                           virtual: store tmp%11#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%10#0,tmp%11#0                                                                                                                                                                                                                                                                                                                                   Txn.sender                                                                                           amm/contract.py:181
    //                                                                                                           virtual: load tmp%10#0 from l-stack (no copy)                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%11#0,tmp%10#0                                                                                                                                                                                                                                                                                                                                   pool_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:181
    //                                                                                                           virtual: load tmp%11#0 from l-stack (no copy)                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%10#0,tmp%11#0                                                                                                                                                                                                                                                                                                                                   pool_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:181
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,{==}                                                                                                                                                                                                                                                                                         pool_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:181
    //                                                                                                           virtual: store tmp%12#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%12#0                                                                                                                                                                                                                                                                                                                                            pool_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:181
    //                                                                                                           virtual: load tmp%12#0 from l-stack (no copy)                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,tmp%12#0                                                                                                                                                                                                                                                                                                                                            assert pool_xfer.sender == Txn.sender, "sender invalid"                                              amm/contract.py:181
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0                                                                                                                                                                                                                                                                                              assert pool_xfer.sender == Txn.sender, "sender invalid"                                              amm/contract.py:181
    callsub _current_pool_balance                                                                                //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,{_current_pool_balance}                                                                                                                                                                                                                                                                      number of tokens issued\n# !important: this happens prior to receiving the current axfer of pool ... amm/contract.py:183-185
    //                                                                                                           virtual: store pool_balance#0 to l-stack (no copy)                                        (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0                                                                                                                                                                                                                                                                                                                                      # Get the total number of tokens issued\n# !important: this happens prior to receiving the curren... amm/contract.py:183-185
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0,{_current_a_balance}                                                                                                                                                                                                                                                          self._current_a_balance()                                                                            amm/contract.py:188
    //                                                                                                           virtual: store tmp%13#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0,tmp%13#0                                                                                                                                                                                                                                                                                                                             self._current_a_balance()                                                                            amm/contract.py:188
    dig 1                                                                                                        //                                                                                        load pool_balance#0 from l-stack (copy)                                                                                                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0,tmp%13#0,pool_balance#0                                                                                                                                                                                                                                                       a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:186-190
    uncover 1                                                                                                    //                                                                                        load tmp%13#0 from l-stack (no copy)                                                                                                                        (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0,pool_balance#0,tmp%13#0                                                                                                                                                                                                                                                       a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:186-190
    dig 3                                                                                                        //                                                                                        load tmp%6#0 from l-stack (copy)                                                                                                                            (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0,pool_balance#0,tmp%13#0,tmp%6#0                                                                                                                                                                                                                                               a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:186-190
    callsub tokens_to_burn                                                                                       //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%6#0,pool_balance#0,{tokens_to_burn}                                                                                                                                                                                                                                                              tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=pool_xfer.... amm/contract.py:186-190
    cover 2                                                                                                      //                                                                                        store a_amt#0 to l-stack (no copy)                                                                                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%6#0,pool_balance#0                                                                                                                                                                                                                                                                       a_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_a_balance(),\namount=po... amm/contract.py:186-190
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%6#0,pool_balance#0,{_current_b_balance}                                                                                                                                                                                                                                                  self._current_b_balance()                                                                            amm/contract.py:193
    //                                                                                                           virtual: store tmp%15#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%6#0,pool_balance#0,tmp%15#0                                                                                                                                                                                                                                                                                                                     self._current_b_balance()                                                                            amm/contract.py:193
    //                                                                                                           virtual: load pool_balance#0 from l-stack (no copy)                                       (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%6#0,tmp%15#0,pool_balance#0                                                                                                                                                                                                                                                                                                                     b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:191-195
    //                                                                                                           virtual: load tmp%15#0 from l-stack (no copy)                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,tmp%6#0,pool_balance#0,tmp%15#0                                                                                                                                                                                                                                                                                                                     b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:191-195
    uncover 2                                                                                                    //                                                                                        load tmp%6#0 from l-stack (no copy)                                                                                                                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,pool_balance#0,tmp%15#0,tmp%6#0                                                                                                                                                                                                                                                              b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:191-195
    callsub tokens_to_burn                                                                                       //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | a_amt#0,{tokens_to_burn}                                                                                                                                                                                                                                                                             tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=pool_xfer.... amm/contract.py:191-195
    cover 1                                                                                                      //                                                                                        store b_amt#0 to l-stack (no copy)                                                                                                                          (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0                                                                                                                                                                                                                                                                                      b_amt = tokens_to_burn(\npool_balance=pool_balance,\nsupply=self._current_b_balance(),\namount=po... amm/contract.py:191-195
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,{txn}                                                                                                                                                                                                                                                                                t of a\ndo_asset_transfer(receiver=Txn.sender                                                        amm/contract.py:197-198
    //                                                                                                           virtual: store tmp%17#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0                                                                                                                                                                                                                                                                                                                                    t of a\ndo_asset_transfer(receiver=Txn.sender                                                        amm/contract.py:197-198
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,0                                                                                                                                                                                                                                                                           \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,0,"asset_a"                                                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                 \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    //                                                                                                           virtual: store asset_a_exists%1#0 to l-stack (no copy)                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,asset_a_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                           \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    //                                                                                                           virtual: store asset_a_value%1#0 to l-stack (no copy)                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,asset_a_value%1#0,asset_a_exists%1#0                                                                                                                                                                                                                                                                                               \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    //                                                                                                           virtual: load asset_a_exists%1#0 from l-stack (no copy)                                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,asset_a_value%1#0,asset_a_exists%1#0                                                                                                                                                                                                                                                                                               \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,asset_a_value%1#0                                                                                                                                                                                                                                                           \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a                                          amm/contract.py:197-198
    //                                                                                                           virtual: load tmp%17#0 from l-stack (no copy)                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,asset_a_value%1#0,tmp%17#0                                                                                                                                                                                                                                                                                                                  # Send back commensurate amt of a\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a, amo... amm/contract.py:197-198
    //                                                                                                           virtual: load asset_a_value%1#0 from l-stack (no copy)                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,a_amt#0,tmp%17#0,asset_a_value%1#0                                                                                                                                                                                                                                                                                                                  # Send back commensurate amt of a\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a, amo... amm/contract.py:197-198
    uncover 2                                                                                                    //                                                                                        load a_amt#0 from l-stack (no copy)                                                                                                                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%17#0,asset_a_value%1#0,a_amt#0                                                                                                                                                                                                                                                           # Send back commensurate amt of a\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a, amo... amm/contract.py:197-198
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0                                                                                                                                                                                                                                                                                              # Send back commensurate amt of a\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_a, amo... amm/contract.py:197-198
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,{txn}                                                                                                                                                                                                                                                                                        t of b\ndo_asset_transfer(receiver=Txn.sender                                                        amm/contract.py:200-201
    //                                                                                                           virtual: store tmp%18#0 to l-stack (no copy)                                              (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0                                                                                                                                                                                                                                                                                                                                            t of b\ndo_asset_transfer(receiver=Txn.sender                                                        amm/contract.py:200-201
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,0                                                                                                                                                                                                                                                                                   \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,0,"asset_b"                                                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                         \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    //                                                                                                           virtual: store asset_b_exists%1#0 to l-stack (no copy)                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,asset_b_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                   \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    //                                                                                                           virtual: store asset_b_value%1#0 to l-stack (no copy)                                     (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,asset_b_value%1#0,asset_b_exists%1#0                                                                                                                                                                                                                                                                                                       \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    //                                                                                                           virtual: load asset_b_exists%1#0 from l-stack (no copy)                                   (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,asset_b_value%1#0,asset_b_exists%1#0                                                                                                                                                                                                                                                                                                       \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,asset_b_value%1#0                                                                                                                                                                                                                                                                   \ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b                                          amm/contract.py:200-201
    //                                                                                                           virtual: load tmp%18#0 from l-stack (no copy)                                             (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,asset_b_value%1#0,tmp%18#0                                                                                                                                                                                                                                                                                                                          # Send back commensurate amt of b\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b, amo... amm/contract.py:200-201
    //                                                                                                           virtual: load asset_b_value%1#0 from l-stack (no copy)                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | b_amt#0,tmp%18#0,asset_b_value%1#0                                                                                                                                                                                                                                                                                                                          # Send back commensurate amt of b\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b, amo... amm/contract.py:200-201
    uncover 2                                                                                                    //                                                                                        load b_amt#0 from l-stack (no copy)                                                                                                                         (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 | tmp%18#0,asset_b_value%1#0,b_amt#0                                                                                                                                                                                                                                                                   # Send back commensurate amt of b\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b, amo... amm/contract.py:200-201
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      # Send back commensurate amt of b\ndo_asset_transfer(receiver=Txn.sender, asset=self.asset_b, amo... amm/contract.py:200-201
    callsub _update_ratio                                                                                        //                                                                                                                                                                                                                                                    (𝕡) pool_xfer#0,pool_asset#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                      self._update_ratio()                                                                                 amm/contract.py:202
    retsub                                                                                                       //


// examples.amm.contract.tokens_to_burn(pool_balance: uint64, supply: uint64, amount: uint64) -> uint64:
tokens_to_burn:
    proto 3 1                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 |                                                                                                                                                                                                                                                                                                                  @subroutine\ndef tokens_to_burn(*, pool_balance: UInt64, supply: UInt64, amount: UInt64) -> UInt64:  amm/contract.py:343-344

tokens_to_burn_block@0:
    int 10000000000                                                                                              //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000                                                                                                                                                                                                                                                                                                      TOTAL_SUPPLY                                                                                         amm/contract.py:345
    frame_dig -3                                                                                                 //                                                                                        load pool_balance#0 from parameters                                                                                                                         (𝕡) pool_balance#0,supply#0,amount#0 | 10000000000,pool_balance#0                                                                                                                                                                                                                                                                                       TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:345
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                                                                                                                              TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:345
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                 TOTAL_SUPPLY - pool_balance                                                                          amm/contract.py:345
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                                 issued = TOTAL_SUPPLY - pool_balance - amount                                                        amm/contract.py:345
    frame_dig -1                                                                                                 //                                                                                        load amount#0 from parameters                                                                                                                               (𝕡) pool_balance#0,supply#0,amount#0 | tmp%0#0,amount#0                                                                                                                                                                                                                                                                                                 issued = TOTAL_SUPPLY - pool_balance - amount                                                        amm/contract.py:345
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 | {-}                                                                                                                                                                                                                                                                                                              TOTAL_SUPPLY - pool_balance - amount                                                                 amm/contract.py:345
    //                                                                                                           virtual: store issued#0 to l-stack (no copy)                                              (𝕡) pool_balance#0,supply#0,amount#0 | issued#0                                                                                                                                                                                                                                                                                                                                                                issued = TOTAL_SUPPLY - pool_balance - amount                                                        amm/contract.py:345
    frame_dig -2                                                                                                 //                                                                                        load supply#0 from parameters                                                                                                                               (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0                                                                                                                                                                                                                                                                                                supply * amount                                                                                      amm/contract.py:346
    frame_dig -1                                                                                                 //                                                                                        load amount#0 from parameters                                                                                                                               (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,supply#0,amount#0                                                                                                                                                                                                                                                                                       supply * amount                                                                                      amm/contract.py:346
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,{*}                                                                                                                                                                                                                                                                                                     supply * amount                                                                                      amm/contract.py:346
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                        supply * amount                                                                                      amm/contract.py:346
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,supply#0,amount#0 | issued#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                        supply * amount // issued                                                                            amm/contract.py:346
    uncover 1                                                                                                    //                                                                                        load issued#0 from l-stack (no copy)                                                                                                                        (𝕡) pool_balance#0,supply#0,amount#0 | tmp%1#0,issued#0                                                                                                                                                                                                                                                                                                 supply * amount // issued                                                                            amm/contract.py:346
    /                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) pool_balance#0,supply#0,amount#0 | {/}                                                                                                                                                                                                                                                                                                              supply * amount // issued                                                                            amm/contract.py:346
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               (𝕡) pool_balance#0,supply#0,amount#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                 supply * amount // issued                                                                            amm/contract.py:346
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) pool_balance#0,supply#0,amount#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                                                                 return supply * amount // issued                                                                     amm/contract.py:346
    retsub                                                                                                       //                                                                                                                                                                                                                                                    tmp%2#0                                                                                                                                                                                                                                                                                                                                                 return supply * amount // issued                                                                     amm/contract.py:346


// examples.amm.contract.ConstantProductAMM.swap(swap_xfer: uint64, a_asset: uint64, b_asset: uint64) -> void:
swap:
    proto 3 0                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 |                                                                                                                                                                                                                                                                                                                   @arc4.abimethod(\ndefault_args={\n"a_asset": "asset_a",\n"b_asset": "asset_b",\n},\n)\ndef swap(\... amm/contract.py:204-215
    byte ""
    dup                                                                                                          //                                                                                        allocate 2 to stack                                                                                                                                         (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |

swap_block@0:
    callsub _check_bootstrapped                                                                                  //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                                                                                                                                     self._check_bootstrapped()                                                                           amm/contract.py:223
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:225
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_a"                                                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:225
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                         self.asset_a                                                                                         amm/contract.py:225
    //                                                                                                           virtual: store asset_a_exists%0#0 to l-stack (no copy)                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_a_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:225
    //                                                                                                           virtual: store asset_a_value%0#0 to l-stack (no copy)                                     (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:225
    //                                                                                                           virtual: load asset_a_exists%0#0 from l-stack (no copy)                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_a_value%0#0,asset_a_exists%0#0                                                                                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:225
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_a_value%0#0                                                                                                                                                                                                                                                                   self.asset_a                                                                                         amm/contract.py:225
    frame_dig -2                                                                                                 //                                                                                        load a_asset#0 from parameters                                                                                                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_a_value%0#0,a_asset#0                                                                                                                                                                                                                                                         a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:225
    uncover 1                                                                                                    //                                                                                        load asset_a_value%0#0 from l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | a_asset#0,asset_a_value%0#0                                                                                                                                                                                                                                                         a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:225
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                                                                                                                                a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:225
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                    a_asset == self.asset_a, "asset a incorrect"                                                         amm/contract.py:225
    //                                                                                                           virtual: load tmp%0#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                    assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:225
    assert // asset a incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                                                                                                                                     assert a_asset == self.asset_a, "asset a incorrect"                                                  amm/contract.py:225
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:226
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | 0,"asset_b"                                                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:226
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:226
    //                                                                                                           virtual: store asset_b_exists%0#0 to l-stack (no copy)                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_b_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:226
    //                                                                                                           virtual: store asset_b_value%0#0 to l-stack (no copy)                                     (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:226
    //                                                                                                           virtual: load asset_b_exists%0#0 from l-stack (no copy)                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_b_value%0#0,asset_b_exists%0#0                                                                                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:226
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_b_value%0#0                                                                                                                                                                                                                                                                   self.asset_b                                                                                         amm/contract.py:226
    frame_dig -1                                                                                                 //                                                                                        load b_asset#0 from parameters                                                                                                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | asset_b_value%0#0,b_asset#0                                                                                                                                                                                                                                                         b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:226
    uncover 1                                                                                                    //                                                                                        load asset_b_value%0#0 from l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | b_asset#0,asset_b_value%0#0                                                                                                                                                                                                                                                         b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:226
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {==}                                                                                                                                                                                                                                                                                b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:226
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                    b_asset == self.asset_b, "asset b incorrect"                                                         amm/contract.py:226
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                    assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:226
    assert // asset b incorrect                                                                                  //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 |                                                                                                                                                                                                                                                                                     assert b_asset == self.asset_b, "asset b incorrect"                                                  amm/contract.py:226
    frame_dig -3                                                                                                 //                                                                                        load swap_xfer#0 from parameters                                                                                                                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | swap_xfer#0                                                                                                                                                                                                                                                                         swap_xfer.asset_amount                                                                               amm/contract.py:228
    gtxns AssetAmount                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | {gtxns}                                                                                                                                                                                                                                                                             swap_xfer.asset_amount                                                                               amm/contract.py:228
    dup                                                                                                          //                                                                                        store tmp%2#0 to l-stack (copy)                                                                                                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0 | tmp%2#0,tmp%2#0                                                                                                                                                                                                                                                                     swap_xfer.asset_amount                                                                               amm/contract.py:228
    cover 1                                                                                                      //                                                                                        store tmp%2#0 to f-stack                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%2#0                                                                                                                                                                                                                                                                     swap_xfer.asset_amount                                                                               amm/contract.py:228
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%2#0                                                                                                                                                                                                                                                                                                                            assert swap_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:228
    assert // amount minimum not met                                                                             //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             assert swap_xfer.asset_amount > 0, "amount minimum not met"                                          amm/contract.py:228
    frame_dig -3                                                                                                 //                                                                                        load swap_xfer#0 from parameters                                                                                                                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | swap_xfer#0                                                                                                                                                                                                                                                                 swap_xfer.sender                                                                                     amm/contract.py:229
    gtxns Sender                                                                                                 //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {gtxns}                                                                                                                                                                                                                                                                     swap_xfer.sender                                                                                     amm/contract.py:229
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                            swap_xfer.sender                                                                                     amm/contract.py:229
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%4#0,{txn}                                                                                                                                                                                                                                                               Txn.sender                                                                                           amm/contract.py:229
    //                                                                                                           virtual: store tmp%5#0 to l-stack (no copy)                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%4#0,tmp%5#0                                                                                                                                                                                                                                                                                                                    Txn.sender                                                                                           amm/contract.py:229
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%5#0,tmp%4#0                                                                                                                                                                                                                                                                                                                    swap_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:229
    //                                                                                                           virtual: load tmp%5#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%4#0,tmp%5#0                                                                                                                                                                                                                                                                                                                    swap_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:229
    ==                                                                                                           //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {==}                                                                                                                                                                                                                                                                        swap_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:229
    //                                                                                                           virtual: store tmp%6#0 to l-stack (no copy)                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                            swap_xfer.sender == Txn.sender, "sender invalid"                                                     amm/contract.py:229
    //                                                                                                           virtual: load tmp%6#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%6#0                                                                                                                                                                                                                                                                                                                            assert swap_xfer.sender == Txn.sender, "sender invalid"                                              amm/contract.py:229
    assert // sender invalid                                                                                     //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             assert swap_xfer.sender == Txn.sender, "sender invalid"                                              amm/contract.py:229
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | 0                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:232
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | 0,"asset_a"                                                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:232
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:232
    //                                                                                                           virtual: store asset_a_exists%1#0 to l-stack (no copy)                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:232
    //                                                                                                           virtual: store asset_a_value%1#0 to l-stack (no copy)                                     (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_a_exists%1#0                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:232
    //                                                                                                           virtual: load asset_a_exists%1#0 from l-stack (no copy)                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_a_exists%1#0                                                                                                                                                                                                                                                                                               self.asset_a                                                                                         amm/contract.py:232
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0                                                                                                                                                                                                                                                           self.asset_a                                                                                         amm/contract.py:232
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,0                                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:236
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,0,"asset_b"                                                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:236
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                               self.asset_b                                                                                         amm/contract.py:236
    //                                                                                                           virtual: store asset_b_exists%1#0 to l-stack (no copy)                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:236
    //                                                                                                           virtual: store asset_b_value%1#0 to l-stack (no copy)                                     (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0,asset_b_exists%1#0                                                                                                                                                                                                                                                                             self.asset_b                                                                                         amm/contract.py:236
    //                                                                                                           virtual: load asset_b_exists%1#0 from l-stack (no copy)                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0,asset_b_exists%1#0                                                                                                                                                                                                                                                                             self.asset_b                                                                                         amm/contract.py:236
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0                                                                                                                                                                                                                                         self.asset_b                                                                                         amm/contract.py:236
    frame_dig -3                                                                                                 //                                                                                        load swap_xfer#0 from parameters                                                                                                                            (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0,swap_xfer#0                                                                                                                                                                                                                             swap_xfer.xfer_asset                                                                                 amm/contract.py:231
    gtxns XferAsset                                                                                              //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0,{gtxns}                                                                                                                                                                                                                                 swap_xfer.xfer_asset                                                                                 amm/contract.py:231
    //                                                                                                           virtual: store awst_tmp%0#0 to l-stack (no copy)                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0,awst_tmp%0#0                                                                                                                                                                                                                                                                                   swap_xfer.xfer_asset                                                                                 amm/contract.py:231
    uncover 2                                                                                                    //                                                                                        load asset_a_value%1#0 from l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_b_value%1#0,awst_tmp%0#0,asset_a_value%1#0                                                                                                                                                                                                                            match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:231-241
    uncover 2                                                                                                    //                                                                                        load asset_b_value%1#0 from l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | awst_tmp%0#0,asset_a_value%1#0,asset_b_value%1#0                                                                                                                                                                                                                            match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:231-241
    uncover 2                                                                                                    //                                                                                        load awst_tmp%0#0 from l-stack (no copy)                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | asset_a_value%1#0,asset_b_value%1#0,awst_tmp%0#0                                                                                                                                                                                                                            match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:231-241
    match swap_switch_case_0@1 swap_switch_case_1@2                                                              //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             match swap_xfer.xfer_asset:\ncase self.asset_a:\nin_supply = self._current_b_balance()\nout_suppl... amm/contract.py:231-241
    err // asset id incorrect                                                                                    //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             assert False, "asset id incorrect"                                                                   amm/contract.py:241

swap_switch_case_0@1:
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {_current_b_balance}                                                                                                                                                                                                                                                        self._current_b_balance()                                                                            amm/contract.py:233
    frame_bury 0                                                                                                 //                                                                                        store in_supply#0 to f-stack                                                                                                                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             in_supply = self._current_b_balance()                                                                amm/contract.py:233
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {_current_a_balance}                                                                                                                                                                                                                                                        self._current_a_balance()                                                                            amm/contract.py:234
    //                                                                                                           virtual: store out_supply#0 to x-stack (no copy)                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                                                                                 out_supply = self._current_a_balance()                                                               amm/contract.py:234
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | 0                                                                                                                                                                                                                                                        self.asset_a                                                                                         amm/contract.py:235
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | 0,"asset_a"                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:235
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:235
    cover 1                                                                                                      //                                                                                        store asset_a_exists%2#0 to l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | asset_a_exists%2#0,{app_global_get_ex}.0                                                                                                                                                                                                                 self.asset_a                                                                                         amm/contract.py:235
    frame_bury 1                                                                                                 //                                                                                        store out_asset#0 to f-stack                                                                                                                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | asset_a_exists%2#0                                                                                                                                                                                                                                       self.asset_a                                                                                         amm/contract.py:235
    //                                                                                                           virtual: load asset_a_exists%2#0 from l-stack (no copy)                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | asset_a_exists%2#0                                                                                                                                                                                                                                                                                              self.asset_a                                                                                         amm/contract.py:235
    assert // check asset_a exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                          self.asset_a                                                                                         amm/contract.py:235
    b swap_switch_case_next@4                                                                                    //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 |                                                                                                                                                     out_supply#0

swap_switch_case_1@2:
    callsub _current_a_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {_current_a_balance}                                                                                                                                                                                                                                                        self._current_a_balance()                                                                            amm/contract.py:237
    frame_bury 0                                                                                                 //                                                                                        store in_supply#0 to f-stack                                                                                                                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             in_supply = self._current_a_balance()                                                                amm/contract.py:237
    callsub _current_b_balance                                                                                   //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {_current_b_balance}                                                                                                                                                                                                                                                        self._current_b_balance()                                                                            amm/contract.py:238
    //                                                                                                           virtual: store out_supply#0 to x-stack (no copy)                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                                                                                 out_supply = self._current_b_balance()                                                               amm/contract.py:238
    int 0                                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | 0                                                                                                                                                                                                                                                        self.asset_b                                                                                         amm/contract.py:239
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | 0,"asset_b"                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:239
    app_global_get_ex                                                                                            //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:239
    cover 1                                                                                                      //                                                                                        store asset_b_exists%2#0 to l-stack (no copy)                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | asset_b_exists%2#0,{app_global_get_ex}.0                                                                                                                                                                                                                 self.asset_b                                                                                         amm/contract.py:239
    frame_bury 1                                                                                                 //                                                                                        store out_asset#0 to f-stack                                                                                                                                (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | asset_b_exists%2#0                                                                                                                                                                                                                                       self.asset_b                                                                                         amm/contract.py:239
    //                                                                                                           virtual: load asset_b_exists%2#0 from l-stack (no copy)                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | asset_b_exists%2#0                                                                                                                                                                                                                                                                                              self.asset_b                                                                                         amm/contract.py:239
    assert // check asset_b exists                                                                               //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 |                                                                                                                                                                                                                                                          self.asset_b                                                                                         amm/contract.py:239
    // Implicit fall through to swap_switch_case_next@4                                                          //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 |                                                                                                                                                     out_supply#0

swap_switch_case_next@4:
    frame_dig 2                                                                                                  //                                                                                        load tmp%2#0 from f-stack                                                                                                                                   (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | tmp%2#0                                                                                                                                             out_supply#0                                                                                         to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:243-245
    frame_dig 0                                                                                                  //                                                                                        load in_supply#0 from f-stack                                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | (𝕏) out_supply#0 | tmp%2#0,in_supply#0                                                                                                                                                                                                                                      to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:243-245
    uncover 2                                                                                                    //                                                                                        load out_supply#0 from x-stack                                                                                                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%2#0,in_supply#0,out_supply#0                                                                                                                                                                                                                                            to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:243-245
    callsub tokens_to_swap                                                                                       //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | {tokens_to_swap}                                                                                                                                                                                                                                                            tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_supply\n)     amm/contract.py:243-245
    //                                                                                                           virtual: store to_swap#0 to l-stack (no copy)                                             (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0                                                                                                                                                                                                                                                                                                                          to_swap = tokens_to_swap(\nin_amount=swap_xfer.asset_amount, in_supply=in_supply, out_supply=out_... amm/contract.py:243-245
    dup                                                                                                          //                                                                                        load to_swap#0 from l-stack (copy)                                                                                                                          (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0,to_swap#0                                                                                                                                                                                                                                                         assert to_swap > 0, "send amount too low"                                                            amm/contract.py:246
    assert // send amount too low                                                                                //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0                                                                                                                                                                                                                                                                   assert to_swap > 0, "send amount too low"                                                            amm/contract.py:246
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0,{txn}                                                                                                                                                                                                                                                             Txn.sender                                                                                           amm/contract.py:248
    //                                                                                                           virtual: store tmp%9#0 to l-stack (no copy)                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0,tmp%9#0                                                                                                                                                                                                                                                                                                                  Txn.sender                                                                                           amm/contract.py:248
    //                                                                                                           virtual: load tmp%9#0 from l-stack (no copy)                                              (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0,tmp%9#0                                                                                                                                                                                                                                                                                                                  do_asset_transfer(receiver=Txn.sender, asset=out_asset, amount=to_swap)                              amm/contract.py:248
    frame_dig 1                                                                                                  //                                                                                        load out_asset#0 from f-stack                                                                                                                               (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | to_swap#0,tmp%9#0,out_asset#0                                                                                                                                                                                                                                               do_asset_transfer(receiver=Txn.sender, asset=out_asset, amount=to_swap)                              amm/contract.py:248
    uncover 2                                                                                                    //                                                                                        load to_swap#0 from l-stack (no copy)                                                                                                                       (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 | tmp%9#0,out_asset#0,to_swap#0                                                                                                                                                                                                                                               do_asset_transfer(receiver=Txn.sender, asset=out_asset, amount=to_swap)                              amm/contract.py:248
    callsub do_asset_transfer                                                                                    //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             do_asset_transfer(receiver=Txn.sender, asset=out_asset, amount=to_swap)                              amm/contract.py:248
    callsub _update_ratio                                                                                        //                                                                                                                                                                                                                                                    (𝕡) swap_xfer#0,a_asset#0,b_asset#0 | (𝕗) in_supply#0,out_asset#0,tmp%2#0 |                                                                                                                                                                                                                                                                             self._update_ratio()                                                                                 amm/contract.py:249
    retsub                                                                                                       //


// examples.amm.contract.tokens_to_swap(in_amount: uint64, in_supply: uint64, out_supply: uint64) -> uint64:
tokens_to_swap:
    proto 3 1                                                                                                    //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 |                                                                                                                                                                                                                                                                                                              @subroutine\ndef tokens_to_swap(*, in_amount: UInt64, in_supply: UInt64, out_supply: UInt64) -> U... amm/contract.py:349-350

tokens_to_swap_block@0:
    frame_dig -2                                                                                                 //                                                                                        load in_supply#0 from parameters                                                                                                                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0                                                                                                                                                                                                                                                                                                  in_supply - in_amount                                                                                amm/contract.py:351
    frame_dig -3                                                                                                 //                                                                                        load in_amount#0 from parameters                                                                                                                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_supply#0,in_amount#0                                                                                                                                                                                                                                                                                      in_supply - in_amount                                                                                amm/contract.py:351
    -                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | {-}                                                                                                                                                                                                                                                                                                          in_supply - in_amount                                                                                amm/contract.py:351
    //                                                                                                           virtual: store tmp%0#0 to l-stack (no copy)                                               (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%0#0                                                                                                                                                                                                                                                                                                                                                             in_supply - in_amount                                                                                amm/contract.py:351
    int 1000                                                                                                     //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%0#0,1000                                                                                                                                                                                                                                                                                                 SCALE                                                                                                amm/contract.py:351
    uncover 1                                                                                                    //                                                                                        load tmp%0#0 from l-stack (no copy)                                                                                                                         (𝕡) in_amount#0,in_supply#0,out_supply#0 | 1000,tmp%0#0                                                                                                                                                                                                                                                                                                 SCALE * (in_supply - in_amount)                                                                      amm/contract.py:351
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | {*}                                                                                                                                                                                                                                                                                                          SCALE * (in_supply - in_amount)                                                                      amm/contract.py:351
    //                                                                                                           virtual: store tmp%1#0 to l-stack (no copy)                                               (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0                                                                                                                                                                                                                                                                                                                                                             SCALE * (in_supply - in_amount)                                                                      amm/contract.py:351
    frame_dig -3                                                                                                 //                                                                                        load in_amount#0 from parameters                                                                                                                            (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0                                                                                                                                                                                                                                                                                          in_amount * FACTOR                                                                                   amm/contract.py:351
    int 995                                                                                                      //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,in_amount#0,995                                                                                                                                                                                                                                                                                      FACTOR                                                                                               amm/contract.py:351
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,{*}                                                                                                                                                                                                                                                                                                  in_amount * FACTOR                                                                                   amm/contract.py:351
    //                                                                                                           virtual: store tmp%2#0 to l-stack (no copy)                                               (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                     in_amount * FACTOR                                                                                   amm/contract.py:351
    //                                                                                                           virtual: load tmp%1#0 from l-stack (no copy)                                              (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%2#0,tmp%1#0                                                                                                                                                                                                                                                                                                                                                     in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:351
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%1#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                     in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:351
    dup
    cover 2                                                                                                      //                                                                                        store tmp%2#0 to l-stack (copy)                                                                                                                             (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%2#0,tmp%1#0,tmp%2#0                                                                                                                                                                                                                                                                                      in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:351
    +                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%2#0,{+}                                                                                                                                                                                                                                                                                                  SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                               amm/contract.py:351
    cover 1                                                                                                      //                                                                                        store in_total#0 to l-stack (no copy)                                                                                                                       (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%2#0                                                                                                                                                                                                                                                                                           in_total = SCALE * (in_supply - in_amount) + (in_amount * FACTOR)                                    amm/contract.py:351
    //                                                                                                           virtual: load tmp%2#0 from l-stack (no copy)                                              (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%2#0                                                                                                                                                                                                                                                                                                                                                  out_total = in_amount * FACTOR * out_supply                                                          amm/contract.py:352
    frame_dig -1                                                                                                 //                                                                                        load out_supply#0 from parameters                                                                                                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,tmp%2#0,out_supply#0                                                                                                                                                                                                                                                                              out_total = in_amount * FACTOR * out_supply                                                          amm/contract.py:352
    *                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,{*}                                                                                                                                                                                                                                                                                               in_amount * FACTOR * out_supply                                                                      amm/contract.py:352
    //                                                                                                           virtual: store out_total#0 to l-stack (no copy)                                           (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,out_total#0                                                                                                                                                                                                                                                                                                                                              out_total = in_amount * FACTOR * out_supply                                                          amm/contract.py:352
    //                                                                                                           virtual: load out_total#0 from l-stack (no copy)                                          (𝕡) in_amount#0,in_supply#0,out_supply#0 | in_total#0,out_total#0                                                                                                                                                                                                                                                                                                                                              out_total // in_total                                                                                amm/contract.py:353
    uncover 1                                                                                                    //                                                                                        load in_total#0 from l-stack (no copy)                                                                                                                      (𝕡) in_amount#0,in_supply#0,out_supply#0 | out_total#0,in_total#0                                                                                                                                                                                                                                                                                       out_total // in_total                                                                                amm/contract.py:353
    /                                                                                                            //                                                                                                                                                                                                                                                    (𝕡) in_amount#0,in_supply#0,out_supply#0 | {/}                                                                                                                                                                                                                                                                                                          out_total // in_total                                                                                amm/contract.py:353
    //                                                                                                           virtual: store tmp%4#0 to l-stack (no copy)                                               (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                                                             out_total // in_total                                                                                amm/contract.py:353
    //                                                                                                           virtual: load tmp%4#0 from l-stack (no copy)                                              (𝕡) in_amount#0,in_supply#0,out_supply#0 | tmp%4#0                                                                                                                                                                                                                                                                                                                                                             return out_total // in_total                                                                         amm/contract.py:353
    retsub                                                                                                       //                                                                                                                                                                                                                                                    tmp%4#0                                                                                                                                                                                                                                                                                                                                                 return out_total // in_total                                                                         amm/contract.py:353


// examples.amm.contract.ConstantProductAMM.__init__() -> void:
__init__:
    protodef __init__(self) -> None:                                                                          amm/contract.py:28

__init___block@0:
    byte "asset_a"                                                                                               //                                                                                                                                                                                                                                                    "asset_a"                                                                                                                                                                                                                                                                                                                                               # The asset id of asset A\nself.asset_a                                                              amm/contract.py:32-33
    int 0                                                                                                        //                                                                                                                                                                                                                                                    "asset_a",0                                                                                                                                                                                                                                                                                                                                             of asset A\nself.asset_a = Asset()                                                                   amm/contract.py:32-33
    app_global_put                                                                                               //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # The asset id of asset A\nself.asset_a = Asset()                                                    amm/contract.py:32-33
    byte "asset_b"                                                                                               //                                                                                                                                                                                                                                                    "asset_b"                                                                                                                                                                                                                                                                                                                                               # The asset id of asset B\nself.asset_b                                                              amm/contract.py:34-35
    int 0                                                                                                        //                                                                                                                                                                                                                                                    "asset_b",0                                                                                                                                                                                                                                                                                                                                             of asset B\nself.asset_b = Asset()                                                                   amm/contract.py:34-35
    app_global_puthe asset id of asset B\nself.asset_b = Asset()                                                    amm/contract.py:34-35
    txn Sender                                                                                                   //                                                                                                                                                                                                                                                    {txn}                                                                                                                                                                                                                                                                                                                                                   vernor of this contract, allowed to do admin type actions\nself.governor = Txn.sender                amm/contract.py:36-37
    //                                                                                                           virtual: store new_state_value%0#0 to l-stack (no copy)                                   new_state_value%0#0                                                                                                                                                                                                                                                                                                                                                                                            vernor of this contract, allowed to do admin type actions\nself.governor = Txn.sender                amm/contract.py:36-37
    byte "governor"                                                                                              //                                                                                                                                                                                                                                                    new_state_value%0#0,"governor"                                                                                                                                                                                                                                                                                                                          # The current governor of this contract, allowed to do admin type actions\nself.governor             amm/contract.py:36-37
    uncover 1                                                                                                    //                                                                                        load new_state_value%0#0 from l-stack (no copy)                                                                                                             "governor",new_state_value%0#0                                                                                                                                                                                                                                                                                                                          # The current governor of this contract, allowed to do admin type actions\nself.governor = Txn.se... amm/contract.py:36-37
    app_global_puthe current governor of this contract, allowed to do admin type actions\nself.governor = Txn.se... amm/contract.py:36-37
    byte "pool_token"                                                                                            //                                                                                                                                                                                                                                                    "pool_token"                                                                                                                                                                                                                                                                                                                                            # The asset id of the Pool Token, used to track share of pool the holder may recover\nself.pool_t... amm/contract.py:38-39
    int 0                                                                                                        //                                                                                                                                                                                                                                                    "pool_token",0                                                                                                                                                                                                                                                                                                                                          the Pool Token, used to track share of pool the holder may recover\nself.pool_token = Asset()        amm/contract.py:38-39
    app_global_puthe asset id of the Pool Token, used to track share of pool the holder may recover\nself.pool_t... amm/contract.py:38-39
    byte "ratio"                                                                                                 //                                                                                                                                                                                                                                                    "ratio"                                                                                                                                                                                                                                                                                                                                                 # The ratio between assets (A*Scale/B)\nself.ratio                                                   amm/contract.py:40-41
    int 0                                                                                                        //                                                                                                                                                                                                                                                    "ratio",0                                                                                                                                                                                                                                                                                                                                               etween assets (A*Scale/B)\nself.ratio = UInt64(0)                                                    amm/contract.py:40-41
    app_global_puthe ratio between assets (A*Scale/B)\nself.ratio = UInt64(0)                                       amm/contract.py:40-41
    retsub                                                                                                       //

