debug: PuyaOptions(paths=['amm'], output_teal=True, output_arc32=True, output_awst=False, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>, target_avm_version=10, locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>)
debug: Sealing block@0: // L11
debug: Terminated block@0: // L11
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L19
debug: Terminated block@1: // while_top_L19
debug: Sealing block@None: // while_body_L19
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L19
debug: Terminated block@2: // while_body_L19
debug: Sealing block@None: // switch_case_default_L25
debug: Sealing block@None: // switch_case_0_L27
debug: Sealing block@None: // switch_case_1_L29
debug: Terminated block@3: // switch_case_0_L27
debug: Terminated block@4: // switch_case_1_L29
debug: Terminated block@5: // switch_case_default_L25
debug: Sealing block@6: // switch_case_next_L25
debug: Terminated block@6: // switch_case_next_L25
debug: Sealing block@1: // while_top_L19
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L25
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L25
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L19
debug: Terminated block@7: // after_while_L19
debug: Sealing block@0: // L20
debug: Terminated block@0: // L20
debug: Sealing block@0: // L39
debug: Terminated block@0: // L39
debug: Sealing block@0: // L57
debug: Terminated block@0: // L57
debug: Sealing block@0: // L84
debug: Terminated block@0: // L84
debug: Sealing block@None: // if_body_L106
debug: Sealing block@None: // else_body_L106
debug: Terminated block@1: // if_body_L106
debug: Sealing block@2: // after_if_else_L106
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L106
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L84
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: uint64 = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L106
debug: Added is_packed#0 to Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0) in block@0: // L84
debug: Added is_packed#0 to Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L106
debug: Sealing block@None: // ternary_true_L110
debug: Sealing block@None: // ternary_false_L110
debug: Terminated block@3: // ternary_true_L110
debug: Terminated block@4: // ternary_false_L110
debug: Sealing block@5: // ternary_merge_L110
debug: Created Phi assignment: let ternary_result%6#2: uint64 = undefined while trying to resolve 'ternary_result%6' in block@5: // ternary_merge_L110
debug: Added ternary_result%6#0 to Phi node: let ternary_result%6#2: uint64 = φ(ternary_result%6#0 <- block@3) in block@3: // ternary_true_L110
debug: Added ternary_result%6#1 to Phi node: let ternary_result%6#2: uint64 = φ(ternary_result%6#0 <- block@3, ternary_result%6#1 <- block@4) in block@4: // ternary_false_L110
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L106
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L84
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0 in current definition for 1 blocks
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3) in block@3: // ternary_true_L110
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@5: // ternary_merge_L110
debug: Looking for 'range_item%7' in an unsealed block creating an incomplete Phi: block@6: // for_header_L110
debug: Created Phi assignment: let range_item%7#1: uint64 = undefined while trying to resolve 'range_item%7' in block@6: // for_header_L110
debug: Terminated block@6: // for_header_L110
debug: Looking for 'range_item%7' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let range_item%7#2: uint64 = undefined while trying to resolve 'range_item%7' in block@7: // for_body_L110
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@7: // for_body_L110
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@7: // for_body_L110
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@7: // for_body_L110
debug: Terminated block@7: // for_body_L110
debug: Sealing block@8: // for_footer_L110
debug: Terminated block@8: // for_footer_L110
debug: Sealing block@9: // for_increment_L110
debug: Terminated block@9: // for_increment_L110
debug: Sealing block@6: // for_header_L110
debug: Added range_item%7#0 to Phi node: let range_item%7#1: uint64 = φ(range_item%7#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added range_item%7#3 to Phi node: let range_item%7#1: uint64 = φ(range_item%7#0 <- block@5, range_item%7#3 <- block@9) in block@9: // for_increment_L110
debug: Sealing block@7: // for_body_L110
debug: Added range_item%7#1 to Phi node: let range_item%7#2: uint64 = φ(range_item%7#1 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let range_item%7#2: uint64 = φ(range_item%7#1 <- block@6) (range_item%7#2) with range_item%7#1
debug: Deleting Phi assignment: let range_item%7#2: uint64 = φ(range_item%7#1 <- block@6)
debug: Replaced trivial Phi node: let range_item%7#2: uint64 = φ(range_item%7#1 <- block@6) (range_item%7#2) with range_item%7#1 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@6: // for_header_L110
debug: Created Phi assignment: let result#5: bytes = undefined while trying to resolve 'result' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let result#6: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L106
debug: Added result#0 to Phi node: let result#6: bytes = φ(result#0 <- block@0) in block@0: // L84
debug: Added result#1 to Phi node: let result#6: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L106
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3) in block@3: // ternary_true_L110
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6
debug: Deleting Phi assignment: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4)
debug: Replaced trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6 in current definition for 1 blocks
debug: Added result#6 to Phi node: let result#4: bytes = φ(result#6 <- block@5) in block@5: // ternary_merge_L110
debug: Added result#3 to Phi node: let result#4: bytes = φ(result#6 <- block@5, result#3 <- block@9) in block@9: // for_increment_L110
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4
debug: Deleting Phi assignment: let result#2: bytes = φ(result#4 <- block@6)
debug: Replaced trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4 in current definition for 0 blocks
debug: Created Phi assignment: let write_offset#3: uint64 = undefined while trying to resolve 'write_offset' in block@6: // for_header_L110
debug: Created Phi assignment: let write_offset#4: uint64 = undefined while trying to resolve 'write_offset' in block@5: // ternary_merge_L110
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3) in block@3: // ternary_true_L110
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0
debug: Deleting Phi assignment: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4)
debug: Replaced trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0 in current definition for 1 blocks
debug: Added write_offset#0 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added write_offset#2 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5, write_offset#2 <- block@9) in block@9: // for_increment_L110
debug: Added write_offset#3 to Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3
debug: Deleting Phi assignment: let write_offset#1: uint64 = φ(write_offset#3 <- block@6)
debug: Replaced trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3 in current definition for 0 blocks
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@6: // for_header_L110
debug: Created Phi assignment: let new_items_bytes#3: bytes = undefined while trying to resolve 'new_items_bytes' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let new_items_bytes#4: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L106
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L84
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3) in block@3: // ternary_true_L110
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@9) in block@9: // for_increment_L110
debug: Added new_items_bytes#2 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6)
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L110
debug: Terminated block@10: // after_for_L110
debug: Sealing block@0: // L117
debug: Terminated block@0: // L117
debug: Sealing block@0: // L139
debug: Terminated block@0: // L139
debug: Sealing block@0: // L166
debug: Terminated block@0: // L166
debug: Sealing block@0: // L195
debug: Terminated block@0: // L195
debug: Sealing block@None: // if_body_L210
debug: Sealing block@None: // else_body_L210
debug: Terminated block@1: // if_body_L210
debug: Terminated block@2: // else_body_L210
debug: Sealing block@3: // after_if_else_L210
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@3: // after_if_else_L210
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1) in block@1: // if_body_L210
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0 in current definition for 1 blocks
debug: Created Phi assignment: let start_at_index#1: uint64 = undefined while trying to resolve 'start_at_index' in block@3: // after_if_else_L210
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1) in block@1: // if_body_L210
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0
debug: Deleting Phi assignment: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2)
debug: Replaced trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0 in current definition for 1 blocks
debug: Terminated block@3: // after_if_else_L210
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@4: // for_header_L215
debug: Created Phi assignment: let range_item%1#1: uint64 = undefined while trying to resolve 'range_item%1' in block@4: // for_header_L215
debug: Terminated block@4: // for_header_L215
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let range_item%1#2: uint64 = undefined while trying to resolve 'range_item%1' in block@5: // for_body_L215
debug: Looking for 'tail_cursor' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let tail_cursor#2: uint64 = undefined while trying to resolve 'tail_cursor' in block@5: // for_body_L215
debug: Looking for 'array_data' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let array_data#1: bytes = undefined while trying to resolve 'array_data' in block@5: // for_body_L215
debug: Looking for 'header_cursor' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let header_cursor#1: uint64 = undefined while trying to resolve 'header_cursor' in block@5: // for_body_L215
debug: Terminated block@5: // for_body_L215
debug: Sealing block@6: // for_footer_L215
debug: Terminated block@6: // for_footer_L215
debug: Sealing block@7: // for_increment_L215
debug: Terminated block@7: // for_increment_L215
debug: Sealing block@4: // for_header_L215
debug: Added range_item%1#0 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@3) in block@3: // after_if_else_L210
debug: Added range_item%1#3 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@3, range_item%1#3 <- block@7) in block@7: // for_increment_L215
debug: Sealing block@5: // for_body_L215
debug: Added range_item%1#1 to Phi node: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@4) (range_item%1#2) with range_item%1#1
debug: Deleting Phi assignment: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@4)
debug: Replaced trivial Phi node: let range_item%1#2: uint64 = φ(range_item%1#1 <- block@4) (range_item%1#2) with range_item%1#1 in current definition for 2 blocks
debug: Created Phi assignment: let tail_cursor#4: uint64 = undefined while trying to resolve 'tail_cursor' in block@4: // for_header_L215
debug: Created Phi assignment: let tail_cursor#5: uint64 = undefined while trying to resolve 'tail_cursor' in block@3: // after_if_else_L210
debug: Added tail_cursor#0 to Phi node: let tail_cursor#5: uint64 = φ(tail_cursor#0 <- block@1) in block@1: // if_body_L210
debug: Added tail_cursor#1 to Phi node: let tail_cursor#5: uint64 = φ(tail_cursor#0 <- block@1, tail_cursor#1 <- block@2) in block@2: // else_body_L210
debug: Added tail_cursor#5 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#5 <- block@3) in block@3: // after_if_else_L210
debug: Added tail_cursor#3 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#5 <- block@3, tail_cursor#3 <- block@7) in block@7: // for_increment_L215
debug: Added tail_cursor#4 to Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) (tail_cursor#2) with tail_cursor#4
debug: Deleting Phi assignment: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4)
debug: Replaced trivial Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) (tail_cursor#2) with tail_cursor#4 in current definition for 0 blocks
debug: Created Phi assignment: let array_data#3: bytes = undefined while trying to resolve 'array_data' in block@4: // for_header_L215
debug: Created Phi assignment: let array_data#4: bytes = undefined while trying to resolve 'array_data' in block@3: // after_if_else_L210
debug: Added array_data#0 to Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1) in block@1: // if_body_L210
debug: Added array_data#0 to Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#4) with array_data#0
debug: Deleting Phi assignment: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2)
debug: Replaced trivial Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#4) with array_data#0 in current definition for 1 blocks
debug: Added array_data#0 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@3) in block@3: // after_if_else_L210
debug: Added array_data#2 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@3, array_data#2 <- block@7) in block@7: // for_increment_L215
debug: Added array_data#3 to Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) (array_data#1) with array_data#3
debug: Deleting Phi assignment: let array_data#1: bytes = φ(array_data#3 <- block@4)
debug: Replaced trivial Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) (array_data#1) with array_data#3 in current definition for 0 blocks
debug: Created Phi assignment: let header_cursor#3: uint64 = undefined while trying to resolve 'header_cursor' in block@4: // for_header_L215
debug: Created Phi assignment: let header_cursor#4: uint64 = undefined while trying to resolve 'header_cursor' in block@3: // after_if_else_L210
debug: Added header_cursor#0 to Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1) in block@1: // if_body_L210
debug: Added header_cursor#0 to Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#4) with header_cursor#0
debug: Deleting Phi assignment: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2)
debug: Replaced trivial Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#4) with header_cursor#0 in current definition for 1 blocks
debug: Added header_cursor#0 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@3) in block@3: // after_if_else_L210
debug: Added header_cursor#2 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@3, header_cursor#2 <- block@7) in block@7: // for_increment_L215
debug: Added header_cursor#3 to Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) (header_cursor#1) with header_cursor#3
debug: Deleting Phi assignment: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4)
debug: Replaced trivial Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) (header_cursor#1) with header_cursor#3 in current definition for 0 blocks
debug: Sealing block@None: // after_for_L215
debug: Terminated block@8: // after_for_L215
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L43
debug: Terminated block@0: // L43
debug: Sealing block@0: // L264
debug: Terminated block@0: // L264
debug: Sealing block@0: // L49
debug: Terminated block@0: // L49
debug: Sealing block@0: // L270
debug: Terminated block@0: // L270
debug: Sealing block@1: // next_txn_L273
debug: Terminated block@1: // next_txn_L273
debug: Sealing block@0: // L286
debug: Terminated block@0: // L286
debug: Sealing block@0: // L359
debug: Terminated block@0: // L359
debug: Sealing block@1: // next_txn_L361
debug: Terminated block@1: // next_txn_L361
debug: Sealing block@0: // L83
debug: Terminated block@0: // L83
debug: Sealing block@0: // L253
debug: Terminated block@0: // L253
debug: Sealing block@0: // L294
debug: Terminated block@0: // L294
debug: Sealing block@0: // L298
debug: Terminated block@0: // L298
debug: Sealing block@0: // L302
debug: Terminated block@0: // L302
debug: Sealing block@0: // L325
debug: Terminated block@0: // L325
debug: Sealing block@None: // and_contd_L334
debug: Terminated block@1: // and_contd_L334
debug: Sealing block@None: // bool_true_L334
debug: Sealing block@None: // bool_false_L334
debug: Terminated block@2: // bool_true_L334
debug: Terminated block@3: // bool_false_L334
debug: Sealing block@4: // bool_merge_L334
debug: Created Phi assignment: let and_result%2#2: uint64 = undefined while trying to resolve 'and_result%2' in block@4: // bool_merge_L334
debug: Added and_result%2#0 to Phi node: let and_result%2#2: uint64 = φ(and_result%2#0 <- block@2) in block@2: // bool_true_L334
debug: Added and_result%2#1 to Phi node: let and_result%2#2: uint64 = φ(and_result%2#0 <- block@2, and_result%2#1 <- block@3) in block@3: // bool_false_L334
debug: Terminated block@4: // bool_merge_L334
debug: Sealing block@None: // if_body_L335
debug: Sealing block@None: // else_body_L335
debug: Created Phi assignment: let a_amount#1: uint64 = undefined while trying to resolve 'a_amount' in block@4: // bool_merge_L334
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2) in block@2: // bool_true_L334
debug: Created Phi assignment: let a_amount#2: uint64 = undefined while trying to resolve 'a_amount' in block@3: // bool_false_L334
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0) in block@0: // L325
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) in block@1: // and_contd_L334
debug: Replacing trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0
debug: Deleting Phi assignment: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1)
debug: Replaced trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0 in current definition for 1 blocks
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) in block@3: // bool_false_L334
debug: Replacing trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0
debug: Deleting Phi assignment: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3)
debug: Replaced trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_amount#1: uint64 = undefined while trying to resolve 'b_amount' in block@4: // bool_merge_L334
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2) in block@2: // bool_true_L334
debug: Created Phi assignment: let b_amount#2: uint64 = undefined while trying to resolve 'b_amount' in block@3: // bool_false_L334
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0) in block@0: // L325
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) in block@1: // and_contd_L334
debug: Replacing trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0
debug: Deleting Phi assignment: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1)
debug: Replaced trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0 in current definition for 1 blocks
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) in block@3: // bool_false_L334
debug: Replacing trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0
debug: Deleting Phi assignment: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3)
debug: Replaced trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0 in current definition for 1 blocks
debug: Terminated block@5: // if_body_L335
debug: Sealing block@6: // after_if_else_L335
debug: Created Phi assignment: let pool_balance#1: uint64 = undefined while trying to resolve 'pool_balance' in block@4: // bool_merge_L334
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2) in block@2: // bool_true_L334
debug: Created Phi assignment: let pool_balance#2: uint64 = undefined while trying to resolve 'pool_balance' in block@3: // bool_false_L334
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0) in block@0: // L325
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) in block@1: // and_contd_L334
debug: Replacing trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1)
debug: Replaced trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0 in current definition for 1 blocks
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) in block@3: // bool_false_L334
debug: Replacing trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3)
debug: Replaced trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let a_balance#1: uint64 = undefined while trying to resolve 'a_balance' in block@4: // bool_merge_L334
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2) in block@2: // bool_true_L334
debug: Created Phi assignment: let a_balance#2: uint64 = undefined while trying to resolve 'a_balance' in block@3: // bool_false_L334
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0) in block@0: // L325
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) in block@1: // and_contd_L334
debug: Replacing trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0
debug: Deleting Phi assignment: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1)
debug: Replaced trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0 in current definition for 1 blocks
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) in block@3: // bool_false_L334
debug: Replacing trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0
debug: Deleting Phi assignment: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3)
debug: Replaced trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_balance#1: uint64 = undefined while trying to resolve 'b_balance' in block@4: // bool_merge_L334
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2) in block@2: // bool_true_L334
debug: Created Phi assignment: let b_balance#2: uint64 = undefined while trying to resolve 'b_balance' in block@3: // bool_false_L334
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0) in block@0: // L325
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) in block@1: // and_contd_L334
debug: Replacing trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0
debug: Deleting Phi assignment: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1)
debug: Replaced trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0 in current definition for 1 blocks
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) in block@3: // bool_false_L334
debug: Replacing trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0
debug: Deleting Phi assignment: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3)
debug: Replaced trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0 in current definition for 1 blocks
debug: Terminated block@6: // after_if_else_L335
debug: Sealing block@None: // if_body_L340
debug: Sealing block@None: // else_body_L340
debug: Terminated block@7: // if_body_L340
debug: Terminated block@8: // else_body_L340
debug: Sealing block@None: // after_if_else_L340
debug: Sealing block@0: // L257
debug: Terminated block@0: // L257
debug: Sealing block@0: // L149
debug: Terminated block@0: // L149
debug: Sealing block@0: // L346
debug: Terminated block@0: // L346
debug: Sealing block@0: // L206
debug: Terminated block@0: // L206
debug: Sealing block@None: // switch_case_default_L233
debug: Sealing block@None: // switch_case_0_L235
debug: Sealing block@None: // switch_case_1_L239
debug: Terminated block@1: // switch_case_0_L235
debug: Terminated block@2: // switch_case_1_L239
debug: Terminated block@3: // switch_case_default_L233
debug: Sealing block@4: // switch_case_next_L233
debug: Created Phi assignment: let swap_xfer#1: uint64 = undefined while trying to resolve 'swap_xfer' in block@4: // switch_case_next_L233
debug: Added swap_xfer#0 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1) in block@1: // switch_case_0_L235
debug: Added swap_xfer#0 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) in block@2: // switch_case_1_L239
debug: Replacing trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0
debug: Deleting Phi assignment: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2)
debug: Replaced trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0 in current definition for 1 blocks
debug: Created Phi assignment: let in_supply#2: uint64 = undefined while trying to resolve 'in_supply' in block@4: // switch_case_next_L233
debug: Added in_supply#0 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1) in block@1: // switch_case_0_L235
debug: Added in_supply#1 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1, in_supply#1 <- block@2) in block@2: // switch_case_1_L239
debug: Created Phi assignment: let out_supply#2: uint64 = undefined while trying to resolve 'out_supply' in block@4: // switch_case_next_L233
debug: Added out_supply#0 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1) in block@1: // switch_case_0_L235
debug: Added out_supply#1 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1, out_supply#1 <- block@2) in block@2: // switch_case_1_L239
debug: Created Phi assignment: let out_asset#2: uint64 = undefined while trying to resolve 'out_asset' in block@4: // switch_case_next_L233
debug: Added out_asset#0 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1) in block@1: // switch_case_0_L235
debug: Added out_asset#1 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1, out_asset#1 <- block@2) in block@2: // switch_case_1_L239
debug: Terminated block@4: // switch_case_next_L233
debug: Sealing block@0: // L352
debug: Terminated block@0: // L352
debug: Sealing block@0: // L28
debug: Terminated block@0: // L28
debug: Sealing block@0: // L27
debug: Terminated block@0: // L27
debug: Sealing block@None: // on_create_L28
debug: Terminated block@1: // on_create_L28
debug: Sealing block@2: // entrypoint_L28
debug: Terminated block@2: // entrypoint_L28
debug: Sealing block@None: // abi_routing_L27
debug: Sealing block@None: // bare_routing_L27
debug: Terminated block@3: // abi_routing_L27
debug: Sealing block@None: // switch_case_default_L27
debug: Sealing block@None: // set_governor_route_L43
debug: Sealing block@None: // bootstrap_route_L49
debug: Sealing block@None: // mint_route_L83
debug: Sealing block@None: // burn_route_L149
debug: Sealing block@None: // swap_route_L206
debug: Terminated block@4: // set_governor_route_L43
debug: Terminated block@5: // bootstrap_route_L49
debug: Terminated block@6: // mint_route_L83
debug: Terminated block@7: // burn_route_L149
debug: Terminated block@8: // swap_route_L206
debug: Terminated block@9: // switch_case_default_L27
debug: Sealing block@10: // switch_case_next_L27
debug: Terminated block@10: // switch_case_next_L27
debug: Terminated block@11: // bare_routing_L27
debug: Sealing block@None: // reject_bare_on_completion_L27
debug: Sealing block@None: // create_L27
debug: Terminated block@12: // create_L27
debug: Terminated block@13: // reject_bare_on_completion_L27
debug: Sealing block@None: // switch_case_next_L27
debug: Sealing block@14: // after_if_else_L27
debug: Terminated block@14: // after_if_else_L27
debug: Sealing block@0: // L27
debug: Terminated block@0: // L27
debug: Output IR to amm/out/contract_ConstantProductAMM.ssa.ir
info: Optimizing examples.amm.contract.ConstantProductAMM at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%15#0, maybe_value%12#0
debug: Replacing {maybe_value%12#0} with awst_tmp%15#0 made 1 modifications
debug: Found equivalence set: tmp%17#0, maybe_value_did_exist%13#0
debug: Replacing {maybe_value_did_exist%13#0} with tmp%17#0 made 1 modifications
debug: Found equivalence set: awst_tmp%32#0, maybe_value%29#0
debug: Replacing {maybe_value%29#0} with awst_tmp%32#0 made 1 modifications
debug: Found equivalence set: tmp%34#0, maybe_value_did_exist%30#0
debug: Replacing {maybe_value_did_exist%30#0} with tmp%34#0 made 1 modifications
debug: Found equivalence set: awst_tmp%15#1, maybe_value%35#0
debug: Replacing {maybe_value%35#0} with awst_tmp%15#1 made 1 modifications
debug: Found equivalence set: tmp%39#0, maybe_value_did_exist%36#0
debug: Replacing {maybe_value_did_exist%36#0} with tmp%39#0 made 1 modifications
debug: Found equivalence set: awst_tmp%15#2, maybe_value%52#0
debug: Replacing {maybe_value%52#0} with awst_tmp%15#2 made 1 modifications
debug: Found equivalence set: tmp%56#0, maybe_value_did_exist%53#0
debug: Replacing {maybe_value_did_exist%53#0} with tmp%56#0 made 1 modifications
debug: Found equivalence set: awst_tmp%15#3, maybe_value%69#0
debug: Replacing {maybe_value%69#0} with awst_tmp%15#3 made 1 modifications
debug: Found equivalence set: tmp%73#0, maybe_value_did_exist%70#0
debug: Replacing {maybe_value_did_exist%70#0} with tmp%73#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: adding block@3: // abi_routing_L27 as a predecessor of block@10: // switch_case_next_L27 due to inlining of block@9: // switch_case_default_L27
debug: simplified terminator of block@3: // abi_routing_L27 from switch tmp%2#0 {method "set_governor(account)void" => block@4, method "bootstrap(pay,asset,asset)uint64" => block@5, method "mint(axfer,axfer,asset,asset,asset)void" => block@6, method "burn(axfer,asset,asset,asset)void" => block@7, method "swap(axfer,asset,asset)void" => block@8, * => block@9} to switch tmp%2#0 {method "set_governor(account)void" => block@4, method "bootstrap(pay,asset,asset)uint64" => block@5, method "mint(axfer,axfer,asset,asset,asset)void" => block@6, method "burn(axfer,asset,asset,asset)void" => block@7, method "swap(axfer,asset,asset)void" => block@8, * => block@10}
debug: simplified terminator of block@11: // bare_routing_L27 from switch tmp%80#0 {0u => block@12, * => block@13} to goto_nth [block@12][tmp%80#0] else goto block@13
debug: adding block@3: // abi_routing_L27 as a predecessor of block@14: // after_if_else_L27 due to inlining of block@10: // switch_case_next_L27
debug: simplified terminator of block@3: // abi_routing_L27 from switch tmp%2#0 {method "set_governor(account)void" => block@4, method "bootstrap(pay,asset,asset)uint64" => block@5, method "mint(axfer,axfer,asset,asset,asset)void" => block@6, method "burn(axfer,asset,asset,asset)void" => block@7, method "swap(axfer,asset,asset)void" => block@8, * => block@10} to switch tmp%2#0 {method "set_governor(account)void" => block@4, method "bootstrap(pay,asset,asset)uint64" => block@5, method "mint(axfer,axfer,asset,asset,asset)void" => block@6, method "burn(axfer,asset,asset,asset)void" => block@7, method "swap(axfer,asset,asset)void" => block@8, * => block@14}
debug: simplified terminator of block@11: // bare_routing_L27 from goto_nth [block@12][tmp%80#0] else goto block@13 to goto tmp%80#0 ? block@13 : block@12
debug: simplified terminator of block@3: // abi_routing_L27 from switch tmp%2#0 {method "set_governor(account)void" => block@4, method "bootstrap(pay,asset,asset)uint64" => block@5, method "mint(axfer,axfer,asset,asset,asset)void" => block@6, method "burn(axfer,asset,asset,asset)void" => block@7, method "swap(axfer,asset,asset)void" => block@8, * => block@14} to switch tmp%2#0 {method "set_governor(account)void" => block@4, method "bootstrap(pay,asset,asset)uint64" => block@5, method "mint(axfer,axfer,asset,asset,asset)void" => block@6, method "burn(axfer,asset,asset,asset)void" => block@7, method "swap(axfer,asset,asset)void" => block@8, * => fail // reject transaction}
debug: inlining condition branch to err block into an assert false
debug: simplified terminator of block@11: // bare_routing_L27 from goto tmp%80#0 ? block@13 : block@12 to goto block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10: // switch_case_next_L27 with block@9: // switch_case_default_L27 in block@14: // after_if_else_L27
debug: Merged linear block@10: // switch_case_next_L27 into block@9: // switch_case_default_L27
debug: Merged linear block@12: // create_L27 into block@11: // bare_routing_L27
debug: Merged linear block@14: // after_if_else_L27 into block@9: // switch_case_default_L27
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@9: // switch_case_default_L27, block@13: // reject_bare_on_completion_L27
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%1%%Accounts_length#0
debug: Removing unused variable inner_txn_params%1%%Amount_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%Applications_length#0
debug: Removing unused variable inner_txn_params%1%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%1%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%1%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%1%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%1%%Assets_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%1%%param_ConfigAssetDecimals_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%1%%Fee_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%1%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%1%%Note_length#0
debug: Removing unused variable inner_txn_params%1%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%1%%Receiver_length#0
debug: Removing unused variable inner_txn_params%1%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%1%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%1%%Sender_length#0
debug: Removing unused variable inner_txn_params%1%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%1%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%1%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%1%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%1%%Type_length#0
debug: Removing unused variable inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%1%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%1%%VotePK_length#0
debug: Removing unused variable inner_txn_params%1%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%1%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%1%%XferAsset_length#0
debug: Removing unused variable %%inner_txn_submit_id#0
debug: Removing unused variable submit_result_0%0%%Amount#0
debug: Removing unused variable submit_result_0%0%%ApplicationID#0
debug: Removing unused variable submit_result_0%0%%ApprovalProgram#0
debug: Removing unused variable submit_result_0%0%%AssetAmount#0
debug: Removing unused variable submit_result_0%0%%AssetCloseTo#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetName#0
debug: Removing unused variable submit_result_0%0%%AssetReceiver#0
debug: Removing unused variable submit_result_0%0%%AssetSender#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetClawback#0
debug: Removing unused variable submit_result_0%0%%ClearStateProgram#0
debug: Removing unused variable submit_result_0%0%%CloseRemainderTo#0
debug: Removing unused variable submit_result_0%0%%ConfigAsset#0
debug: Removing unused variable submit_result_0%0%%CreatedApplicationID#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetDecimals#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetDefaultFrozen#0
debug: Removing unused variable submit_result_0%0%%ExtraProgramPages#0
debug: Removing unused variable submit_result_0%0%%Fee#0
debug: Removing unused variable submit_result_0%0%%FirstValid#0
debug: Removing unused variable submit_result_0%0%%FirstValidTime#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetFreeze#0
debug: Removing unused variable submit_result_0%0%%FreezeAssetAccount#0
debug: Removing unused variable submit_result_0%0%%FreezeAsset#0
debug: Removing unused variable submit_result_0%0%%FreezeAssetFrozen#0
debug: Removing unused variable submit_result_0%0%%GlobalNumByteSlice#0
debug: Removing unused variable submit_result_0%0%%GlobalNumUint#0
debug: Removing unused variable submit_result_0%0%%GroupIndex#0
debug: Removing unused variable submit_result_0%0%%LastLog#0
debug: Removing unused variable submit_result_0%0%%LastValid#0
debug: Removing unused variable submit_result_0%0%%Lease#0
debug: Removing unused variable submit_result_0%0%%LocalNumByteSlice#0
debug: Removing unused variable submit_result_0%0%%LocalNumUint#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetManager#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetMetadataHash#0
debug: Removing unused variable submit_result_0%0%%Nonparticipation#0
debug: Removing unused variable submit_result_0%0%%Note#0
debug: Removing unused variable submit_result_0%0%%NumAccounts#0
debug: Removing unused variable submit_result_0%0%%NumAppArgs#0
debug: Removing unused variable submit_result_0%0%%NumApprovalProgramPages#0
debug: Removing unused variable submit_result_0%0%%NumApplications#0
debug: Removing unused variable submit_result_0%0%%NumAssets#0
debug: Removing unused variable submit_result_0%0%%NumClearStateProgramPages#0
debug: Removing unused variable submit_result_0%0%%NumLogs#0
debug: Removing unused variable submit_result_0%0%%OnCompletion#0
debug: Removing unused variable submit_result_0%0%%Receiver#0
debug: Removing unused variable submit_result_0%0%%RekeyTo#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetReserve#0
debug: Removing unused variable submit_result_0%0%%SelectionPK#0
debug: Removing unused variable submit_result_0%0%%Sender#0
debug: Removing unused variable submit_result_0%0%%StateProofPK#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetTotal#0
debug: Removing unused variable submit_result_0%0%%TxID#0
debug: Removing unused variable submit_result_0%0%%TypeEnum#0
debug: Removing unused variable submit_result_0%0%%Type#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetUnitName#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetURL#0
debug: Removing unused variable submit_result_0%0%%VoteFirst#0
debug: Removing unused variable submit_result_0%0%%VotePK#0
debug: Removing unused variable submit_result_0%0%%VoteKeyDilution#0
debug: Removing unused variable submit_result_0%0%%VoteLast#0
debug: Removing unused variable submit_result_0%0%%XferAsset#0
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1: // next_txn_L273 into block@0: // L270
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: amount#0, inner_txn_params%1%%param_AssetAmount_idx_0#0
debug: Replacing {inner_txn_params%1%%param_AssetAmount_idx_0#0} with amount#0 made 1 modifications
debug: Found equivalence set: receiver#0, inner_txn_params%1%%param_AssetReceiver_idx_0#0
debug: Replacing {inner_txn_params%1%%param_AssetReceiver_idx_0#0} with receiver#0 made 1 modifications
debug: Found equivalence set: asset#0, inner_txn_params%1%%param_XferAsset_idx_0#0
debug: Replacing {inner_txn_params%1%%param_XferAsset_idx_0#0} with asset#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%1%%Accounts_length#0
debug: Removing unused variable inner_txn_params%1%%Amount_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%Applications_length#0
debug: Removing unused variable inner_txn_params%1%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%1%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%1%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%1%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%1%%Assets_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%1%%Fee_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%1%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%1%%Note_length#0
debug: Removing unused variable inner_txn_params%1%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%1%%Receiver_length#0
debug: Removing unused variable inner_txn_params%1%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%1%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%1%%Sender_length#0
debug: Removing unused variable inner_txn_params%1%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%1%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%1%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%1%%Type_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%1%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%1%%VotePK_length#0
debug: Removing unused variable inner_txn_params%1%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%1%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%1%%XferAsset_length#0
debug: Removing unused variable %%inner_txn_submit_id#0
debug: Removing unused variable submit_result_0%0%%Amount#0
debug: Removing unused variable submit_result_0%0%%ApplicationID#0
debug: Removing unused variable submit_result_0%0%%ApprovalProgram#0
debug: Removing unused variable submit_result_0%0%%AssetAmount#0
debug: Removing unused variable submit_result_0%0%%AssetCloseTo#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetName#0
debug: Removing unused variable submit_result_0%0%%AssetReceiver#0
debug: Removing unused variable submit_result_0%0%%AssetSender#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetClawback#0
debug: Removing unused variable submit_result_0%0%%ClearStateProgram#0
debug: Removing unused variable submit_result_0%0%%CloseRemainderTo#0
debug: Removing unused variable submit_result_0%0%%ConfigAsset#0
debug: Removing unused variable submit_result_0%0%%CreatedApplicationID#0
debug: Removing unused variable submit_result_0%0%%CreatedAssetID#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetDecimals#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetDefaultFrozen#0
debug: Removing unused variable submit_result_0%0%%ExtraProgramPages#0
debug: Removing unused variable submit_result_0%0%%Fee#0
debug: Removing unused variable submit_result_0%0%%FirstValid#0
debug: Removing unused variable submit_result_0%0%%FirstValidTime#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetFreeze#0
debug: Removing unused variable submit_result_0%0%%FreezeAssetAccount#0
debug: Removing unused variable submit_result_0%0%%FreezeAsset#0
debug: Removing unused variable submit_result_0%0%%FreezeAssetFrozen#0
debug: Removing unused variable submit_result_0%0%%GlobalNumByteSlice#0
debug: Removing unused variable submit_result_0%0%%GlobalNumUint#0
debug: Removing unused variable submit_result_0%0%%GroupIndex#0
debug: Removing unused variable submit_result_0%0%%LastLog#0
debug: Removing unused variable submit_result_0%0%%LastValid#0
debug: Removing unused variable submit_result_0%0%%Lease#0
debug: Removing unused variable submit_result_0%0%%LocalNumByteSlice#0
debug: Removing unused variable submit_result_0%0%%LocalNumUint#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetManager#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetMetadataHash#0
debug: Removing unused variable submit_result_0%0%%Nonparticipation#0
debug: Removing unused variable submit_result_0%0%%Note#0
debug: Removing unused variable submit_result_0%0%%NumAccounts#0
debug: Removing unused variable submit_result_0%0%%NumAppArgs#0
debug: Removing unused variable submit_result_0%0%%NumApprovalProgramPages#0
debug: Removing unused variable submit_result_0%0%%NumApplications#0
debug: Removing unused variable submit_result_0%0%%NumAssets#0
debug: Removing unused variable submit_result_0%0%%NumClearStateProgramPages#0
debug: Removing unused variable submit_result_0%0%%NumLogs#0
debug: Removing unused variable submit_result_0%0%%OnCompletion#0
debug: Removing unused variable submit_result_0%0%%Receiver#0
debug: Removing unused variable submit_result_0%0%%RekeyTo#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetReserve#0
debug: Removing unused variable submit_result_0%0%%SelectionPK#0
debug: Removing unused variable submit_result_0%0%%Sender#0
debug: Removing unused variable submit_result_0%0%%StateProofPK#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetTotal#0
debug: Removing unused variable submit_result_0%0%%TxID#0
debug: Removing unused variable submit_result_0%0%%TypeEnum#0
debug: Removing unused variable submit_result_0%0%%Type#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetUnitName#0
debug: Removing unused variable submit_result_0%0%%ConfigAssetURL#0
debug: Removing unused variable submit_result_0%0%%VoteFirst#0
debug: Removing unused variable submit_result_0%0%%VotePK#0
debug: Removing unused variable submit_result_0%0%%VoteKeyDilution#0
debug: Removing unused variable submit_result_0%0%%VoteLast#0
debug: Removing unused variable submit_result_0%0%%XferAsset#0
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1: // next_txn_L361 into block@0: // L359
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%36#0: uint64 = ((gtxns AssetAmount) a_xfer#0) with copy of existing registers [Register(atype=uint64, name='tmp%22', version=0, source_location=amm/contract.py:127:15-34)]
debug: Replacing redundant declaration let tmp%37#0: uint64 = ((gtxns AssetAmount) b_xfer#0) with copy of existing registers [Register(atype=uint64, name='tmp%31', version=0, source_location=amm/contract.py:134:15-34)]
debug: Found equivalence set: tmp%22#0, tmp%36#0
debug: Replacing {tmp%36#0} with tmp%22#0 made 1 modifications
debug: Found equivalence set: tmp%31#0, tmp%37#0
debug: Replacing {tmp%37#0} with tmp%31#0 made 1 modifications
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: and_result%2#2, is_initial_mint#0
debug: Replacing {and_result%2#2} with is_initial_mint#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%22#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers [Register(atype=uint64, name='tmp%12', version=0, source_location=amm/contract.py:181:15-37)]
debug: Replacing redundant declaration let tmp%24#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers [Register(atype=uint64, name='tmp%12', version=0, source_location=amm/contract.py:181:15-37)]
debug: Found equivalence set: tmp%12#0, tmp%22#0, tmp%24#0
debug: Replacing {tmp%22#0, tmp%24#0} with tmp%12#0 made 2 modifications
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: app_global_get_ex_value%16#0, out_asset#0
debug: Replacing {app_global_get_ex_value%16#0} with out_asset#0 made 1 modifications
debug: Found equivalence set: app_global_get_ex_value%18#0, out_asset#1
debug: Replacing {app_global_get_ex_value%18#0} with out_asset#1 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: simplified terminator of block@0: // L206 from switch awst_tmp%15#0 {app_global_get_ex_value%11#0 => block@1, app_global_get_ex_value%13#0 => block@2, * => block@3} to switch awst_tmp%15#0 {app_global_get_ex_value%11#0 => block@1, app_global_get_ex_value%13#0 => block@2, * => fail // asset id incorrect}
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@3: // switch_case_default_L233
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%20#0: uint64 = ((gtxns AssetAmount) swap_xfer#0) with copy of existing registers [Register(atype=uint64, name='tmp%6', version=0, source_location=amm/contract.py:230:15-37)]
debug: Found equivalence set: tmp%6#0, tmp%20#0
debug: Replacing {tmp%20#0} with tmp%6#0 made 1 modifications
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#0: uint64 = (* in_amount#0 995u) with copy of existing registers [Register(atype=uint64, name='tmp%2', version=0, source_location=amm/contract.py:354:50-68)]
debug: Found equivalence set: tmp%2#0, tmp%3#0
debug: Replacing {tmp%3#0} with tmp%2#0 made 1 modifications
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to amm/out/contract_ConstantProductAMM.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 2, ending loop
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.approval_program
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.set_governor
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.bootstrap
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Removing Phis from examples.amm.contract.do_asset_transfer
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.mint
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Removing Phis from examples.amm.contract.tokens_to_mint
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._update_ratio
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.burn
debug: Removing Phis from examples.amm.contract.tokens_to_burn
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.swap
debug: Removing Phis from examples.amm.contract.tokens_to_swap
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.__init__
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.clear_state_program
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.approval_program using strategy RootOperandGrouping
debug: Coalescing awst_tmp%15#0 with [awst_tmp%15#1, awst_tmp%15#2, awst_tmp%15#3]
debug: Coalescing resulted in 9 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.set_governor using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_is_governor using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.bootstrap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._create_pool_token using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._do_opt_in using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.do_asset_transfer using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.mint using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_bootstrapped using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_pool_balance using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_a_balance using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_b_balance using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.tokens_to_mint using strategy RootOperandGrouping
debug: Coalescing and_result%2#0 with [and_result%2#1]
debug: Coalescing is_initial_mint#0 with [is_initial_mint#1]
debug: Coalescing resulted in 5 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._update_ratio using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.burn using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.tokens_to_burn using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.swap using strategy RootOperandGrouping
debug: Coalescing in_supply#0 with [in_supply#5, in_supply#1, in_supply#2]
debug: Coalescing out_supply#0 with [out_supply#5, out_supply#1, out_supply#2]
debug: Coalescing out_asset#0 with [out_asset#5, out_asset#1, out_asset#2]
debug: Coalescing resulted in 21 replacement/s
debug: Coalescing local variables in examples.amm.contract.tokens_to_swap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.approval_program
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.set_governor
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.bootstrap
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Sequentializing parallel copies in examples.amm.contract.do_asset_transfer
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.mint
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_mint
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._update_ratio
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.burn
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_burn
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.swap
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_swap
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.__init__
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to amm/out/contract_ConstantProductAMM.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_abi_routing@3.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_abi_routing@3.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_set_governor_route@4.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_set_governor_route@4.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_set_governor_route@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_set_governor_route@4.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_set_governor_route@4.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_set_governor_route@4.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_set_governor_route@4.ops[15]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_set_governor_route@4.ops[17]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_set_governor_route@4.ops[19]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_set_governor_route@4.ops[21]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_set_governor_route@4.ops[23]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_set_governor_route@4.ops[25]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[1]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[3]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[5]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[7]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[10]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[12]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[15]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[17]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[20]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[22]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[24]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[26]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[29]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[31]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[34]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[36]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[38]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[40]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[44]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[46]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[48]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[50]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[61]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[63]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[57]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[60]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[52]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[56]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[42]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[56]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[23]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[56]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[1]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[3]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[5]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[7]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[10]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[12]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[15]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[17]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[20]: 'store awst_tmp%32#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[22]: 'load awst_tmp%32#0' with 'load awst_tmp%32#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[24]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[26]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[29]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[31]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[34]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[36]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[39]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[41]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[43]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[45]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[48]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[50]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[53]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[55]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[57]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[59]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[63]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[65]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[67]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[69]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[73]: 'store tmp%46#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[75]: 'load tmp%46#0' with 'load tmp%46#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[77]: 'store tmp%47#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[79]: 'load tmp%47#0' with 'load tmp%47#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[81]: 'store tmp%48#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[87]: 'load tmp%48#0' with 'load tmp%48#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[71]: 'store tmp%45#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[87]: 'load tmp%45#0' with 'load tmp%45#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[61]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[87]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[42]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[87]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_mint_route@6.ops[23]: 'store awst_tmp%32#0 to l-stack (copy)'
debug: Replaced main_mint_route@6.ops[87]: 'load awst_tmp%32#0' with 'load awst_tmp%32#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[1]: 'store tmp%49#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[3]: 'load tmp%49#0' with 'load tmp%49#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[5]: 'store tmp%50#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[7]: 'load tmp%50#0' with 'load tmp%50#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[10]: 'store tmp%51#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[12]: 'load tmp%51#0' with 'load tmp%51#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[15]: 'store tmp%54#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[17]: 'load tmp%54#0' with 'load tmp%54#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[20]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[22]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[24]: 'store tmp%55#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[26]: 'load tmp%55#0' with 'load tmp%55#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[29]: 'store tmp%56#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[31]: 'load tmp%56#0' with 'load tmp%56#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[34]: 'store tmp%57#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[36]: 'load tmp%57#0' with 'load tmp%57#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[38]: 'store tmp%58#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[40]: 'load tmp%58#0' with 'load tmp%58#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[44]: 'store tmp%60#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[46]: 'load tmp%60#0' with 'load tmp%60#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[48]: 'store tmp%61#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[50]: 'load tmp%61#0' with 'load tmp%61#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[54]: 'store tmp%63#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[56]: 'load tmp%63#0' with 'load tmp%63#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[58]: 'store tmp%64#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[60]: 'load tmp%64#0' with 'load tmp%64#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[62]: 'store tmp%65#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[67]: 'load tmp%65#0' with 'load tmp%65#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[52]: 'store tmp%62#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[67]: 'load tmp%62#0' with 'load tmp%62#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[42]: 'store tmp%59#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[67]: 'load tmp%59#0' with 'load tmp%59#0 from l-stack (no copy)'
debug: Inserted main_burn_route@7.ops[23]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_burn_route@7.ops[67]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[1]: 'store tmp%66#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[3]: 'load tmp%66#0' with 'load tmp%66#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[5]: 'store tmp%67#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[7]: 'load tmp%67#0' with 'load tmp%67#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[10]: 'store tmp%68#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[12]: 'load tmp%68#0' with 'load tmp%68#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[15]: 'store tmp%71#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[17]: 'load tmp%71#0' with 'load tmp%71#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[20]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[22]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[24]: 'store tmp%72#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[26]: 'load tmp%72#0' with 'load tmp%72#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[29]: 'store tmp%73#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[31]: 'load tmp%73#0' with 'load tmp%73#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[34]: 'store tmp%74#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[36]: 'load tmp%74#0' with 'load tmp%74#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[38]: 'store tmp%75#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[40]: 'load tmp%75#0' with 'load tmp%75#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[44]: 'store tmp%77#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[46]: 'load tmp%77#0' with 'load tmp%77#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[48]: 'store tmp%78#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[50]: 'load tmp%78#0' with 'load tmp%78#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[52]: 'store tmp%79#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[56]: 'load tmp%79#0' with 'load tmp%79#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[42]: 'store tmp%76#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[56]: 'load tmp%76#0' with 'load tmp%76#0 from l-stack (no copy)'
debug: Inserted main_swap_route@8.ops[23]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced main_swap_route@8.ops[56]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted main_bare_routing@11.ops[1]: 'store tmp%80#0 to l-stack (copy)'
debug: Replaced main_bare_routing@11.ops[3]: 'load tmp%80#0' with 'load tmp%80#0 from l-stack (no copy)'
debug: Inserted main_bare_routing@11.ops[5]: 'store not%tmp%80#0 to l-stack (copy)'
debug: Replaced main_bare_routing@11.ops[7]: 'load not%tmp%80#0' with 'load not%tmp%80#0 from l-stack (no copy)'
debug: Inserted main_bare_routing@11.ops[10]: 'store tmp%81#0 to l-stack (copy)'
debug: Replaced main_bare_routing@11.ops[12]: 'load tmp%81#0' with 'load tmp%81#0 from l-stack (no copy)'
debug: Inserted main_bare_routing@11.ops[14]: 'store tmp%82#0 to l-stack (copy)'
debug: Replaced main_bare_routing@11.ops[16]: 'load tmp%82#0' with 'load tmp%82#0 from l-stack (no copy)'
debug: Found 3 edge set/s for examples.amm.contract.ConstantProductAMM.approval_program
debug: Inserted _check_is_governor_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted _check_is_governor_block@0.ops[5]: 'store app_global_get_ex_did_exist%2#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[8]: 'load app_global_get_ex_did_exist%2#0' with 'load app_global_get_ex_did_exist%2#0 from l-stack (no copy)'
debug: Inserted _check_is_governor_block@0.ops[7]: 'store app_global_get_ex_value%1#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[12]: 'load app_global_get_ex_value%1#0' with 'load app_global_get_ex_value%1#0 from l-stack (no copy)'
debug: Inserted _check_is_governor_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[15]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[17]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[20]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[22]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[32]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[34]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[38]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[40]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[43]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[45]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[50]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[52]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[92]: 'store val_as_bytes%18#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[94]: 'load val_as_bytes%18#0' with 'load val_as_bytes%18#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[29]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[32]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[63]: 'store new_state_value%11#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[66]: 'load new_state_value%11#0' with 'load new_state_value%11#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[71]: 'store app_global_get_ex_did_exist%13#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[74]: 'load app_global_get_ex_did_exist%13#0' with 'load app_global_get_ex_did_exist%13#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[81]: 'store app_global_get_ex_did_exist%15#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[84]: 'load app_global_get_ex_did_exist%15#0' with 'load app_global_get_ex_did_exist%15#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[91]: 'store app_global_get_ex_did_exist%17#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[94]: 'load app_global_get_ex_did_exist%17#0' with 'load app_global_get_ex_did_exist%17#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[28]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[33]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[75]: 'store app_global_get_ex_value%12#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[79]: 'load app_global_get_ex_value%12#0' with 'load app_global_get_ex_value%12#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[86]: 'store app_global_get_ex_value%14#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[90]: 'load app_global_get_ex_value%14#0' with 'load app_global_get_ex_value%14#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[97]: 'store app_global_get_ex_value%16#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[101]: 'load app_global_get_ex_value%16#0' with 'load app_global_get_ex_value%16#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[17]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[19]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[62]: 'store submit_result_0%0%%CreatedAssetID#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[64]: 'load submit_result_0%0%%CreatedAssetID#0' with 'load submit_result_0%0%%CreatedAssetID#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[4]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[7]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[11]: 'store maybe_value_did_exist%3#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[14]: 'load maybe_value_did_exist%3#0' with 'load maybe_value_did_exist%3#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[28]: 'store app_global_get_ex_did_exist%11#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[31]: 'load app_global_get_ex_did_exist%11#0' with 'load app_global_get_ex_did_exist%11#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[35]: 'store maybe_value_did_exist%9#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[38]: 'load maybe_value_did_exist%9#0' with 'load maybe_value_did_exist%9#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[6]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[10]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[31]: 'store app_global_get_ex_value%10#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[35]: 'load app_global_get_ex_value%10#0' with 'load app_global_get_ex_value%10#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[14]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[19]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[40]: 'store maybe_value%8#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[45]: 'load maybe_value%8#0' with 'load maybe_value%8#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[51]: 'store inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[59]: 'load inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0' with 'load inner_txn_params%1%%param_ConfigAssetReserve_idx_0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[49]: 'store inner_txn_params%1%%param_ConfigAssetManager_idx_0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[62]: 'load inner_txn_params%1%%param_ConfigAssetManager_idx_0#0' with 'load inner_txn_params%1%%param_ConfigAssetManager_idx_0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[26]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[45]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[48]: 'store inner_txn_params%1%%param_ConfigAssetName_idx_0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[70]: 'load inner_txn_params%1%%param_ConfigAssetName_idx_0#0' with 'load inner_txn_params%1%%param_ConfigAssetName_idx_0#0 from l-stack (no copy)'
debug: Inserted _do_opt_in_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _do_opt_in_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[11]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[13]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[25]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[27]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[39]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[41]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[51]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[53]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[63]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[65]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[75]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[77]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[92]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[94]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[98]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[100]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[103]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[105]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[115]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[117]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[132]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[134]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[138]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[140]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[143]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[145]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[159]: 'store to_mint#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[161]: 'load to_mint#0' with 'load to_mint#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[164]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[166]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[4]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[7]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[19]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[22]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[34]: 'store app_global_get_ex_did_exist%7#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[37]: 'load app_global_get_ex_did_exist%7#0' with 'load app_global_get_ex_did_exist%7#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[50]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[53]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[63]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[66]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[76]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[79]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[91]: 'store app_global_get_ex_did_exist%20#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[94]: 'load app_global_get_ex_did_exist%20#0' with 'load app_global_get_ex_did_exist%20#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[118]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[121]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[133]: 'store app_global_get_ex_did_exist%29#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[136]: 'load app_global_get_ex_did_exist%29#0' with 'load app_global_get_ex_did_exist%29#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[182]: 'store app_global_get_ex_did_exist%41#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[185]: 'load app_global_get_ex_did_exist%41#0' with 'load app_global_get_ex_did_exist%41#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[48]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[53]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[62]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[67]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[76]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[81]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[119]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[124]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[165]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[169]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[6]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[11]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[22]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[27]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[38]: 'store app_global_get_ex_value%6#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[43]: 'load app_global_get_ex_value%6#0' with 'load app_global_get_ex_value%6#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[99]: 'store app_global_get_ex_value%19#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[104]: 'load app_global_get_ex_value%19#0' with 'load app_global_get_ex_value%19#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[143]: 'store app_global_get_ex_value%28#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[148]: 'load app_global_get_ex_value%28#0' with 'load app_global_get_ex_value%28#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[168]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[174]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[195]: 'store app_global_get_ex_value%40#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[200]: 'load app_global_get_ex_value%40#0' with 'load app_global_get_ex_value%40#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[166]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[174]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[93]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[104]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[138]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[149]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[192]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[203]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[161]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[181]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[186]: 'store to_mint#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[207]: 'load to_mint#0' with 'load to_mint#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[116]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[181]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted _check_bootstrapped_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced _check_bootstrapped_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted _check_bootstrapped_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced _check_bootstrapped_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[5]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[8]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[13]: 'store maybe_value_did_exist%1#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[16]: 'load maybe_value_did_exist%1#0' with 'load maybe_value_did_exist%1#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[15]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[19]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[7]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[5]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[8]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[13]: 'store maybe_value_did_exist%1#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[16]: 'load maybe_value_did_exist%1#0' with 'load maybe_value_did_exist%1#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[15]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[19]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[7]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[12]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[5]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[8]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[13]: 'store maybe_value_did_exist%1#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[16]: 'load maybe_value_did_exist%1#0' with 'load maybe_value_did_exist%1#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[15]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[19]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[7]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[12]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_and_contd@1.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_and_contd@1.ops[5]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_bool_true@2.ops[1]: 'store and_result%2#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_bool_true@2.ops[3]: 'load and_result%2#0' with 'load and_result%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_bool_false@3.ops[1]: 'store and_result%2#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_bool_false@3.ops[3]: 'load and_result%2#0' with 'load and_result%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@5.ops[3]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@5.ops[5]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@5.ops[7]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@5.ops[9]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@5.ops[12]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@5.ops[14]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[31]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[33]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[11]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[14]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[24]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[27]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[29]: 'store b_ratio#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[32]: 'load b_ratio#0' with 'load b_ratio#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[7]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[14]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[21]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[28]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[17]: 'store a_ratio#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[34]: 'load a_ratio#0' with 'load a_ratio#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@7.ops[3]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@7.ops[5]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@7.ops[8]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@7.ops[10]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_else_body@8.ops[3]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_else_body@8.ops[5]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_else_body@8.ops[8]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_else_body@8.ops[10]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Found 4 edge set/s for examples.amm.contract.tokens_to_mint
debug: Allocated 2 variable/s to x-stack: is_initial_mint#0, issued#0
debug: shared x-stack for tokens_to_mint_bool_true@2 -> tokens_to_mint_bool_merge@4: is_initial_mint#0
debug: shared x-stack for tokens_to_mint_bool_false@3 -> tokens_to_mint_bool_merge@4: is_initial_mint#0
debug: shared x-stack for tokens_to_mint_after_if_else@6 -> tokens_to_mint_if_body@7: issued#0
debug: shared x-stack for tokens_to_mint_after_if_else@6 -> tokens_to_mint_else_body@8: issued#0
debug: examples.amm.contract.tokens_to_mint f-stack entry: ['a_ratio#0', 'b_ratio#0']
debug: examples.amm.contract.tokens_to_mint f-stack on first store: []
debug: Inserted _update_ratio_block@0.ops[7]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[9]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _update_ratio_block@0.ops[12]: 'store new_state_value%1#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[15]: 'load new_state_value%1#0' with 'load new_state_value%1#0 from l-stack (no copy)'
debug: Inserted _update_ratio_block@0.ops[1]: 'store a_balance#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[5]: 'load a_balance#0' with 'load a_balance#0 from l-stack (no copy)'
debug: Inserted _update_ratio_block@0.ops[4]: 'store b_balance#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[12]: 'load b_balance#0' with 'load b_balance#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[11]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[13]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[25]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[27]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[39]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[41]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[51]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[53]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[57]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[59]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[62]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[64]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[79]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[81]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[91]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[93]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[4]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[7]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[19]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[22]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[34]: 'store app_global_get_ex_did_exist%7#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[37]: 'load app_global_get_ex_did_exist%7#0' with 'load app_global_get_ex_did_exist%7#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[50]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[53]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[76]: 'store app_global_get_ex_did_exist%16#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[79]: 'load app_global_get_ex_did_exist%16#0' with 'load app_global_get_ex_did_exist%16#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[92]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[95]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[104]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[107]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[112]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[115]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[124]: 'store app_global_get_ex_did_exist%27#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[127]: 'load app_global_get_ex_did_exist%27#0' with 'load app_global_get_ex_did_exist%27#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[138]: 'store app_global_get_ex_did_exist%30#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[141]: 'load app_global_get_ex_did_exist%30#0' with 'load app_global_get_ex_did_exist%30#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[48]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[53]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[91]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[96]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[104]: 'store pool_balance#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[109]: 'load pool_balance#0' with 'load pool_balance#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[6]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[11]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[22]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[27]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[38]: 'store app_global_get_ex_value%6#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[43]: 'load app_global_get_ex_value%6#0' with 'load app_global_get_ex_value%6#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[82]: 'store app_global_get_ex_value%15#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[87]: 'load app_global_get_ex_value%15#0' with 'load app_global_get_ex_value%15#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[133]: 'store app_global_get_ex_value%26#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[138]: 'load app_global_get_ex_value%26#0' with 'load app_global_get_ex_value%26#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[148]: 'store app_global_get_ex_value%29#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[153]: 'load app_global_get_ex_value%29#0' with 'load app_global_get_ex_value%29#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[114]: 'store pool_balance#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[122]: 'load pool_balance#0' with 'load pool_balance#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[117]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[125]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[76]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[87]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[130]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[141]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[146]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[157]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[120]: 'store a_amt#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[144]: 'load a_amt#0' with 'load a_amt#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[129]: 'store b_amt#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[161]: 'load b_amt#0' with 'load b_amt#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[68]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[118]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[12]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[14]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[17]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[19]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[8]: 'store issued#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[16]: 'load issued#0' with 'load issued#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[11]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[13]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[25]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[27]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[31]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[33]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[36]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[38]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[48]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[50]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[4]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[7]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[19]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[22]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[46]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[49]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[58]: 'store app_global_get_ex_did_exist%12#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[61]: 'load app_global_get_ex_did_exist%12#0' with 'load app_global_get_ex_did_exist%12#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[66]: 'store app_global_get_ex_did_exist%14#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[69]: 'load app_global_get_ex_did_exist%14#0' with 'load app_global_get_ex_did_exist%14#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[44]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[49]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[74]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[78]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[6]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[11]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[22]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[27]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[71]: 'store app_global_get_ex_value%13#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[80]: 'load app_global_get_ex_value%13#0' with 'load app_global_get_ex_value%13#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[63]: 'store app_global_get_ex_value%11#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[80]: 'load app_global_get_ex_value%11#0' with 'load app_global_get_ex_value%11#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_0@1.ops[7]: 'store app_global_get_ex_did_exist%17#0 to l-stack (copy)'
debug: Replaced swap_switch_case_0@1.ops[10]: 'load app_global_get_ex_did_exist%17#0' with 'load app_global_get_ex_did_exist%17#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_1@2.ops[7]: 'store app_global_get_ex_did_exist%19#0 to l-stack (copy)'
debug: Replaced swap_switch_case_1@2.ops[10]: 'load app_global_get_ex_did_exist%19#0' with 'load app_global_get_ex_did_exist%19#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[4]: 'store to_swap#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[6]: 'load to_swap#0' with 'load to_swap#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[9]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[11]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[14]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[16]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[7]: 'store to_swap#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[19]: 'load to_swap#0' with 'load to_swap#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.amm.contract.ConstantProductAMM.swap
debug: Allocated 1 variable/s to x-stack: out_supply#0
debug: shared x-stack for swap_switch_case_0@1 -> swap_switch_case_next@4: out_supply#0
debug: shared x-stack for swap_switch_case_1@2 -> swap_switch_case_next@4: out_supply#0
debug: examples.amm.contract.ConstantProductAMM.swap f-stack entry: ['in_supply#0', 'out_asset#0']
debug: examples.amm.contract.ConstantProductAMM.swap f-stack on first store: ['tmp%6#0']
debug: Inserted tokens_to_swap_block@0.ops[19]: 'store out_total#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[21]: 'load out_total#0' with 'load out_total#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[24]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[26]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[12]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[15]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[16]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[19]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[15]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[19]: 'store in_total#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[27]: 'load in_total#0' with 'load in_total#0 from l-stack (no copy)'
debug: Inserted __init___block@0.ops[7]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced __init___block@0.ops[10]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
info: Writing amm/out/contract.approval.teal
info: Writing amm/out/contract.clear.teal
info: Writing amm/out/application.json