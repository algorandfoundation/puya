debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['amm'], resource_encoding='value', output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing amm/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.amm.contract.tokens_to_mint
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let a_amount#1: uint64 = undefined while trying to resolve 'a_amount' in block@4
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2) in block@2
debug: Created Phi assignment: let a_amount#2: uint64 = undefined while trying to resolve 'a_amount' in block@3
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0) in block@0
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0
debug: Deleting Phi assignment: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1)
debug: Replaced trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0 in current definition for 1 blocks
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0
debug: Deleting Phi assignment: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3)
debug: Replaced trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_amount#1: uint64 = undefined while trying to resolve 'b_amount' in block@4
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2) in block@2
debug: Created Phi assignment: let b_amount#2: uint64 = undefined while trying to resolve 'b_amount' in block@3
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0) in block@0
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0
debug: Deleting Phi assignment: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1)
debug: Replaced trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0 in current definition for 1 blocks
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0
debug: Deleting Phi assignment: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3)
debug: Replaced trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let pool_balance#1: uint64 = undefined while trying to resolve 'pool_balance' in block@4
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2) in block@2
debug: Created Phi assignment: let pool_balance#2: uint64 = undefined while trying to resolve 'pool_balance' in block@3
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0) in block@0
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1)
debug: Replaced trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0 in current definition for 1 blocks
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3)
debug: Replaced trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let a_balance#1: uint64 = undefined while trying to resolve 'a_balance' in block@4
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2) in block@2
debug: Created Phi assignment: let a_balance#2: uint64 = undefined while trying to resolve 'a_balance' in block@3
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0) in block@0
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0
debug: Deleting Phi assignment: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1)
debug: Replaced trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0 in current definition for 1 blocks
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0
debug: Deleting Phi assignment: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3)
debug: Replaced trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_balance#1: uint64 = undefined while trying to resolve 'b_balance' in block@4
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2) in block@2
debug: Created Phi assignment: let b_balance#2: uint64 = undefined while trying to resolve 'b_balance' in block@3
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0) in block@0
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0
debug: Deleting Phi assignment: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1)
debug: Replaced trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0 in current definition for 1 blocks
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0
debug: Deleting Phi assignment: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3)
debug: Replaced trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function examples.amm.contract.tokens_to_burn
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.tokens_to_swap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.do_asset_transfer
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.set_governor
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.bootstrap
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.mint
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.burn
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.swap
debug: Sealing block@0
debug: Terminated block@0
debug: Terminated block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let swap_xfer#1: uint64 = undefined while trying to resolve 'swap_xfer' in block@4
debug: Looking for 'swap_xfer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let swap_xfer#2: uint64 = undefined while trying to resolve 'swap_xfer' in block@1
debug: Added swap_xfer#2 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#2 <- block@1) in block@1
debug: Looking for 'swap_xfer' in an unsealed block creating an incomplete Phi: block@2
debug: Created Phi assignment: let swap_xfer#3: uint64 = undefined while trying to resolve 'swap_xfer' in block@2
debug: Added swap_xfer#3 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#2 <- block@1, swap_xfer#3 <- block@2) in block@2
debug: Created Phi assignment: let in_supply#2: uint64 = undefined while trying to resolve 'in_supply' in block@4
debug: Added in_supply#0 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1) in block@1
debug: Added in_supply#1 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1, in_supply#1 <- block@2) in block@2
debug: Created Phi assignment: let out_supply#2: uint64 = undefined while trying to resolve 'out_supply' in block@4
debug: Added out_supply#0 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1) in block@1
debug: Added out_supply#1 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1, out_supply#1 <- block@2) in block@2
debug: Created Phi assignment: let out_asset#2: uint64 = undefined while trying to resolve 'out_asset' in block@4
debug: Added out_asset#0 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1) in block@1
debug: Added out_asset#1 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1, out_asset#1 <- block@2) in block@2
debug: Terminated block@4
debug: Sealing block@1
debug: Added swap_xfer#0 to Phi node: let swap_xfer#2: uint64 = φ(swap_xfer#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let swap_xfer#2: uint64 = φ(swap_xfer#0 <- block@0) (swap_xfer#2) with swap_xfer#0
debug: Deleting Phi assignment: let swap_xfer#2: uint64 = φ(swap_xfer#0 <- block@0)
debug: Replaced trivial Phi node: let swap_xfer#2: uint64 = φ(swap_xfer#0 <- block@0) (swap_xfer#2) with swap_xfer#0 in current definition for 1 blocks
debug: Sealing block@2
debug: Added swap_xfer#0 to Phi node: let swap_xfer#3: uint64 = φ(swap_xfer#0 <- block@0) in block@0
debug: Replacing trivial Phi node: let swap_xfer#3: uint64 = φ(swap_xfer#0 <- block@0) (swap_xfer#3) with swap_xfer#0
debug: Deleting Phi assignment: let swap_xfer#3: uint64 = φ(swap_xfer#0 <- block@0)
debug: Replacing trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0
debug: Deleting Phi assignment: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2)
debug: Replaced trivial Phi node: let swap_xfer#3: uint64 = φ(swap_xfer#0 <- block@0) (swap_xfer#3) with swap_xfer#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0 in current definition for 1 blocks
debug: Building IR for function examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._update_ratio
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.amm.contract.tokens_to_mint
debug: removing unused subroutine examples.amm.contract.tokens_to_burn
debug: removing unused subroutine examples.amm.contract.tokens_to_swap
debug: removing unused subroutine examples.amm.contract.do_asset_transfer
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.mint
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.burn
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.swap
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.000.ssa.ir
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.clear.000.ssa.ir
debug: optimizing approval program of examples.amm.contract.ConstantProductAMM at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function examples.amm.contract.tokens_to_mint for inlining
debug: marking single-use function examples.amm.contract.tokens_to_swap for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM.__init__ for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM.set_governor for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM.bootstrap for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM.mint for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM.burn for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM.swap for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM._create_pool_token for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.amm.contract.ConstantProductAMM.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: inlining call to examples.amm.contract.ConstantProductAMM.__init__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@15 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@17 with block@1 in block@18
debug: Merged linear block@17 into block@1
debug: Replaced predecessor block@18 with block@1 in block@2
debug: Merged linear block@18 into block@1
debug: Replaced predecessor block@3 with block@2 in block@14
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@15 into block@13
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@11
debug: Removing jump block block@12
debug: branching to block@11 will be replaced with block@13
debug: branching to block@12 will be replaced with block@13
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@16
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: and_result%0#2, is_initial_mint#0
debug: selected is_initial_mint#0 from equivalence set
debug: Found equivalence set: tmp%5#0, issued#0
debug: selected issued#0 from equivalence set
debug: Found equivalence set: tmp%8#0, a_ratio#0
debug: selected a_ratio#0 from equivalence set
debug: Found equivalence set: tmp%11#0, b_ratio#0
debug: selected b_ratio#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, issued#0
debug: selected issued#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, in_total#0
debug: selected in_total#0 from equivalence set
debug: Found equivalence set: tmp%5#0, out_total#0
debug: selected out_total#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* in_amount#0 995u) with copy of existing registers [Register(source_location=amm/contract.py:354:50-68, ir_type=uint64, name='tmp%2', version=0)]
debug: Found equivalence set: tmp%2#0, tmp%4#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
debug: selected asset#0 from equivalence set
debug: Found equivalence set: amount#0, inner_txn_params%0%%param_AssetAmount_idx_0#0
debug: selected amount#0 from equivalence set
debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0
debug: selected receiver#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.amm.contract.ConstantProductAMM.__algopy_default_create in examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@12 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@13 with block@11 in block@14
debug: Merged linear block@13 into block@11
debug: Merged linear block@14 into block@11
debug: Merged linear block@12 into block@10
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@8
debug: Removing jump block block@9
debug: branching to block@8 will be replaced with block@10
debug: branching to block@9 will be replaced with block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:43:6 debug: inlining call to examples.amm.contract.ConstantProductAMM.set_governor in examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, new_governor#0
debug: selected new_governor#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:49:6 debug: inlining call to examples.amm.contract.ConstantProductAMM.bootstrap in examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: gtxn_idx%0#0, seed#0
debug: selected seed#0 from equivalence set
debug: Found equivalence set: tmp%2#0, a_asset#0
debug: selected a_asset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, b_asset#0
debug: selected b_asset#0 from equivalence set
debug: Found equivalence set: maybe_value%3#0, tmp%5#0
debug: selected maybe_value%3#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== maybe_value%0#0 0u) to (! maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:81:6 debug: inlining call to examples.amm.contract.ConstantProductAMM.mint in examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: gtxn_idx%0#0, a_xfer#0
debug: selected a_xfer#0 from equivalence set
debug: Found equivalence set: gtxn_idx%1#0, b_xfer#0
debug: selected b_xfer#0 from equivalence set
debug: Found equivalence set: tmp%3#0, pool_asset#0
debug: selected pool_asset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, a_asset#0
debug: selected a_asset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, b_asset#0
debug: selected b_asset#0 from equivalence set
debug: Found equivalence set: tmp%28#0, to_mint#0
debug: selected to_mint#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%26#0: uint64 = ((gtxns AssetAmount) a_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:126:15-34, ir_type=uint64, name='tmp%14', version=0)]
debug: Replacing redundant declaration let tmp%27#0: uint64 = ((gtxns AssetAmount) b_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:133:15-34, ir_type=uint64, name='tmp%21', version=0)]
debug: Found equivalence set: tmp%14#0, tmp%26#0
debug: selected tmp%14#0 from equivalence set
debug: Found equivalence set: tmp%21#0, tmp%27#0
debug: selected tmp%21#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:125:37 debug: replacing app_global read with cached value for key: "asset_a"
amm/contract.py:132:37 debug: replacing app_global read with cached value for key: "asset_b"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:148:6 debug: inlining call to examples.amm.contract.ConstantProductAMM.burn in examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: gtxn_idx%0#0, pool_xfer#0
debug: selected pool_xfer#0 from equivalence set
debug: Found equivalence set: tmp%2#0, pool_asset#0
debug: selected pool_asset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, a_asset#0
debug: selected a_asset#0 from equivalence set
debug: Found equivalence set: tmp%6#0, b_asset#0
debug: selected b_asset#0 from equivalence set
debug: Found equivalence set: tmp%13#0, pool_balance#0
debug: selected pool_balance#0 from equivalence set
debug: Found equivalence set: tmp%16#0, a_amt#0
debug: selected a_amt#0 from equivalence set
debug: Found equivalence set: tmp%19#0, b_amt#0
debug: selected b_amt#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%15#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:181:15-37, ir_type=uint64, name='tmp%6', version=1)]
debug: Replacing redundant declaration let tmp%18#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:181:15-37, ir_type=uint64, name='tmp%6', version=1)]
debug: Found equivalence set: tmp%6#1, tmp%15#0, tmp%18#0
debug: selected tmp%6#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:182:40 debug: replacing app_global read with cached value for key: "pool_token"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:206:6 debug: inlining call to examples.amm.contract.ConstantProductAMM.swap in examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: gtxn_idx%0#0, swap_xfer#0
debug: selected swap_xfer#0 from equivalence set
debug: Found equivalence set: tmp%2#0, a_asset#0
debug: selected a_asset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, b_asset#0
debug: selected b_asset#0 from equivalence set
debug: Found equivalence set: tmp%8#0, in_supply#0
debug: selected in_supply#0 from equivalence set
debug: Found equivalence set: tmp%9#0, out_supply#0
debug: selected out_supply#0 from equivalence set
debug: Found equivalence set: maybe_value%4#0, out_asset#0
debug: selected out_asset#0 from equivalence set
debug: Found equivalence set: tmp%10#0, in_supply#1
debug: selected in_supply#1 from equivalence set
debug: Found equivalence set: tmp%11#0, out_supply#1
debug: selected out_supply#1 from equivalence set
debug: Found equivalence set: maybe_value%5#0, out_asset#1
debug: selected out_asset#1 from equivalence set
debug: Found equivalence set: tmp%13#0, to_swap#0
debug: selected to_swap#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Replaced predecessor block@1 with block@0 in block@4
debug: Merged linear block@1 into block@0
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%12#0: uint64 = ((gtxns AssetAmount) swap_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:231:15-37, ir_type=uint64, name='tmp%2', version=1)]
debug: Found equivalence set: tmp%2#1, tmp%12#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:235:18 debug: replacing app_global read with cached value for key: "asset_a"
amm/contract.py:239:18 debug: replacing app_global read with cached value for key: "asset_b"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:75:27 debug: inlining call to examples.amm.contract.ConstantProductAMM._create_pool_token in examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#1, tmp%9#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetDecimals_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== maybe_value%0#0 0u) to (! maybe_value%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:275:70 debug: replacing app_global read with cached value for key: "asset_b"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:135:19 debug: inlining call to examples.amm.contract.tokens_to_mint in examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%23#0, pool_balance#0
debug: selected pool_balance#0 from equivalence set
debug: Found equivalence set: tmp%24#0, a_balance#0
debug: selected a_balance#0 from equivalence set
debug: Found equivalence set: tmp%25#0, b_balance#0
debug: selected b_balance#0 from equivalence set
debug: Found equivalence set: tmp%26#0, a_amount#0
debug: selected a_amount#0 from equivalence set
debug: Found equivalence set: tmp%27#0, b_amount#0
debug: selected b_amount#0 from equivalence set
debug: Found equivalence set: tmp%28#0, to_mint#0
debug: selected to_mint#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@4
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let a_amount#0: uint64 = ((gtxns AssetAmount) a_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:126:15-34, ir_type=uint64, name='tmp%14', version=0)]
debug: Replacing redundant declaration let b_amount#0: uint64 = ((gtxns AssetAmount) b_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:133:15-34, ir_type=uint64, name='tmp%21', version=0)]
debug: Found equivalence set: tmp%14#0, a_amount#0
debug: selected a_amount#0 from equivalence set
debug: Found equivalence set: tmp%21#0, b_amount#0
debug: selected b_amount#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:125:37 debug: replacing app_global read with cached value for key: "asset_a"
amm/contract.py:132:37 debug: replacing app_global read with cached value for key: "asset_b"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%13#0, pool_balance#0
debug: selected pool_balance#0 from equivalence set
debug: Found equivalence set: tmp%16#0, a_amt#0
debug: selected a_amt#0 from equivalence set
debug: Found equivalence set: tmp%19#0, b_amt#0
debug: selected b_amt#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%15#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:181:15-37, ir_type=uint64, name='tmp%6', version=0)]
debug: Replacing redundant declaration let tmp%18#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:181:15-37, ir_type=uint64, name='tmp%6', version=0)]
debug: Found equivalence set: tmp%6#0, tmp%15#0, tmp%18#0
debug: selected tmp%6#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:182:40 debug: replacing app_global read with cached value for key: "pool_token"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:246:19 debug: inlining call to examples.amm.contract.tokens_to_swap in examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%8#0, in_supply#0
debug: selected in_supply#0 from equivalence set
debug: Found equivalence set: tmp%9#0, out_supply#0
debug: selected out_supply#0 from equivalence set
debug: Found equivalence set: maybe_value%4#0, out_asset#0
debug: selected out_asset#0 from equivalence set
debug: Found equivalence set: tmp%10#0, in_supply#1
debug: selected in_supply#1 from equivalence set
debug: Found equivalence set: tmp%11#0, out_supply#1
debug: selected out_supply#1 from equivalence set
debug: Found equivalence set: maybe_value%5#0, out_asset#1
debug: selected out_asset#1 from equivalence set
debug: Found equivalence set: tmp%12#0, in_amount#0
debug: selected in_amount#0 from equivalence set
debug: Found equivalence set: in_supply#2, in_supply#3
debug: selected in_supply#2 from equivalence set
debug: Found equivalence set: out_supply#2, out_supply#3
debug: selected out_supply#2 from equivalence set
debug: Found equivalence set: tmp%6#1, tmp%13#0, to_swap#0
debug: selected to_swap#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Merged linear block@6 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let in_amount#0: uint64 = ((gtxns AssetAmount) swap_xfer#0) with copy of existing registers [Register(source_location=amm/contract.py:231:15-37, ir_type=uint64, name='tmp%2', version=0)]
debug: Found equivalence set: tmp%2#0, in_amount#0
debug: selected in_amount#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:235:18 debug: replacing app_global read with cached value for key: "asset_a"
amm/contract.py:239:18 debug: replacing app_global read with cached value for key: "asset_b"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, a_balance#0
debug: selected a_balance#0 from equivalence set
debug: Found equivalence set: tmp%1#0, b_balance#0
debug: selected b_balance#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetDecimals_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.mint
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.burn
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Unused subroutines removed
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking single-use function examples.amm.contract.tokens_to_mint for inlining
debug: marking single-use function examples.amm.contract.tokens_to_swap for inlining
debug: marking single-use function examples.amm.contract.ConstantProductAMM._create_pool_token for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.amm.contract.ConstantProductAMM.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@4 from goto tmp%4#0 ? block@5 : block@13 to goto block@5
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Replaced predecessor block@5 with block@4 in block@8
debug: Replaced predecessor block@5 with block@4 in block@9
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Replaced predecessor block@5 with block@4 in block@13
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@15 with block@14 in block@16
debug: Merged linear block@15 into block@14
debug: Merged linear block@16 into block@14
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:75:27 debug: inlining call to examples.amm.contract.ConstantProductAMM._create_pool_token in examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#2, tmp%9#0
debug: selected tmp%2#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:135:19 debug: inlining call to examples.amm.contract.tokens_to_mint in examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, maybe_value%3#0
debug: selected maybe_value%1#0 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, maybe_exists%3#0
debug: selected maybe_exists%1#0 from equivalence set
debug: Found equivalence set: maybe_value%2#0, maybe_value%4#0
debug: selected maybe_value%2#0 from equivalence set
debug: Found equivalence set: maybe_exists%2#0, maybe_exists%4#0
debug: selected maybe_exists%2#0 from equivalence set
debug: Found equivalence set: tmp%23#0, pool_balance#0
debug: selected pool_balance#0 from equivalence set
debug: Found equivalence set: tmp%24#0, a_balance#0
debug: selected a_balance#0 from equivalence set
debug: Found equivalence set: tmp%25#0, b_balance#0
debug: selected b_balance#0 from equivalence set
debug: Found equivalence set: tmp%14#0, a_amount#0
debug: selected a_amount#0 from equivalence set
debug: Found equivalence set: tmp%21#0, b_amount#0
debug: selected b_amount#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%29#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@4
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%1#0
debug: Removing redundant assert of maybe_exists%2#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%3#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%3#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:246:19 debug: inlining call to examples.amm.contract.tokens_to_swap in examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%2#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%2#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, maybe_value%3#0
debug: selected maybe_value%1#0 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, maybe_exists%3#0
debug: selected maybe_exists%1#0 from equivalence set
debug: Found equivalence set: tmp%2#1, in_amount#0
debug: selected in_amount#0 from equivalence set
debug: Found equivalence set: in_supply#2, in_supply#3
debug: selected in_supply#2 from equivalence set
debug: Found equivalence set: out_supply#2, out_supply#3
debug: selected out_supply#2 from equivalence set
debug: Found equivalence set: tmp%6#1, to_swap#0
debug: selected to_swap#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%3#1
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Merged linear block@6 into block@5
debug: Merged linear block@7 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#0
debug: Removing redundant assert of maybe_exists%1#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.amm.contract.tokens_to_mint
debug: removing unused subroutine examples.amm.contract.tokens_to_swap
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Unused subroutines removed
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: marking simple function examples.amm.contract.tokens_to_burn for inlining (complexity=4 <= threshold=5)
debug: marking simple function examples.amm.contract.ConstantProductAMM._check_bootstrapped for inlining (complexity=3 <= threshold=3)
debug: marking simple function examples.amm.contract.ConstantProductAMM._do_opt_in for inlining (complexity=2 <= threshold=3)
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:77:9 debug: inlining call to examples.amm.contract.ConstantProductAMM._do_opt_in in examples.amm.contract.ConstantProductAMM.bootstrap[routing]
amm/contract.py:78:9 debug: inlining call to examples.amm.contract.ConstantProductAMM._do_opt_in in examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, asset#0
debug: selected asset#0 from equivalence set
debug: Found equivalence set: maybe_value%2#0, asset#1
debug: selected asset#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:112:9 debug: inlining call to examples.amm.contract.ConstantProductAMM._check_bootstrapped in examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@11 with block@0 in block@12
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@12 with block@0 in block@4
debug: Replaced predecessor block@12 with block@0 in block@2
debug: Merged linear block@12 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:115:30 debug: replacing app_global read with cached value for key: "pool_token"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:172:9 debug: inlining call to examples.amm.contract.ConstantProductAMM._check_bootstrapped in examples.amm.contract.ConstantProductAMM.burn[routing]
amm/contract.py:188:17 debug: inlining call to examples.amm.contract.tokens_to_burn in examples.amm.contract.ConstantProductAMM.burn[routing]
amm/contract.py:193:17 debug: inlining call to examples.amm.contract.tokens_to_burn in examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: pool_balance#0, pool_balance#1, pool_balance#2
debug: selected pool_balance#0 from equivalence set
debug: Found equivalence set: tmp%14#0, supply#0
debug: selected supply#0 from equivalence set
debug: Found equivalence set: tmp%6#1, amount#0, amount#1
debug: selected amount#0 from equivalence set
debug: Found equivalence set: tmp%3#2, a_amt#0
debug: selected a_amt#0 from equivalence set
debug: Found equivalence set: tmp%17#0, supply#1
debug: selected supply#1 from equivalence set
debug: Found equivalence set: tmp%3#3, b_amt#0
debug: selected b_amt#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%0#3: uint64 = (- 10000000000u pool_balance#0) with copy of existing registers [Register(source_location=amm/contract.py:348:13-40, ir_type=uint64, name='tmp%0', version=2)]
debug: Found equivalence set: tmp%0#2, tmp%0#3
debug: selected tmp%0#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let issued#1: uint64 = (- tmp%0#2 amount#0) with copy of existing registers [Register(source_location=amm/contract.py:348:4-10, ir_type=uint64, name='issued', version=0)]
debug: Found equivalence set: issued#0, issued#1
debug: selected issued#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:174:30 debug: replacing app_global read with cached value for key: "pool_token"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
amm/contract.py:226:9 debug: inlining call to examples.amm.contract.ConstantProductAMM._check_bootstrapped in examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@2
debug: Replaced predecessor block@7 with block@0 in block@3
debug: Replaced predecessor block@7 with block@0 in block@4
debug: Merged linear block@7 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.amm.contract.tokens_to_burn
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: removing unused subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Unused subroutines removed
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#1, maybe_value%0#0
debug: selected maybe_value%0#1 from equivalence set
debug: Found equivalence set: maybe_exists%0#1, maybe_exists%0#0
debug: selected maybe_exists%0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#1
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#1, maybe_value%0#0
debug: selected maybe_value%0#1 from equivalence set
debug: Found equivalence set: maybe_exists%0#1, maybe_exists%0#0
debug: selected maybe_exists%0#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#1
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.004.ssa.opt.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of examples.amm.contract.ConstantProductAMM at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.amm.contract.ConstantProductAMM
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of examples.amm.contract.ConstantProductAMM
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.clear.100.ssa.array.ir
debug: optimizing approval program of examples.amm.contract.ConstantProductAMM at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint8[32])%0#0, new_governor#0
debug: selected new_governor#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%6#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
amm/contract.py:275:70 debug: replacing app_global read with cached value for key: "asset_b"
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b_asset#0, maybe_value%1#1
debug: selected b_asset#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable maybe_exists%1#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of examples.amm.contract.ConstantProductAMM at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.amm.contract.ConstantProductAMM
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
amm/contract.py:359 debug: auto reserving slots in examples.amm.contract.do_asset_transfer, []
amm/contract.py:43:6 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.set_governor[routing], []
amm/contract.py:49:6 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.bootstrap[routing], []
amm/contract.py:81:6 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.mint[routing], []
amm/contract.py:148:6 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.burn[routing], []
amm/contract.py:206:6 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM.swap[routing], []
amm/contract.py:258 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._update_ratio, []
amm/contract.py:265 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._check_is_governor, []
amm/contract.py:294 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._current_pool_balance, []
amm/contract.py:298 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._current_a_balance, []
amm/contract.py:302 debug: auto reserving slots in examples.amm.contract.ConstantProductAMM._current_b_balance, []
debug: Slot allocation not required
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of examples.amm.contract.ConstantProductAMM
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: splitting critical edge block@0->block@2
debug: Replaced predecessor block@0 with block@15 in block@2
debug: splitting critical edge block@4->block@13
debug: Replaced predecessor block@4 with block@16 in block@13
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@15
debug: Removing jump block block@16
debug: branching to block@15 will be replaced with block@2
debug: branching to block@16 will be replaced with block@13
debug: Performing SSA IR destructuring for examples.amm.contract.do_asset_transfer
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.do_asset_transfer using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.do_asset_transfer
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.set_governor[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.set_governor[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.bootstrap[routing] using strategy 'root_operand'
debug: Coalescing tmp%1#0 with [tmp%1#1]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
debug: Coalescing asset#0 with [asset#1]
debug: Coalescing tmp%0#3 with [tmp%0#4]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.bootstrap[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.mint[routing]
debug: splitting critical edge block@0->block@4
debug: Replaced predecessor block@0 with block@11 in block@4
debug: splitting critical edge block@2->block@4
debug: Replaced predecessor block@2 with block@12 in block@4
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.mint[routing] using strategy 'root_operand'
debug: Coalescing tmp%2#0 with [tmp%2#2]
debug: Coalescing tmp%4#0 with [tmp%4#2]
debug: Coalescing tmp%6#0 with [tmp%6#2]
debug: Coalescing tmp%0#1 with [tmp%0#2]
debug: Coalescing tmp%1#1 with [tmp%1#2]
debug: Coalescing and_result%0#0 with [and_result%0#1]
debug: Coalescing resulted in 12 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@11
debug: Removing jump block block@12
debug: branching to block@11 will be replaced with block@4
debug: branching to block@12 will be replaced with block@4
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.burn[routing] using strategy 'root_operand'
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing supply#0 with [supply#1]
debug: Coalescing tmp%2#2 with [tmp%2#3]
debug: Coalescing resulted in 6 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.burn[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.swap[routing] using strategy 'root_operand'
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing tmp%1#0 with [tmp%1#2]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
debug: Coalescing in_supply#0 with [in_supply#2, in_supply#1]
debug: Coalescing out_supply#0 with [out_supply#2, out_supply#1]
debug: Coalescing out_asset#0 with [out_asset#2, out_asset#1]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._update_ratio
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._update_ratio using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._update_ratio
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_is_governor using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_pool_balance using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_a_balance using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_b_balance using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Performing post-SSA optimizations at level 1
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to amm/out/ConstantProductAMM.ir/ConstantProductAMM.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_call___init__@1.ops[7]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_call___init__@1.ops[10]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_abi_routing@4.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_abi_routing@4.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_abi_routing@4.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_abi_routing@4.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_abi_routing@4.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_abi_routing@4.ops[22]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main___algopy_default_create@14.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main___algopy_default_create@14.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@14.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@14.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@14.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@14.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@14.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@14.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@14.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@14.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted set_governor_block@0.ops[1]: 'l-store-copy new_governor#0 0'
debug: Replaced set_governor_block@0.ops[5]: 'v-load new_governor#0' with 'l-load new_governor#0'
debug: Inserted bootstrap_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced bootstrap_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted bootstrap_block@0.ops[6]: 'l-store-copy seed#0 0'
debug: Replaced bootstrap_block@0.ops[8]: 'v-load seed#0' with 'l-load seed#0'
debug: Inserted bootstrap_block@0.ops[10]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced bootstrap_block@0.ops[12]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted bootstrap_block@0.ops[15]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced bootstrap_block@0.ops[17]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted bootstrap_block@0.ops[20]: 'l-store-copy reinterpret_Encoded(uint8)%0#0 0'
debug: Replaced bootstrap_block@0.ops[22]: 'v-load reinterpret_Encoded(uint8)%0#0' with 'l-load reinterpret_Encoded(uint8)%0#0'
debug: Inserted bootstrap_block@0.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced bootstrap_block@0.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted bootstrap_block@0.ops[30]: 'l-store-copy reinterpret_Encoded(uint8)%1#0 0'
debug: Replaced bootstrap_block@0.ops[32]: 'v-load reinterpret_Encoded(uint8)%1#0' with 'l-load reinterpret_Encoded(uint8)%1#0'
debug: Inserted bootstrap_block@0.ops[34]: 'l-store-copy tmp%3#0 0'
debug: Replaced bootstrap_block@0.ops[36]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted bootstrap_block@0.ops[48]: 'l-store-copy tmp%0#1 0'
debug: Replaced bootstrap_block@0.ops[50]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted bootstrap_block@0.ops[54]: 'l-store-copy tmp%1#0 0'
debug: Replaced bootstrap_block@0.ops[56]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted bootstrap_block@0.ops[59]: 'l-store-copy tmp%2#1 0'
debug: Replaced bootstrap_block@0.ops[61]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted bootstrap_block@0.ops[71]: 'l-store-copy tmp%5#1 0'
debug: Replaced bootstrap_block@0.ops[73]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted bootstrap_block@0.ops[77]: 'l-store-copy tmp%6#1 0'
debug: Replaced bootstrap_block@0.ops[79]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted bootstrap_block@0.ops[82]: 'l-store-copy tmp%7#1 0'
debug: Replaced bootstrap_block@0.ops[84]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted bootstrap_block@0.ops[89]: 'l-store-copy tmp%8#0 0'
debug: Replaced bootstrap_block@0.ops[91]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted bootstrap_block@0.ops[116]: 'l-store-copy tmp%0#2 0'
debug: Replaced bootstrap_block@0.ops[118]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted bootstrap_block@0.ops[135]: 'l-store-copy inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0 0'
debug: Replaced bootstrap_block@0.ops[137]: 'v-load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0' with 'l-load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0'
debug: Inserted bootstrap_block@0.ops[167]: 'l-store-copy tmp%0#3 0'
debug: Replaced bootstrap_block@0.ops[169]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted bootstrap_block@0.ops[181]: 'l-store-copy tmp%0#3 0'
debug: Replaced bootstrap_block@0.ops[183]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted bootstrap_block@0.ops[200]: 'l-store-copy tmp%7#0 0'
debug: Replaced bootstrap_block@0.ops[202]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted bootstrap_block@0.ops[42]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced bootstrap_block@0.ops[45]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted bootstrap_block@0.ops[68]: 'l-store-copy tmp%4#1 0'
debug: Replaced bootstrap_block@0.ops[71]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted bootstrap_block@0.ops[105]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced bootstrap_block@0.ops[108]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted bootstrap_block@0.ops[112]: 'l-store-copy check%0#0 1'
debug: Replaced bootstrap_block@0.ops[115]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted bootstrap_block@0.ops[128]: 'l-store-copy check%1#0 1'
debug: Replaced bootstrap_block@0.ops[131]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted bootstrap_block@0.ops[160]: 'l-store-copy tmp%2#2 0'
debug: Replaced bootstrap_block@0.ops[163]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted bootstrap_block@0.ops[168]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced bootstrap_block@0.ops[171]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted bootstrap_block@0.ops[183]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced bootstrap_block@0.ops[186]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted bootstrap_block@0.ops[198]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced bootstrap_block@0.ops[201]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted bootstrap_block@0.ops[205]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced bootstrap_block@0.ops[208]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted bootstrap_block@0.ops[44]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced bootstrap_block@0.ops[48]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted bootstrap_block@0.ops[67]: 'l-store-copy tmp%3#1 0'
debug: Replaced bootstrap_block@0.ops[72]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted bootstrap_block@0.ops[109]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced bootstrap_block@0.ops[113]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted bootstrap_block@0.ops[203]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced bootstrap_block@0.ops[207]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted bootstrap_block@0.ops[117]: 'l-store-copy value%0#0 1'
debug: Replaced bootstrap_block@0.ops[122]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted bootstrap_block@0.ops[134]: 'l-store-copy value%1#0 1'
debug: Replaced bootstrap_block@0.ops[139]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted bootstrap_block@0.ops[143]: 'l-store-copy inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 0'
debug: Replaced bootstrap_block@0.ops[150]: 'v-load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0' with 'l-load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0'
debug: Inserted bootstrap_block@0.ops[176]: 'l-store-copy asset#0 1'
debug: Replaced bootstrap_block@0.ops[184]: 'v-load asset#0' with 'l-load asset#0'
debug: Inserted bootstrap_block@0.ops[192]: 'l-store-copy asset#0 1'
debug: Replaced bootstrap_block@0.ops[200]: 'v-load asset#0' with 'l-load asset#0'
debug: Inserted bootstrap_block@0.ops[91]: 'l-store-copy a_asset#0 0'
debug: Replaced bootstrap_block@0.ops[99]: 'v-load a_asset#0' with 'l-load a_asset#0'
debug: Inserted bootstrap_block@0.ops[130]: 'l-store-copy tmp%1#2 0'
debug: Replaced bootstrap_block@0.ops[140]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted bootstrap_block@0.ops[93]: 'l-store-copy b_asset#0 2'
debug: Replaced bootstrap_block@0.ops[103]: 'v-load b_asset#0' with 'l-load b_asset#0'
debug: Inserted bootstrap_block@0.ops[66]: 'l-store-copy seed#0 0'
debug: Replaced bootstrap_block@0.ops[80]: 'v-load seed#0' with 'l-load seed#0'
debug: Inserted bootstrap_block@0.ops[145]: 'l-store-copy inner_txn_params%0%%param_ConfigAssetName_idx_0#0 0'
debug: Replaced bootstrap_block@0.ops[163]: 'v-load inner_txn_params%0%%param_ConfigAssetName_idx_0#0' with 'l-load inner_txn_params%0%%param_ConfigAssetName_idx_0#0'
debug: Inserted bootstrap_block@0.ops[105]: 'l-store-copy b_asset#0 1'
debug: Replaced bootstrap_block@0.ops[135]: 'v-load b_asset#0' with 'l-load b_asset#0'
debug: Inserted bootstrap_block@0.ops[38]: 'l-store-copy b_asset#0 0'
debug: Replaced bootstrap_block@0.ops[94]: 'v-load b_asset#0' with 'l-load b_asset#0'
debug: Inserted bootstrap_block@0.ops[9]: 'l-store-copy seed#0 0'
debug: Replaced bootstrap_block@0.ops[67]: 'v-load seed#0' with 'l-load seed#0'
debug: Inserted bootstrap_block@0.ops[29]: 'l-store-copy a_asset#0 1'
debug: Replaced bootstrap_block@0.ops[94]: 'v-load a_asset#0' with 'l-load a_asset#0'
debug: Inserted mint_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced mint_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted mint_block@0.ops[6]: 'l-store-copy a_xfer#0 0'
debug: Replaced mint_block@0.ops[8]: 'v-load a_xfer#0' with 'l-load a_xfer#0'
debug: Inserted mint_block@0.ops[10]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced mint_block@0.ops[12]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted mint_block@0.ops[15]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced mint_block@0.ops[17]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted mint_block@0.ops[20]: 'l-store-copy tmp%1#0 0'
debug: Replaced mint_block@0.ops[22]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted mint_block@0.ops[25]: 'l-store-copy b_xfer#0 0'
debug: Replaced mint_block@0.ops[27]: 'v-load b_xfer#0' with 'l-load b_xfer#0'
debug: Inserted mint_block@0.ops[29]: 'l-store-copy gtxn_type%1#0 0'
debug: Replaced mint_block@0.ops[31]: 'v-load gtxn_type%1#0' with 'l-load gtxn_type%1#0'
debug: Inserted mint_block@0.ops[34]: 'l-store-copy gtxn_type_matches%1#0 0'
debug: Replaced mint_block@0.ops[36]: 'v-load gtxn_type_matches%1#0' with 'l-load gtxn_type_matches%1#0'
debug: Inserted mint_block@0.ops[39]: 'l-store-copy reinterpret_Encoded(uint8)%0#0 0'
debug: Replaced mint_block@0.ops[41]: 'v-load reinterpret_Encoded(uint8)%0#0' with 'l-load reinterpret_Encoded(uint8)%0#0'
debug: Inserted mint_block@0.ops[43]: 'l-store-copy tmp%2#0 0'
debug: Replaced mint_block@0.ops[45]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted mint_block@0.ops[49]: 'l-store-copy reinterpret_Encoded(uint8)%1#0 0'
debug: Replaced mint_block@0.ops[51]: 'v-load reinterpret_Encoded(uint8)%1#0' with 'l-load reinterpret_Encoded(uint8)%1#0'
debug: Inserted mint_block@0.ops[53]: 'l-store-copy tmp%4#0 0'
debug: Replaced mint_block@0.ops[55]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted mint_block@0.ops[59]: 'l-store-copy reinterpret_Encoded(uint8)%2#0 0'
debug: Replaced mint_block@0.ops[61]: 'v-load reinterpret_Encoded(uint8)%2#0' with 'l-load reinterpret_Encoded(uint8)%2#0'
debug: Inserted mint_block@0.ops[63]: 'l-store-copy tmp%6#0 0'
debug: Replaced mint_block@0.ops[65]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted mint_block@0.ops[80]: 'l-store-copy tmp%0#1 0'
debug: Replaced mint_block@0.ops[82]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted mint_block@0.ops[94]: 'l-store-copy tmp%1#1 0'
debug: Replaced mint_block@0.ops[96]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted mint_block@0.ops[108]: 'l-store-copy tmp%2#1 0'
debug: Replaced mint_block@0.ops[110]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted mint_block@0.ops[120]: 'l-store-copy tmp%5#1 0'
debug: Replaced mint_block@0.ops[122]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted mint_block@0.ops[132]: 'l-store-copy tmp%8#0 0'
debug: Replaced mint_block@0.ops[134]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted mint_block@0.ops[144]: 'l-store-copy tmp%11#0 0'
debug: Replaced mint_block@0.ops[146]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted mint_block@0.ops[150]: 'l-store-copy tmp%12#0 0'
debug: Replaced mint_block@0.ops[152]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted mint_block@0.ops[155]: 'l-store-copy tmp%13#0 0'
debug: Replaced mint_block@0.ops[157]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted mint_block@0.ops[161]: 'l-store-copy a_amount#0 0'
debug: Replaced mint_block@0.ops[163]: 'v-load a_amount#0' with 'l-load a_amount#0'
debug: Inserted mint_block@0.ops[173]: 'l-store-copy tmp%18#0 0'
debug: Replaced mint_block@0.ops[175]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted mint_block@0.ops[179]: 'l-store-copy tmp%19#0 0'
debug: Replaced mint_block@0.ops[181]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted mint_block@0.ops[184]: 'l-store-copy tmp%20#0 0'
debug: Replaced mint_block@0.ops[186]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted mint_block@0.ops[190]: 'l-store-copy b_amount#0 0'
debug: Replaced mint_block@0.ops[192]: 'v-load b_amount#0' with 'l-load b_amount#0'
debug: Inserted mint_block@0.ops[203]: 'l-store-copy tmp%0#1 0'
debug: Replaced mint_block@0.ops[205]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted mint_block@0.ops[71]: 'l-store-copy maybe_exists%0#1 1'
debug: Replaced mint_block@0.ops[74]: 'v-load maybe_exists%0#1' with 'l-load maybe_exists%0#1'
debug: Inserted mint_block@0.ops[88]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced mint_block@0.ops[91]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted mint_block@0.ops[103]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced mint_block@0.ops[106]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted mint_block@0.ops[119]: 'l-store-copy tmp%4#1 0'
debug: Replaced mint_block@0.ops[122]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted mint_block@0.ops[132]: 'l-store-copy tmp%7#1 0'
debug: Replaced mint_block@0.ops[135]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted mint_block@0.ops[145]: 'l-store-copy tmp%10#0 0'
debug: Replaced mint_block@0.ops[148]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted mint_block@0.ops[175]: 'l-store-copy tmp%17#0 0'
debug: Replaced mint_block@0.ops[178]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted mint_block@0.ops[73]: 'l-store-copy maybe_value%0#1 1'
debug: Replaced mint_block@0.ops[77]: 'v-load maybe_value%0#1' with 'l-load maybe_value%0#1'
debug: Inserted mint_block@0.ops[78]: 'l-store-copy maybe_value%0#1 0'
debug: Replaced mint_block@0.ops[81]: 'v-load maybe_value%0#1' with 'l-load maybe_value%0#1'
debug: Inserted mint_block@0.ops[119]: 'l-store-copy tmp%3#1 0'
debug: Replaced mint_block@0.ops[124]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted mint_block@0.ops[133]: 'l-store-copy tmp%6#1 0'
debug: Replaced mint_block@0.ops[138]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted mint_block@0.ops[147]: 'l-store-copy tmp%9#0 0'
debug: Replaced mint_block@0.ops[152]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted mint_block@0.ops[178]: 'l-store-copy tmp%16#0 0'
debug: Replaced mint_block@0.ops[183]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted mint_block@0.ops[210]: 'l-store-copy a_balance#0 0'
debug: Replaced mint_block@0.ops[214]: 'v-load a_balance#0' with 'l-load a_balance#0'
debug: Inserted mint_block@0.ops[92]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced mint_block@0.ops[97]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted mint_block@0.ops[108]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced mint_block@0.ops[113]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted mint_block@0.ops[162]: 'l-store-copy a_xfer#0 0'
debug: Replaced mint_block@0.ops[173]: 'v-load a_xfer#0' with 'l-load a_xfer#0'
debug: Inserted mint_block@0.ops[194]: 'l-store-copy b_xfer#0 0'
debug: Replaced mint_block@0.ops[205]: 'v-load b_xfer#0' with 'l-load b_xfer#0'
debug: Inserted mint_block@0.ops[148]: 'l-store-copy a_xfer#0 0'
debug: Replaced mint_block@0.ops[162]: 'v-load a_xfer#0' with 'l-load a_xfer#0'
debug: Inserted mint_block@0.ops[181]: 'l-store-copy b_xfer#0 0'
debug: Replaced mint_block@0.ops[195]: 'v-load b_xfer#0' with 'l-load b_xfer#0'
debug: Inserted mint_block@0.ops[120]: 'l-store-copy a_xfer#0 0'
debug: Replaced mint_block@0.ops[148]: 'v-load a_xfer#0' with 'l-load a_xfer#0'
debug: Inserted mint_block@0.ops[47]: 'l-store-copy pool_asset#0 0'
debug: Replaced mint_block@0.ops[81]: 'v-load pool_asset#0' with 'l-load pool_asset#0'
debug: Inserted mint_block@0.ops[58]: 'l-store-copy a_asset#0 1'
debug: Replaced mint_block@0.ops[98]: 'v-load a_asset#0' with 'l-load a_asset#0'
debug: Inserted mint_block@0.ops[182]: 'l-store-copy a_amount#0 0'
debug: Replaced mint_block@0.ops[225]: 'v-load a_amount#0' with 'l-load a_amount#0'
debug: Inserted mint_block@0.ops[69]: 'l-store-copy b_asset#0 2'
debug: Replaced mint_block@0.ops[115]: 'v-load b_asset#0' with 'l-load b_asset#0'
debug: Inserted mint_block@0.ops[138]: 'l-store-copy b_xfer#0 1'
debug: Replaced mint_block@0.ops[186]: 'v-load b_xfer#0' with 'l-load b_xfer#0'
debug: Inserted mint_block@0.ops[101]: 'l-store-copy maybe_value%1#0 2'
debug: Replaced mint_block@0.ops[174]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted mint_block@0.ops[118]: 'l-store-copy maybe_value%2#0 2'
debug: Replaced mint_block@0.ops[209]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted mint_block@0.ops[28]: 'l-store-copy b_xfer#0 0'
debug: Replaced mint_block@0.ops[140]: 'v-load b_xfer#0' with 'l-load b_xfer#0'
debug: Inserted mint_block@0.ops[9]: 'l-store-copy a_xfer#0 0'
debug: Replaced mint_block@0.ops[126]: 'v-load a_xfer#0' with 'l-load a_xfer#0'
debug: Inserted mint_and_contd@2.ops[3]: 'l-store-copy tmp%1#1 0'
debug: Replaced mint_and_contd@2.ops[5]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted mint_bool_true@3.ops[1]: 'l-store-copy and_result%0#0 0'
debug: Replaced mint_bool_true@3.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
debug: Inserted mint_bool_false@4.ops[1]: 'l-store-copy and_result%0#0 0'
debug: Replaced mint_bool_false@4.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
debug: Inserted mint_if_body@6.ops[3]: 'l-store-copy tmp%2#0 0'
debug: Replaced mint_if_body@6.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted mint_if_body@6.ops[7]: 'l-store-copy tmp%3#2 0'
debug: Replaced mint_if_body@6.ops[9]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted mint_if_body@6.ops[12]: 'l-store-copy tmp%4#0 0'
debug: Replaced mint_if_body@6.ops[14]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted mint_after_if_else@7.ops[31]: 'l-store-copy tmp%12#1 0'
debug: Replaced mint_after_if_else@7.ops[33]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted mint_after_if_else@7.ops[11]: 'l-store-copy tmp%7#2 0'
debug: Replaced mint_after_if_else@7.ops[14]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted mint_after_if_else@7.ops[24]: 'l-store-copy tmp%10#1 0'
debug: Replaced mint_after_if_else@7.ops[27]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted mint_after_if_else@7.ops[29]: 'l-store-copy b_ratio#0 0'
debug: Replaced mint_after_if_else@7.ops[32]: 'v-load b_ratio#0' with 'l-load b_ratio#0'
debug: Inserted mint_after_if_else@7.ops[6]: 'l-store-copy a_amount#0 1'
debug: Replaced mint_after_if_else@7.ops[10]: 'v-load a_amount#0' with 'l-load a_amount#0'
debug: Inserted mint_after_if_else@7.ops[20]: 'l-store-copy b_amount#0 1'
debug: Replaced mint_after_if_else@7.ops[24]: 'v-load b_amount#0' with 'l-load b_amount#0'
debug: Inserted mint_after_if_else@7.ops[8]: 'l-store-copy tmp%6#0 1'
debug: Replaced mint_after_if_else@7.ops[15]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted mint_after_if_else@7.ops[23]: 'l-store-copy tmp%9#1 1'
debug: Replaced mint_after_if_else@7.ops[30]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted mint_after_if_else@7.ops[18]: 'l-store-copy a_ratio#0 0'
debug: Replaced mint_after_if_else@7.ops[36]: 'v-load a_ratio#0' with 'l-load a_ratio#0'
debug: Inserted mint_if_body@8.ops[3]: 'l-store-copy tmp%13#1 0'
debug: Replaced mint_if_body@8.ops[5]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted mint_if_body@8.ops[8]: 'l-store-copy tmp%14#1 0'
debug: Replaced mint_if_body@8.ops[10]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted mint_else_body@9.ops[3]: 'l-store-copy tmp%15#1 0'
debug: Replaced mint_else_body@9.ops[5]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted mint_else_body@9.ops[8]: 'l-store-copy tmp%16#1 0'
debug: Replaced mint_else_body@9.ops[10]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[7]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[10]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[9]: 'l-store-copy maybe_value%5#0 1'
debug: Replaced mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[14]: 'v-load maybe_value%5#0' with 'l-load maybe_value%5#0'
debug: Inserted mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[3]: 'l-store-copy tmp%30#0 0'
debug: Replaced mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[14]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[1]: 'l-store-copy to_mint#0 0'
debug: Replaced mint_after_inlined_examples.amm.contract.tokens_to_mint@10.ops[17]: 'v-load to_mint#0' with 'l-load to_mint#0'
debug: Inserted burn_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced burn_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted burn_block@0.ops[6]: 'l-store-copy pool_xfer#0 0'
debug: Replaced burn_block@0.ops[8]: 'v-load pool_xfer#0' with 'l-load pool_xfer#0'
debug: Inserted burn_block@0.ops[10]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced burn_block@0.ops[12]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted burn_block@0.ops[15]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced burn_block@0.ops[17]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted burn_block@0.ops[20]: 'l-store-copy reinterpret_Encoded(uint8)%0#0 0'
debug: Replaced burn_block@0.ops[22]: 'v-load reinterpret_Encoded(uint8)%0#0' with 'l-load reinterpret_Encoded(uint8)%0#0'
debug: Inserted burn_block@0.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced burn_block@0.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted burn_block@0.ops[30]: 'l-store-copy reinterpret_Encoded(uint8)%1#0 0'
debug: Replaced burn_block@0.ops[32]: 'v-load reinterpret_Encoded(uint8)%1#0' with 'l-load reinterpret_Encoded(uint8)%1#0'
debug: Inserted burn_block@0.ops[34]: 'l-store-copy tmp%3#0 0'
debug: Replaced burn_block@0.ops[36]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted burn_block@0.ops[40]: 'l-store-copy reinterpret_Encoded(uint8)%2#0 0'
debug: Replaced burn_block@0.ops[42]: 'v-load reinterpret_Encoded(uint8)%2#0' with 'l-load reinterpret_Encoded(uint8)%2#0'
debug: Inserted burn_block@0.ops[44]: 'l-store-copy tmp%5#0 0'
debug: Replaced burn_block@0.ops[46]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted burn_block@0.ops[61]: 'l-store-copy tmp%0#1 0'
debug: Replaced burn_block@0.ops[63]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted burn_block@0.ops[75]: 'l-store-copy tmp%1#1 0'
debug: Replaced burn_block@0.ops[77]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted burn_block@0.ops[89]: 'l-store-copy tmp%2#1 0'
debug: Replaced burn_block@0.ops[91]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted burn_block@0.ops[101]: 'l-store-copy tmp%5#1 0'
debug: Replaced burn_block@0.ops[103]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted burn_block@0.ops[107]: 'l-store-copy amount#0 0'
debug: Replaced burn_block@0.ops[109]: 'v-load amount#0' with 'l-load amount#0'
debug: Inserted burn_block@0.ops[113]: 'l-store-copy tmp%8#0 0'
debug: Replaced burn_block@0.ops[115]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted burn_block@0.ops[118]: 'l-store-copy tmp%9#0 0'
debug: Replaced burn_block@0.ops[120]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted burn_block@0.ops[130]: 'l-store-copy tmp%12#0 0'
debug: Replaced burn_block@0.ops[132]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted burn_block@0.ops[141]: 'l-store-copy tmp%0#0 0'
debug: Replaced burn_block@0.ops[143]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted burn_block@0.ops[150]: 'l-store-copy tmp%2#2 0'
debug: Replaced burn_block@0.ops[152]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted burn_block@0.ops[157]: 'l-store-copy supply#0 0'
debug: Replaced burn_block@0.ops[159]: 'v-load supply#0' with 'l-load supply#0'
debug: Inserted burn_block@0.ops[162]: 'l-store-copy tmp%2#2 0'
debug: Replaced burn_block@0.ops[164]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted burn_block@0.ops[52]: 'l-store-copy maybe_exists%0#1 1'
debug: Replaced burn_block@0.ops[55]: 'v-load maybe_exists%0#1' with 'l-load maybe_exists%0#1'
debug: Inserted burn_block@0.ops[69]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced burn_block@0.ops[72]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted burn_block@0.ops[84]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced burn_block@0.ops[87]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted burn_block@0.ops[100]: 'l-store-copy tmp%4#1 0'
debug: Replaced burn_block@0.ops[103]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted burn_block@0.ops[130]: 'l-store-copy tmp%11#0 0'
debug: Replaced burn_block@0.ops[133]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted burn_block@0.ops[178]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced burn_block@0.ops[181]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted burn_block@0.ops[192]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced burn_block@0.ops[195]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted burn_block@0.ops[54]: 'l-store-copy maybe_value%0#1 1'
debug: Replaced burn_block@0.ops[58]: 'v-load maybe_value%0#1' with 'l-load maybe_value%0#1'
debug: Inserted burn_block@0.ops[59]: 'l-store-copy maybe_value%0#1 0'
debug: Replaced burn_block@0.ops[62]: 'v-load maybe_value%0#1' with 'l-load maybe_value%0#1'
debug: Inserted burn_block@0.ops[100]: 'l-store-copy tmp%3#1 0'
debug: Replaced burn_block@0.ops[105]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted burn_block@0.ops[131]: 'l-store-copy tmp%10#0 0'
debug: Replaced burn_block@0.ops[136]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted burn_block@0.ops[73]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced burn_block@0.ops[78]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted burn_block@0.ops[89]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced burn_block@0.ops[94]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted burn_block@0.ops[146]: 'l-store-copy pool_balance#0 0'
debug: Replaced burn_block@0.ops[151]: 'v-load pool_balance#0' with 'l-load pool_balance#0'
debug: Inserted burn_block@0.ops[157]: 'l-store-copy amount#0 1'
debug: Replaced burn_block@0.ops[161]: 'v-load amount#0' with 'l-load amount#0'
debug: Inserted burn_block@0.ops[188]: 'l-store-copy maybe_value%4#0 1'
debug: Replaced burn_block@0.ops[193]: 'v-load maybe_value%4#0' with 'l-load maybe_value%4#0'
debug: Inserted burn_block@0.ops[203]: 'l-store-copy maybe_value%5#0 1'
debug: Replaced burn_block@0.ops[208]: 'v-load maybe_value%5#0' with 'l-load maybe_value%5#0'
debug: Inserted burn_block@0.ops[115]: 'l-store-copy pool_xfer#0 0'
debug: Replaced burn_block@0.ops[121]: 'v-load pool_xfer#0' with 'l-load pool_xfer#0'
debug: Inserted burn_block@0.ops[160]: 'l-store-copy issued#0 1'
debug: Replaced burn_block@0.ops[168]: 'v-load issued#0' with 'l-load issued#0'
debug: Inserted burn_block@0.ops[184]: 'l-store-copy tmp%20#0 0'
debug: Replaced burn_block@0.ops[195]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted burn_block@0.ops[200]: 'l-store-copy tmp%21#0 0'
debug: Replaced burn_block@0.ops[211]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted burn_block@0.ops[122]: 'l-store-copy pool_xfer#0 0'
debug: Replaced burn_block@0.ops[133]: 'v-load pool_xfer#0' with 'l-load pool_xfer#0'
debug: Inserted burn_block@0.ops[151]: 'l-store-copy supply#0 1'
debug: Replaced burn_block@0.ops[164]: 'v-load supply#0' with 'l-load supply#0'
debug: Inserted burn_block@0.ops[166]: 'l-store-copy amount#0 2'
debug: Replaced burn_block@0.ops[178]: 'v-load amount#0' with 'l-load amount#0'
debug: Inserted burn_block@0.ops[172]: 'l-store-copy issued#0 2'
debug: Replaced burn_block@0.ops[184]: 'v-load issued#0' with 'l-load issued#0'
debug: Inserted burn_block@0.ops[101]: 'l-store-copy pool_xfer#0 0'
debug: Replaced burn_block@0.ops[115]: 'v-load pool_xfer#0' with 'l-load pool_xfer#0'
debug: Inserted burn_block@0.ops[175]: 'l-store-copy a_amt#0 2'
debug: Replaced burn_block@0.ops[203]: 'v-load a_amt#0' with 'l-load a_amt#0'
debug: Inserted burn_block@0.ops[188]: 'l-store-copy b_amt#0 1'
debug: Replaced burn_block@0.ops[220]: 'v-load b_amt#0' with 'l-load b_amt#0'
debug: Inserted burn_block@0.ops[28]: 'l-store-copy pool_asset#0 0'
debug: Replaced burn_block@0.ops[62]: 'v-load pool_asset#0' with 'l-load pool_asset#0'
debug: Inserted burn_block@0.ops[39]: 'l-store-copy a_asset#0 1'
debug: Replaced burn_block@0.ops[79]: 'v-load a_asset#0' with 'l-load a_asset#0'
debug: Inserted burn_block@0.ops[123]: 'l-store-copy amount#0 1'
debug: Replaced burn_block@0.ops[163]: 'v-load amount#0' with 'l-load amount#0'
debug: Inserted burn_block@0.ops[50]: 'l-store-copy b_asset#0 2'
debug: Replaced burn_block@0.ops[96]: 'v-load b_asset#0' with 'l-load b_asset#0'
debug: Inserted burn_block@0.ops[66]: 'l-store-copy maybe_value%0#1 3'
debug: Replaced burn_block@0.ops[133]: 'v-load maybe_value%0#1' with 'l-load maybe_value%0#1'
debug: Inserted burn_block@0.ops[9]: 'l-store-copy pool_xfer#0 0'
debug: Replaced burn_block@0.ops[105]: 'v-load pool_xfer#0' with 'l-load pool_xfer#0'
debug: Inserted swap_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced swap_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted swap_block@0.ops[6]: 'l-store-copy swap_xfer#0 0'
debug: Replaced swap_block@0.ops[8]: 'v-load swap_xfer#0' with 'l-load swap_xfer#0'
debug: Inserted swap_block@0.ops[10]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced swap_block@0.ops[12]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted swap_block@0.ops[15]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced swap_block@0.ops[17]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted swap_block@0.ops[20]: 'l-store-copy reinterpret_Encoded(uint8)%0#0 0'
debug: Replaced swap_block@0.ops[22]: 'v-load reinterpret_Encoded(uint8)%0#0' with 'l-load reinterpret_Encoded(uint8)%0#0'
debug: Inserted swap_block@0.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced swap_block@0.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted swap_block@0.ops[30]: 'l-store-copy reinterpret_Encoded(uint8)%1#0 0'
debug: Replaced swap_block@0.ops[32]: 'v-load reinterpret_Encoded(uint8)%1#0' with 'l-load reinterpret_Encoded(uint8)%1#0'
debug: Inserted swap_block@0.ops[34]: 'l-store-copy tmp%3#0 0'
debug: Replaced swap_block@0.ops[36]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted swap_block@0.ops[58]: 'l-store-copy tmp%0#1 0'
debug: Replaced swap_block@0.ops[60]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted swap_block@0.ops[72]: 'l-store-copy tmp%1#1 0'
debug: Replaced swap_block@0.ops[74]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted swap_block@0.ops[78]: 'l-store-copy in_amount#0 0'
debug: Replaced swap_block@0.ops[80]: 'v-load in_amount#0' with 'l-load in_amount#0'
debug: Inserted swap_block@0.ops[90]: 'l-store-copy tmp%6#0 0'
debug: Replaced swap_block@0.ops[92]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted swap_block@0.ops[42]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced swap_block@0.ops[45]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted swap_block@0.ops[52]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced swap_block@0.ops[55]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted swap_block@0.ops[67]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced swap_block@0.ops[70]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted swap_block@0.ops[89]: 'l-store-copy tmp%5#0 0'
debug: Replaced swap_block@0.ops[92]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted swap_block@0.ops[44]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced swap_block@0.ops[48]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted swap_block@0.ops[88]: 'l-store-copy tmp%4#1 0'
debug: Replaced swap_block@0.ops[93]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted swap_block@0.ops[102]: 'l-store-copy tmp%7#0 0'
debug: Replaced swap_block@0.ops[106]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted swap_block@0.ops[55]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced swap_block@0.ops[60]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted swap_block@0.ops[71]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced swap_block@0.ops[76]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted swap_block@0.ops[83]: 'l-store-copy swap_xfer#0 0'
debug: Replaced swap_block@0.ops[89]: 'v-load swap_xfer#0' with 'l-load swap_xfer#0'
debug: Inserted swap_block@0.ops[90]: 'l-store-copy swap_xfer#0 0'
debug: Replaced swap_block@0.ops[104]: 'v-load swap_xfer#0' with 'l-load swap_xfer#0'
debug: Inserted swap_block@0.ops[28]: 'l-store-copy a_asset#0 0'
debug: Replaced swap_block@0.ops[60]: 'v-load a_asset#0' with 'l-load a_asset#0'
debug: Inserted swap_block@0.ops[78]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced swap_block@0.ops[111]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted swap_block@0.ops[39]: 'l-store-copy b_asset#0 1'
debug: Replaced swap_block@0.ops[77]: 'v-load b_asset#0' with 'l-load b_asset#0'
debug: Inserted swap_block@0.ops[63]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced swap_block@0.ops[112]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted swap_block@0.ops[9]: 'l-store-copy swap_xfer#0 0'
debug: Replaced swap_block@0.ops[87]: 'v-load swap_xfer#0' with 'l-load swap_xfer#0'
debug: Inserted swap_switch_case_0@2.ops[7]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced swap_switch_case_0@2.ops[10]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted swap_switch_case_1@3.ops[7]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced swap_switch_case_1@3.ops[10]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted swap_switch_case_next@5.ops[19]: 'l-store-copy out_total#0 0'
debug: Replaced swap_switch_case_next@5.ops[21]: 'v-load out_total#0' with 'l-load out_total#0'
debug: Inserted swap_switch_case_next@5.ops[24]: 'l-store-copy to_swap#0 0'
debug: Replaced swap_switch_case_next@5.ops[26]: 'v-load to_swap#0' with 'l-load to_swap#0'
debug: Inserted swap_switch_case_next@5.ops[29]: 'l-store-copy tmp%15#0 0'
debug: Replaced swap_switch_case_next@5.ops[31]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted swap_switch_case_next@5.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced swap_switch_case_next@5.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted swap_switch_case_next@5.ops[12]: 'l-store-copy tmp%2#2 0'
debug: Replaced swap_switch_case_next@5.ops[15]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted swap_switch_case_next@5.ops[16]: 'l-store-copy tmp%2#2 1'
debug: Replaced swap_switch_case_next@5.ops[19]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted swap_switch_case_next@5.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced swap_switch_case_next@5.ops[15]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted swap_switch_case_next@5.ops[19]: 'l-store-copy in_total#0 1'
debug: Replaced swap_switch_case_next@5.ops[27]: 'v-load in_total#0' with 'l-load in_total#0'
debug: Inserted swap_switch_case_next@5.ops[32]: 'l-store-copy to_swap#0 0'
debug: Replaced swap_switch_case_next@5.ops[39]: 'v-load to_swap#0' with 'l-load to_swap#0'
debug: Inserted swap_switch_case_next@5.ops[2]: 'l-store-copy in_amount#0 1'
debug: Replaced swap_switch_case_next@5.ops[11]: 'v-load in_amount#0' with 'l-load in_amount#0'
debug: Inserted _update_ratio_block@0.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced _update_ratio_block@0.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted _update_ratio_block@0.ops[12]: 'l-store-copy tmp%3#0 0'
debug: Replaced _update_ratio_block@0.ops[15]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted _update_ratio_block@0.ops[1]: 'l-store-copy a_balance#0 0'
debug: Replaced _update_ratio_block@0.ops[5]: 'v-load a_balance#0' with 'l-load a_balance#0'
debug: Inserted _update_ratio_block@0.ops[4]: 'l-store-copy b_balance#0 1'
debug: Replaced _update_ratio_block@0.ops[12]: 'v-load b_balance#0' with 'l-load b_balance#0'
debug: Inserted _check_is_governor_block@0.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced _check_is_governor_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted _check_is_governor_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _check_is_governor_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _check_is_governor_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _check_is_governor_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _check_is_governor_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _check_is_governor_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _current_pool_balance_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _current_pool_balance_block@0.ops[13]: 'l-store-copy check%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[16]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _current_pool_balance_block@0.ops[15]: 'l-store-copy value%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _current_pool_balance_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _current_pool_balance_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _current_a_balance_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _current_a_balance_block@0.ops[13]: 'l-store-copy check%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[16]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _current_a_balance_block@0.ops[15]: 'l-store-copy value%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _current_a_balance_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _current_a_balance_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _current_a_balance_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _current_a_balance_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted _current_b_balance_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted _current_b_balance_block@0.ops[13]: 'l-store-copy check%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[16]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted _current_b_balance_block@0.ops[15]: 'l-store-copy value%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[19]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted _current_b_balance_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced _current_b_balance_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted _current_b_balance_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced _current_b_balance_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Found 5 edge set/s for examples.amm.contract.ConstantProductAMM.mint[routing]
debug: Allocated 3 variable/s to x-stack: is_initial_mint#0, issued#0, to_mint#0
debug: shared x-stack for mint_bool_true@3 -> mint_bool_merge@5: is_initial_mint#0
debug: shared x-stack for mint_bool_false@4 -> mint_bool_merge@5: is_initial_mint#0
debug: shared x-stack for mint_if_body@6 -> mint_after_inlined_examples.amm.contract.tokens_to_mint@10: to_mint#0
debug: shared x-stack for mint_if_body@8 -> mint_after_inlined_examples.amm.contract.tokens_to_mint@10: to_mint#0
debug: shared x-stack for mint_else_body@9 -> mint_after_inlined_examples.amm.contract.tokens_to_mint@10: to_mint#0
debug: shared x-stack for mint_after_if_else@7 -> mint_if_body@8: issued#0
debug: shared x-stack for mint_after_if_else@7 -> mint_else_body@9: issued#0
debug: Found 2 edge set/s for examples.amm.contract.ConstantProductAMM.swap[routing]
debug: Allocated 1 variable/s to x-stack: out_supply#0
debug: shared x-stack for swap_switch_case_0@2 -> swap_switch_case_next@5: out_supply#0
debug: shared x-stack for swap_switch_case_1@3 -> swap_switch_case_next@5: out_supply#0
debug: examples.amm.contract.ConstantProductAMM.mint[routing] f-stack entry: ['a_ratio#0', 'b_ratio#0']
debug: examples.amm.contract.ConstantProductAMM.mint[routing] f-stack on first store: ['a_amount#0', 'b_amount#0', 'pool_balance#0', 'a_balance#0', 'b_balance#0']
debug: examples.amm.contract.ConstantProductAMM.swap[routing] f-stack entry: ['in_supply#0', 'out_asset#0']
debug: examples.amm.contract.ConstantProductAMM.swap[routing] f-stack on first store: ['in_amount#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
amm/contract.py:359 debug: optimizing TEAL subroutine ops examples.amm.contract.do_asset_transfer(receiver: bytes, asset: uint64, amount: uint64) -> void:
amm/contract.py:43:6 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.set_governor[routing]() -> void:
amm/contract.py:49:6 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.bootstrap[routing]() -> void:
amm/contract.py:81:6 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.mint[routing]() -> void:
amm/contract.py:148:6 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.burn[routing]() -> void:
amm/contract.py:206:6 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM.swap[routing]() -> void:
amm/contract.py:258 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
amm/contract.py:265 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
amm/contract.py:294 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
amm/contract.py:298 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
amm/contract.py:302 debug: optimizing TEAL subroutine ops examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_if_else@13` with `err`
debug: replacing `b main_after_if_else@13` with `err`
debug: replacing `b main_after_if_else@13` with `err`
debug: replacing `b main_after_if_else@13` with `err`
debug: replacing `b main_after_if_else@13` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_if_else@13 into main_after_if_else@2
debug: removing jump-chain block main_set_governor_route@6
debug: removing jump-chain block main_bootstrap_route@7
debug: removing jump-chain block main_mint_route@8
debug: removing jump-chain block main_burn_route@9
debug: removing jump-chain block main_swap_route@10
debug: branching to main_set_governor_route@6 will be replaced with set_governor
debug: branching to main_bootstrap_route@7 will be replaced with bootstrap
debug: branching to main_mint_route@8 will be replaced with mint
debug: branching to main_burn_route@9 will be replaced with burn
debug: branching to main_swap_route@10 will be replaced with swap
debug: removing explicit jump to fall-through block main_after_if_else@2
amm/contract.py:359 debug: optimizing TEAL subroutine blocks examples.amm.contract.do_asset_transfer(receiver: bytes, asset: uint64, amount: uint64) -> void:
debug: inlining single reference block do_asset_transfer_block@0 into do_asset_transfer
amm/contract.py:43:6 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.set_governor[routing]() -> void:
debug: inlining single reference block set_governor_block@0 into set_governor
amm/contract.py:49:6 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.bootstrap[routing]() -> void:
debug: inlining single reference block bootstrap_block@0 into bootstrap
amm/contract.py:81:6 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.mint[routing]() -> void:
debug: inlining single reference block mint_block@0 into mint
debug: inlining single reference block mint_and_contd@2 into mint
debug: inlining single reference block mint_bool_true@3 into mint
debug: inlining single reference block mint_if_body@6 into mint_bool_merge@5
debug: inlining single reference block mint_if_body@8 into mint_after_if_else@7
debug: removing explicit jump to fall-through block mint_bool_merge@5
debug: removing explicit jump to fall-through block mint_after_inlined_examples.amm.contract.tokens_to_mint@10
amm/contract.py:148:6 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.burn[routing]() -> void:
debug: inlining single reference block burn_block@0 into burn
amm/contract.py:206:6 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM.swap[routing]() -> void:
debug: inlining single reference block swap_block@0 into swap
debug: inlining single reference block swap_switch_case_default@4 into swap
debug: removing explicit jump to fall-through block swap_switch_case_next@5
amm/contract.py:258 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._update_ratio() -> void:
debug: inlining single reference block _update_ratio_block@0 into _update_ratio
amm/contract.py:265 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._check_is_governor() -> void:
debug: inlining single reference block _check_is_governor_block@0 into _check_is_governor
amm/contract.py:294 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._current_pool_balance() -> uint64:
debug: inlining single reference block _current_pool_balance_block@0 into _current_pool_balance
amm/contract.py:298 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._current_a_balance() -> uint64:
debug: inlining single reference block _current_a_balance_block@0 into _current_a_balance
amm/contract.py:302 debug: optimizing TEAL subroutine blocks examples.amm.contract.ConstantProductAMM._current_b_balance() -> uint64:
debug: inlining single reference block _current_b_balance_block@0 into _current_b_balance
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing amm/out/ConstantProductAMM.arc56.json
info: Writing amm/out/ConstantProductAMM.approval.teal
info: Writing amm/out/ConstantProductAMM.clear.teal
info: Writing amm/out/ConstantProductAMM.approval.bin
info: Writing amm/out/ConstantProductAMM.clear.bin
info: Writing amm/out/ConstantProductAMM.approval.stats.txt
info: Writing amm/out/ConstantProductAMM.clear.stats.txt
info: Writing amm/out/ConstantProductAMM.approval.puya.map
info: Writing amm/out/ConstantProductAMM.clear.puya.map
info: writing amm/out/client_ConstantProductAMM.py