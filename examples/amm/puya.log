debug: PuyaPyOptions(output_teal=True, output_arc32=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, match_algod_bytecode=False, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions=[], template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['amm'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing amm/out/module.awst
debug: Sealing block@0: // L12
debug: Terminated block@0: // L12
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@2: // while_body_L21
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L21
debug: Sealing block@3: // switch_case_0_L28
debug: Terminated block@3: // switch_case_0_L28
debug: Sealing block@4: // switch_case_1_L30
debug: Terminated block@4: // switch_case_1_L30
debug: Sealing block@5: // switch_case_default_L26
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@2: // while_body_L12
debug: Terminated block@2: // while_body_L12
debug: Sealing block@3: // if_body_L13
debug: Terminated block@3: // if_body_L13
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Sealing block@2: // for_body_L111
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Terminated block@2: // for_body_L111
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@1: // for_header_L110
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L92
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L110
debug: Sealing block@4: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@1: // if_body_L147
debug: Terminated block@1: // if_body_L147
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3: // for_header_L150
debug: Terminated block@3: // for_header_L150
debug: Sealing block@4: // for_body_L151
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3: // for_header_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3: // for_header_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3: // for_header_L150
debug: Terminated block@4: // for_body_L151
debug: Sealing block@5: // for_footer_L150
debug: Terminated block@5: // for_footer_L150
debug: Sealing block@3: // for_header_L150
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2: // after_if_else_L146
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L147
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2: // after_if_else_L146
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5: // for_footer_L150
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2: // after_if_else_L146
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2: // after_if_else_L146
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5: // for_footer_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6: // after_for_L150
debug: Terminated block@6: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Sealing block@2: // for_body_L200
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Terminated block@2: // for_body_L200
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@1: // for_header_L199
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L189
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L199
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5: // for_header_L204
debug: Terminated block@5: // for_header_L204
debug: Sealing block@6: // for_body_L205
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5: // for_header_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5: // for_header_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5: // for_header_L204
debug: Terminated block@6: // for_body_L205
debug: Sealing block@7: // for_footer_L204
debug: Terminated block@7: // for_footer_L204
debug: Sealing block@5: // for_header_L204
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4: // after_for_L199
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7: // for_footer_L204
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4: // after_for_L199
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7: // for_footer_L204
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4: // after_for_L199
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Sealing block@2: // for_body_L270
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Terminated block@2: // for_body_L270
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@1: // for_header_L269
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L252
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L269
debug: Terminated block@4: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Sealing block@2: // for_body_L328
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Terminated block@2: // for_body_L328
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@1: // for_header_L327
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L306
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3: // for_footer_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3: // for_footer_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3: // for_footer_L327
debug: Sealing block@4: // after_for_L327
debug: Terminated block@4: // after_for_L327
debug: Sealing block@0: // L27
debug: Terminated block@0: // L27
debug: Sealing block@1: // abi_routing_L27
debug: Terminated block@1: // abi_routing_L27
debug: Sealing block@2: // set_governor_route_L43
debug: Terminated block@2: // set_governor_route_L43
debug: Sealing block@3: // bootstrap_route_L49
debug: Terminated block@3: // bootstrap_route_L49
debug: Sealing block@4: // mint_route_L81
debug: Terminated block@4: // mint_route_L81
debug: Sealing block@5: // burn_route_L147
debug: Terminated block@5: // burn_route_L147
debug: Sealing block@6: // swap_route_L204
debug: Terminated block@6: // swap_route_L204
debug: Sealing block@7: // switch_case_default_L27
debug: Terminated block@7: // switch_case_default_L27
debug: Sealing block@8: // switch_case_next_L27
debug: Terminated block@8: // switch_case_next_L27
debug: Sealing block@9: // bare_routing_L27
debug: Terminated block@9: // bare_routing_L27
debug: Sealing block@10: // __algopy_default_create_L27
debug: Terminated block@10: // __algopy_default_create_L27
debug: Sealing block@11: // switch_case_default_L27
debug: Terminated block@11: // switch_case_default_L27
debug: Sealing block@12: // switch_case_next_L27
debug: Terminated block@12: // switch_case_next_L27
debug: Sealing block@13: // after_if_else_L27
debug: Terminated block@13: // after_if_else_L27
debug: Sealing block@0: // L43
debug: Terminated block@0: // L43
debug: Sealing block@0: // L262
debug: Terminated block@0: // L262
debug: Sealing block@0: // L49
debug: Terminated block@0: // L49
debug: Sealing block@0: // L268
debug: Terminated block@0: // L268
debug: Sealing block@1: // next_txn_L271
debug: Terminated block@1: // next_txn_L271
debug: Sealing block@0: // L283
debug: Terminated block@0: // L283
debug: Sealing block@0: // L356
debug: Terminated block@0: // L356
debug: Sealing block@1: // next_txn_L358
debug: Terminated block@1: // next_txn_L358
debug: Sealing block@0: // L81
debug: Terminated block@0: // L81
debug: Sealing block@0: // L251
debug: Terminated block@0: // L251
debug: Sealing block@0: // L291
debug: Terminated block@0: // L291
debug: Sealing block@0: // L295
debug: Terminated block@0: // L295
debug: Sealing block@0: // L299
debug: Terminated block@0: // L299
debug: Sealing block@0: // L322
debug: Terminated block@0: // L322
debug: Sealing block@1: // and_contd_L331
debug: Terminated block@1: // and_contd_L331
debug: Sealing block@2: // bool_true_L331
debug: Terminated block@2: // bool_true_L331
debug: Sealing block@3: // bool_false_L331
debug: Terminated block@3: // bool_false_L331
debug: Sealing block@4: // bool_merge_L331
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4: // bool_merge_L331
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2: // bool_true_L331
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3: // bool_false_L331
debug: Terminated block@4: // bool_merge_L331
debug: Sealing block@5: // if_body_L333
debug: Created Phi assignment: let a_amount#1: uint64 = undefined while trying to resolve 'a_amount' in block@4: // bool_merge_L331
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2) in block@2: // bool_true_L331
debug: Created Phi assignment: let a_amount#2: uint64 = undefined while trying to resolve 'a_amount' in block@3: // bool_false_L331
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0) in block@0: // L322
debug: Added a_amount#0 to Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) in block@1: // and_contd_L331
debug: Replacing trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0
debug: Deleting Phi assignment: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1)
debug: Replaced trivial Phi node: let a_amount#2: uint64 = φ(a_amount#0 <- block@0, a_amount#0 <- block@1) (a_amount#2) with a_amount#0 in current definition for 1 blocks
debug: Added a_amount#0 to Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) in block@3: // bool_false_L331
debug: Replacing trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0
debug: Deleting Phi assignment: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3)
debug: Replaced trivial Phi node: let a_amount#1: uint64 = φ(a_amount#0 <- block@2, a_amount#0 <- block@3) (a_amount#1) with a_amount#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_amount#1: uint64 = undefined while trying to resolve 'b_amount' in block@4: // bool_merge_L331
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2) in block@2: // bool_true_L331
debug: Created Phi assignment: let b_amount#2: uint64 = undefined while trying to resolve 'b_amount' in block@3: // bool_false_L331
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0) in block@0: // L322
debug: Added b_amount#0 to Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) in block@1: // and_contd_L331
debug: Replacing trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0
debug: Deleting Phi assignment: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1)
debug: Replaced trivial Phi node: let b_amount#2: uint64 = φ(b_amount#0 <- block@0, b_amount#0 <- block@1) (b_amount#2) with b_amount#0 in current definition for 1 blocks
debug: Added b_amount#0 to Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) in block@3: // bool_false_L331
debug: Replacing trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0
debug: Deleting Phi assignment: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3)
debug: Replaced trivial Phi node: let b_amount#1: uint64 = φ(b_amount#0 <- block@2, b_amount#0 <- block@3) (b_amount#1) with b_amount#0 in current definition for 1 blocks
debug: Terminated block@5: // if_body_L333
debug: Sealing block@6: // after_if_else_L332
debug: Created Phi assignment: let pool_balance#1: uint64 = undefined while trying to resolve 'pool_balance' in block@4: // bool_merge_L331
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2) in block@2: // bool_true_L331
debug: Created Phi assignment: let pool_balance#2: uint64 = undefined while trying to resolve 'pool_balance' in block@3: // bool_false_L331
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0) in block@0: // L322
debug: Added pool_balance#0 to Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) in block@1: // and_contd_L331
debug: Replacing trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1)
debug: Replaced trivial Phi node: let pool_balance#2: uint64 = φ(pool_balance#0 <- block@0, pool_balance#0 <- block@1) (pool_balance#2) with pool_balance#0 in current definition for 1 blocks
debug: Added pool_balance#0 to Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) in block@3: // bool_false_L331
debug: Replacing trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0
debug: Deleting Phi assignment: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3)
debug: Replaced trivial Phi node: let pool_balance#1: uint64 = φ(pool_balance#0 <- block@2, pool_balance#0 <- block@3) (pool_balance#1) with pool_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let a_balance#1: uint64 = undefined while trying to resolve 'a_balance' in block@4: // bool_merge_L331
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2) in block@2: // bool_true_L331
debug: Created Phi assignment: let a_balance#2: uint64 = undefined while trying to resolve 'a_balance' in block@3: // bool_false_L331
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0) in block@0: // L322
debug: Added a_balance#0 to Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) in block@1: // and_contd_L331
debug: Replacing trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0
debug: Deleting Phi assignment: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1)
debug: Replaced trivial Phi node: let a_balance#2: uint64 = φ(a_balance#0 <- block@0, a_balance#0 <- block@1) (a_balance#2) with a_balance#0 in current definition for 1 blocks
debug: Added a_balance#0 to Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) in block@3: // bool_false_L331
debug: Replacing trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0
debug: Deleting Phi assignment: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3)
debug: Replaced trivial Phi node: let a_balance#1: uint64 = φ(a_balance#0 <- block@2, a_balance#0 <- block@3) (a_balance#1) with a_balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let b_balance#1: uint64 = undefined while trying to resolve 'b_balance' in block@4: // bool_merge_L331
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2) in block@2: // bool_true_L331
debug: Created Phi assignment: let b_balance#2: uint64 = undefined while trying to resolve 'b_balance' in block@3: // bool_false_L331
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0) in block@0: // L322
debug: Added b_balance#0 to Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) in block@1: // and_contd_L331
debug: Replacing trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0
debug: Deleting Phi assignment: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1)
debug: Replaced trivial Phi node: let b_balance#2: uint64 = φ(b_balance#0 <- block@0, b_balance#0 <- block@1) (b_balance#2) with b_balance#0 in current definition for 1 blocks
debug: Added b_balance#0 to Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) in block@3: // bool_false_L331
debug: Replacing trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0
debug: Deleting Phi assignment: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3)
debug: Replaced trivial Phi node: let b_balance#1: uint64 = φ(b_balance#0 <- block@2, b_balance#0 <- block@3) (b_balance#1) with b_balance#0 in current definition for 1 blocks
debug: Terminated block@6: // after_if_else_L332
debug: Sealing block@7: // if_body_L338
debug: Terminated block@7: // if_body_L338
debug: Sealing block@8: // else_body_L340
debug: Terminated block@8: // else_body_L340
debug: Sealing block@0: // L255
debug: Terminated block@0: // L255
debug: Sealing block@0: // L147
debug: Terminated block@0: // L147
debug: Sealing block@0: // L343
debug: Terminated block@0: // L343
debug: Sealing block@0: // L204
debug: Terminated block@0: // L204
debug: Sealing block@1: // switch_case_0_L233
debug: Terminated block@1: // switch_case_0_L233
debug: Sealing block@2: // switch_case_1_L237
debug: Terminated block@2: // switch_case_1_L237
debug: Sealing block@3: // switch_case_default_L241
debug: Terminated block@3: // switch_case_default_L241
debug: Sealing block@4: // switch_case_next_L231
debug: Created Phi assignment: let swap_xfer#1: uint64 = undefined while trying to resolve 'swap_xfer' in block@4: // switch_case_next_L231
debug: Added swap_xfer#0 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1) in block@1: // switch_case_0_L233
debug: Added swap_xfer#0 to Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) in block@2: // switch_case_1_L237
debug: Replacing trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0
debug: Deleting Phi assignment: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2)
debug: Replaced trivial Phi node: let swap_xfer#1: uint64 = φ(swap_xfer#0 <- block@1, swap_xfer#0 <- block@2) (swap_xfer#1) with swap_xfer#0 in current definition for 1 blocks
debug: Created Phi assignment: let in_supply#2: uint64 = undefined while trying to resolve 'in_supply' in block@4: // switch_case_next_L231
debug: Added in_supply#0 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1) in block@1: // switch_case_0_L233
debug: Added in_supply#1 to Phi node: let in_supply#2: uint64 = φ(in_supply#0 <- block@1, in_supply#1 <- block@2) in block@2: // switch_case_1_L237
debug: Created Phi assignment: let out_supply#2: uint64 = undefined while trying to resolve 'out_supply' in block@4: // switch_case_next_L231
debug: Added out_supply#0 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1) in block@1: // switch_case_0_L233
debug: Added out_supply#1 to Phi node: let out_supply#2: uint64 = φ(out_supply#0 <- block@1, out_supply#1 <- block@2) in block@2: // switch_case_1_L237
debug: Created Phi assignment: let out_asset#2: uint64 = undefined while trying to resolve 'out_asset' in block@4: // switch_case_next_L231
debug: Added out_asset#0 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1) in block@1: // switch_case_0_L233
debug: Added out_asset#1 to Phi node: let out_asset#2: uint64 = φ(out_asset#0 <- block@1, out_asset#1 <- block@2) in block@2: // switch_case_1_L237
debug: Terminated block@4: // switch_case_next_L231
debug: Sealing block@0: // L349
debug: Terminated block@0: // L349
debug: Sealing block@0: // L27
debug: Terminated block@0: // L27
debug: Sealing block@0: // L28
debug: Terminated block@0: // L28
debug: Sealing block@0: // L1
debug: Terminated block@0: // L1
debug: Sealing block@1: // on_create_L28
debug: Terminated block@1: // on_create_L28
debug: Sealing block@2: // entrypoint_L28
debug: Terminated block@2: // entrypoint_L28
debug: Sealing block@0: // L1
debug: Terminated block@0: // L1
debug: Output IR to amm/out/ConstantProductAMM.ssa.ir
info: optimizing examples.amm.contract.ConstantProductAMM at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%10#0 NoOp) to (! tmp%10#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%38#0 NoOp) to (! tmp%38#0)
debug: Simplified (== tmp%52#0 NoOp) to (! tmp%52#0)
debug: Simplified (== tmp%64#0 0u) to (! tmp%64#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%41#0
debug: Removing unused variable tmp%55#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L27 as a predecessor of block@8: // switch_case_next_L27 due to inlining of block@7: // switch_case_default_L27
debug: simplified terminator of block@1: // abi_routing_L27 from switch tmp%2#0 {method "set_governor(account)void" => block@2, method "bootstrap(pay,asset,asset)uint64" => block@3, method "mint(axfer,axfer,asset,asset,asset)void" => block@4, method "burn(axfer,asset,asset,asset)void" => block@5, method "swap(axfer,asset,asset)void" => block@6, * => block@7} to switch tmp%2#0 {method "set_governor(account)void" => block@2, method "bootstrap(pay,asset,asset)uint64" => block@3, method "mint(axfer,axfer,asset,asset,asset)void" => block@4, method "burn(axfer,asset,asset,asset)void" => block@5, method "swap(axfer,asset,asset)void" => block@6, * => block@8}
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@9: // bare_routing_L27 from switch tmp%63#0 {0u => block@10, * => block@11} to goto_nth [block@10][tmp%63#0] else goto block@11
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L27 as a predecessor of block@13: // after_if_else_L27 due to inlining of block@8: // switch_case_next_L27
debug: simplified terminator of block@1: // abi_routing_L27 from switch tmp%2#0 {method "set_governor(account)void" => block@2, method "bootstrap(pay,asset,asset)uint64" => block@3, method "mint(axfer,axfer,asset,asset,asset)void" => block@4, method "burn(axfer,asset,asset,asset)void" => block@5, method "swap(axfer,asset,asset)void" => block@6, * => block@8} to switch tmp%2#0 {method "set_governor(account)void" => block@2, method "bootstrap(pay,asset,asset)uint64" => block@3, method "mint(axfer,axfer,asset,asset,asset)void" => block@4, method "burn(axfer,asset,asset,asset)void" => block@5, method "swap(axfer,asset,asset)void" => block@6, * => block@13}
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@9: // bare_routing_L27 from goto_nth [block@10][tmp%63#0] else goto block@11 to goto tmp%63#0 ? block@11 : block@10
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@1: // abi_routing_L27 from switch tmp%2#0 {method "set_governor(account)void" => block@2, method "bootstrap(pay,asset,asset)uint64" => block@3, method "mint(axfer,axfer,asset,asset,asset)void" => block@4, method "burn(axfer,asset,asset,asset)void" => block@5, method "swap(axfer,asset,asset)void" => block@6, * => block@13} to switch tmp%2#0 {method "set_governor(account)void" => block@2, method "bootstrap(pay,asset,asset)uint64" => block@3, method "mint(axfer,axfer,asset,asset,asset)void" => block@4, method "burn(axfer,asset,asset,asset)void" => block@5, method "swap(axfer,asset,asset)void" => block@6, * => return 0u}
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@8: // switch_case_next_L27 with block@7: // switch_case_default_L27 in block@13: // after_if_else_L27
debug: Merged linear block@8: // switch_case_next_L27 into block@7: // switch_case_default_L27
debug: Replaced predecessor block@12: // switch_case_next_L27 with block@11: // switch_case_default_L27 in block@13: // after_if_else_L27
debug: Merged linear block@12: // switch_case_next_L27 into block@11: // switch_case_default_L27
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@7: // switch_case_default_L27
debug: Removed empty block: block@11: // switch_case_default_L27
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, reinterpret_bool%0#0
debug: Replacing {reinterpret_bool%0#0} with maybe_value%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetDecimals_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1: // next_txn_L271 into block@0: // L268
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
debug: Replacing {inner_txn_params%0%%param_XferAsset_idx_0#0} with asset#0 made 1 modifications
debug: Found equivalence set: amount#0, inner_txn_params%0%%param_AssetAmount_idx_0#0
debug: Replacing {inner_txn_params%0%%param_AssetAmount_idx_0#0} with amount#0 made 1 modifications
debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0
debug: Replacing {inner_txn_params%0%%param_AssetReceiver_idx_0#0} with receiver#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1: // next_txn_L358 into block@0: // L356
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%28#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%26#0: uint64 = ((gtxns AssetAmount) a_xfer#0) with copy of existing registers (Register(source_location=amm/contract.py:125:15-34, ir_type=uint64, name='tmp%14', version=0),)
debug: Replacing redundant declaration let tmp%27#0: uint64 = ((gtxns AssetAmount) b_xfer#0) with copy of existing registers (Register(source_location=amm/contract.py:132:15-34, ir_type=uint64, name='tmp%21', version=0),)
debug: Found equivalence set: tmp%14#0, tmp%26#0
debug: Replacing {tmp%26#0} with tmp%14#0 made 1 modifications
debug: Found equivalence set: tmp%21#0, tmp%27#0
debug: Replacing {tmp%27#0} with tmp%21#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, reinterpret_bool%0#0
debug: Replacing {reinterpret_bool%0#0} with maybe_value%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: and_result%0#2, is_initial_mint#0
debug: Replacing {and_result%0#2} with is_initial_mint#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%14#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers (Register(source_location=amm/contract.py:179:15-37, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = ((gtxns AssetAmount) pool_xfer#0) with copy of existing registers (Register(source_location=amm/contract.py:179:15-37, ir_type=uint64, name='tmp%6', version=0),)
debug: Found equivalence set: tmp%6#0, tmp%14#0, tmp%16#0
debug: Replacing {tmp%14#0, tmp%16#0} with tmp%6#0 made 2 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%4#0, out_asset#0
debug: Replacing {maybe_value%4#0} with out_asset#0 made 1 modifications
debug: Found equivalence set: maybe_value%5#0, out_asset#1
debug: Replacing {maybe_value%5#0} with out_asset#1 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%9#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@0: // L204 from switch tmp%7#0 {maybe_value%2#0 => block@1, maybe_value%3#0 => block@2, * => block@3} to switch tmp%7#0 {maybe_value%2#0 => block@1, maybe_value%3#0 => block@2, * => fail // asset id incorrect}
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@3: // switch_case_default_L241
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: uint64 = ((gtxns AssetAmount) swap_xfer#0) with copy of existing registers (Register(source_location=amm/contract.py:228:15-37, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%8#0
debug: Replacing {tmp%8#0} with tmp%2#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#0: uint64 = (* in_amount#0 995u) with copy of existing registers (Register(source_location=amm/contract.py:351:50-68, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%3#0
debug: Replacing {tmp%3#0} with tmp%2#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__algopy_default_create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to amm/out/ConstantProductAMM.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.set_governor
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.bootstrap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.do_asset_transfer
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.mint
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.tokens_to_mint
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM._update_ratio
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.burn
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.tokens_to_burn
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.tokens_to_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.amm.contract.ConstantProductAMM.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 2, ending loop
debug: Removing Phis from algopy.arc4.ARC4Contract.approval_program
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.set_governor
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.bootstrap
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Removing Phis from examples.amm.contract.do_asset_transfer
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.mint
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Removing Phis from examples.amm.contract.tokens_to_mint
debug: Removing Phis from examples.amm.contract.ConstantProductAMM._update_ratio
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.burn
debug: Removing Phis from examples.amm.contract.tokens_to_burn
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.swap
debug: Removing Phis from examples.amm.contract.tokens_to_swap
debug: Removing Phis from examples.amm.contract.ConstantProductAMM.__init__
debug: Removing Phis from algopy.arc4.ARC4Contract.clear_state_program
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.__puya_arc4_router__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.set_governor using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_is_governor using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.bootstrap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._create_pool_token using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._do_opt_in using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.do_asset_transfer using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.mint using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._check_bootstrapped using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_pool_balance using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_a_balance using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._current_b_balance using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.tokens_to_mint using strategy RootOperandGrouping
debug: Coalescing and_result%0#0 with [and_result%0#1]
debug: Coalescing is_initial_mint#0 with [is_initial_mint#1]
debug: Coalescing resulted in 5 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM._update_ratio using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.burn using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.tokens_to_burn using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.swap using strategy RootOperandGrouping
debug: Coalescing in_supply#0 with [in_supply#5, in_supply#1, in_supply#2]
debug: Coalescing out_supply#0 with [out_supply#5, out_supply#1, out_supply#2]
debug: Coalescing out_asset#0 with [out_asset#5, out_asset#1, out_asset#2]
debug: Coalescing resulted in 21 replacement/s
debug: Coalescing local variables in examples.amm.contract.tokens_to_swap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.amm.contract.ConstantProductAMM.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.set_governor
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_is_governor
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.bootstrap
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._create_pool_token
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._do_opt_in
debug: Sequentializing parallel copies in examples.amm.contract.do_asset_transfer
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.mint
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._check_bootstrapped
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_pool_balance
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_a_balance
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._current_b_balance
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_mint
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM._update_ratio
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.burn
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_burn
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.swap
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: loc: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: pred: {in_supply#0=in_supply#0, out_supply#0=out_supply#0, out_asset#0=out_asset#0}
debug: ready: 
debug: to_do: in_supply#0, out_supply#0, out_asset#0
debug: * to_do out_asset#0
debug: * to_do out_supply#0
debug: * to_do in_supply#0
debug: Sequentializing parallel copies in examples.amm.contract.tokens_to_swap
debug: Sequentializing parallel copies in examples.amm.contract.ConstantProductAMM.__init__
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to amm/out/ConstantProductAMM.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.amm.contract.ConstantProductAMM.approval_program
debug: Inserted __puya_arc4_router___block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___abi_routing@1.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___abi_routing@1.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___set_governor_route@2.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___set_governor_route@2.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___set_governor_route@2.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___set_governor_route@2.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___set_governor_route@2.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___set_governor_route@2.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___set_governor_route@2.ops[15]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___set_governor_route@2.ops[17]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___set_governor_route@2.ops[19]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___set_governor_route@2.ops[21]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___set_governor_route@2.ops[23]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___set_governor_route@2.ops[25]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[1]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[3]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[5]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[7]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[10]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[12]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[15]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[17]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[20]: 'store gtxn_idx%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[22]: 'load gtxn_idx%0#0' with 'load gtxn_idx%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[24]: 'store gtxn_type%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[26]: 'load gtxn_type%0#0' with 'load gtxn_type%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[29]: 'store gtxn_type_matches%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[31]: 'load gtxn_type_matches%0#0' with 'load gtxn_type_matches%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[34]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[36]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[38]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[40]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[44]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[46]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[48]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[50]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[57]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[59]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[65]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[67]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[61]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[64]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[52]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[56]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[42]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[56]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bootstrap_route@3.ops[23]: 'store gtxn_idx%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bootstrap_route@3.ops[56]: 'load gtxn_idx%0#0' with 'load gtxn_idx%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[1]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[3]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[5]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[7]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[10]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[12]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[15]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[17]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[20]: 'store gtxn_idx%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[22]: 'load gtxn_idx%1#0' with 'load gtxn_idx%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[24]: 'store gtxn_type%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[26]: 'load gtxn_type%1#0' with 'load gtxn_type%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[29]: 'store gtxn_type_matches%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[31]: 'load gtxn_type_matches%1#0' with 'load gtxn_type_matches%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[34]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[36]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[39]: 'store gtxn_idx%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[41]: 'load gtxn_idx%2#0' with 'load gtxn_idx%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[43]: 'store gtxn_type%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[45]: 'load gtxn_type%2#0' with 'load gtxn_type%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[48]: 'store gtxn_type_matches%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[50]: 'load gtxn_type_matches%2#0' with 'load gtxn_type_matches%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[53]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[55]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[57]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[59]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[63]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[65]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[67]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[69]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[73]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[75]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[77]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[79]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[81]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[87]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[71]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[87]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[61]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[87]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[42]: 'store gtxn_idx%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[87]: 'load gtxn_idx%2#0' with 'load gtxn_idx%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___mint_route@4.ops[23]: 'store gtxn_idx%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___mint_route@4.ops[87]: 'load gtxn_idx%1#0' with 'load gtxn_idx%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[1]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[3]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[5]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[7]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[10]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[12]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[15]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[17]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[20]: 'store gtxn_idx%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[22]: 'load gtxn_idx%3#0' with 'load gtxn_idx%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[24]: 'store gtxn_type%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[26]: 'load gtxn_type%3#0' with 'load gtxn_type%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[29]: 'store gtxn_type_matches%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[31]: 'load gtxn_type_matches%3#0' with 'load gtxn_type_matches%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[34]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[36]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[38]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[40]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[44]: 'store tmp%46#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[46]: 'load tmp%46#0' with 'load tmp%46#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[48]: 'store tmp%47#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[50]: 'load tmp%47#0' with 'load tmp%47#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[54]: 'store tmp%49#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[56]: 'load tmp%49#0' with 'load tmp%49#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[58]: 'store tmp%50#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[60]: 'load tmp%50#0' with 'load tmp%50#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[62]: 'store tmp%51#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[67]: 'load tmp%51#0' with 'load tmp%51#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[52]: 'store tmp%48#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[67]: 'load tmp%48#0' with 'load tmp%48#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[42]: 'store tmp%45#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[67]: 'load tmp%45#0' with 'load tmp%45#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___burn_route@5.ops[23]: 'store gtxn_idx%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___burn_route@5.ops[67]: 'load gtxn_idx%3#0' with 'load gtxn_idx%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[1]: 'store tmp%52#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[3]: 'load tmp%52#0' with 'load tmp%52#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[5]: 'store tmp%53#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[7]: 'load tmp%53#0' with 'load tmp%53#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[10]: 'store tmp%54#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[12]: 'load tmp%54#0' with 'load tmp%54#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[15]: 'store tmp%56#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[17]: 'load tmp%56#0' with 'load tmp%56#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[20]: 'store gtxn_idx%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[22]: 'load gtxn_idx%4#0' with 'load gtxn_idx%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[24]: 'store gtxn_type%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[26]: 'load gtxn_type%4#0' with 'load gtxn_type%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[29]: 'store gtxn_type_matches%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[31]: 'load gtxn_type_matches%4#0' with 'load gtxn_type_matches%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[34]: 'store tmp%57#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[36]: 'load tmp%57#0' with 'load tmp%57#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[38]: 'store tmp%58#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[40]: 'load tmp%58#0' with 'load tmp%58#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[44]: 'store tmp%60#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[46]: 'load tmp%60#0' with 'load tmp%60#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[48]: 'store tmp%61#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[50]: 'load tmp%61#0' with 'load tmp%61#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[52]: 'store tmp%62#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[56]: 'load tmp%62#0' with 'load tmp%62#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[42]: 'store tmp%59#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[56]: 'load tmp%59#0' with 'load tmp%59#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___swap_route@6.ops[23]: 'store gtxn_idx%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___swap_route@6.ops[56]: 'load gtxn_idx%4#0' with 'load gtxn_idx%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bare_routing@9.ops[1]: 'store tmp%63#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bare_routing@9.ops[3]: 'load tmp%63#0' with 'load tmp%63#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@10.ops[1]: 'store tmp%64#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@10.ops[3]: 'load tmp%64#0' with 'load tmp%64#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@10.ops[5]: 'store tmp%65#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@10.ops[7]: 'load tmp%65#0' with 'load tmp%65#0 from l-stack (no copy)'
debug: Found 3 edge set/s for examples.amm.contract.ConstantProductAMM.__puya_arc4_router__
debug: Inserted _check_is_governor_block@0.ops[12]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[14]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _check_is_governor_block@0.ops[5]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[8]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted _check_is_governor_block@0.ops[7]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[12]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _check_is_governor_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _check_is_governor_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[9]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[11]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[15]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[17]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[20]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[22]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[32]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[34]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[38]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[40]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[43]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[45]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[50]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[52]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[3]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[6]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[29]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[32]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[63]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[66]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[71]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[74]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[81]: 'store maybe_exists%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[84]: 'load maybe_exists%2#0' with 'load maybe_exists%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[91]: 'store maybe_exists%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[94]: 'load maybe_exists%3#0' with 'load maybe_exists%3#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[5]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[9]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[28]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[33]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[75]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[79]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[86]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[90]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[97]: 'store maybe_value%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[101]: 'load maybe_value%3#0' with 'load maybe_value%3#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[17]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[19]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[43]: 'store inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[45]: 'load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0' with 'load inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[63]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[65]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[4]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[7]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[11]: 'store check%0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[14]: 'load check%0#0' with 'load check%0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[28]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[31]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[35]: 'store check%1#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[38]: 'load check%1#0' with 'load check%1#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[6]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[10]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[31]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[35]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[14]: 'store value%0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[19]: 'load value%0#0' with 'load value%0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[40]: 'store value%1#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[45]: 'load value%1#0' with 'load value%1#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[49]: 'store inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[56]: 'load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0' with 'load inner_txn_params%0%%param_ConfigAssetManager_idx_0#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[26]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[45]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _create_pool_token_block@0.ops[48]: 'store inner_txn_params%0%%param_ConfigAssetName_idx_0#0 to l-stack (copy)'
debug: Replaced _create_pool_token_block@0.ops[66]: 'load inner_txn_params%0%%param_ConfigAssetName_idx_0#0' with 'load inner_txn_params%0%%param_ConfigAssetName_idx_0#0 from l-stack (no copy)'
debug: Inserted _do_opt_in_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _do_opt_in_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[11]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[13]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[25]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[27]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[39]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[41]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[51]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[53]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[63]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[65]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[75]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[77]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[92]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[94]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[98]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[100]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[110]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[112]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[127]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[129]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[133]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[135]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[149]: 'store to_mint#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[151]: 'load to_mint#0' with 'load to_mint#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[4]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[7]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[19]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[22]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[34]: 'store maybe_exists%2#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[37]: 'load maybe_exists%2#0' with 'load maybe_exists%2#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[50]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[53]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[63]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[66]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[76]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[79]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[91]: 'store maybe_exists%3#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[94]: 'load maybe_exists%3#0' with 'load maybe_exists%3#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[113]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[116]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[128]: 'store maybe_exists%4#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[131]: 'load maybe_exists%4#0' with 'load maybe_exists%4#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[167]: 'store maybe_exists%5#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[170]: 'load maybe_exists%5#0' with 'load maybe_exists%5#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[48]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[53]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[62]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[67]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[76]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[81]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[114]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[119]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[155]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[159]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[6]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[11]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[22]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[27]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[38]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[43]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[99]: 'store maybe_value%3#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[104]: 'load maybe_value%3#0' with 'load maybe_value%3#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[138]: 'store maybe_value%4#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[143]: 'load maybe_value%4#0' with 'load maybe_value%4#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[158]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[164]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[180]: 'store maybe_value%5#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[185]: 'load maybe_value%5#0' with 'load maybe_value%5#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[156]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[164]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[93]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[104]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[133]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[144]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[177]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[188]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[156]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[171]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[176]: 'store to_mint#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[192]: 'load to_mint#0' with 'load to_mint#0 from l-stack (no copy)'
debug: Inserted mint_block@0.ops[116]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced mint_block@0.ops[171]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted _check_bootstrapped_block@0.ops[3]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced _check_bootstrapped_block@0.ops[6]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted _check_bootstrapped_block@0.ops[5]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _check_bootstrapped_block@0.ops[9]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[5]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[8]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[13]: 'store check%0#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[16]: 'load check%0#0' with 'load check%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[15]: 'store value%0#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[19]: 'load value%0#0' with 'load value%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[7]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_pool_balance_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _current_pool_balance_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[5]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[8]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[13]: 'store check%0#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[16]: 'load check%0#0' with 'load check%0#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[15]: 'store value%0#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[19]: 'load value%0#0' with 'load value%0#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[7]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[12]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_a_balance_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _current_a_balance_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[5]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[8]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[13]: 'store check%0#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[16]: 'load check%0#0' with 'load check%0#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[15]: 'store value%0#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[19]: 'load value%0#0' with 'load value%0#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[7]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[12]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted _current_b_balance_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _current_b_balance_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_and_contd@1.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_and_contd@1.ops[5]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_bool_true@2.ops[1]: 'store and_result%0#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_bool_true@2.ops[3]: 'load and_result%0#0' with 'load and_result%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_bool_false@3.ops[1]: 'store and_result%0#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_bool_false@3.ops[3]: 'load and_result%0#0' with 'load and_result%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@5.ops[3]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@5.ops[5]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@5.ops[7]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@5.ops[9]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@5.ops[12]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@5.ops[14]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[31]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[33]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[11]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[14]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[24]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[27]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[29]: 'store b_ratio#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[32]: 'load b_ratio#0' with 'load b_ratio#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[7]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[14]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[21]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[28]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_after_if_else@6.ops[17]: 'store a_ratio#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_after_if_else@6.ops[34]: 'load a_ratio#0' with 'load a_ratio#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@7.ops[3]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@7.ops[5]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_if_body@7.ops[8]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_if_body@7.ops[10]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_else_body@8.ops[3]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_else_body@8.ops[5]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted tokens_to_mint_else_body@8.ops[8]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced tokens_to_mint_else_body@8.ops[10]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Found 4 edge set/s for examples.amm.contract.tokens_to_mint
debug: Allocated 2 variable/s to x-stack: is_initial_mint#0, issued#0
debug: shared x-stack for tokens_to_mint_bool_true@2 -> tokens_to_mint_bool_merge@4: is_initial_mint#0
debug: shared x-stack for tokens_to_mint_bool_false@3 -> tokens_to_mint_bool_merge@4: is_initial_mint#0
debug: shared x-stack for tokens_to_mint_after_if_else@6 -> tokens_to_mint_if_body@7: issued#0
debug: shared x-stack for tokens_to_mint_after_if_else@6 -> tokens_to_mint_else_body@8: issued#0
debug: examples.amm.contract.tokens_to_mint f-stack entry: ['a_ratio#0', 'b_ratio#0']
debug: examples.amm.contract.tokens_to_mint f-stack on first store: []
debug: Inserted _update_ratio_block@0.ops[7]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[9]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _update_ratio_block@0.ops[12]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[15]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted _update_ratio_block@0.ops[1]: 'store a_balance#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[5]: 'load a_balance#0' with 'load a_balance#0 from l-stack (no copy)'
debug: Inserted _update_ratio_block@0.ops[4]: 'store b_balance#0 to l-stack (copy)'
debug: Replaced _update_ratio_block@0.ops[12]: 'load b_balance#0' with 'load b_balance#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[11]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[13]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[25]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[27]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[39]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[41]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[51]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[53]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[57]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[59]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[74]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[76]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[86]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[88]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[4]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[7]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[19]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[22]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[34]: 'store maybe_exists%2#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[37]: 'load maybe_exists%2#0' with 'load maybe_exists%2#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[50]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[53]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[71]: 'store maybe_exists%3#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[74]: 'load maybe_exists%3#0' with 'load maybe_exists%3#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[87]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[90]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[99]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[102]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[107]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[110]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[119]: 'store maybe_exists%4#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[122]: 'load maybe_exists%4#0' with 'load maybe_exists%4#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[133]: 'store maybe_exists%5#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[136]: 'load maybe_exists%5#0' with 'load maybe_exists%5#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[48]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[53]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[86]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[91]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[99]: 'store pool_balance#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[104]: 'load pool_balance#0' with 'load pool_balance#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[6]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[11]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[22]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[27]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[38]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[43]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[77]: 'store maybe_value%3#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[82]: 'load maybe_value%3#0' with 'load maybe_value%3#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[128]: 'store maybe_value%4#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[133]: 'load maybe_value%4#0' with 'load maybe_value%4#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[143]: 'store maybe_value%5#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[148]: 'load maybe_value%5#0' with 'load maybe_value%5#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[109]: 'store pool_balance#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[117]: 'load pool_balance#0' with 'load pool_balance#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[112]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[120]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[71]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[82]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[125]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[136]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[141]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[152]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[115]: 'store a_amt#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[139]: 'load a_amt#0' with 'load a_amt#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[124]: 'store b_amt#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[156]: 'load b_amt#0' with 'load b_amt#0 from l-stack (no copy)'
debug: Inserted burn_block@0.ops[68]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced burn_block@0.ops[113]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[12]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[14]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[17]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[19]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_burn_block@0.ops[8]: 'store issued#0 to l-stack (copy)'
debug: Replaced tokens_to_burn_block@0.ops[16]: 'load issued#0' with 'load issued#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[11]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[13]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[25]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[27]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[31]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[33]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[43]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[45]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[4]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[7]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[19]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[22]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[41]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[44]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[53]: 'store maybe_exists%2#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[56]: 'load maybe_exists%2#0' with 'load maybe_exists%2#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[61]: 'store maybe_exists%3#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[64]: 'load maybe_exists%3#0' with 'load maybe_exists%3#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[39]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[44]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[69]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[73]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[6]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[11]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[22]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[27]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[66]: 'store maybe_value%3#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[75]: 'load maybe_value%3#0' with 'load maybe_value%3#0 from l-stack (no copy)'
debug: Inserted swap_block@0.ops[58]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced swap_block@0.ops[75]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_0@1.ops[7]: 'store maybe_exists%4#0 to l-stack (copy)'
debug: Replaced swap_switch_case_0@1.ops[10]: 'load maybe_exists%4#0' with 'load maybe_exists%4#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_1@2.ops[7]: 'store maybe_exists%5#0 to l-stack (copy)'
debug: Replaced swap_switch_case_1@2.ops[10]: 'load maybe_exists%5#0' with 'load maybe_exists%5#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[4]: 'store to_swap#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[6]: 'load to_swap#0' with 'load to_swap#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[9]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[11]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted swap_switch_case_next@4.ops[7]: 'store to_swap#0 to l-stack (copy)'
debug: Replaced swap_switch_case_next@4.ops[14]: 'load to_swap#0' with 'load to_swap#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.amm.contract.ConstantProductAMM.swap
debug: Allocated 1 variable/s to x-stack: out_supply#0
debug: shared x-stack for swap_switch_case_0@1 -> swap_switch_case_next@4: out_supply#0
debug: shared x-stack for swap_switch_case_1@2 -> swap_switch_case_next@4: out_supply#0
debug: examples.amm.contract.ConstantProductAMM.swap f-stack entry: ['in_supply#0', 'out_asset#0']
debug: examples.amm.contract.ConstantProductAMM.swap f-stack on first store: ['tmp%2#0']
debug: Inserted tokens_to_swap_block@0.ops[19]: 'store out_total#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[21]: 'load out_total#0' with 'load out_total#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[24]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[26]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[12]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[15]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[16]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[19]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[15]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted tokens_to_swap_block@0.ops[19]: 'store in_total#0 to l-stack (copy)'
debug: Replaced tokens_to_swap_block@0.ops[27]: 'load in_total#0' with 'load in_total#0 from l-stack (no copy)'
debug: Inserted __init___block@0.ops[7]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced __init___block@0.ops[10]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
info: Writing amm/out/ConstantProductAMM.arc32.json
info: Writing amm/out/ConstantProductAMM.approval.teal
info: Writing amm/out/ConstantProductAMM.clear.teal
info: Writing amm/out/ConstantProductAMM.approval.bin
info: Writing amm/out/ConstantProductAMM.clear.bin
info: writing amm/out/client_ConstantProductAMM.py