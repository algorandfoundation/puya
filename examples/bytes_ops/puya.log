>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug bytes_ops
debug: Building AWST for __init__.py
debug: Building AWST for bytes_ops
debug: Building AWST for embedded puyapy lib at <puya>/puyapy.py
debug: Building AWST for bytes_ops/contract.py
debug: Sealing block@0: // L22
debug: Terminated block@0: // L22
debug: Sealing block@0: // L42
debug: Terminated block@0: // L42
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L17
debug: Terminated block@0: // L17
debug: Output IR to <git root>/examples/bytes_ops/out/contract_BiguintBinaryOps.ssa.ir
info: Optimizing examples.bytes_ops.contract.BiguintBinaryOps at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.bytes_ops.contract.BiguintBinaryOps.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.bytes_ops.contract.do_some_ops
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.bytes_ops.contract.do_augmented_assignment_ops
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable five#0
debug: Removing unused variable sixteen#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.bytes_ops.contract.BiguintBinaryOps.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/bytes_ops/out/contract_BiguintBinaryOps.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.bytes_ops.contract.BiguintBinaryOps.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.bytes_ops.contract.do_some_ops
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.bytes_ops.contract.do_augmented_assignment_ops
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.bytes_ops.contract.BiguintBinaryOps.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 2, ending loop
debug: Output IR to <git root>/examples/bytes_ops/out/contract_BiguintBinaryOps.cssa.ir
debug: Removing Phis from examples.bytes_ops.contract.BiguintBinaryOps.approval_program
debug: Removing Phis from examples.bytes_ops.contract.do_some_ops
debug: Removing Phis from examples.bytes_ops.contract.do_augmented_assignment_ops
debug: Removing Phis from examples.bytes_ops.contract.BiguintBinaryOps.clear_state_program
debug: Output IR to <git root>/examples/bytes_ops/out/contract_BiguintBinaryOps.post_ssa.ir
debug: Sequentializing parallel copies in examples.bytes_ops.contract.BiguintBinaryOps.approval_program
debug: Sequentializing parallel copies in examples.bytes_ops.contract.do_some_ops
debug: Sequentializing parallel copies in examples.bytes_ops.contract.do_augmented_assignment_ops
debug: Sequentializing parallel copies in examples.bytes_ops.contract.BiguintBinaryOps.clear_state_program
debug: Output IR to <git root>/examples/bytes_ops/out/contract_BiguintBinaryOps.parallel_copies.ir
debug: Coalescing local variables in examples.bytes_ops.contract.BiguintBinaryOps.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.bytes_ops.contract.do_some_ops using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1, result#2, result#3]
debug: Coalescing resulted in 6 replacement/s
debug: Coalescing local variables in examples.bytes_ops.contract.do_augmented_assignment_ops using strategy RootOperandGrouping
debug: Coalescing seed#0 with [seed#1, seed#2, seed#3, seed#4, seed#5]
debug: Coalescing resulted in 14 replacement/s
debug: Coalescing local variables in examples.bytes_ops.contract.BiguintBinaryOps.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/bytes_ops/out/contract_BiguintBinaryOps.final.ir
debug: Inserted do_some_ops_block@0.ops[3]: 'store result#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[5]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[15]: 'store result#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[17]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[20]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[22]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[27]: 'store result#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[29]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[32]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[34]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[39]: 'store result#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[41]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted do_some_ops_block@0.ops[44]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced do_some_ops_block@0.ops[46]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted do_augmented_assignment_ops_block@0.ops[6]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced do_augmented_assignment_ops_block@0.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted do_augmented_assignment_ops_block@0.ops[16]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced do_augmented_assignment_ops_block@0.ops[18]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted do_augmented_assignment_ops_block@0.ops[26]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced do_augmented_assignment_ops_block@0.ops[28]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted do_augmented_assignment_ops_block@0.ops[36]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced do_augmented_assignment_ops_block@0.ops[38]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted do_augmented_assignment_ops_block@0.ops[46]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced do_augmented_assignment_ops_block@0.ops[48]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
info: Writing bytes_ops/out/contract.approval.teal
info: Writing bytes_ops/out/contract.approval.debug.teal
info: Writing bytes_ops/out/contract.clear.teal
info: Writing bytes_ops/out/contract.clear.debug.teal
>> exit code = 0