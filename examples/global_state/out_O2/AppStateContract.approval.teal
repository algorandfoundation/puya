#pragma version 10
#pragma typetrack false

// examples.global_state.contract.AppStateContract.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 44 55
    bytecblock "global_bytes_no_default" 0x48656c6c6f 0x676c6f62616c5f696e745f6e6f5f64656661756c74 "global_bytes_full" "global_int_full" "global_bool_full" 0x64656661756c74 0x576f726c64 "global_bool_no_default" "global_int_simplified" "global_bytes_simplified" "global_bool_simplified"
    txn ApplicationID
    bnz main_after_if_else@2
    bytec 4 // "global_int_full"
    intc_3 // 55
    app_global_put
    bytec 9 // "global_int_simplified"
    pushint 33 // 33
    app_global_put
    bytec_3 // "global_bytes_full"
    bytec_1 // 0x48656c6c6f
    app_global_put
    bytec 10 // "global_bytes_simplified"
    bytec_1 // 0x48656c6c6f
    app_global_put
    bytec 5 // "global_bool_full"
    intc_0 // 0
    app_global_put
    bytec 11 // "global_bool_simplified"
    intc_1 // 1
    app_global_put

main_after_if_else@2:
    intc_0 // 0
    bytec 9 // "global_int_simplified"
    app_global_get_ex
    assert // check self.global_int_simplified exists
    pushint 33 // 33
    ==
    assert
    intc_0 // 0
    bytec 4 // "global_int_full"
    app_global_get_ex
    bury 1
    assert
    intc_0 // 0
    bytec 4 // "global_int_full"
    app_global_get_ex
    assert // check self.global_int_full exists
    intc_3 // 55
    ==
    assert
    intc_0 // 0
    bytec_2 // "global_int_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    bytec_2 // "global_int_no_default"
    intc_2 // 44
    app_global_put
    intc_0 // 0
    bytec_2 // "global_int_no_default"
    app_global_get_ex
    assert
    intc_2 // 44
    ==
    assert
    intc_0 // 0
    bytec_2 // 0x676c6f62616c5f696e745f6e6f5f64656661756c74
    app_global_get_ex
    assert // check GlobalState exists
    intc_2 // 44
    ==
    assert
    intc_0 // 0
    bytec 10 // "global_bytes_simplified"
    app_global_get_ex
    assert // check self.global_bytes_simplified exists
    bytec_1 // 0x48656c6c6f
    ==
    assert
    intc_0 // 0
    bytec_3 // "global_bytes_full"
    app_global_get_ex
    bury 1
    assert
    intc_0 // 0
    bytec_3 // "global_bytes_full"
    app_global_get_ex
    assert // check self.global_bytes_full exists
    bytec_1 // 0x48656c6c6f
    ==
    assert
    intc_0 // 0
    bytec_3 // "global_bytes_full"
    app_global_get_ex
    bytec 6 // 0x64656661756c74
    cover 2
    select
    bytec_1 // 0x48656c6c6f
    ==
    assert
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    bytec_0 // "global_bytes_no_default"
    bytec 7 // 0x576f726c64
    app_global_put
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    assert
    bytec 7 // 0x576f726c64
    ==
    assert
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    assert // check GlobalState exists
    bytec 7 // 0x576f726c64
    ==
    assert
    bytec_0 // "global_bytes_no_default"
    app_global_del
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    bytec 6 // 0x64656661756c74
    cover 2
    select
    bytec 6 // 0x64656661756c74
    ==
    assert
    intc_0 // 0
    bytec 5 // "global_bool_full"
    app_global_get_ex
    bury 1
    assert
    intc_0 // 0
    bytec 8 // "global_bool_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    bytec 8 // "global_bool_no_default"
    intc_1 // 1
    app_global_put
    intc_0 // 0
    bytec 5 // "global_bool_full"
    app_global_get_ex
    assert // check self.global_bool_full exists
    !
    assert
    intc_0 // 0
    bytec 11 // "global_bool_simplified"
    app_global_get_ex
    assert // check self.global_bool_simplified exists
    assert
    intc_0 // 0
    bytec 8 // "global_bool_no_default"
    app_global_get_ex
    assert // check self.global_bool_no_default exists
    assert
    intc_0 // 0
    bytec_2 // "global_int_no_default"
    app_global_get_ex
    assert // check GlobalState exists
    intc_1 // 1
    +
    pushint 45 // 45
    ==
    assert
    intc_1 // 1
    return
