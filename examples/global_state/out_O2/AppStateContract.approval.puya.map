{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeQ;;AAAmC;AAAnC;AACA;;AAA6B;AAA7B;AAGA;;AAAqC;AAArC;AACA;;AAA+B;AAA/B;AAGA;AAAoC;AAApC;AACA;;AAA8B;AAA9B;AAQO;AAAA;;AAAA;AAAA;AAA8B;AAA9B;AAAP;AACO;AAAA;;AAAA;AAAP;AACqC;AAA9B;AAAP;AACO;AAAI;AAAJ;AAAA;;AAAA;AAAP;AACA;AAAmC;;AAAnC;AAiDG;AA7CuB;AA6CvB;AAAA;AA7C2D;;AAAvD;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAP;AACO;AAAA;;AAAA;AAAP;AAAA;AACO;;AAAgC;AAAhC;AAAP;AACkC;;AAA3B;;AAAA;AAAiD;AAAjD;AAAP;AACO;AAAI;AAAJ;AAAA;;AAAA;AAAP;AACA;AAAqC;;;;;;;AAArC;AAKI;AAAJ;AACoB;AAAA;AAAA;AACb;AAAA;AAAP;AAEwC;;AAAjC;;AAAA;AAAuD;;AAAvD;AAAP;AAGO;AAAA;AAAA;AAAA;;AAAP;AACO;AAAI;;AAAJ;AAAA;;AAAA;AAAP;AAEA;;AAAoC;AAApC;AAGW;AAAA;AAAA;AAAA;AAAJ;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AAcG;AAV4B;AAU5B;AAAA;AAAc;AAAd;AAV2D;;AAAvD;AAAP;AAEO;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "examples.global_state.contract.AppStateContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 55 33"
    },
    "7": {
      "op": "bytecblock 0x48656c6c6f 0x676c6f62616c5f696e745f6e6f5f64656661756c74 \"global_bytes_no_default\" \"global_bool_full\" 0x64656661756c74 \"global_int_full\" \"global_int_simplified\" \"global_bytes_full\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_bool_no_default\""
    },
    "212": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "214": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "217": {
      "op": "bytec 5 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\""
      ],
      "stack_out": [
        "\"global_int_full\""
      ]
    },
    "219": {
      "op": "intc_2 // 55",
      "defined_out": [
        "\"global_int_full\"",
        "55"
      ],
      "stack_out": [
        "\"global_int_full\"",
        "55"
      ]
    },
    "220": {
      "op": "app_global_put",
      "stack_out": []
    },
    "221": {
      "op": "bytec 6 // \"global_int_simplified\"",
      "defined_out": [
        "\"global_int_simplified\""
      ],
      "stack_out": [
        "\"global_int_simplified\""
      ]
    },
    "223": {
      "op": "intc_3 // 33",
      "defined_out": [
        "\"global_int_simplified\"",
        "33"
      ],
      "stack_out": [
        "\"global_int_simplified\"",
        "33"
      ]
    },
    "224": {
      "op": "app_global_put",
      "stack_out": []
    },
    "225": {
      "op": "bytec 7 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\""
      ],
      "stack_out": [
        "\"global_bytes_full\""
      ]
    },
    "227": {
      "op": "bytec_0 // 0x48656c6c6f",
      "defined_out": [
        "\"global_bytes_full\"",
        "0x48656c6c6f"
      ],
      "stack_out": [
        "\"global_bytes_full\"",
        "0x48656c6c6f"
      ]
    },
    "228": {
      "op": "app_global_put",
      "stack_out": []
    },
    "229": {
      "op": "bytec 8 // \"global_bytes_simplified\"",
      "defined_out": [
        "\"global_bytes_simplified\""
      ],
      "stack_out": [
        "\"global_bytes_simplified\""
      ]
    },
    "231": {
      "op": "bytec_0 // 0x48656c6c6f",
      "stack_out": [
        "\"global_bytes_simplified\"",
        "0x48656c6c6f"
      ]
    },
    "232": {
      "op": "app_global_put",
      "stack_out": []
    },
    "233": {
      "op": "bytec_3 // \"global_bool_full\"",
      "defined_out": [
        "\"global_bool_full\""
      ],
      "stack_out": [
        "\"global_bool_full\""
      ]
    },
    "234": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"global_bool_full\"",
        "0"
      ],
      "stack_out": [
        "\"global_bool_full\"",
        "0"
      ]
    },
    "235": {
      "op": "app_global_put",
      "stack_out": []
    },
    "236": {
      "op": "bytec 9 // \"global_bool_simplified\"",
      "defined_out": [
        "\"global_bool_simplified\""
      ],
      "stack_out": [
        "\"global_bool_simplified\""
      ]
    },
    "238": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"global_bool_simplified\"",
        "1"
      ],
      "stack_out": [
        "\"global_bool_simplified\"",
        "1"
      ]
    },
    "239": {
      "op": "app_global_put",
      "stack_out": []
    },
    "240": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "241": {
      "op": "bytec 6 // \"global_int_simplified\"",
      "defined_out": [
        "\"global_int_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_simplified\""
      ]
    },
    "243": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "244": {
      "error": "check self.global_int_simplified exists",
      "op": "assert // check self.global_int_simplified exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "245": {
      "op": "intc_3 // 33",
      "defined_out": [
        "33",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "33"
      ]
    },
    "246": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "247": {
      "op": "assert",
      "stack_out": []
    },
    "248": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "249": {
      "op": "bytec 5 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_full\""
      ]
    },
    "251": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "252": {
      "op": "assert",
      "stack_out": [
        "_%0#0"
      ]
    },
    "253": {
      "op": "intc_2 // 55",
      "defined_out": [
        "55",
        "_%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "55"
      ]
    },
    "254": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "255": {
      "op": "assert",
      "stack_out": []
    },
    "256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "257": {
      "op": "bytec_1 // \"global_int_no_default\"",
      "defined_out": [
        "\"global_int_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_no_default\""
      ]
    },
    "258": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%1#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "_%1#0",
        "maybe_exists%3#0"
      ]
    },
    "259": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%3#0"
      ]
    },
    "261": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "262": {
      "op": "assert",
      "stack_out": []
    },
    "263": {
      "op": "bytec_1 // \"global_int_no_default\"",
      "stack_out": [
        "\"global_int_no_default\""
      ]
    },
    "264": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "\"global_int_no_default\"",
        "44"
      ],
      "stack_out": [
        "\"global_int_no_default\"",
        "44"
      ]
    },
    "266": {
      "op": "app_global_put",
      "stack_out": []
    },
    "267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "268": {
      "op": "bytec_1 // 0x676c6f62616c5f696e745f6e6f5f64656661756c74",
      "defined_out": [
        "0",
        "0x676c6f62616c5f696e745f6e6f5f64656661756c74"
      ],
      "stack_out": [
        "0",
        "0x676c6f62616c5f696e745f6e6f5f64656661756c74"
      ]
    },
    "269": {
      "op": "app_global_get_ex",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "270": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "271": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "maybe_value%0#0",
        "44"
      ]
    },
    "273": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "274": {
      "op": "assert",
      "stack_out": []
    },
    "275": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "276": {
      "op": "bytec 8 // \"global_bytes_simplified\"",
      "defined_out": [
        "\"global_bytes_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_simplified\""
      ]
    },
    "278": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%5#0"
      ]
    },
    "279": {
      "error": "check self.global_bytes_simplified exists",
      "op": "assert // check self.global_bytes_simplified exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "280": {
      "op": "bytec_0 // 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "0x48656c6c6f"
      ]
    },
    "281": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "282": {
      "op": "assert",
      "stack_out": []
    },
    "283": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "284": {
      "op": "bytec 7 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_full\""
      ]
    },
    "286": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%2#0",
        "maybe_exists%6#0"
      ],
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0"
      ]
    },
    "287": {
      "op": "dup",
      "defined_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "maybe_exists%6#0 (copy)"
      ],
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "maybe_exists%6#0 (copy)"
      ]
    },
    "288": {
      "op": "assert",
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0"
      ]
    },
    "289": {
      "op": "dig 1",
      "defined_out": [
        "_%2#0",
        "_%2#0 (copy)",
        "maybe_exists%6#0"
      ],
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "_%2#0 (copy)"
      ]
    },
    "291": {
      "op": "bytec_0 // 0x48656c6c6f",
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "_%2#0 (copy)",
        "0x48656c6c6f"
      ]
    },
    "292": {
      "op": "==",
      "defined_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "tmp%7#0"
      ]
    },
    "293": {
      "op": "assert",
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0"
      ]
    },
    "294": {
      "op": "bytec 4 // 0x64656661756c74",
      "defined_out": [
        "0x64656661756c74",
        "_%2#0",
        "maybe_exists%6#0"
      ],
      "stack_out": [
        "_%2#0",
        "maybe_exists%6#0",
        "0x64656661756c74"
      ]
    },
    "296": {
      "op": "cover 2",
      "stack_out": [
        "0x64656661756c74",
        "_%2#0",
        "maybe_exists%6#0"
      ]
    },
    "298": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "299": {
      "op": "bytec_0 // 0x48656c6c6f",
      "stack_out": [
        "state_get%0#0",
        "0x48656c6c6f"
      ]
    },
    "300": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "301": {
      "op": "assert",
      "stack_out": []
    },
    "302": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "303": {
      "op": "bytec_2 // \"global_bytes_no_default\"",
      "defined_out": [
        "\"global_bytes_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_no_default\""
      ]
    },
    "304": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%3#0",
        "maybe_exists%9#0"
      ],
      "stack_out": [
        "_%3#0",
        "maybe_exists%9#0"
      ]
    },
    "305": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%9#0"
      ]
    },
    "307": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "308": {
      "op": "assert",
      "stack_out": []
    },
    "309": {
      "op": "bytec_2 // \"global_bytes_no_default\"",
      "stack_out": [
        "\"global_bytes_no_default\""
      ]
    },
    "310": {
      "op": "pushbytes 0x576f726c64",
      "defined_out": [
        "\"global_bytes_no_default\"",
        "0x576f726c64"
      ],
      "stack_out": [
        "\"global_bytes_no_default\"",
        "0x576f726c64"
      ]
    },
    "317": {
      "op": "app_global_put",
      "stack_out": []
    },
    "318": {
      "op": "bytec_2 // \"global_bytes_no_default\"",
      "stack_out": [
        "\"global_bytes_no_default\""
      ]
    },
    "319": {
      "op": "app_global_del",
      "stack_out": []
    },
    "320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "321": {
      "op": "bytec_2 // \"global_bytes_no_default\"",
      "stack_out": [
        "0",
        "\"global_bytes_no_default\""
      ]
    },
    "322": {
      "op": "app_global_get_ex",
      "defined_out": [
        "b_exists#1",
        "b_value#1"
      ],
      "stack_out": [
        "b_value#1",
        "b_exists#1"
      ]
    },
    "323": {
      "op": "dup",
      "defined_out": [
        "b_exists#1",
        "b_exists#1 (copy)",
        "b_value#1"
      ],
      "stack_out": [
        "b_value#1",
        "b_exists#1",
        "b_exists#1 (copy)"
      ]
    },
    "324": {
      "op": "!",
      "defined_out": [
        "b_exists#1",
        "b_value#1",
        "tmp%13#0"
      ],
      "stack_out": [
        "b_value#1",
        "b_exists#1",
        "tmp%13#0"
      ]
    },
    "325": {
      "op": "assert",
      "stack_out": [
        "b_value#1",
        "b_exists#1"
      ]
    },
    "326": {
      "op": "bytec 4 // 0x64656661756c74",
      "stack_out": [
        "b_value#1",
        "b_exists#1",
        "0x64656661756c74"
      ]
    },
    "328": {
      "op": "cover 2",
      "stack_out": [
        "0x64656661756c74",
        "b_value#1",
        "b_exists#1"
      ]
    },
    "330": {
      "op": "select",
      "defined_out": [
        "state_get%1#0"
      ],
      "stack_out": [
        "state_get%1#0"
      ]
    },
    "331": {
      "op": "bytec 4 // 0x64656661756c74",
      "stack_out": [
        "state_get%1#0",
        "0x64656661756c74"
      ]
    },
    "333": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "334": {
      "op": "assert",
      "stack_out": []
    },
    "335": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "336": {
      "op": "bytec_3 // \"global_bool_full\"",
      "defined_out": [
        "\"global_bool_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bool_full\""
      ]
    },
    "337": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%4#0",
        "maybe_exists%13#0"
      ],
      "stack_out": [
        "_%4#0",
        "maybe_exists%13#0"
      ]
    },
    "338": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%13#0"
      ]
    },
    "340": {
      "op": "assert",
      "stack_out": []
    },
    "341": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "342": {
      "op": "bytec 10 // \"global_bool_no_default\"",
      "defined_out": [
        "\"global_bool_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bool_no_default\""
      ]
    },
    "344": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%5#0",
        "maybe_exists%14#0"
      ],
      "stack_out": [
        "_%5#0",
        "maybe_exists%14#0"
      ]
    },
    "345": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%14#0"
      ]
    },
    "347": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "348": {
      "op": "assert",
      "stack_out": []
    },
    "349": {
      "op": "bytec 10 // \"global_bool_no_default\"",
      "stack_out": [
        "\"global_bool_no_default\""
      ]
    },
    "351": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"global_bool_no_default\"",
        "1"
      ],
      "stack_out": [
        "\"global_bool_no_default\"",
        "1"
      ]
    },
    "352": {
      "op": "app_global_put",
      "stack_out": []
    },
    "353": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "354": {
      "op": "bytec_3 // \"global_bool_full\"",
      "stack_out": [
        "0",
        "\"global_bool_full\""
      ]
    },
    "355": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%15#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "maybe_value%9#0",
        "maybe_exists%15#0"
      ]
    },
    "356": {
      "error": "check self.global_bool_full exists",
      "op": "assert // check self.global_bool_full exists",
      "stack_out": [
        "maybe_value%9#0"
      ]
    },
    "357": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "358": {
      "op": "assert",
      "stack_out": []
    },
    "359": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "360": {
      "op": "bytec 9 // \"global_bool_simplified\"",
      "defined_out": [
        "\"global_bool_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bool_simplified\""
      ]
    },
    "362": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%16#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "maybe_value%10#0",
        "maybe_exists%16#0"
      ]
    },
    "363": {
      "error": "check self.global_bool_simplified exists",
      "op": "assert // check self.global_bool_simplified exists",
      "stack_out": [
        "maybe_value%10#0"
      ]
    },
    "364": {
      "op": "assert",
      "stack_out": []
    },
    "365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "366": {
      "op": "bytec_1 // \"global_int_no_default\"",
      "stack_out": [
        "0",
        "\"global_int_no_default\""
      ]
    },
    "367": {
      "op": "app_global_get_ex",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "368": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "369": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "370": {
      "op": "+",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "371": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "45"
      ]
    },
    "373": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "374": {
      "op": "assert",
      "stack_out": []
    },
    "375": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "376": {
      "op": "return",
      "stack_out": []
    }
  }
}