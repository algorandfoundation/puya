// Op                                                   // Op Description                                         Stack (out)                                                  Source code                                                                     Source line

#pragma version 10

// examples.global_state.contract.AppStateContract.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                   //                                                        {txn}
                                                        // virtual: store app_id%0#0 to l-stack (no copy)         app_id%0#0
                                                        // virtual: load app_id%0#0 from l-stack (no copy)        app_id%0#0
    bnz main_entrypoint@2                               //
    // Implicit fall through to main_on_create@1        //

main_on_create@1:
    callsub __init__                                    //
    // Implicit fall through to main_entrypoint@2       //

main_entrypoint@2:
    int 0                                               //                                                        0                                                            self.global_int_simplified                                                      global_state/contract.py:33
    byte "global_int_simplified"                        //                                                        0,"global_int_simplified"                                    self.global_int_simplified                                                      global_state/contract.py:33
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_int_simplified                                                      global_state/contract.py:33
                                                        // virtual: store maybe_exists%0#0 to l-stack (no copy)   maybe_exists%0#0,{app_global_get_ex}.0                       self.global_int_simplified                                                      global_state/contract.py:33
                                                        // virtual: store maybe_value%0#0 to l-stack (no copy)    maybe_value%0#0,maybe_exists%0#0                             self.global_int_simplified                                                      global_state/contract.py:33
                                                        // virtual: load maybe_exists%0#0 from l-stack (no copy)  maybe_value%0#0,maybe_exists%0#0                             self.global_int_simplified                                                      global_state/contract.py:33
    assert // check self.global_int_simplified exists   //                                                        maybe_value%0#0                                              self.global_int_simplified                                                      global_state/contract.py:33
                                                        // virtual: load maybe_value%0#0 from l-stack (no copy)   maybe_value%0#0                                              self.global_int_simplified == 33                                                global_state/contract.py:33
    int 33                                              //                                                        maybe_value%0#0,33                                           33                                                                              global_state/contract.py:33
    ==                                                  //                                                        {==}                                                         self.global_int_simplified == 33                                                global_state/contract.py:33
                                                        // virtual: store tmp%0#0 to l-stack (no copy)            tmp%0#0                                                      self.global_int_simplified == 33                                                global_state/contract.py:33
                                                        // virtual: load tmp%0#0 from l-stack (no copy)           tmp%0#0                                                      assert self.global_int_simplified == 33                                         global_state/contract.py:33
    assert                                              //                                                                                                                     assert self.global_int_simplified == 33                                         global_state/contract.py:33
    int 0                                               //                                                        0                                                            self.global_int_full                                                            global_state/contract.py:34
    byte "global_int_full"                              //                                                        0,"global_int_full"                                          self.global_int_full                                                            global_state/contract.py:34
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_int_full                                                            global_state/contract.py:34
    cover 1                                             // store maybe_exists%1#0 to l-stack (no copy)            maybe_exists%1#0,{app_global_get_ex}.0                       self.global_int_full                                                            global_state/contract.py:34
    pop                                                 //                                                        maybe_exists%1#0                                             self.global_int_full                                                            global_state/contract.py:34
                                                        // virtual: load maybe_exists%1#0 from l-stack (no copy)  maybe_exists%1#0                                             assert self.global_int_full                                                     global_state/contract.py:34
    assert                                              //                                                                                                                     assert self.global_int_full                                                     global_state/contract.py:34
    int 0                                               //                                                        0                                                            self.global_int_full.value                                                      global_state/contract.py:35
    byte "global_int_full"                              //                                                        0,"global_int_full"                                          self.global_int_full                                                            global_state/contract.py:35
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_int_full.value                                                      global_state/contract.py:35
                                                        // virtual: store maybe_exists%2#0 to l-stack (no copy)   maybe_exists%2#0,{app_global_get_ex}.0                       self.global_int_full.value                                                      global_state/contract.py:35
                                                        // virtual: store maybe_value%2#0 to l-stack (no copy)    maybe_value%2#0,maybe_exists%2#0                             self.global_int_full.value                                                      global_state/contract.py:35
                                                        // virtual: load maybe_exists%2#0 from l-stack (no copy)  maybe_value%2#0,maybe_exists%2#0                             self.global_int_full.value                                                      global_state/contract.py:35
    assert // check self.global_int_full exists         //                                                        maybe_value%2#0                                              self.global_int_full.value                                                      global_state/contract.py:35
                                                        // virtual: load maybe_value%2#0 from l-stack (no copy)   maybe_value%2#0                                              self.global_int_full.value == 55                                                global_state/contract.py:35
    int 55                                              //                                                        maybe_value%2#0,55                                           55                                                                              global_state/contract.py:35
    ==                                                  //                                                        {==}                                                         self.global_int_full.value == 55                                                global_state/contract.py:35
                                                        // virtual: store tmp%1#0 to l-stack (no copy)            tmp%1#0                                                      self.global_int_full.value == 55                                                global_state/contract.py:35
                                                        // virtual: load tmp%1#0 from l-stack (no copy)           tmp%1#0                                                      assert self.global_int_full.value == 55                                         global_state/contract.py:35
    assert                                              //                                                                                                                     assert self.global_int_full.value == 55                                         global_state/contract.py:35
    int 0                                               //                                                        0                                                            not self.global_int_no_default                                                  global_state/contract.py:36
    byte "global_int_no_default"                        //                                                        0,"global_int_no_default"                                    self.global_int_no_default                                                      global_state/contract.py:36
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  not self.global_int_no_default                                                  global_state/contract.py:36
    cover 1                                             // store maybe_exists%3#0 to l-stack (no copy)            maybe_exists%3#0,{app_global_get_ex}.0                       not self.global_int_no_default                                                  global_state/contract.py:36
    pop                                                 //                                                        maybe_exists%3#0                                             not self.global_int_no_default                                                  global_state/contract.py:36
                                                        // virtual: load maybe_exists%3#0 from l-stack (no copy)  maybe_exists%3#0                                             not self.global_int_no_default                                                  global_state/contract.py:36
    !                                                   //                                                        {!}                                                          not self.global_int_no_default                                                  global_state/contract.py:36
                                                        // virtual: store tmp%2#0 to l-stack (no copy)            tmp%2#0                                                      not self.global_int_no_default                                                  global_state/contract.py:36
                                                        // virtual: load tmp%2#0 from l-stack (no copy)           tmp%2#0                                                      assert not self.global_int_no_default                                           global_state/contract.py:36
    assert                                              //                                                                                                                     assert not self.global_int_no_default                                           global_state/contract.py:36
    byte "global_int_no_default"                        //                                                        "global_int_no_default"                                      self.global_int_no_default                                                      global_state/contract.py:37
    int 44                                              //                                                        "global_int_no_default",44                                   UInt64(44)                                                                      global_state/contract.py:37
    app_global_put                                      //                                                                                                                     self.global_int_no_default.value = UInt64(44)                                   global_state/contract.py:37
    int 0                                               //                                                        0                                                            self.global_int_no_default.maybe                                                global_state/contract.py:38
    byte "global_int_no_default"                        //                                                        0,"global_int_no_default"                                    self.global_int_no_default                                                      global_state/contract.py:38
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_int_no_default.maybe()                                              global_state/contract.py:38
                                                        // virtual: store i_exists#0 to l-stack (no copy)         i_exists#0,{app_global_get_ex}.0                             self.global_int_no_default.maybe()                                              global_state/contract.py:38
                                                        // virtual: store i_value#0 to l-stack (no copy)          i_value#0,i_exists#0                                         self.global_int_no_default.maybe()                                              global_state/contract.py:38
                                                        // virtual: load i_exists#0 from l-stack (no copy)        i_value#0,i_exists#0                                         assert i_exists                                                                 global_state/contract.py:39
    assert                                              //                                                        i_value#0                                                    assert i_exists                                                                 global_state/contract.py:39
                                                        // virtual: load i_value#0 from l-stack (no copy)         i_value#0                                                    i_value == 44                                                                   global_state/contract.py:40
    int 44                                              //                                                        i_value#0,44                                                 44                                                                              global_state/contract.py:40
    ==                                                  //                                                        {==}                                                         i_value == 44                                                                   global_state/contract.py:40
                                                        // virtual: store tmp%3#0 to l-stack (no copy)            tmp%3#0                                                      i_value == 44                                                                   global_state/contract.py:40
                                                        // virtual: load tmp%3#0 from l-stack (no copy)           tmp%3#0                                                      assert i_value == 44                                                            global_state/contract.py:40
    assert                                              //                                                                                                                     assert i_value == 44                                                            global_state/contract.py:40
    byte 0x676c6f62616c5f696e745f6e6f5f64656661756c74   //                                                        0x676c6f62616c5f696e745f6e6f5f64656661756c74                 Bytes(b"global_int_no_default")                                                 global_state/contract.py:41
    callsub read_global_uint64                          //                                                        {read_global_uint64}                                         read_global_uint64(Bytes(b"global_int_no_default"))                             global_state/contract.py:41
                                                        // virtual: store tmp%4#0 to l-stack (no copy)            tmp%4#0                                                      read_global_uint64(Bytes(b"global_int_no_default"))                             global_state/contract.py:41
                                                        // virtual: load tmp%4#0 from l-stack (no copy)           tmp%4#0                                                      read_global_uint64(Bytes(b"global_int_no_default")) == 44                       global_state/contract.py:41
    int 44                                              //                                                        tmp%4#0,44                                                   44                                                                              global_state/contract.py:41
    ==                                                  //                                                        {==}                                                         read_global_uint64(Bytes(b"global_int_no_default")) == 44                       global_state/contract.py:41
                                                        // virtual: store tmp%5#0 to l-stack (no copy)            tmp%5#0                                                      read_global_uint64(Bytes(b"global_int_no_default")) == 44                       global_state/contract.py:41
                                                        // virtual: load tmp%5#0 from l-stack (no copy)           tmp%5#0                                                      assert read_global_uint64(Bytes(b"global_int_no_default")) == 44                global_state/contract.py:41
    assert                                              //                                                                                                                     assert read_global_uint64(Bytes(b"global_int_no_default")) == 44                global_state/contract.py:41
    int 0                                               //                                                        0                                                            self.global_bytes_simplified                                                    global_state/contract.py:43
    byte "global_bytes_simplified"                      //                                                        0,"global_bytes_simplified"                                  self.global_bytes_simplified                                                    global_state/contract.py:43
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_simplified                                                    global_state/contract.py:43
                                                        // virtual: store maybe_exists%5#0 to l-stack (no copy)   maybe_exists%5#0,{app_global_get_ex}.0                       self.global_bytes_simplified                                                    global_state/contract.py:43
                                                        // virtual: store maybe_value%5#0 to l-stack (no copy)    maybe_value%5#0,maybe_exists%5#0                             self.global_bytes_simplified                                                    global_state/contract.py:43
                                                        // virtual: load maybe_exists%5#0 from l-stack (no copy)  maybe_value%5#0,maybe_exists%5#0                             self.global_bytes_simplified                                                    global_state/contract.py:43
    assert // check self.global_bytes_simplified exists //                                                        maybe_value%5#0                                              self.global_bytes_simplified                                                    global_state/contract.py:43
                                                        // virtual: load maybe_value%5#0 from l-stack (no copy)   maybe_value%5#0                                              self.global_bytes_simplified == b"Hello"                                        global_state/contract.py:43
    byte 0x48656c6c6f                                   //                                                        maybe_value%5#0,0x48656c6c6f                                 b"Hello"                                                                        global_state/contract.py:43
    ==                                                  //                                                        {==}                                                         self.global_bytes_simplified == b"Hello"                                        global_state/contract.py:43
                                                        // virtual: store tmp%6#0 to l-stack (no copy)            tmp%6#0                                                      self.global_bytes_simplified == b"Hello"                                        global_state/contract.py:43
                                                        // virtual: load tmp%6#0 from l-stack (no copy)           tmp%6#0                                                      assert self.global_bytes_simplified == b"Hello"                                 global_state/contract.py:43
    assert                                              //                                                                                                                     assert self.global_bytes_simplified == b"Hello"                                 global_state/contract.py:43
    int 0                                               //                                                        0                                                            self.global_bytes_full                                                          global_state/contract.py:44
    byte "global_bytes_full"                            //                                                        0,"global_bytes_full"                                        self.global_bytes_full                                                          global_state/contract.py:44
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_full                                                          global_state/contract.py:44
    cover 1                                             // store maybe_exists%6#0 to l-stack (no copy)            maybe_exists%6#0,{app_global_get_ex}.0                       self.global_bytes_full                                                          global_state/contract.py:44
    pop                                                 //                                                        maybe_exists%6#0                                             self.global_bytes_full                                                          global_state/contract.py:44
                                                        // virtual: load maybe_exists%6#0 from l-stack (no copy)  maybe_exists%6#0                                             assert self.global_bytes_full                                                   global_state/contract.py:44
    assert                                              //                                                                                                                     assert self.global_bytes_full                                                   global_state/contract.py:44
    int 0                                               //                                                        0                                                            self.global_bytes_full.value                                                    global_state/contract.py:45
    byte "global_bytes_full"                            //                                                        0,"global_bytes_full"                                        self.global_bytes_full                                                          global_state/contract.py:45
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_full.value                                                    global_state/contract.py:45
                                                        // virtual: store maybe_exists%7#0 to l-stack (no copy)   maybe_exists%7#0,{app_global_get_ex}.0                       self.global_bytes_full.value                                                    global_state/contract.py:45
                                                        // virtual: store maybe_value%7#0 to l-stack (no copy)    maybe_value%7#0,maybe_exists%7#0                             self.global_bytes_full.value                                                    global_state/contract.py:45
                                                        // virtual: load maybe_exists%7#0 from l-stack (no copy)  maybe_value%7#0,maybe_exists%7#0                             self.global_bytes_full.value                                                    global_state/contract.py:45
    assert // check self.global_bytes_full exists       //                                                        maybe_value%7#0                                              self.global_bytes_full.value                                                    global_state/contract.py:45
                                                        // virtual: load maybe_value%7#0 from l-stack (no copy)   maybe_value%7#0                                              self.global_bytes_full.value == b"Hello"                                        global_state/contract.py:45
    byte 0x48656c6c6f                                   //                                                        maybe_value%7#0,0x48656c6c6f                                 b"Hello"                                                                        global_state/contract.py:45
    ==                                                  //                                                        {==}                                                         self.global_bytes_full.value == b"Hello"                                        global_state/contract.py:45
                                                        // virtual: store tmp%7#0 to l-stack (no copy)            tmp%7#0                                                      self.global_bytes_full.value == b"Hello"                                        global_state/contract.py:45
                                                        // virtual: load tmp%7#0 from l-stack (no copy)           tmp%7#0                                                      assert self.global_bytes_full.value == b"Hello"                                 global_state/contract.py:45
    assert                                              //                                                                                                                     assert self.global_bytes_full.value == b"Hello"                                 global_state/contract.py:45
    int 0                                               //                                                        0                                                            self.global_bytes_full.get                                                      global_state/contract.py:46
    byte "global_bytes_full"                            //                                                        0,"global_bytes_full"                                        self.global_bytes_full                                                          global_state/contract.py:46
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
    cover 1                                             // store maybe_exists%8#0 to l-stack (no copy)            maybe_exists%8#0,{app_global_get_ex}.0                       self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
                                                        // virtual: store maybe_value%8#0 to l-stack (no copy)    maybe_exists%8#0,maybe_value%8#0                             self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
    byte 0x64656661756c74                               //                                                        maybe_exists%8#0,maybe_value%8#0,0x64656661756c74            Bytes(b"default")                                                               global_state/contract.py:46
    uncover 1                                           // load maybe_value%8#0 from l-stack (no copy)            maybe_exists%8#0,0x64656661756c74,maybe_value%8#0            self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
    uncover 2                                           // load maybe_exists%8#0 from l-stack (no copy)           0x64656661756c74,maybe_value%8#0,maybe_exists%8#0            self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
    select                                              //                                                        {select}                                                     self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
                                                        // virtual: store tmp%8#0 to l-stack (no copy)            tmp%8#0                                                      self.global_bytes_full.get(Bytes(b"default"))                                   global_state/contract.py:46
                                                        // virtual: load tmp%8#0 from l-stack (no copy)           tmp%8#0                                                      self.global_bytes_full.get(Bytes(b"default")) == b"Hello"                       global_state/contract.py:46
    byte 0x48656c6c6f                                   //                                                        tmp%8#0,0x48656c6c6f                                         b"Hello"                                                                        global_state/contract.py:46
    ==                                                  //                                                        {==}                                                         self.global_bytes_full.get(Bytes(b"default")) == b"Hello"                       global_state/contract.py:46
                                                        // virtual: store tmp%9#0 to l-stack (no copy)            tmp%9#0                                                      self.global_bytes_full.get(Bytes(b"default")) == b"Hello"                       global_state/contract.py:46
                                                        // virtual: load tmp%9#0 from l-stack (no copy)           tmp%9#0                                                      assert self.global_bytes_full.get(Bytes(b"default")) == b"Hello"                global_state/contract.py:46
    assert                                              //                                                                                                                     assert self.global_bytes_full.get(Bytes(b"default")) == b"Hello"                global_state/contract.py:46
    int 0                                               //                                                        0                                                            not self.global_bytes_no_default                                                global_state/contract.py:47
    byte "global_bytes_no_default"                      //                                                        0,"global_bytes_no_default"                                  self.global_bytes_no_default                                                    global_state/contract.py:47
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  not self.global_bytes_no_default                                                global_state/contract.py:47
    cover 1                                             // store maybe_exists%9#0 to l-stack (no copy)            maybe_exists%9#0,{app_global_get_ex}.0                       not self.global_bytes_no_default                                                global_state/contract.py:47
    pop                                                 //                                                        maybe_exists%9#0                                             not self.global_bytes_no_default                                                global_state/contract.py:47
                                                        // virtual: load maybe_exists%9#0 from l-stack (no copy)  maybe_exists%9#0                                             not self.global_bytes_no_default                                                global_state/contract.py:47
    !                                                   //                                                        {!}                                                          not self.global_bytes_no_default                                                global_state/contract.py:47
                                                        // virtual: store tmp%10#0 to l-stack (no copy)           tmp%10#0                                                     not self.global_bytes_no_default                                                global_state/contract.py:47
                                                        // virtual: load tmp%10#0 from l-stack (no copy)          tmp%10#0                                                     assert not self.global_bytes_no_default                                         global_state/contract.py:47
    assert                                              //                                                                                                                     assert not self.global_bytes_no_default                                         global_state/contract.py:47
    byte "global_bytes_no_default"                      //                                                        "global_bytes_no_default"                                    self.global_bytes_no_default                                                    global_state/contract.py:48
    byte 0x576f726c64                                   //                                                        "global_bytes_no_default",0x576f726c64                       Bytes(b"World")                                                                 global_state/contract.py:48
    app_global_put                                      //                                                                                                                     self.global_bytes_no_default.value = Bytes(b"World")                            global_state/contract.py:48
    int 0                                               //                                                        0                                                            self.global_bytes_no_default.maybe                                              global_state/contract.py:49
    byte "global_bytes_no_default"                      //                                                        0,"global_bytes_no_default"                                  self.global_bytes_no_default                                                    global_state/contract.py:49
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_no_default.maybe()                                            global_state/contract.py:49
                                                        // virtual: store b_exists#0 to l-stack (no copy)         b_exists#0,{app_global_get_ex}.0                             self.global_bytes_no_default.maybe()                                            global_state/contract.py:49
                                                        // virtual: store b_value#0 to l-stack (no copy)          b_value#0,b_exists#0                                         self.global_bytes_no_default.maybe()                                            global_state/contract.py:49
                                                        // virtual: load b_exists#0 from l-stack (no copy)        b_value#0,b_exists#0                                         assert b_exists                                                                 global_state/contract.py:50
    assert                                              //                                                        b_value#0                                                    assert b_exists                                                                 global_state/contract.py:50
                                                        // virtual: load b_value#0 from l-stack (no copy)         b_value#0                                                    b_value == b"World"                                                             global_state/contract.py:51
    byte 0x576f726c64                                   //                                                        b_value#0,0x576f726c64                                       b"World"                                                                        global_state/contract.py:51
    ==                                                  //                                                        {==}                                                         b_value == b"World"                                                             global_state/contract.py:51
                                                        // virtual: store tmp%11#0 to l-stack (no copy)           tmp%11#0                                                     b_value == b"World"                                                             global_state/contract.py:51
                                                        // virtual: load tmp%11#0 from l-stack (no copy)          tmp%11#0                                                     assert b_value == b"World"                                                      global_state/contract.py:51
    assert                                              //                                                                                                                     assert b_value == b"World"                                                      global_state/contract.py:51
    byte "global_bytes_no_default"                      //                                                        "global_bytes_no_default"                                    String("global_bytes_no_default")                                               global_state/contract.py:52
    callsub read_global_bytes                           //                                                        {read_global_bytes}                                          read_global_bytes(String("global_bytes_no_default"))                            global_state/contract.py:52
                                                        // virtual: store tmp%12#0 to l-stack (no copy)           tmp%12#0                                                     read_global_bytes(String("global_bytes_no_default"))                            global_state/contract.py:52
                                                        // virtual: load tmp%12#0 from l-stack (no copy)          tmp%12#0                                                     read_global_bytes(String("global_bytes_no_default")) == b"World"                global_state/contract.py:52
    byte 0x576f726c64                                   //                                                        tmp%12#0,0x576f726c64                                        b"World"                                                                        global_state/contract.py:52
    ==                                                  //                                                        {==}                                                         read_global_bytes(String("global_bytes_no_default")) == b"World"                global_state/contract.py:52
                                                        // virtual: store tmp%13#0 to l-stack (no copy)           tmp%13#0                                                     read_global_bytes(String("global_bytes_no_default")) == b"World"                global_state/contract.py:52
                                                        // virtual: load tmp%13#0 from l-stack (no copy)          tmp%13#0                                                     assert read_global_bytes(String("global_bytes_no_default")) == b"World"         global_state/contract.py:52
    assert                                              //                                                                                                                     assert read_global_bytes(String("global_bytes_no_default")) == b"World"         global_state/contract.py:52
    byte "global_bytes_no_default"                      //                                                        "global_bytes_no_default"                                    self.global_bytes_no_default                                                    global_state/contract.py:53
    app_global_del                                      //                                                                                                                     del self.global_bytes_no_default.value                                          global_state/contract.py:53
    int 0                                               //                                                        0                                                            self.global_bytes_no_default.maybe                                              global_state/contract.py:54
    byte "global_bytes_no_default"                      //                                                        0,"global_bytes_no_default"                                  self.global_bytes_no_default                                                    global_state/contract.py:54
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_no_default.maybe()                                            global_state/contract.py:54
    cover 1                                             // store b_exists#0 to l-stack (no copy)                  b_exists#0,{app_global_get_ex}.0                             self.global_bytes_no_default.maybe()                                            global_state/contract.py:54
    pop                                                 //                                                        b_exists#0                                                   self.global_bytes_no_default.maybe()                                            global_state/contract.py:54
                                                        // virtual: load b_exists#0 from l-stack (no copy)        b_exists#0                                                   not b_exists                                                                    global_state/contract.py:55
    !                                                   //                                                        {!}                                                          not b_exists                                                                    global_state/contract.py:55
                                                        // virtual: store tmp%14#0 to l-stack (no copy)           tmp%14#0                                                     not b_exists                                                                    global_state/contract.py:55
                                                        // virtual: load tmp%14#0 from l-stack (no copy)          tmp%14#0                                                     assert not b_exists                                                             global_state/contract.py:55
    assert                                              //                                                                                                                     assert not b_exists                                                             global_state/contract.py:55
    int 0                                               //                                                        0                                                            self.global_bytes_no_default.get                                                global_state/contract.py:57
    byte "global_bytes_no_default"                      //                                                        0,"global_bytes_no_default"                                  self.global_bytes_no_default                                                    global_state/contract.py:57
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
    cover 1                                             // store maybe_exists%12#0 to l-stack (no copy)           maybe_exists%12#0,{app_global_get_ex}.0                      self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
                                                        // virtual: store maybe_value%12#0 to l-stack (no copy)   maybe_exists%12#0,maybe_value%12#0                           self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
    byte 0x64656661756c74                               //                                                        maybe_exists%12#0,maybe_value%12#0,0x64656661756c74          Bytes(b"default")                                                               global_state/contract.py:57
    uncover 1                                           // load maybe_value%12#0 from l-stack (no copy)           maybe_exists%12#0,0x64656661756c74,maybe_value%12#0          self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
    uncover 2                                           // load maybe_exists%12#0 from l-stack (no copy)          0x64656661756c74,maybe_value%12#0,maybe_exists%12#0          self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
    select                                              //                                                        {select}                                                     self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
                                                        // virtual: store tmp%15#0 to l-stack (no copy)           tmp%15#0                                                     self.global_bytes_no_default.get(Bytes(b"default"))                             global_state/contract.py:57
                                                        // virtual: load tmp%15#0 from l-stack (no copy)          tmp%15#0                                                     self.global_bytes_no_default.get(Bytes(b"default")) == b"default"               global_state/contract.py:57
    byte 0x64656661756c74                               //                                                        tmp%15#0,0x64656661756c74                                    b"default"                                                                      global_state/contract.py:57
    ==                                                  //                                                        {==}                                                         self.global_bytes_no_default.get(Bytes(b"default")) == b"default"               global_state/contract.py:57
                                                        // virtual: store tmp%16#0 to l-stack (no copy)           tmp%16#0                                                     self.global_bytes_no_default.get(Bytes(b"default")) == b"default"               global_state/contract.py:57
                                                        // virtual: load tmp%16#0 from l-stack (no copy)          tmp%16#0                                                     assert self.global_bytes_no_default.get(Bytes(b"default")) == b"default"        global_state/contract.py:57
    assert                                              //                                                                                                                     assert self.global_bytes_no_default.get(Bytes(b"default")) == b"default"        global_state/contract.py:57
    int 0                                               //                                                        0                                                            self.global_bool_full                                                           global_state/contract.py:60
    byte "global_bool_full"                             //                                                        0,"global_bool_full"                                         self.global_bool_full                                                           global_state/contract.py:60
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bool_full                                                           global_state/contract.py:60
    cover 1                                             // store maybe_exists%13#0 to l-stack (no copy)           maybe_exists%13#0,{app_global_get_ex}.0                      self.global_bool_full                                                           global_state/contract.py:60
    pop                                                 //                                                        maybe_exists%13#0                                            self.global_bool_full                                                           global_state/contract.py:60
                                                        // virtual: load maybe_exists%13#0 from l-stack (no copy) maybe_exists%13#0                                            assert self.global_bool_full                                                    global_state/contract.py:60
    assert                                              //                                                                                                                     assert self.global_bool_full                                                    global_state/contract.py:60
    int 0                                               //                                                        0                                                            not self.global_bool_no_default                                                 global_state/contract.py:61
    byte "global_bool_no_default"                       //                                                        0,"global_bool_no_default"                                   self.global_bool_no_default                                                     global_state/contract.py:61
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  not self.global_bool_no_default                                                 global_state/contract.py:61
    cover 1                                             // store maybe_exists%14#0 to l-stack (no copy)           maybe_exists%14#0,{app_global_get_ex}.0                      not self.global_bool_no_default                                                 global_state/contract.py:61
    pop                                                 //                                                        maybe_exists%14#0                                            not self.global_bool_no_default                                                 global_state/contract.py:61
                                                        // virtual: load maybe_exists%14#0 from l-stack (no copy) maybe_exists%14#0                                            not self.global_bool_no_default                                                 global_state/contract.py:61
    !                                                   //                                                        {!}                                                          not self.global_bool_no_default                                                 global_state/contract.py:61
                                                        // virtual: store tmp%17#0 to l-stack (no copy)           tmp%17#0                                                     not self.global_bool_no_default                                                 global_state/contract.py:61
                                                        // virtual: load tmp%17#0 from l-stack (no copy)          tmp%17#0                                                     assert not self.global_bool_no_default                                          global_state/contract.py:61
    assert                                              //                                                                                                                     assert not self.global_bool_no_default                                          global_state/contract.py:61
    byte "global_bool_no_default"                       //                                                        "global_bool_no_default"                                     self.global_bool_no_default                                                     global_state/contract.py:63
    int 1                                               //                                                        "global_bool_no_default",1                                   True                                                                            global_state/contract.py:63
    app_global_put                                      //                                                                                                                     self.global_bool_no_default.value = True                                        global_state/contract.py:63
    int 0                                               //                                                        0                                                            self.global_bool_full.value                                                     global_state/contract.py:66
    byte "global_bool_full"                             //                                                        0,"global_bool_full"                                         self.global_bool_full                                                           global_state/contract.py:66
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bool_full.value                                                     global_state/contract.py:66
                                                        // virtual: store maybe_exists%15#0 to l-stack (no copy)  maybe_exists%15#0,{app_global_get_ex}.0                      self.global_bool_full.value                                                     global_state/contract.py:66
                                                        // virtual: store maybe_value%15#0 to l-stack (no copy)   maybe_value%15#0,maybe_exists%15#0                           self.global_bool_full.value                                                     global_state/contract.py:66
                                                        // virtual: load maybe_exists%15#0 from l-stack (no copy) maybe_value%15#0,maybe_exists%15#0                           self.global_bool_full.value                                                     global_state/contract.py:66
    assert // check self.global_bool_full exists        //                                                        maybe_value%15#0                                             self.global_bool_full.value                                                     global_state/contract.py:66
                                                        // virtual: load maybe_value%15#0 from l-stack (no copy)  maybe_value%15#0                                             not self.global_bool_full.value                                                 global_state/contract.py:66
    !                                                   //                                                        {!}                                                          not self.global_bool_full.value                                                 global_state/contract.py:66
                                                        // virtual: store tmp%18#0 to l-stack (no copy)           tmp%18#0                                                     not self.global_bool_full.value                                                 global_state/contract.py:66
                                                        // virtual: load tmp%18#0 from l-stack (no copy)          tmp%18#0                                                     assert not self.global_bool_full.value                                          global_state/contract.py:66
    assert                                              //                                                                                                                     assert not self.global_bool_full.value                                          global_state/contract.py:66
    int 0                                               //                                                        0                                                            self.global_bool_simplified                                                     global_state/contract.py:67
    byte "global_bool_simplified"                       //                                                        0,"global_bool_simplified"                                   self.global_bool_simplified                                                     global_state/contract.py:67
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bool_simplified                                                     global_state/contract.py:67
                                                        // virtual: store maybe_exists%16#0 to l-stack (no copy)  maybe_exists%16#0,{app_global_get_ex}.0                      self.global_bool_simplified                                                     global_state/contract.py:67
                                                        // virtual: store maybe_value%16#0 to l-stack (no copy)   maybe_value%16#0,maybe_exists%16#0                           self.global_bool_simplified                                                     global_state/contract.py:67
                                                        // virtual: load maybe_exists%16#0 from l-stack (no copy) maybe_value%16#0,maybe_exists%16#0                           self.global_bool_simplified                                                     global_state/contract.py:67
    assert // check self.global_bool_simplified exists  //                                                        maybe_value%16#0                                             self.global_bool_simplified                                                     global_state/contract.py:67
                                                        // virtual: load maybe_value%16#0 from l-stack (no copy)  maybe_value%16#0                                             assert self.global_bool_simplified                                              global_state/contract.py:67
    assert                                              //                                                                                                                     assert self.global_bool_simplified                                              global_state/contract.py:67
    int 0                                               //                                                        0                                                            self.global_bool_no_default.value                                               global_state/contract.py:68
    byte "global_bool_no_default"                       //                                                        0,"global_bool_no_default"                                   self.global_bool_no_default                                                     global_state/contract.py:68
    app_global_get_ex                                   //                                                        {app_global_get_ex}.0,{app_global_get_ex}.1                  self.global_bool_no_default.value                                               global_state/contract.py:68
                                                        // virtual: store maybe_exists%17#0 to l-stack (no copy)  maybe_exists%17#0,{app_global_get_ex}.0                      self.global_bool_no_default.value                                               global_state/contract.py:68
                                                        // virtual: store maybe_value%17#0 to l-stack (no copy)   maybe_value%17#0,maybe_exists%17#0                           self.global_bool_no_default.value                                               global_state/contract.py:68
                                                        // virtual: load maybe_exists%17#0 from l-stack (no copy) maybe_value%17#0,maybe_exists%17#0                           self.global_bool_no_default.value                                               global_state/contract.py:68
    assert // check self.global_bool_no_default exists  //                                                        maybe_value%17#0                                             self.global_bool_no_default.value                                               global_state/contract.py:68
                                                        // virtual: load maybe_value%17#0 from l-stack (no copy)  maybe_value%17#0                                             assert self.global_bool_no_default.value                                        global_state/contract.py:68
    assert                                              //                                                                                                                     assert self.global_bool_no_default.value                                        global_state/contract.py:68
    byte "global_int_no_default"                        //                                                        "global_int_no_default"                                      self.global_int_no_default                                                      global_state/contract.py:71
    callsub get_global_state_plus_1                     //                                                        {get_global_state_plus_1}                                    get_global_state_plus_1(self.global_int_no_default)                             global_state/contract.py:71
                                                        // virtual: store tmp%19#0 to l-stack (no copy)           tmp%19#0                                                     get_global_state_plus_1(self.global_int_no_default)                             global_state/contract.py:71
                                                        // virtual: load tmp%19#0 from l-stack (no copy)          tmp%19#0                                                     get_global_state_plus_1(self.global_int_no_default) == 45                       global_state/contract.py:71
    int 45                                              //                                                        tmp%19#0,45                                                  45                                                                              global_state/contract.py:71
    ==                                                  //                                                        {==}                                                         get_global_state_plus_1(self.global_int_no_default) == 45                       global_state/contract.py:71
                                                        // virtual: store tmp%20#0 to l-stack (no copy)           tmp%20#0                                                     get_global_state_plus_1(self.global_int_no_default) == 45                       global_state/contract.py:71
                                                        // virtual: load tmp%20#0 from l-stack (no copy)          tmp%20#0                                                     assert get_global_state_plus_1(self.global_int_no_default) == 45                global_state/contract.py:71
    assert                                              //                                                                                                                     assert get_global_state_plus_1(self.global_int_no_default) == 45                global_state/contract.py:71
    int 1                                               //                                                        1                                                            True                                                                            global_state/contract.py:73
    return                                              //                                                                                                                     return True                                                                     global_state/contract.py:73


// examples.global_state.contract.read_global_uint64(key: bytes) -> uint64:
read_global_uint64:
    proto 1 1                                           //                                                        (𝕡) key#0 |                                                  @subroutine\ndef read_global_uint64(key: Bytes) -> UInt64:                      global_state/contract.py:84-85

read_global_uint64_block@0:
    int 0                                               //                                                        (𝕡) key#0 | 0                                                GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
    frame_dig -1                                        // load key#0 from parameters                             (𝕡) key#0 | 0,key#0                                          GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
    app_global_get_ex                                   //                                                        (𝕡) key#0 | {app_global_get_ex}.0,{app_global_get_ex}.1      GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
                                                        // virtual: store maybe_exists%0#0 to l-stack (no copy)   (𝕡) key#0 | maybe_exists%0#0,{app_global_get_ex}.0           GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
                                                        // virtual: store maybe_value%0#0 to l-stack (no copy)    (𝕡) key#0 | maybe_value%0#0,maybe_exists%0#0                 GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
                                                        // virtual: load maybe_exists%0#0 from l-stack (no copy)  (𝕡) key#0 | maybe_value%0#0,maybe_exists%0#0                 GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
    assert // check GlobalState exists                  //                                                        (𝕡) key#0 | maybe_value%0#0                                  GlobalState(UInt64, key=key).value                                              global_state/contract.py:86
                                                        // virtual: load maybe_value%0#0 from l-stack (no copy)   (𝕡) key#0 | maybe_value%0#0                                  return GlobalState(UInt64, key=key).value                                       global_state/contract.py:86
    retsub                                              //                                                        maybe_value%0#0                                              return GlobalState(UInt64, key=key).value                                       global_state/contract.py:86


// examples.global_state.contract.read_global_bytes(key: bytes) -> bytes:
read_global_bytes:
    proto 1 1                                           //                                                        (𝕡) key#0 |                                                  @subroutine\ndef read_global_bytes(key: String) -> Bytes:                       global_state/contract.py:89-90

read_global_bytes_block@0:
    int 0                                               //                                                        (𝕡) key#0 | 0                                                GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
    frame_dig -1                                        // load key#0 from parameters                             (𝕡) key#0 | 0,key#0                                          GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
    app_global_get_ex                                   //                                                        (𝕡) key#0 | {app_global_get_ex}.0,{app_global_get_ex}.1      GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
                                                        // virtual: store maybe_exists%0#0 to l-stack (no copy)   (𝕡) key#0 | maybe_exists%0#0,{app_global_get_ex}.0           GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
                                                        // virtual: store maybe_value%0#0 to l-stack (no copy)    (𝕡) key#0 | maybe_value%0#0,maybe_exists%0#0                 GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
                                                        // virtual: load maybe_exists%0#0 from l-stack (no copy)  (𝕡) key#0 | maybe_value%0#0,maybe_exists%0#0                 GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
    assert // check GlobalState exists                  //                                                        (𝕡) key#0 | maybe_value%0#0                                  GlobalState(Bytes, key=key).value                                               global_state/contract.py:91
                                                        // virtual: load maybe_value%0#0 from l-stack (no copy)   (𝕡) key#0 | maybe_value%0#0                                  return GlobalState(Bytes, key=key).value                                        global_state/contract.py:91
    retsub                                              //                                                        maybe_value%0#0                                              return GlobalState(Bytes, key=key).value                                        global_state/contract.py:91


// examples.global_state.contract.get_global_state_plus_1(state: bytes) -> uint64:
get_global_state_plus_1:
    proto 1 1                                           //                                                        (𝕡) state#0 |                                                @subroutine\ndef get_global_state_plus_1(state: GlobalState[UInt64]) -> UInt64: global_state/contract.py:79-80

get_global_state_plus_1_block@0:
    int 0                                               //                                                        (𝕡) state#0 | 0                                              state.value                                                                     global_state/contract.py:81
    frame_dig -1                                        // load state#0 from parameters                           (𝕡) state#0 | 0,state#0                                      state.value                                                                     global_state/contract.py:81
    app_global_get_ex                                   //                                                        (𝕡) state#0 | {app_global_get_ex}.0,{app_global_get_ex}.1    state.value                                                                     global_state/contract.py:81
                                                        // virtual: store maybe_exists%0#0 to l-stack (no copy)   (𝕡) state#0 | maybe_exists%0#0,{app_global_get_ex}.0         state.value                                                                     global_state/contract.py:81
                                                        // virtual: store maybe_value%0#0 to l-stack (no copy)    (𝕡) state#0 | maybe_value%0#0,maybe_exists%0#0               state.value                                                                     global_state/contract.py:81
                                                        // virtual: load maybe_exists%0#0 from l-stack (no copy)  (𝕡) state#0 | maybe_value%0#0,maybe_exists%0#0               state.value                                                                     global_state/contract.py:81
    assert // check GlobalState exists                  //                                                        (𝕡) state#0 | maybe_value%0#0                                state.value                                                                     global_state/contract.py:81
                                                        // virtual: load maybe_value%0#0 from l-stack (no copy)   (𝕡) state#0 | maybe_value%0#0                                state.value + 1                                                                 global_state/contract.py:81
    int 1                                               //                                                        (𝕡) state#0 | maybe_value%0#0,1                              1                                                                               global_state/contract.py:81
    +                                                   //                                                        (𝕡) state#0 | {+}                                            state.value + 1                                                                 global_state/contract.py:81
                                                        // virtual: store tmp%0#0 to l-stack (no copy)            (𝕡) state#0 | tmp%0#0                                        state.value + 1                                                                 global_state/contract.py:81
                                                        // virtual: load tmp%0#0 from l-stack (no copy)           (𝕡) state#0 | tmp%0#0                                        return state.value + 1                                                          global_state/contract.py:81
    retsub                                              //                                                        tmp%0#0                                                      return state.value + 1                                                          global_state/contract.py:81


// examples.global_state.contract.AppStateContract.__init__() -> void:
__init__:
    proto 0 0                                           //                                                                                                                     def __init__(self) -> None:                                                     global_state/contract.py:15

__init___block@0:
    byte "global_int_full"                              //                                                        "global_int_full"                                            self.global_int_full                                                            global_state/contract.py:16
    int 55                                              //                                                        "global_int_full",55                                         UInt64(55)                                                                      global_state/contract.py:16
    app_global_put                                      //                                                                                                                     self.global_int_full = GlobalState(UInt64(55))                                  global_state/contract.py:16
    byte "global_int_simplified"                        //                                                        "global_int_simplified"                                      self.global_int_simplified                                                      global_state/contract.py:17
    int 33                                              //                                                        "global_int_simplified",33                                   UInt64(33)                                                                      global_state/contract.py:17
    app_global_put                                      //                                                                                                                     self.global_int_simplified = UInt64(33)                                         global_state/contract.py:17
    byte "global_bytes_full"                            //                                                        "global_bytes_full"                                          self.global_bytes_full                                                          global_state/contract.py:20
    byte 0x48656c6c6f                                   //                                                        "global_bytes_full",0x48656c6c6f                             Bytes(b"Hello")                                                                 global_state/contract.py:20
    app_global_put                                      //                                                                                                                     self.global_bytes_full = GlobalState(Bytes(b"Hello"))                           global_state/contract.py:20
    byte "global_bytes_simplified"                      //                                                        "global_bytes_simplified"                                    self.global_bytes_simplified                                                    global_state/contract.py:21
    byte 0x48656c6c6f                                   //                                                        "global_bytes_simplified",0x48656c6c6f                       Bytes(b"Hello")                                                                 global_state/contract.py:21
    app_global_put                                      //                                                                                                                     self.global_bytes_simplified = Bytes(b"Hello")                                  global_state/contract.py:21
    byte "global_bool_full"                             //                                                        "global_bool_full"                                           self.global_bool_full                                                           global_state/contract.py:24
    int 0                                               //                                                        "global_bool_full",0                                         False                                                                           global_state/contract.py:24
    app_global_put                                      //                                                                                                                     self.global_bool_full = GlobalState(False)                                      global_state/contract.py:24
    byte "global_bool_simplified"                       //                                                        "global_bool_simplified"                                     self.global_bool_simplified                                                     global_state/contract.py:25
    int 1                                               //                                                        "global_bool_simplified",1                                   True                                                                            global_state/contract.py:25
    app_global_put                                      //                                                                                                                     self.global_bool_simplified = True                                              global_state/contract.py:25
    retsub                                              //

