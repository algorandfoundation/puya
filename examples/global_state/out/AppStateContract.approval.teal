#pragma version 10

examples.global_state.contract.AppStateContract.approval_program:
    txn ApplicationID
    bnz main_entrypoint@2
    callsub __init__

main_entrypoint@2:
    // global_state/contract.py:33
    // assert self.global_int_simplified == 33
    int 0
    // global_state/contract.py:17
    // self.global_int_simplified = UInt64(33)
    byte "global_int_simplified"
    // global_state/contract.py:33
    // assert self.global_int_simplified == 33
    app_global_get_ex
    assert // check self.global_int_simplified exists
    int 33
    ==
    assert
    // global_state/contract.py:34
    // assert self.global_int_full
    int 0
    // global_state/contract.py:16
    // self.global_int_full = GlobalState(UInt64(55))
    byte "global_int_full"
    // global_state/contract.py:34
    // assert self.global_int_full
    app_global_get_ex
    bury 1
    assert
    // global_state/contract.py:35
    // assert self.global_int_full.value == 55
    int 0
    // global_state/contract.py:16
    // self.global_int_full = GlobalState(UInt64(55))
    byte "global_int_full"
    // global_state/contract.py:35
    // assert self.global_int_full.value == 55
    app_global_get_ex
    assert // check self.global_int_full exists
    int 55
    ==
    assert
    // global_state/contract.py:36
    // assert not self.global_int_no_default
    int 0
    // global_state/contract.py:18
    // self.global_int_no_default = GlobalState(UInt64)
    byte "global_int_no_default"
    // global_state/contract.py:36
    // assert not self.global_int_no_default
    app_global_get_ex
    bury 1
    !
    assert
    // global_state/contract.py:18
    // self.global_int_no_default = GlobalState(UInt64)
    byte "global_int_no_default"
    // global_state/contract.py:37
    // self.global_int_no_default.value = UInt64(44)
    int 44
    app_global_put
    // global_state/contract.py:38
    // i_value, i_exists = self.global_int_no_default.maybe()
    int 0
    // global_state/contract.py:18
    // self.global_int_no_default = GlobalState(UInt64)
    byte "global_int_no_default"
    // global_state/contract.py:38
    // i_value, i_exists = self.global_int_no_default.maybe()
    app_global_get_ex
    // global_state/contract.py:39
    // assert i_exists
    assert
    // global_state/contract.py:40
    // assert i_value == 44
    int 44
    ==
    assert
    // global_state/contract.py:41
    // assert read_global_uint64(Bytes(b"global_int_no_default")) == 44
    byte 0x676c6f62616c5f696e745f6e6f5f64656661756c74
    callsub read_global_uint64
    int 44
    ==
    assert
    // global_state/contract.py:43
    // assert self.global_bytes_simplified == b"Hello"
    int 0
    // global_state/contract.py:21
    // self.global_bytes_simplified = Bytes(b"Hello")
    byte "global_bytes_simplified"
    // global_state/contract.py:43
    // assert self.global_bytes_simplified == b"Hello"
    app_global_get_ex
    assert // check self.global_bytes_simplified exists
    byte 0x48656c6c6f
    ==
    assert
    // global_state/contract.py:44
    // assert self.global_bytes_full
    int 0
    // global_state/contract.py:20
    // self.global_bytes_full = GlobalState(Bytes(b"Hello"))
    byte "global_bytes_full"
    // global_state/contract.py:44
    // assert self.global_bytes_full
    app_global_get_ex
    bury 1
    assert
    // global_state/contract.py:45
    // assert self.global_bytes_full.value == b"Hello"
    int 0
    // global_state/contract.py:20
    // self.global_bytes_full = GlobalState(Bytes(b"Hello"))
    byte "global_bytes_full"
    // global_state/contract.py:45
    // assert self.global_bytes_full.value == b"Hello"
    app_global_get_ex
    assert // check self.global_bytes_full exists
    byte 0x48656c6c6f
    ==
    assert
    // global_state/contract.py:46
    // assert self.global_bytes_full.get(Bytes(b"default")) == b"Hello"
    int 0
    // global_state/contract.py:20
    // self.global_bytes_full = GlobalState(Bytes(b"Hello"))
    byte "global_bytes_full"
    // global_state/contract.py:46
    // assert self.global_bytes_full.get(Bytes(b"default")) == b"Hello"
    app_global_get_ex
    byte 0x64656661756c74
    cover 2
    select
    byte 0x48656c6c6f
    ==
    assert
    // global_state/contract.py:47
    // assert not self.global_bytes_no_default
    int 0
    // global_state/contract.py:22
    // self.global_bytes_no_default = GlobalState(Bytes)
    byte "global_bytes_no_default"
    // global_state/contract.py:47
    // assert not self.global_bytes_no_default
    app_global_get_ex
    bury 1
    !
    assert
    // global_state/contract.py:22
    // self.global_bytes_no_default = GlobalState(Bytes)
    byte "global_bytes_no_default"
    // global_state/contract.py:48
    // self.global_bytes_no_default.value = Bytes(b"World")
    byte 0x576f726c64
    app_global_put
    // global_state/contract.py:49
    // b_value, b_exists = self.global_bytes_no_default.maybe()
    int 0
    // global_state/contract.py:22
    // self.global_bytes_no_default = GlobalState(Bytes)
    byte "global_bytes_no_default"
    // global_state/contract.py:49
    // b_value, b_exists = self.global_bytes_no_default.maybe()
    app_global_get_ex
    // global_state/contract.py:50
    // assert b_exists
    assert
    // global_state/contract.py:51
    // assert b_value == b"World"
    byte 0x576f726c64
    ==
    assert
    // global_state/contract.py:52
    // assert read_global_bytes(String("global_bytes_no_default")) == b"World"
    byte "global_bytes_no_default"
    callsub read_global_bytes
    byte 0x576f726c64
    ==
    assert
    // global_state/contract.py:22
    // self.global_bytes_no_default = GlobalState(Bytes)
    byte "global_bytes_no_default"
    // global_state/contract.py:53
    // del self.global_bytes_no_default.value
    app_global_del
    // global_state/contract.py:54
    // b_value, b_exists = self.global_bytes_no_default.maybe()
    int 0
    // global_state/contract.py:22
    // self.global_bytes_no_default = GlobalState(Bytes)
    byte "global_bytes_no_default"
    // global_state/contract.py:54
    // b_value, b_exists = self.global_bytes_no_default.maybe()
    app_global_get_ex
    bury 1
    // global_state/contract.py:55
    // assert not b_exists
    !
    assert
    // global_state/contract.py:57
    // assert self.global_bytes_no_default.get(Bytes(b"default")) == b"default"
    int 0
    // global_state/contract.py:22
    // self.global_bytes_no_default = GlobalState(Bytes)
    byte "global_bytes_no_default"
    // global_state/contract.py:57
    // assert self.global_bytes_no_default.get(Bytes(b"default")) == b"default"
    app_global_get_ex
    byte 0x64656661756c74
    cover 2
    select
    byte 0x64656661756c74
    ==
    assert
    // global_state/contract.py:59-60
    // # Assert 'is set'
    // assert self.global_bool_full
    int 0
    // global_state/contract.py:24
    // self.global_bool_full = GlobalState(False)
    byte "global_bool_full"
    // global_state/contract.py:59-60
    // # Assert 'is set'
    // assert self.global_bool_full
    app_global_get_ex
    bury 1
    assert
    // global_state/contract.py:61
    // assert not self.global_bool_no_default
    int 0
    // global_state/contract.py:26
    // self.global_bool_no_default = GlobalState(bool)
    byte "global_bool_no_default"
    // global_state/contract.py:61
    // assert not self.global_bool_no_default
    app_global_get_ex
    bury 1
    !
    assert
    // global_state/contract.py:26
    // self.global_bool_no_default = GlobalState(bool)
    byte "global_bool_no_default"
    // global_state/contract.py:63
    // self.global_bool_no_default.value = True
    int 1
    app_global_put
    // global_state/contract.py:65-66
    // # Assert 'value'
    // assert not self.global_bool_full.value
    int 0
    // global_state/contract.py:24
    // self.global_bool_full = GlobalState(False)
    byte "global_bool_full"
    // global_state/contract.py:65-66
    // # Assert 'value'
    // assert not self.global_bool_full.value
    app_global_get_ex
    assert // check self.global_bool_full exists
    !
    assert
    // global_state/contract.py:67
    // assert self.global_bool_simplified
    int 0
    // global_state/contract.py:25
    // self.global_bool_simplified = True
    byte "global_bool_simplified"
    // global_state/contract.py:67
    // assert self.global_bool_simplified
    app_global_get_ex
    assert // check self.global_bool_simplified exists
    assert
    // global_state/contract.py:68
    // assert self.global_bool_no_default.value
    int 0
    // global_state/contract.py:26
    // self.global_bool_no_default = GlobalState(bool)
    byte "global_bool_no_default"
    // global_state/contract.py:68
    // assert self.global_bool_no_default.value
    app_global_get_ex
    assert // check self.global_bool_no_default exists
    assert
    // global_state/contract.py:18
    // self.global_int_no_default = GlobalState(UInt64)
    byte "global_int_no_default"
    // global_state/contract.py:70-71
    // # test the proxy can be passed as an argument
    // assert get_global_state_plus_1(self.global_int_no_default) == 45
    callsub get_global_state_plus_1
    int 45
    ==
    assert
    // global_state/contract.py:73
    // return True
    int 1
    return


// examples.global_state.contract.read_global_uint64(key: bytes) -> uint64:
read_global_uint64:
    // global_state/contract.py:84-85
    // @subroutine
    // def read_global_uint64(key: Bytes) -> UInt64:
    proto 1 1
    // global_state/contract.py:86
    // return GlobalState(UInt64, key=key).value
    int 0
    frame_dig -1
    app_global_get_ex
    assert // check GlobalState exists
    retsub


// examples.global_state.contract.read_global_bytes(key: bytes) -> bytes:
read_global_bytes:
    // global_state/contract.py:89-90
    // @subroutine
    // def read_global_bytes(key: String) -> Bytes:
    proto 1 1
    // global_state/contract.py:91
    // return GlobalState(Bytes, key=key).value
    int 0
    frame_dig -1
    app_global_get_ex
    assert // check GlobalState exists
    retsub


// examples.global_state.contract.get_global_state_plus_1(state: bytes) -> uint64:
get_global_state_plus_1:
    // global_state/contract.py:79-80
    // @subroutine
    // def get_global_state_plus_1(state: GlobalState[UInt64]) -> UInt64:
    proto 1 1
    // global_state/contract.py:81
    // return state.value + 1
    int 0
    frame_dig -1
    app_global_get_ex
    assert // check GlobalState exists
    int 1
    +
    retsub


// examples.global_state.contract.AppStateContract.__init__() -> void:
__init__:
    // global_state/contract.py:15
    // def __init__(self) -> None:
    proto 0 0
    // global_state/contract.py:16
    // self.global_int_full = GlobalState(UInt64(55))
    byte "global_int_full"
    int 55
    app_global_put
    // global_state/contract.py:17
    // self.global_int_simplified = UInt64(33)
    byte "global_int_simplified"
    int 33
    app_global_put
    // global_state/contract.py:20
    // self.global_bytes_full = GlobalState(Bytes(b"Hello"))
    byte "global_bytes_full"
    byte 0x48656c6c6f
    app_global_put
    // global_state/contract.py:21
    // self.global_bytes_simplified = Bytes(b"Hello")
    byte "global_bytes_simplified"
    byte 0x48656c6c6f
    app_global_put
    // global_state/contract.py:24
    // self.global_bool_full = GlobalState(False)
    byte "global_bool_full"
    int 0
    app_global_put
    // global_state/contract.py:25
    // self.global_bool_simplified = True
    byte "global_bool_simplified"
    int 1
    app_global_put
    retsub
