main examples.global_state.contract.AppStateContract.approval_program:
    block@0: // L32
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        (app_global_put "global_int_full" 55u)
        (app_global_put "global_int_simplified" 33u)
        (app_global_put "global_bytes_full" 0x48656c6c6f)
        (app_global_put "global_bytes_simplified" 0x48656c6c6f)
        (app_global_put "global_bool_full" 0u)
        (app_global_put "global_bool_simplified" 1u)
        goto block@2
    block@2: // after_if_else_L1
        let (maybe_value%0#0: uint64, maybe_exists%0#0: bool) = (app_global_get_ex 0u "global_int_simplified")
        (assert maybe_exists%0#0) // check self.global_int_simplified exists
        let tmp%1#0: bool = (== maybe_value%0#0 33u)
        (assert tmp%1#0)
        let (_%0#0: uint64, maybe_exists%1#0: bool) = (app_global_get_ex 0u "global_int_full")
        (assert maybe_exists%1#0)
        let (maybe_value%1#0: uint64, maybe_exists%2#0: bool) = (_%0#0, maybe_exists%1#0)
        (assert maybe_exists%2#0) // check self.global_int_full exists
        let tmp%2#0: bool = (== maybe_value%1#0 55u)
        (assert tmp%2#0)
        let (_%1#0: uint64, maybe_exists%3#0: bool) = (app_global_get_ex 0u "global_int_no_default")
        let tmp%3#0: bool = (! maybe_exists%3#0)
        (assert tmp%3#0)
        (app_global_put "global_int_no_default" 44u)
        let (i_value#0: uint64, i_exists#0: bool) = (44u, 1u)
        (assert i_exists#0)
        let tmp%4#0: bool = (== i_value#0 44u)
        (assert tmp%4#0)
        let (maybe_value%0#1: uint64, maybe_exists%0#1: bool) = (44u, 1u)
        (assert maybe_exists%0#1) // check GlobalState exists
        let tmp%6#0: bool = (== maybe_value%0#1 44u)
        (assert tmp%6#0)
        let (maybe_value%3#0: bytes, maybe_exists%5#0: bool) = (app_global_get_ex 0u "global_bytes_simplified")
        (assert maybe_exists%5#0) // check self.global_bytes_simplified exists
        let tmp%7#0: bool = (== maybe_value%3#0 0x48656c6c6f)
        (assert tmp%7#0)
        let (_%2#0: bytes, maybe_exists%6#0: bool) = (app_global_get_ex 0u "global_bytes_full")
        (assert maybe_exists%6#0)
        let (maybe_value%4#0: bytes, maybe_exists%7#0: bool) = (_%2#0, maybe_exists%6#0)
        (assert maybe_exists%7#0) // check self.global_bytes_full exists
        let tmp%8#0: bool = (== maybe_value%4#0 0x48656c6c6f)
        (assert tmp%8#0)
        let (maybe_value%5#0: bytes, maybe_exists%8#0: bool) = (_%2#0, maybe_exists%6#0)
        let state_get%0#0: bytes = (select 0x64656661756c74 maybe_value%5#0 maybe_exists%8#0)
        let tmp%9#0: bool = (== state_get%0#0 0x48656c6c6f)
        (assert tmp%9#0)
        let (_%3#0: bytes, maybe_exists%9#0: bool) = (app_global_get_ex 0u "global_bytes_no_default")
        let tmp%10#0: bool = (! maybe_exists%9#0)
        (assert tmp%10#0)
        (app_global_put "global_bytes_no_default" 0x576f726c64)
        let (b_value#0: bytes, b_exists#0: bool) = (0x576f726c64, 1u)
        (assert b_exists#0)
        let tmp%11#0: bool = (== b_value#0 0x576f726c64)
        (assert tmp%11#0)
        let (maybe_value%0#2: bytes, maybe_exists%0#2: bool) = (0x576f726c64, 1u)
        (assert maybe_exists%0#2) // check GlobalState exists
        let tmp%13#0: bool = (== maybe_value%0#2 0x576f726c64)
        (assert tmp%13#0)
        (app_global_del "global_bytes_no_default")
        let (b_value#1: bytes, b_exists#1: bool) = (app_global_get_ex 0u "global_bytes_no_default")
        let tmp%14#0: bool = (! b_exists#1)
        (assert tmp%14#0)
        let (maybe_value%8#0: bytes, maybe_exists%12#0: bool) = (b_value#1, b_exists#1)
        let state_get%1#0: bytes = (select 0x64656661756c74 maybe_value%8#0 maybe_exists%12#0)
        let tmp%15#0: bool = (== state_get%1#0 0x64656661756c74)
        (assert tmp%15#0)
        let (_%4#0: bool, maybe_exists%13#0: bool) = (app_global_get_ex 0u "global_bool_full")
        (assert maybe_exists%13#0)
        let (_%5#0: bool, maybe_exists%14#0: bool) = (app_global_get_ex 0u "global_bool_no_default")
        let tmp%16#0: bool = (! maybe_exists%14#0)
        (assert tmp%16#0)
        (app_global_put "global_bool_no_default" 1u)
        let (maybe_value%9#0: uint64, maybe_exists%15#0: bool) = (app_global_get_ex 0u "global_bool_full")
        (assert maybe_exists%15#0) // check self.global_bool_full exists
        let tmp%17#0: bool = (! maybe_value%9#0)
        (assert tmp%17#0)
        let (maybe_value%10#0: uint64, maybe_exists%16#0: bool) = (app_global_get_ex 0u "global_bool_simplified")
        (assert maybe_exists%16#0) // check self.global_bool_simplified exists
        (assert maybe_value%10#0)
        let (maybe_value%11#0: uint64, maybe_exists%17#0: bool) = (1u, 1u)
        (assert maybe_exists%17#0) // check self.global_bool_no_default exists
        (assert maybe_value%11#0)
        let (maybe_value%0#3: uint64, maybe_exists%0#3: bool) = (app_global_get_ex 0u "global_int_no_default")
        (assert maybe_exists%0#3) // check GlobalState exists
        let tmp%0#1: uint64 = (+ maybe_value%0#3 1u)
        let tmp%19#0: bool = (== tmp%0#1 45u)
        (assert tmp%19#0)
        return 1u