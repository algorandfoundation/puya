#pragma version 10
#pragma typetrack false

// examples.global_state.contract.AppStateContract.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 44 55
    bytecblock "global_bytes_no_default" 0x48656c6c6f 0x676c6f62616c5f696e745f6e6f5f64656661756c74 "global_bytes_full" "global_int_full" "global_bool_full" 0x64656661756c74 0x576f726c64 "global_bool_no_default" "global_int_simplified" "global_bytes_simplified" "global_bool_simplified"

main_block@0:
    txn ApplicationID
    bnz main_after_if_else@2

main_call___init__@1:
    callsub __init__

main_after_if_else@2:
    callsub approval_program
    return


// examples.global_state.contract.get_global_state_plus_1(state: bytes) -> uint64:
get_global_state_plus_1:
    // global_state/contract.py:79-80
    // @subroutine
    // def get_global_state_plus_1(state: GlobalState[UInt64]) -> UInt64:
    proto 1 1

get_global_state_plus_1_block@0:
    // global_state/contract.py:81
    // return state.value + 1
    intc_0 // 0
    frame_dig -1
    app_global_get_ex
    assert // check GlobalState exists
    intc_1 // 1
    +
    retsub


// examples.global_state.contract.read_global_uint64(key: bytes) -> uint64:
read_global_uint64:
    // global_state/contract.py:84-85
    // @subroutine
    // def read_global_uint64(key: Bytes) -> UInt64:
    proto 1 1

read_global_uint64_block@0:
    // global_state/contract.py:86
    // return GlobalState(UInt64, key=key).value
    intc_0 // 0
    frame_dig -1
    app_global_get_ex
    assert // check GlobalState exists
    retsub


// examples.global_state.contract.read_global_bytes(key: bytes) -> bytes:
read_global_bytes:
    // global_state/contract.py:89-90
    // @subroutine
    // def read_global_bytes(key: String) -> Bytes:
    proto 1 1

read_global_bytes_block@0:
    // global_state/contract.py:91
    // return GlobalState(Bytes, key=key).value
    intc_0 // 0
    frame_dig -1
    app_global_get_ex
    assert // check GlobalState exists
    retsub


// examples.global_state.contract.AppStateContract.__init__() -> void:
__init__:

__init___block@0:
    // global_state/contract.py:16
    // self.global_int_full = GlobalState(UInt64(55))
    bytec 4 // "global_int_full"
    intc_3 // 55
    app_global_put
    // global_state/contract.py:17
    // self.global_int_simplified = UInt64(33)
    bytec 9 // "global_int_simplified"
    pushint 33 // 33
    app_global_put
    // global_state/contract.py:20
    // self.global_bytes_full = GlobalState(Bytes(b"Hello"))
    bytec_3 // "global_bytes_full"
    bytec_1 // 0x48656c6c6f
    app_global_put
    // global_state/contract.py:21
    // self.global_bytes_simplified = Bytes(b"Hello")
    bytec 10 // "global_bytes_simplified"
    bytec_1 // 0x48656c6c6f
    app_global_put
    // global_state/contract.py:24
    // self.global_bool_full = GlobalState(False)
    bytec 5 // "global_bool_full"
    intc_0 // 0
    app_global_put
    // global_state/contract.py:25
    // self.global_bool_simplified = True
    bytec 11 // "global_bool_simplified"
    intc_1 // 1
    app_global_put
    retsub


// examples.global_state.contract.AppStateContract.approval_program() -> uint64:
approval_program:

approval_program_block@0:
    // global_state/contract.py:33
    // assert self.global_int_simplified == 33
    intc_0 // 0
    bytec 9 // "global_int_simplified"
    app_global_get_ex
    assert // check self.global_int_simplified exists
    pushint 33 // 33
    ==
    assert
    // global_state/contract.py:34
    // assert self.global_int_full
    intc_0 // 0
    bytec 4 // "global_int_full"
    app_global_get_ex
    bury 1
    assert
    // global_state/contract.py:35
    // assert self.global_int_full.value == 55
    intc_0 // 0
    bytec 4 // "global_int_full"
    app_global_get_ex
    assert // check self.global_int_full exists
    intc_3 // 55
    ==
    assert
    // global_state/contract.py:36
    // assert not self.global_int_no_default
    intc_0 // 0
    bytec_2 // "global_int_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    // global_state/contract.py:37
    // self.global_int_no_default.value = UInt64(44)
    bytec_2 // "global_int_no_default"
    intc_2 // 44
    app_global_put
    // global_state/contract.py:38
    // i_value, i_exists = self.global_int_no_default.maybe()
    intc_0 // 0
    bytec_2 // "global_int_no_default"
    app_global_get_ex
    // global_state/contract.py:39
    // assert i_exists
    assert
    // global_state/contract.py:40
    // assert i_value == 44
    intc_2 // 44
    ==
    assert
    // global_state/contract.py:41
    // assert read_global_uint64(Bytes(b"global_int_no_default")) == 44
    bytec_2 // 0x676c6f62616c5f696e745f6e6f5f64656661756c74
    callsub read_global_uint64
    intc_2 // 44
    ==
    assert
    // global_state/contract.py:43
    // assert self.global_bytes_simplified == b"Hello"
    intc_0 // 0
    bytec 10 // "global_bytes_simplified"
    app_global_get_ex
    assert // check self.global_bytes_simplified exists
    bytec_1 // 0x48656c6c6f
    ==
    assert
    // global_state/contract.py:44
    // assert self.global_bytes_full
    intc_0 // 0
    bytec_3 // "global_bytes_full"
    app_global_get_ex
    bury 1
    assert
    // global_state/contract.py:45
    // assert self.global_bytes_full.value == b"Hello"
    intc_0 // 0
    bytec_3 // "global_bytes_full"
    app_global_get_ex
    assert // check self.global_bytes_full exists
    bytec_1 // 0x48656c6c6f
    ==
    assert
    // global_state/contract.py:46
    // assert self.global_bytes_full.get(Bytes(b"default")) == b"Hello"
    intc_0 // 0
    bytec_3 // "global_bytes_full"
    app_global_get_ex
    swap
    bytec 6 // 0x64656661756c74
    swap
    uncover 2
    select
    bytec_1 // 0x48656c6c6f
    ==
    assert
    // global_state/contract.py:47
    // assert not self.global_bytes_no_default
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    // global_state/contract.py:48
    // self.global_bytes_no_default.value = Bytes(b"World")
    bytec_0 // "global_bytes_no_default"
    bytec 7 // 0x576f726c64
    app_global_put
    // global_state/contract.py:49
    // b_value, b_exists = self.global_bytes_no_default.maybe()
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    // global_state/contract.py:50
    // assert b_exists
    assert
    // global_state/contract.py:51
    // assert b_value == b"World"
    bytec 7 // 0x576f726c64
    ==
    assert
    // global_state/contract.py:52
    // assert read_global_bytes(String("global_bytes_no_default")) == b"World"
    bytec_0 // "global_bytes_no_default"
    callsub read_global_bytes
    bytec 7 // 0x576f726c64
    ==
    assert
    // global_state/contract.py:53
    // del self.global_bytes_no_default.value
    bytec_0 // "global_bytes_no_default"
    app_global_del
    // global_state/contract.py:54
    // b_value, b_exists = self.global_bytes_no_default.maybe()
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    bury 1
    // global_state/contract.py:55
    // assert not b_exists
    !
    assert
    // global_state/contract.py:57
    // assert self.global_bytes_no_default.get(Bytes(b"default")) == b"default"
    intc_0 // 0
    bytec_0 // "global_bytes_no_default"
    app_global_get_ex
    swap
    bytec 6 // 0x64656661756c74
    swap
    uncover 2
    select
    bytec 6 // 0x64656661756c74
    ==
    assert
    // global_state/contract.py:59-60
    // # Assert 'is set'
    // assert self.global_bool_full
    intc_0 // 0
    bytec 5 // "global_bool_full"
    app_global_get_ex
    bury 1
    assert
    // global_state/contract.py:61
    // assert not self.global_bool_no_default
    intc_0 // 0
    bytec 8 // "global_bool_no_default"
    app_global_get_ex
    bury 1
    !
    assert
    // global_state/contract.py:63
    // self.global_bool_no_default.value = True
    bytec 8 // "global_bool_no_default"
    intc_1 // 1
    app_global_put
    // global_state/contract.py:65-66
    // # Assert 'value'
    // assert not self.global_bool_full.value
    intc_0 // 0
    bytec 5 // "global_bool_full"
    app_global_get_ex
    assert // check self.global_bool_full exists
    !
    assert
    // global_state/contract.py:67
    // assert self.global_bool_simplified
    intc_0 // 0
    bytec 11 // "global_bool_simplified"
    app_global_get_ex
    assert // check self.global_bool_simplified exists
    assert
    // global_state/contract.py:68
    // assert self.global_bool_no_default.value
    intc_0 // 0
    bytec 8 // "global_bool_no_default"
    app_global_get_ex
    assert // check self.global_bool_no_default exists
    assert
    // global_state/contract.py:70-71
    // # test the proxy can be passed as an argument
    // assert get_global_state_plus_1(self.global_int_no_default) == 45
    bytec_2 // "global_int_no_default"
    callsub get_global_state_plus_1
    pushint 45 // 45
    ==
    assert
    // global_state/contract.py:73
    // return True
    intc_1 // 1
    retsub
