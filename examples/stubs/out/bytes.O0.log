PC  Teal                                  Stack
1   <intcblock>
7   <bytecblock>
72  int 0                                 0
73  dup                                   0, 0
74  byte ""                               0, 0, 0x
75  dupn 8                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x
77  byte base64 QmFzZSA2NCBlbmNvZGVk      0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded"
78  dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", "Base 64 encoded"
79  byte "Base 64 encoded"                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", "Base 64 encoded", "Base 64 encoded"
80  ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", 1
81  assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded"
82  byte base32 IJQXGZJAGMZCAZLOMNXWIZLE  0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", "Base 32 encoded"
83  byte "Base 32 encoded"                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", "Base 32 encoded", "Base 32 encoded"
84  ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", 1
85  assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded"
86  byte 0x4261736520313620656e636f646564 0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", "Base 16 encoded"
88  byte "Base 16 encoded"                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", "Base 16 encoded", "Base 16 encoded"
90  ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", 1
91  assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded"
92  byte ""                               0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded", 0x
93  swap                                  0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "Base 64 encoded"
94  len                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 15
95  assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x
96  len                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0
97  !                                     0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 1
98  assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x
99  byte "a"                              0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "a"
100 byte "b"                              0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "a", "b"
102 concat                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "ab"
103 byte "ab"                             0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "ab", "ab"
105 ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 1
106 assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x
107 byte "c"                              0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "c"
110 byte "d"                              0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "c", "d"
113 concat                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "cd"
114 byte "cd"                             0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "cd", "cd"
118 ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 1
119 assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x
120 byte "abc"                            0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc"
122 dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc"
123 swap                                  0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc"
124 dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc", "abc"
125 extract 0 1                           0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc", "a"
128 byte "a"                              0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc", "a", "a"
129 ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc", 1
130 assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", "abc"
131 len                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3
132 dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3
133 swap                                  0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3
134 int 1                                 0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3, 1
135 >                                     0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1
136 bz main_ternary_false@2               0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3
139 int 1                                 0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1
140 b main_ternary_merge@3                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1
144 dig 2                                 0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1, "abc"
146 dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1, "abc", "abc"
147 len                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1, "abc", 3
148 swap                                  0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1, 3, "abc"
149 dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1, 3, "abc", "abc"
150 uncover 3                             0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3, "abc", "abc", 1
152 uncover 3                             0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, "abc", "abc", 1, 3
154 substring3                            0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, "abc", "bc"
155 byte "bc"                             0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, "abc", "bc", "bc"
157 ==                                    0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, "abc", 1
158 assert                                0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, "abc"
159 len                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3
160 dup                                   0, 0, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3, 3
161 bury 12                               0, 0, 3, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3
163 int 1                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 3, 1
164 >                                     0, 0, 3, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1
165 bz main_ternary_false@5               0, 0, 3, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3
168 int 1                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 0x, 0x, 0x, "abc", 3, 1
169 bury 5                                0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3
171 b main_ternary_merge@6                0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3
178 dig 1                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc"
180 len                                   0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
181 dup                                   0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 3
182 bury 12                               0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
184 int 1                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 1
185 >                                     0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
186 bz main_ternary_false@8               0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3
189 int 1                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
190 b main_ternary_merge@9                0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
195 dig 2                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc"
197 dup                                   0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc", "abc"
198 dig 7                                 0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc", "abc", 1
200 uncover 3                             0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "abc", 1, 1
202 substring3                            0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", 0x
203 byte ""                               0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", 0x, 0x
204 ==                                    0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", 1
205 assert                                0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc"
206 len                                   0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
207 dup                                   0, 0, 3, 0x, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 3
208 bury 11                               0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
210 int 1                                 0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 1
211 >                                     0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
212 bz main_ternary_false@11              0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3
215 int 1                                 0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
216 b main_ternary_merge@12               0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
221 dig 2                                 0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc"
223 dup                                   0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc", "abc"
224 int 0                                 0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc", "abc", 0
225 uncover 3                             0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "abc", 0, 1
227 substring3                            0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "a"
228 byte "a"                              0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "a", "a"
229 ==                                    0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", 1
230 assert                                0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc"
231 len                                   0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
232 dup                                   0, 0, 3, 3, 0x, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 3
233 bury 10                               0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
235 int 1                                 0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 1
236 >                                     0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
237 bz main_ternary_false@14              0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3
240 dig 8                                 0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
242 int 1                                 0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 1
243 -                                     0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 2
244 b main_ternary_merge@15               0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 2
248 dig 2                                 0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 2, "abc"
250 dup                                   0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 2, "abc", "abc"
251 int 0                                 0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 2, "abc", "abc", 0
252 uncover 3                             0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "abc", 0, 2
254 substring3                            0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "ab"
255 byte "ab"                             0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "ab", "ab"
257 ==                                    0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", 1
258 assert                                0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc"
259 len                                   0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
260 dup                                   0, 0, 3, 3, 3, 0x, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 3
261 bury 9                                0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
263 int 2                                 0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 2
264 >                                     0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
265 bz main_ternary_false@17              0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3
268 dig 7                                 0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
270 int 2                                 0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 2
271 -                                     0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
272 b main_ternary_merge@18               0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1
276 dig 2                                 0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc"
278 dup                                   0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc", "abc"
279 len                                   0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, "abc", 3
280 swap                                  0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, 3, "abc"
281 dup                                   0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 1, 3, "abc", "abc"
282 uncover 3                             0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, "abc", "abc", 1
284 uncover 3                             0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "abc", 1, 3
286 substring3                            0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "bc"
287 byte "bc"                             0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", "bc", "bc"
289 ==                                    0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc", 1
290 assert                                0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, "abc"
291 len                                   0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3
292 dup                                   0, 0, 3, 3, 3, 3, 0x, 0x, 1, 0x, 0x, "abc", 3, 3, 3
293 bury 8                                0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3, 3
295 int 2                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3, 3, 2
296 >                                     0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3, 1
297 bz main_ternary_false@20              0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3
300 dig 6                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3, 3
302 int 2                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3, 3, 2
303 -                                     0, 0, 3, 3, 3, 3, 3, 0x, 1, 0x, 0x, "abc", 3, 1
304 bury 4                                0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3
306 b main_ternary_merge@21               0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3
312 dig 1                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc"
314 len                                   0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3
315 dup                                   0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3, 3
316 bury 8                                0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3
318 int 1                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3, 1
319 >                                     0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 1
320 bz main_ternary_false@23              0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3
323 dig 6                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3
325 int 1                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3, 1
326 -                                     0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 2
327 b main_ternary_merge@24               0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 2
331 dig 2                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 2, "abc"
333 dup                                   0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 2, "abc", "abc"
334 dig 6                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 2, "abc", "abc", 1
336 uncover 3                             0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "abc", 1, 2
338 substring3                            0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "b"
339 byte "b"                              0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "b", "b"
341 ==                                    0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", 1
342 assert                                0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc"
343 byte "1234567"                        0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "1234567"
352 int 1                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "1234567", 1
353 int 6                                 0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "1234567", 1, 6
355 substring3                            0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "23456"
356 byte "23456"                          0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", "23456", "23456"
363 ==                                    0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc", 1
364 assert                                0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, "abc"
365 len                                   0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3
366 dup                                   0, 0, 3, 3, 3, 3, 3, 0x, 1, 1, 0x, "abc", 3, 3, 3
367 bury 7                                0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0x, "abc", 3, 3
369 int 10                                0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0x, "abc", 3, 3, 10
370 >                                     0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0x, "abc", 3, 0
371 bz main_ternary_false@26              0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0x, "abc", 3
383 int 0                                 0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0x, "abc", 3, 0
384 bury 3                                0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
386 dig 1                                 0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "abc"
388 len                                   0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3
389 dup                                   0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3, 3
390 bury 7                                0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3
392 int 10                                0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3, 10
393 >                                     0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0
394 bz main_ternary_false@29              0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
401 dig 5                                 0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3
403 dig 2                                 0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3, "abc"
405 dig 4                                 0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 3, "abc", 0
407 uncover 2                             0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "abc", 0, 3
409 substring3                            0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "abc"
410 byte "abc"                            0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "abc", "abc"
412 ==                                    0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
413 assert                                0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
414 byte "1"                              0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
417 dup                                   0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1"
418 bury 13                               0, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
420 byte ""                               0, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", 0x
421 bury 14                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
423 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
424 bnz main_ternary_false@32             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
432 dig 11                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
434 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1"
436 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1", "1"
437 cover 2                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1", "1"
439 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", 1
440 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
441 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
442 bnz main_ternary_false@35             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
450 dig 11                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
452 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1"
454 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1", "1"
455 cover 2                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1", "1"
457 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", 1
458 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
459 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
460 bnz main_ternary_false@38             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
468 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
470 dig 13                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x
472 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x, 0x
473 cover 2                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x, 0x
475 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 1
476 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
477 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0
478 bnz main_ternary_false@41             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
481 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
483 b main_ternary_merge@42               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
488 dig 13                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x
490 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x, 0x
491 cover 2                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x, 0x
493 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 1
494 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
495 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0
496 bnz main_ternary_false@44             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
499 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
501 b main_ternary_merge@45               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
506 dig 13                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x
508 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
509 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
510 dig 11                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
512 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
513 bz main_ternary_false@47              0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
516 dig 11                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
518 b main_ternary_merge@48               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
523 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1"
525 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1", "1"
526 cover 2                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1", "1"
528 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", 1
529 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
530 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
531 bz main_ternary_false@50              0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
534 dig 11                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
536 b main_ternary_merge@51               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
541 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1"
543 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
544 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
545 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
547 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0
548 bz main_ternary_false@53              0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
556 dig 11                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1"
558 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, "1", "1"
560 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
561 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
562 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
564 len                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0
565 bz main_ternary_false@56              0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
573 dig 12                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x
575 dig 13                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x, 0x
577 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
578 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
579 byte 0x00                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x00
582 byte 0x0f                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x00, 0x0F
585 byte 0xf0                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x00, 0x0F, 0xF0
588 cover 2                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xF0, 0x00, 0x0F
590 byte 0xff                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xF0, 0x00, 0x0F, 0xFF
593 cover 3                               0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F
595 dig 1                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00
597 dig 1                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00, 0x0F
599 b&                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00
600 dig 2                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00, 0x00
602 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 1
603 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F
604 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x0F
605 dig 3                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x0F, 0xF0
607 b|                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0xFF
608 dig 4                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xFF
610 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 1
611 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F
612 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x0F
613 dig 4                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x0F, 0xFF
615 b^                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0xF0
616 dig 3                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0xF0, 0xF0
618 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 1
619 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F
620 dig 1                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00
622 dig 4                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00, 0xFF
624 b&                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00
625 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x00, 0x0F, 0x00, 0x00
626 uncover 3                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x0F, 0x00, 0x00, 0x00
628 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x0F, 0x00, 1
629 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x0F, 0x00
630 dig 3                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x0F, 0x00, 0xFF
632 b|                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x0F, 0xFF
633 dup                                   0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xFF, 0xF0, 0x0F, 0xFF, 0xFF
634 uncover 4                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xF0, 0x0F, 0xFF, 0xFF, 0xFF
636 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xF0, 0x0F, 0xFF, 1
637 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0xF0, 0x0F, 0xFF
638 uncover 2                             0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x0F, 0xFF, 0xF0
640 b^                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 0x0F, 0x0F
641 ==                                    0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
642 assert                                0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3
643 int 1                                 0x, "1", 3, 3, 3, 3, 3, 3, 1, 1, 0, "abc", 3, 1
644 return                                1