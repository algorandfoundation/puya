>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug edverify
debug: Building AWST for __init__.py
debug: Building AWST for edverify
debug: Building AWST for embedded puyapy lib at <puya>/puyapy.py
debug: Building AWST for edverify/contract.py
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@None: // ternary_true_L12
debug: Sealing block@None: // ternary_false_L12
debug: Terminated block@1: // ternary_true_L12
debug: Terminated block@2: // ternary_false_L12
debug: Sealing block@3: // ternary_merge_L12
debug: Created Phi assignment: let ternary_result%5#2: uint64 = undefined while trying to resolve 'ternary_result%5' in block@3: // ternary_merge_L12
debug: Added ternary_result%5#0 to Phi node: let ternary_result%5#2: uint64 = Phi(ternary_result%5#0 <- block@1) in block@1: // ternary_true_L12
debug: Added ternary_result%5#1 to Phi node: let ternary_result%5#2: uint64 = Phi(ternary_result%5#0 <- block@1, ternary_result%5#1 <- block@2) in block@2: // ternary_false_L12
debug: Terminated block@3: // ternary_merge_L12
debug: Sealing block@0: // L15
debug: Terminated block@0: // L15
debug: Output IR to <git root>/examples/edverify/out/contract_VerifyContract.ssa.ir
info: Optimizing examples.edverify.contract.VerifyContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.edverify.contract.VerifyContract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.edverify.contract.VerifyContract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 1, ending loop
debug: Output IR to <git root>/examples/edverify/out/contract_VerifyContract.cssa.ir
debug: Removing Phis from examples.edverify.contract.VerifyContract.approval_program
debug: Removing Phis from examples.edverify.contract.VerifyContract.clear_state_program
debug: Output IR to <git root>/examples/edverify/out/contract_VerifyContract.post_ssa.ir
debug: Sequentializing parallel copies in examples.edverify.contract.VerifyContract.approval_program
debug: Sequentializing parallel copies in examples.edverify.contract.VerifyContract.clear_state_program
debug: Output IR to <git root>/examples/edverify/out/contract_VerifyContract.parallel_copies.ir
debug: Coalescing local variables in examples.edverify.contract.VerifyContract.approval_program using strategy RootOperandGrouping
debug: Coalescing ternary_result%5#0 with [ternary_result%5#5, ternary_result%5#1, ternary_result%5#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in examples.edverify.contract.VerifyContract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/edverify/out/contract_VerifyContract.final.ir
debug: Inserted main_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[6]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[8]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[20]: 'store result#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[22]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[15]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[19]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[13]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[19]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[11]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[19]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_ternary_merge@3.ops[2]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_ternary_merge@3.ops[4]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.edverify.contract.VerifyContract.approval_program
debug: Allocated 1 variable/s to x-stack: ternary_result%5#0
debug: shared x-stack for main_ternary_true@1 -> main_ternary_merge@3: ternary_result%5#0
debug: shared x-stack for main_ternary_false@2 -> main_ternary_merge@3: ternary_result%5#0
debug: Simplified uncover 2; uncover 2; uncover 2 to 
info: Writing edverify/out/contract.approval.teal
info: Writing edverify/out/contract.approval.debug.teal
info: Writing edverify/out/contract.clear.teal
info: Writing edverify/out/contract.clear.debug.teal
>> exit code = 0