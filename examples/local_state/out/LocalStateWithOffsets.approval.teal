#pragma version 10

examples.local_state.local_state_with_offsets.LocalStateContract.approval_program:
    int 0
    byte ""
    // local_state/local_state_with_offsets.py:19
    // if Txn.application_id == 0:
    txn ApplicationID
    bnz main_after_if_else@2
    // local_state/local_state_with_offsets.py:20
    // return True
    int 1
    return

main_after_if_else@2:
    // local_state/local_state_with_offsets.py:21
    // if Txn.on_completion not in (OnCompleteAction.NoOp, OnCompleteAction.OptIn):
    txn OnCompletion
    dup
    !
    swap
    int OptIn
    ==
    ||
    bnz main_after_if_else@4
    // local_state/local_state_with_offsets.py:22
    // return False
    int 0
    return

main_after_if_else@4:
    // local_state/local_state_with_offsets.py:23
    // if Txn.num_app_args < 1:
    txn NumAppArgs
    int 1
    <
    bz main_after_if_else@6
    // local_state/local_state_with_offsets.py:24
    // return False
    int 0
    return

main_after_if_else@6:
    // local_state/local_state_with_offsets.py:26
    // offset = op.btoi(Txn.application_args(0))
    txna ApplicationArgs 0
    btoi
    bury 1
    // local_state/local_state_with_offsets.py:27
    // method = Txn.application_args(1)
    txna ApplicationArgs 1
    bury 2
    // local_state/local_state_with_offsets.py:28
    // if Txn.num_app_args == 2:
    txn NumAppArgs
    int 2
    ==
    bz main_else_body@17
    // local_state/local_state_with_offsets.py:29
    // if method == b"get_guaranteed_data":
    dig 1
    byte "get_guaranteed_data"
    ==
    bz main_else_body@9
    // local_state/local_state_with_offsets.py:30
    // log(self.get_guaranteed_data(offset))
    dup
    callsub get_guaranteed_data
    log
    b main_after_if_else@16

main_else_body@9:
    // local_state/local_state_with_offsets.py:31
    // elif method == b"get_data_or_assert":
    dig 1
    byte "get_data_or_assert"
    ==
    bz main_else_body@11
    // local_state/local_state_with_offsets.py:32
    // log(self.get_data_or_assert(offset))
    dup
    callsub get_data_or_assert
    log
    b main_after_if_else@16

main_else_body@11:
    // local_state/local_state_with_offsets.py:33
    // elif method == b"delete_data":
    dig 1
    byte "delete_data"
    ==
    bz main_else_body@13
    // local_state/local_state_with_offsets.py:34
    // self.delete_data(offset)
    dup
    callsub delete_data
    // local_state/local_state_with_offsets.py:35
    // log(b"Deleted")
    byte "Deleted"
    log
    b main_after_if_else@16

main_else_body@13:
    // local_state/local_state_with_offsets.py:37
    // return False
    int 0
    return

main_after_if_else@16:
    // local_state/local_state_with_offsets.py:38
    // return True
    int 1
    return

main_else_body@17:
    // local_state/local_state_with_offsets.py:39
    // elif Txn.num_app_args == 3:
    txn NumAppArgs
    int 3
    ==
    bz main_else_body@25
    // local_state/local_state_with_offsets.py:40
    // if method == b"set_data":
    dig 1
    byte "set_data"
    ==
    bz main_else_body@20
    // local_state/local_state_with_offsets.py:41
    // self.set_data(offset, Txn.application_args(2))
    dup
    txna ApplicationArgs 2
    callsub set_data
    b main_after_if_else@24

main_else_body@20:
    // local_state/local_state_with_offsets.py:42
    // elif method == b"get_data_with_default":
    dig 1
    byte "get_data_with_default"
    ==
    bz main_else_body@22
    // local_state/local_state_with_offsets.py:43
    // log(self.get_data_with_default(offset, Txn.application_args(2)))
    dup
    txna ApplicationArgs 2
    callsub get_data_with_default
    log
    b main_after_if_else@24

main_else_body@22:
    // local_state/local_state_with_offsets.py:45
    // return False
    int 0
    return

main_after_if_else@24:
    // local_state/local_state_with_offsets.py:46
    // return True
    int 1
    return

main_else_body@25:
    // local_state/local_state_with_offsets.py:48
    // return False
    int 0
    return


// examples.local_state.local_state_with_offsets.LocalStateContract.get_guaranteed_data(for_account: uint64) -> bytes:
get_guaranteed_data:
    // local_state/local_state_with_offsets.py:53-54
    // @subroutine
    // def get_guaranteed_data(self, for_account: UInt64) -> Bytes:
    proto 1 1
    // local_state/local_state_with_offsets.py:55
    // return self.local[for_account]
    frame_dig -1
    int 0
    // local_state/local_state_with_offsets.py:16
    // self.local = LocalState(Bytes)
    byte "local"
    // local_state/local_state_with_offsets.py:55
    // return self.local[for_account]
    app_local_get_ex
    assert // check local exists for account
    retsub


// examples.local_state.local_state_with_offsets.LocalStateContract.get_data_or_assert(for_account: uint64) -> bytes:
get_data_or_assert:
    // local_state/local_state_with_offsets.py:61-62
    // @subroutine
    // def get_data_or_assert(self, for_account: UInt64) -> Bytes:
    proto 1 1
    // local_state/local_state_with_offsets.py:63
    // result, exists = self.local.maybe(for_account)
    frame_dig -1
    int 0
    // local_state/local_state_with_offsets.py:16
    // self.local = LocalState(Bytes)
    byte "local"
    // local_state/local_state_with_offsets.py:63
    // result, exists = self.local.maybe(for_account)
    app_local_get_ex
    // local_state/local_state_with_offsets.py:64
    // assert exists, "no data for account"
    assert // no data for account
    // local_state/local_state_with_offsets.py:65
    // return result
    retsub


// examples.local_state.local_state_with_offsets.LocalStateContract.delete_data(for_account: uint64) -> void:
delete_data:
    // local_state/local_state_with_offsets.py:71-72
    // @subroutine
    // def delete_data(self, for_account: UInt64) -> None:
    proto 1 0
    // local_state/local_state_with_offsets.py:73
    // del self.local[for_account]
    frame_dig -1
    // local_state/local_state_with_offsets.py:16
    // self.local = LocalState(Bytes)
    byte "local"
    // local_state/local_state_with_offsets.py:73
    // del self.local[for_account]
    app_local_del
    retsub


// examples.local_state.local_state_with_offsets.LocalStateContract.set_data(for_account: uint64, value: bytes) -> void:
set_data:
    // local_state/local_state_with_offsets.py:67-68
    // @subroutine
    // def set_data(self, for_account: UInt64, value: Bytes) -> None:
    proto 2 0
    // local_state/local_state_with_offsets.py:69
    // self.local[for_account] = value
    frame_dig -2
    // local_state/local_state_with_offsets.py:16
    // self.local = LocalState(Bytes)
    byte "local"
    // local_state/local_state_with_offsets.py:69
    // self.local[for_account] = value
    frame_dig -1
    app_local_put
    retsub


// examples.local_state.local_state_with_offsets.LocalStateContract.get_data_with_default(for_account: uint64, default: bytes) -> bytes:
get_data_with_default:
    // local_state/local_state_with_offsets.py:57-58
    // @subroutine
    // def get_data_with_default(self, for_account: UInt64, default: Bytes) -> Bytes:
    proto 2 1
    // local_state/local_state_with_offsets.py:59
    // return self.local.get(for_account, default)
    frame_dig -2
    int 0
    // local_state/local_state_with_offsets.py:16
    // self.local = LocalState(Bytes)
    byte "local"
    // local_state/local_state_with_offsets.py:59
    // return self.local.get(for_account, default)
    app_local_get_ex
    frame_dig -1
    cover 2
    select
    retsub
