// Op                                                                                    Stack (out)
// examples.local_state.local_state_contract.LocalStateContract.approval_program() -> uint64:
main:
    allocate 2 to stack                                                                  (𝕗) method#0,awst_tmp%0#0 |

main_block@0:                                                                            (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:21
    // if Txn.application_id == 0:
    txn ApplicationID                                                                    (𝕗) method#0,awst_tmp%0#0 | tmp%0#0
    bnz main_after_if_else@4                                                             (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@3                                           (𝕗) method#0,awst_tmp%0#0 |

main_if_body@3:                                                                          (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:22
    // return True
    int 1                                                                                (𝕗) method#0,awst_tmp%0#0 | 1
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_after_if_else@4:                                                                    (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:23
    // if Txn.on_completion not in (OnCompleteAction.NoOp, OnCompleteAction.OptIn):
    txn OnCompletion                                                                     (𝕗) method#0,awst_tmp%0#0 | awst_tmp%0#0
    l-store-copy awst_tmp%0#0 0                                                          (𝕗) method#0,awst_tmp%0#0 | awst_tmp%0#0,awst_tmp%0#0
    f-store awst_tmp%0#0                                                                 (𝕗) method#0,awst_tmp%0#0 | awst_tmp%0#0
    l-load awst_tmp%0#0 0                                                                (𝕗) method#0,awst_tmp%0#0 | awst_tmp%0#0
    bz main_after_if_else@7                                                              (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_or_contd@5                                          (𝕗) method#0,awst_tmp%0#0 |

main_or_contd@5:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:23
    // if Txn.on_completion not in (OnCompleteAction.NoOp, OnCompleteAction.OptIn):
    f-load awst_tmp%0#0                                                                  (𝕗) method#0,awst_tmp%0#0 | awst_tmp%0#0
    int OptIn                                                                            (𝕗) method#0,awst_tmp%0#0 | awst_tmp%0#0,OptIn
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%3#0
    bnz main_after_if_else@7                                                             (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@6                                           (𝕗) method#0,awst_tmp%0#0 |

main_if_body@6:                                                                          (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:24
    // return False
    int 0                                                                                (𝕗) method#0,awst_tmp%0#0 | 0
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_after_if_else@7:                                                                    (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:25
    // if Txn.num_app_args == 0:
    txn NumAppArgs                                                                       (𝕗) method#0,awst_tmp%0#0 | tmp%4#0
    bnz main_after_if_else@9                                                             (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@8                                           (𝕗) method#0,awst_tmp%0#0 |

main_if_body@8:                                                                          (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:26
    // return False
    int 0                                                                                (𝕗) method#0,awst_tmp%0#0 | 0
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_after_if_else@9:                                                                    (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:28
    // method = Txn.application_args(0)
    txna ApplicationArgs 0                                                               (𝕗) method#0,awst_tmp%0#0 | method#0
    f-store method#0                                                                     (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:29
    // if Txn.num_app_args == 1:
    txn NumAppArgs                                                                       (𝕗) method#0,awst_tmp%0#0 | tmp%6#0
    int 1                                                                                (𝕗) method#0,awst_tmp%0#0 | tmp%6#0,1
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%7#0
    bz main_else_body@20                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@10                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@10:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:30
    // if method == b"get_guaranteed_data":
    f-load method#0                                                                      (𝕗) method#0,awst_tmp%0#0 | method#0
    byte 0x6765745f67756172616e746565645f64617461                                        (𝕗) method#0,awst_tmp%0#0 | method#0,0x6765745f67756172616e746565645f64617461
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%8#0
    bz main_else_body@12                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@11                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@11:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:31
    // log(self.get_guaranteed_data(Txn.sender))
    txn Sender                                                                           (𝕗) method#0,awst_tmp%0#0 | tmp%9#0
    callsub get_guaranteed_data                                                          (𝕗) method#0,awst_tmp%0#0 | tmp%10#0
    log                                                                                  (𝕗) method#0,awst_tmp%0#0 |
    b main_after_if_else@19                                                              (𝕗) method#0,awst_tmp%0#0 |

main_else_body@12:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:32
    // elif method == b"get_data_or_assert":
    f-load method#0                                                                      (𝕗) method#0,awst_tmp%0#0 | method#0
    byte 0x6765745f646174615f6f725f617373657274                                          (𝕗) method#0,awst_tmp%0#0 | method#0,0x6765745f646174615f6f725f617373657274
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%11#0
    bz main_else_body@14                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@13                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@13:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:33
    // log(self.get_data_or_assert(Txn.sender))
    txn Sender                                                                           (𝕗) method#0,awst_tmp%0#0 | tmp%12#0
    callsub get_data_or_assert                                                           (𝕗) method#0,awst_tmp%0#0 | tmp%13#0
    log                                                                                  (𝕗) method#0,awst_tmp%0#0 |
    b main_after_if_else@19                                                              (𝕗) method#0,awst_tmp%0#0 |

main_else_body@14:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:34
    // elif method == b"delete_data":
    f-load method#0                                                                      (𝕗) method#0,awst_tmp%0#0 | method#0
    byte 0x64656c6574655f64617461                                                        (𝕗) method#0,awst_tmp%0#0 | method#0,0x64656c6574655f64617461
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%14#0
    bz main_else_body@16                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@15                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@15:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:35
    // self.delete_data(Txn.sender)
    txn Sender                                                                           (𝕗) method#0,awst_tmp%0#0 | tmp%15#0
    callsub delete_data                                                                  (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:36
    // log("Deleted")
    byte "Deleted"                                                                       (𝕗) method#0,awst_tmp%0#0 | "Deleted"
    log                                                                                  (𝕗) method#0,awst_tmp%0#0 |
    b main_after_if_else@19                                                              (𝕗) method#0,awst_tmp%0#0 |

main_else_body@16:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:38
    // return False
    int 0                                                                                (𝕗) method#0,awst_tmp%0#0 | 0
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_after_if_else@19:                                                                   (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:39
    // return True
    int 1                                                                                (𝕗) method#0,awst_tmp%0#0 | 1
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_else_body@20:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:40
    // elif Txn.num_app_args == 2:
    txn NumAppArgs                                                                       (𝕗) method#0,awst_tmp%0#0 | tmp%16#0
    int 2                                                                                (𝕗) method#0,awst_tmp%0#0 | tmp%16#0,2
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%17#0
    bz main_else_body@28                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@21                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@21:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:41
    // if method == b"set_data":
    f-load method#0                                                                      (𝕗) method#0,awst_tmp%0#0 | method#0
    byte 0x7365745f64617461                                                              (𝕗) method#0,awst_tmp%0#0 | method#0,0x7365745f64617461
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%18#0
    bz main_else_body@23                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@22                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@22:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:42
    // self.set_data(Txn.sender, Txn.application_args(1))
    txn Sender                                                                           (𝕗) method#0,awst_tmp%0#0 | tmp%19#0
    txna ApplicationArgs 1                                                               (𝕗) method#0,awst_tmp%0#0 | tmp%19#0,tmp%20#0
    l-load tmp%19#0 1                                                                    (𝕗) method#0,awst_tmp%0#0 | tmp%20#0,tmp%19#0
    l-load tmp%20#0 1                                                                    (𝕗) method#0,awst_tmp%0#0 | tmp%19#0,tmp%20#0
    callsub set_data                                                                     (𝕗) method#0,awst_tmp%0#0 |
    b main_after_if_else@27                                                              (𝕗) method#0,awst_tmp%0#0 |

main_else_body@23:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:43
    // elif method == b"get_data_with_default":
    f-load method#0                                                                      (𝕗) method#0,awst_tmp%0#0 | method#0
    byte 0x6765745f646174615f776974685f64656661756c74                                    (𝕗) method#0,awst_tmp%0#0 | method#0,0x6765745f646174615f776974685f64656661756c74
    ==                                                                                   (𝕗) method#0,awst_tmp%0#0 | tmp%21#0
    bz main_else_body@25                                                                 (𝕗) method#0,awst_tmp%0#0 |
    // Implicit fall through to main_if_body@24                                          (𝕗) method#0,awst_tmp%0#0 |

main_if_body@24:                                                                         (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:44
    // log(self.get_data_with_default(Txn.sender, Txn.application_args(1)))
    txn Sender                                                                           (𝕗) method#0,awst_tmp%0#0 | tmp%22#0
    txna ApplicationArgs 1                                                               (𝕗) method#0,awst_tmp%0#0 | tmp%22#0,tmp%23#0
    l-load tmp%22#0 1                                                                    (𝕗) method#0,awst_tmp%0#0 | tmp%23#0,tmp%22#0
    l-load tmp%23#0 1                                                                    (𝕗) method#0,awst_tmp%0#0 | tmp%22#0,tmp%23#0
    callsub get_data_with_default                                                        (𝕗) method#0,awst_tmp%0#0 | tmp%24#0
    log                                                                                  (𝕗) method#0,awst_tmp%0#0 |
    b main_after_if_else@27                                                              (𝕗) method#0,awst_tmp%0#0 |

main_else_body@25:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:46
    // return False
    int 0                                                                                (𝕗) method#0,awst_tmp%0#0 | 0
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_after_if_else@27:                                                                   (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:47
    // return True
    int 1                                                                                (𝕗) method#0,awst_tmp%0#0 | 1
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |

main_else_body@28:                                                                       (𝕗) method#0,awst_tmp%0#0 |
    // local_state/local_state_contract.py:49
    // return False
    int 0                                                                                (𝕗) method#0,awst_tmp%0#0 | 0
    return                                                                               (𝕗) method#0,awst_tmp%0#0 |


// examples.local_state.local_state_contract.LocalStateContract.get_guaranteed_data(for_account: bytes) -> bytes:
get_guaranteed_data:                                                                     (𝕡) for_account#0 |
    // local_state/local_state_contract.py:54-55
    // @subroutine
    // def get_guaranteed_data(self, for_account: Account) -> Bytes:
    proto 1 1                                                                            (𝕡) for_account#0 |

get_guaranteed_data_block@0:                                                             (𝕡) for_account#0 |
    // local_state/local_state_contract.py:56
    // result = self.local[for_account]
    p-load for_account#0                                                                 (𝕡) for_account#0 | for_account#0 (copy)
    int 0                                                                                (𝕡) for_account#0 | for_account#0 (copy),0
    byte "local"                                                                         (𝕡) for_account#0 | for_account#0 (copy),0,"local"
    app_local_get_ex                                                                     (𝕡) for_account#0 | result#0,maybe_exists%0#0
    assert // check self.local exists for account                                        (𝕡) for_account#0 | result#0
    // local_state/local_state_contract.py:58
    // assert result.length == get_local_state_length(self.local, for_account)
    l-load-copy result#0 0                                                               (𝕡) for_account#0 | result#0,result#0 (copy)
    len                                                                                  (𝕡) for_account#0 | result#0,tmp%0#0
    byte "local"                                                                         (𝕡) for_account#0 | result#0,tmp%0#0,"local"
    p-load for_account#0                                                                 (𝕡) for_account#0 | result#0,tmp%0#0,"local",for_account#0 (copy)
    callsub get_local_state_length                                                       (𝕡) for_account#0 | result#0,tmp%0#0,tmp%1#0
    l-load tmp%0#0 1                                                                     (𝕡) for_account#0 | result#0,tmp%1#0,tmp%0#0
    l-load tmp%1#0 1                                                                     (𝕡) for_account#0 | result#0,tmp%0#0,tmp%1#0
    ==                                                                                   (𝕡) for_account#0 | result#0,tmp%2#0
    assert                                                                               (𝕡) for_account#0 | result#0
    // local_state/local_state_contract.py:60
    // assert local_bytes_exists(for_account, Bytes(b"local"))
    p-load for_account#0                                                                 (𝕡) for_account#0 | result#0,for_account#0 (copy)
    byte 0x6c6f63616c                                                                    (𝕡) for_account#0 | result#0,for_account#0 (copy),0x6c6f63616c
    callsub local_bytes_exists                                                           (𝕡) for_account#0 | result#0,tmp%3#0
    assert                                                                               (𝕡) for_account#0 | result#0
    // local_state/local_state_contract.py:61
    // assert read_local_bytes(for_account, String("local")) == result
    p-load for_account#0                                                                 (𝕡) for_account#0 | result#0,for_account#0 (copy)
    byte "local"                                                                         (𝕡) for_account#0 | result#0,for_account#0 (copy),"local"
    callsub read_local_bytes                                                             (𝕡) for_account#0 | result#0,tmp%4#0
    l-load-copy result#0 1                                                               (𝕡) for_account#0 | result#0,tmp%4#0,result#0 (copy)
    ==                                                                                   (𝕡) for_account#0 | result#0,tmp%5#0
    assert                                                                               (𝕡) for_account#0 | result#0
    // local_state/local_state_contract.py:62
    // return result
    l-load result#0 0                                                                    (𝕡) for_account#0 | result#0
    retsub                                                                               result#0


// examples.local_state.local_state_contract.get_local_state_length(state: bytes, account: bytes) -> uint64:
get_local_state_length:                                                                  (𝕡) state#0,account#0 |
    // local_state/local_state_contract.py:83-84
    // @subroutine
    // def get_local_state_length(state: LocalState[Bytes], account: Account) -> UInt64:
    proto 2 1                                                                            (𝕡) state#0,account#0 |

get_local_state_length_block@0:                                                          (𝕡) state#0,account#0 |
    // local_state/local_state_contract.py:85
    // return state[account].length
    p-load account#0                                                                     (𝕡) state#0,account#0 | account#0 (copy)
    int 0                                                                                (𝕡) state#0,account#0 | account#0 (copy),0
    p-load state#0                                                                       (𝕡) state#0,account#0 | account#0 (copy),0,state#0 (copy)
    app_local_get_ex                                                                     (𝕡) state#0,account#0 | maybe_value%0#0,maybe_exists%0#0
    assert // check LocalState exists for account                                        (𝕡) state#0,account#0 | maybe_value%0#0
    l-load maybe_value%0#0 0                                                             (𝕡) state#0,account#0 | maybe_value%0#0
    len                                                                                  (𝕡) state#0,account#0 | tmp%0#0
    retsub                                                                               tmp%0#0


// examples.local_state.local_state_contract.local_bytes_exists(account: bytes, key: bytes) -> uint64:
local_bytes_exists:                                                                      (𝕡) account#0,key#0 |
    // local_state/local_state_contract.py:88-89
    // @subroutine
    // def local_bytes_exists(account: Account, key: Bytes) -> bool:
    proto 2 1                                                                            (𝕡) account#0,key#0 |

local_bytes_exists_block@0:                                                              (𝕡) account#0,key#0 |
    // local_state/local_state_contract.py:90
    // return account in LocalState(Bytes, key=key)
    p-load account#0                                                                     (𝕡) account#0,key#0 | account#0 (copy)
    int 0                                                                                (𝕡) account#0,key#0 | account#0 (copy),0
    p-load key#0                                                                         (𝕡) account#0,key#0 | account#0 (copy),0,key#0 (copy)
    app_local_get_ex                                                                     (𝕡) account#0,key#0 | maybe_value%0#0,maybe_exists%0#0
    l-store maybe_exists%0#0 1                                                           (𝕡) account#0,key#0 | maybe_exists%0#0,maybe_value%0#0
    pop 1                                                                                (𝕡) account#0,key#0 | maybe_exists%0#0
    l-load maybe_exists%0#0 0                                                            (𝕡) account#0,key#0 | maybe_exists%0#0
    retsub                                                                               maybe_exists%0#0


// examples.local_state.local_state_contract.read_local_bytes(account: bytes, key: bytes) -> bytes:
read_local_bytes:                                                                        (𝕡) account#0,key#0 |
    // local_state/local_state_contract.py:93-94
    // @subroutine
    // def read_local_bytes(account: Account, key: String) -> Bytes:
    proto 2 1                                                                            (𝕡) account#0,key#0 |

read_local_bytes_block@0:                                                                (𝕡) account#0,key#0 |
    // local_state/local_state_contract.py:95
    // return LocalState(Bytes, key=key)[account]
    p-load account#0                                                                     (𝕡) account#0,key#0 | account#0 (copy)
    int 0                                                                                (𝕡) account#0,key#0 | account#0 (copy),0
    p-load key#0                                                                         (𝕡) account#0,key#0 | account#0 (copy),0,key#0 (copy)
    app_local_get_ex                                                                     (𝕡) account#0,key#0 | maybe_value%0#0,maybe_exists%0#0
    assert // check LocalState exists for account                                        (𝕡) account#0,key#0 | maybe_value%0#0
    l-load maybe_value%0#0 0                                                             (𝕡) account#0,key#0 | maybe_value%0#0
    retsub                                                                               maybe_value%0#0


// examples.local_state.local_state_contract.LocalStateContract.get_data_or_assert(for_account: bytes) -> bytes:
get_data_or_assert:                                                                      (𝕡) for_account#0 |
    // local_state/local_state_contract.py:68-69
    // @subroutine
    // def get_data_or_assert(self, for_account: Account) -> Bytes:
    proto 1 1                                                                            (𝕡) for_account#0 |

get_data_or_assert_block@0:                                                              (𝕡) for_account#0 |
    // local_state/local_state_contract.py:70
    // result, exists = self.local.maybe(for_account)
    p-load for_account#0                                                                 (𝕡) for_account#0 | for_account#0 (copy)
    int 0                                                                                (𝕡) for_account#0 | for_account#0 (copy),0
    byte "local"                                                                         (𝕡) for_account#0 | for_account#0 (copy),0,"local"
    app_local_get_ex                                                                     (𝕡) for_account#0 | result#0,exists#0
    // local_state/local_state_contract.py:71
    // assert exists, "no data for account"
    assert // no data for account                                                        (𝕡) for_account#0 | result#0
    // local_state/local_state_contract.py:72
    // return result
    l-load result#0 0                                                                    (𝕡) for_account#0 | result#0
    retsub                                                                               result#0


// examples.local_state.local_state_contract.LocalStateContract.delete_data(for_account: bytes) -> void:
delete_data:                                                                             (𝕡) for_account#0 |
    // local_state/local_state_contract.py:78-79
    // @subroutine
    // def delete_data(self, for_account: Account) -> None:
    proto 1 0                                                                            (𝕡) for_account#0 |

delete_data_block@0:                                                                     (𝕡) for_account#0 |
    // local_state/local_state_contract.py:80
    // del self.local[for_account]
    p-load for_account#0                                                                 (𝕡) for_account#0 | for_account#0 (copy)
    byte "local"                                                                         (𝕡) for_account#0 | for_account#0 (copy),"local"
    app_local_del                                                                        (𝕡) for_account#0 |
    retsub


// examples.local_state.local_state_contract.LocalStateContract.set_data(for_account: bytes, value: bytes) -> void:
set_data:                                                                                (𝕡) for_account#0,value#0 |
    // local_state/local_state_contract.py:74-75
    // @subroutine
    // def set_data(self, for_account: Account, value: Bytes) -> None:
    proto 2 0                                                                            (𝕡) for_account#0,value#0 |

set_data_block@0:                                                                        (𝕡) for_account#0,value#0 |
    // local_state/local_state_contract.py:76
    // self.local[for_account] = value
    p-load for_account#0                                                                 (𝕡) for_account#0,value#0 | for_account#0 (copy)
    byte "local"                                                                         (𝕡) for_account#0,value#0 | for_account#0 (copy),"local"
    p-load value#0                                                                       (𝕡) for_account#0,value#0 | for_account#0 (copy),"local",value#0 (copy)
    app_local_put                                                                        (𝕡) for_account#0,value#0 |
    retsub


// examples.local_state.local_state_contract.LocalStateContract.get_data_with_default(for_account: bytes, default: bytes) -> bytes:
get_data_with_default:                                                                   (𝕡) for_account#0,default#0 |
    // local_state/local_state_contract.py:64-65
    // @subroutine
    // def get_data_with_default(self, for_account: Account, default: Bytes) -> Bytes:
    proto 2 1                                                                            (𝕡) for_account#0,default#0 |

get_data_with_default_block@0:                                                           (𝕡) for_account#0,default#0 |
    // local_state/local_state_contract.py:66
    // return self.local.get(for_account, default)
    p-load for_account#0                                                                 (𝕡) for_account#0,default#0 | for_account#0 (copy)
    int 0                                                                                (𝕡) for_account#0,default#0 | for_account#0 (copy),0
    byte "local"                                                                         (𝕡) for_account#0,default#0 | for_account#0 (copy),0,"local"
    app_local_get_ex                                                                     (𝕡) for_account#0,default#0 | maybe_value%0#0,maybe_exists%0#0
    p-load default#0                                                                     (𝕡) for_account#0,default#0 | maybe_value%0#0,maybe_exists%0#0,default#0 (copy)
    l-load maybe_value%0#0 2                                                             (𝕡) for_account#0,default#0 | maybe_exists%0#0,default#0 (copy),maybe_value%0#0
    l-load maybe_exists%0#0 2                                                            (𝕡) for_account#0,default#0 | default#0 (copy),maybe_value%0#0,maybe_exists%0#0
    select                                                                               (𝕡) for_account#0,default#0 | tmp%0#0
    retsub                                                                               tmp%0#0


