main examples.local_state.local_state_contract.LocalStateContract.approval_program:
    block@0: // L20
        let tmp%1#0: uint64 = (txn ApplicationID)
        goto tmp%1#0 ? block@4 : block@3
    block@3: // if_body_L22
        return 1u
    block@4: // after_if_else_L21
        let awst_tmp%0#0: uint64 = (txn OnCompletion)
        goto awst_tmp%0#0 ? block@5 : block@7
    block@5: // or_contd_L23
        let tmp%4#0: bool = (== awst_tmp%0#0 OptIn)
        goto tmp%4#0 ? block@7 : block@6
    block@6: // if_body_L24
        return 0u
    block@7: // after_if_else_L23
        let tmp%5#0: uint64 = (txn NumAppArgs)
        goto tmp%5#0 ? block@9 : block@8
    block@8: // if_body_L26
        return 0u
    block@9: // after_if_else_L25
        let method#0: bytes = (txna ApplicationArgs 0)
        let tmp%8#0: uint64 = (txn NumAppArgs)
        let tmp%9#0: bool = (== tmp%8#0 1u)
        goto tmp%9#0 ? block@10 : block@20
    block@10: // if_body_L30
        let tmp%10#0: bool = (== method#0 0x6765745f67756172616e746565645f64617461)
        goto tmp%10#0 ? block@11 : block@12
    block@11: // if_body_L31
        let for_account#4: account = (txn Sender)
        let (result#1: bytes, maybe_exists%0#2: bool) = (app_local_get_ex for_account#4 0u "local")
        (assert maybe_exists%0#2) // check self.local exists for account
        let tmp%0#1: uint64 = (len result#1)
        let (maybe_value%0#1: bytes, maybe_exists%0#3: bool) = (result#1, maybe_exists%0#2)
        (assert maybe_exists%0#3) // check LocalState exists for account
        let tmp%0#2: uint64 = (len maybe_value%0#1)
        let tmp%2#1: bool = (== tmp%0#1 tmp%0#2)
        (assert tmp%2#1)
        let (_%0#0: bytes, maybe_exists%0#4: bool) = (result#1, maybe_exists%0#2)
        (assert maybe_exists%0#4)
        let (maybe_value%0#2: bytes, maybe_exists%0#5: bool) = (result#1, maybe_exists%0#2)
        (assert maybe_exists%0#5) // check LocalState exists for account
        let tmp%5#1: bool = (== maybe_value%0#2 result#1)
        (assert tmp%5#1)
        (log result#1)
        goto block@19
    block@12: // else_body_L32
        let tmp%13#0: bool = (== method#0 0x6765745f646174615f6f725f617373657274)
        goto tmp%13#0 ? block@13 : block@14
    block@13: // if_body_L33
        let for_account#3: account = (txn Sender)
        let (result#0: bytes, exists#0: bool) = (app_local_get_ex for_account#3 0u "local")
        (assert exists#0) // no data for account
        (log result#0)
        goto block@19
    block@14: // else_body_L34
        let tmp%16#0: bool = (== method#0 0x64656c6574655f64617461)
        goto tmp%16#0 ? block@15 : block@16
    block@15: // if_body_L35
        let for_account#2: account = (txn Sender)
        (app_local_del for_account#2 "local")
        (log "Deleted")
        goto block@19
    block@16: // else_body_L38
        return 0u
    block@19: // after_if_else_L30
        return 1u
    block@20: // else_body_L40
        let tmp%18#0: uint64 = (txn NumAppArgs)
        let tmp%19#0: bool = (== tmp%18#0 2u)
        goto tmp%19#0 ? block@21 : block@28
    block@21: // if_body_L41
        let tmp%20#0: bool = (== method#0 0x7365745f64617461)
        goto tmp%20#0 ? block@22 : block@23
    block@22: // if_body_L42
        let for_account#1: account = (txn Sender)
        let value#0: bytes = (txna ApplicationArgs 1)
        (app_local_put for_account#1 "local" value#0)
        goto block@27
    block@23: // else_body_L43
        let tmp%23#0: bool = (== method#0 0x6765745f646174615f776974685f64656661756c74)
        goto tmp%23#0 ? block@24 : block@25
    block@24: // if_body_L44
        let for_account#0: account = (txn Sender)
        let default#0: bytes = (txna ApplicationArgs 1)
        let (maybe_value%0#0: bytes, maybe_exists%0#0: bool) = (app_local_get_ex for_account#0 0u "local")
        let state_get%0#0: bytes = (select default#0 maybe_value%0#0 maybe_exists%0#0)
        (log state_get%0#0)
        goto block@27
    block@25: // else_body_L46
        return 0u
    block@27: // after_if_else_L41
        return 1u
    block@28: // else_body_L49
        return 0u