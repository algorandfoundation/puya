debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['box_storage'], resource_encoding='value', output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
box_storage/contract.py:101:9 warning: expression result is ignored
box_storage/contract.py:140:9 warning: expression result is ignored
box_storage/contract.py:261:9 warning: expression result is ignored
box_storage/contract.py:302:9 warning: expression result is ignored
box_storage/contract.py:430:9 warning: expression result is ignored
box_storage/contract.py:432:9 warning: expression result is ignored
info: writing box_storage/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.get_box_value_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_ref_length
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Terminated block@36
debug: Sealing block@37
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Terminated block@40
debug: Sealing block@41
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes
debug: Sealing block@0
box_storage/contract.py:102:9 debug: encountered already materialized expression ('box_large'), reusing result: "box_large"
box_storage/contract.py:108:9 debug: encountered already materialized expression ('box_a'), reusing result: "box_a"
box_storage/contract.py:118:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:118:46 debug: encountered already materialized expression (reinterpret_cast<bytes>(c)), reusing result: c#0
box_storage/contract.py:119:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:119:40 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:119:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:120:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:120:40 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:120:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:124:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:124:40 debug: encountered already materialized expression (arc4_decode(b, bytes)), reusing result: tmp%47#0
box_storage/contract.py:125:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:125:34 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:125:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:126:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:126:34 debug: encountered already materialized expression (5u), reusing result: 5u
box_storage/contract.py:126:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:127:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:127:35 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:127:16 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints
debug: Sealing block@0
box_storage/contract.py:144:9 debug: encountered already materialized expression ('many_ints'), reusing result: "many_ints"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Sealing block@0
box_storage/contract.py:170:9 debug: encountered already materialized expression (large), reusing result: large#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:218:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:220:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:223:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Sealing block@0
box_storage/contract.py:241:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:242:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_nested_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_write
debug: Sealing block@0
box_storage/contract.py:270:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:271:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:272:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:273:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:274:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:275:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_read
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function examples.box_storage.contract.BoxContract.create_bools
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_bool
debug: Sealing block@0
box_storage/contract.py:306:9 debug: encountered already materialized expression ('too_many_bools'), reusing result: "too_many_bools"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_bools
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@4
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@2) in block@2
debug: Added total#2 to Phi node: let total#3: uint64 = φ(total#1 <- block@2, total#2 <- block@3) in block@3
debug: Created Phi assignment: let stop_at_total#1: uint64 = undefined while trying to resolve 'stop_at_total' in block@4
debug: Looking for 'stop_at_total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let stop_at_total#2: uint64 = undefined while trying to resolve 'stop_at_total' in block@1
debug: Added stop_at_total#2 to Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2) in block@2
debug: Added stop_at_total#2 to Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) (stop_at_total#1) with stop_at_total#2
debug: Deleting Phi assignment: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3)
debug: Replaced trivial Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) (stop_at_total#1) with stop_at_total#2 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@7) in block@7
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#3 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#3 <- block@7) in block@7
debug: Added stop_at_total#0 to Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0) in block@0
debug: Added stop_at_total#2 to Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) (stop_at_total#2) with stop_at_total#0
debug: Deleting Phi assignment: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7)
debug: Replaced trivial Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) (stop_at_total#2) with stop_at_total#0 in current definition for 6 blocks
debug: Sealing block@8
debug: Created Phi assignment: let total#4: uint64 = undefined while trying to resolve 'total' in block@8
debug: Added total#1 to Phi node: let total#4: uint64 = φ(total#1 <- block@1) in block@1
debug: Added total#3 to Phi node: let total#4: uint64 = φ(total#1 <- block@1, total#3 <- block@5) in block@5
debug: Terminated block@8
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:335:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:338:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Sealing block@0
box_storage/contract.py:347:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Sealing block@0
box_storage/contract.py:361:9 debug: encountered already materialized expression ('dynamic_box'), reusing result: "dynamic_box"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Sealing block@0
box_storage/contract.py:365:9 debug: encountered already materialized expression ('dynamic_arr_struct'), reusing result: "dynamic_arr_struct"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box
debug: Sealing block@0
box_storage/contract.py:371:16 debug: encountered already materialized expression (box_0), reusing result: box_0#0
box_storage/contract.py:371:28 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:371:30 debug: encountered already materialized expression (7u), reusing result: 7u
box_storage/contract.py:371:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(box_0)[0]), 0u, 0u < SINGLE_EVAL(id=0))), reusing result: tmp%3#0
box_storage/contract.py:374:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:374:39 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:374:41 debug: encountered already materialized expression (10u), reusing result: 10u
box_storage/contract.py:374:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(hex<"424F585F43">)[0]), 2u, 2u < SINGLE_EVAL(id=0))), reusing result: tmp%13#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.000.ssa.ir
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.000.ssa.ir
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.__init__ for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.check_keys for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_many_ints as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.indirect_extract_and_replace for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.read_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.boxes_exist for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_nested_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_write for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_read for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_bools as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_bool for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_bools for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_box for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_box as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.slice_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.arc4_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.test_box_ref for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_test for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_set for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_get for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_del for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_exists for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: inlining call to examples.box_storage.contract.BoxContract.__init__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (> 4104u 4096u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, required_budget_with_buffer#0
debug: selected required_budget_with_buffer#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@2 from switch fee_source#0 {0u => block@3, 1u => block@4, * => block@5} to goto_nth [block@3, block@4][fee_source#0] else goto block@5
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers [Register(source_location=INTERNAL:270:60-69, ir_type=uint64, name='tmp%2', version=1)]
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers [Register(source_location=INTERNAL:270:59-74, ir_type=uint64, name='tmp%3', version=1)]
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers [Register(source_location=INTERNAL:270:60-69, ir_type=uint64, name='tmp%2', version=0)]
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers [Register(source_location=INTERNAL:270:59-74, ir_type=uint64, name='tmp%3', version=0)]
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:308:59-78, ir_type=uint64, name='tmp%1', version=0)]
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers [Register(source_location=INTERNAL:337:8-28, ir_type=uint64, name='tmp%0', version=1)]
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:308:59-78, ir_type=uint64, name='tmp%1', version=0)]
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers [Register(source_location=INTERNAL:337:8-28, ir_type=uint64, name='tmp%0', version=0)]
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:338:44-72, ir_type=uint64, name='tmp%1', version=0)]
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, head#0
debug: selected head#0 from equivalence set
debug: Found equivalence set: tmp%4#0, dyn_arr_index#0
debug: selected dyn_arr_index#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 8u 2u) to 10u
debug: Simplified (+ 10u 8u) to 18u
debug: Simplified (+ 18u 2u) to 20u
debug: Simplified (+ 20u dyn_arr_index#0) to (+ tmp%3#0 22u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:499:24 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arr_size#0, index#0
debug: selected arr_size#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%0#0, head_and_dyn_arr#0
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Found equivalence set: tmp%2#0, dyn_arr2_index#0
debug: selected dyn_arr2_index#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@42 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@43 with block@41 in block@44
debug: Merged linear block@43 into block@41
debug: Merged linear block@44 into block@41
debug: Merged linear block@42 into block@40
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@38
debug: Removing jump block block@39
debug: branching to block@38 will be replaced with block@40
debug: branching to block@39 will be replaced with block@40
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:95:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_boxes in examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint8[])%0#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+utf8[])%0#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: storage_value%1#0, b_value#0
debug: selected b_value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%27#0 0u) to tmp%27#0
debug: Simplified (- tmp%35#0 0u) to tmp%35#0
debug: Simplified (- tmp%55#0 0u) to tmp%55#0
debug: Simplified (- tmp%64#0 0u) to tmp%64#0
debug: Simplified (- tmp%73#0 0u) to tmp%73#0
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%41#0 0u 1u) to ((extract 0 1) tmp%41#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%20#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let tmp%41#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%47#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%58#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%67#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%76#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Found equivalence set: tmp%0#1, tmp%11#0, tmp%41#0, tmp%47#0, tmp%58#0, tmp%67#0, tmp%76#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%9#0, tmp%20#0, length%0#0, length%1#0
debug: selected tmp%9#0 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%28#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%35#0, tmp%36#0
debug: selected tmp%35#0 from equivalence set
debug: Found equivalence set: tmp%55#0, tmp%56#0
debug: selected tmp%55#0 from equivalence set
debug: Found equivalence set: tmp%64#0, tmp%65#0
debug: selected tmp%64#0 from equivalence set
debug: Found equivalence set: tmp%73#0, tmp%74#0
debug: selected tmp%73#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Found equivalence set: tmp%12#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: selected tmp%12#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:102:9 debug: combined BoxRead `storage_value%0#0 = box_read("box_large")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 4, encoded_value%1#0)`
and BoxWrite `box_write("box_large", updated_tuple%0#0)`
into (box_replace "box_large" box%offset%0#0 encoded_value%1#0)
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:112:16 debug: box_key "b" is known to exist, removing assert
box_storage/contract.py:129:16 debug: box_key "box_large" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:131:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys in examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:138:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints in examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:142:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_many_ints in examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64)%1#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:144:9 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("many_ints", updated_array%0#0)`
into (box_replace "many_ints" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:146:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_many_ints in examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#1, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#1, tmp%0#0
debug: selected total#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:150 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:154:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_boxes in examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("42") with copy of existing registers [Register(source_location=box_storage/contract.py:161:38-55, ir_type=Encoded(len+utf8[]), name='tmp%4', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%5#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:167:6 debug: inlining call to examples.box_storage.contract.BoxContract.indirect_extract_and_replace in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, large#0
debug: selected large#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, large#1
debug: selected large#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:169:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ExtractValue `extract_value(large#0, 4)`
into box%box_extract%0#0
box_storage/contract.py:169:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ReplaceValue `large#1 = replace_value(large#0, 4, encoded_value%0#0)`
and BoxWrite `box_write("box_large", large#1)`
into (box_replace "box_large" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:173:6 debug: inlining call to examples.box_storage.contract.BoxContract.read_boxes in examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#1, tmp%0#0
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: tmp%2#1, tmp%1#0
debug: selected tmp%2#1 from equivalence set
debug: Found equivalence set: storage_value%1#0, tmp%2#0
debug: selected storage_value%1#0 from equivalence set
debug: Found equivalence set: values%0#0, tmp%3#0
debug: selected values%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:179:13 debug: combined BoxRead `storage_value%2#0 = box_read("box_large")`
and ExtractValue `extract_value(storage_value%2#0, 4)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:182:6 debug: inlining call to examples.box_storage.contract.BoxContract.boxes_exist in examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_exists%0#0, tmp%0#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, tmp%1#0
debug: selected maybe_exists%1#0 from equivalence set
debug: Found equivalence set: maybe_exists%2#0, tmp%2#0
debug: selected maybe_exists%2#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, tmp%3#0
debug: selected maybe_exists%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:186:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_arr_struct in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>() with copy of existing registers [Register(source_location=box_storage/contract.py:190:16-31, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:195:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:199:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_arr_struct in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#1, arr2_len#0
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%8#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Found equivalence set: tmp%11#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Found equivalence set: tmp%17#0, tmp%1#0
debug: selected tmp%17#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%15#0 0u) to (! tmp%15#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:203:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 2)`
into box%box_extract%0#0
box_storage/contract.py:218:13 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%3#0, 4, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%5#0 encoded_value%0#0)
box_storage/contract.py:220:9 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%4#0, 4, 0, tmp%9#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%7#0 tmp%9#0)
box_storage/contract.py:223:9 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%5#0, 3, tmp%12#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%2#0)`
into (box_replace "dynamic_arr_struct" box%offset%8#0 tmp%12#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:231:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#1, arr2_len#0
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%4#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%9#0, size#0
debug: selected size#0 from equivalence set
debug: Found equivalence set: tmp%10#0, tmp%1#0
debug: selected tmp%10#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:241:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%2#0, 4, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%3#0 tmp%5#0)
box_storage/contract.py:242:9 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%3#0, 3, tmp%6#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%4#0 tmp%6#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:253:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_nested_struct in examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0, struct#0
debug: selected struct#0 from equivalence set
debug: Found equivalence set: tmp%1#0, struct_bytes#0
debug: selected struct_bytes#0 from equivalence set
debug: Found equivalence set: tmp%2#0, struct_size#0
debug: selected struct_size#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable tail_offset#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 4098u 2u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:267:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_write in examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64)%1#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:270:9 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, 0, encoded_value%0#0)`
and BoxWrite `box_write("box", updated_tuple%0#0)`
into (box_replace "box" box%offset%1#0 encoded_value%0#0)
box_storage/contract.py:271:9 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%1#0, 1, 3, encoded_value%1#0)`
and BoxWrite `box_write("box", updated_tuple%1#0)`
into (box_replace "box" box%offset%3#0 encoded_value%1#0)
box_storage/contract.py:272:9 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%2#0, 1, 1, 1, index#0, index#0, encoded_value%2#0)`
and BoxWrite `box_write("box", updated_tuple%2#0)`
into (box_replace "box" box%offset%8#0 encoded_value%2#0)
box_storage/contract.py:273:9 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ReplaceValue `updated_tuple%3#0 = replace_value(storage_value%3#0, 1, 1, 0, encoded_value%3#0)`
and BoxWrite `box_write("box", updated_tuple%3#0)`
into (box_replace "box" box%offset%11#0 encoded_value%3#0)
box_storage/contract.py:274:9 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ReplaceValue `updated_tuple%4#0 = replace_value(storage_value%4#0, 1, 1, 2, encoded_value%4#0)`
and BoxWrite `box_write("box", updated_tuple%4#0)`
into (box_replace "box" box%offset%14#0 encoded_value%4#0)
box_storage/contract.py:275:9 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ReplaceValue `updated_tuple%5#0 = replace_value(storage_value%5#0, 1, 2, index#0, 1, index#0, index#0, encoded_value%5#0)`
and BoxWrite `box_write("box", updated_tuple%5#0)`
into (box_replace "box" box%offset%20#0 encoded_value%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:277:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_read in examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, i1#0
debug: selected i1#0 from equivalence set
debug: Found equivalence set: tmp%1#0, i2#0
debug: selected i2#0 from equivalence set
debug: Found equivalence set: tmp%2#0, i3#0
debug: selected i3#0 from equivalence set
debug: Found equivalence set: values%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: values%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: values%2#0, arr_arr#0
debug: selected arr_arr#0 from equivalence set
debug: Found equivalence set: values%3#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: values%4#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: values%5#0, woah_arr_arr#0
debug: selected woah_arr_arr#0 from equivalence set
debug: Found equivalence set: tmp%4#1, tmp%3#0
debug: selected tmp%4#1 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:280:13 debug: replacing extract_value(tuple_item%0#0, 0) with extract_value(storage_value%0#0, 1, 0)
box_storage/contract.py:281:13 debug: replacing extract_value(tuple_item%2#0, 3) with extract_value(storage_value%1#0, 1, 3)
box_storage/contract.py:282:19 debug: replacing extract_value(tuple_item%4#0, 1) with extract_value(storage_value%2#0, 1, 1)
box_storage/contract.py:282:19 debug: replacing extract_value(tuple_item%5#0, 1) with extract_value(storage_value%2#0, 1, 1, 1)
box_storage/contract.py:282:19 debug: replacing extract_value(tuple_item%6#0, i1#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0)
box_storage/contract.py:282:19 debug: replacing extract_value(array_item%0#0, i2#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%7#0, 1) with extract_value(storage_value%3#0, 1, 1)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%8#0, 0) with extract_value(storage_value%3#0, 1, 1, 0)
box_storage/contract.py:284:13 debug: replacing extract_value(tuple_item%10#0, 1) with extract_value(storage_value%4#0, 1, 1)
box_storage/contract.py:284:13 debug: replacing extract_value(tuple_item%11#0, 2) with extract_value(storage_value%4#0, 1, 1, 2)
box_storage/contract.py:285:24 debug: replacing extract_value(tuple_item%13#0, 2) with extract_value(storage_value%5#0, 1, 2)
box_storage/contract.py:285:24 debug: replacing extract_value(tuple_item%14#0, i1#0) with extract_value(storage_value%5#0, 1, 2, i1#0)
box_storage/contract.py:285:24 debug: replacing extract_value(array_item%2#0, 1) with extract_value(storage_value%5#0, 1, 2, i1#0, 1)
box_storage/contract.py:285:24 debug: replacing extract_value(tuple_item%15#0, i2#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0)
box_storage/contract.py:285:24 debug: replacing extract_value(array_item%3#0, i3#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:280:13 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%0#0, 1, 0)`
into box%box_extract%0#0
box_storage/contract.py:281:13 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%1#0, 1, 3)`
into box%box_extract%1#0
box_storage/contract.py:282:19 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)`
into box%box_extract%5#0
box_storage/contract.py:283:13 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%3#0, 1, 1, 0)`
into box%box_extract%6#0
box_storage/contract.py:284:13 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%4#0, 1, 1, 2)`
into box%box_extract%7#0
box_storage/contract.py:285:24 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)`
into box%box_extract%14#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:289:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#1, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%4#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%3#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%5#0, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: tmp%4#0, total#4
debug: selected total#4 from equivalence set
debug: Found equivalence set: total#3, tmp%0#0
debug: selected total#3 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@8 with block@7 in block@6
debug: Merged linear block@8 into block@7
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:294 debug: replacing extract_value(tuple_item%4#0, item_index_internal%0#1) with extract_value(storage_value%4#0, 1, item_index_internal%0#1)
box_storage/contract.py:296 debug: replacing extract_value(tuple_item%5#0, item_index_internal%1#1) with extract_value(storage_value%5#0, 3, item_index_internal%1#1)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:291:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:292:16 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%1#0, 2)`
into box%box_extract%1#0
box_storage/contract.py:293:17 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%2#0, 0)`
into box%box_extract%2#0
box_storage/contract.py:293:51 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%3#0, 2)`
into box%box_extract%3#0
box_storage/contract.py:294 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%4#0, 1, item_index_internal%0#1)`
into box%box_extract%6#0
box_storage/contract.py:296 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%5#0, 3, item_index_internal%1#1)`
into box%box_extract%10#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:300:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_bools in examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:304:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_bool in examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:306:9 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("too_many_bools", updated_array%0#0)`
into (box_replace "too_many_bools" box%byte_containing_bit_offset%0#0 box%tmp%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:308:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_bools in examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, stop_at_total#0
debug: selected stop_at_total#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%0#1, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#4, tmp%1#0
debug: selected total#4 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@8 with block@7 in block@2
debug: Merged linear block@8 into block@7
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:311 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into extract_value(box%box_extract%0#0, box%element_bit_offset%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:318:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_box in examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:322:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box in examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:326:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_box in examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%0#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%4#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Found equivalence set: tmp%6#0, tmp%1#0
debug: selected tmp%6#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:331:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:335:13 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%2#0 encoded_value%0#0)
box_storage/contract.py:338:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%2#0, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%1#0)`
into (box_replace "dynamic_box" box%offset%3#0 tmp%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:341:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_box in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%1#0
debug: selected tmp%5#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:346:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:347:9 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 0, tmp%2#1)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%1#0 tmp%2#1)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:352:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_box in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#1, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#1, tmp%0#0
debug: selected total#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:355 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%1#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:359:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_box in examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64)%1#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:361:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_array%0#0)`
into (box_replace "dynamic_box" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:363:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_arr_struct in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64)%1#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:365:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:367:6 debug: inlining call to examples.box_storage.contract.BoxContract.slice_box in examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:376:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box in examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:386:6 debug: inlining call to examples.box_storage.contract.BoxContract.test_box_ref in examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#0, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: selected exists#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:400:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:425:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:426:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:431:9 debug: box_key "box_ref" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:392:16 debug: replacing box read with cached value for key: (len,0x626c6f62)
box_storage/contract.py:394:16 debug: replacing box read with cached value for key: (len,0x626c6f62)
box_storage/contract.py:396:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:400:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:421:16 debug: replacing box read with cached value for key: (rw,"blob")
box_storage/contract.py:426:16 debug: replacing box read with cached value for key: (len,"blob")
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:434:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_test in examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: replacing box_get with box_len because value#1 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:443:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:443:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:444:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:449:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:458:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_set in examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: tmp%1#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:462:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_get in examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%1#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:466:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_del in examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key#0
debug: selected key#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:470:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_exists in examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, tmp%1#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (> 4104u 4096u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%1#0, b_value#0
debug: selected b_value#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%27#0 0u) to tmp%27#0
debug: Simplified (- tmp%35#0 0u) to tmp%35#0
debug: Simplified (- tmp%55#0 0u) to tmp%55#0
debug: Simplified (- tmp%64#0 0u) to tmp%64#0
debug: Simplified (- tmp%73#0 0u) to tmp%73#0
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%41#0 0u 1u) to ((extract 0 1) tmp%41#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%20#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let tmp%41#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%47#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%58#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%67#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%76#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:100:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Found equivalence set: tmp%0#0, tmp%11#0, tmp%41#0, tmp%47#0, tmp%58#0, tmp%67#0, tmp%76#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%9#0, tmp%20#0, length%0#0, length%1#0
debug: selected tmp%9#0 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%28#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%35#0, tmp%36#0
debug: selected tmp%35#0 from equivalence set
debug: Found equivalence set: tmp%55#0, tmp%56#0
debug: selected tmp%55#0 from equivalence set
debug: Found equivalence set: tmp%64#0, tmp%65#0
debug: selected tmp%64#0 from equivalence set
debug: Found equivalence set: tmp%73#0, tmp%74#0
debug: selected tmp%73#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:114:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Found equivalence set: tmp%12#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: selected tmp%12#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:102:9 debug: combined BoxRead `storage_value%0#0 = box_read("box_large")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 4, encoded_value%1#0)`
and BoxWrite `box_write("box_large", updated_tuple%0#0)`
into (box_replace "box_large" box%offset%0#0 encoded_value%1#0)
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:112:16 debug: box_key "b" is known to exist, removing assert
box_storage/contract.py:129:16 debug: box_key "box_large" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:144:9 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("many_ints", updated_array%0#0)`
into (box_replace "many_ints" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:148:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@7 from goto_nth [block@8, block@9][0u] else goto block@10 to goto block@8
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@8 with block@7 in block@10
debug: Merged linear block@8 into block@7
debug: Replaced predecessor block@12 with block@11 in block@1
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@9
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:150 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("42") with copy of existing registers [Register(source_location=box_storage/contract.py:161:38-55, ir_type=Encoded(len+utf8[]), name='tmp%4', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%5#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, large#0
debug: selected large#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, large#1
debug: selected large#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:169:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ExtractValue `extract_value(large#0, 4)`
into box%box_extract%0#0
box_storage/contract.py:169:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ReplaceValue `large#1 = replace_value(large#0, 4, encoded_value%0#0)`
and BoxWrite `box_write("box_large", large#1)`
into (box_replace "box_large" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:176:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:179:13 debug: combined BoxRead `storage_value%2#0 = box_read("box_large")`
and ExtractValue `extract_value(storage_value%2#0, 4)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>() with copy of existing registers [Register(source_location=box_storage/contract.py:190:16-31, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:222:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
box_storage/contract.py:209:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
box_storage/contract.py:213:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0, index#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#0, arr_size#1
debug: selected arr_size#1 from equivalence set
debug: Found equivalence set: tmp%3#3, tmp%4#0
debug: selected tmp%3#3 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%5#0
debug: selected tmp%5#1 from equivalence set
debug: Found equivalence set: tmp%8#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Found equivalence set: arr_len#1, arr_size#0
debug: selected arr_len#1 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%10#0
debug: selected tmp%3#1 from equivalence set
debug: Found equivalence set: tmp%11#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#3
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Removing unused variable box#0
debug: Removing unused variable arr2_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#2 24u)
debug: Simplified (== tmp%15#0 0u) to (! tmp%15#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@1
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Merged linear block@6 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:203:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 2)`
into box%box_extract%0#0
box_storage/contract.py:218:13 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%3#0, 4, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%5#0 encoded_value%0#0)
box_storage/contract.py:220:9 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%4#0, 4, 0, tmp%9#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%7#0 tmp%9#0)
box_storage/contract.py:223:9 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%5#0, 3, tmp%12#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%2#0)`
into (box_replace "dynamic_arr_struct" box%offset%8#0 tmp%12#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:240:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
box_storage/contract.py:243:17 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
box_storage/contract.py:248:16 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0, arr_size#0, index#1, arr_size#1
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%3#0
debug: selected tmp%3#1 from equivalence set
debug: Found equivalence set: tmp%4#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%7#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#4, tmp%9#0, size#0
debug: selected size#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable arr2_index#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#2
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#2 24u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#3: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:493:43-66, ir_type=uint64, name='tmp%3', version=2)]
debug: Replacing redundant declaration let tmp%3#5: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:493:43-66, ir_type=uint64, name='tmp%3', version=2)]
debug: Found equivalence set: tmp%3#2, tmp%3#3, tmp%3#5
debug: selected tmp%3#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let index#0: uint64 = (+ tmp%3#2 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:499:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Replacing redundant declaration let head_and_dyn_arr#1: uint64 = (+ tmp%3#2 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:499:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Found equivalence set: head_and_dyn_arr#0, index#0, head_and_dyn_arr#1
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:241:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%2#0, 4, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%3#0 tmp%5#0)
box_storage/contract.py:242:9 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%3#0, 3, tmp%6#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%4#0 tmp%6#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, struct_bytes#0
debug: selected struct_bytes#0 from equivalence set
debug: Found equivalence set: tmp%2#0, struct_size#0
debug: selected struct_size#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable tail_offset#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 4098u 2u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:270:9 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, 0, encoded_value%0#0)`
and BoxWrite `box_write("box", updated_tuple%0#0)`
into (box_replace "box" box%offset%1#0 encoded_value%0#0)
box_storage/contract.py:271:9 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%1#0, 1, 3, encoded_value%1#0)`
and BoxWrite `box_write("box", updated_tuple%1#0)`
into (box_replace "box" box%offset%3#0 encoded_value%1#0)
box_storage/contract.py:272:9 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%2#0, 1, 1, 1, index#0, index#0, encoded_value%2#0)`
and BoxWrite `box_write("box", updated_tuple%2#0)`
into (box_replace "box" box%offset%8#0 encoded_value%2#0)
box_storage/contract.py:273:9 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ReplaceValue `updated_tuple%3#0 = replace_value(storage_value%3#0, 1, 1, 0, encoded_value%3#0)`
and BoxWrite `box_write("box", updated_tuple%3#0)`
into (box_replace "box" box%offset%11#0 encoded_value%3#0)
box_storage/contract.py:274:9 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ReplaceValue `updated_tuple%4#0 = replace_value(storage_value%4#0, 1, 1, 2, encoded_value%4#0)`
and BoxWrite `box_write("box", updated_tuple%4#0)`
into (box_replace "box" box%offset%14#0 encoded_value%4#0)
box_storage/contract.py:275:9 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ReplaceValue `updated_tuple%5#0 = replace_value(storage_value%5#0, 1, 2, index#0, 1, index#0, index#0, encoded_value%5#0)`
and BoxWrite `box_write("box", updated_tuple%5#0)`
into (box_replace "box" box%offset%20#0 encoded_value%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: values%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: values%2#0, arr_arr#0
debug: selected arr_arr#0 from equivalence set
debug: Found equivalence set: values%3#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: values%4#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: values%5#0, woah_arr_arr#0
debug: selected woah_arr_arr#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:280:13 debug: replacing extract_value(tuple_item%0#0, 0) with extract_value(storage_value%0#0, 1, 0)
box_storage/contract.py:281:13 debug: replacing extract_value(tuple_item%2#0, 3) with extract_value(storage_value%1#0, 1, 3)
box_storage/contract.py:282:19 debug: replacing extract_value(tuple_item%4#0, 1) with extract_value(storage_value%2#0, 1, 1)
box_storage/contract.py:282:19 debug: replacing extract_value(tuple_item%5#0, 1) with extract_value(storage_value%2#0, 1, 1, 1)
box_storage/contract.py:282:19 debug: replacing extract_value(tuple_item%6#0, i1#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0)
box_storage/contract.py:282:19 debug: replacing extract_value(array_item%0#0, i2#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%7#0, 1) with extract_value(storage_value%3#0, 1, 1)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%8#0, 0) with extract_value(storage_value%3#0, 1, 1, 0)
box_storage/contract.py:284:13 debug: replacing extract_value(tuple_item%10#0, 1) with extract_value(storage_value%4#0, 1, 1)
box_storage/contract.py:284:13 debug: replacing extract_value(tuple_item%11#0, 2) with extract_value(storage_value%4#0, 1, 1, 2)
box_storage/contract.py:285:24 debug: replacing extract_value(tuple_item%13#0, 2) with extract_value(storage_value%5#0, 1, 2)
box_storage/contract.py:285:24 debug: replacing extract_value(tuple_item%14#0, i1#0) with extract_value(storage_value%5#0, 1, 2, i1#0)
box_storage/contract.py:285:24 debug: replacing extract_value(array_item%2#0, 1) with extract_value(storage_value%5#0, 1, 2, i1#0, 1)
box_storage/contract.py:285:24 debug: replacing extract_value(tuple_item%15#0, i2#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0)
box_storage/contract.py:285:24 debug: replacing extract_value(array_item%3#0, i3#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:280:13 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%0#0, 1, 0)`
into box%box_extract%0#0
box_storage/contract.py:281:13 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%1#0, 1, 3)`
into box%box_extract%1#0
box_storage/contract.py:282:19 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)`
into box%box_extract%5#0
box_storage/contract.py:283:13 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%3#0, 1, 1, 0)`
into box%box_extract%6#0
box_storage/contract.py:284:13 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%4#0, 1, 1, 2)`
into box%box_extract%7#0
box_storage/contract.py:285:24 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)`
into box%box_extract%14#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%4#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%3#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%5#0, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: tmp%4#0, total#4
debug: selected total#4 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:294 debug: replacing extract_value(tuple_item%4#0, item_index_internal%0#1) with extract_value(storage_value%4#0, 1, item_index_internal%0#1)
box_storage/contract.py:296 debug: replacing extract_value(tuple_item%5#0, item_index_internal%1#1) with extract_value(storage_value%5#0, 3, item_index_internal%1#1)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:291:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:292:16 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%1#0, 2)`
into box%box_extract%1#0
box_storage/contract.py:293:17 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%2#0, 0)`
into box%box_extract%2#0
box_storage/contract.py:293:51 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%3#0, 2)`
into box%box_extract%3#0
box_storage/contract.py:294 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%4#0, 1, item_index_internal%0#1)`
into box%box_extract%6#0
box_storage/contract.py:296 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%5#0, 3, item_index_internal%1#1)`
into box%box_extract%10#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:306:9 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("too_many_bools", updated_array%0#0)`
into (box_replace "too_many_bools" box%byte_containing_bit_offset%0#0 box%tmp%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@7 with block@6 in block@1
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:311 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into extract_value(box%box_extract%0#0, box%element_bit_offset%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%4#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:331:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:335:13 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%2#0 encoded_value%0#0)
box_storage/contract.py:338:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%2#0, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%1#0)`
into (box_replace "dynamic_box" box%offset%3#0 tmp%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:346:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:347:9 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 0, tmp%2#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%1#0 tmp%2#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:355 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%1#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:361:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_array%0#0)`
into (box_replace "dynamic_box" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:365:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:427:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#0, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: value%0#1, tmp%20#0
debug: selected value%0#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable ref#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:400:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:425:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:426:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:482:12 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:431:9 debug: box_key "box_ref" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:392:16 debug: replacing box read with cached value for key: (len,0x626c6f62)
box_storage/contract.py:394:16 debug: replacing box read with cached value for key: (len,0x626c6f62)
box_storage/contract.py:396:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:400:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:421:16 debug: replacing box read with cached value for key: (rw,"blob")
box_storage/contract.py:426:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:482:12 debug: replacing box read with cached value for key: (len,"blob")
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:455:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%8#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#1) to encoded_value%0#1
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: replacing box_get with box_len because value#1 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:439:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%0#1: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%0#1, box_prefixed_key%0#1, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:443:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:443:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:444:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:449:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@2 from goto tmp%4#0 ? block@3 : block@39 to goto block@3
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@40
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Replaced predecessor block@3 with block@2 in block@5
debug: Replaced predecessor block@3 with block@2 in block@6
debug: Replaced predecessor block@3 with block@2 in block@7
debug: Replaced predecessor block@3 with block@2 in block@8
debug: Replaced predecessor block@3 with block@2 in block@9
debug: Replaced predecessor block@3 with block@2 in block@10
debug: Replaced predecessor block@3 with block@2 in block@11
debug: Replaced predecessor block@3 with block@2 in block@12
debug: Replaced predecessor block@3 with block@2 in block@13
debug: Replaced predecessor block@3 with block@2 in block@14
debug: Replaced predecessor block@3 with block@2 in block@15
debug: Replaced predecessor block@3 with block@2 in block@16
debug: Replaced predecessor block@3 with block@2 in block@17
debug: Replaced predecessor block@3 with block@2 in block@18
debug: Replaced predecessor block@3 with block@2 in block@19
debug: Replaced predecessor block@3 with block@2 in block@20
debug: Replaced predecessor block@3 with block@2 in block@21
debug: Replaced predecessor block@3 with block@2 in block@22
debug: Replaced predecessor block@3 with block@2 in block@23
debug: Replaced predecessor block@3 with block@2 in block@24
debug: Replaced predecessor block@3 with block@2 in block@25
debug: Replaced predecessor block@3 with block@2 in block@26
debug: Replaced predecessor block@3 with block@2 in block@27
debug: Replaced predecessor block@3 with block@2 in block@28
debug: Replaced predecessor block@3 with block@2 in block@29
debug: Replaced predecessor block@3 with block@2 in block@30
debug: Replaced predecessor block@3 with block@2 in block@31
debug: Replaced predecessor block@3 with block@2 in block@32
debug: Replaced predecessor block@3 with block@2 in block@33
debug: Replaced predecessor block@3 with block@2 in block@34
debug: Replaced predecessor block@3 with block@2 in block@35
debug: Replaced predecessor block@3 with block@2 in block@36
debug: Replaced predecessor block@3 with block@2 in block@37
debug: Replaced predecessor block@3 with block@2 in block@38
debug: Replaced predecessor block@3 with block@2 in block@39
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@41
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_many_ints[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.create_bools[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] as inlineable
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@4 from goto tmp%4#0 ? block@5 : block@41 to goto block@5
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@42
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Replaced predecessor block@5 with block@4 in block@8
debug: Replaced predecessor block@5 with block@4 in block@9
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Replaced predecessor block@5 with block@4 in block@11
debug: Replaced predecessor block@5 with block@4 in block@12
debug: Replaced predecessor block@5 with block@4 in block@13
debug: Replaced predecessor block@5 with block@4 in block@14
debug: Replaced predecessor block@5 with block@4 in block@15
debug: Replaced predecessor block@5 with block@4 in block@16
debug: Replaced predecessor block@5 with block@4 in block@17
debug: Replaced predecessor block@5 with block@4 in block@18
debug: Replaced predecessor block@5 with block@4 in block@19
debug: Replaced predecessor block@5 with block@4 in block@20
debug: Replaced predecessor block@5 with block@4 in block@21
debug: Replaced predecessor block@5 with block@4 in block@22
debug: Replaced predecessor block@5 with block@4 in block@23
debug: Replaced predecessor block@5 with block@4 in block@24
debug: Replaced predecessor block@5 with block@4 in block@25
debug: Replaced predecessor block@5 with block@4 in block@26
debug: Replaced predecessor block@5 with block@4 in block@27
debug: Replaced predecessor block@5 with block@4 in block@28
debug: Replaced predecessor block@5 with block@4 in block@29
debug: Replaced predecessor block@5 with block@4 in block@30
debug: Replaced predecessor block@5 with block@4 in block@31
debug: Replaced predecessor block@5 with block@4 in block@32
debug: Replaced predecessor block@5 with block@4 in block@33
debug: Replaced predecessor block@5 with block@4 in block@34
debug: Replaced predecessor block@5 with block@4 in block@35
debug: Replaced predecessor block@5 with block@4 in block@36
debug: Replaced predecessor block@5 with block@4 in block@37
debug: Replaced predecessor block@5 with block@4 in block@38
debug: Replaced predecessor block@5 with block@4 in block@39
debug: Replaced predecessor block@5 with block@4 in block@40
debug: Replaced predecessor block@5 with block@4 in block@41
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@1
debug: branching to block@1 will be replaced with block@2
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@43
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:308:59-78, ir_type=uint64, name='tmp%1', version=1)]
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:322:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:300:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_bools[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:195:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:138:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@1 from goto tmp%4#0 ? block@2 : block@40 to goto block@2
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Replaced predecessor block@2 with block@1 in block@4
debug: Replaced predecessor block@2 with block@1 in block@5
debug: Replaced predecessor block@2 with block@1 in block@6
debug: Replaced predecessor block@2 with block@1 in block@7
debug: Replaced predecessor block@2 with block@1 in block@8
debug: Replaced predecessor block@2 with block@1 in block@9
debug: Replaced predecessor block@2 with block@1 in block@10
debug: Replaced predecessor block@2 with block@1 in block@11
debug: Replaced predecessor block@2 with block@1 in block@12
debug: Replaced predecessor block@2 with block@1 in block@13
debug: Replaced predecessor block@2 with block@1 in block@14
debug: Replaced predecessor block@2 with block@1 in block@15
debug: Replaced predecessor block@2 with block@1 in block@16
debug: Replaced predecessor block@2 with block@1 in block@17
debug: Replaced predecessor block@2 with block@1 in block@18
debug: Replaced predecessor block@2 with block@1 in block@19
debug: Replaced predecessor block@2 with block@1 in block@20
debug: Replaced predecessor block@2 with block@1 in block@21
debug: Replaced predecessor block@2 with block@1 in block@22
debug: Replaced predecessor block@2 with block@1 in block@23
debug: Replaced predecessor block@2 with block@1 in block@24
debug: Replaced predecessor block@2 with block@1 in block@25
debug: Replaced predecessor block@2 with block@1 in block@26
debug: Replaced predecessor block@2 with block@1 in block@27
debug: Replaced predecessor block@2 with block@1 in block@28
debug: Replaced predecessor block@2 with block@1 in block@29
debug: Replaced predecessor block@2 with block@1 in block@30
debug: Replaced predecessor block@2 with block@1 in block@31
debug: Replaced predecessor block@2 with block@1 in block@32
debug: Replaced predecessor block@2 with block@1 in block@33
debug: Replaced predecessor block@2 with block@1 in block@34
debug: Replaced predecessor block@2 with block@1 in block@35
debug: Replaced predecessor block@2 with block@1 in block@36
debug: Replaced predecessor block@2 with block@1 in block@37
debug: Replaced predecessor block@2 with block@1 in block@40
debug: Merged linear block@2 into block@1
debug: Merged linear block@48 into block@5
debug: Merged linear block@46 into block@13
debug: Merged linear block@44 into block@20
debug: Merged linear block@42 into block@24
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@49
debug: Removing jump block block@47
debug: Removing jump block block@45
debug: Removing jump block block@43
debug: branching to block@49 will be replaced with block@40
debug: branching to block@47 will be replaced with block@40
debug: branching to block@45 will be replaced with block@40
debug: branching to block@43 will be replaced with block@40
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%2#0
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, tmp%3#0
debug: selected box%array_length%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable b_value#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%1#0, encoded_value%0#0
debug: selected reinterpret_Encoded(uint64)%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u box%element_offset%0#0) to box%element_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:148:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, array_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Simplified (+ 0u box%element_offset%0#0) to box%element_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@8 from goto_nth [block@9, block@10][0u] else goto block@11 to goto block@9
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@9 with block@8 in block@11
debug: Merged linear block@9 into block@8
debug: Replaced predecessor block@13 with block@12 in block@2
debug: Merged linear block@13 into block@12
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@10
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable large#1
debug: Removing unused variable large#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:176:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#2, tmp%0#1
debug: selected tmp%0#2 from equivalence set
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable storage_value%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:222:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
box_storage/contract.py:209:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
box_storage/contract.py:213:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, arr_len#0, index#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#1, arr_size#1
debug: selected arr_size#1 from equivalence set
debug: Found equivalence set: tmp%3#4, tmp%4#0
debug: selected tmp%3#4 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%5#0
debug: selected tmp%5#1 from equivalence set
debug: Found equivalence set: arr_len#1, arr_size#0
debug: selected arr_len#1 from equivalence set
debug: Found equivalence set: tmp%3#2, tmp%10#0
debug: selected tmp%3#2 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%13#0
debug: selected box%array_length%2#0 from equivalence set
debug: Found equivalence set: box%array_length%3#0, tmp%15#0
debug: selected box%array_length%3#0 from equivalence set
debug: Found equivalence set: box%array_length%4#0, tmp%17#0
debug: selected box%array_length%4#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable tuple_item%1#0
debug: Removing unused variable tuple_item%2#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable arr2_index#0
debug: Removing unused variable updated_tuple%2#0
debug: Removing unused variable tuple_item%3#0
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Removing unused variable storage_value%6#0
debug: Removing unused variable storage_value%7#0
debug: Removing unused variable storage_value%8#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%0#0) to box%btoi%0#0
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 0u) to 20u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#3 24u)
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%1#0) to box%btoi%1#0
debug: Simplified (+ 0u 20u) to 20u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@2
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Merged linear block@6 into block@5
debug: Merged linear block@7 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:240:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
box_storage/contract.py:243:17 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
box_storage/contract.py:248:16 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%0#1
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: arr_len#0, arr_size#0, index#1, arr_size#1
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%3#2, tmp%3#1
debug: selected tmp%3#2 from equivalence set
debug: Found equivalence set: tmp%5#1, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#5, size#0
debug: selected size#0 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%10#0
debug: selected box%array_length%2#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tuple_item%0#0
debug: Removing unused variable tuple_item%1#0
debug: Removing unused variable arr2_index#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable tuple_item%2#0
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%0#0) to box%btoi%0#0
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#3 24u)
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 0u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u 20u) to 20u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#4: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:493:43-66, ir_type=uint64, name='tmp%3', version=3)]
debug: Replacing redundant declaration let tmp%3#6: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:493:43-66, ir_type=uint64, name='tmp%3', version=3)]
debug: Found equivalence set: box%btoi%0#0, box%offset%1#0
debug: selected box%btoi%0#0 from equivalence set
debug: Found equivalence set: tmp%3#3, tmp%3#4, tmp%3#6
debug: selected tmp%3#3 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let index#0: uint64 = (+ tmp%3#3 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:499:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Replacing redundant declaration let head_and_dyn_arr#1: uint64 = (+ tmp%3#3 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:499:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Found equivalence set: head_and_dyn_arr#0, index#0, head_and_dyn_arr#1
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%4#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%1#0, encoded_value%0#0
debug: selected reinterpret_Encoded(uint64)%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable updated_tuple%2#0
debug: Removing unused variable updated_tuple%3#0
debug: Removing unused variable updated_tuple%4#0
debug: Removing unused variable updated_tuple%5#0
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 0u) to 4098u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 12u) to 4110u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 18u) to 4136u
debug: Simplified (+ 4136u 2u) to 4138u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 0u) to 4118u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 10u) to 4128u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 10u) to 4108u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%mul%1#0: uint64 = (* 2u index#0) with copy of existing registers [Register(source_location=box_storage/contract.py:272:8-64, ir_type=uint64, name='box%mul%0', version=0)]
debug: Replacing redundant declaration let box%mul%2#0: uint64 = (* 2u index#0) with copy of existing registers [Register(source_location=box_storage/contract.py:272:8-64, ir_type=uint64, name='box%mul%0', version=0)]
debug: Replacing redundant declaration let box%element_offset%1#0: uint64 = (* index#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:272:8-64, ir_type=uint64, name='box%element_offset%0', version=0)]
debug: Found equivalence set: box%mul%0#0, box%mul%1#0, box%mul%2#0
debug: selected box%mul%0#0 from equivalence set
debug: Found equivalence set: box%element_offset%0#0, box%element_offset%1#0
debug: selected box%element_offset%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%1#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, tuple_item%3#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%5#0, array_item%1#0
debug: selected box%box_extract%5#0 from equivalence set
debug: Found equivalence set: box%box_extract%6#0, tuple_item%9#0
debug: selected box%box_extract%6#0 from equivalence set
debug: Found equivalence set: box%box_extract%7#0, tuple_item%12#0
debug: selected box%box_extract%7#0 from equivalence set
debug: Found equivalence set: box%box_extract%14#0, array_item%4#0
debug: selected box%box_extract%14#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tuple_item%0#0
debug: Removing unused variable tuple_item%2#0
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable tuple_item%6#0
debug: Removing unused variable array_item%0#0
debug: Removing unused variable tuple_item%7#0
debug: Removing unused variable tuple_item%8#0
debug: Removing unused variable tuple_item%10#0
debug: Removing unused variable tuple_item%11#0
debug: Removing unused variable tuple_item%13#0
debug: Removing unused variable tuple_item%14#0
debug: Removing unused variable array_item%2#0
debug: Removing unused variable tuple_item%15#0
debug: Removing unused variable array_item%3#0
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 0u) to 4098u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 12u) to 4110u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 18u) to 4136u
debug: Simplified (+ 4136u 2u) to 4138u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 0u) to 4118u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 10u) to 4128u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 10u) to 4108u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%mul%1#0: uint64 = (* 2u i1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:282:18-56, ir_type=uint64, name='box%mul%0', version=0)]
debug: Found equivalence set: box%mul%0#0, box%mul%1#0
debug: selected box%mul%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, tuple_item%1#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%2#0, tuple_item%2#0
debug: selected box%box_extract%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%3#0, tuple_item%3#0
debug: selected box%box_extract%3#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, array_length%0#0
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%6#0, array_item%0#0
debug: selected box%box_extract%6#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, array_length%1#0
debug: selected box%array_length%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%10#0, array_item%1#0
debug: selected box%box_extract%10#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%1#0) to box%btoi%1#0
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%2#0) to box%btoi%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u box%element_byte_offset%0#0) to box%element_byte_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u box%element_byte_offset%0#0) to box%element_byte_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, tmp%6#0
debug: selected box%array_length%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ 0u 0u) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, tmp%5#0
debug: selected box%array_length%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, array_length%0#0
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, array_item%0#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 2u) to 2u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%1#0, encoded_value%0#0
debug: selected reinterpret_Encoded(uint64)%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 2u) to 2u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%1#0, encoded_value%0#0
debug: selected reinterpret_Encoded(uint64)%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:427:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: _%0#0, _%1#0, _%2#0, _%3#0, _%4#0
debug: selected _%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%1#0, maybe_exists%2#0, maybe_exists%3#0, maybe_exists%4#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Found equivalence set: value#0, maybe_value%1#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: exists#0, maybe_exists%6#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: _%5#0, value%0#0
debug: selected _%5#0 from equivalence set
debug: Found equivalence set: maybe_exists%7#0, check%0#0
debug: selected maybe_exists%7#0 from equivalence set
debug: Found equivalence set: value%0#1, tmp%20#0
debug: selected value%0#1 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable ref#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: bool = (! maybe_exists%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:390:15-26, ir_type=bool, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%2#0: bool = (! maybe_exists%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:390:15-26, ir_type=bool, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%3#0: bool = (! maybe_exists%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:390:15-26, ir_type=bool, name='tmp%0', version=0)]
debug: Found equivalence set: tmp%0#0, tmp%1#0, tmp%2#0, tmp%3#0
debug: selected tmp%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Removing redundant assert of tmp%0#0
debug: Removing redundant assert of tmp%0#0
debug: Removing redundant assert of tmp%0#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:482:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:482:12 debug: replacing box read with cached value for key: (len,"blob")
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:455:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, tmp%8#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable _%0#0
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%0#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:446:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: marking trivial method examples.box_storage.contract.BoxContract.check_keys[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.create_many_ints[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.create_bools[routing] as inlineable
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] as inlineable
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:322:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:300:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_bools[routing] in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:195:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:138:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints[routing] in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:131:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys[routing] in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@0 in block@42
debug: Replaced predecessor block@2 with block@0 in block@4
debug: Merged linear block@2 into block@0
debug: Merged linear block@51 into block@7
debug: Merged linear block@49 into block@8
debug: Merged linear block@47 into block@16
debug: Merged linear block@45 into block@23
debug: Merged linear block@43 into block@27
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@52
debug: Removing jump block block@50
debug: Removing jump block block@48
debug: Removing jump block block@46
debug: Removing jump block block@44
debug: branching to block@52 will be replaced with block@41
debug: branching to block@50 will be replaced with block@41
debug: branching to block@48 will be replaced with block@41
debug: branching to block@46 will be replaced with block@41
debug: branching to block@44 will be replaced with block@41
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%element_offset%0#0, box%offset%0#0
debug: selected box%element_offset%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%element_offset%0#0, box%offset%0#0
debug: selected box%element_offset%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget_with_buffer#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@11 with block@8 in block@7
debug: Merged linear block@11 into block@8
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@0
debug: branching to block@0 will be replaced with block@7
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%btoi%0#0, box%offset%2#0
debug: selected box%btoi%0#0 from equivalence set
debug: Found equivalence set: box%btoi%1#0, box%offset%10#0
debug: selected box%btoi%1#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Removing unused variable box%add%0#0
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box%offset%6#0
debug: Removing unused variable box%offset%7#0
debug: Removing unused variable head_and_dyn_arr#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable dyn_arr2_index#0
debug: Removing unused variable box%offset%8#0
debug: Removing unused variable box%offset%9#0
debug: Removing unused variable box%add%1#0
debug: Removing unused variable box%offset%11#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%add%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable dyn_arr2_index#0
debug: Removing unused variable box%offset%2#0
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box%offset%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Removing unused variable box%offset%2#0
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box%offset%5#0
debug: Removing unused variable box%offset%6#0
debug: Removing unused variable box%add%0#0
debug: Removing unused variable box%offset%9#0
debug: Removing unused variable box%offset%10#0
debug: Removing unused variable box%offset%11#0
debug: Removing unused variable box%offset%12#0
debug: Removing unused variable box%offset%13#0
debug: Removing unused variable box%offset%14#0
debug: Removing unused variable box%offset%15#0
debug: Removing unused variable box%add%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Removing unused variable box%offset%2#0
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box%offset%5#0
debug: Removing unused variable box%offset%6#0
debug: Removing unused variable box%add%0#0
debug: Removing unused variable box%offset%9#0
debug: Removing unused variable box%offset%10#0
debug: Removing unused variable box%offset%11#0
debug: Removing unused variable box%offset%12#0
debug: Removing unused variable box%offset%13#0
debug: Removing unused variable box%offset%14#0
debug: Removing unused variable box%offset%15#0
debug: Removing unused variable box%add%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%btoi%1#0, box%offset%7#0
debug: selected box%btoi%1#0 from equivalence set
debug: Found equivalence set: box%btoi%2#0, box%offset%8#0
debug: selected box%btoi%2#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Removing unused variable box%offset%2#0
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box%offset%5#0
debug: Removing unused variable box%add%0#0
debug: Removing unused variable box%add%1#0
debug: Removing unused variable box%add%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%element_byte_offset%0#0, box%byte_containing_bit_offset%0#0
debug: selected box%element_byte_offset%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%element_byte_offset%0#0, box%byte_containing_bit_offset%0#0
debug: selected box%element_byte_offset%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Removing unused variable box%offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%offset%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%add%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%add%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%add%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: _%5#0, value%0#1
debug: selected _%5#0 from equivalence set
debug: Found equivalence set: maybe_exists%7#0, check%0#1
debug: selected maybe_exists%7#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%21#0: bool = (== _%5#0 64u) with copy of existing registers [Register(source_location=box_storage/contract.py:426:15-35, ir_type=bool, name='tmp%19', version=0)]
debug: Found equivalence set: tmp%19#0, tmp%21#0
debug: selected tmp%19#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%19#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable materialized_values%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.box_storage.contract.BoxContract
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of examples.box_storage.contract.BoxContract
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.100.ssa.array.ir
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%3#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) tmp%0#1) to ((extract 2 1) b#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:111:16 debug: box_key "box_a" is known to exist, removing assert
box_storage/contract.py:114:16 debug: box_key "box_d" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:105:19 debug: replacing box read with cached value for key: (extract,"b",0u,2u)
box_storage/contract.py:118:16 debug: replacing box read with cached value for key: (len,0x424f585f43)
box_storage/contract.py:119:16 debug: replacing box read with cached value for key: (len,0x424f585f43)
box_storage/contract.py:120:16 debug: replacing box read with cached value for key: (len,0x424f585f43)
box_storage/contract.py:124:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:125:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:126:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:127:16 debug: replacing box read with cached value for key: (len,"box_d")
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: replacing box_get with box_len because aggregate%box_get%0#0 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%4#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x3432) to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Simplified (len "42") to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x0002 "42") to 0x00023432
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:160:38-62, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%1#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:162:23 debug: replacing box read with cached value for key: (rw,"box_a")
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#1
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%2#0, storage_value%0#0
debug: selected aggregate%box_get%2#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%4#0, storage_value%1#0
debug: selected aggregate%box_get%4#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]),uint64)%0#0, tmp%4#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0014
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0, tmp%4#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%set_bit%2#0) to aggregate%set_bit%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#0
debug: selected aggregate%len_u16%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint64[]),uint64,(len+uint64[]))%0#0, tmp%3#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0014
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0016
debug: Simplified (concat aggregate%head%3#0 0x0000) to (concat aggregate%head%2#0 0x00160000)
debug: Simplified (concat aggregate%concat%0#0 0x0000) to (concat aggregate%head%2#0 0x001600000000)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%9#0
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%1#0, aggregate%as_Encoded(uint16)%1#0, tmp%12#0
debug: selected aggregate%uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%1#0, tmp%2#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 aggregate%val_as_bytes%1#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%1#0)
debug: Simplified (extract3 aggregate%val_as_bytes%2#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:229:16 debug: replacing box read with cached value for key: (extract,"dynamic_arr_struct",20u,2u)
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%5#0
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%1#0, aggregate%as_Encoded(uint16)%1#0, tmp%6#0
debug: selected aggregate%uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%0#0, tmp%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 aggregate%val_as_bytes%0#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%0#0)
debug: Simplified (extract3 aggregate%val_as_bytes%1#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%extract%0#0, tuple_item%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%5#0
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 struct#0 0u)
debug: Simplified (bitlen aggregate%val_as_bytes%0#0) to 13u
debug: Simplified (<= 13u 16u) to 1u
debug: Simplified (extract3 aggregate%val_as_bytes%0#0 6u 2u) to 0x1002
debug: Simplified (extract3 struct#0 0u 8u) to ((extract 0 8) struct#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0, encoded_value%2#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0, encoded_value%3#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%3#0, encoded_value%4#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%as_Encoded(uint64)%4#0, encoded_value%5#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%4#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:293:17 debug: replacing box read with cached value for key: (extract,"dynamic_arr_struct",0u,8u)
box_storage/contract.py:293:51 debug: replacing box read with cached value for key: (extract,"dynamic_arr_struct",10u,8u)
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%get_bit%0#0, value#0, aggregate%as_Encoded(bool1)%0#0, encoded_value%0#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: aggregate%updated_target%0#0, box%tmp%0#0
debug: selected aggregate%updated_target%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%get_bit%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%lt%1#0: bool = (< box%element_bit_offset%0#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:306:8-48, ir_type=bool, name='aggregate%lt%0', version=0)]
debug: Found equivalence set: aggregate%lt%0#0, aggregate%lt%1#0
debug: selected aggregate%lt%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of aggregate%lt%0#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%0#0, array_item%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%2#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: replacing box_get with box_len because aggregate%box_get%0#0 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#0
debug: selected aggregate%len_u16%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%5#0
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%1#0, tmp%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 aggregate%val_as_bytes%1#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%2#1
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%0#0, tmp%2#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract3 aggregate%val_as_bytes%0#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%9#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(uint8[4])%0#0, encoded_array%0#0
debug: selected aggregate%head%3#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%2#0, storage_value%1#0
debug: selected aggregate%box_get%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#0
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%4#0, storage_value%2#0
debug: selected aggregate%box_get%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#0
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%6#0, storage_value%3#0
debug: selected aggregate%box_get%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%3#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x01) to 0x0001
debug: Simplified (concat 0x0001 0x02) to 0x000102
debug: Simplified (concat 0x000102 0x03) to 0x00010203
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: Simplified (extract3 aggregate%box_get%0#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%box_get%0#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%2#0 1u 1u) // on error: index access is out of bounds to ((extract 1 1) aggregate%box_get%2#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%4#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%box_get%4#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%6#0 3u 1u) // on error: index access is out of bounds to ((extract 3 1) aggregate%box_get%6#0) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:381:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:382:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:383:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:384:16 debug: box_key 0x64 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:381:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:382:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:383:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:384:16 debug: replacing box read with cached value for key: (rw,0x64)
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:442:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:487:12 debug: box_key encoded_value%5#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:443:16 debug: replacing box read with cached value for key: (len,box_0#0)
box_storage/contract.py:443:52 debug: replacing box read with cached value for key: (len,box_0#0)
box_storage/contract.py:444:16 debug: replacing box read with cached value for key: (len,box_0#0)
box_storage/contract.py:487:12 debug: replacing box read with cached value for key: (rw,encoded_value%5#0)
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%0#0
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%2#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0, tmp%2#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.200.ssa.array.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, box%box_extract%1#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: value%2#0, tmp%16#0, tmp%23#0, tmp%32#0
debug: selected value%2#0 from equivalence set
debug: Found equivalence set: check%2#0, tmp%17#0, tmp%24#0, tmp%33#0
debug: selected check%2#0 from equivalence set
debug: Found equivalence set: value%3#0, tmp%43#0, tmp%51#0, tmp%61#0, tmp%70#0
debug: selected value%3#0 from equivalence set
debug: Found equivalence set: check%3#0, tmp%44#0, tmp%52#0, tmp%62#0, tmp%71#0
debug: selected check%3#0 from equivalence set
debug: Copy propagation made 15 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%array_length%1#0: uint64 = (btoi box%box_extract%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:106:15-38, ir_type=uint64, name='box%array_length%0', version=0)]
debug: Found equivalence set: box%array_length%0#0, box%array_length%1#0
debug: selected box%array_length%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%3#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let a#0: uint64 = (btoi maybe_value%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:159:15-49, ir_type=uint64, name='maybe_value_converted%0', version=0)]
debug: Found equivalence set: maybe_value_converted%0#0, a#0
debug: selected a#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%set_bit%2#0, aggregate%head%0#0
debug: selected aggregate%set_bit%2#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%concat%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%4#0, box%box_extract%7#0
debug: selected box%box_extract%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%array_length%4#0: uint64 = (btoi box%box_extract%4#0) with copy of existing registers [Register(source_location=box_storage/contract.py:226:12-52, ir_type=uint64, name='box%array_length%2', version=0)]
debug: Found equivalence set: box%array_length%2#0, box%array_length%4#0
debug: selected box%array_length%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%bitlen%0#0
debug: Removing unused variable aggregate%no_overflow%0#0
debug: Removing unused variable aggregate%uint16%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, box%box_extract%2#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, box%box_extract%3#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let values%2#0: uint64 = (btoi box%box_extract%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:291:15-46, ir_type=uint64, name='values%0', version=0)]
debug: Replacing redundant declaration let values%3#0: uint64 = (btoi box%box_extract%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:292:15-46, ir_type=uint64, name='values%1', version=0)]
debug: Found equivalence set: values%0#0, values%2#0
debug: selected values%0#0 from equivalence set
debug: Found equivalence set: values%1#0, values%3#0
debug: selected values%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%head%2#0
debug: Removing unused variable aggregate%head%3#0
debug: Removing unused variable aggregate%box_get%0#0
debug: Removing unused variable aggregate%box_get%1#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%box_get%2#0
debug: Removing unused variable aggregate%box_get%3#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%box_get%4#0
debug: Removing unused variable aggregate%box_get%5#0
debug: Removing unused variable aggregate%bytes_offset%2#0
debug: Removing unused variable aggregate%box_get%6#0
debug: Removing unused variable aggregate%box_get%7#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) 0x00010203) // on error: index access is out of bounds to 0x00
debug: Simplified (b== 0x00 0x00) to 1u
debug: Simplified ((extract 1 1) 0x00010203) // on error: index access is out of bounds to 0x01
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified ((extract 2 1) 0x00010203) // on error: index access is out of bounds to 0x02
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified ((extract 3 1) 0x00010203) // on error: index access is out of bounds to 0x03
debug: Simplified (b== 0x03 0x03) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: value%0#0, value%1#0, value%2#0, value%3#0
debug: selected value%0#0 from equivalence set
debug: Found equivalence set: check%0#0, check%1#0, check%2#0, check%3#0
debug: selected check%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%box_get%0#0
debug: Removing unused variable aggregate%box_get%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== value%0#0 value%0#0) to 1u
debug: Simplified (== "hello" "hello") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: bool = (== value%0#0 6u) with copy of existing registers [Register(source_location=box_storage/contract.py:442:15-69, ir_type=bool, name='tmp%1', version=0)]
debug: Found equivalence set: tmp%1#0, tmp%4#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%1#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.201.ssa.array.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== box%array_length%0#0 box%array_length%0#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable tmp%0#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%9#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.202.ssa.array.opt.ir
debug: Begin optimization pass 4/100
debug: marking trivial method examples.box_storage.contract.BoxContract.arc4_box[routing] as inlineable
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:376:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box[routing] in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Merged linear block@43 into block@34
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@44
debug: branching to block@44 will be replaced with block@41
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%array_length%0#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable box%box_extract%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.203.ssa.array.opt.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init, []
box_storage/contract.py:95:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_boxes[routing], []
box_storage/contract.py:142:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_many_ints[routing], []
box_storage/contract.py:146:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_many_ints[routing], []
box_storage/contract.py:154:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_boxes[routing], []
box_storage/contract.py:167:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing], []
box_storage/contract.py:173:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.read_boxes[routing], []
box_storage/contract.py:182:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.boxes_exist[routing], []
box_storage/contract.py:186:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing], []
box_storage/contract.py:199:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing], []
box_storage/contract.py:231:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing], []
box_storage/contract.py:253:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_nested_struct[routing], []
box_storage/contract.py:267:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.nested_write[routing], []
box_storage/contract.py:277:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.nested_read[routing], []
box_storage/contract.py:289:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing], []
box_storage/contract.py:304:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_bool[routing], []
box_storage/contract.py:308:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_bools[routing], []
box_storage/contract.py:318:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_dynamic_box[routing], []
box_storage/contract.py:326:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.append_dynamic_box[routing], []
box_storage/contract.py:341:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing], []
box_storage/contract.py:352:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing], []
box_storage/contract.py:359:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.write_dynamic_box[routing], []
box_storage/contract.py:363:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing], []
box_storage/contract.py:367:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.slice_box[routing], []
box_storage/contract.py:386:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.test_box_ref[routing], []
box_storage/contract.py:434:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_test[routing], []
box_storage/contract.py:458:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_set[routing], []
box_storage/contract.py:462:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_get[routing], []
box_storage/contract.py:466:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_del[routing], []
box_storage/contract.py:470:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_exists[routing], []
debug: Slot allocation not required
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: splitting critical edge block@4->block@41
debug: Replaced predecessor block@4 with block@43 in block@41
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@43
debug: branching to block@43 will be replaced with block@41
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_boxes[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_many_ints[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_many_ints[routing] using strategy 'root_operand'
debug: Coalescing total#0 with [total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 13 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_boxes[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.read_boxes[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.boxes_exist[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing arr_len#0 with [arr_len#1, arr_len#2]
debug: Coalescing tmp%3#2 with [tmp%3#5, tmp%3#4, tmp%3#6, tmp%3#3]
debug: Coalescing i#0 with [i#1, i#2]
debug: Coalescing resulted in 24 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing tmp%3#2 with [tmp%3#3]
debug: Coalescing resulted in 3 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_nested_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.nested_write[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.nested_read[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing total#0 with [total#1, total#2, total#3, total#4]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing val#0 with [val#1]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_bool[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: splitting critical edge block@2->block@9
debug: Replaced predecessor block@2 with block@10 in block@9
debug: splitting critical edge block@3->block@5
debug: Replaced predecessor block@3 with block@11 in block@5
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_bools[routing] using strategy 'root_operand'
debug: Coalescing total#0 with [total#1, total#4, total#3, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Performing post-SSA optimizations at level 1
debug: Removing jump block block@10
debug: Removing jump block block@11
debug: Removing jump block block@6
debug: branching to block@10 will be replaced with block@9
debug: branching to block@11 will be replaced with block@5
debug: branching to block@6 will be replaced with block@9
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.append_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing arr_len#0 with [arr_len#1, arr_len#2]
debug: Coalescing i#0 with [i#1, i#2]
debug: Coalescing resulted in 14 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing total#0 with [total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 13 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.write_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.slice_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.test_box_ref[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_test[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_set[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_get[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_del[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_exists[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Performing post-SSA optimizations at level 1
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_abi_routing@4.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_abi_routing@4.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_abi_routing@4.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_abi_routing@4.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_abi_routing@4.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_abi_routing@4.ops[52]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main___algopy_default_create@42.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main___algopy_default_create@42.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@42.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@42.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@42.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@42.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@42.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@42.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@42.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@42.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted set_boxes_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced set_boxes_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted set_boxes_block@0.ops[60]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced set_boxes_block@0.ops[62]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted set_boxes_block@0.ops[65]: 'l-store-copy tmp%5#0 0'
debug: Replaced set_boxes_block@0.ops[67]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted set_boxes_block@0.ops[76]: 'l-store-copy value%0#0 0'
debug: Replaced set_boxes_block@0.ops[78]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted set_boxes_block@0.ops[81]: 'l-store-copy tmp%6#0 0'
debug: Replaced set_boxes_block@0.ops[83]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[95]: 'l-store-copy tmp%8#0 0'
debug: Replaced set_boxes_block@0.ops[97]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted set_boxes_block@0.ops[111]: 'l-store-copy tmp%10#0 0'
debug: Replaced set_boxes_block@0.ops[113]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted set_boxes_block@0.ops[125]: 'l-store-copy tmp%13#0 0'
debug: Replaced set_boxes_block@0.ops[127]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted set_boxes_block@0.ops[140]: 'l-store-copy tmp%15#0 0'
debug: Replaced set_boxes_block@0.ops[142]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted set_boxes_block@0.ops[165]: 'l-store-copy tmp%22#0 0'
debug: Replaced set_boxes_block@0.ops[167]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes_block@0.ops[208]: 'l-store-copy tmp%31#0 0'
debug: Replaced set_boxes_block@0.ops[210]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted set_boxes_block@0.ops[243]: 'l-store-copy tmp%39#0 0'
debug: Replaced set_boxes_block@0.ops[245]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted set_boxes_block@0.ops[258]: 'l-store-copy tmp%42#0 0'
debug: Replaced set_boxes_block@0.ops[260]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted set_boxes_block@0.ops[283]: 'l-store-copy tmp%50#0 0'
debug: Replaced set_boxes_block@0.ops[285]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted set_boxes_block@0.ops[326]: 'l-store-copy tmp%60#0 0'
debug: Replaced set_boxes_block@0.ops[328]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted set_boxes_block@0.ops[361]: 'l-store-copy tmp%69#0 0'
debug: Replaced set_boxes_block@0.ops[363]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted set_boxes_block@0.ops[396]: 'l-store-copy tmp%78#0 0'
debug: Replaced set_boxes_block@0.ops[398]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted set_boxes_block@0.ops[403]: 'l-store-copy value%4#0 0'
debug: Replaced set_boxes_block@0.ops[405]: 'v-load value%4#0' with 'l-load value%4#0'
debug: Inserted set_boxes_block@0.ops[408]: 'l-store-copy tmp%79#0 0'
debug: Replaced set_boxes_block@0.ops[410]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted set_boxes_block@0.ops[12]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced set_boxes_block@0.ops[15]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted set_boxes_block@0.ops[55]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced set_boxes_block@0.ops[58]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted set_boxes_block@0.ops[71]: 'l-store-copy encoded_value%2#0 0'
debug: Replaced set_boxes_block@0.ops[74]: 'v-load encoded_value%2#0' with 'l-load encoded_value%2#0'
debug: Inserted set_boxes_block@0.ops[94]: 'l-store-copy tmp%7#0 0'
debug: Replaced set_boxes_block@0.ops[97]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted set_boxes_block@0.ops[105]: 'l-store-copy check%2#0 1'
debug: Replaced set_boxes_block@0.ops[108]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted set_boxes_block@0.ops[112]: 'l-store-copy tmp%9#0 0'
debug: Replaced set_boxes_block@0.ops[115]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[127]: 'l-store-copy tmp%12#0 0'
debug: Replaced set_boxes_block@0.ops[130]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[143]: 'l-store-copy extract%0#0 0'
debug: Replaced set_boxes_block@0.ops[146]: 'v-load extract%0#0' with 'l-load extract%0#0'
debug: Inserted set_boxes_block@0.ops[155]: 'l-store-copy tmp%18#0 0'
debug: Replaced set_boxes_block@0.ops[158]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted set_boxes_block@0.ops[165]: 'l-store-copy tmp%21#0 0'
debug: Replaced set_boxes_block@0.ops[168]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted set_boxes_block@0.ops[171]: 'l-store-copy extract%1#0 0'
debug: Replaced set_boxes_block@0.ops[174]: 'v-load extract%1#0' with 'l-load extract%1#0'
debug: Inserted set_boxes_block@0.ops[188]: 'l-store-copy tmp%26#0 0'
debug: Replaced set_boxes_block@0.ops[191]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted set_boxes_block@0.ops[207]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced set_boxes_block@0.ops[210]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted set_boxes_block@0.ops[217]: 'l-store-copy tmp%30#0 0'
debug: Replaced set_boxes_block@0.ops[220]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted set_boxes_block@0.ops[253]: 'l-store-copy tmp%38#0 0'
debug: Replaced set_boxes_block@0.ops[256]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted set_boxes_block@0.ops[269]: 'l-store-copy extract%2#0 0'
debug: Replaced set_boxes_block@0.ops[272]: 'v-load extract%2#0' with 'l-load extract%2#0'
debug: Inserted set_boxes_block@0.ops[281]: 'l-store-copy tmp%45#0 0'
debug: Replaced set_boxes_block@0.ops[284]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted set_boxes_block@0.ops[291]: 'l-store-copy tmp%49#0 0'
debug: Replaced set_boxes_block@0.ops[294]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted set_boxes_block@0.ops[297]: 'l-store-copy extract%3#0 0'
debug: Replaced set_boxes_block@0.ops[300]: 'v-load extract%3#0' with 'l-load extract%3#0'
debug: Inserted set_boxes_block@0.ops[314]: 'l-store-copy tmp%54#0 0'
debug: Replaced set_boxes_block@0.ops[317]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted set_boxes_block@0.ops[333]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced set_boxes_block@0.ops[336]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted set_boxes_block@0.ops[343]: 'l-store-copy tmp%59#0 0'
debug: Replaced set_boxes_block@0.ops[346]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted set_boxes_block@0.ops[379]: 'l-store-copy tmp%68#0 0'
debug: Replaced set_boxes_block@0.ops[382]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted set_boxes_block@0.ops[415]: 'l-store-copy tmp%77#0 0'
debug: Replaced set_boxes_block@0.ops[418]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted set_boxes_block@0.ops[44]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced set_boxes_block@0.ops[48]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted set_boxes_block@0.ops[58]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced set_boxes_block@0.ops[62]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted set_boxes_block@0.ops[184]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes_block@0.ops[187]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[186]: 'l-store-copy tmp%25#0 1'
debug: Replaced set_boxes_block@0.ops[190]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted set_boxes_block@0.ops[197]: 'l-store-copy tmp%27#0 0'
debug: Replaced set_boxes_block@0.ops[201]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted set_boxes_block@0.ops[207]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced set_boxes_block@0.ops[211]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted set_boxes_block@0.ops[218]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced set_boxes_block@0.ops[222]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted set_boxes_block@0.ops[235]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes_block@0.ops[238]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[237]: 'l-store-copy tmp%34#0 1'
debug: Replaced set_boxes_block@0.ops[241]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted set_boxes_block@0.ops[243]: 'l-store-copy tmp%35#0 0'
debug: Replaced set_boxes_block@0.ops[247]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted set_boxes_block@0.ops[253]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced set_boxes_block@0.ops[257]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted set_boxes_block@0.ops[259]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced set_boxes_block@0.ops[263]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted set_boxes_block@0.ops[320]: 'l-store-copy value%3#0 1'
debug: Replaced set_boxes_block@0.ops[323]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[322]: 'l-store-copy tmp%53#0 1'
debug: Replaced set_boxes_block@0.ops[326]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted set_boxes_block@0.ops[333]: 'l-store-copy tmp%55#0 0'
debug: Replaced set_boxes_block@0.ops[337]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted set_boxes_block@0.ops[343]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced set_boxes_block@0.ops[347]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted set_boxes_block@0.ops[354]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced set_boxes_block@0.ops[358]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted set_boxes_block@0.ops[371]: 'l-store-copy value%3#0 1'
debug: Replaced set_boxes_block@0.ops[374]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[373]: 'l-store-copy tmp%63#0 1'
debug: Replaced set_boxes_block@0.ops[377]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted set_boxes_block@0.ops[379]: 'l-store-copy tmp%64#0 0'
debug: Replaced set_boxes_block@0.ops[383]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted set_boxes_block@0.ops[389]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced set_boxes_block@0.ops[393]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted set_boxes_block@0.ops[395]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced set_boxes_block@0.ops[399]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted set_boxes_block@0.ops[412]: 'l-store-copy value%3#0 1'
debug: Replaced set_boxes_block@0.ops[415]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[414]: 'l-store-copy tmp%72#0 1'
debug: Replaced set_boxes_block@0.ops[418]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted set_boxes_block@0.ops[420]: 'l-store-copy tmp%73#0 0'
debug: Replaced set_boxes_block@0.ops[424]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted set_boxes_block@0.ops[430]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced set_boxes_block@0.ops[434]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted set_boxes_block@0.ops[436]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced set_boxes_block@0.ops[440]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted set_boxes_block@0.ops[93]: 'l-store-copy value%1#0 0'
debug: Replaced set_boxes_block@0.ops[99]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted set_boxes_block@0.ops[127]: 'l-store-copy value%3#0 0'
debug: Replaced set_boxes_block@0.ops[133]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[144]: 'l-store-copy tmp%14#0 0'
debug: Replaced set_boxes_block@0.ops[150]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted set_boxes_block@0.ops[209]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes_block@0.ops[214]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[215]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes_block@0.ops[220]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[257]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes_block@0.ops[262]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[284]: 'l-store-copy tmp%40#0 0'
debug: Replaced set_boxes_block@0.ops[290]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted set_boxes_block@0.ops[349]: 'l-store-copy tmp%12#0 1'
debug: Replaced set_boxes_block@0.ops[354]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[355]: 'l-store-copy tmp%12#0 2'
debug: Replaced set_boxes_block@0.ops[360]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[397]: 'l-store-copy tmp%12#0 1'
debug: Replaced set_boxes_block@0.ops[402]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[439]: 'l-store-copy tmp%12#0 1'
debug: Replaced set_boxes_block@0.ops[444]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[5]: 'l-store-copy a#0 0'
debug: Replaced set_boxes_block@0.ops[11]: 'v-load a#0' with 'l-load a#0'
debug: Inserted set_boxes_block@0.ops[32]: 'l-store-copy tmp%0#1 0'
debug: Replaced set_boxes_block@0.ops[38]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted set_boxes_block@0.ops[194]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes_block@0.ops[200]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[335]: 'l-store-copy value%3#0 1'
debug: Replaced set_boxes_block@0.ops[341]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[112]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes_block@0.ops[120]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[23]: 'l-store-copy b#0 1'
debug: Replaced set_boxes_block@0.ops[31]: 'v-load b#0' with 'l-load b#0'
debug: Inserted set_boxes_block@0.ops[170]: 'l-store-copy tmp%19#0 0'
debug: Replaced set_boxes_block@0.ops[183]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted set_boxes_block@0.ops[312]: 'l-store-copy tmp%46#0 0'
debug: Replaced set_boxes_block@0.ops[325]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted set_boxes_block@0.ops[8]: 'l-store-copy b#0 1'
debug: Replaced set_boxes_block@0.ops[23]: 'v-load b#0' with 'l-load b#0'
debug: Inserted set_boxes_block@0.ops[261]: 'l-store-copy tmp%37#0 0'
debug: Replaced set_boxes_block@0.ops[281]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted set_boxes_block@0.ops[404]: 'l-store-copy tmp%66#0 0'
debug: Replaced set_boxes_block@0.ops[424]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted set_boxes_block@0.ops[447]: 'l-store-copy tmp%75#0 0'
debug: Replaced set_boxes_block@0.ops[467]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted set_boxes_block@0.ops[11]: 'l-store-copy c#0 2'
debug: Replaced set_boxes_block@0.ops[31]: 'v-load c#0' with 'l-load c#0'
debug: Inserted set_boxes_block@0.ops[214]: 'l-store-copy tmp%29#0 0'
debug: Replaced set_boxes_block@0.ops[240]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted set_boxes_block@0.ops[358]: 'l-store-copy tmp%57#0 0'
debug: Replaced set_boxes_block@0.ops[384]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted set_boxes_block@0.ops[153]: 'l-store-copy c#0 1'
debug: Replaced set_boxes_block@0.ops[180]: 'v-load c#0' with 'l-load c#0'
debug: Inserted set_boxes_block@0.ops[165]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes_block@0.ops[195]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[310]: 'l-store-copy value%3#0 0'
debug: Replaced set_boxes_block@0.ops[340]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[120]: 'l-store-copy c#0 1'
debug: Replaced set_boxes_block@0.ops[153]: 'v-load c#0' with 'l-load c#0'
debug: Inserted set_boxes_block@0.ops[233]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes_block@0.ops[270]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[379]: 'l-store-copy tmp%12#0 2'
debug: Replaced set_boxes_block@0.ops[416]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[423]: 'l-store-copy tmp%12#0 3'
debug: Replaced set_boxes_block@0.ops[460]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[404]: 'l-store-copy value%3#0 2'
debug: Replaced set_boxes_block@0.ops[443]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[125]: 'l-store-copy value%2#0 2'
debug: Replaced set_boxes_block@0.ops[166]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[179]: 'l-store-copy tmp%9#0 3'
debug: Replaced set_boxes_block@0.ops[222]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[211]: 'l-store-copy value%2#0 2'
debug: Replaced set_boxes_block@0.ops[255]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[242]: 'l-store-copy c#0 4'
debug: Replaced set_boxes_block@0.ops[285]: 'v-load c#0' with 'l-load c#0'
debug: Inserted set_boxes_block@0.ops[328]: 'l-store-copy tmp%12#0 2'
debug: Replaced set_boxes_block@0.ops[371]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[360]: 'l-store-copy value%3#0 2'
debug: Replaced set_boxes_block@0.ops[404]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[391]: 'l-store-copy tmp%0#1 4'
debug: Replaced set_boxes_block@0.ops[436]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted set_boxes_block@0.ops[437]: 'l-store-copy tmp%0#1 4'
debug: Replaced set_boxes_block@0.ops[480]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted set_boxes_block@0.ops[127]: 'l-store-copy tmp%9#0 3'
debug: Replaced set_boxes_block@0.ops[179]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[186]: 'l-store-copy c#0 4'
debug: Replaced set_boxes_block@0.ops[243]: 'v-load c#0' with 'l-load c#0'
debug: Inserted set_boxes_block@0.ops[336]: 'l-store-copy tmp%0#1 4'
debug: Replaced set_boxes_block@0.ops[393]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted set_boxes_block@0.ops[34]: 'l-store-copy b#0 0'
debug: Replaced set_boxes_block@0.ops[101]: 'v-load b#0' with 'l-load b#0'
debug: Inserted set_boxes_block@0.ops[32]: 'l-store-copy c#0 2'
debug: Replaced set_boxes_block@0.ops[121]: 'v-load c#0' with 'l-load c#0'
debug: Inserted set_boxes_block@0.ops[44]: 'l-store-copy tmp%0#1 3'
debug: Replaced set_boxes_block@0.ops[141]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted set_boxes_block@0.ops[146]: 'l-store-copy value%3#0 4'
debug: Replaced set_boxes_block@0.ops[321]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[148]: 'l-store-copy tmp%12#0 5'
debug: Replaced set_boxes_block@0.ops[334]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[142]: 'l-store-copy tmp%0#1 4'
debug: Replaced set_boxes_block@0.ops[341]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted set_boxes_block@0.ops[104]: 'l-store-copy b#0 3'
debug: Replaced set_boxes_block@0.ops[313]: 'v-load b#0' with 'l-load b#0'
debug: Inserted set_many_ints_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced set_many_ints_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted set_many_ints_block@0.ops[11]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced set_many_ints_block@0.ops[14]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted set_many_ints_block@0.ops[5]: 'l-store-copy index#0 0'
debug: Replaced set_many_ints_block@0.ops[9]: 'v-load index#0' with 'l-load index#0'
debug: Inserted set_many_ints_block@0.ops[8]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 1'
debug: Replaced set_many_ints_block@0.ops[17]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted sum_many_ints_while_top@7.ops[5]: 'l-store-copy tmp%2#1 0'
debug: Replaced sum_many_ints_while_top@7.ops[7]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted sum_many_ints_while_top@7.ops[1]: 'l-store-copy tmp%1#1 0'
debug: Replaced sum_many_ints_while_top@7.ops[4]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted sum_many_ints_after_while@12.ops[4]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced sum_many_ints_after_while@12.ops[7]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted sum_many_ints_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_many_ints_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_many_ints_for_body@3.ops[8]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced sum_many_ints_for_body@3.ops[10]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted sum_many_ints_for_body@3.ops[3]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced sum_many_ints_for_body@3.ops[6]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted sum_many_ints_for_body@3.ops[13]: 'l-store-copy val#0 0'
debug: Replaced sum_many_ints_for_body@3.ops[16]: 'v-load val#0' with 'l-load val#0'
debug: Inserted sum_many_ints_for_body@3.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced sum_many_ints_for_body@3.ops[20]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted sum_many_ints_after_for@5.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_many_ints_after_for@5.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_many_ints_after_for@5.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_many_ints_after_for@5.ops[5]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted delete_boxes_block@0.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced delete_boxes_block@0.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted delete_boxes_block@0.ops[21]: 'l-store-copy state_get%0#0 0'
debug: Replaced delete_boxes_block@0.ops[23]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted delete_boxes_block@0.ops[26]: 'l-store-copy tmp%0#0 0'
debug: Replaced delete_boxes_block@0.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted delete_boxes_block@0.ops[38]: 'l-store-copy state_get%1#0 0'
debug: Replaced delete_boxes_block@0.ops[40]: 'v-load state_get%1#0' with 'l-load state_get%1#0'
debug: Inserted delete_boxes_block@0.ops[42]: 'l-store-copy tmp%2#0 0'
debug: Replaced delete_boxes_block@0.ops[44]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted delete_boxes_block@0.ops[47]: 'l-store-copy tmp%3#0 0'
debug: Replaced delete_boxes_block@0.ops[49]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted delete_boxes_block@0.ops[59]: 'l-store-copy state_get%2#0 0'
debug: Replaced delete_boxes_block@0.ops[61]: 'v-load state_get%2#0' with 'l-load state_get%2#0'
debug: Inserted delete_boxes_block@0.ops[64]: 'l-store-copy tmp%6#0 0'
debug: Replaced delete_boxes_block@0.ops[66]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted delete_boxes_block@0.ops[70]: 'l-store-copy tmp%7#0 0'
debug: Replaced delete_boxes_block@0.ops[72]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted delete_boxes_block@0.ops[76]: 'l-store-copy tmp%8#0 0'
debug: Replaced delete_boxes_block@0.ops[78]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted delete_boxes_block@0.ops[16]: 'l-store-copy a#0 0'
debug: Replaced delete_boxes_block@0.ops[19]: 'v-load a#0' with 'l-load a#0'
debug: Inserted delete_boxes_block@0.ops[34]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced delete_boxes_block@0.ops[37]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted delete_boxes_block@0.ops[56]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced delete_boxes_block@0.ops[59]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted delete_boxes_block@0.ops[33]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced delete_boxes_block@0.ops[39]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted delete_boxes_block@0.ops[56]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced delete_boxes_block@0.ops[62]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted delete_boxes_block@0.ops[11]: 'l-store-copy a_exists#0 1'
debug: Replaced delete_boxes_block@0.ops[21]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted delete_boxes_block@0.ops[22]: 'l-store-copy a_exists#0 2'
debug: Replaced delete_boxes_block@0.ops[75]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted delete_boxes_block@0.ops[21]: 'l-store-copy a#0 2'
debug: Replaced delete_boxes_block@0.ops[82]: 'v-load a#0' with 'l-load a#0'
debug: Inserted indirect_extract_and_replace_block@0.ops[4]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced indirect_extract_and_replace_block@0.ops[6]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted indirect_extract_and_replace_block@0.ops[8]: 'l-store-copy values%0#0 0'
debug: Replaced indirect_extract_and_replace_block@0.ops[10]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted indirect_extract_and_replace_block@0.ops[13]: 'l-store-copy tmp%0#0 0'
debug: Replaced indirect_extract_and_replace_block@0.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted indirect_extract_and_replace_block@0.ops[17]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced indirect_extract_and_replace_block@0.ops[21]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted read_boxes_block@0.ops[8]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced read_boxes_block@0.ops[10]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted read_boxes_block@0.ops[13]: 'l-store-copy tmp%0#2 0'
debug: Replaced read_boxes_block@0.ops[15]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted read_boxes_block@0.ops[38]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced read_boxes_block@0.ops[40]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted read_boxes_block@0.ops[48]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced read_boxes_block@0.ops[50]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted read_boxes_block@0.ops[52]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced read_boxes_block@0.ops[54]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted read_boxes_block@0.ops[56]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced read_boxes_block@0.ops[58]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted read_boxes_block@0.ops[72]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced read_boxes_block@0.ops[74]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted read_boxes_block@0.ops[76]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced read_boxes_block@0.ops[78]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted read_boxes_block@0.ops[91]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced read_boxes_block@0.ops[93]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted read_boxes_block@0.ops[96]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced read_boxes_block@0.ops[98]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted read_boxes_block@0.ops[105]: 'l-store-copy tmp%5#0 0'
debug: Replaced read_boxes_block@0.ops[107]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted read_boxes_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced read_boxes_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted read_boxes_block@0.ops[22]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced read_boxes_block@0.ops[25]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted read_boxes_block@0.ops[32]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced read_boxes_block@0.ops[35]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted read_boxes_block@0.ops[71]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced read_boxes_block@0.ops[74]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted read_boxes_block@0.ops[84]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced read_boxes_block@0.ops[87]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted read_boxes_block@0.ops[92]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced read_boxes_block@0.ops[95]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted read_boxes_block@0.ops[107]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced read_boxes_block@0.ops[110]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted read_boxes_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced read_boxes_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted read_boxes_block@0.ops[25]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced read_boxes_block@0.ops[29]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted read_boxes_block@0.ops[91]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced read_boxes_block@0.ops[97]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted read_boxes_block@0.ops[66]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced read_boxes_block@0.ops[72]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted read_boxes_block@0.ops[52]: 'l-store-copy tmp%2#1 0'
debug: Replaced read_boxes_block@0.ops[65]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted read_boxes_block@0.ops[50]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced read_boxes_block@0.ops[70]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted read_boxes_block@0.ops[73]: 'l-store-copy aggregate%head%1#0 1'
debug: Replaced read_boxes_block@0.ops[92]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted read_boxes_block@0.ops[31]: 'l-store-copy tmp%2#1 0'
debug: Replaced read_boxes_block@0.ops[53]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted read_boxes_block@0.ops[20]: 'l-store-copy tmp%1#1 0'
debug: Replaced read_boxes_block@0.ops[50]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted read_boxes_block@0.ops[78]: 'l-store-copy aggregate%encoded_value%0#0 1'
debug: Replaced read_boxes_block@0.ops[110]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted read_boxes_block@0.ops[49]: 'l-store-copy values%0#0 2'
debug: Replaced read_boxes_block@0.ops[101]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted read_boxes_block@0.ops[38]: 'l-store-copy aggregate%box_get%4#0 3'
debug: Replaced read_boxes_block@0.ops[117]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted boxes_exist_block@0.ops[20]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced boxes_exist_block@0.ops[22]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted boxes_exist_block@0.ops[26]: 'l-store-copy aggregate%set_bit%0#0 0'
debug: Replaced boxes_exist_block@0.ops[28]: 'v-load aggregate%set_bit%0#0' with 'l-load aggregate%set_bit%0#0'
debug: Inserted boxes_exist_block@0.ops[32]: 'l-store-copy aggregate%set_bit%1#0 0'
debug: Replaced boxes_exist_block@0.ops[34]: 'v-load aggregate%set_bit%1#0' with 'l-load aggregate%set_bit%1#0'
debug: Inserted boxes_exist_block@0.ops[42]: 'l-store-copy tmp%5#0 0'
debug: Replaced boxes_exist_block@0.ops[44]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted boxes_exist_block@0.ops[38]: 'l-store-copy aggregate%set_bit%2#0 0'
debug: Replaced boxes_exist_block@0.ops[41]: 'v-load aggregate%set_bit%2#0' with 'l-load aggregate%set_bit%2#0'
debug: Inserted boxes_exist_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced boxes_exist_block@0.ops[19]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted boxes_exist_block@0.ops[7]: 'l-store-copy maybe_exists%1#0 2'
debug: Replaced boxes_exist_block@0.ops[26]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted boxes_exist_block@0.ops[12]: 'l-store-copy maybe_exists%2#0 3'
debug: Replaced boxes_exist_block@0.ops[33]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted boxes_exist_block@0.ops[17]: 'l-store-copy maybe_exists%3#0 4'
debug: Replaced boxes_exist_block@0.ops[40]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[11]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[13]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[23]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[25]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[22]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[22]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[30]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[36]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced create_dynamic_arr_struct_block@0.ops[10]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted create_dynamic_arr_struct_block@0.ops[9]: 'l-store-copy tmp%2#0 1'
debug: Replaced create_dynamic_arr_struct_block@0.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[10]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[12]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[14]: 'l-store-copy values%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[16]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy tmp%0#1 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[21]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted append_dynamic_arr_struct_block@0.ops[27]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[29]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[36]: 'l-store-copy box%box_extract%2#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[38]: 'v-load box%box_extract%2#0' with 'l-load box%box_extract%2#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[45]: 'l-store-copy box%box_extract%3#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[47]: 'v-load box%box_extract%3#0' with 'l-load box%box_extract%3#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[53]: 'l-store-copy arr_size#1 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[55]: 'v-load arr_size#1' with 'l-load arr_size#1'
debug: Inserted append_dynamic_arr_struct_block@0.ops[58]: 'l-store-copy tmp%3#2 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[60]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted append_dynamic_arr_struct_block@0.ops[82]: 'l-store-copy tmp%3#2 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[84]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted append_dynamic_arr_struct_block@0.ops[91]: 'l-store-copy tmp%6#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[93]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[40]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[43]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[68]: 'l-store-copy tmp%1#1 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[71]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted append_dynamic_arr_struct_block@0.ops[73]: 'l-store-copy dyn_arr2_index#1 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[76]: 'v-load dyn_arr2_index#1' with 'l-load dyn_arr2_index#1'
debug: Inserted append_dynamic_arr_struct_block@0.ops[78]: 'l-store-copy tmp%3#2 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[81]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted append_dynamic_arr_struct_block@0.ops[99]: 'l-store-copy tmp%7#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[104]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[64]: 'l-store-copy head_and_dyn_arr#1 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[76]: 'v-load head_and_dyn_arr#1' with 'l-load head_and_dyn_arr#1'
debug: Inserted append_dynamic_arr_struct_block@0.ops[92]: 'l-store-copy tmp%5#1 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[104]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted append_dynamic_arr_struct_block@0.ops[50]: 'l-store-copy arr2_len#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[67]: 'v-load arr2_len#0' with 'l-load arr2_len#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[31]: 'l-store-copy arr_len#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[53]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[54]: 'l-store-copy arr_len#0 1'
debug: Replaced append_dynamic_arr_struct_block@0.ops[87]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[56]: 'l-store-copy times#0 3'
debug: Replaced append_dynamic_arr_struct_block@0.ops[98]: 'v-load times#0' with 'l-load times#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy times#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[56]: 'v-load times#0' with 'l-load times#0'
debug: Inserted append_dynamic_arr_struct_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced append_dynamic_arr_struct_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted append_dynamic_arr_struct_for_body@3.ops[6]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced append_dynamic_arr_struct_for_body@3.ops[9]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted append_dynamic_arr_struct_for_body@3.ops[11]: 'l-store-copy box%offset%5#0 0'
debug: Replaced append_dynamic_arr_struct_for_body@3.ops[14]: 'v-load box%offset%5#0' with 'l-load box%offset%5#0'
debug: Inserted append_dynamic_arr_struct_for_body@3.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced append_dynamic_arr_struct_for_body@3.ops[16]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted append_dynamic_arr_struct_for_body@3.ops[5]: 'l-store-copy arr_len#0 1'
debug: Replaced append_dynamic_arr_struct_for_body@3.ops[19]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted append_dynamic_arr_struct_for_body@3.ops[1]: 'l-store-copy i#0 0'
debug: Replaced append_dynamic_arr_struct_for_body@3.ops[24]: 'v-load i#0' with 'l-load i#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[2]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[4]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[6]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[8]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[11]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[13]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[25]: 'l-store-copy tmp%3#2 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[27]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[30]: 'l-store-copy tmp%3#2 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[32]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[35]: 'l-store-copy arr2_offset#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[37]: 'v-load arr2_offset#0' with 'l-load arr2_offset#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[39]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[41]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[43]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[45]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[48]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[50]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[63]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[65]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[67]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[69]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[72]: 'l-store-copy tmp%14#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[74]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[80]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[82]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[89]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[91]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[93]: 'l-store-copy box%array_length%3#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[95]: 'v-load box%array_length%3#0' with 'l-load box%array_length%3#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[97]: 'l-store-copy tmp%16#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[99]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[107]: 'l-store-copy tmp%3#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[109]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[84]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[87]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[104]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[107]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[17]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[21]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[55]: 'l-store-copy aggregate%uint16%1#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[59]: 'v-load aggregate%uint16%1#0' with 'l-load aggregate%uint16%1#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[16]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[44]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[55]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[1]: 'l-store-copy arr_len#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[25]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[75]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[108]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted append_dynamic_arr_struct_after_for@5.ops[26]: 'l-store-copy arr_len#0 0'
debug: Replaced append_dynamic_arr_struct_after_for@5.ops[77]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[10]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[12]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[14]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[16]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[24]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[26]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[33]: 'l-store-copy box%box_extract%2#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[35]: 'v-load box%box_extract%2#0' with 'l-load box%box_extract%2#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[41]: 'l-store-copy tmp%3#2 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[43]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[50]: 'l-store-copy tmp%3#2 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[52]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[58]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[60]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[62]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[64]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[67]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[69]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[80]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[82]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[84]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[86]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[89]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[91]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[128]: 'l-store-copy box%box_extract%3#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[130]: 'v-load box%box_extract%3#0' with 'l-load box%box_extract%3#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[132]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[134]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[140]: 'l-store-copy tmp%3#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[142]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[28]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[31]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[113]: 'l-store-copy tmp%1#1 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[116]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[118]: 'l-store-copy dyn_arr2_index#1 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[121]: 'v-load dyn_arr2_index#1' with 'l-load dyn_arr2_index#1'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[123]: 'l-store-copy size#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[126]: 'v-load size#0' with 'l-load size#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[140]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[143]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[74]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[78]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[97]: 'l-store-copy aggregate%uint16%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[101]: 'v-load aggregate%uint16%1#0' with 'l-load aggregate%uint16%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[106]: 'l-store-copy tmp%8#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[110]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[45]: 'l-store-copy tmp%3#2 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[49]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[63]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[74]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[87]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[98]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy times#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[18]: 'v-load times#0' with 'l-load times#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[114]: 'l-store-copy head_and_dyn_arr#0 2'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[128]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[41]: 'l-store-copy arr_len#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[60]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[20]: 'l-store-copy arr_len#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[41]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[60]: 'l-store-copy arr2_offset#0 1'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[86]: 'v-load arr2_offset#0' with 'l-load arr2_offset#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[51]: 'l-store-copy head_and_dyn_arr#0 2'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[117]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[40]: 'l-store-copy arr2_len#0 1'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[123]: 'v-load arr2_len#0' with 'l-load arr2_len#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy times#0 1'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[113]: 'v-load times#0' with 'l-load times#0'
debug: Inserted set_nested_struct_block@0.ops[1]: 'l-store-copy struct#0 0'
debug: Replaced set_nested_struct_block@0.ops[3]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted set_nested_struct_block@0.ops[6]: 'l-store-copy values%0#0 0'
debug: Replaced set_nested_struct_block@0.ops[8]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted set_nested_struct_block@0.ops[11]: 'l-store-copy struct_bytes#0 0'
debug: Replaced set_nested_struct_block@0.ops[13]: 'v-load struct_bytes#0' with 'l-load struct_bytes#0'
debug: Inserted set_nested_struct_block@0.ops[15]: 'l-store-copy struct_size#0 0'
debug: Replaced set_nested_struct_block@0.ops[18]: 'v-load struct_size#0' with 'l-load struct_size#0'
debug: Inserted set_nested_struct_block@0.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced set_nested_struct_block@0.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted set_nested_struct_block@0.ops[14]: 'l-store-copy struct_bytes#0 0'
debug: Replaced set_nested_struct_block@0.ops[33]: 'v-load struct_bytes#0' with 'l-load struct_bytes#0'
debug: Inserted nested_write_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced nested_write_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted nested_write_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced nested_write_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted nested_write_block@0.ops[19]: 'l-store-copy tmp%0#1 0'
debug: Replaced nested_write_block@0.ops[21]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted nested_write_block@0.ops[31]: 'l-store-copy tmp%1#1 0'
debug: Replaced nested_write_block@0.ops[33]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted nested_write_block@0.ops[40]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced nested_write_block@0.ops[42]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted nested_write_block@0.ops[48]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced nested_write_block@0.ops[50]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted nested_write_block@0.ops[64]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced nested_write_block@0.ops[66]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted nested_write_block@0.ops[77]: 'l-store-copy box%box_extract%2#0 0'
debug: Replaced nested_write_block@0.ops[79]: 'v-load box%box_extract%2#0' with 'l-load box%box_extract%2#0'
debug: Inserted nested_write_block@0.ops[85]: 'l-store-copy box%index_ok%1#0 0'
debug: Replaced nested_write_block@0.ops[87]: 'v-load box%index_ok%1#0' with 'l-load box%index_ok%1#0'
debug: Inserted nested_write_block@0.ops[108]: 'l-store-copy tmp%2#0 0'
debug: Replaced nested_write_block@0.ops[110]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted nested_write_block@0.ops[120]: 'l-store-copy tmp%3#0 0'
debug: Replaced nested_write_block@0.ops[122]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted nested_write_block@0.ops[132]: 'l-store-copy tmp%4#0 0'
debug: Replaced nested_write_block@0.ops[134]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted nested_write_block@0.ops[141]: 'l-store-copy box%box_extract%3#0 0'
debug: Replaced nested_write_block@0.ops[143]: 'v-load box%box_extract%3#0' with 'l-load box%box_extract%3#0'
debug: Inserted nested_write_block@0.ops[154]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced nested_write_block@0.ops[156]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted nested_write_block@0.ops[162]: 'l-store-copy box%index_ok%2#0 0'
debug: Replaced nested_write_block@0.ops[164]: 'v-load box%index_ok%2#0' with 'l-load box%index_ok%2#0'
debug: Inserted nested_write_block@0.ops[169]: 'l-store-copy box%add%4#0 0'
debug: Replaced nested_write_block@0.ops[171]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted nested_write_block@0.ops[179]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced nested_write_block@0.ops[181]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted nested_write_block@0.ops[187]: 'l-store-copy box%offset%17#0 0'
debug: Replaced nested_write_block@0.ops[189]: 'v-load box%offset%17#0' with 'l-load box%offset%17#0'
debug: Inserted nested_write_block@0.ops[197]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced nested_write_block@0.ops[199]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted nested_write_block@0.ops[205]: 'l-store-copy box%index_ok%3#0 0'
debug: Replaced nested_write_block@0.ops[207]: 'v-load box%index_ok%3#0' with 'l-load box%index_ok%3#0'
debug: Inserted nested_write_block@0.ops[212]: 'l-store-copy box%add%6#0 0'
debug: Replaced nested_write_block@0.ops[214]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted nested_write_block@0.ops[222]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced nested_write_block@0.ops[224]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted nested_write_block@0.ops[235]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced nested_write_block@0.ops[237]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted nested_write_block@0.ops[243]: 'l-store-copy box%index_ok%4#0 0'
debug: Replaced nested_write_block@0.ops[245]: 'v-load box%index_ok%4#0' with 'l-load box%index_ok%4#0'
debug: Inserted nested_write_block@0.ops[250]: 'l-store-copy box%add%8#0 0'
debug: Replaced nested_write_block@0.ops[252]: 'v-load box%add%8#0' with 'l-load box%add%8#0'
debug: Inserted nested_write_block@0.ops[44]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced nested_write_block@0.ops[47]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted nested_write_block@0.ops[56]: 'l-store-copy box%mul%0#0 0'
debug: Replaced nested_write_block@0.ops[59]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted nested_write_block@0.ops[61]: 'l-store-copy box%add%1#0 0'
debug: Replaced nested_write_block@0.ops[64]: 'v-load box%add%1#0' with 'l-load box%add%1#0'
debug: Inserted nested_write_block@0.ops[71]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced nested_write_block@0.ops[74]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted nested_write_block@0.ops[76]: 'l-store-copy box%offset%7#0 0'
debug: Replaced nested_write_block@0.ops[79]: 'v-load box%offset%7#0' with 'l-load box%offset%7#0'
debug: Inserted nested_write_block@0.ops[86]: 'l-store-copy box%btoi%2#0 0'
debug: Replaced nested_write_block@0.ops[89]: 'v-load box%btoi%2#0' with 'l-load box%btoi%2#0'
debug: Inserted nested_write_block@0.ops[102]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced nested_write_block@0.ops[105]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted nested_write_block@0.ops[107]: 'l-store-copy box%offset%8#0 0'
debug: Replaced nested_write_block@0.ops[110]: 'v-load box%offset%8#0' with 'l-load box%offset%8#0'
debug: Inserted nested_write_block@0.ops[153]: 'l-store-copy box%btoi%3#0 0'
debug: Replaced nested_write_block@0.ops[156]: 'v-load box%btoi%3#0' with 'l-load box%btoi%3#0'
debug: Inserted nested_write_block@0.ops[158]: 'l-store-copy box%offset%16#0 0'
debug: Replaced nested_write_block@0.ops[161]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted nested_write_block@0.ops[168]: 'l-store-copy box%btoi%4#0 0'
debug: Replaced nested_write_block@0.ops[171]: 'v-load box%btoi%4#0' with 'l-load box%btoi%4#0'
debug: Inserted nested_write_block@0.ops[185]: 'l-store-copy box%add%5#0 0'
debug: Replaced nested_write_block@0.ops[188]: 'v-load box%add%5#0' with 'l-load box%add%5#0'
debug: Inserted nested_write_block@0.ops[195]: 'l-store-copy box%btoi%5#0 0'
debug: Replaced nested_write_block@0.ops[198]: 'v-load box%btoi%5#0' with 'l-load box%btoi%5#0'
debug: Inserted nested_write_block@0.ops[205]: 'l-store-copy box%offset%18#0 0'
debug: Replaced nested_write_block@0.ops[208]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted nested_write_block@0.ops[215]: 'l-store-copy box%btoi%6#0 0'
debug: Replaced nested_write_block@0.ops[218]: 'v-load box%btoi%6#0' with 'l-load box%btoi%6#0'
debug: Inserted nested_write_block@0.ops[232]: 'l-store-copy box%add%7#0 0'
debug: Replaced nested_write_block@0.ops[235]: 'v-load box%add%7#0' with 'l-load box%add%7#0'
debug: Inserted nested_write_block@0.ops[242]: 'l-store-copy box%btoi%7#0 0'
debug: Replaced nested_write_block@0.ops[245]: 'v-load box%btoi%7#0' with 'l-load box%btoi%7#0'
debug: Inserted nested_write_block@0.ops[247]: 'l-store-copy box%offset%19#0 0'
debug: Replaced nested_write_block@0.ops[250]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted nested_write_block@0.ops[257]: 'l-store-copy box%btoi%8#0 0'
debug: Replaced nested_write_block@0.ops[260]: 'v-load box%btoi%8#0' with 'l-load box%btoi%8#0'
debug: Inserted nested_write_block@0.ops[274]: 'l-store-copy box%offset%20#0 0'
debug: Replaced nested_write_block@0.ops[277]: 'v-load box%offset%20#0' with 'l-load box%offset%20#0'
debug: Inserted nested_write_block@0.ops[23]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced nested_write_block@0.ops[27]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted nested_write_block@0.ops[121]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced nested_write_block@0.ops[125]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted nested_write_block@0.ops[134]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced nested_write_block@0.ops[138]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted nested_write_block@0.ops[10]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced nested_write_block@0.ops[15]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted nested_write_block@0.ops[12]: 'l-store-copy value#0 1'
debug: Replaced nested_write_block@0.ops[18]: 'v-load value#0' with 'l-load value#0'
debug: Inserted nested_write_block@0.ops[101]: 'l-store-copy box%add%2#0 0'
debug: Replaced nested_write_block@0.ops[108]: 'v-load box%add%2#0' with 'l-load box%add%2#0'
debug: Inserted nested_write_block@0.ops[50]: 'l-store-copy index#0 1'
debug: Replaced nested_write_block@0.ops[58]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[93]: 'l-store-copy index#0 1'
debug: Replaced nested_write_block@0.ops[105]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[19]: 'l-store-copy value#0 0'
debug: Replaced nested_write_block@0.ops[32]: 'v-load value#0' with 'l-load value#0'
debug: Inserted nested_write_block@0.ops[121]: 'l-store-copy value#0 0'
debug: Replaced nested_write_block@0.ops[134]: 'v-load value#0' with 'l-load value#0'
debug: Inserted nested_write_block@0.ops[135]: 'l-store-copy value#0 0'
debug: Replaced nested_write_block@0.ops[148]: 'v-load value#0' with 'l-load value#0'
debug: Inserted nested_write_block@0.ops[194]: 'l-store-copy box%add%4#0 0'
debug: Replaced nested_write_block@0.ops[209]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted nested_write_block@0.ops[242]: 'l-store-copy box%add%6#0 0'
debug: Replaced nested_write_block@0.ops[257]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted nested_write_block@0.ops[85]: 'l-store-copy box%offset%7#0 1'
debug: Replaced nested_write_block@0.ops[102]: 'v-load box%offset%7#0' with 'l-load box%offset%7#0'
debug: Inserted nested_write_block@0.ops[174]: 'l-store-copy box%offset%16#0 1'
debug: Replaced nested_write_block@0.ops[190]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted nested_write_block@0.ops[223]: 'l-store-copy box%offset%18#0 1'
debug: Replaced nested_write_block@0.ops[239]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted nested_write_block@0.ops[267]: 'l-store-copy box%offset%19#0 1'
debug: Replaced nested_write_block@0.ops[283]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted nested_write_block@0.ops[60]: 'l-store-copy index#0 1'
debug: Replaced nested_write_block@0.ops[95]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[234]: 'l-store-copy index#0 2'
debug: Replaced nested_write_block@0.ops[278]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[5]: 'l-store-copy index#0 0'
debug: Replaced nested_write_block@0.ops[51]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[186]: 'l-store-copy index#0 2'
debug: Replaced nested_write_block@0.ops[235]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[201]: 'l-store-copy box%mul%0#0 3'
debug: Replaced nested_write_block@0.ops[251]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted nested_write_block@0.ops[110]: 'l-store-copy index#0 1'
debug: Replaced nested_write_block@0.ops[186]: 'v-load index#0' with 'l-load index#0'
debug: Inserted nested_write_block@0.ops[40]: 'l-store-copy aggregate%val_as_bytes%1#0 1'
debug: Replaced nested_write_block@0.ops[123]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted nested_write_block@0.ops[34]: 'l-store-copy value#0 1'
debug: Replaced nested_write_block@0.ops[126]: 'v-load value#0' with 'l-load value#0'
debug: Inserted nested_write_block@0.ops[69]: 'l-store-copy box%mul%0#0 4'
debug: Replaced nested_write_block@0.ops[204]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted nested_write_block@0.ops[162]: 'l-store-copy aggregate%val_as_bytes%4#0 2'
debug: Replaced nested_write_block@0.ops[305]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted nested_write_block@0.ops[120]: 'l-store-copy box%element_offset%0#0 5'
debug: Replaced nested_write_block@0.ops[300]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted nested_read_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced nested_read_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted nested_read_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced nested_read_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted nested_read_block@0.ops[13]: 'l-store-copy reinterpret_Encoded(uint64)%2#0 0'
debug: Replaced nested_read_block@0.ops[15]: 'v-load reinterpret_Encoded(uint64)%2#0' with 'l-load reinterpret_Encoded(uint64)%2#0'
debug: Inserted nested_read_block@0.ops[22]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced nested_read_block@0.ops[24]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted nested_read_block@0.ops[31]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced nested_read_block@0.ops[33]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted nested_read_block@0.ops[40]: 'l-store-copy box%box_extract%2#0 0'
debug: Replaced nested_read_block@0.ops[42]: 'v-load box%box_extract%2#0' with 'l-load box%box_extract%2#0'
debug: Inserted nested_read_block@0.ops[48]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced nested_read_block@0.ops[50]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted nested_read_block@0.ops[64]: 'l-store-copy box%box_extract%3#0 0'
debug: Replaced nested_read_block@0.ops[66]: 'v-load box%box_extract%3#0' with 'l-load box%box_extract%3#0'
debug: Inserted nested_read_block@0.ops[77]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced nested_read_block@0.ops[79]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted nested_read_block@0.ops[85]: 'l-store-copy box%index_ok%1#0 0'
debug: Replaced nested_read_block@0.ops[87]: 'v-load box%index_ok%1#0' with 'l-load box%index_ok%1#0'
debug: Inserted nested_read_block@0.ops[105]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced nested_read_block@0.ops[107]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted nested_read_block@0.ops[114]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced nested_read_block@0.ops[116]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted nested_read_block@0.ops[123]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced nested_read_block@0.ops[125]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted nested_read_block@0.ops[132]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced nested_read_block@0.ops[134]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted nested_read_block@0.ops[145]: 'l-store-copy box%box_extract%9#0 0'
debug: Replaced nested_read_block@0.ops[147]: 'v-load box%box_extract%9#0' with 'l-load box%box_extract%9#0'
debug: Inserted nested_read_block@0.ops[153]: 'l-store-copy box%index_ok%2#0 0'
debug: Replaced nested_read_block@0.ops[155]: 'v-load box%index_ok%2#0' with 'l-load box%index_ok%2#0'
debug: Inserted nested_read_block@0.ops[160]: 'l-store-copy box%add%4#0 0'
debug: Replaced nested_read_block@0.ops[162]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted nested_read_block@0.ops[170]: 'l-store-copy box%box_extract%10#0 0'
debug: Replaced nested_read_block@0.ops[172]: 'v-load box%box_extract%10#0' with 'l-load box%box_extract%10#0'
debug: Inserted nested_read_block@0.ops[178]: 'l-store-copy box%offset%17#0 0'
debug: Replaced nested_read_block@0.ops[180]: 'v-load box%offset%17#0' with 'l-load box%offset%17#0'
debug: Inserted nested_read_block@0.ops[188]: 'l-store-copy box%box_extract%11#0 0'
debug: Replaced nested_read_block@0.ops[190]: 'v-load box%box_extract%11#0' with 'l-load box%box_extract%11#0'
debug: Inserted nested_read_block@0.ops[196]: 'l-store-copy box%index_ok%3#0 0'
debug: Replaced nested_read_block@0.ops[198]: 'v-load box%index_ok%3#0' with 'l-load box%index_ok%3#0'
debug: Inserted nested_read_block@0.ops[216]: 'l-store-copy box%box_extract%12#0 0'
debug: Replaced nested_read_block@0.ops[218]: 'v-load box%box_extract%12#0' with 'l-load box%box_extract%12#0'
debug: Inserted nested_read_block@0.ops[229]: 'l-store-copy box%box_extract%13#0 0'
debug: Replaced nested_read_block@0.ops[231]: 'v-load box%box_extract%13#0' with 'l-load box%box_extract%13#0'
debug: Inserted nested_read_block@0.ops[237]: 'l-store-copy box%index_ok%4#0 0'
debug: Replaced nested_read_block@0.ops[239]: 'v-load box%index_ok%4#0' with 'l-load box%index_ok%4#0'
debug: Inserted nested_read_block@0.ops[257]: 'l-store-copy box%box_extract%14#0 0'
debug: Replaced nested_read_block@0.ops[259]: 'v-load box%box_extract%14#0' with 'l-load box%box_extract%14#0'
debug: Inserted nested_read_block@0.ops[265]: 'l-store-copy tmp%0#1 0'
debug: Replaced nested_read_block@0.ops[267]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted nested_read_block@0.ops[270]: 'l-store-copy tmp%1#1 0'
debug: Replaced nested_read_block@0.ops[272]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted nested_read_block@0.ops[275]: 'l-store-copy tmp%2#1 0'
debug: Replaced nested_read_block@0.ops[277]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted nested_read_block@0.ops[280]: 'l-store-copy tmp%3#1 0'
debug: Replaced nested_read_block@0.ops[282]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted nested_read_block@0.ops[285]: 'l-store-copy tmp%4#1 0'
debug: Replaced nested_read_block@0.ops[287]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted nested_read_block@0.ops[293]: 'l-store-copy tmp%5#0 0'
debug: Replaced nested_read_block@0.ops[295]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted nested_read_block@0.ops[44]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced nested_read_block@0.ops[47]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted nested_read_block@0.ops[56]: 'l-store-copy box%mul%0#0 0'
debug: Replaced nested_read_block@0.ops[59]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted nested_read_block@0.ops[61]: 'l-store-copy box%add%1#0 0'
debug: Replaced nested_read_block@0.ops[64]: 'v-load box%add%1#0' with 'l-load box%add%1#0'
debug: Inserted nested_read_block@0.ops[71]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced nested_read_block@0.ops[74]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted nested_read_block@0.ops[76]: 'l-store-copy box%offset%7#0 0'
debug: Replaced nested_read_block@0.ops[79]: 'v-load box%offset%7#0' with 'l-load box%offset%7#0'
debug: Inserted nested_read_block@0.ops[86]: 'l-store-copy box%btoi%2#0 0'
debug: Replaced nested_read_block@0.ops[89]: 'v-load box%btoi%2#0' with 'l-load box%btoi%2#0'
debug: Inserted nested_read_block@0.ops[102]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced nested_read_block@0.ops[105]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted nested_read_block@0.ops[107]: 'l-store-copy box%offset%8#0 0'
debug: Replaced nested_read_block@0.ops[110]: 'v-load box%offset%8#0' with 'l-load box%offset%8#0'
debug: Inserted nested_read_block@0.ops[144]: 'l-store-copy box%btoi%3#0 0'
debug: Replaced nested_read_block@0.ops[147]: 'v-load box%btoi%3#0' with 'l-load box%btoi%3#0'
debug: Inserted nested_read_block@0.ops[149]: 'l-store-copy box%offset%16#0 0'
debug: Replaced nested_read_block@0.ops[152]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted nested_read_block@0.ops[159]: 'l-store-copy box%btoi%4#0 0'
debug: Replaced nested_read_block@0.ops[162]: 'v-load box%btoi%4#0' with 'l-load box%btoi%4#0'
debug: Inserted nested_read_block@0.ops[176]: 'l-store-copy box%add%5#0 0'
debug: Replaced nested_read_block@0.ops[179]: 'v-load box%add%5#0' with 'l-load box%add%5#0'
debug: Inserted nested_read_block@0.ops[186]: 'l-store-copy box%btoi%5#0 0'
debug: Replaced nested_read_block@0.ops[189]: 'v-load box%btoi%5#0' with 'l-load box%btoi%5#0'
debug: Inserted nested_read_block@0.ops[196]: 'l-store-copy box%offset%18#0 0'
debug: Replaced nested_read_block@0.ops[199]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted nested_read_block@0.ops[206]: 'l-store-copy box%btoi%6#0 0'
debug: Replaced nested_read_block@0.ops[209]: 'v-load box%btoi%6#0' with 'l-load box%btoi%6#0'
debug: Inserted nested_read_block@0.ops[222]: 'l-store-copy box%mul%2#0 0'
debug: Replaced nested_read_block@0.ops[225]: 'v-load box%mul%2#0' with 'l-load box%mul%2#0'
debug: Inserted nested_read_block@0.ops[227]: 'l-store-copy box%add%7#0 0'
debug: Replaced nested_read_block@0.ops[230]: 'v-load box%add%7#0' with 'l-load box%add%7#0'
debug: Inserted nested_read_block@0.ops[237]: 'l-store-copy box%btoi%7#0 0'
debug: Replaced nested_read_block@0.ops[240]: 'v-load box%btoi%7#0' with 'l-load box%btoi%7#0'
debug: Inserted nested_read_block@0.ops[242]: 'l-store-copy box%offset%19#0 0'
debug: Replaced nested_read_block@0.ops[245]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted nested_read_block@0.ops[252]: 'l-store-copy box%btoi%8#0 0'
debug: Replaced nested_read_block@0.ops[255]: 'v-load box%btoi%8#0' with 'l-load box%btoi%8#0'
debug: Inserted nested_read_block@0.ops[268]: 'l-store-copy box%element_offset%1#0 0'
debug: Replaced nested_read_block@0.ops[271]: 'v-load box%element_offset%1#0' with 'l-load box%element_offset%1#0'
debug: Inserted nested_read_block@0.ops[273]: 'l-store-copy box%offset%20#0 0'
debug: Replaced nested_read_block@0.ops[276]: 'v-load box%offset%20#0' with 'l-load box%offset%20#0'
debug: Inserted nested_read_block@0.ops[311]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced nested_read_block@0.ops[314]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted nested_read_block@0.ops[98]: 'l-store-copy box%add%2#0 0'
debug: Replaced nested_read_block@0.ops[105]: 'v-load box%add%2#0' with 'l-load box%add%2#0'
debug: Inserted nested_read_block@0.ops[219]: 'l-store-copy box%add%6#0 0'
debug: Replaced nested_read_block@0.ops[226]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted nested_read_block@0.ops[266]: 'l-store-copy box%add%8#0 0'
debug: Replaced nested_read_block@0.ops[273]: 'v-load box%add%8#0' with 'l-load box%add%8#0'
debug: Inserted nested_read_block@0.ops[47]: 'l-store-copy i1#0 1'
debug: Replaced nested_read_block@0.ops[55]: 'v-load i1#0' with 'l-load i1#0'
debug: Inserted nested_read_block@0.ops[90]: 'l-store-copy i2#0 1'
debug: Replaced nested_read_block@0.ops[102]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted nested_read_block@0.ops[259]: 'l-store-copy i3#0 1'
debug: Replaced nested_read_block@0.ops[271]: 'v-load i3#0' with 'l-load i3#0'
debug: Inserted nested_read_block@0.ops[212]: 'l-store-copy i2#0 1'
debug: Replaced nested_read_block@0.ops[225]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted nested_read_block@0.ops[177]: 'l-store-copy box%add%4#0 0'
debug: Replaced nested_read_block@0.ops[192]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted nested_read_block@0.ops[231]: 'l-store-copy box%add%6#0 1'
debug: Replaced nested_read_block@0.ops[246]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted nested_read_block@0.ops[81]: 'l-store-copy box%offset%7#0 1'
debug: Replaced nested_read_block@0.ops[98]: 'v-load box%offset%7#0' with 'l-load box%offset%7#0'
debug: Inserted nested_read_block@0.ops[157]: 'l-store-copy box%offset%16#0 1'
debug: Replaced nested_read_block@0.ops[173]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted nested_read_block@0.ops[206]: 'l-store-copy box%offset%18#0 1'
debug: Replaced nested_read_block@0.ops[223]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted nested_read_block@0.ops[256]: 'l-store-copy box%offset%19#0 1'
debug: Replaced nested_read_block@0.ops[273]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted nested_read_block@0.ops[296]: 'l-store-copy woah_arr_arr#0 0'
debug: Replaced nested_read_block@0.ops[319]: 'v-load woah_arr_arr#0' with 'l-load woah_arr_arr#0'
debug: Inserted nested_read_block@0.ops[5]: 'l-store-copy i1#0 0'
debug: Replaced nested_read_block@0.ops[47]: 'v-load i1#0' with 'l-load i1#0'
debug: Inserted nested_read_block@0.ops[12]: 'l-store-copy i2#0 1'
debug: Replaced nested_read_block@0.ops[92]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted nested_read_block@0.ops[58]: 'l-store-copy i1#0 2'
debug: Replaced nested_read_block@0.ops[169]: 'v-load i1#0' with 'l-load i1#0'
debug: Inserted nested_read_block@0.ops[107]: 'l-store-copy i2#0 2'
debug: Replaced nested_read_block@0.ops[219]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted nested_read_block@0.ops[64]: 'l-store-copy box%mul%0#0 3'
debug: Replaced nested_read_block@0.ops[185]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted nested_read_block@0.ops[144]: 'l-store-copy d#0 3'
debug: Replaced nested_read_block@0.ops[320]: 'v-load d#0' with 'l-load d#0'
debug: Inserted nested_read_block@0.ops[135]: 'l-store-copy c#0 3'
debug: Replaced nested_read_block@0.ops[316]: 'v-load c#0' with 'l-load c#0'
debug: Inserted nested_read_block@0.ops[126]: 'l-store-copy arr_arr#0 3'
debug: Replaced nested_read_block@0.ops[312]: 'v-load arr_arr#0' with 'l-load arr_arr#0'
debug: Inserted nested_read_block@0.ops[19]: 'l-store-copy i3#0 2'
debug: Replaced nested_read_block@0.ops[274]: 'v-load i3#0' with 'l-load i3#0'
debug: Inserted nested_read_block@0.ops[38]: 'l-store-copy b#0 3'
debug: Replaced nested_read_block@0.ops[309]: 'v-load b#0' with 'l-load b#0'
debug: Inserted nested_read_block@0.ops[29]: 'l-store-copy a#0 3'
debug: Replaced nested_read_block@0.ops[309]: 'v-load a#0' with 'l-load a#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[4]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[6]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[8]: 'l-store-copy values%0#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[10]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[21]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[23]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[25]: 'l-store-copy values%1#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[27]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[30]: 'l-store-copy tmp%1#1 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[32]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[42]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[44]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[28]: 'l-store-copy values%1#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[36]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[11]: 'l-store-copy values%0#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[36]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted sum_dynamic_arr_struct_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_dynamic_arr_struct_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[4]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[6]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[12]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[14]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[28]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[30]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[8]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[11]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[20]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[23]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[25]: 'l-store-copy box%offset%6#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[28]: 'v-load box%offset%6#0' with 'l-load box%offset%6#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[35]: 'l-store-copy val#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[38]: 'v-load val#0' with 'l-load val#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[11]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[18]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted sum_dynamic_arr_struct_for_body@3.ops[19]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@3.ops[43]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted sum_dynamic_arr_struct_after_for@5.ops[4]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced sum_dynamic_arr_struct_after_for@5.ops[6]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted sum_dynamic_arr_struct_after_for@5.ops[13]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced sum_dynamic_arr_struct_after_for@5.ops[15]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted sum_dynamic_arr_struct_after_for@5.ops[8]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced sum_dynamic_arr_struct_after_for@5.ops[11]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted sum_dynamic_arr_struct_for_header@6.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced sum_dynamic_arr_struct_for_header@6.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[4]: 'l-store-copy box%box_extract%9#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[6]: 'v-load box%box_extract%9#0' with 'l-load box%box_extract%9#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[8]: 'l-store-copy box%btoi%2#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[10]: 'v-load box%btoi%2#0' with 'l-load box%btoi%2#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[26]: 'l-store-copy box%box_extract%10#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[28]: 'v-load box%box_extract%10#0' with 'l-load box%box_extract%10#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[17]: 'l-store-copy box%element_offset%1#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[20]: 'v-load box%element_offset%1#0' with 'l-load box%element_offset%1#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[22]: 'l-store-copy box%offset%9#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[25]: 'v-load box%offset%9#0' with 'l-load box%offset%9#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[32]: 'l-store-copy val#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[35]: 'v-load val#0' with 'l-load val#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[13]: 'l-store-copy box%add%3#0 0'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[20]: 'v-load box%add%3#0' with 'l-load box%add%3#0'
debug: Inserted sum_dynamic_arr_struct_for_body@7.ops[16]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced sum_dynamic_arr_struct_for_body@7.ops[40]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted sum_dynamic_arr_struct_after_for@9.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_dynamic_arr_struct_after_for@9.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_dynamic_arr_struct_after_for@9.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_dynamic_arr_struct_after_for@9.ops[5]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted set_bool_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced set_bool_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted set_bool_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(bool8)%0#0 0'
debug: Replaced set_bool_block@0.ops[9]: 'v-load reinterpret_Encoded(bool8)%0#0' with 'l-load reinterpret_Encoded(bool8)%0#0'
debug: Inserted set_bool_block@0.ops[29]: 'l-store-copy aggregate%lt%0#0 0'
debug: Replaced set_bool_block@0.ops[31]: 'v-load aggregate%lt%0#0' with 'l-load aggregate%lt%0#0'
debug: Inserted set_bool_block@0.ops[37]: 'l-store-copy aggregate%updated_target%0#0 0'
debug: Replaced set_bool_block@0.ops[41]: 'v-load aggregate%updated_target%0#0' with 'l-load aggregate%updated_target%0#0'
debug: Inserted set_bool_block@0.ops[14]: 'l-store-copy index#0 0'
debug: Replaced set_bool_block@0.ops[18]: 'v-load index#0' with 'l-load index#0'
debug: Inserted set_bool_block@0.ops[17]: 'l-store-copy box%element_byte_offset%0#0 1'
debug: Replaced set_bool_block@0.ops[24]: 'v-load box%element_byte_offset%0#0' with 'l-load box%element_byte_offset%0#0'
debug: Inserted set_bool_block@0.ops[22]: 'l-store-copy box%element_bit_offset%0#0 1'
debug: Replaced set_bool_block@0.ops[29]: 'v-load box%element_bit_offset%0#0' with 'l-load box%element_bit_offset%0#0'
debug: Inserted set_bool_block@0.ops[5]: 'l-store-copy index#0 0'
debug: Replaced set_bool_block@0.ops[14]: 'v-load index#0' with 'l-load index#0'
debug: Inserted set_bool_block@0.ops[29]: 'l-store-copy box%box_extract%0#0 1'
debug: Replaced set_bool_block@0.ops[38]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted set_bool_block@0.ops[32]: 'l-store-copy box%element_bit_offset%0#0 1'
debug: Replaced set_bool_block@0.ops[40]: 'v-load box%element_bit_offset%0#0' with 'l-load box%element_bit_offset%0#0'
debug: Inserted set_bool_block@0.ops[27]: 'l-store-copy box%element_byte_offset%0#0 2'
debug: Replaced set_bool_block@0.ops[47]: 'v-load box%element_byte_offset%0#0' with 'l-load box%element_byte_offset%0#0'
debug: Inserted set_bool_block@0.ops[13]: 'l-store-copy value#0 1'
debug: Replaced set_bool_block@0.ops[43]: 'v-load value#0' with 'l-load value#0'
debug: Inserted sum_bools_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced sum_bools_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted sum_bools_block@0.ops[10]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced sum_bools_block@0.ops[13]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted sum_bools_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_bools_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_bools_for_body@3.ops[12]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced sum_bools_for_body@3.ops[14]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted sum_bools_for_body@3.ops[17]: 'l-store-copy value#0 0'
debug: Replaced sum_bools_for_body@3.ops[19]: 'v-load value#0' with 'l-load value#0'
debug: Inserted sum_bools_for_body@3.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced sum_bools_for_body@3.ops[5]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted sum_bools_for_body@3.ops[4]: 'l-store-copy box%element_byte_offset%0#0 1'
debug: Replaced sum_bools_for_body@3.ops[11]: 'v-load box%element_byte_offset%0#0' with 'l-load box%element_byte_offset%0#0'
debug: Inserted sum_bools_for_body@3.ops[9]: 'l-store-copy box%element_bit_offset%0#0 1'
debug: Replaced sum_bools_for_body@3.ops[18]: 'v-load box%element_bit_offset%0#0' with 'l-load box%element_bit_offset%0#0'
debug: Inserted sum_bools_after_if_else@5.ops[3]: 'l-store-copy tmp%1#1 0'
debug: Replaced sum_bools_after_if_else@5.ops[5]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted sum_bools_after_for@9.ops[6]: 'l-store-copy tmp%3#0 0'
debug: Replaced sum_bools_after_for@9.ops[8]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted sum_bools_after_for@9.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_bools_after_for@9.ops[5]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted append_dynamic_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced append_dynamic_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted append_dynamic_box_block@0.ops[10]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced append_dynamic_box_block@0.ops[12]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted append_dynamic_box_block@0.ops[14]: 'l-store-copy arr_len#0 0'
debug: Replaced append_dynamic_box_block@0.ops[16]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted append_dynamic_box_block@0.ops[19]: 'l-store-copy tmp%1#1 0'
debug: Replaced append_dynamic_box_block@0.ops[21]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted append_dynamic_box_block@0.ops[24]: 'l-store-copy tmp%2#1 0'
debug: Replaced append_dynamic_box_block@0.ops[27]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted append_dynamic_box_block@0.ops[29]: 'l-store-copy tmp%3#1 0'
debug: Replaced append_dynamic_box_block@0.ops[32]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted append_dynamic_box_block@0.ops[5]: 'l-store-copy times#0 0'
debug: Replaced append_dynamic_box_block@0.ops[18]: 'v-load times#0' with 'l-load times#0'
debug: Inserted append_dynamic_box_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced append_dynamic_box_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted append_dynamic_box_for_body@3.ops[6]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced append_dynamic_box_for_body@3.ops[9]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted append_dynamic_box_for_body@3.ops[11]: 'l-store-copy box%offset%2#0 0'
debug: Replaced append_dynamic_box_for_body@3.ops[14]: 'v-load box%offset%2#0' with 'l-load box%offset%2#0'
debug: Inserted append_dynamic_box_for_body@3.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced append_dynamic_box_for_body@3.ops[16]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted append_dynamic_box_for_body@3.ops[5]: 'l-store-copy arr_len#0 1'
debug: Replaced append_dynamic_box_for_body@3.ops[19]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted append_dynamic_box_for_body@3.ops[1]: 'l-store-copy i#0 0'
debug: Replaced append_dynamic_box_for_body@3.ops[24]: 'v-load i#0' with 'l-load i#0'
debug: Inserted append_dynamic_box_after_for@5.ops[2]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[4]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted append_dynamic_box_after_for@5.ops[6]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[8]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted append_dynamic_box_after_for@5.ops[11]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[13]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted append_dynamic_box_after_for@5.ops[26]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[28]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted append_dynamic_box_after_for@5.ops[30]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[32]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted append_dynamic_box_after_for@5.ops[38]: 'l-store-copy tmp%3#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[40]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted append_dynamic_box_after_for@5.ops[34]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[37]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted append_dynamic_box_after_for@5.ops[17]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[21]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted append_dynamic_box_after_for@5.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced append_dynamic_box_after_for@5.ops[16]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted pop_dynamic_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[10]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[12]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[14]: 'l-store-copy tmp%0#1 0'
debug: Replaced pop_dynamic_box_block@0.ops[16]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted pop_dynamic_box_block@0.ops[19]: 'l-store-copy arr_len#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[21]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted pop_dynamic_box_block@0.ops[23]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[25]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[27]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[29]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[32]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[34]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[58]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[60]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted pop_dynamic_box_block@0.ops[62]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[64]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[70]: 'l-store-copy tmp%3#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[72]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted pop_dynamic_box_block@0.ops[46]: 'l-store-copy tmp%3#1 0'
debug: Replaced pop_dynamic_box_block@0.ops[49]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted pop_dynamic_box_block@0.ops[51]: 'l-store-copy tmp%4#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[54]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted pop_dynamic_box_block@0.ops[68]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[71]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted pop_dynamic_box_block@0.ops[38]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[42]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[26]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[37]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[5]: 'l-store-copy times#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[18]: 'v-load times#0' with 'l-load times#0'
debug: Inserted pop_dynamic_box_block@0.ops[23]: 'l-store-copy arr_len#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[47]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted sum_dynamic_box_block@0.ops[6]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced sum_dynamic_box_block@0.ops[8]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted sum_dynamic_box_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_dynamic_box_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_dynamic_box_for_body@3.ops[12]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced sum_dynamic_box_for_body@3.ops[14]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted sum_dynamic_box_for_body@3.ops[3]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced sum_dynamic_box_for_body@3.ops[6]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted sum_dynamic_box_for_body@3.ops[8]: 'l-store-copy box%offset%0#0 0'
debug: Replaced sum_dynamic_box_for_body@3.ops[11]: 'v-load box%offset%0#0' with 'l-load box%offset%0#0'
debug: Inserted sum_dynamic_box_for_body@3.ops[18]: 'l-store-copy val#0 0'
debug: Replaced sum_dynamic_box_for_body@3.ops[21]: 'v-load val#0' with 'l-load val#0'
debug: Inserted sum_dynamic_box_for_body@3.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced sum_dynamic_box_for_body@3.ops[25]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted sum_dynamic_box_after_for@5.ops[6]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_dynamic_box_after_for@5.ops[8]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_dynamic_box_after_for@5.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_dynamic_box_after_for@5.ops[5]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted write_dynamic_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced write_dynamic_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted write_dynamic_box_block@0.ops[11]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced write_dynamic_box_block@0.ops[14]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted write_dynamic_box_block@0.ops[16]: 'l-store-copy box%offset%0#0 0'
debug: Replaced write_dynamic_box_block@0.ops[19]: 'v-load box%offset%0#0' with 'l-load box%offset%0#0'
debug: Inserted write_dynamic_box_block@0.ops[5]: 'l-store-copy index#0 0'
debug: Replaced write_dynamic_box_block@0.ops[9]: 'v-load index#0' with 'l-load index#0'
debug: Inserted write_dynamic_box_block@0.ops[8]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 1'
debug: Replaced write_dynamic_box_block@0.ops[22]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[12]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[14]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[20]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[22]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[19]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[28]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[31]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[33]: 'l-store-copy box%offset%1#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[36]: 'v-load box%offset%1#0' with 'l-load box%offset%1#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy index#0 1'
debug: Replaced write_dynamic_arr_struct_block@0.ops[26]: 'v-load index#0' with 'l-load index#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy index#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[19]: 'v-load index#0' with 'l-load index#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[8]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 1'
debug: Replaced write_dynamic_arr_struct_block@0.ops[40]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted slice_box_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced slice_box_block@0.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced slice_box_block@0.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted slice_box_block@0.ops[34]: 'l-store-copy tmp%7#0 0'
debug: Replaced slice_box_block@0.ops[36]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted slice_box_block@0.ops[39]: 'l-store-copy tmp%8#0 0'
debug: Replaced slice_box_block@0.ops[41]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted slice_box_block@0.ops[70]: 'l-store-copy tmp%15#0 0'
debug: Replaced slice_box_block@0.ops[72]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted slice_box_block@0.ops[80]: 'l-store-copy tmp%17#0 0'
debug: Replaced slice_box_block@0.ops[82]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted slice_box_block@0.ops[85]: 'l-store-copy tmp%18#0 0'
debug: Replaced slice_box_block@0.ops[87]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted slice_box_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced slice_box_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[53]: 'l-store-copy tmp%10#0 0'
debug: Replaced slice_box_block@0.ops[56]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted slice_box_block@0.ops[19]: 'l-store-copy tmp%0#0 1'
debug: Replaced slice_box_block@0.ops[22]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[21]: 'l-store-copy tmp%4#0 1'
debug: Replaced slice_box_block@0.ops[25]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted slice_box_block@0.ops[32]: 'l-store-copy tmp%6#0 0'
debug: Replaced slice_box_block@0.ops[36]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted slice_box_block@0.ops[60]: 'l-store-copy tmp%10#0 1'
debug: Replaced slice_box_block@0.ops[63]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted slice_box_block@0.ops[62]: 'l-store-copy tmp%12#0 1'
debug: Replaced slice_box_block@0.ops[66]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted slice_box_block@0.ops[71]: 'l-store-copy tmp%10#0 1'
debug: Replaced slice_box_block@0.ops[74]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted slice_box_block@0.ops[73]: 'l-store-copy tmp%14#0 1'
debug: Replaced slice_box_block@0.ops[77]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted slice_box_block@0.ops[84]: 'l-store-copy tmp%16#0 0'
debug: Replaced slice_box_block@0.ops[88]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted slice_box_block@0.ops[15]: 'l-store-copy tmp%0#0 2'
debug: Replaced slice_box_block@0.ops[19]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[32]: 'l-store-copy tmp%3#0 1'
debug: Replaced slice_box_block@0.ops[37]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted slice_box_block@0.ops[85]: 'l-store-copy tmp%13#0 1'
debug: Replaced slice_box_block@0.ops[90]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted slice_box_block@0.ops[67]: 'l-store-copy tmp%10#0 1'
debug: Replaced slice_box_block@0.ops[73]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted slice_box_block@0.ops[17]: 'l-store-copy tmp%3#0 1'
debug: Replaced slice_box_block@0.ops[32]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted slice_box_block@0.ops[72]: 'l-store-copy tmp%13#0 1'
debug: Replaced slice_box_block@0.ops[87]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_box_ref_block@0.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_box_ref_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_box_ref_block@0.ops[13]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_box_ref_block@0.ops[15]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_box_ref_block@0.ops[45]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_box_ref_block@0.ops[47]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_box_ref_block@0.ops[54]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_box_ref_block@0.ops[56]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_box_ref_block@0.ops[60]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_box_ref_block@0.ops[62]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_box_ref_block@0.ops[70]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_box_ref_block@0.ops[72]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_box_ref_block@0.ops[77]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_box_ref_block@0.ops[79]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_box_ref_block@0.ops[85]: 'l-store-copy state_get%0#0 0'
debug: Replaced test_box_ref_block@0.ops[87]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted test_box_ref_block@0.ops[90]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_box_ref_block@0.ops[92]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_box_ref_block@0.ops[104]: 'l-store-copy _%5#0 0'
debug: Replaced test_box_ref_block@0.ops[106]: 'v-load _%5#0' with 'l-load _%5#0'
debug: Inserted test_box_ref_block@0.ops[109]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_box_ref_block@0.ops[111]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_box_ref_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced test_box_ref_block@0.ops[5]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted test_box_ref_block@0.ops[51]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_box_ref_block@0.ops[54]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_box_ref_block@0.ops[68]: 'l-store-copy exists#0 1'
debug: Replaced test_box_ref_block@0.ops[71]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted test_box_ref_block@0.ops[100]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_box_ref_block@0.ops[103]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_box_ref_block@0.ops[19]: 'l-store-copy sender_bytes#0 0'
debug: Replaced test_box_ref_block@0.ops[25]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[93]: 'l-store-copy sender_bytes#0 1'
debug: Replaced test_box_ref_block@0.ops[99]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[71]: 'l-store-copy value#0 1'
debug: Replaced test_box_ref_block@0.ops[79]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_box_ref_block@0.ops[87]: 'l-store-copy sender_bytes#0 0'
debug: Replaced test_box_ref_block@0.ops[94]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[80]: 'l-store-copy value#0 0'
debug: Replaced test_box_ref_block@0.ops[89]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_box_ref_block@0.ops[43]: 'l-store-copy prefix#0 0'
debug: Replaced test_box_ref_block@0.ops[55]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted test_box_ref_block@0.ops[22]: 'l-store-copy app_address#0 1'
debug: Replaced test_box_ref_block@0.ops[34]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted test_box_ref_block@0.ops[35]: 'l-store-copy app_address#0 3'
debug: Replaced test_box_ref_block@0.ops[47]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted test_box_ref_block@0.ops[77]: 'l-store-copy exists#0 1'
debug: Replaced test_box_ref_block@0.ops[94]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted test_box_ref_block@0.ops[27]: 'l-store-copy sender_bytes#0 3'
debug: Replaced test_box_ref_block@0.ops[49]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[50]: 'l-store-copy sender_bytes#0 2'
debug: Replaced test_box_ref_block@0.ops[93]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[49]: 'l-store-copy app_address#0 2'
debug: Replaced test_box_ref_block@0.ops[110]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted box_map_test_block@0.ops[2]: 'l-store-copy box_0#0 0'
debug: Replaced box_map_test_block@0.ops[4]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted box_map_test_block@0.ops[13]: 'l-store-copy value%0#0 0'
debug: Replaced box_map_test_block@0.ops[15]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted box_map_test_block@0.ops[18]: 'l-store-copy tmp%1#0 0'
debug: Replaced box_map_test_block@0.ops[20]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted box_map_test_block@0.ops[24]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced box_map_test_block@0.ops[26]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted box_map_test_block@0.ops[34]: 'l-store-copy state_get%0#0 0'
debug: Replaced box_map_test_block@0.ops[36]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted box_map_test_block@0.ops[39]: 'l-store-copy tmp%5#0 0'
debug: Replaced box_map_test_block@0.ops[41]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted box_map_test_block@0.ops[49]: 'l-store-copy tmp%6#0 0'
debug: Replaced box_map_test_block@0.ops[51]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted box_map_test_block@0.ops[29]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced box_map_test_block@0.ops[32]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_test_block@0.ops[46]: 'l-store-copy exists#0 1'
debug: Replaced box_map_test_block@0.ops[49]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted box_map_test_block@0.ops[5]: 'l-store-copy box_0#0 0'
debug: Replaced box_map_test_block@0.ops[8]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted box_map_test_block@0.ops[9]: 'l-store-copy box_0#0 0'
debug: Replaced box_map_test_block@0.ops[12]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted box_map_test_block@0.ops[58]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced box_map_test_block@0.ops[61]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted box_map_test_block@0.ops[62]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced box_map_test_block@0.ops[65]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted box_map_test_block@0.ops[30]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_test_block@0.ops[36]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted box_map_test_block@0.ops[48]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced box_map_test_block@0.ops[59]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted box_map_test_block@0.ops[29]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced box_map_test_block@0.ops[48]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted box_map_set_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_set_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_set_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(len+utf8[])%0#0 0'
debug: Replaced box_map_set_block@0.ops[9]: 'v-load reinterpret_Encoded(len+utf8[])%0#0' with 'l-load reinterpret_Encoded(len+utf8[])%0#0'
debug: Inserted box_map_set_block@0.ops[14]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced box_map_set_block@0.ops[16]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted box_map_set_block@0.ops[17]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced box_map_set_block@0.ops[20]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted box_map_set_block@0.ops[5]: 'l-store-copy key#0 0'
debug: Replaced box_map_set_block@0.ops[13]: 'v-load key#0' with 'l-load key#0'
debug: Inserted box_map_set_block@0.ops[12]: 'l-store-copy value#0 1'
debug: Replaced box_map_set_block@0.ops[23]: 'v-load value#0' with 'l-load value#0'
debug: Inserted box_map_get_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_get_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_get_block@0.ops[5]: 'l-store-copy key#0 0'
debug: Replaced box_map_get_block@0.ops[7]: 'v-load key#0' with 'l-load key#0'
debug: Inserted box_map_get_block@0.ops[9]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced box_map_get_block@0.ops[11]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted box_map_get_block@0.ops[19]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced box_map_get_block@0.ops[21]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted box_map_get_block@0.ops[23]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced box_map_get_block@0.ops[25]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted box_map_get_block@0.ops[27]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced box_map_get_block@0.ops[29]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted box_map_get_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced box_map_get_block@0.ops[38]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted box_map_get_block@0.ops[13]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced box_map_get_block@0.ops[16]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted box_map_get_block@0.ops[33]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced box_map_get_block@0.ops[36]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted box_map_get_block@0.ops[15]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced box_map_get_block@0.ops[19]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted box_map_get_block@0.ops[20]: 'l-store-copy aggregate%box_get%0#0 0'
debug: Replaced box_map_get_block@0.ops[33]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted box_map_del_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_del_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_del_block@0.ops[5]: 'l-store-copy key#0 0'
debug: Replaced box_map_del_block@0.ops[7]: 'v-load key#0' with 'l-load key#0'
debug: Inserted box_map_del_block@0.ops[9]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced box_map_del_block@0.ops[11]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted box_map_exists_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_exists_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_exists_block@0.ops[5]: 'l-store-copy key#0 0'
debug: Replaced box_map_exists_block@0.ops[7]: 'v-load key#0' with 'l-load key#0'
debug: Inserted box_map_exists_block@0.ops[9]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced box_map_exists_block@0.ops[11]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted box_map_exists_block@0.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced box_map_exists_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted box_map_exists_block@0.ops[19]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced box_map_exists_block@0.ops[22]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted box_map_exists_block@0.ops[13]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_exists_block@0.ops[18]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Found 2 edge set/s for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Found 4 edge set/s for examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Found 2 edge set/s for examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Found 4 edge set/s for examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Found 3 edge set/s for examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Found 2 edge set/s for examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Found 2 edge set/s for examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: examples.box_storage.contract.BoxContract.sum_many_ints[routing] f-stack entry: ['item_index_internal%0#0', 'total#0']
debug: examples.box_storage.contract.BoxContract.sum_many_ints[routing] f-stack on first store: []
debug: examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] f-stack entry: []
debug: examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] f-stack on first store: ['times#0', 'arr_len#0', 'i#0']
debug: examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] f-stack entry: ['box%array_length%1#0', 'item_index_internal%1#0']
debug: examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] f-stack on first store: ['total#0', 'box%array_length%0#0', 'item_index_internal%0#0']
debug: examples.box_storage.contract.BoxContract.sum_bools[routing] f-stack entry: []
debug: examples.box_storage.contract.BoxContract.sum_bools[routing] f-stack on first store: ['stop_at_total#0', 'total#0', 'item_index_internal%0#0']
debug: examples.box_storage.contract.BoxContract.append_dynamic_box[routing] f-stack entry: []
debug: examples.box_storage.contract.BoxContract.append_dynamic_box[routing] f-stack on first store: ['times#0', 'arr_len#0', 'i#0']
debug: examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] f-stack entry: []
debug: examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] f-stack on first store: ['total#0', 'box%array_length%0#0', 'item_index_internal%0#0']
debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
box_storage/contract.py:95:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_boxes[routing]() -> void:
box_storage/contract.py:142:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_many_ints[routing]() -> void:
box_storage/contract.py:146:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_many_ints[routing]() -> void:
box_storage/contract.py:154:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_boxes[routing]() -> void:
box_storage/contract.py:167:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]() -> void:
box_storage/contract.py:173:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.read_boxes[routing]() -> void:
box_storage/contract.py:182:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.boxes_exist[routing]() -> void:
box_storage/contract.py:186:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:199:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:231:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:253:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_nested_struct[routing]() -> void:
box_storage/contract.py:267:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.nested_write[routing]() -> void:
box_storage/contract.py:277:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.nested_read[routing]() -> void:
box_storage/contract.py:289:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:304:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_bool[routing]() -> void:
box_storage/contract.py:308:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_bools[routing]() -> void:
box_storage/contract.py:318:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_dynamic_box[routing]() -> void:
box_storage/contract.py:326:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.append_dynamic_box[routing]() -> void:
box_storage/contract.py:341:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]() -> void:
box_storage/contract.py:352:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]() -> void:
box_storage/contract.py:359:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.write_dynamic_box[routing]() -> void:
box_storage/contract.py:363:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:367:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.slice_box[routing]() -> void:
box_storage/contract.py:386:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.test_box_ref[routing]() -> void:
box_storage/contract.py:434:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_test[routing]() -> void:
box_storage/contract.py:458:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_set[routing]() -> void:
box_storage/contract.py:462:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_get[routing]() -> void:
box_storage/contract.py:466:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_del[routing]() -> void:
box_storage/contract.py:470:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_exists[routing]() -> void:
debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: replacing `b main_after_if_else@41` with `err`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_if_else@41 into main
debug: removing jump-chain block main_set_boxes_route@6
debug: removing jump-chain block main_set_many_ints_route@9
debug: removing jump-chain block main_sum_many_ints_route@10
debug: removing jump-chain block main_delete_boxes_route@11
debug: removing jump-chain block main_indirect_extract_and_replace_route@12
debug: removing jump-chain block main_read_boxes_route@13
debug: removing jump-chain block main_boxes_exist_route@14
debug: removing jump-chain block main_create_dynamic_arr_struct_route@15
debug: removing jump-chain block main_append_dynamic_arr_struct_route@17
debug: removing jump-chain block main_pop_dynamic_arr_struct_route@18
debug: removing jump-chain block main_set_nested_struct_route@19
debug: removing jump-chain block main_nested_write_route@20
debug: removing jump-chain block main_nested_read_route@21
debug: removing jump-chain block main_sum_dynamic_arr_struct_route@22
debug: removing jump-chain block main_set_bool_route@24
debug: removing jump-chain block main_sum_bools_route@25
debug: removing jump-chain block main_create_dynamic_box_route@26
debug: removing jump-chain block main_append_dynamic_box_route@28
debug: removing jump-chain block main_pop_dynamic_box_route@29
debug: removing jump-chain block main_sum_dynamic_box_route@30
debug: removing jump-chain block main_write_dynamic_box_route@31
debug: removing jump-chain block main_write_dynamic_arr_struct_route@32
debug: removing jump-chain block main_slice_box_route@33
debug: removing jump-chain block main_test_box_ref_route@35
debug: removing jump-chain block main_box_map_test_route@36
debug: removing jump-chain block main_box_map_set_route@37
debug: removing jump-chain block main_box_map_get_route@38
debug: removing jump-chain block main_box_map_del_route@39
debug: removing jump-chain block main_box_map_exists_route@40
debug: branching to main_set_boxes_route@6 will be replaced with set_boxes
debug: branching to main_set_many_ints_route@9 will be replaced with set_many_ints
debug: branching to main_sum_many_ints_route@10 will be replaced with sum_many_ints
debug: branching to main_delete_boxes_route@11 will be replaced with delete_boxes
debug: branching to main_indirect_extract_and_replace_route@12 will be replaced with indirect_extract_and_replace
debug: branching to main_read_boxes_route@13 will be replaced with read_boxes
debug: branching to main_boxes_exist_route@14 will be replaced with boxes_exist
debug: branching to main_create_dynamic_arr_struct_route@15 will be replaced with create_dynamic_arr_struct
debug: branching to main_append_dynamic_arr_struct_route@17 will be replaced with append_dynamic_arr_struct
debug: branching to main_pop_dynamic_arr_struct_route@18 will be replaced with pop_dynamic_arr_struct
debug: branching to main_set_nested_struct_route@19 will be replaced with set_nested_struct
debug: branching to main_nested_write_route@20 will be replaced with nested_write
debug: branching to main_nested_read_route@21 will be replaced with nested_read
debug: branching to main_sum_dynamic_arr_struct_route@22 will be replaced with sum_dynamic_arr_struct
debug: branching to main_set_bool_route@24 will be replaced with set_bool
debug: branching to main_sum_bools_route@25 will be replaced with sum_bools
debug: branching to main_create_dynamic_box_route@26 will be replaced with create_dynamic_box
debug: branching to main_append_dynamic_box_route@28 will be replaced with append_dynamic_box
debug: branching to main_pop_dynamic_box_route@29 will be replaced with pop_dynamic_box
debug: branching to main_sum_dynamic_box_route@30 will be replaced with sum_dynamic_box
debug: branching to main_write_dynamic_box_route@31 will be replaced with write_dynamic_box
debug: branching to main_write_dynamic_arr_struct_route@32 will be replaced with write_dynamic_arr_struct
debug: branching to main_slice_box_route@33 will be replaced with slice_box
debug: branching to main_test_box_ref_route@35 will be replaced with test_box_ref
debug: branching to main_box_map_test_route@36 will be replaced with box_map_test
debug: branching to main_box_map_set_route@37 will be replaced with box_map_set
debug: branching to main_box_map_get_route@38 will be replaced with box_map_get
debug: branching to main_box_map_del_route@39 will be replaced with box_map_del
debug: branching to main_box_map_exists_route@40 will be replaced with box_map_exists
box_storage/contract.py:95:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.set_boxes[routing]() -> void:
debug: inlining single reference block set_boxes_block@0 into set_boxes
box_storage/contract.py:142:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.set_many_ints[routing]() -> void:
debug: inlining single reference block set_many_ints_block@0 into set_many_ints
box_storage/contract.py:146:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.sum_many_ints[routing]() -> void:
debug: inlining single reference block sum_many_ints_while_body@8 into sum_many_ints_while_top@7
debug: inlining single reference block sum_many_ints_for_body@3 into sum_many_ints_for_header@2
debug: removing explicit jump to fall-through block sum_many_ints_while_top@7
debug: removing explicit jump to fall-through block sum_many_ints_for_header@2
box_storage/contract.py:154:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.delete_boxes[routing]() -> void:
debug: inlining single reference block delete_boxes_block@0 into delete_boxes
box_storage/contract.py:167:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]() -> void:
debug: inlining single reference block indirect_extract_and_replace_block@0 into indirect_extract_and_replace
box_storage/contract.py:173:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.read_boxes[routing]() -> void:
debug: inlining single reference block read_boxes_block@0 into read_boxes
box_storage/contract.py:182:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.boxes_exist[routing]() -> void:
debug: inlining single reference block boxes_exist_block@0 into boxes_exist
box_storage/contract.py:186:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]() -> void:
debug: inlining single reference block create_dynamic_arr_struct_block@0 into create_dynamic_arr_struct
box_storage/contract.py:199:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]() -> void:
debug: inlining single reference block append_dynamic_arr_struct_block@0 into append_dynamic_arr_struct
debug: inlining single reference block append_dynamic_arr_struct_for_body@3 into append_dynamic_arr_struct_for_header@2
debug: removing explicit jump to fall-through block append_dynamic_arr_struct_for_header@2
box_storage/contract.py:231:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]() -> void:
debug: inlining single reference block pop_dynamic_arr_struct_block@0 into pop_dynamic_arr_struct
box_storage/contract.py:253:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.set_nested_struct[routing]() -> void:
debug: inlining single reference block set_nested_struct_block@0 into set_nested_struct
box_storage/contract.py:267:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.nested_write[routing]() -> void:
debug: inlining single reference block nested_write_block@0 into nested_write
box_storage/contract.py:277:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.nested_read[routing]() -> void:
debug: inlining single reference block nested_read_block@0 into nested_read
box_storage/contract.py:289:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]() -> void:
debug: inlining single reference block sum_dynamic_arr_struct_block@0 into sum_dynamic_arr_struct
debug: inlining single reference block sum_dynamic_arr_struct_for_body@3 into sum_dynamic_arr_struct_for_header@2
debug: inlining single reference block sum_dynamic_arr_struct_for_body@7 into sum_dynamic_arr_struct_for_header@6
debug: removing explicit jump to fall-through block sum_dynamic_arr_struct_for_header@2
debug: removing explicit jump to fall-through block sum_dynamic_arr_struct_for_header@6
box_storage/contract.py:304:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.set_bool[routing]() -> void:
debug: inlining single reference block set_bool_block@0 into set_bool
box_storage/contract.py:308:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.sum_bools[routing]() -> void:
debug: inlining single reference block sum_bools_block@0 into sum_bools
debug: inlining single reference block sum_bools_for_body@3 into sum_bools_for_header@2
debug: inlining single reference block sum_bools_if_body@4 into sum_bools_for_header@2
debug: inlining single reference block sum_bools_after_if_else@7 into sum_bools_after_if_else@5
debug: removing explicit jump to fall-through block sum_bools_for_header@2
debug: removing explicit jump to fall-through block sum_bools_after_if_else@5
box_storage/contract.py:318:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.create_dynamic_box[routing]() -> void:
debug: inlining single reference block create_dynamic_box_block@0 into create_dynamic_box
box_storage/contract.py:326:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.append_dynamic_box[routing]() -> void:
debug: inlining single reference block append_dynamic_box_block@0 into append_dynamic_box
debug: inlining single reference block append_dynamic_box_for_body@3 into append_dynamic_box_for_header@2
debug: removing explicit jump to fall-through block append_dynamic_box_for_header@2
box_storage/contract.py:341:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]() -> void:
debug: inlining single reference block pop_dynamic_box_block@0 into pop_dynamic_box
box_storage/contract.py:352:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]() -> void:
debug: inlining single reference block sum_dynamic_box_block@0 into sum_dynamic_box
debug: inlining single reference block sum_dynamic_box_for_body@3 into sum_dynamic_box_for_header@2
debug: removing explicit jump to fall-through block sum_dynamic_box_for_header@2
box_storage/contract.py:359:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.write_dynamic_box[routing]() -> void:
debug: inlining single reference block write_dynamic_box_block@0 into write_dynamic_box
box_storage/contract.py:363:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]() -> void:
debug: inlining single reference block write_dynamic_arr_struct_block@0 into write_dynamic_arr_struct
box_storage/contract.py:367:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.slice_box[routing]() -> void:
debug: inlining single reference block slice_box_block@0 into slice_box
box_storage/contract.py:386:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.test_box_ref[routing]() -> void:
debug: inlining single reference block test_box_ref_block@0 into test_box_ref
box_storage/contract.py:434:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.box_map_test[routing]() -> void:
debug: inlining single reference block box_map_test_block@0 into box_map_test
box_storage/contract.py:458:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.box_map_set[routing]() -> void:
debug: inlining single reference block box_map_set_block@0 into box_map_set
box_storage/contract.py:462:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.box_map_get[routing]() -> void:
debug: inlining single reference block box_map_get_block@0 into box_map_get
box_storage/contract.py:466:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.box_map_del[routing]() -> void:
debug: inlining single reference block box_map_del_block@0 into box_map_del
box_storage/contract.py:470:6 debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.box_map_exists[routing]() -> void:
debug: inlining single reference block box_map_exists_block@0 into box_map_exists
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing box_storage/out/BoxContract.arc32.json
info: Writing box_storage/out/BoxContract.arc56.json
info: Writing box_storage/out/BoxContract.approval.teal
info: Writing box_storage/out/BoxContract.clear.teal
info: Writing box_storage/out/BoxContract.approval.bin
info: Writing box_storage/out/BoxContract.clear.bin
info: Writing box_storage/out/BoxContract.approval.stats.txt
info: Writing box_storage/out/BoxContract.clear.stats.txt
info: Writing box_storage/out/BoxContract.approval.puya.map
info: Writing box_storage/out/BoxContract.clear.puya.map
info: writing box_storage/out/client_BoxContract.py