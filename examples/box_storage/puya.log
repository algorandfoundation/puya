debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['box_storage'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
box_storage/contract.py:137:9 warning: expression result is ignored
box_storage/contract.py:139:9 warning: expression result is ignored
info: writing box_storage/out/module.awst
debug: Sealing block@0: // L12
debug: Terminated block@0: // L12
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@2: // while_body_L21
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L21
debug: Sealing block@3: // switch_case_0_L28
debug: Terminated block@3: // switch_case_0_L28
debug: Sealing block@4: // switch_case_1_L30
debug: Terminated block@4: // switch_case_1_L30
debug: Sealing block@5: // switch_case_default_L26
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@2: // while_body_L12
debug: Terminated block@2: // while_body_L12
debug: Sealing block@3: // if_body_L13
debug: Terminated block@3: // if_body_L13
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Sealing block@2: // for_body_L111
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Terminated block@2: // for_body_L111
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@1: // for_header_L110
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L92
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L110
debug: Sealing block@4: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@1: // if_body_L147
debug: Terminated block@1: // if_body_L147
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3: // for_header_L150
debug: Terminated block@3: // for_header_L150
debug: Sealing block@4: // for_body_L151
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3: // for_header_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3: // for_header_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3: // for_header_L150
debug: Terminated block@4: // for_body_L151
debug: Sealing block@5: // for_footer_L150
debug: Terminated block@5: // for_footer_L150
debug: Sealing block@3: // for_header_L150
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2: // after_if_else_L146
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L147
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2: // after_if_else_L146
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5: // for_footer_L150
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2: // after_if_else_L146
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2: // after_if_else_L146
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5: // for_footer_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6: // after_for_L150
debug: Terminated block@6: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Sealing block@2: // for_body_L200
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Terminated block@2: // for_body_L200
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@1: // for_header_L199
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L189
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L199
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5: // for_header_L204
debug: Terminated block@5: // for_header_L204
debug: Sealing block@6: // for_body_L205
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5: // for_header_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5: // for_header_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5: // for_header_L204
debug: Terminated block@6: // for_body_L205
debug: Sealing block@7: // for_footer_L204
debug: Terminated block@7: // for_footer_L204
debug: Sealing block@5: // for_header_L204
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4: // after_for_L199
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7: // for_footer_L204
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4: // after_for_L199
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7: // for_footer_L204
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4: // after_for_L199
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Sealing block@2: // for_body_L270
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Terminated block@2: // for_body_L270
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@1: // for_header_L269
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L252
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L269
debug: Terminated block@4: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Sealing block@2: // for_body_L328
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Terminated block@2: // for_body_L328
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@1: // for_header_L327
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L306
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3: // for_footer_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3: // for_footer_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3: // for_footer_L327
debug: Sealing block@4: // after_for_L327
debug: Terminated block@4: // after_for_L327
debug: Sealing block@0: // L8
debug: Terminated block@0: // L8
debug: Sealing block@1: // abi_routing_L8
debug: Terminated block@1: // abi_routing_L8
debug: Sealing block@2: // set_boxes_route_L17
debug: Terminated block@2: // set_boxes_route_L17
debug: Sealing block@3: // check_keys_route_L48
debug: Terminated block@3: // check_keys_route_L48
debug: Sealing block@4: // delete_boxes_route_L54
debug: Terminated block@4: // delete_boxes_route_L54
debug: Sealing block@5: // read_boxes_route_L66
debug: Terminated block@5: // read_boxes_route_L66
debug: Sealing block@6: // boxes_exist_route_L70
debug: Terminated block@6: // boxes_exist_route_L70
debug: Sealing block@7: // slice_box_route_L74
debug: Terminated block@7: // slice_box_route_L74
debug: Sealing block@8: // arc4_box_route_L83
debug: Terminated block@8: // arc4_box_route_L83
debug: Sealing block@9: // test_box_ref_route_L93
debug: Terminated block@9: // test_box_ref_route_L93
debug: Sealing block@10: // box_map_test_route_L141
debug: Terminated block@10: // box_map_test_route_L141
debug: Sealing block@11: // box_map_set_route_L162
debug: Terminated block@11: // box_map_set_route_L162
debug: Sealing block@12: // box_map_get_route_L166
debug: Terminated block@12: // box_map_get_route_L166
debug: Sealing block@13: // box_map_del_route_L170
debug: Terminated block@13: // box_map_del_route_L170
debug: Sealing block@14: // box_map_exists_route_L174
debug: Terminated block@14: // box_map_exists_route_L174
debug: Sealing block@15: // switch_case_default_L8
debug: Terminated block@15: // switch_case_default_L8
debug: Sealing block@16: // switch_case_next_L8
debug: Terminated block@16: // switch_case_next_L8
debug: Sealing block@17: // bare_routing_L8
debug: Terminated block@17: // bare_routing_L8
debug: Sealing block@18: // __algopy_default_create_L1
debug: Terminated block@18: // __algopy_default_create_L1
debug: Sealing block@19: // switch_case_default_L8
debug: Terminated block@19: // switch_case_default_L8
debug: Sealing block@20: // switch_case_next_L8
debug: Terminated block@20: // switch_case_next_L8
debug: Sealing block@21: // after_if_else_L8
debug: Terminated block@21: // after_if_else_L8
debug: Sealing block@0: // L9
debug: Terminated block@0: // L9
debug: Sealing block@0: // L17
debug: Terminated block@0: // L17
debug: Sealing block@0: // L48
debug: Terminated block@0: // L48
debug: Sealing block@0: // L54
debug: Terminated block@0: // L54
debug: Sealing block@0: // L66
debug: Terminated block@0: // L66
debug: Sealing block@0: // L179
debug: Terminated block@0: // L179
debug: Sealing block@0: // L70
debug: Terminated block@0: // L70
debug: Sealing block@0: // L74
debug: Terminated block@0: // L74
debug: Sealing block@0: // L83
debug: Terminated block@0: // L83
debug: Sealing block@0: // L93
debug: Terminated block@0: // L93
debug: Sealing block@0: // L184
debug: Terminated block@0: // L184
debug: Sealing block@0: // L141
debug: Terminated block@0: // L141
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Sealing block@0: // L162
debug: Terminated block@0: // L162
debug: Sealing block@0: // L166
debug: Terminated block@0: // L166
debug: Sealing block@0: // L170
debug: Terminated block@0: // L170
debug: Sealing block@0: // L174
debug: Terminated block@0: // L174
debug: Sealing block@0: // L1
debug: Terminated block@0: // L1
debug: Sealing block@0: // L1
debug: Terminated block@0: // L1
debug: Sealing block@1: // call __init___L1
debug: Terminated block@1: // call __init___L1
debug: Sealing block@2: // after_if_else_L1
debug: Terminated block@2: // after_if_else_L1
debug: Sealing block@0: // L1
debug: Terminated block@0: // L1
debug: Output IR to box_storage/out/BoxContract.ssa.ir
info: optimizing examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000c
debug: Simplified (== tmp%24#0 NoOp) to (! tmp%24#0)
debug: Simplified (concat 0x encoded_bool%0#0) to encoded_bool%0#0
debug: Simplified (== tmp%29#0 NoOp) to (! tmp%29#0)
debug: Simplified (== tmp%33#0 NoOp) to (! tmp%33#0)
debug: Simplified (== tmp%37#0 NoOp) to (! tmp%37#0)
debug: Simplified (== tmp%41#0 NoOp) to (! tmp%41#0)
debug: Simplified (== tmp%45#0 NoOp) to (! tmp%45#0)
debug: Simplified (== tmp%53#0 NoOp) to (! tmp%53#0)
debug: Simplified (== tmp%60#0 NoOp) to (! tmp%60#0)
debug: Simplified (== tmp%66#0 NoOp) to (! tmp%66#0)
debug: Simplified (== tmp%74#0 0u) to (! tmp%74#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable encoded_tuple_buffer%6#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%40#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable tmp%48#0
debug: Removing unused variable tmp%56#0
debug: Removing unused variable tmp%63#0
debug: Removing unused variable tmp%69#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L8 as a predecessor of block@16: // switch_case_next_L8 due to inlining of block@15: // switch_case_default_L8
debug: simplified terminator of block@1: // abi_routing_L8 from switch tmp%2#0 {method "set_boxes(uint64,byte[],string)void" => block@2, method "check_keys()void" => block@3, method "delete_boxes()void" => block@4, method "read_boxes()(uint64,byte[],string)" => block@5, method "boxes_exist()(bool,bool,bool)" => block@6, method "slice_box()void" => block@7, method "arc4_box()void" => block@8, method "test_box_ref()void" => block@9, method "box_map_test()void" => block@10, method "box_map_set(uint64,string)void" => block@11, method "box_map_get(uint64)string" => block@12, method "box_map_del(uint64)void" => block@13, method "box_map_exists(uint64)bool" => block@14, * => block@15} to switch tmp%2#0 {method "set_boxes(uint64,byte[],string)void" => block@2, method "check_keys()void" => block@3, method "delete_boxes()void" => block@4, method "read_boxes()(uint64,byte[],string)" => block@5, method "boxes_exist()(bool,bool,bool)" => block@6, method "slice_box()void" => block@7, method "arc4_box()void" => block@8, method "test_box_ref()void" => block@9, method "box_map_test()void" => block@10, method "box_map_set(uint64,string)void" => block@11, method "box_map_get(uint64)string" => block@12, method "box_map_del(uint64)void" => block@13, method "box_map_exists(uint64)bool" => block@14, * => block@16}
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@17: // bare_routing_L8 from switch tmp%73#0 {0u => block@18, * => block@19} to goto_nth [block@18][tmp%73#0] else goto block@19
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L8 as a predecessor of block@21: // after_if_else_L8 due to inlining of block@16: // switch_case_next_L8
debug: simplified terminator of block@1: // abi_routing_L8 from switch tmp%2#0 {method "set_boxes(uint64,byte[],string)void" => block@2, method "check_keys()void" => block@3, method "delete_boxes()void" => block@4, method "read_boxes()(uint64,byte[],string)" => block@5, method "boxes_exist()(bool,bool,bool)" => block@6, method "slice_box()void" => block@7, method "arc4_box()void" => block@8, method "test_box_ref()void" => block@9, method "box_map_test()void" => block@10, method "box_map_set(uint64,string)void" => block@11, method "box_map_get(uint64)string" => block@12, method "box_map_del(uint64)void" => block@13, method "box_map_exists(uint64)bool" => block@14, * => block@16} to switch tmp%2#0 {method "set_boxes(uint64,byte[],string)void" => block@2, method "check_keys()void" => block@3, method "delete_boxes()void" => block@4, method "read_boxes()(uint64,byte[],string)" => block@5, method "boxes_exist()(bool,bool,bool)" => block@6, method "slice_box()void" => block@7, method "arc4_box()void" => block@8, method "test_box_ref()void" => block@9, method "box_map_test()void" => block@10, method "box_map_set(uint64,string)void" => block@11, method "box_map_get(uint64)string" => block@12, method "box_map_del(uint64)void" => block@13, method "box_map_exists(uint64)bool" => block@14, * => block@21}
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@17: // bare_routing_L8 from goto_nth [block@18][tmp%73#0] else goto block@19 to goto tmp%73#0 ? block@19 : block@18
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@1: // abi_routing_L8 from switch tmp%2#0 {method "set_boxes(uint64,byte[],string)void" => block@2, method "check_keys()void" => block@3, method "delete_boxes()void" => block@4, method "read_boxes()(uint64,byte[],string)" => block@5, method "boxes_exist()(bool,bool,bool)" => block@6, method "slice_box()void" => block@7, method "arc4_box()void" => block@8, method "test_box_ref()void" => block@9, method "box_map_test()void" => block@10, method "box_map_set(uint64,string)void" => block@11, method "box_map_get(uint64)string" => block@12, method "box_map_del(uint64)void" => block@13, method "box_map_exists(uint64)bool" => block@14, * => block@21} to switch tmp%2#0 {method "set_boxes(uint64,byte[],string)void" => block@2, method "check_keys()void" => block@3, method "delete_boxes()void" => block@4, method "read_boxes()(uint64,byte[],string)" => block@5, method "boxes_exist()(bool,bool,bool)" => block@6, method "slice_box()void" => block@7, method "arc4_box()void" => block@8, method "test_box_ref()void" => block@9, method "box_map_test()void" => block@10, method "box_map_set(uint64,string)void" => block@11, method "box_map_get(uint64)string" => block@12, method "box_map_del(uint64)void" => block@13, method "box_map_exists(uint64)bool" => block@14, * => return 0u}
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@16: // switch_case_next_L8 with block@15: // switch_case_default_L8 in block@21: // after_if_else_L8
debug: Merged linear block@16: // switch_case_next_L8 into block@15: // switch_case_default_L8
debug: Replaced predecessor block@20: // switch_case_next_L8 with block@19: // switch_case_default_L8 in block@21: // after_if_else_L8
debug: Merged linear block@20: // switch_case_next_L8 into block@19: // switch_case_default_L8
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@15: // switch_case_default_L8
debug: Removed empty block: block@19: // switch_case_default_L8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b#0, copy%0#0
debug: Replacing {copy%0#0} with b#0 made 1 modifications
debug: Found equivalence set: maybe_value%0#0, copy%1#0, b_value#0
debug: Replacing {maybe_value%0#0, copy%1#0} with b_value#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- tmp%26#0 0u) to tmp%26#0
debug: Simplified (- tmp%34#0 0u) to tmp%34#0
debug: Simplified (- tmp%57#0 0u) to tmp%57#0
debug: Simplified (- tmp%66#0 0u) to tmp%66#0
debug: Simplified (- tmp%75#0 0u) to tmp%75#0
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%18#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:32:36-50, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:32:36-50, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:32:36-50, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let tmp%40#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%47#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%50#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%60#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%69#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%78#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Found equivalence set: new_box_value%1#0, tmp%8#0, tmp%40#0, tmp%47#0, tmp%50#0, tmp%60#0, tmp%69#0, tmp%78#0
debug: Replacing {tmp%8#0, tmp%40#0, tmp%47#0, tmp%50#0, tmp%60#0, tmp%69#0, tmp%78#0} with new_box_value%1#0 made 10 modifications
debug: Found equivalence set: tmp%6#0, tmp%18#0, length%0#0, length%1#0
debug: Replacing {tmp%18#0, length%0#0, length%1#0} with tmp%6#0 made 6 modifications
debug: Found equivalence set: tmp%26#0, tmp%27#0
debug: Replacing {tmp%27#0} with tmp%26#0 made 1 modifications
debug: Found equivalence set: tmp%34#0, tmp%35#0
debug: Replacing {tmp%35#0} with tmp%34#0 made 1 modifications
debug: Found equivalence set: tmp%57#0, tmp%58#0
debug: Replacing {tmp%58#0} with tmp%57#0 made 1 modifications
debug: Found equivalence set: tmp%66#0, tmp%67#0
debug: Replacing {tmp%67#0} with tmp%66#0 made 1 modifications
debug: Found equivalence set: tmp%75#0, tmp%76#0
debug: Replacing {tmp%76#0} with tmp%75#0 made 1 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%2#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%3#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%4#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Found equivalence set: tmp%9#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: Replacing {tmp%48#0, length%2#0, length%3#0, length%4#0} with tmp%9#0 made 8 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: Replacing {maybe_value_converted%1#0} with a#0 made 1 modifications
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: Replacing {maybe_exists%3#0} with a_exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x3432) to 2u
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Simplified (select tmp%0#0 0u tmp%6#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%6#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%7#0: uint64 = (select tmp%0#0 0u tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:78:15-31, ir_type=uint64, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%17#0: bool = (< 2u tmp%11#0) with copy of existing registers (Register(source_location=box_storage/contract.py:81:15-43, ir_type=bool, name='tmp%13', version=0),)
debug: Found equivalence set: tmp%3#0, tmp%7#0
debug: Replacing {tmp%7#0} with tmp%3#0 made 1 modifications
debug: Found equivalence set: tmp%13#0, tmp%17#0
debug: Replacing {tmp%17#0} with tmp%13#0 made 1 modifications
debug: Replacing redundant declaration let tmp%18#0: uint64 = (select tmp%11#0 2u tmp%13#0) with copy of existing registers (Register(source_location=box_storage/contract.py:81:15-43, ir_type=uint64, name='tmp%14', version=0),)
debug: Found equivalence set: tmp%14#0, tmp%18#0
debug: Replacing {tmp%18#0} with tmp%14#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, array_head_and_tail%0#0
debug: Replacing {array_head_and_tail%0#0} with maybe_value%0#0 made 1 modifications
debug: Found equivalence set: maybe_value%1#0, array_head_and_tail%1#0
debug: Replacing {array_head_and_tail%1#0} with maybe_value%1#0 made 1 modifications
debug: Found equivalence set: maybe_value%2#0, array_head_and_tail%2#0
debug: Replacing {array_head_and_tail%2#0} with maybe_value%2#0 made 1 modifications
debug: Found equivalence set: maybe_value%3#0, array_head_and_tail%3#0
debug: Replacing {array_head_and_tail%3#0} with maybe_value%3#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x result%3#0) to result%3#0
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%5#0, value#0
debug: Replacing {maybe_value%5#0} with value#0 made 1 modifications
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: Replacing {maybe_exists%5#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, value#1
debug: Replacing {maybe_value%1#0} with value#1 made 1 modifications
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: Replacing {maybe_exists%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Simplified (concat "" tmp%2#0) to tmp%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" tmp%6#0) to tmp%6#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" tmp%10#0) to tmp%10#0
debug: Simplified (concat "" tmp%14#0) to tmp%14#0
debug: Simplified (concat "" tmp%17#0) to tmp%17#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x tmp%20#0) to tmp%20#0
debug: Simplified (concat 0x tmp%24#0) to tmp%24#0
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: bytes = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:146:8-27, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%6#0: bytes = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:146:8-27, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%14#0: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%17#0: bytes = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:146:8-27, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%20#0: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%24#0: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%1#0, tmp%2#0, tmp%3#0, tmp%6#0, tmp%7#0, tmp%17#0, tmp%18#0
debug: Replacing {tmp%1#0, tmp%2#0, tmp%3#0, tmp%6#0, tmp%7#0, tmp%17#0, tmp%18#0} with tmp%0#0 made 5 modifications
debug: Found equivalence set: tmp%10#0, tmp%11#0, tmp%14#0, tmp%15#0, tmp%20#0, tmp%21#0, tmp%24#0, tmp%25#0
debug: Replacing {tmp%11#0, tmp%14#0, tmp%15#0, tmp%20#0, tmp%21#0, tmp%24#0, tmp%25#0} with tmp%10#0 made 5 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to box_storage/out/BoxContract.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1: // call __init___L1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: Replacing {encoded_tuple_buffer%1#0} with val_as_bytes%0#0 made 1 modifications
debug: Found equivalence set: encoded_bool%0#0, encoded_tuple_buffer%7#0
debug: Replacing {encoded_tuple_buffer%7#0} with encoded_bool%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%1#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: result%3#0, array_data%0#0
debug: Replacing {array_data%0#0} with result%3#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x00 0x01) to 0x0001
debug: Simplified (extract3 maybe_value%0#0 0u 1u) // on error: Index access is out of bounds to ((extract 0 1) maybe_value%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%1#0 1u 1u) // on error: Index access is out of bounds to ((extract 1 1) maybe_value%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%2#0 2u 1u) // on error: Index access is out of bounds to ((extract 2 1) maybe_value%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%3#0 3u 1u) // on error: Index access is out of bounds to ((extract 3 1) maybe_value%3#0) // on error: Index access is out of bounds
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result%0#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item_offset%1#0
debug: Removing unused variable item_offset%2#0
debug: Removing unused variable item_offset%3#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 64u 5u) to 69u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%11#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%19#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Replacing {tmp%1#0} with tmp%0#0 made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Replacing {tmp%1#0} with tmp%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Replacing {tmp%1#0} with tmp%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Replacing {tmp%1#0} with tmp%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to box_storage/out/BoxContract.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@2: // after_if_else_L1 into block@0: // L1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length_uint16%0#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0001 0x02) to 0x000102
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result%1#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%6#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to box_storage/out/BoxContract.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded_value%0#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x000102 0x03) to 0x00010203
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result%2#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to box_storage/out/BoxContract.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result%3#0
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to box_storage/out/BoxContract.ssa.opt_pass_5.ir
debug: Begin optimization pass 6/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Remove Unused Ops
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 6, ending loop
debug: Removing Phis from examples.box_storage.contract.BoxContract.approval_program
debug: Removing Phis from examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Removing Phis from examples.box_storage.contract.BoxContract.set_boxes
debug: Removing Phis from examples.box_storage.contract.BoxContract.delete_boxes
debug: Removing Phis from examples.box_storage.contract.BoxContract.read_boxes
debug: Removing Phis from examples.box_storage.contract.get_box_value_plus_1
debug: Removing Phis from examples.box_storage.contract.BoxContract.boxes_exist
debug: Removing Phis from examples.box_storage.contract.BoxContract.slice_box
debug: Removing Phis from examples.box_storage.contract.BoxContract.arc4_box
debug: Removing Phis from examples.box_storage.contract.BoxContract.test_box_ref
debug: Removing Phis from examples.box_storage.contract.get_box_ref_length
debug: Removing Phis from examples.box_storage.contract.BoxContract.box_map_test
debug: Removing Phis from examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Removing Phis from examples.box_storage.contract.BoxContract.box_map_set
debug: Removing Phis from examples.box_storage.contract.BoxContract.box_map_get
debug: Removing Phis from examples.box_storage.contract.BoxContract.box_map_del
debug: Removing Phis from examples.box_storage.contract.BoxContract.box_map_exists
debug: Removing Phis from algopy.arc4.ARC4Contract.clear_state_program
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__puya_arc4_router__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_boxes using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_boxes using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.read_boxes using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.get_box_value_plus_1 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.boxes_exist using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.slice_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.arc4_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.test_box_ref using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.get_box_ref_length using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_test using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.get_box_map_value_from_key_plus_1 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_set using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_get using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_del using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_exists using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.approval_program
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_boxes
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_boxes
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.read_boxes
debug: Sequentializing parallel copies in examples.box_storage.contract.get_box_value_plus_1
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.boxes_exist
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.slice_box
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.arc4_box
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.test_box_ref
debug: Sequentializing parallel copies in examples.box_storage.contract.get_box_ref_length
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_test
debug: Sequentializing parallel copies in examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_set
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_get
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_del
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_exists
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to box_storage/out/BoxContract.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted __puya_arc4_router___block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced __puya_arc4_router___block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted __puya_arc4_router___abi_routing@1.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced __puya_arc4_router___abi_routing@1.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[15]: 'l-store-copy tmp%7#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[17]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[23]: 'l-store-copy tmp%10#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[27]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[21]: 'l-store-copy tmp%9#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[27]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted __puya_arc4_router___set_boxes_route@2.ops[19]: 'l-store-copy tmp%8#0 0'
debug: Replaced __puya_arc4_router___set_boxes_route@2.ops[27]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted __puya_arc4_router___check_keys_route@3.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced __puya_arc4_router___check_keys_route@3.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted __puya_arc4_router___check_keys_route@3.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced __puya_arc4_router___check_keys_route@3.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted __puya_arc4_router___check_keys_route@3.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced __puya_arc4_router___check_keys_route@3.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted __puya_arc4_router___delete_boxes_route@4.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced __puya_arc4_router___delete_boxes_route@4.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted __puya_arc4_router___delete_boxes_route@4.ops[5]: 'l-store-copy tmp%16#0 0'
debug: Replaced __puya_arc4_router___delete_boxes_route@4.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted __puya_arc4_router___delete_boxes_route@4.ops[10]: 'l-store-copy tmp%17#0 0'
debug: Replaced __puya_arc4_router___delete_boxes_route@4.ops[12]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[1]: 'l-store-copy tmp%19#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[3]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[5]: 'l-store-copy tmp%20#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[7]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[10]: 'l-store-copy tmp%21#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[12]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[17]: 'l-store-copy elements_to_encode%0#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[19]: 'v-load elements_to_encode%0#0' with 'l-load elements_to_encode%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[24]: 'l-store-copy length%0#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[26]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[28]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[30]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[32]: 'l-store-copy length_uint16%0#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[34]: 'v-load length_uint16%0#0' with 'l-load length_uint16%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[48]: 'l-store-copy current_tail_offset%1#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[50]: 'v-load current_tail_offset%1#0' with 'l-load current_tail_offset%1#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[52]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[54]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[60]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[62]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[65]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[67]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[74]: 'l-store-copy tmp%23#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[76]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[44]: 'l-store-copy data_length%0#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[47]: 'v-load data_length%0#0' with 'l-load data_length%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[57]: 'l-store-copy offset_as_uint16%1#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[60]: 'v-load offset_as_uint16%1#0' with 'l-load offset_as_uint16%1#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[72]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[75]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[16]: 'l-store-copy elements_to_encode%1#0 1'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[23]: 'v-load elements_to_encode%1#0' with 'l-load elements_to_encode%1#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[38]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[44]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[24]: 'l-store-copy elements_to_encode%1#0 0'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[37]: 'v-load elements_to_encode%1#0' with 'l-load elements_to_encode%1#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[22]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[42]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[45]: 'l-store-copy encoded_tuple_buffer%2#0 1'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[64]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[48]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[71]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted __puya_arc4_router___read_boxes_route@5.ops[15]: 'l-store-copy elements_to_encode%2#0 2'
debug: Replaced __puya_arc4_router___read_boxes_route@5.ops[77]: 'v-load elements_to_encode%2#0' with 'l-load elements_to_encode%2#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[1]: 'l-store-copy tmp%24#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[3]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[5]: 'l-store-copy tmp%25#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[7]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[10]: 'l-store-copy tmp%26#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[12]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[54]: 'l-store-copy tmp%28#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[56]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[50]: 'l-store-copy encoded_tuple_buffer%9#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[53]: 'v-load encoded_tuple_buffer%9#0' with 'l-load encoded_tuple_buffer%9#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[17]: 'l-store-copy elements_to_encode%3#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[21]: 'v-load elements_to_encode%3#0' with 'l-load elements_to_encode%3#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[37]: 'l-store-copy is_true%0#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[41]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[47]: 'l-store-copy is_true%1#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[51]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[43]: 'l-store-copy encoded_tuple_buffer%8#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[50]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[28]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[35]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[16]: 'l-store-copy elements_to_encode%4#0 1'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[27]: 'v-load elements_to_encode%4#0' with 'l-load elements_to_encode%4#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[35]: 'l-store-copy encoded_bool%2#0 1'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[48]: 'v-load encoded_bool%2#0' with 'l-load encoded_bool%2#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[15]: 'l-store-copy elements_to_encode%5#0 2'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[34]: 'v-load elements_to_encode%5#0' with 'l-load elements_to_encode%5#0'
debug: Inserted __puya_arc4_router___boxes_exist_route@6.ops[25]: 'l-store-copy encoded_bool%0#0 2'
debug: Replaced __puya_arc4_router___boxes_exist_route@6.ops[44]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted __puya_arc4_router___slice_box_route@7.ops[1]: 'l-store-copy tmp%29#0 0'
debug: Replaced __puya_arc4_router___slice_box_route@7.ops[3]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted __puya_arc4_router___slice_box_route@7.ops[5]: 'l-store-copy tmp%30#0 0'
debug: Replaced __puya_arc4_router___slice_box_route@7.ops[7]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted __puya_arc4_router___slice_box_route@7.ops[10]: 'l-store-copy tmp%31#0 0'
debug: Replaced __puya_arc4_router___slice_box_route@7.ops[12]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted __puya_arc4_router___arc4_box_route@8.ops[1]: 'l-store-copy tmp%33#0 0'
debug: Replaced __puya_arc4_router___arc4_box_route@8.ops[3]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted __puya_arc4_router___arc4_box_route@8.ops[5]: 'l-store-copy tmp%34#0 0'
debug: Replaced __puya_arc4_router___arc4_box_route@8.ops[7]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted __puya_arc4_router___arc4_box_route@8.ops[10]: 'l-store-copy tmp%35#0 0'
debug: Replaced __puya_arc4_router___arc4_box_route@8.ops[12]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted __puya_arc4_router___test_box_ref_route@9.ops[1]: 'l-store-copy tmp%37#0 0'
debug: Replaced __puya_arc4_router___test_box_ref_route@9.ops[3]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted __puya_arc4_router___test_box_ref_route@9.ops[5]: 'l-store-copy tmp%38#0 0'
debug: Replaced __puya_arc4_router___test_box_ref_route@9.ops[7]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted __puya_arc4_router___test_box_ref_route@9.ops[10]: 'l-store-copy tmp%39#0 0'
debug: Replaced __puya_arc4_router___test_box_ref_route@9.ops[12]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted __puya_arc4_router___box_map_test_route@10.ops[1]: 'l-store-copy tmp%41#0 0'
debug: Replaced __puya_arc4_router___box_map_test_route@10.ops[3]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted __puya_arc4_router___box_map_test_route@10.ops[5]: 'l-store-copy tmp%42#0 0'
debug: Replaced __puya_arc4_router___box_map_test_route@10.ops[7]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted __puya_arc4_router___box_map_test_route@10.ops[10]: 'l-store-copy tmp%43#0 0'
debug: Replaced __puya_arc4_router___box_map_test_route@10.ops[12]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[1]: 'l-store-copy tmp%45#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[3]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[5]: 'l-store-copy tmp%46#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[7]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[10]: 'l-store-copy tmp%47#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[12]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[15]: 'l-store-copy tmp%49#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[17]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[21]: 'l-store-copy tmp%51#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[23]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[25]: 'l-store-copy tmp%52#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[28]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted __puya_arc4_router___box_map_set_route@11.ops[19]: 'l-store-copy tmp%50#0 0'
debug: Replaced __puya_arc4_router___box_map_set_route@11.ops[28]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[1]: 'l-store-copy tmp%53#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[3]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[5]: 'l-store-copy tmp%54#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[7]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[10]: 'l-store-copy tmp%55#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[12]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[15]: 'l-store-copy tmp%57#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[17]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[19]: 'l-store-copy tmp%58#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[21]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[23]: 'l-store-copy to_encode%0#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[25]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[27]: 'l-store-copy length%1#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[29]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[31]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[33]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[35]: 'l-store-copy length_uint16%1#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[37]: 'v-load length_uint16%1#0' with 'l-load length_uint16%1#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[44]: 'l-store-copy tmp%59#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[46]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[40]: 'l-store-copy encoded_value%1#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[43]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted __puya_arc4_router___box_map_get_route@12.ops[26]: 'l-store-copy to_encode%0#0 0'
debug: Replaced __puya_arc4_router___box_map_get_route@12.ops[39]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted __puya_arc4_router___box_map_del_route@13.ops[1]: 'l-store-copy tmp%60#0 0'
debug: Replaced __puya_arc4_router___box_map_del_route@13.ops[3]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted __puya_arc4_router___box_map_del_route@13.ops[5]: 'l-store-copy tmp%61#0 0'
debug: Replaced __puya_arc4_router___box_map_del_route@13.ops[7]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted __puya_arc4_router___box_map_del_route@13.ops[10]: 'l-store-copy tmp%62#0 0'
debug: Replaced __puya_arc4_router___box_map_del_route@13.ops[12]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted __puya_arc4_router___box_map_del_route@13.ops[15]: 'l-store-copy tmp%64#0 0'
debug: Replaced __puya_arc4_router___box_map_del_route@13.ops[17]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted __puya_arc4_router___box_map_del_route@13.ops[19]: 'l-store-copy tmp%65#0 0'
debug: Replaced __puya_arc4_router___box_map_del_route@13.ops[21]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[1]: 'l-store-copy tmp%66#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[3]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[5]: 'l-store-copy tmp%67#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[7]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[10]: 'l-store-copy tmp%68#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[12]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[15]: 'l-store-copy tmp%70#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[17]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[19]: 'l-store-copy tmp%71#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[21]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[32]: 'l-store-copy tmp%72#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[34]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[28]: 'l-store-copy encoded_bool%3#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[31]: 'v-load encoded_bool%3#0' with 'l-load encoded_bool%3#0'
debug: Inserted __puya_arc4_router___box_map_exists_route@14.ops[23]: 'l-store-copy to_encode%1#0 0'
debug: Replaced __puya_arc4_router___box_map_exists_route@14.ops[27]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted __puya_arc4_router___bare_routing@17.ops[1]: 'l-store-copy tmp%73#0 0'
debug: Replaced __puya_arc4_router___bare_routing@17.ops[3]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted __puya_arc4_router_____algopy_default_create@18.ops[1]: 'l-store-copy tmp%74#0 0'
debug: Replaced __puya_arc4_router_____algopy_default_create@18.ops[3]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted __puya_arc4_router_____algopy_default_create@18.ops[5]: 'l-store-copy tmp%75#0 0'
debug: Replaced __puya_arc4_router_____algopy_default_create@18.ops[7]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted set_boxes_block@0.ops[50]: 'l-store-copy tmp%2#0 0'
debug: Replaced set_boxes_block@0.ops[52]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted set_boxes_block@0.ops[57]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced set_boxes_block@0.ops[59]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted set_boxes_block@0.ops[67]: 'l-store-copy new_box_value%2#0 0'
debug: Replaced set_boxes_block@0.ops[69]: 'v-load new_box_value%2#0' with 'l-load new_box_value%2#0'
debug: Inserted set_boxes_block@0.ops[84]: 'l-store-copy tmp%3#0 0'
debug: Replaced set_boxes_block@0.ops[86]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted set_boxes_block@0.ops[100]: 'l-store-copy tmp%5#0 0'
debug: Replaced set_boxes_block@0.ops[102]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted set_boxes_block@0.ops[116]: 'l-store-copy tmp%7#0 0'
debug: Replaced set_boxes_block@0.ops[118]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted set_boxes_block@0.ops[132]: 'l-store-copy tmp%10#0 0'
debug: Replaced set_boxes_block@0.ops[134]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted set_boxes_block@0.ops[147]: 'l-store-copy tmp%13#0 0'
debug: Replaced set_boxes_block@0.ops[149]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted set_boxes_block@0.ops[154]: 'l-store-copy tmp%14#0 0'
debug: Replaced set_boxes_block@0.ops[156]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted set_boxes_block@0.ops[177]: 'l-store-copy tmp%21#0 0'
debug: Replaced set_boxes_block@0.ops[179]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted set_boxes_block@0.ops[224]: 'l-store-copy tmp%30#0 0'
debug: Replaced set_boxes_block@0.ops[226]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted set_boxes_block@0.ops[263]: 'l-store-copy tmp%38#0 0'
debug: Replaced set_boxes_block@0.ops[265]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted set_boxes_block@0.ops[278]: 'l-store-copy tmp%42#0 0'
debug: Replaced set_boxes_block@0.ops[280]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted set_boxes_block@0.ops[285]: 'l-store-copy tmp%43#0 0'
debug: Replaced set_boxes_block@0.ops[287]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted set_boxes_block@0.ops[308]: 'l-store-copy tmp%52#0 0'
debug: Replaced set_boxes_block@0.ops[310]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted set_boxes_block@0.ops[355]: 'l-store-copy tmp%62#0 0'
debug: Replaced set_boxes_block@0.ops[357]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted set_boxes_block@0.ops[394]: 'l-store-copy tmp%71#0 0'
debug: Replaced set_boxes_block@0.ops[396]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted set_boxes_block@0.ops[433]: 'l-store-copy tmp%80#0 0'
debug: Replaced set_boxes_block@0.ops[435]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted set_boxes_block@0.ops[2]: 'l-store-copy new_box_value%0#0 0'
debug: Replaced set_boxes_block@0.ops[5]: 'v-load new_box_value%0#0' with 'l-load new_box_value%0#0'
debug: Inserted set_boxes_block@0.ops[30]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced set_boxes_block@0.ops[33]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted set_boxes_block@0.ops[37]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced set_boxes_block@0.ops[40]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted set_boxes_block@0.ops[49]: 'l-store-copy tmp%1#0 0'
debug: Replaced set_boxes_block@0.ops[52]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted set_boxes_block@0.ops[75]: 'l-store-copy new_box_value%3#0 0'
debug: Replaced set_boxes_block@0.ops[78]: 'v-load new_box_value%3#0' with 'l-load new_box_value%3#0'
debug: Inserted set_boxes_block@0.ops[82]: 'l-store-copy check%0#0 1'
debug: Replaced set_boxes_block@0.ops[85]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted set_boxes_block@0.ops[96]: 'l-store-copy check%1#0 1'
debug: Replaced set_boxes_block@0.ops[99]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted set_boxes_block@0.ops[103]: 'l-store-copy tmp%4#0 0'
debug: Replaced set_boxes_block@0.ops[106]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted set_boxes_block@0.ops[114]: 'l-store-copy check%2#0 1'
debug: Replaced set_boxes_block@0.ops[117]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted set_boxes_block@0.ops[121]: 'l-store-copy tmp%6#0 0'
debug: Replaced set_boxes_block@0.ops[124]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[132]: 'l-store-copy check%3#0 1'
debug: Replaced set_boxes_block@0.ops[135]: 'v-load check%3#0' with 'l-load check%3#0'
debug: Inserted set_boxes_block@0.ops[139]: 'l-store-copy tmp%9#0 0'
debug: Replaced set_boxes_block@0.ops[142]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[155]: 'l-store-copy tmp%12#0 0'
debug: Replaced set_boxes_block@0.ops[158]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes_block@0.ops[172]: 'l-store-copy tmp%16#0 0'
debug: Replaced set_boxes_block@0.ops[175]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted set_boxes_block@0.ops[182]: 'l-store-copy tmp%19#0 0'
debug: Replaced set_boxes_block@0.ops[185]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted set_boxes_block@0.ops[188]: 'l-store-copy tmp%20#0 0'
debug: Replaced set_boxes_block@0.ops[191]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted set_boxes_block@0.ops[200]: 'l-store-copy tmp%22#0 0'
debug: Replaced set_boxes_block@0.ops[203]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes_block@0.ops[210]: 'l-store-copy tmp%25#0 0'
debug: Replaced set_boxes_block@0.ops[213]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted set_boxes_block@0.ops[229]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced set_boxes_block@0.ops[232]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted set_boxes_block@0.ops[239]: 'l-store-copy tmp%29#0 0'
debug: Replaced set_boxes_block@0.ops[242]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted set_boxes_block@0.ops[251]: 'l-store-copy tmp%31#0 0'
debug: Replaced set_boxes_block@0.ops[254]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted set_boxes_block@0.ops[280]: 'l-store-copy tmp%37#0 0'
debug: Replaced set_boxes_block@0.ops[283]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted set_boxes_block@0.ops[296]: 'l-store-copy tmp%41#0 0'
debug: Replaced set_boxes_block@0.ops[299]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted set_boxes_block@0.ops[313]: 'l-store-copy tmp%45#0 0'
debug: Replaced set_boxes_block@0.ops[316]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted set_boxes_block@0.ops[323]: 'l-store-copy tmp%49#0 0'
debug: Replaced set_boxes_block@0.ops[326]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted set_boxes_block@0.ops[329]: 'l-store-copy tmp%51#0 0'
debug: Replaced set_boxes_block@0.ops[332]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted set_boxes_block@0.ops[341]: 'l-store-copy tmp%53#0 0'
debug: Replaced set_boxes_block@0.ops[344]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted set_boxes_block@0.ops[351]: 'l-store-copy tmp%56#0 0'
debug: Replaced set_boxes_block@0.ops[354]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted set_boxes_block@0.ops[370]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced set_boxes_block@0.ops[373]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted set_boxes_block@0.ops[380]: 'l-store-copy tmp%61#0 0'
debug: Replaced set_boxes_block@0.ops[383]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted set_boxes_block@0.ops[392]: 'l-store-copy tmp%63#0 0'
debug: Replaced set_boxes_block@0.ops[395]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted set_boxes_block@0.ops[421]: 'l-store-copy tmp%70#0 0'
debug: Replaced set_boxes_block@0.ops[424]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted set_boxes_block@0.ops[433]: 'l-store-copy tmp%72#0 0'
debug: Replaced set_boxes_block@0.ops[436]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted set_boxes_block@0.ops[462]: 'l-store-copy tmp%79#0 0'
debug: Replaced set_boxes_block@0.ops[465]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted set_boxes_block@0.ops[39]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced set_boxes_block@0.ops[43]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted set_boxes_block@0.ops[66]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced set_boxes_block@0.ops[70]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted set_boxes_block@0.ops[86]: 'l-store-copy value%0#0 1'
debug: Replaced set_boxes_block@0.ops[90]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted set_boxes_block@0.ops[207]: 'l-store-copy tmp%22#0 1'
debug: Replaced set_boxes_block@0.ops[210]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes_block@0.ops[209]: 'l-store-copy tmp%24#0 1'
debug: Replaced set_boxes_block@0.ops[213]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted set_boxes_block@0.ops[220]: 'l-store-copy tmp%26#0 0'
debug: Replaced set_boxes_block@0.ops[224]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted set_boxes_block@0.ops[230]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced set_boxes_block@0.ops[234]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted set_boxes_block@0.ops[241]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced set_boxes_block@0.ops[245]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted set_boxes_block@0.ops[263]: 'l-store-copy tmp%31#0 1'
debug: Replaced set_boxes_block@0.ops[266]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted set_boxes_block@0.ops[265]: 'l-store-copy tmp%33#0 1'
debug: Replaced set_boxes_block@0.ops[269]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted set_boxes_block@0.ops[271]: 'l-store-copy tmp%34#0 0'
debug: Replaced set_boxes_block@0.ops[275]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted set_boxes_block@0.ops[281]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced set_boxes_block@0.ops[285]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted set_boxes_block@0.ops[287]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced set_boxes_block@0.ops[291]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted set_boxes_block@0.ops[358]: 'l-store-copy tmp%53#0 1'
debug: Replaced set_boxes_block@0.ops[361]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted set_boxes_block@0.ops[360]: 'l-store-copy tmp%55#0 1'
debug: Replaced set_boxes_block@0.ops[364]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted set_boxes_block@0.ops[371]: 'l-store-copy tmp%57#0 0'
debug: Replaced set_boxes_block@0.ops[375]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted set_boxes_block@0.ops[381]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced set_boxes_block@0.ops[385]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted set_boxes_block@0.ops[392]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced set_boxes_block@0.ops[396]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted set_boxes_block@0.ops[414]: 'l-store-copy tmp%63#0 1'
debug: Replaced set_boxes_block@0.ops[417]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted set_boxes_block@0.ops[416]: 'l-store-copy tmp%65#0 1'
debug: Replaced set_boxes_block@0.ops[420]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted set_boxes_block@0.ops[422]: 'l-store-copy tmp%66#0 0'
debug: Replaced set_boxes_block@0.ops[426]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted set_boxes_block@0.ops[432]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced set_boxes_block@0.ops[436]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted set_boxes_block@0.ops[438]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced set_boxes_block@0.ops[442]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted set_boxes_block@0.ops[460]: 'l-store-copy tmp%72#0 1'
debug: Replaced set_boxes_block@0.ops[463]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted set_boxes_block@0.ops[462]: 'l-store-copy tmp%74#0 1'
debug: Replaced set_boxes_block@0.ops[466]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted set_boxes_block@0.ops[468]: 'l-store-copy tmp%75#0 0'
debug: Replaced set_boxes_block@0.ops[472]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted set_boxes_block@0.ops[478]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced set_boxes_block@0.ops[482]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted set_boxes_block@0.ops[484]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced set_boxes_block@0.ops[488]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted set_boxes_block@0.ops[155]: 'l-store-copy tmp%11#0 0'
debug: Replaced set_boxes_block@0.ops[161]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted set_boxes_block@0.ops[230]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes_block@0.ops[235]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[236]: 'l-store-copy tmp%6#0 2'
debug: Replaced set_boxes_block@0.ops[241]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[283]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes_block@0.ops[288]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[310]: 'l-store-copy tmp%39#0 0'
debug: Replaced set_boxes_block@0.ops[316]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted set_boxes_block@0.ops[385]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes_block@0.ops[390]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[391]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes_block@0.ops[396]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[438]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes_block@0.ops[443]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[485]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes_block@0.ops[490]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[21]: 'l-store-copy new_box_value%1#0 0'
debug: Replaced set_boxes_block@0.ops[27]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[47]: 'l-store-copy tmp%0#0 0'
debug: Replaced set_boxes_block@0.ops[54]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted set_boxes_block@0.ops[63]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced set_boxes_block@0.ops[71]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted set_boxes_block@0.ops[216]: 'l-store-copy tmp%22#0 1'
debug: Replaced set_boxes_block@0.ops[222]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes_block@0.ops[372]: 'l-store-copy tmp%53#0 1'
debug: Replaced set_boxes_block@0.ops[378]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted set_boxes_block@0.ops[104]: 'l-store-copy value%1#0 1'
debug: Replaced set_boxes_block@0.ops[112]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted set_boxes_block@0.ops[123]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes_block@0.ops[131]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes_block@0.ops[142]: 'l-store-copy value%3#0 1'
debug: Replaced set_boxes_block@0.ops[150]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes_block@0.ops[188]: 'l-store-copy tmp%17#0 0'
debug: Replaced set_boxes_block@0.ops[201]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted set_boxes_block@0.ops[345]: 'l-store-copy tmp%46#0 0'
debug: Replaced set_boxes_block@0.ops[358]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted set_boxes_block@0.ops[33]: 'l-store-copy b_value#0 1'
debug: Replaced set_boxes_block@0.ops[50]: 'v-load b_value#0' with 'l-load b_value#0'
debug: Inserted set_boxes_block@0.ops[289]: 'l-store-copy tmp%36#0 0'
debug: Replaced set_boxes_block@0.ops[309]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted set_boxes_block@0.ops[447]: 'l-store-copy tmp%68#0 0'
debug: Replaced set_boxes_block@0.ops[467]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted set_boxes_block@0.ops[495]: 'l-store-copy tmp%77#0 0'
debug: Replaced set_boxes_block@0.ops[515]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted set_boxes_block@0.ops[236]: 'l-store-copy tmp%28#0 0'
debug: Replaced set_boxes_block@0.ops[262]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted set_boxes_block@0.ops[395]: 'l-store-copy tmp%59#0 0'
debug: Replaced set_boxes_block@0.ops[421]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted set_boxes_block@0.ops[324]: 'l-store-copy new_box_value%1#0 1'
debug: Replaced set_boxes_block@0.ops[356]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[252]: 'l-store-copy tmp%6#0 2'
debug: Replaced set_boxes_block@0.ops[294]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[413]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes_block@0.ops[455]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[462]: 'l-store-copy tmp%9#0 3'
debug: Replaced set_boxes_block@0.ops[504]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[192]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes_block@0.ops[240]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[354]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes_block@0.ops[402]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes_block@0.ops[421]: 'l-store-copy new_box_value%1#0 3'
debug: Replaced set_boxes_block@0.ops[470]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[471]: 'l-store-copy new_box_value%1#0 3'
debug: Replaced set_boxes_block@0.ops[519]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[360]: 'l-store-copy new_box_value%1#0 3'
debug: Replaced set_boxes_block@0.ops[421]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[134]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes_block@0.ops[192]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes_block@0.ops[28]: 'l-store-copy new_box_value%1#0 1'
debug: Replaced set_boxes_block@0.ops[149]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[150]: 'l-store-copy new_box_value%1#0 2'
debug: Replaced set_boxes_block@0.ops[328]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes_block@0.ops[156]: 'l-store-copy tmp%9#0 3'
debug: Replaced set_boxes_block@0.ops[357]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted delete_boxes_block@0.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced delete_boxes_block@0.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted delete_boxes_block@0.ops[21]: 'l-store-copy tmp%0#0 0'
debug: Replaced delete_boxes_block@0.ops[23]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted delete_boxes_block@0.ops[26]: 'l-store-copy tmp%1#0 0'
debug: Replaced delete_boxes_block@0.ops[28]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted delete_boxes_block@0.ops[38]: 'l-store-copy tmp%2#0 0'
debug: Replaced delete_boxes_block@0.ops[40]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted delete_boxes_block@0.ops[42]: 'l-store-copy tmp%3#0 0'
debug: Replaced delete_boxes_block@0.ops[44]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted delete_boxes_block@0.ops[47]: 'l-store-copy tmp%4#0 0'
debug: Replaced delete_boxes_block@0.ops[49]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted delete_boxes_block@0.ops[59]: 'l-store-copy tmp%5#0 0'
debug: Replaced delete_boxes_block@0.ops[61]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted delete_boxes_block@0.ops[64]: 'l-store-copy tmp%6#0 0'
debug: Replaced delete_boxes_block@0.ops[66]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted delete_boxes_block@0.ops[71]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced delete_boxes_block@0.ops[73]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted delete_boxes_block@0.ops[78]: 'l-store-copy tmp%7#0 0'
debug: Replaced delete_boxes_block@0.ops[80]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted delete_boxes_block@0.ops[84]: 'l-store-copy tmp%8#0 0'
debug: Replaced delete_boxes_block@0.ops[86]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted delete_boxes_block@0.ops[16]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced delete_boxes_block@0.ops[19]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted delete_boxes_block@0.ops[34]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced delete_boxes_block@0.ops[37]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted delete_boxes_block@0.ops[56]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced delete_boxes_block@0.ops[59]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted delete_boxes_block@0.ops[33]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced delete_boxes_block@0.ops[39]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted delete_boxes_block@0.ops[56]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced delete_boxes_block@0.ops[62]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted delete_boxes_block@0.ops[75]: 'l-store-copy a_exists#0 1'
debug: Replaced delete_boxes_block@0.ops[82]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted delete_boxes_block@0.ops[81]: 'l-store-copy a#0 1'
debug: Replaced delete_boxes_block@0.ops[89]: 'v-load a#0' with 'l-load a#0'
debug: Inserted delete_boxes_block@0.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced delete_boxes_block@0.ops[21]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted read_boxes_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced read_boxes_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted read_boxes_block@0.ops[10]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced read_boxes_block@0.ops[13]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted read_boxes_block@0.ops[20]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced read_boxes_block@0.ops[23]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted read_boxes_block@0.ops[12]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced read_boxes_block@0.ops[16]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted read_boxes_block@0.ops[23]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced read_boxes_block@0.ops[29]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted read_boxes_block@0.ops[18]: 'l-store-copy tmp%2#0 0'
debug: Replaced read_boxes_block@0.ops[29]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted read_boxes_block@0.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced read_boxes_block@0.ops[29]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_box_value_plus_1_block@0.ops[3]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced get_box_value_plus_1_block@0.ops[5]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted get_box_value_plus_1_block@0.ops[13]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_box_value_plus_1_block@0.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_box_value_plus_1_block@0.ops[7]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced get_box_value_plus_1_block@0.ops[11]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted get_box_value_plus_1_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_box_value_plus_1_block@0.ops[10]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted boxes_exist_block@0.ops[10]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced boxes_exist_block@0.ops[15]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted boxes_exist_block@0.ops[6]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced boxes_exist_block@0.ops[15]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted boxes_exist_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced boxes_exist_block@0.ops[15]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted slice_box_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced slice_box_block@0.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced slice_box_block@0.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted slice_box_block@0.ops[34]: 'l-store-copy tmp%9#0 0'
debug: Replaced slice_box_block@0.ops[36]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted slice_box_block@0.ops[39]: 'l-store-copy tmp%10#0 0'
debug: Replaced slice_box_block@0.ops[41]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted slice_box_block@0.ops[70]: 'l-store-copy tmp%16#0 0'
debug: Replaced slice_box_block@0.ops[72]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted slice_box_block@0.ops[80]: 'l-store-copy tmp%20#0 0'
debug: Replaced slice_box_block@0.ops[82]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted slice_box_block@0.ops[85]: 'l-store-copy tmp%21#0 0'
debug: Replaced slice_box_block@0.ops[87]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted slice_box_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced slice_box_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[53]: 'l-store-copy tmp%11#0 0'
debug: Replaced slice_box_block@0.ops[56]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted slice_box_block@0.ops[19]: 'l-store-copy tmp%0#0 1'
debug: Replaced slice_box_block@0.ops[22]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[21]: 'l-store-copy tmp%4#0 1'
debug: Replaced slice_box_block@0.ops[25]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted slice_box_block@0.ops[32]: 'l-store-copy tmp%8#0 0'
debug: Replaced slice_box_block@0.ops[36]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted slice_box_block@0.ops[60]: 'l-store-copy tmp%11#0 1'
debug: Replaced slice_box_block@0.ops[63]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted slice_box_block@0.ops[62]: 'l-store-copy tmp%13#0 1'
debug: Replaced slice_box_block@0.ops[66]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted slice_box_block@0.ops[71]: 'l-store-copy tmp%11#0 1'
debug: Replaced slice_box_block@0.ops[74]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted slice_box_block@0.ops[73]: 'l-store-copy tmp%15#0 1'
debug: Replaced slice_box_block@0.ops[77]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted slice_box_block@0.ops[84]: 'l-store-copy tmp%19#0 0'
debug: Replaced slice_box_block@0.ops[88]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted slice_box_block@0.ops[15]: 'l-store-copy tmp%0#0 2'
debug: Replaced slice_box_block@0.ops[19]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box_block@0.ops[32]: 'l-store-copy tmp%3#0 1'
debug: Replaced slice_box_block@0.ops[37]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted slice_box_block@0.ops[85]: 'l-store-copy tmp%14#0 1'
debug: Replaced slice_box_block@0.ops[90]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted slice_box_block@0.ops[67]: 'l-store-copy tmp%11#0 1'
debug: Replaced slice_box_block@0.ops[73]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted slice_box_block@0.ops[17]: 'l-store-copy tmp%3#0 1'
debug: Replaced slice_box_block@0.ops[32]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted slice_box_block@0.ops[72]: 'l-store-copy tmp%14#0 1'
debug: Replaced slice_box_block@0.ops[87]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted arc4_box_block@0.ops[11]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced arc4_box_block@0.ops[13]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted arc4_box_block@0.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced arc4_box_block@0.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted arc4_box_block@0.ops[28]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced arc4_box_block@0.ops[30]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted arc4_box_block@0.ops[33]: 'l-store-copy tmp%1#0 0'
debug: Replaced arc4_box_block@0.ops[35]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted arc4_box_block@0.ops[45]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced arc4_box_block@0.ops[47]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted arc4_box_block@0.ops[50]: 'l-store-copy tmp%2#0 0'
debug: Replaced arc4_box_block@0.ops[52]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted arc4_box_block@0.ops[62]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced arc4_box_block@0.ops[64]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted arc4_box_block@0.ops[67]: 'l-store-copy tmp%3#0 0'
debug: Replaced arc4_box_block@0.ops[69]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted arc4_box_block@0.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced arc4_box_block@0.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted arc4_box_block@0.ops[23]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced arc4_box_block@0.ops[26]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted arc4_box_block@0.ops[41]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced arc4_box_block@0.ops[44]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted arc4_box_block@0.ops[59]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced arc4_box_block@0.ops[62]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted arc4_box_block@0.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced arc4_box_block@0.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted arc4_box_block@0.ops[26]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced arc4_box_block@0.ops[30]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted arc4_box_block@0.ops[45]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced arc4_box_block@0.ops[49]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted arc4_box_block@0.ops[64]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced arc4_box_block@0.ops[68]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted test_box_ref_block@0.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_box_ref_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_box_ref_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_box_ref_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_box_ref_block@0.ops[26]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_box_ref_block@0.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_box_ref_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_box_ref_block@0.ops[38]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_box_ref_block@0.ops[43]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_box_ref_block@0.ops[45]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_box_ref_block@0.ops[81]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_box_ref_block@0.ops[83]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_box_ref_block@0.ops[90]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_box_ref_block@0.ops[92]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_box_ref_block@0.ops[96]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_box_ref_block@0.ops[98]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_box_ref_block@0.ops[106]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_box_ref_block@0.ops[108]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_box_ref_block@0.ops[113]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_box_ref_block@0.ops[115]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_box_ref_block@0.ops[125]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_box_ref_block@0.ops[127]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_box_ref_block@0.ops[130]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_box_ref_block@0.ops[132]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_box_ref_block@0.ops[156]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_box_ref_block@0.ops[158]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_box_ref_block@0.ops[162]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_box_ref_block@0.ops[164]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_box_ref_block@0.ops[167]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_box_ref_block@0.ops[169]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_box_ref_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced test_box_ref_block@0.ops[5]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted test_box_ref_block@0.ops[13]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced test_box_ref_block@0.ops[16]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted test_box_ref_block@0.ops[24]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced test_box_ref_block@0.ops[27]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted test_box_ref_block@0.ops[35]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced test_box_ref_block@0.ops[38]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted test_box_ref_block@0.ops[53]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced test_box_ref_block@0.ops[56]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted test_box_ref_block@0.ops[91]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_box_ref_block@0.ops[94]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_box_ref_block@0.ops[108]: 'l-store-copy exists#0 1'
debug: Replaced test_box_ref_block@0.ops[111]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted test_box_ref_block@0.ops[127]: 'l-store-copy maybe_value%6#0 0'
debug: Replaced test_box_ref_block@0.ops[130]: 'v-load maybe_value%6#0' with 'l-load maybe_value%6#0'
debug: Inserted test_box_ref_block@0.ops[145]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_box_ref_block@0.ops[148]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_box_ref_block@0.ops[152]: 'l-store-copy maybe_exists%7#0 1'
debug: Replaced test_box_ref_block@0.ops[155]: 'v-load maybe_exists%7#0' with 'l-load maybe_exists%7#0'
debug: Inserted test_box_ref_block@0.ops[159]: 'l-store-copy check%0#0 1'
debug: Replaced test_box_ref_block@0.ops[162]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted test_box_ref_block@0.ops[188]: 'l-store-copy maybe_exists%8#0 1'
debug: Replaced test_box_ref_block@0.ops[191]: 'v-load maybe_exists%8#0' with 'l-load maybe_exists%8#0'
debug: Inserted test_box_ref_block@0.ops[161]: 'l-store-copy value%0#0 1'
debug: Replaced test_box_ref_block@0.ops[165]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted test_box_ref_block@0.ops[126]: 'l-store-copy maybe_exists%6#0 1'
debug: Replaced test_box_ref_block@0.ops[132]: 'v-load maybe_exists%6#0' with 'l-load maybe_exists%6#0'
debug: Inserted test_box_ref_block@0.ops[59]: 'l-store-copy sender_bytes#0 0'
debug: Replaced test_box_ref_block@0.ops[65]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[139]: 'l-store-copy sender_bytes#0 1'
debug: Replaced test_box_ref_block@0.ops[145]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[111]: 'l-store-copy value#0 1'
debug: Replaced test_box_ref_block@0.ops[119]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_box_ref_block@0.ops[133]: 'l-store-copy sender_bytes#0 2'
debug: Replaced test_box_ref_block@0.ops[140]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[83]: 'l-store-copy prefix#0 0'
debug: Replaced test_box_ref_block@0.ops[95]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted test_box_ref_block@0.ops[62]: 'l-store-copy app_address#0 1'
debug: Replaced test_box_ref_block@0.ops[74]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted test_box_ref_block@0.ops[75]: 'l-store-copy app_address#0 3'
debug: Replaced test_box_ref_block@0.ops[87]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted test_box_ref_block@0.ops[67]: 'l-store-copy sender_bytes#0 3'
debug: Replaced test_box_ref_block@0.ops[89]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[90]: 'l-store-copy sender_bytes#0 2'
debug: Replaced test_box_ref_block@0.ops[137]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref_block@0.ops[89]: 'l-store-copy app_address#0 2'
debug: Replaced test_box_ref_block@0.ops[154]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted get_box_ref_length_block@0.ops[2]: 'l-store-copy check%0#0 1'
debug: Replaced get_box_ref_length_block@0.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted get_box_ref_length_block@0.ops[4]: 'l-store-copy value%0#0 1'
debug: Replaced get_box_ref_length_block@0.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted box_map_test_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test_block@0.ops[19]: 'l-store-copy tmp%5#0 0'
debug: Replaced box_map_test_block@0.ops[21]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted box_map_test_block@0.ops[32]: 'l-store-copy tmp%9#0 0'
debug: Replaced box_map_test_block@0.ops[34]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted box_map_test_block@0.ops[38]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test_block@0.ops[40]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test_block@0.ops[48]: 'l-store-copy tmp%12#0 0'
debug: Replaced box_map_test_block@0.ops[50]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted box_map_test_block@0.ops[53]: 'l-store-copy tmp%13#0 0'
debug: Replaced box_map_test_block@0.ops[55]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted box_map_test_block@0.ops[63]: 'l-store-copy tmp%16#0 0'
debug: Replaced box_map_test_block@0.ops[65]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted box_map_test_block@0.ops[82]: 'l-store-copy tmp%22#0 0'
debug: Replaced box_map_test_block@0.ops[84]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted box_map_test_block@0.ops[87]: 'l-store-copy tmp%23#0 0'
debug: Replaced box_map_test_block@0.ops[89]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted box_map_test_block@0.ops[12]: 'l-store-copy check%0#0 1'
debug: Replaced box_map_test_block@0.ops[15]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted box_map_test_block@0.ops[26]: 'l-store-copy check%1#0 1'
debug: Replaced box_map_test_block@0.ops[29]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted box_map_test_block@0.ops[45]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced box_map_test_block@0.ops[48]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_test_block@0.ops[62]: 'l-store-copy exists#0 1'
debug: Replaced box_map_test_block@0.ops[65]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted box_map_test_block@0.ops[73]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced box_map_test_block@0.ops[76]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted box_map_test_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test_block@0.ops[16]: 'l-store-copy value%0#0 1'
debug: Replaced box_map_test_block@0.ops[20]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted box_map_test_block@0.ops[31]: 'l-store-copy value%1#0 1'
debug: Replaced box_map_test_block@0.ops[35]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted box_map_test_block@0.ops[83]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test_block@0.ops[86]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test_block@0.ops[48]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_test_block@0.ops[54]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted box_map_test_block@0.ops[13]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test_block@0.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test_block@0.ops[89]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test_block@0.ops[104]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test_block@0.ops[48]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test_block@0.ops[67]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test_block@0.ops[68]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test_block@0.ops[86]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test_block@0.ops[29]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test_block@0.ops[80]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[11]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[16]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[19]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[18]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[22]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_set_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_set_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_set_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_set_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_get_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_get_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_get_block@0.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_get_block@0.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted box_map_get_block@0.ops[8]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced box_map_get_block@0.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_del_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_del_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_exists_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_exists_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_exists_block@0.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_exists_block@0.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Found 3 edge set/s for examples.box_storage.contract.BoxContract.__puya_arc4_router__
info: Writing box_storage/out/BoxContract.arc32.json
info: Writing box_storage/out/BoxContract.arc56.json
info: Writing box_storage/out/BoxContract.approval.teal
info: Writing box_storage/out/BoxContract.clear.teal
info: Writing box_storage/out/BoxContract.approval.bin
info: Writing box_storage/out/BoxContract.clear.bin
info: Writing box_storage/out/BoxContract.approval.puya.map
info: Writing box_storage/out/BoxContract.clear.puya.map
info: writing box_storage/out/client_BoxContract.py