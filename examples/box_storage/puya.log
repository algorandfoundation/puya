debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['box_storage'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
box_storage/contract.py:137:9 warning: expression result is ignored
box_storage/contract.py:139:9 warning: expression result is ignored
info: writing box_storage/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.get_box_value_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_ref_length
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Building IR for function examples.box_storage.contract.BoxContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes
debug: Sealing block@0
box_storage/contract.py:27:9 debug: encountered already materialized expression ('box_a'), reusing result: "box_a"
box_storage/contract.py:37:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:37:46 debug: encountered already materialized expression (reinterpret_cast<bytes>(c)), reusing result: c#0
box_storage/contract.py:38:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:38:40 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:38:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:39:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:39:40 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:39:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:43:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:43:40 debug: encountered already materialized expression (arc4_decode(b, bytes)), reusing result: tmp%47#0
box_storage/contract.py:44:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:44:34 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:44:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:45:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:45:34 debug: encountered already materialized expression (5u), reusing result: 5u
box_storage/contract.py:45:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:46:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:46:35 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:46:16 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box
debug: Sealing block@0
box_storage/contract.py:78:16 debug: encountered already materialized expression (box_0), reusing result: box_0#0
box_storage/contract.py:78:28 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:78:30 debug: encountered already materialized expression (7u), reusing result: 7u
box_storage/contract.py:78:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(box_0)[0]), 0u, 0u < SINGLE_EVAL(id=0))), reusing result: tmp%3#0
box_storage/contract.py:81:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:81:39 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:81:41 debug: encountered already materialized expression (10u), reusing result: 10u
box_storage/contract.py:81:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(hex<"424F585F43">)[0]), 2u, 2u < SINGLE_EVAL(id=0))), reusing result: tmp%12#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.0.ssa.ir
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.0.ssa.ir
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.__init__ as inlineable
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: inlining call to examples.box_storage.contract.BoxContract.__init__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable encoded_tuple_buffer%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%10#0 NoOp) to (! tmp%10#0)
debug: Simplified (== tmp%14#0 NoOp) to (! tmp%14#0)
debug: Simplified (== tmp%18#0 NoOp) to (! tmp%18#0)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000c
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (concat 0x encoded_bool%0#0) to encoded_bool%0#0
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%44#0 NoOp) to (! tmp%44#0)
debug: Simplified (== tmp%51#0 NoOp) to (! tmp%51#0)
debug: Simplified (== tmp%57#0 NoOp) to (! tmp%57#0)
debug: Simplified (== tmp%62#0 NoOp) to (! tmp%62#0)
debug: Simplified (== tmp%69#0 0u) to (! tmp%69#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@17 from switch tmp%68#0 {0u => block@18, * => block@19} to goto_nth [block@18][tmp%68#0] else goto block@19
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@17 from goto_nth [block@18][tmp%68#0] else goto block@19 to goto tmp%68#0 ? block@19 : block@18
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@16 with block@15 in block@21
debug: Merged linear block@16 into block@15
debug: Replaced predecessor block@22 with block@18 in block@23
debug: Merged linear block@22 into block@18
debug: Merged linear block@23 into block@18
debug: Replaced predecessor block@20 with block@19 in block@21
debug: Merged linear block@20 into block@19
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@15
debug: Removed empty block: block@19
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b#0, copy%0#0
debug: Found equivalence set: maybe_value%0#0, copy%1#0, b_value#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- tmp%26#0 0u) to tmp%26#0
debug: Simplified (- tmp%34#0 0u) to tmp%34#0
debug: couldn't simplify ((extract 0 1) tmp%40#0) due to lengths: src_length=0, op_length=1
debug: couldn't simplify (extract3 tmp%47#0 tmp%49#0 1u) due to starts: src_start=2, op_start=Register(source_location=box_storage/contract.py:43:39-51, ir_type=uint64, name='tmp%49', version=0)
debug: Simplified (- tmp%56#0 0u) to tmp%56#0
debug: Simplified (- tmp%65#0 0u) to tmp%65#0
debug: Simplified (- tmp%74#0 0u) to tmp%74#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%18#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:32:36-50, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:32:36-50, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:32:36-50, ir_type=uint64, name='tmp%6', version=0),)
debug: Replacing redundant declaration let tmp%40#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%47#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%59#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%68#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Replacing redundant declaration let tmp%77#0: bytes = ((extract 2 0) b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:22:27-35, ir_type=bytes, name='new_box_value%1', version=0),)
debug: Found equivalence set: new_box_value%1#0, tmp%8#0, tmp%40#0, tmp%47#0, tmp%59#0, tmp%68#0, tmp%77#0
debug: Found equivalence set: tmp%6#0, tmp%18#0, length%0#0, length%1#0
debug: Found equivalence set: tmp%26#0, tmp%27#0
debug: Found equivalence set: tmp%34#0, tmp%35#0
debug: Found equivalence set: tmp%56#0, tmp%57#0
debug: Found equivalence set: tmp%65#0, tmp%66#0
debug: Found equivalence set: tmp%74#0, tmp%75#0
debug: Copy propagation made 16 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%2#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%3#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%4#0: uint64 = (len new_box_value%1#0) with copy of existing registers (Register(source_location=box_storage/contract.py:33:36-51, ir_type=uint64, name='tmp%9', version=0),)
debug: Found equivalence set: tmp%9#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: Copy propagation made 8 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x3432) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:68:16 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, array_head_and_tail%0#0
debug: Found equivalence set: maybe_value%1#0, array_head_and_tail%1#0
debug: Found equivalence set: maybe_value%2#0, array_head_and_tail%2#0
debug: Found equivalence set: maybe_value%3#0, array_head_and_tail%3#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x01) to 0x0001
debug: Simplified (concat 0x0001 0x02) to 0x000102
debug: Simplified (concat 0x000102 0x03) to 0x00010203
debug: Simplified (concat 0x 0x00010203) to 0x00010203
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: Simplified (extract3 maybe_value%0#0 0u 1u) // on error: Index access is out of bounds to ((extract 0 1) maybe_value%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%1#0 1u 1u) // on error: Index access is out of bounds to ((extract 1 1) maybe_value%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%2#0 2u 1u) // on error: Index access is out of bounds to ((extract 2 1) maybe_value%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 maybe_value%3#0 3u 1u) // on error: Index access is out of bounds to ((extract 3 1) maybe_value%3#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:134:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%5#0, value#0
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: Found equivalence set: value%0#1, tmp%17#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable ref#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:159:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, value#1
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: Found equivalence set: maybe_value%0#1, tmp%21#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Simplified (concat "" tmp%2#0) to tmp%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" tmp%6#0) to tmp%6#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" tmp%10#0) to tmp%10#0
debug: Simplified (concat "" tmp%13#0) to tmp%13#0
debug: Simplified (concat "" tmp%16#0) to tmp%16#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x tmp%19#0) to tmp%19#0
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x tmp%1#1) to tmp%1#1
debug: Simplified (concat 0x tmp%23#0) to tmp%23#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: bytes = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:146:8-27, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%6#0: bytes = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:146:8-27, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%13#0: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%16#0: bytes = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:146:8-27, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%19#0: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%1#1: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%23#0: bytes = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:150:15-65, ir_type=bytes, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%1#0, tmp%2#0, tmp%3#0, tmp%6#0, tmp%7#0, tmp%16#0, tmp%17#0
debug: Found equivalence set: tmp%10#0, tmp%11#0, tmp%13#0, tmp%14#0, tmp%19#0, tmp%20#0, tmp%1#1, tmp%2#1, tmp%23#0, tmp%24#0
debug: Copy propagation made 8 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: Found equivalence set: encoded_bool%0#0, encoded_tuple_buffer%7#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%54#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%65#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@16
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.1.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: Found equivalence set: encoded_bool%0#0, encoded_tuple_buffer%7#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%54#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%65#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@18
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: Found equivalence set: encoded_bool%0#0, encoded_tuple_buffer%7#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%54#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%65#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 1) new_box_value%1#0) due to lengths: src_length=0, op_length=1
debug: couldn't simplify (extract3 new_box_value%1#0 tmp%49#0 1u) due to starts: src_start=2, op_start=Register(source_location=box_storage/contract.py:43:39-51, ir_type=uint64, name='tmp%49', version=0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable length_uint16%0#0
debug: Removing unused variable encoded_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result%0#0
debug: Removing unused variable result%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable result%3#0
debug: Removing unused variable array_data%0#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item_offset%1#0
debug: Removing unused variable item_offset%2#0
debug: Removing unused variable item_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%11#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.2.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: marking trivial method examples.box_storage.contract.BoxContract.check_keys as inlineable
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:48:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@22 with block@6 in block@23
debug: Merged linear block@22 into block@6
debug: Replaced predecessor block@23 with block@6 in block@21
debug: Merged linear block@23 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 1) new_box_value%1#0) due to lengths: src_length=0, op_length=1
debug: couldn't simplify (extract3 new_box_value%1#0 tmp%49#0 1u) due to starts: src_start=2, op_start=Register(source_location=box_storage/contract.py:43:39-51, ir_type=uint64, name='tmp%49', version=0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Unused subroutines removed
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.3.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 1) new_box_value%1#0) due to lengths: src_length=0, op_length=1
debug: couldn't simplify (extract3 new_box_value%1#0 tmp%49#0 1u) due to starts: src_start=2, op_start=Register(source_location=box_storage/contract.py:43:39-51, ir_type=uint64, name='tmp%49', version=0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.box_storage.contract.BoxContract
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.4.ssa.array.ir
debug: lowering array IR nodes in clear program of examples.box_storage.contract.BoxContract
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.1.ssa.array.ir
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: couldn't simplify ((extract 0 1) new_box_value%1#0) due to lengths: src_length=0, op_length=1
debug: couldn't simplify (extract3 new_box_value%1#0 tmp%49#0 1u) due to starts: src_start=2, op_start=Register(source_location=box_storage/contract.py:43:39-51, ir_type=uint64, name='tmp%49', version=0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init, []
box_storage/contract.py:17 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_boxes, []
box_storage/contract.py:54 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_boxes, []
box_storage/contract.py:66 debug: auto reserving slots in examples.box_storage.contract.BoxContract.read_boxes, []
box_storage/contract.py:70 debug: auto reserving slots in examples.box_storage.contract.BoxContract.boxes_exist, []
box_storage/contract.py:74 debug: auto reserving slots in examples.box_storage.contract.BoxContract.slice_box, []
box_storage/contract.py:83 debug: auto reserving slots in examples.box_storage.contract.BoxContract.arc4_box, []
box_storage/contract.py:93 debug: auto reserving slots in examples.box_storage.contract.BoxContract.test_box_ref, []
box_storage/contract.py:141 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_test, []
box_storage/contract.py:162 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_set, []
box_storage/contract.py:166 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_get, []
box_storage/contract.py:170 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_del, []
box_storage/contract.py:174 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_exists, []
debug: Slot allocation not required
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.5.ssa.slot.ir
debug: removing local static slots in clear program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.2.ssa.slot.ir
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 with [examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#1, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#2, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#3, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#4, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#5, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#6, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#7, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#8, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#9, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#10, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#11, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#12, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#13, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#14]
debug: Coalescing tmp%0#1 with [tmp%0#3]
debug: Coalescing resulted in 44 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_boxes
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_boxes using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_boxes
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_boxes
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_boxes using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_boxes
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.read_boxes
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.read_boxes using strategy RootOperandGrouping
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.read_boxes
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.boxes_exist
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.boxes_exist using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.boxes_exist
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.slice_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.slice_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.slice_box
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.arc4_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.arc4_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.arc4_box
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.test_box_ref
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.test_box_ref using strategy RootOperandGrouping
debug: Coalescing value%0#0 with [value%0#1]
debug: Coalescing check%0#0 with [check%0#1]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.test_box_ref
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_test
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_test using strategy RootOperandGrouping
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_test
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_set
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_set using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_set
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_get
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_get using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_get
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_del
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_del using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_del
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_exists
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_exists using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_exists
debug: Performing post-SSA optimizations at level 1
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.approval.6.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to box_storage/out/BoxContract.ir/BoxContract.clear.3.destructured.ir
debug: Inserted main.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_set_boxes_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_set_boxes_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_set_boxes_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_set_boxes_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_set_boxes_route@5.ops[15]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[17]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_set_boxes_route@5.ops[29]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[31]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_set_boxes_route@5.ops[23]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_set_boxes_route@5.ops[27]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_set_boxes_route@5.ops[21]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_set_boxes_route@5.ops[27]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_set_boxes_route@5.ops[19]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_set_boxes_route@5.ops[27]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_check_keys_route@6.ops[1]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_check_keys_route@6.ops[3]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_check_keys_route@6.ops[5]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_check_keys_route@6.ops[7]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_check_keys_route@6.ops[10]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_check_keys_route@6.ops[12]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_check_keys_route@6.ops[15]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_check_keys_route@6.ops[17]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_delete_boxes_route@7.ops[1]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_delete_boxes_route@7.ops[3]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_delete_boxes_route@7.ops[5]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_delete_boxes_route@7.ops[7]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_delete_boxes_route@7.ops[10]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_delete_boxes_route@7.ops[12]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_delete_boxes_route@7.ops[16]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_delete_boxes_route@7.ops[18]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_read_boxes_route@8.ops[1]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_read_boxes_route@8.ops[3]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_read_boxes_route@8.ops[5]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_read_boxes_route@8.ops[7]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_read_boxes_route@8.ops[10]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_read_boxes_route@8.ops[12]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_read_boxes_route@8.ops[17]: 'l-store-copy elements_to_encode%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[19]: 'v-load elements_to_encode%0#0' with 'l-load elements_to_encode%0#0'
debug: Inserted main_read_boxes_route@8.ops[24]: 'l-store-copy length%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[26]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted main_read_boxes_route@8.ops[28]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[30]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_read_boxes_route@8.ops[32]: 'l-store-copy length_uint16%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[34]: 'v-load length_uint16%0#0' with 'l-load length_uint16%0#0'
debug: Inserted main_read_boxes_route@8.ops[48]: 'l-store-copy current_tail_offset%1#0 0'
debug: Replaced main_read_boxes_route@8.ops[50]: 'v-load current_tail_offset%1#0' with 'l-load current_tail_offset%1#0'
debug: Inserted main_read_boxes_route@8.ops[52]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced main_read_boxes_route@8.ops[54]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted main_read_boxes_route@8.ops[60]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced main_read_boxes_route@8.ops[62]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted main_read_boxes_route@8.ops[65]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced main_read_boxes_route@8.ops[67]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted main_read_boxes_route@8.ops[74]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_read_boxes_route@8.ops[76]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_read_boxes_route@8.ops[79]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[81]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_read_boxes_route@8.ops[44]: 'l-store-copy data_length%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[47]: 'v-load data_length%0#0' with 'l-load data_length%0#0'
debug: Inserted main_read_boxes_route@8.ops[57]: 'l-store-copy offset_as_uint16%1#0 0'
debug: Replaced main_read_boxes_route@8.ops[60]: 'v-load offset_as_uint16%1#0' with 'l-load offset_as_uint16%1#0'
debug: Inserted main_read_boxes_route@8.ops[72]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced main_read_boxes_route@8.ops[75]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted main_read_boxes_route@8.ops[16]: 'l-store-copy elements_to_encode%1#0 1'
debug: Replaced main_read_boxes_route@8.ops[23]: 'v-load elements_to_encode%1#0' with 'l-load elements_to_encode%1#0'
debug: Inserted main_read_boxes_route@8.ops[38]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[44]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_read_boxes_route@8.ops[24]: 'l-store-copy elements_to_encode%1#0 0'
debug: Replaced main_read_boxes_route@8.ops[37]: 'v-load elements_to_encode%1#0' with 'l-load elements_to_encode%1#0'
debug: Inserted main_read_boxes_route@8.ops[22]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced main_read_boxes_route@8.ops[42]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_read_boxes_route@8.ops[45]: 'l-store-copy encoded_tuple_buffer%2#0 1'
debug: Replaced main_read_boxes_route@8.ops[64]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_read_boxes_route@8.ops[48]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced main_read_boxes_route@8.ops[71]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_read_boxes_route@8.ops[15]: 'l-store-copy elements_to_encode%2#0 2'
debug: Replaced main_read_boxes_route@8.ops[77]: 'v-load elements_to_encode%2#0' with 'l-load elements_to_encode%2#0'
debug: Inserted main_boxes_exist_route@9.ops[1]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_boxes_exist_route@9.ops[3]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_boxes_exist_route@9.ops[5]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_boxes_exist_route@9.ops[7]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_boxes_exist_route@9.ops[10]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_boxes_exist_route@9.ops[12]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_boxes_exist_route@9.ops[54]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_boxes_exist_route@9.ops[56]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_boxes_exist_route@9.ops[59]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_boxes_exist_route@9.ops[61]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_boxes_exist_route@9.ops[50]: 'l-store-copy encoded_tuple_buffer%9#0 0'
debug: Replaced main_boxes_exist_route@9.ops[53]: 'v-load encoded_tuple_buffer%9#0' with 'l-load encoded_tuple_buffer%9#0'
debug: Inserted main_boxes_exist_route@9.ops[17]: 'l-store-copy elements_to_encode%3#0 0'
debug: Replaced main_boxes_exist_route@9.ops[21]: 'v-load elements_to_encode%3#0' with 'l-load elements_to_encode%3#0'
debug: Inserted main_boxes_exist_route@9.ops[37]: 'l-store-copy is_true%0#0 0'
debug: Replaced main_boxes_exist_route@9.ops[41]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted main_boxes_exist_route@9.ops[47]: 'l-store-copy is_true%1#0 0'
debug: Replaced main_boxes_exist_route@9.ops[51]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted main_boxes_exist_route@9.ops[43]: 'l-store-copy encoded_tuple_buffer%8#0 0'
debug: Replaced main_boxes_exist_route@9.ops[50]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
debug: Inserted main_boxes_exist_route@9.ops[28]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced main_boxes_exist_route@9.ops[35]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted main_boxes_exist_route@9.ops[16]: 'l-store-copy elements_to_encode%4#0 1'
debug: Replaced main_boxes_exist_route@9.ops[27]: 'v-load elements_to_encode%4#0' with 'l-load elements_to_encode%4#0'
debug: Inserted main_boxes_exist_route@9.ops[35]: 'l-store-copy encoded_bool%2#0 1'
debug: Replaced main_boxes_exist_route@9.ops[48]: 'v-load encoded_bool%2#0' with 'l-load encoded_bool%2#0'
debug: Inserted main_boxes_exist_route@9.ops[15]: 'l-store-copy elements_to_encode%5#0 2'
debug: Replaced main_boxes_exist_route@9.ops[34]: 'v-load elements_to_encode%5#0' with 'l-load elements_to_encode%5#0'
debug: Inserted main_boxes_exist_route@9.ops[25]: 'l-store-copy encoded_bool%0#0 2'
debug: Replaced main_boxes_exist_route@9.ops[44]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted main_slice_box_route@10.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_slice_box_route@10.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_slice_box_route@10.ops[5]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_slice_box_route@10.ops[7]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_slice_box_route@10.ops[10]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_slice_box_route@10.ops[12]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_slice_box_route@10.ops[16]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_slice_box_route@10.ops[18]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_arc4_box_route@11.ops[1]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_arc4_box_route@11.ops[3]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_arc4_box_route@11.ops[5]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_arc4_box_route@11.ops[7]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_arc4_box_route@11.ops[10]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_arc4_box_route@11.ops[12]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_arc4_box_route@11.ops[16]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_arc4_box_route@11.ops[18]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_box_ref_route@12.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_box_ref_route@12.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_box_ref_route@12.ops[5]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_box_ref_route@12.ops[7]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_box_ref_route@12.ops[10]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_box_ref_route@12.ops[12]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_test_box_ref_route@12.ops[16]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_box_ref_route@12.ops[18]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_test_route@13.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_box_map_test_route@13.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_box_map_test_route@13.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_box_map_test_route@13.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_box_map_test_route@13.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_box_map_test_route@13.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_box_map_test_route@13.ops[16]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_test_route@13.ops[18]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_set_route@14.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_box_map_set_route@14.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_box_map_set_route@14.ops[5]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_box_map_set_route@14.ops[7]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_box_map_set_route@14.ops[10]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_box_map_set_route@14.ops[12]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_box_map_set_route@14.ops[15]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced main_box_map_set_route@14.ops[17]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted main_box_map_set_route@14.ops[21]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_box_map_set_route@14.ops[23]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_box_map_set_route@14.ops[30]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_set_route@14.ops[32]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_set_route@14.ops[25]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_box_map_set_route@14.ops[28]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_box_map_set_route@14.ops[19]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_box_map_set_route@14.ops[28]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_box_map_get_route@15.ops[1]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_box_map_get_route@15.ops[3]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_box_map_get_route@15.ops[5]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_box_map_get_route@15.ops[7]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_box_map_get_route@15.ops[10]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_box_map_get_route@15.ops[12]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_box_map_get_route@15.ops[15]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced main_box_map_get_route@15.ops[17]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted main_box_map_get_route@15.ops[19]: 'l-store-copy tmp%55#0 0'
debug: Replaced main_box_map_get_route@15.ops[21]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted main_box_map_get_route@15.ops[23]: 'l-store-copy to_encode%0#0 0'
debug: Replaced main_box_map_get_route@15.ops[25]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted main_box_map_get_route@15.ops[27]: 'l-store-copy length%1#0 0'
debug: Replaced main_box_map_get_route@15.ops[29]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted main_box_map_get_route@15.ops[31]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced main_box_map_get_route@15.ops[33]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted main_box_map_get_route@15.ops[35]: 'l-store-copy length_uint16%1#0 0'
debug: Replaced main_box_map_get_route@15.ops[37]: 'v-load length_uint16%1#0' with 'l-load length_uint16%1#0'
debug: Inserted main_box_map_get_route@15.ops[44]: 'l-store-copy tmp%56#0 0'
debug: Replaced main_box_map_get_route@15.ops[46]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted main_box_map_get_route@15.ops[49]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_get_route@15.ops[51]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_get_route@15.ops[40]: 'l-store-copy encoded_value%1#0 0'
debug: Replaced main_box_map_get_route@15.ops[43]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted main_box_map_get_route@15.ops[26]: 'l-store-copy to_encode%0#0 0'
debug: Replaced main_box_map_get_route@15.ops[39]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted main_box_map_del_route@16.ops[1]: 'l-store-copy tmp%57#0 0'
debug: Replaced main_box_map_del_route@16.ops[3]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted main_box_map_del_route@16.ops[5]: 'l-store-copy tmp%58#0 0'
debug: Replaced main_box_map_del_route@16.ops[7]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted main_box_map_del_route@16.ops[10]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_box_map_del_route@16.ops[12]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_box_map_del_route@16.ops[15]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced main_box_map_del_route@16.ops[17]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted main_box_map_del_route@16.ops[19]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_box_map_del_route@16.ops[21]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_box_map_del_route@16.ops[24]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_del_route@16.ops[26]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_exists_route@17.ops[1]: 'l-store-copy tmp%62#0 0'
debug: Replaced main_box_map_exists_route@17.ops[3]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted main_box_map_exists_route@17.ops[5]: 'l-store-copy tmp%63#0 0'
debug: Replaced main_box_map_exists_route@17.ops[7]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted main_box_map_exists_route@17.ops[10]: 'l-store-copy tmp%64#0 0'
debug: Replaced main_box_map_exists_route@17.ops[12]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted main_box_map_exists_route@17.ops[15]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced main_box_map_exists_route@17.ops[17]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted main_box_map_exists_route@17.ops[19]: 'l-store-copy tmp%66#0 0'
debug: Replaced main_box_map_exists_route@17.ops[21]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted main_box_map_exists_route@17.ops[32]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_box_map_exists_route@17.ops[34]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_box_map_exists_route@17.ops[37]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_exists_route@17.ops[39]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_exists_route@17.ops[28]: 'l-store-copy encoded_bool%3#0 0'
debug: Replaced main_box_map_exists_route@17.ops[31]: 'v-load encoded_bool%3#0' with 'l-load encoded_bool%3#0'
debug: Inserted main_box_map_exists_route@17.ops[23]: 'l-store-copy to_encode%1#0 0'
debug: Replaced main_box_map_exists_route@17.ops[27]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted main_bare_routing@18.ops[1]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_bare_routing@18.ops[3]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main___algopy_default_create@19.ops[1]: 'l-store-copy tmp%69#0 0'
debug: Replaced main___algopy_default_create@19.ops[3]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted main___algopy_default_create@19.ops[5]: 'l-store-copy tmp%70#0 0'
debug: Replaced main___algopy_default_create@19.ops[7]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted main___algopy_default_create@19.ops[10]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@19.ops[12]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@20.ops[1]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@20.ops[3]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted set_boxes.ops[50]: 'l-store-copy tmp%2#0 0'
debug: Replaced set_boxes.ops[52]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted set_boxes.ops[57]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced set_boxes.ops[59]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted set_boxes.ops[67]: 'l-store-copy new_box_value%2#0 0'
debug: Replaced set_boxes.ops[69]: 'v-load new_box_value%2#0' with 'l-load new_box_value%2#0'
debug: Inserted set_boxes.ops[84]: 'l-store-copy tmp%3#0 0'
debug: Replaced set_boxes.ops[86]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted set_boxes.ops[100]: 'l-store-copy tmp%5#0 0'
debug: Replaced set_boxes.ops[102]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted set_boxes.ops[116]: 'l-store-copy tmp%7#0 0'
debug: Replaced set_boxes.ops[118]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted set_boxes.ops[132]: 'l-store-copy tmp%10#0 0'
debug: Replaced set_boxes.ops[134]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted set_boxes.ops[147]: 'l-store-copy tmp%13#0 0'
debug: Replaced set_boxes.ops[149]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted set_boxes.ops[154]: 'l-store-copy tmp%14#0 0'
debug: Replaced set_boxes.ops[156]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted set_boxes.ops[177]: 'l-store-copy tmp%21#0 0'
debug: Replaced set_boxes.ops[179]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted set_boxes.ops[224]: 'l-store-copy tmp%30#0 0'
debug: Replaced set_boxes.ops[226]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted set_boxes.ops[263]: 'l-store-copy tmp%38#0 0'
debug: Replaced set_boxes.ops[265]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted set_boxes.ops[278]: 'l-store-copy tmp%42#0 0'
debug: Replaced set_boxes.ops[280]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted set_boxes.ops[285]: 'l-store-copy tmp%43#0 0'
debug: Replaced set_boxes.ops[287]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted set_boxes.ops[308]: 'l-store-copy tmp%51#0 0'
debug: Replaced set_boxes.ops[310]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted set_boxes.ops[355]: 'l-store-copy tmp%61#0 0'
debug: Replaced set_boxes.ops[357]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted set_boxes.ops[394]: 'l-store-copy tmp%70#0 0'
debug: Replaced set_boxes.ops[396]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted set_boxes.ops[433]: 'l-store-copy tmp%79#0 0'
debug: Replaced set_boxes.ops[435]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted set_boxes.ops[2]: 'l-store-copy new_box_value%0#0 0'
debug: Replaced set_boxes.ops[5]: 'v-load new_box_value%0#0' with 'l-load new_box_value%0#0'
debug: Inserted set_boxes.ops[30]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced set_boxes.ops[33]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted set_boxes.ops[37]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced set_boxes.ops[40]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted set_boxes.ops[49]: 'l-store-copy tmp%1#0 0'
debug: Replaced set_boxes.ops[52]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted set_boxes.ops[75]: 'l-store-copy new_box_value%3#0 0'
debug: Replaced set_boxes.ops[78]: 'v-load new_box_value%3#0' with 'l-load new_box_value%3#0'
debug: Inserted set_boxes.ops[82]: 'l-store-copy check%0#0 1'
debug: Replaced set_boxes.ops[85]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted set_boxes.ops[96]: 'l-store-copy check%1#0 1'
debug: Replaced set_boxes.ops[99]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted set_boxes.ops[103]: 'l-store-copy tmp%4#0 0'
debug: Replaced set_boxes.ops[106]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted set_boxes.ops[114]: 'l-store-copy check%2#0 1'
debug: Replaced set_boxes.ops[117]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted set_boxes.ops[121]: 'l-store-copy tmp%6#0 0'
debug: Replaced set_boxes.ops[124]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[132]: 'l-store-copy check%3#0 1'
debug: Replaced set_boxes.ops[135]: 'v-load check%3#0' with 'l-load check%3#0'
debug: Inserted set_boxes.ops[139]: 'l-store-copy tmp%9#0 0'
debug: Replaced set_boxes.ops[142]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[155]: 'l-store-copy tmp%12#0 0'
debug: Replaced set_boxes.ops[158]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted set_boxes.ops[172]: 'l-store-copy tmp%16#0 0'
debug: Replaced set_boxes.ops[175]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted set_boxes.ops[182]: 'l-store-copy tmp%19#0 0'
debug: Replaced set_boxes.ops[185]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted set_boxes.ops[188]: 'l-store-copy tmp%20#0 0'
debug: Replaced set_boxes.ops[191]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted set_boxes.ops[200]: 'l-store-copy tmp%22#0 0'
debug: Replaced set_boxes.ops[203]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes.ops[210]: 'l-store-copy tmp%25#0 0'
debug: Replaced set_boxes.ops[213]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted set_boxes.ops[229]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced set_boxes.ops[232]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted set_boxes.ops[239]: 'l-store-copy tmp%29#0 0'
debug: Replaced set_boxes.ops[242]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted set_boxes.ops[251]: 'l-store-copy tmp%31#0 0'
debug: Replaced set_boxes.ops[254]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted set_boxes.ops[280]: 'l-store-copy tmp%37#0 0'
debug: Replaced set_boxes.ops[283]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted set_boxes.ops[296]: 'l-store-copy tmp%41#0 0'
debug: Replaced set_boxes.ops[299]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted set_boxes.ops[313]: 'l-store-copy tmp%45#0 0'
debug: Replaced set_boxes.ops[316]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted set_boxes.ops[323]: 'l-store-copy tmp%49#0 0'
debug: Replaced set_boxes.ops[326]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted set_boxes.ops[329]: 'l-store-copy tmp%50#0 0'
debug: Replaced set_boxes.ops[332]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted set_boxes.ops[341]: 'l-store-copy tmp%52#0 0'
debug: Replaced set_boxes.ops[344]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted set_boxes.ops[351]: 'l-store-copy tmp%55#0 0'
debug: Replaced set_boxes.ops[354]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted set_boxes.ops[370]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced set_boxes.ops[373]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted set_boxes.ops[380]: 'l-store-copy tmp%60#0 0'
debug: Replaced set_boxes.ops[383]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted set_boxes.ops[392]: 'l-store-copy tmp%62#0 0'
debug: Replaced set_boxes.ops[395]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted set_boxes.ops[421]: 'l-store-copy tmp%69#0 0'
debug: Replaced set_boxes.ops[424]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted set_boxes.ops[433]: 'l-store-copy tmp%71#0 0'
debug: Replaced set_boxes.ops[436]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted set_boxes.ops[462]: 'l-store-copy tmp%78#0 0'
debug: Replaced set_boxes.ops[465]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted set_boxes.ops[39]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced set_boxes.ops[43]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted set_boxes.ops[66]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced set_boxes.ops[70]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted set_boxes.ops[86]: 'l-store-copy value%0#0 1'
debug: Replaced set_boxes.ops[90]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted set_boxes.ops[207]: 'l-store-copy tmp%22#0 1'
debug: Replaced set_boxes.ops[210]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes.ops[209]: 'l-store-copy tmp%24#0 1'
debug: Replaced set_boxes.ops[213]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted set_boxes.ops[220]: 'l-store-copy tmp%26#0 0'
debug: Replaced set_boxes.ops[224]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted set_boxes.ops[230]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced set_boxes.ops[234]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted set_boxes.ops[241]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced set_boxes.ops[245]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted set_boxes.ops[263]: 'l-store-copy tmp%31#0 1'
debug: Replaced set_boxes.ops[266]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted set_boxes.ops[265]: 'l-store-copy tmp%33#0 1'
debug: Replaced set_boxes.ops[269]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted set_boxes.ops[271]: 'l-store-copy tmp%34#0 0'
debug: Replaced set_boxes.ops[275]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted set_boxes.ops[281]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced set_boxes.ops[285]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted set_boxes.ops[287]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced set_boxes.ops[291]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted set_boxes.ops[358]: 'l-store-copy tmp%52#0 1'
debug: Replaced set_boxes.ops[361]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted set_boxes.ops[360]: 'l-store-copy tmp%54#0 1'
debug: Replaced set_boxes.ops[364]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted set_boxes.ops[371]: 'l-store-copy tmp%56#0 0'
debug: Replaced set_boxes.ops[375]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted set_boxes.ops[381]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced set_boxes.ops[385]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted set_boxes.ops[392]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced set_boxes.ops[396]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted set_boxes.ops[414]: 'l-store-copy tmp%62#0 1'
debug: Replaced set_boxes.ops[417]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted set_boxes.ops[416]: 'l-store-copy tmp%64#0 1'
debug: Replaced set_boxes.ops[420]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted set_boxes.ops[422]: 'l-store-copy tmp%65#0 0'
debug: Replaced set_boxes.ops[426]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted set_boxes.ops[432]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced set_boxes.ops[436]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted set_boxes.ops[438]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced set_boxes.ops[442]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted set_boxes.ops[460]: 'l-store-copy tmp%71#0 1'
debug: Replaced set_boxes.ops[463]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted set_boxes.ops[462]: 'l-store-copy tmp%73#0 1'
debug: Replaced set_boxes.ops[466]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted set_boxes.ops[468]: 'l-store-copy tmp%74#0 0'
debug: Replaced set_boxes.ops[472]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted set_boxes.ops[478]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced set_boxes.ops[482]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted set_boxes.ops[484]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced set_boxes.ops[488]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted set_boxes.ops[155]: 'l-store-copy tmp%11#0 0'
debug: Replaced set_boxes.ops[161]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted set_boxes.ops[230]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes.ops[235]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[236]: 'l-store-copy tmp%6#0 2'
debug: Replaced set_boxes.ops[241]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[283]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes.ops[288]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[310]: 'l-store-copy tmp%39#0 0'
debug: Replaced set_boxes.ops[316]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted set_boxes.ops[385]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes.ops[390]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[391]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes.ops[396]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[438]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes.ops[443]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[485]: 'l-store-copy tmp%9#0 1'
debug: Replaced set_boxes.ops[490]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[21]: 'l-store-copy new_box_value%1#0 0'
debug: Replaced set_boxes.ops[27]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[47]: 'l-store-copy tmp%0#0 0'
debug: Replaced set_boxes.ops[54]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted set_boxes.ops[63]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced set_boxes.ops[71]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted set_boxes.ops[216]: 'l-store-copy tmp%22#0 1'
debug: Replaced set_boxes.ops[222]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted set_boxes.ops[372]: 'l-store-copy tmp%52#0 1'
debug: Replaced set_boxes.ops[378]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted set_boxes.ops[104]: 'l-store-copy value%1#0 1'
debug: Replaced set_boxes.ops[112]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted set_boxes.ops[123]: 'l-store-copy value%2#0 1'
debug: Replaced set_boxes.ops[131]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted set_boxes.ops[142]: 'l-store-copy value%3#0 1'
debug: Replaced set_boxes.ops[150]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted set_boxes.ops[188]: 'l-store-copy tmp%17#0 0'
debug: Replaced set_boxes.ops[201]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted set_boxes.ops[345]: 'l-store-copy tmp%46#0 0'
debug: Replaced set_boxes.ops[358]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted set_boxes.ops[33]: 'l-store-copy b_value#0 1'
debug: Replaced set_boxes.ops[50]: 'v-load b_value#0' with 'l-load b_value#0'
debug: Inserted set_boxes.ops[289]: 'l-store-copy tmp%36#0 0'
debug: Replaced set_boxes.ops[309]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted set_boxes.ops[447]: 'l-store-copy tmp%67#0 0'
debug: Replaced set_boxes.ops[467]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted set_boxes.ops[495]: 'l-store-copy tmp%76#0 0'
debug: Replaced set_boxes.ops[515]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted set_boxes.ops[236]: 'l-store-copy tmp%28#0 0'
debug: Replaced set_boxes.ops[262]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted set_boxes.ops[395]: 'l-store-copy tmp%58#0 0'
debug: Replaced set_boxes.ops[421]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted set_boxes.ops[324]: 'l-store-copy new_box_value%1#0 1'
debug: Replaced set_boxes.ops[356]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[252]: 'l-store-copy tmp%6#0 2'
debug: Replaced set_boxes.ops[294]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[413]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes.ops[455]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[462]: 'l-store-copy tmp%9#0 3'
debug: Replaced set_boxes.ops[504]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[192]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes.ops[240]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[354]: 'l-store-copy tmp%9#0 2'
debug: Replaced set_boxes.ops[402]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted set_boxes.ops[421]: 'l-store-copy new_box_value%1#0 3'
debug: Replaced set_boxes.ops[470]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[471]: 'l-store-copy new_box_value%1#0 3'
debug: Replaced set_boxes.ops[519]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[360]: 'l-store-copy new_box_value%1#0 3'
debug: Replaced set_boxes.ops[421]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[134]: 'l-store-copy tmp%6#0 1'
debug: Replaced set_boxes.ops[192]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted set_boxes.ops[28]: 'l-store-copy new_box_value%1#0 1'
debug: Replaced set_boxes.ops[149]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[150]: 'l-store-copy new_box_value%1#0 2'
debug: Replaced set_boxes.ops[328]: 'v-load new_box_value%1#0' with 'l-load new_box_value%1#0'
debug: Inserted set_boxes.ops[156]: 'l-store-copy tmp%9#0 3'
debug: Replaced set_boxes.ops[357]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted delete_boxes.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced delete_boxes.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted delete_boxes.ops[21]: 'l-store-copy state_get%0#0 0'
debug: Replaced delete_boxes.ops[23]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted delete_boxes.ops[26]: 'l-store-copy tmp%0#0 0'
debug: Replaced delete_boxes.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted delete_boxes.ops[38]: 'l-store-copy state_get%1#0 0'
debug: Replaced delete_boxes.ops[40]: 'v-load state_get%1#0' with 'l-load state_get%1#0'
debug: Inserted delete_boxes.ops[42]: 'l-store-copy tmp%1#0 0'
debug: Replaced delete_boxes.ops[44]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted delete_boxes.ops[47]: 'l-store-copy tmp%2#0 0'
debug: Replaced delete_boxes.ops[49]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted delete_boxes.ops[59]: 'l-store-copy state_get%2#0 0'
debug: Replaced delete_boxes.ops[61]: 'v-load state_get%2#0' with 'l-load state_get%2#0'
debug: Inserted delete_boxes.ops[64]: 'l-store-copy tmp%3#0 0'
debug: Replaced delete_boxes.ops[66]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted delete_boxes.ops[71]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced delete_boxes.ops[73]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted delete_boxes.ops[78]: 'l-store-copy tmp%4#0 0'
debug: Replaced delete_boxes.ops[80]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted delete_boxes.ops[84]: 'l-store-copy tmp%5#0 0'
debug: Replaced delete_boxes.ops[86]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted delete_boxes.ops[16]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced delete_boxes.ops[19]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted delete_boxes.ops[34]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced delete_boxes.ops[37]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted delete_boxes.ops[56]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced delete_boxes.ops[59]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted delete_boxes.ops[33]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced delete_boxes.ops[39]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted delete_boxes.ops[56]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced delete_boxes.ops[62]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted delete_boxes.ops[75]: 'l-store-copy a_exists#0 1'
debug: Replaced delete_boxes.ops[82]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted delete_boxes.ops[81]: 'l-store-copy a#0 1'
debug: Replaced delete_boxes.ops[89]: 'v-load a#0' with 'l-load a#0'
debug: Inserted delete_boxes.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced delete_boxes.ops[21]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted read_boxes.ops[3]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced read_boxes.ops[5]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted read_boxes.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced read_boxes.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted read_boxes.ops[21]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced read_boxes.ops[24]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted read_boxes.ops[31]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced read_boxes.ops[34]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted read_boxes.ops[7]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced read_boxes.ops[11]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted read_boxes.ops[24]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced read_boxes.ops[28]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted read_boxes.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced read_boxes.ops[10]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted read_boxes.ops[36]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced read_boxes.ops[42]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted read_boxes.ops[31]: 'l-store-copy tmp%2#0 0'
debug: Replaced read_boxes.ops[42]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted read_boxes.ops[20]: 'l-store-copy tmp%1#0 0'
debug: Replaced read_boxes.ops[42]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted boxes_exist.ops[10]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced boxes_exist.ops[15]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted boxes_exist.ops[6]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced boxes_exist.ops[15]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted boxes_exist.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced boxes_exist.ops[15]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted slice_box.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced slice_box.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced slice_box.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted slice_box.ops[34]: 'l-store-copy tmp%7#0 0'
debug: Replaced slice_box.ops[36]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted slice_box.ops[39]: 'l-store-copy tmp%8#0 0'
debug: Replaced slice_box.ops[41]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted slice_box.ops[70]: 'l-store-copy tmp%14#0 0'
debug: Replaced slice_box.ops[72]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted slice_box.ops[80]: 'l-store-copy tmp%16#0 0'
debug: Replaced slice_box.ops[82]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted slice_box.ops[85]: 'l-store-copy tmp%17#0 0'
debug: Replaced slice_box.ops[87]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted slice_box.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced slice_box.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box.ops[53]: 'l-store-copy tmp%9#0 0'
debug: Replaced slice_box.ops[56]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted slice_box.ops[19]: 'l-store-copy tmp%0#0 1'
debug: Replaced slice_box.ops[22]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box.ops[21]: 'l-store-copy tmp%4#0 1'
debug: Replaced slice_box.ops[25]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted slice_box.ops[32]: 'l-store-copy tmp%6#0 0'
debug: Replaced slice_box.ops[36]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted slice_box.ops[60]: 'l-store-copy tmp%9#0 1'
debug: Replaced slice_box.ops[63]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted slice_box.ops[62]: 'l-store-copy tmp%11#0 1'
debug: Replaced slice_box.ops[66]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted slice_box.ops[71]: 'l-store-copy tmp%9#0 1'
debug: Replaced slice_box.ops[74]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted slice_box.ops[73]: 'l-store-copy tmp%13#0 1'
debug: Replaced slice_box.ops[77]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted slice_box.ops[84]: 'l-store-copy tmp%15#0 0'
debug: Replaced slice_box.ops[88]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted slice_box.ops[15]: 'l-store-copy tmp%0#0 2'
debug: Replaced slice_box.ops[19]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted slice_box.ops[32]: 'l-store-copy tmp%3#0 1'
debug: Replaced slice_box.ops[37]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted slice_box.ops[85]: 'l-store-copy tmp%12#0 1'
debug: Replaced slice_box.ops[90]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted slice_box.ops[67]: 'l-store-copy tmp%9#0 1'
debug: Replaced slice_box.ops[73]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted slice_box.ops[17]: 'l-store-copy tmp%3#0 1'
debug: Replaced slice_box.ops[32]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted slice_box.ops[72]: 'l-store-copy tmp%12#0 1'
debug: Replaced slice_box.ops[87]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted arc4_box.ops[11]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced arc4_box.ops[13]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted arc4_box.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced arc4_box.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted arc4_box.ops[28]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced arc4_box.ops[30]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted arc4_box.ops[33]: 'l-store-copy tmp%1#0 0'
debug: Replaced arc4_box.ops[35]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted arc4_box.ops[45]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced arc4_box.ops[47]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted arc4_box.ops[50]: 'l-store-copy tmp%2#0 0'
debug: Replaced arc4_box.ops[52]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted arc4_box.ops[62]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced arc4_box.ops[64]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted arc4_box.ops[67]: 'l-store-copy tmp%3#0 0'
debug: Replaced arc4_box.ops[69]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted arc4_box.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced arc4_box.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted arc4_box.ops[23]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced arc4_box.ops[26]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted arc4_box.ops[41]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced arc4_box.ops[44]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted arc4_box.ops[59]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced arc4_box.ops[62]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted arc4_box.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced arc4_box.ops[11]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted arc4_box.ops[26]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced arc4_box.ops[30]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted arc4_box.ops[45]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced arc4_box.ops[49]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted arc4_box.ops[64]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced arc4_box.ops[68]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted test_box_ref.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_box_ref.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_box_ref.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_box_ref.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_box_ref.ops[26]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_box_ref.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_box_ref.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_box_ref.ops[38]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_box_ref.ops[43]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_box_ref.ops[45]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_box_ref.ops[81]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_box_ref.ops[83]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_box_ref.ops[90]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_box_ref.ops[92]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_box_ref.ops[96]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_box_ref.ops[98]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_box_ref.ops[106]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_box_ref.ops[108]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_box_ref.ops[113]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_box_ref.ops[115]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_box_ref.ops[125]: 'l-store-copy state_get%0#0 0'
debug: Replaced test_box_ref.ops[127]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted test_box_ref.ops[130]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_box_ref.ops[132]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_box_ref.ops[156]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_box_ref.ops[158]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_box_ref.ops[169]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_box_ref.ops[171]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_box_ref.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced test_box_ref.ops[5]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted test_box_ref.ops[13]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced test_box_ref.ops[16]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted test_box_ref.ops[24]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced test_box_ref.ops[27]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted test_box_ref.ops[35]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced test_box_ref.ops[38]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted test_box_ref.ops[53]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced test_box_ref.ops[56]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted test_box_ref.ops[91]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_box_ref.ops[94]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_box_ref.ops[108]: 'l-store-copy exists#0 1'
debug: Replaced test_box_ref.ops[111]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted test_box_ref.ops[127]: 'l-store-copy maybe_value%6#0 0'
debug: Replaced test_box_ref.ops[130]: 'v-load maybe_value%6#0' with 'l-load maybe_value%6#0'
debug: Inserted test_box_ref.ops[145]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_box_ref.ops[148]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_box_ref.ops[152]: 'l-store-copy maybe_exists%7#0 1'
debug: Replaced test_box_ref.ops[155]: 'v-load maybe_exists%7#0' with 'l-load maybe_exists%7#0'
debug: Inserted test_box_ref.ops[159]: 'l-store-copy check%0#0 1'
debug: Replaced test_box_ref.ops[162]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted test_box_ref.ops[173]: 'l-store-copy check%0#0 1'
debug: Replaced test_box_ref.ops[176]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted test_box_ref.ops[191]: 'l-store-copy maybe_exists%8#0 1'
debug: Replaced test_box_ref.ops[194]: 'v-load maybe_exists%8#0' with 'l-load maybe_exists%8#0'
debug: Inserted test_box_ref.ops[161]: 'l-store-copy value%0#0 1'
debug: Replaced test_box_ref.ops[165]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted test_box_ref.ops[176]: 'l-store-copy value%0#0 1'
debug: Replaced test_box_ref.ops[180]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted test_box_ref.ops[126]: 'l-store-copy maybe_exists%6#0 1'
debug: Replaced test_box_ref.ops[132]: 'v-load maybe_exists%6#0' with 'l-load maybe_exists%6#0'
debug: Inserted test_box_ref.ops[59]: 'l-store-copy sender_bytes#0 0'
debug: Replaced test_box_ref.ops[65]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref.ops[139]: 'l-store-copy sender_bytes#0 1'
debug: Replaced test_box_ref.ops[145]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref.ops[111]: 'l-store-copy value#0 1'
debug: Replaced test_box_ref.ops[119]: 'v-load value#0' with 'l-load value#0'
debug: Inserted test_box_ref.ops[133]: 'l-store-copy sender_bytes#0 2'
debug: Replaced test_box_ref.ops[140]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref.ops[83]: 'l-store-copy prefix#0 0'
debug: Replaced test_box_ref.ops[95]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted test_box_ref.ops[62]: 'l-store-copy app_address#0 1'
debug: Replaced test_box_ref.ops[74]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted test_box_ref.ops[75]: 'l-store-copy app_address#0 3'
debug: Replaced test_box_ref.ops[87]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted test_box_ref.ops[67]: 'l-store-copy sender_bytes#0 3'
debug: Replaced test_box_ref.ops[89]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref.ops[90]: 'l-store-copy sender_bytes#0 2'
debug: Replaced test_box_ref.ops[137]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted test_box_ref.ops[89]: 'l-store-copy app_address#0 2'
debug: Replaced test_box_ref.ops[154]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted box_map_test.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test.ops[19]: 'l-store-copy tmp%5#0 0'
debug: Replaced box_map_test.ops[21]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted box_map_test.ops[32]: 'l-store-copy tmp%9#0 0'
debug: Replaced box_map_test.ops[34]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted box_map_test.ops[38]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test.ops[40]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test.ops[48]: 'l-store-copy state_get%0#0 0'
debug: Replaced box_map_test.ops[50]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted box_map_test.ops[53]: 'l-store-copy tmp%12#0 0'
debug: Replaced box_map_test.ops[55]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted box_map_test.ops[63]: 'l-store-copy tmp%15#0 0'
debug: Replaced box_map_test.ops[65]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted box_map_test.ops[88]: 'l-store-copy tmp%22#0 0'
debug: Replaced box_map_test.ops[90]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted box_map_test.ops[12]: 'l-store-copy check%0#0 1'
debug: Replaced box_map_test.ops[15]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted box_map_test.ops[26]: 'l-store-copy check%1#0 1'
debug: Replaced box_map_test.ops[29]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted box_map_test.ops[45]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced box_map_test.ops[48]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_test.ops[62]: 'l-store-copy exists#0 1'
debug: Replaced box_map_test.ops[65]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted box_map_test.ops[73]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced box_map_test.ops[76]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted box_map_test.ops[86]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_test.ops[89]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted box_map_test.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test.ops[16]: 'l-store-copy value%0#0 1'
debug: Replaced box_map_test.ops[20]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted box_map_test.ops[31]: 'l-store-copy value%1#0 1'
debug: Replaced box_map_test.ops[35]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted box_map_test.ops[83]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test.ops[86]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test.ops[87]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test.ops[90]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test.ops[94]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced box_map_test.ops[98]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_test.ops[48]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_test.ops[54]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted box_map_test.ops[13]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_test.ops[93]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test.ops[108]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test.ops[48]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test.ops[67]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test.ops[68]: 'l-store-copy tmp%10#0 0'
debug: Replaced box_map_test.ops[86]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted box_map_test.ops[29]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_test.ops[80]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_set.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_set.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_set.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_set.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_get.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_get.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_get.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_get.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted box_map_get.ops[8]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced box_map_get.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted box_map_del.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_del.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_exists.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_exists.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_exists.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced box_map_exists.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Found 3 edge set/s for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#1
debug: shared x-stack for main_set_boxes_route@5 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_check_keys_route@6 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_delete_boxes_route@7 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_read_boxes_route@8 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_boxes_exist_route@9 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_slice_box_route@10 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_arc4_box_route@11 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_test_box_ref_route@12 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_test_route@13 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_set_route@14 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_get_route@15 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_del_route@16 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_exists_route@17 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main___algopy_default_create@19 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_after_if_else@20 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 into main_after_if_else@20
debug: inlining single reference block main___algopy_default_create@19 into main_bare_routing@18
debug: removing explicit jump to fall-through block main_after_if_else@20
box_storage/contract.py:17 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.set_boxes(a: uint64, b: bytes, c: bytes) -> void:
box_storage/contract.py:54 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.delete_boxes() -> void:
box_storage/contract.py:66 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.read_boxes() -> uint64, bytes, bytes:
box_storage/contract.py:70 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.boxes_exist() -> uint64, uint64, uint64:
box_storage/contract.py:74 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.slice_box() -> void:
box_storage/contract.py:83 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.arc4_box() -> void:
box_storage/contract.py:93 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.test_box_ref() -> void:
box_storage/contract.py:141 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.box_map_test() -> void:
box_storage/contract.py:162 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.box_map_set(key: uint64, value: bytes) -> void:
box_storage/contract.py:166 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.box_map_get(key: uint64) -> bytes:
box_storage/contract.py:170 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.box_map_del(key: uint64) -> void:
box_storage/contract.py:174 debug: optimizing TEAL subroutine examples.box_storage.contract.BoxContract.box_map_exists(key: uint64) -> uint64:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing box_storage/out/BoxContract.arc32.json
info: Writing box_storage/out/BoxContract.arc56.json
info: Writing box_storage/out/BoxContract.approval.teal
info: Writing box_storage/out/BoxContract.clear.teal
info: Writing box_storage/out/BoxContract.approval.bin
info: Writing box_storage/out/BoxContract.clear.bin
info: Writing box_storage/out/BoxContract.approval.puya.map
info: Writing box_storage/out/BoxContract.clear.puya.map
info: writing box_storage/out/client_BoxContract.py