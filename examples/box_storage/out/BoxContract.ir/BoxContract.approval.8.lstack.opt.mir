// Op                                                                                             Stack (out)
// examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                            tmp%0#2
        bz main_bare_routing@18 ; b main_abi_routing@4

    main_abi_routing@4:
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%2#0
        method set_boxes(uint64,byte[],string)void                                                tmp%2#0,Method(set_boxes(uint64,byte[],string)void)
        method check_keys()void                                                                   tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void)
        method delete_boxes()void                                                                 tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void)
        method read_boxes()(uint64,byte[],string,uint64)                                          tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64))
        method boxes_exist()(bool,bool,bool,bool)                                                 tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool))
        method slice_box()void                                                                    tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void)
        method arc4_box()void                                                                     tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void)
        method test_box_ref()void                                                                 tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void)
        method box_map_test()void                                                                 tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void)
        method box_map_set(uint64,string)void                                                     tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void)
        method box_map_get(uint64)string                                                          tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string)
        method box_map_del(uint64)void                                                            tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void)
        method box_map_exists(uint64)bool                                                         tmp%2#0,Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void),Method(box_map_exists(uint64)bool)
        l-load tmp%2#0 13                                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(delete_boxes()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void),Method(box_map_exists(uint64)bool),tmp%2#0
        match main_set_boxes_route@5 main_check_keys_route@6 main_delete_boxes_route@7 main_read_boxes_route@8 main_boxes_exist_route@9 main_slice_box_route@10 main_arc4_box_route@11 main_test_box_ref_route@12 main_box_map_test_route@13 main_box_map_set_route@14 main_box_map_get_route@15 main_box_map_del_route@16 main_box_map_exists_route@17 ; b main_after_if_else@20 

    main_set_boxes_route@5:
        // box_storage/contract.py:41
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%3#0
        !                                                                                         tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%5#0
        assert // can only call when not creating
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%0#0
        btoi                                                                                      tmp%7#0
        txna ApplicationArgs 2                                                                    tmp%7#0,tmp%8#0
        txna ApplicationArgs 3                                                                    tmp%7#0,tmp%8#0,tmp%9#0
        // box_storage/contract.py:41
        // @arc4.abimethod
        l-load tmp%7#0 2                                                                          tmp%8#0,tmp%9#0,tmp%7#0
        l-load tmp%8#0 2                                                                          tmp%9#0,tmp%7#0,tmp%8#0
        l-load tmp%9#0 2                                                                          tmp%7#0,tmp%8#0,tmp%9#0
        callsub set_boxes
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_check_keys_route@6:
        // box_storage/contract.py:79
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%10#0
        !                                                                                         tmp%11#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%12#0
        assert // can only call when not creating
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_delete_boxes_route@7:
        // box_storage/contract.py:86
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%14#0
        !                                                                                         tmp%15#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%16#0
        assert // can only call when not creating
        callsub delete_boxes
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_read_boxes_route@8:
        // box_storage/contract.py:99
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%18#0
        !                                                                                         tmp%19#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%20#0
        assert // can only call when not creating
        callsub read_boxes                                                                        elements_to_encode%0#0,elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0
        l-load elements_to_encode%0#0 3                                                           elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,elements_to_encode%0#0
        itob                                                                                      elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0
        l-load-copy elements_to_encode%1#0 3                                                      elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,elements_to_encode%1#0 (copy)
        len                                                                                       elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,length%0#0
        itob                                                                                      elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,as_bytes%0#0
        extract 6 2                                                                               elements_to_encode%1#0,elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,length_uint16%0#0
        l-load elements_to_encode%1#0 4                                                           elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,length_uint16%0#0,elements_to_encode%1#0
        concat                                                                                    elements_to_encode%2#0,elements_to_encode%3#0,val_as_bytes%0#0,encoded_value%0#0
        l-load elements_to_encode%3#0 2                                                           elements_to_encode%2#0,val_as_bytes%0#0,encoded_value%0#0,elements_to_encode%3#0
        itob                                                                                      elements_to_encode%2#0,val_as_bytes%0#0,encoded_value%0#0,val_as_bytes%1#0
        l-load val_as_bytes%0#0 2                                                                 elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,val_as_bytes%0#0
        byte 0x0014                                                                               elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,val_as_bytes%0#0,0x0014
        concat                                                                                    elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0
        l-load-copy encoded_value%0#0 2                                                           elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,encoded_value%0#0 (copy)
        len                                                                                       elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,data_length%0#0
        int 20                                                                                    elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,data_length%0#0,20
        l-load data_length%0#0 1                                                                  elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,20,data_length%0#0
        +                                                                                         elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,current_tail_offset%1#0
        itob                                                                                      elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,as_bytes%2#0
        extract 6 2                                                                               elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
        l-load encoded_tuple_buffer%2#0 1                                                         elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,offset_as_uint16%1#0,encoded_tuple_buffer%2#0
        l-load offset_as_uint16%1#0 1                                                             elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%2#0,offset_as_uint16%1#0
        concat                                                                                    elements_to_encode%2#0,encoded_value%0#0,val_as_bytes%1#0,encoded_tuple_buffer%3#0
        l-load val_as_bytes%1#0 1                                                                 elements_to_encode%2#0,encoded_value%0#0,encoded_tuple_buffer%3#0,val_as_bytes%1#0
        concat                                                                                    elements_to_encode%2#0,encoded_value%0#0,encoded_tuple_buffer%4#0
        l-load encoded_value%0#0 1                                                                elements_to_encode%2#0,encoded_tuple_buffer%4#0,encoded_value%0#0
        concat                                                                                    elements_to_encode%2#0,encoded_tuple_buffer%5#0
        l-load elements_to_encode%2#0 1                                                           encoded_tuple_buffer%5#0,elements_to_encode%2#0
        concat                                                                                    encoded_tuple_buffer%6#0
        byte 0x151f7c75                                                                           encoded_tuple_buffer%6#0,0x151f7c75
        l-load encoded_tuple_buffer%6#0 1                                                         0x151f7c75,encoded_tuple_buffer%6#0
        concat                                                                                    tmp%22#0
        log
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_boxes_exist_route@9:
        // box_storage/contract.py:112
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%23#0
        !                                                                                         tmp%24#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%25#0
        assert // can only call when not creating
        callsub boxes_exist                                                                       elements_to_encode%4#0,elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0
        byte 0x00                                                                                 elements_to_encode%4#0,elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0,0x00
        int 0                                                                                     elements_to_encode%4#0,elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0,0x00,0
        l-load elements_to_encode%4#0 5                                                           elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0,0x00,0,elements_to_encode%4#0
        setbit                                                                                    elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0
        byte 0x00                                                                                 elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0,0x00
        int 0                                                                                     elements_to_encode%5#0,elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0,0x00,0
        l-load elements_to_encode%5#0 5                                                           elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0,0x00,0,elements_to_encode%5#0
        setbit                                                                                    elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0
        byte 0x00                                                                                 elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0,0x00
        int 0                                                                                     elements_to_encode%6#0,elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0,0x00,0
        l-load elements_to_encode%6#0 5                                                           elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0,0x00,0,elements_to_encode%6#0
        setbit                                                                                    elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0,encoded_bool%2#0
        byte 0x00                                                                                 elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0,encoded_bool%2#0,0x00
        int 0                                                                                     elements_to_encode%7#0,encoded_bool%0#0,encoded_bool%1#0,encoded_bool%2#0,0x00,0
        l-load elements_to_encode%7#0 5                                                           encoded_bool%0#0,encoded_bool%1#0,encoded_bool%2#0,0x00,0,elements_to_encode%7#0
        setbit                                                                                    encoded_bool%0#0,encoded_bool%1#0,encoded_bool%2#0,encoded_bool%3#0
        l-load encoded_bool%1#0 2                                                                 encoded_bool%0#0,encoded_bool%2#0,encoded_bool%3#0,encoded_bool%1#0
        int 0                                                                                     encoded_bool%0#0,encoded_bool%2#0,encoded_bool%3#0,encoded_bool%1#0,0
        getbit                                                                                    encoded_bool%0#0,encoded_bool%2#0,encoded_bool%3#0,is_true%0#0
        l-load encoded_bool%0#0 3                                                                 encoded_bool%2#0,encoded_bool%3#0,is_true%0#0,encoded_bool%0#0
        int 1                                                                                     encoded_bool%2#0,encoded_bool%3#0,is_true%0#0,encoded_bool%0#0,1
        l-load is_true%0#0 2                                                                      encoded_bool%2#0,encoded_bool%3#0,encoded_bool%0#0,1,is_true%0#0
        setbit                                                                                    encoded_bool%2#0,encoded_bool%3#0,encoded_tuple_buffer%9#0
        l-load encoded_bool%2#0 2                                                                 encoded_bool%3#0,encoded_tuple_buffer%9#0,encoded_bool%2#0
        int 0                                                                                     encoded_bool%3#0,encoded_tuple_buffer%9#0,encoded_bool%2#0,0
        getbit                                                                                    encoded_bool%3#0,encoded_tuple_buffer%9#0,is_true%1#0
        l-load encoded_tuple_buffer%9#0 1                                                         encoded_bool%3#0,is_true%1#0,encoded_tuple_buffer%9#0
        int 2                                                                                     encoded_bool%3#0,is_true%1#0,encoded_tuple_buffer%9#0,2
        l-load is_true%1#0 2                                                                      encoded_bool%3#0,encoded_tuple_buffer%9#0,2,is_true%1#0
        setbit                                                                                    encoded_bool%3#0,encoded_tuple_buffer%10#0
        l-load encoded_bool%3#0 1                                                                 encoded_tuple_buffer%10#0,encoded_bool%3#0
        int 0                                                                                     encoded_tuple_buffer%10#0,encoded_bool%3#0,0
        getbit                                                                                    encoded_tuple_buffer%10#0,is_true%2#0
        l-load encoded_tuple_buffer%10#0 1                                                        is_true%2#0,encoded_tuple_buffer%10#0
        int 3                                                                                     is_true%2#0,encoded_tuple_buffer%10#0,3
        l-load is_true%2#0 2                                                                      encoded_tuple_buffer%10#0,3,is_true%2#0
        setbit                                                                                    encoded_tuple_buffer%11#0
        byte 0x151f7c75                                                                           encoded_tuple_buffer%11#0,0x151f7c75
        l-load encoded_tuple_buffer%11#0 1                                                        0x151f7c75,encoded_tuple_buffer%11#0
        concat                                                                                    tmp%27#0
        log
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_slice_box_route@10:
        // box_storage/contract.py:116
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%28#0
        !                                                                                         tmp%29#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%30#0
        assert // can only call when not creating
        callsub slice_box
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_arc4_box_route@11:
        // box_storage/contract.py:125
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%32#0
        !                                                                                         tmp%33#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%34#0
        assert // can only call when not creating
        callsub arc4_box
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_test_box_ref_route@12:
        // box_storage/contract.py:135
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%36#0
        !                                                                                         tmp%37#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%38#0
        assert // can only call when not creating
        callsub test_box_ref
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_box_map_test_route@13:
        // box_storage/contract.py:183
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%40#0
        !                                                                                         tmp%41#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%42#0
        assert // can only call when not creating
        callsub box_map_test
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_box_map_set_route@14:
        // box_storage/contract.py:204
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%44#0
        !                                                                                         tmp%45#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%46#0
        assert // can only call when not creating
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%1#0
        btoi                                                                                      tmp%48#0
        txna ApplicationArgs 2                                                                    tmp%48#0,tmp%49#0
        extract 2 0                                                                               tmp%48#0,tmp%50#0
        // box_storage/contract.py:204
        // @arc4.abimethod
        l-load tmp%48#0 1                                                                         tmp%50#0,tmp%48#0
        l-load tmp%50#0 1                                                                         tmp%48#0,tmp%50#0
        callsub box_map_set
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_box_map_get_route@15:
        // box_storage/contract.py:208
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%51#0
        !                                                                                         tmp%52#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%53#0
        assert // can only call when not creating
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%2#0
        btoi                                                                                      tmp%55#0
        // box_storage/contract.py:208
        // @arc4.abimethod
        callsub box_map_get                                                                       to_encode%0#0
        l-load-copy to_encode%0#0 0                                                               to_encode%0#0,to_encode%0#0 (copy)
        len                                                                                       to_encode%0#0,length%1#0
        itob                                                                                      to_encode%0#0,as_bytes%3#0
        extract 6 2                                                                               to_encode%0#0,length_uint16%1#0
        l-load to_encode%0#0 1                                                                    length_uint16%1#0,to_encode%0#0
        concat                                                                                    encoded_value%1#0
        byte 0x151f7c75                                                                           encoded_value%1#0,0x151f7c75
        l-load encoded_value%1#0 1                                                                0x151f7c75,encoded_value%1#0
        concat                                                                                    tmp%56#0
        log
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_box_map_del_route@16:
        // box_storage/contract.py:212
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%57#0
        !                                                                                         tmp%58#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%59#0
        assert // can only call when not creating
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%3#0
        btoi                                                                                      tmp%61#0
        // box_storage/contract.py:212
        // @arc4.abimethod
        callsub box_map_del
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_box_map_exists_route@17:
        // box_storage/contract.py:216
        // @arc4.abimethod
        txn OnCompletion                                                                          tmp%62#0
        !                                                                                         tmp%63#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%64#0
        assert // can only call when not creating
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%4#0
        btoi                                                                                      tmp%66#0
        // box_storage/contract.py:216
        // @arc4.abimethod
        callsub box_map_exists                                                                    to_encode%1#0
        byte 0x00                                                                                 to_encode%1#0,0x00
        int 0                                                                                     to_encode%1#0,0x00,0
        l-load to_encode%1#0 2                                                                    0x00,0,to_encode%1#0
        setbit                                                                                    encoded_bool%4#0
        byte 0x151f7c75                                                                           encoded_bool%4#0,0x151f7c75
        l-load encoded_bool%4#0 1                                                                 0x151f7c75,encoded_bool%4#0
        concat                                                                                    tmp%67#0
        log
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_bare_routing@18:
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        txn OnCompletion                                                                          tmp%68#0
        bz main___algopy_default_create@19 ; b main_after_if_else@20

    main___algopy_default_create@19:
        txn ApplicationID                                                                         tmp%69#0
        !                                                                                         tmp%70#0
        assert // can only call when creating
        int 1                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_after_if_else@20:
        // box_storage/contract.py:31
        // class BoxContract(arc4.ARC4Contract):
        int 0                                                                                     examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 

    main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21:
        v-load tmp%0#1                                                                            tmp%0#1
        return


// examples.box_storage.contract.BoxContract.set_boxes(a: uint64, b: bytes, c: bytes) -> void:
subroutine set_boxes:
    set_boxes_block@0:                                                                            (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:43
        // self.box_a.value = a
        p-load a#0                                                                                (𝕡) a#0,b#0,c#0 | a#0 (copy)
        itob                                                                                      (𝕡) a#0,b#0,c#0 | new_box_value%0#0
        byte "box_a"                                                                              (𝕡) a#0,b#0,c#0 | new_box_value%0#0,"box_a"
        l-load new_box_value%0#0 1                                                                (𝕡) a#0,b#0,c#0 | "box_a",new_box_value%0#0
        box_put                                                                                   (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:44
        // self.box_b.value = b.copy()
        byte "b"                                                                                  (𝕡) a#0,b#0,c#0 | "b"
        box_del                                                                                   (𝕡) a#0,b#0,c#0 | {box_del}
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 |
        byte "b"                                                                                  (𝕡) a#0,b#0,c#0 | "b"
        p-load b#0                                                                                (𝕡) a#0,b#0,c#0 | "b",b#0 (copy)
        box_put                                                                                   (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:45
        // self.box_c.value = c
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | 0x424f585f43
        box_del                                                                                   (𝕡) a#0,b#0,c#0 | {box_del}
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 |
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | 0x424f585f43
        p-load c#0                                                                                (𝕡) a#0,b#0,c#0 | 0x424f585f43,c#0 (copy)
        box_put                                                                                   (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:46
        // self.box_d.value = b.native
        p-load b#0                                                                                (𝕡) a#0,b#0,c#0 | b#0 (copy)
        extract 2 0                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_d"
        box_del                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,{box_del}
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_d"
        l-load-copy materialized_values%0#0 1                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_d",materialized_values%0#0 (copy)
        box_put                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:47
        // self.box_large.create()
        byte "box_large"                                                                          (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_large"
        int 6152                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_large",6152
        box_create                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,{box_create}
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:50
        // box_large_ref = BoxRef(key=self.box_large.key)
        byte "box_large"                                                                          (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_large"
        // box_storage/contract.py:51
        // box_large_ref.replace(size_of(Bytes1024) * 4, arc4.UInt64(42).bytes)
        int 4096                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_large",4096
        byte 0x000000000000002a                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_large",4096,0x000000000000002a
        box_replace                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:53
        // b_value = self.box_b.value.copy()
        byte "b"                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"b"
        box_get                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,maybe_exists%0#0
        assert // check self.box_b exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0
        // box_storage/contract.py:54
        // assert self.box_b.value.length == b_value.length, "direct reference should match copy"
        byte "b"                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,"b"
        box_get                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,maybe_value%1#0,maybe_exists%1#0
        assert // check self.box_b exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,maybe_value%1#0
        l-load maybe_value%1#0 0                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,maybe_value%1#0
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,maybe_value%1#0,0
        extract_uint16                                                                            (𝕡) a#0,b#0,c#0 | materialized_values%0#0,b_value#0,tmp%1#0
        l-load b_value#0 1                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%1#0,b_value#0
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%1#0,b_value#0,0
        extract_uint16                                                                            (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%1#0,tmp%2#0
        l-load tmp%1#0 1                                                                          (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%2#0,tmp%1#0
        l-load tmp%2#0 1                                                                          (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%1#0,tmp%2#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%3#0
        assert // direct reference should match copy                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:56
        // self.box_a.value += 3
        byte "box_a"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_a"
        box_get                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_value%2#0,maybe_exists%2#0
        l-load maybe_value%2#0 1                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_exists%2#0,maybe_value%2#0
        btoi                                                                                      (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_exists%2#0,maybe_value_converted%0#0
        l-load maybe_exists%2#0 1                                                                 (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_value_converted%0#0,maybe_exists%2#0
        assert // check self.box_a exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_value_converted%0#0
        l-load maybe_value_converted%0#0 0                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_value_converted%0#0
        int 3                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,maybe_value_converted%0#0,3
        +                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,materialized_values%1#0
        itob                                                                                      (𝕡) a#0,b#0,c#0 | materialized_values%0#0,new_box_value%1#0
        byte "box_a"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,new_box_value%1#0,"box_a"
        l-load new_box_value%1#0 1                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_a",new_box_value%1#0
        box_put                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:59
        // assert self.box_a.length == 8
        byte "box_a"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"box_a"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%0#0,check%0#0
        assert // check self.box_a exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%0#0
        l-load value%0#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%0#0
        int 8                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%0#0,8
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%4#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:60
        // assert self.box_b.length == b.bytes.length
        byte "b"                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,"b"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%1#0,check%1#0
        assert // check self.box_b exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%1#0
        p-load b#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%1#0,b#0 (copy)
        len                                                                                       (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%1#0,tmp%5#0
        l-load value%1#0 1                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%5#0,value%1#0
        l-load tmp%5#0 1                                                                          (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%1#0,tmp%5#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%6#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0
        // box_storage/contract.py:61
        // assert self.box_c.length == c.bytes.length
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,0x424f585f43
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%2#0,check%2#0
        assert // check self.box_c exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%2#0
        p-load c#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%2#0,c#0 (copy)
        len                                                                                       (𝕡) a#0,b#0,c#0 | materialized_values%0#0,value%2#0,tmp%7#0
        l-load value%2#0 1                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,value%2#0
        l-load-copy tmp%7#0 1                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,value%2#0,tmp%7#0 (copy)
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%8#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0
        // box_storage/contract.py:62
        // assert self.box_d.length == b.native.length
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,"box_d"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,value%3#0,check%3#0
        assert // check self.box_d exists                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,value%3#0
        l-load-copy materialized_values%0#0 2                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,value%3#0,materialized_values%0#0 (copy)
        len                                                                                       (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,value%3#0,tmp%10#0
        l-load value%3#0 1                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,value%3#0
        l-load-copy tmp%10#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,value%3#0,tmp%10#0 (copy)
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%11#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0
        // box_storage/contract.py:65
        // assert self.box_c.value.bytes[0] == c.bytes[0]
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43,0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43,0,1
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%12#0
        p-load c#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%12#0,c#0 (copy)
        extract 0 1                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%12#0,tmp%13#0
        l-load tmp%12#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%13#0,tmp%12#0
        l-load tmp%13#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%12#0,tmp%13#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%14#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0
        // box_storage/contract.py:66
        // assert self.box_c.value.bytes[-1] == c.bytes[-1]
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%15#0,tmp%16#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%15#0
        l-store tmp%15#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%15#0
        l-load tmp%15#0 0                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%15#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%15#0,1
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%17#0
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%17#0,0x424f585f43
        l-load tmp%17#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43,tmp%17#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43,tmp%17#0,1
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0
        l-load-copy tmp%7#0 2                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,tmp%7#0 (copy)
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,tmp%7#0 (copy),1
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,tmp%20#0
        p-load c#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,tmp%20#0,c#0 (copy)
        l-load tmp%20#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,c#0 (copy),tmp%20#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,c#0 (copy),tmp%20#0,1
        extract3                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,tmp%21#0
        l-load tmp%18#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%21#0,tmp%18#0
        l-load tmp%21#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%18#0,tmp%21#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%22#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0
        // box_storage/contract.py:67
        // assert self.box_c.value.bytes[:-1] == c.bytes[:-1]
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%24#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0
        l-store tmp%23#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,1
        l-load-copy tmp%23#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,1,tmp%23#0 (copy)
        <                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%25#0
        l-load-copy tmp%23#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%25#0,tmp%23#0 (copy)
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%25#0,tmp%23#0 (copy),1
        l-load tmp%25#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%23#0 (copy),1,tmp%25#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%26#0
        l-load tmp%23#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%26#0,tmp%23#0
        l-load tmp%26#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%23#0,tmp%26#0
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%27#0
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%27#0,0x424f585f43
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%27#0,0x424f585f43,0
        l-load tmp%27#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43,0,tmp%27#0
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,1
        l-load-copy tmp%7#0 3                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,1,tmp%7#0 (copy)
        >=                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,is_out_of_bounds%0#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,is_out_of_bounds%0#0,1
        l-load-copy tmp%7#0 4                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,is_out_of_bounds%0#0,1,tmp%7#0 (copy)
        l-load is_out_of_bounds%0#0 2                                                             (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,1,tmp%7#0 (copy),is_out_of_bounds%0#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,bounded_offset%0#0
        l-load-copy tmp%7#0 3                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,bounded_offset%0#0,tmp%7#0 (copy)
        l-load bounded_offset%0#0 1                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,tmp%7#0 (copy),bounded_offset%0#0
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,bounded_index%0#0
        p-load c#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,bounded_index%0#0,c#0 (copy)
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,bounded_index%0#0,c#0 (copy),0
        l-load bounded_index%0#0 2                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,c#0 (copy),0,bounded_index%0#0
        substring3                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,tmp%30#0
        l-load tmp%29#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%30#0,tmp%29#0
        l-load tmp%30#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%29#0,tmp%30#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%31#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0
        // box_storage/contract.py:68
        // assert self.box_c.value.bytes[:2] == c.bytes[:2]
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0,tmp%33#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0
        l-store tmp%32#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0,2
        l-load-copy tmp%32#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0,2,tmp%32#0 (copy)
        <                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0,tmp%34#0
        l-load tmp%32#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%34#0,tmp%32#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%34#0,tmp%32#0,2
        l-load tmp%34#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%32#0,2,tmp%34#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%35#0
        byte 0x424f585f43                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%35#0,0x424f585f43
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%35#0,0x424f585f43,0
        l-load tmp%35#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,0x424f585f43,0,tmp%35#0
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%37#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%37#0,2
        l-load-copy tmp%7#0 3                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%37#0,2,tmp%7#0 (copy)
        >=                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%37#0,is_out_of_bounds%1#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%7#0,tmp%10#0,tmp%37#0,is_out_of_bounds%1#0,2
        l-load tmp%7#0 4                                                                          (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,is_out_of_bounds%1#0,2,tmp%7#0
        l-load is_out_of_bounds%1#0 2                                                             (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,2,tmp%7#0,is_out_of_bounds%1#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,bounded_index%1#0
        p-load c#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,bounded_index%1#0,c#0 (copy)
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,bounded_index%1#0,c#0 (copy),0
        l-load bounded_index%1#0 2                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,c#0 (copy),0,bounded_index%1#0
        substring3                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,tmp%38#0
        l-load tmp%37#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%38#0,tmp%37#0
        l-load tmp%38#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%37#0,tmp%38#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%39#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0
        // box_storage/contract.py:71
        // assert self.box_d.value[0] == b.native[0]
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d"
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",0,1
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%40#0
        p-load b#0                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%40#0,b#0 (copy)
        extract 2 1                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%40#0,tmp%42#0
        l-load tmp%40#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%42#0,tmp%40#0
        l-load tmp%42#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%40#0,tmp%42#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%43#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0
        // box_storage/contract.py:72
        // assert self.box_d.value[-1] == b.native[-1]
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%44#0,tmp%45#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%44#0
        l-store tmp%44#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%44#0
        l-load tmp%44#0 0                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%44#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%44#0,1
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%46#0
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%46#0,"box_d"
        l-load tmp%46#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",tmp%46#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",tmp%46#0,1
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0
        l-load-copy tmp%10#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,tmp%10#0 (copy)
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,tmp%10#0 (copy),1
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,tmp%50#0
        l-load-copy materialized_values%0#0 3                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,tmp%50#0,materialized_values%0#0 (copy)
        l-load tmp%50#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,materialized_values%0#0 (copy),tmp%50#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,materialized_values%0#0 (copy),tmp%50#0,1
        extract3                                                                                  (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,tmp%51#0
        l-load tmp%47#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%51#0,tmp%47#0
        l-load tmp%51#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%47#0,tmp%51#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%52#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0
        // box_storage/contract.py:73
        // assert self.box_d.value[:-1] == b.native[:-1]
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%54#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0
        l-store tmp%53#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,1
        l-load-copy tmp%53#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,1,tmp%53#0 (copy)
        <                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%55#0
        l-load-copy tmp%53#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%55#0,tmp%53#0 (copy)
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%55#0,tmp%53#0 (copy),1
        l-load tmp%55#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%53#0 (copy),1,tmp%55#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%56#0
        l-load tmp%53#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%56#0,tmp%53#0
        l-load tmp%56#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%53#0,tmp%56#0
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%57#0
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%57#0,"box_d"
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%57#0,"box_d",0
        l-load tmp%57#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",0,tmp%57#0
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,1
        l-load-copy tmp%10#0 2                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,1,tmp%10#0 (copy)
        >=                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,is_out_of_bounds%2#0
        int 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,is_out_of_bounds%2#0,1
        l-load-copy tmp%10#0 3                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,is_out_of_bounds%2#0,1,tmp%10#0 (copy)
        l-load is_out_of_bounds%2#0 2                                                             (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,1,tmp%10#0 (copy),is_out_of_bounds%2#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,bounded_offset%1#0
        l-load-copy tmp%10#0 2                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,bounded_offset%1#0,tmp%10#0 (copy)
        l-load bounded_offset%1#0 1                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,tmp%10#0 (copy),bounded_offset%1#0
        -                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,bounded_index%2#0
        l-load-copy materialized_values%0#0 3                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,bounded_index%2#0,materialized_values%0#0 (copy)
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,bounded_index%2#0,materialized_values%0#0 (copy),0
        l-load bounded_index%2#0 2                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,materialized_values%0#0 (copy),0,bounded_index%2#0
        substring3                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,tmp%61#0
        l-load tmp%59#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%61#0,tmp%59#0
        l-load tmp%61#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%59#0,tmp%61#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%62#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0
        // box_storage/contract.py:74
        // assert self.box_d.value[:5] == b.native[:5]
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0,tmp%64#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0
        l-store tmp%63#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0
        int 5                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0,5
        l-load-copy tmp%63#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0,5,tmp%63#0 (copy)
        <                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0,tmp%65#0
        l-load tmp%63#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%65#0,tmp%63#0
        int 5                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%65#0,tmp%63#0,5
        l-load tmp%65#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%63#0,5,tmp%65#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%66#0
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%66#0,"box_d"
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%66#0,"box_d",0
        l-load tmp%66#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",0,tmp%66#0
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0
        int 5                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,5
        l-load-copy tmp%10#0 2                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,5,tmp%10#0 (copy)
        >=                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,is_out_of_bounds%3#0
        int 5                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,is_out_of_bounds%3#0,5
        l-load-copy tmp%10#0 3                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,is_out_of_bounds%3#0,5,tmp%10#0 (copy)
        l-load is_out_of_bounds%3#0 2                                                             (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,5,tmp%10#0 (copy),is_out_of_bounds%3#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,bounded_index%3#0
        l-load-copy materialized_values%0#0 3                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,bounded_index%3#0,materialized_values%0#0 (copy)
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,bounded_index%3#0,materialized_values%0#0 (copy),0
        l-load bounded_index%3#0 2                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,materialized_values%0#0 (copy),0,bounded_index%3#0
        substring3                                                                                (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,tmp%70#0
        l-load tmp%68#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%70#0,tmp%68#0
        l-load tmp%70#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%68#0,tmp%70#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%71#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0
        // box_storage/contract.py:75
        // assert self.box_d.value[: UInt64(2)] == b.native[: UInt64(2)]
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0,tmp%73#0
        pop 1                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0
        l-store tmp%72#0 0                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0,2
        l-load-copy tmp%72#0 1                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0,2,tmp%72#0 (copy)
        <                                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0,tmp%74#0
        l-load tmp%72#0 1                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%74#0,tmp%72#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%74#0,tmp%72#0,2
        l-load tmp%74#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%72#0,2,tmp%74#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%75#0
        byte "box_d"                                                                              (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%75#0,"box_d"
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%75#0,"box_d",0
        l-load tmp%75#0 2                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,"box_d",0,tmp%75#0
        box_extract                                                                               (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%77#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%77#0,2
        l-load-copy tmp%10#0 2                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%77#0,2,tmp%10#0 (copy)
        >=                                                                                        (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%77#0,is_out_of_bounds%4#0
        int 2                                                                                     (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%10#0,tmp%77#0,is_out_of_bounds%4#0,2
        l-load tmp%10#0 3                                                                         (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%77#0,is_out_of_bounds%4#0,2,tmp%10#0
        l-load is_out_of_bounds%4#0 2                                                             (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%77#0,2,tmp%10#0,is_out_of_bounds%4#0
        select                                                                                    (𝕡) a#0,b#0,c#0 | materialized_values%0#0,tmp%77#0,bounded_index%4#0
        l-load materialized_values%0#0 2                                                          (𝕡) a#0,b#0,c#0 | tmp%77#0,bounded_index%4#0,materialized_values%0#0
        int 0                                                                                     (𝕡) a#0,b#0,c#0 | tmp%77#0,bounded_index%4#0,materialized_values%0#0,0
        l-load bounded_index%4#0 2                                                                (𝕡) a#0,b#0,c#0 | tmp%77#0,materialized_values%0#0,0,bounded_index%4#0
        substring3                                                                                (𝕡) a#0,b#0,c#0 | tmp%77#0,tmp%79#0
        l-load tmp%77#0 1                                                                         (𝕡) a#0,b#0,c#0 | tmp%79#0,tmp%77#0
        l-load tmp%79#0 1                                                                         (𝕡) a#0,b#0,c#0 | tmp%77#0,tmp%79#0
        ==                                                                                        (𝕡) a#0,b#0,c#0 | tmp%80#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:77
        // assert self.box_large.length == size_of(LargeStruct)
        byte "box_large"                                                                          (𝕡) a#0,b#0,c#0 | "box_large"
        box_len                                                                                   (𝕡) a#0,b#0,c#0 | value%4#0,check%4#0
        assert // check self.box_large exists                                                     (𝕡) a#0,b#0,c#0 | value%4#0
        l-load value%4#0 0                                                                        (𝕡) a#0,b#0,c#0 | value%4#0
        int 6152                                                                                  (𝕡) a#0,b#0,c#0 | value%4#0,6152
        ==                                                                                        (𝕡) a#0,b#0,c#0 | tmp%81#0
        assert                                                                                    (𝕡) a#0,b#0,c#0 |
        retsub


// examples.box_storage.contract.BoxContract.delete_boxes() -> void:
subroutine delete_boxes:
    delete_boxes_block@0:
        // box_storage/contract.py:88
        // del self.box_a.value
        byte "box_a"                                                                              "box_a"
        box_del                                                                                   {box_del}
        pop 1
        // box_storage/contract.py:89
        // del self.box_b.value
        byte "b"                                                                                  "b"
        box_del                                                                                   {box_del}
        pop 1
        // box_storage/contract.py:90
        // del self.box_c.value
        byte 0x424f585f43                                                                         0x424f585f43
        box_del                                                                                   {box_del}
        pop 1
        // box_storage/contract.py:91
        // assert self.box_a.get(default=UInt64(42)) == 42
        byte "box_a"                                                                              "box_a"
        box_get                                                                                   maybe_value%0#0,maybe_exists%0#0
        l-load maybe_value%0#0 1                                                                  maybe_exists%0#0,maybe_value%0#0
        btoi                                                                                      maybe_exists%0#0,maybe_value_converted%0#0
        int 42                                                                                    maybe_exists%0#0,maybe_value_converted%0#0,42
        l-load maybe_value_converted%0#0 1                                                        maybe_exists%0#0,42,maybe_value_converted%0#0
        l-load maybe_exists%0#0 2                                                                 42,maybe_value_converted%0#0,maybe_exists%0#0
        select                                                                                    state_get%0#0
        int 42                                                                                    state_get%0#0,42
        ==                                                                                        tmp%0#0
        assert
        // box_storage/contract.py:92
        // assert self.box_b.get(default=arc4.DynamicBytes(b"42")).native == b"42"
        byte "b"                                                                                  "b"
        box_get                                                                                   maybe_value%1#0,maybe_exists%1#0
        byte 0x00023432                                                                           maybe_value%1#0,maybe_exists%1#0,0x00023432
        l-load maybe_value%1#0 2                                                                  maybe_exists%1#0,0x00023432,maybe_value%1#0
        l-load maybe_exists%1#0 2                                                                 0x00023432,maybe_value%1#0,maybe_exists%1#0
        select                                                                                    state_get%1#0
        extract 2 0                                                                               tmp%1#0
        byte 0x3432                                                                               tmp%1#0,0x3432
        ==                                                                                        tmp%2#0
        assert
        // box_storage/contract.py:93
        // assert self.box_c.get(default=arc4.String("42")) == "42"
        byte 0x424f585f43                                                                         0x424f585f43
        box_get                                                                                   maybe_value%2#0,maybe_exists%2#0
        byte 0x00023432                                                                           maybe_value%2#0,maybe_exists%2#0,0x00023432
        l-load maybe_value%2#0 2                                                                  maybe_exists%2#0,0x00023432,maybe_value%2#0
        l-load maybe_exists%2#0 2                                                                 0x00023432,maybe_value%2#0,maybe_exists%2#0
        select                                                                                    state_get%2#0
        byte 0x00023432                                                                           state_get%2#0,0x00023432
        ==                                                                                        tmp%3#0
        assert
        // box_storage/contract.py:94
        // a, a_exists = self.box_a.maybe()
        byte "box_a"                                                                              "box_a"
        box_get                                                                                   maybe_value%3#0,a_exists#0
        l-load maybe_value%3#0 1                                                                  a_exists#0,maybe_value%3#0
        btoi                                                                                      a_exists#0,a#0
        // box_storage/contract.py:95
        // assert not a_exists
        l-load a_exists#0 1                                                                       a#0,a_exists#0
        !                                                                                         a#0,tmp%4#0
        assert                                                                                    a#0
        // box_storage/contract.py:96
        // assert a == 0
        l-load a#0 0                                                                              a#0
        !                                                                                         tmp%5#0
        assert
        // box_storage/contract.py:97
        // del self.box_large.value
        byte "box_large"                                                                          "box_large"
        box_del                                                                                   {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.read_boxes() -> uint64, bytes, bytes, uint64:
subroutine read_boxes:
    read_boxes_block@0:
        // box_storage/contract.py:103
        // large_box_ref = BoxRef(key=self.box_large.key)
        byte "box_large"                                                                          "box_large"
        // box_storage/contract.py:104
        // large_e = arc4.UInt64.from_bytes(large_box_ref.extract(size_of(Bytes1024) * 4, 8))
        int 4096                                                                                  "box_large",4096
        int 8                                                                                     "box_large",4096,8
        box_extract                                                                               large_e#0
        // box_storage/contract.py:106
        // get_box_value_plus_1(self.box_a) - 1,
        byte "box_a"                                                                              large_e#0,"box_a"
        // box_storage/contract.py:223
        // return box.value + 1
        box_get                                                                                   large_e#0,maybe_value%0#0,maybe_exists%0#0
        l-load maybe_value%0#0 1                                                                  large_e#0,maybe_exists%0#0,maybe_value%0#0
        btoi                                                                                      large_e#0,maybe_exists%0#0,maybe_value_converted%0#0
        l-load maybe_exists%0#0 1                                                                 large_e#0,maybe_value_converted%0#0,maybe_exists%0#0
        assert // check Box exists                                                                large_e#0,maybe_value_converted%0#0
        l-load maybe_value_converted%0#0 0                                                        large_e#0,maybe_value_converted%0#0
        int 1                                                                                     large_e#0,maybe_value_converted%0#0,1
        +                                                                                         large_e#0,tmp%0#1
        // box_storage/contract.py:106
        // get_box_value_plus_1(self.box_a) - 1,
        int 1                                                                                     large_e#0,tmp%0#1,1
        -                                                                                         large_e#0,tmp%2#0
        // box_storage/contract.py:107
        // self.box_b.value.native,
        byte "b"                                                                                  large_e#0,tmp%2#0,"b"
        box_get                                                                                   large_e#0,tmp%2#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.box_b exists                                                         large_e#0,tmp%2#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                                                  large_e#0,tmp%2#0,maybe_value%0#0
        extract 2 0                                                                               large_e#0,tmp%2#0,tmp%3#0
        // box_storage/contract.py:108
        // self.box_c.value,
        byte 0x424f585f43                                                                         large_e#0,tmp%2#0,tmp%3#0,0x424f585f43
        box_get                                                                                   large_e#0,tmp%2#0,tmp%3#0,maybe_value%1#0,maybe_exists%1#0
        assert // check self.box_c exists                                                         large_e#0,tmp%2#0,tmp%3#0,maybe_value%1#0
        // box_storage/contract.py:109
        // large_e.native,
        l-load large_e#0 3                                                                        tmp%2#0,tmp%3#0,maybe_value%1#0,large_e#0
        btoi                                                                                      tmp%2#0,tmp%3#0,maybe_value%1#0,tmp%4#0
        // box_storage/contract.py:105-110
        // return (
        //     get_box_value_plus_1(self.box_a) - 1,
        //     self.box_b.value.native,
        //     self.box_c.value,
        //     large_e.native,
        // )
        l-load tmp%2#0 3                                                                          tmp%3#0,maybe_value%1#0,tmp%4#0,tmp%2#0
        l-load tmp%3#0 3                                                                          maybe_value%1#0,tmp%4#0,tmp%2#0,tmp%3#0
        l-load maybe_value%1#0 3                                                                  tmp%4#0,tmp%2#0,tmp%3#0,maybe_value%1#0
        l-load tmp%4#0 3                                                                          tmp%2#0,tmp%3#0,maybe_value%1#0,tmp%4#0
        retsub                                                                                    tmp%2#0,tmp%3#0,maybe_value%1#0,tmp%4#0


// examples.box_storage.contract.BoxContract.boxes_exist() -> uint64, uint64, uint64, uint64:
subroutine boxes_exist:
    boxes_exist_block@0:
        // box_storage/contract.py:114
        // return bool(self.box_a), bool(self.box_b), bool(self.box_c), bool(self.box_large)
        byte "box_a"                                                                              "box_a"
        box_len                                                                                   _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                maybe_exists%0#0,_%0#0
        pop 1                                                                                     maybe_exists%0#0
        byte "b"                                                                                  maybe_exists%0#0,"b"
        box_len                                                                                   maybe_exists%0#0,_%1#0,maybe_exists%1#0
        l-store maybe_exists%1#0 1                                                                maybe_exists%0#0,maybe_exists%1#0,_%1#0
        pop 1                                                                                     maybe_exists%0#0,maybe_exists%1#0
        byte 0x424f585f43                                                                         maybe_exists%0#0,maybe_exists%1#0,0x424f585f43
        box_len                                                                                   maybe_exists%0#0,maybe_exists%1#0,_%2#0,maybe_exists%2#0
        l-store maybe_exists%2#0 1                                                                maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,_%2#0
        pop 1                                                                                     maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0
        byte "box_large"                                                                          maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,"box_large"
        box_len                                                                                   maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,_%3#0,maybe_exists%3#0
        l-store maybe_exists%3#0 1                                                                maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0,_%3#0
        pop 1                                                                                     maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0
        l-load maybe_exists%0#0 3                                                                 maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0,maybe_exists%0#0
        l-load maybe_exists%1#0 3                                                                 maybe_exists%2#0,maybe_exists%3#0,maybe_exists%0#0,maybe_exists%1#0
        l-load maybe_exists%2#0 3                                                                 maybe_exists%3#0,maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0
        l-load maybe_exists%3#0 3                                                                 maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0
        retsub                                                                                    maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0


// examples.box_storage.contract.BoxContract.slice_box() -> void:
subroutine slice_box:
    slice_box_block@0:
        // box_storage/contract.py:118
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                  "0"
        // box_storage/contract.py:119
        // box_0.value = Bytes(b"Testing testing 123")
        box_del                                                                                   {box_del}
        pop 1
        // box_storage/contract.py:118
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                  "0"
        // box_storage/contract.py:119
        // box_0.value = Bytes(b"Testing testing 123")
        byte 0x54657374696e672074657374696e6720313233                                             "0",0x54657374696e672074657374696e6720313233
        box_put
        // box_storage/contract.py:118
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                  "0"
        // box_storage/contract.py:120
        // assert box_0.value[0:7] == b"Testing"
        box_len                                                                                   tmp%0#0,tmp%1#0
        pop 1                                                                                     tmp%0#0
        l-store tmp%0#0 0                                                                         tmp%0#0
        l-load-copy tmp%0#0 0                                                                     tmp%0#0,tmp%0#0 (copy)
        int 0                                                                                     tmp%0#0,tmp%0#0 (copy),0
        l-load-copy tmp%0#0 2                                                                     tmp%0#0,tmp%0#0 (copy),0,tmp%0#0 (copy)
        select                                                                                    tmp%0#0,tmp%3#0
        int 7                                                                                     tmp%0#0,tmp%3#0,7
        l-load-copy tmp%0#0 2                                                                     tmp%0#0,tmp%3#0,7,tmp%0#0 (copy)
        <                                                                                         tmp%0#0,tmp%3#0,tmp%4#0
        l-load tmp%0#0 2                                                                          tmp%3#0,tmp%4#0,tmp%0#0
        int 7                                                                                     tmp%3#0,tmp%4#0,tmp%0#0,7
        l-load tmp%4#0 2                                                                          tmp%3#0,tmp%0#0,7,tmp%4#0
        select                                                                                    tmp%3#0,tmp%5#0
        l-load-copy tmp%3#0 1                                                                     tmp%3#0,tmp%5#0,tmp%3#0 (copy)
        -                                                                                         tmp%3#0,tmp%6#0
        // box_storage/contract.py:118
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                  tmp%3#0,tmp%6#0,"0"
        // box_storage/contract.py:120
        // assert box_0.value[0:7] == b"Testing"
        l-load tmp%3#0 2                                                                          tmp%6#0,"0",tmp%3#0
        l-load tmp%6#0 2                                                                          "0",tmp%3#0,tmp%6#0
        box_extract                                                                               tmp%7#0
        byte 0x54657374696e67                                                                     tmp%7#0,0x54657374696e67
        ==                                                                                        tmp%8#0
        assert
        // box_storage/contract.py:122
        // self.box_c.value = arc4.String("Hello")
        byte 0x424f585f43                                                                         0x424f585f43
        box_del                                                                                   {box_del}
        pop 1
        byte 0x424f585f43                                                                         0x424f585f43
        byte 0x000548656c6c6f                                                                     0x424f585f43,0x000548656c6c6f
        box_put
        // box_storage/contract.py:123
        // assert self.box_c.value.bytes[2:10] == b"Hello"
        byte 0x424f585f43                                                                         0x424f585f43
        box_len                                                                                   tmp%9#0,tmp%10#0
        pop 1                                                                                     tmp%9#0
        l-store tmp%9#0 0                                                                         tmp%9#0
        int 2                                                                                     tmp%9#0,2
        l-load-copy tmp%9#0 1                                                                     tmp%9#0,2,tmp%9#0 (copy)
        <                                                                                         tmp%9#0,tmp%11#0
        l-load-copy tmp%9#0 1                                                                     tmp%9#0,tmp%11#0,tmp%9#0 (copy)
        int 2                                                                                     tmp%9#0,tmp%11#0,tmp%9#0 (copy),2
        l-load tmp%11#0 2                                                                         tmp%9#0,tmp%9#0 (copy),2,tmp%11#0
        select                                                                                    tmp%9#0,tmp%12#0
        int 10                                                                                    tmp%9#0,tmp%12#0,10
        l-load-copy tmp%9#0 2                                                                     tmp%9#0,tmp%12#0,10,tmp%9#0 (copy)
        <                                                                                         tmp%9#0,tmp%12#0,tmp%13#0
        l-load tmp%9#0 2                                                                          tmp%12#0,tmp%13#0,tmp%9#0
        int 10                                                                                    tmp%12#0,tmp%13#0,tmp%9#0,10
        l-load tmp%13#0 2                                                                         tmp%12#0,tmp%9#0,10,tmp%13#0
        select                                                                                    tmp%12#0,tmp%14#0
        l-load-copy tmp%12#0 1                                                                    tmp%12#0,tmp%14#0,tmp%12#0 (copy)
        -                                                                                         tmp%12#0,tmp%15#0
        byte 0x424f585f43                                                                         tmp%12#0,tmp%15#0,0x424f585f43
        l-load tmp%12#0 2                                                                         tmp%15#0,0x424f585f43,tmp%12#0
        l-load tmp%15#0 2                                                                         0x424f585f43,tmp%12#0,tmp%15#0
        box_extract                                                                               tmp%16#0
        byte 0x48656c6c6f                                                                         tmp%16#0,0x48656c6c6f
        ==                                                                                        tmp%17#0
        assert
        retsub


// examples.box_storage.contract.BoxContract.arc4_box() -> void:
subroutine arc4_box:
    arc4_box_block@0:
        // box_storage/contract.py:127
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                 0x64
        // box_storage/contract.py:128
        // box_d.value = StaticInts(arc4.UInt8(0), arc4.UInt8(1), arc4.UInt8(2), arc4.UInt8(3))
        byte 0x00010203                                                                           0x64,0x00010203
        box_put
        // box_storage/contract.py:127
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                 0x64
        // box_storage/contract.py:130
        // assert box_d.value[0] == 0
        box_get                                                                                   maybe_value%0#0,maybe_exists%0#0
        assert // check Box exists                                                                maybe_value%0#0
        l-load maybe_value%0#0 0                                                                  maybe_value%0#0
        extract 0 1 // on error: Index access is out of bounds                                    reinterpret_biguint%0#0
        byte 0x00                                                                                 reinterpret_biguint%0#0,0x00
        b==                                                                                       tmp%0#0
        assert
        // box_storage/contract.py:127
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                 0x64
        // box_storage/contract.py:131
        // assert box_d.value[1] == 1
        box_get                                                                                   maybe_value%1#0,maybe_exists%1#0
        assert // check Box exists                                                                maybe_value%1#0
        l-load maybe_value%1#0 0                                                                  maybe_value%1#0
        extract 1 1 // on error: Index access is out of bounds                                    reinterpret_biguint%2#0
        byte 0x01                                                                                 reinterpret_biguint%2#0,0x01
        b==                                                                                       tmp%1#0
        assert
        // box_storage/contract.py:127
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                 0x64
        // box_storage/contract.py:132
        // assert box_d.value[2] == 2
        box_get                                                                                   maybe_value%2#0,maybe_exists%2#0
        assert // check Box exists                                                                maybe_value%2#0
        l-load maybe_value%2#0 0                                                                  maybe_value%2#0
        extract 2 1 // on error: Index access is out of bounds                                    reinterpret_biguint%4#0
        byte 0x02                                                                                 reinterpret_biguint%4#0,0x02
        b==                                                                                       tmp%2#0
        assert
        // box_storage/contract.py:127
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                 0x64
        // box_storage/contract.py:133
        // assert box_d.value[3] == 3
        box_get                                                                                   maybe_value%3#0,maybe_exists%3#0
        assert // check Box exists                                                                maybe_value%3#0
        l-load maybe_value%3#0 0                                                                  maybe_value%3#0
        extract 3 1 // on error: Index access is out of bounds                                    reinterpret_biguint%6#0
        byte 0x03                                                                                 reinterpret_biguint%6#0,0x03
        b==                                                                                       tmp%3#0
        assert
        retsub


// examples.box_storage.contract.BoxContract.test_box_ref() -> void:
subroutine test_box_ref:
    test_box_ref_block@0:
        // box_storage/contract.py:138
        // box_ref = BoxRef(key="blob")
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:139
        // assert not box_ref, "no data"
        box_len                                                                                   _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                maybe_exists%0#0,_%0#0
        pop 1                                                                                     maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 maybe_exists%0#0
        !                                                                                         tmp%0#0
        assert // no data
        // box_storage/contract.py:140
        // box_ref = BoxRef(key=b"blob")
        byte 0x626c6f62                                                                           0x626c6f62
        // box_storage/contract.py:141
        // assert not box_ref, "no data"
        box_len                                                                                   _%1#0,maybe_exists%1#0
        l-store maybe_exists%1#0 1                                                                maybe_exists%1#0,_%1#0
        pop 1                                                                                     maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                 maybe_exists%1#0
        !                                                                                         tmp%1#0
        assert // no data
        // box_storage/contract.py:142
        // box_ref = BoxRef(key=Bytes(b"blob"))
        byte 0x626c6f62                                                                           0x626c6f62
        // box_storage/contract.py:143
        // assert not box_ref, "no data"
        box_len                                                                                   _%2#0,maybe_exists%2#0
        l-store maybe_exists%2#0 1                                                                maybe_exists%2#0,_%2#0
        pop 1                                                                                     maybe_exists%2#0
        l-load maybe_exists%2#0 0                                                                 maybe_exists%2#0
        !                                                                                         tmp%2#0
        assert // no data
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:145
        // assert not box_ref, "no data"
        box_len                                                                                   _%3#0,maybe_exists%3#0
        l-store maybe_exists%3#0 1                                                                maybe_exists%3#0,_%3#0
        pop 1                                                                                     maybe_exists%3#0
        l-load maybe_exists%3#0 0                                                                 maybe_exists%3#0
        !                                                                                         tmp%3#0
        assert // no data
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:148
        // assert box_ref.create(size=32)
        int 32                                                                                    "blob",32
        box_create                                                                                tmp%4#0
        assert
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:149
        // assert box_ref, "has data"
        box_len                                                                                   _%4#0,maybe_exists%4#0
        l-store maybe_exists%4#0 1                                                                maybe_exists%4#0,_%4#0
        pop 1                                                                                     maybe_exists%4#0
        l-load maybe_exists%4#0 0                                                                 maybe_exists%4#0
        assert // has data
        // box_storage/contract.py:152
        // sender_bytes = Txn.sender.bytes
        txn Sender                                                                                sender_bytes#0
        // box_storage/contract.py:153
        // app_address = Global.current_application_address.bytes
        global CurrentApplicationAddress                                                          sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:155
        // box_ref.replace(0, sender_bytes)
        int 0                                                                                     sender_bytes#0,app_address#0,"blob",0
        l-load-copy sender_bytes#0 3                                                              sender_bytes#0,app_address#0,"blob",0,sender_bytes#0 (copy)
        box_replace                                                                               sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:156
        // box_ref.resize(8000)
        int 8000                                                                                  sender_bytes#0,app_address#0,"blob",8000
        box_resize                                                                                sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:157
        // box_ref.splice(0, 0, app_address)
        int 0                                                                                     sender_bytes#0,app_address#0,"blob",0
        int 0                                                                                     sender_bytes#0,app_address#0,"blob",0,0
        l-load-copy app_address#0 3                                                               sender_bytes#0,app_address#0,"blob",0,0,app_address#0 (copy)
        box_splice                                                                                sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:158
        // box_ref.replace(64, value_3)
        int 64                                                                                    sender_bytes#0,app_address#0,"blob",64
        // box_storage/contract.py:154
        // value_3 = Bytes(b"hello")
        byte 0x68656c6c6f                                                                         sender_bytes#0,app_address#0,"blob",64,0x68656c6c6f
        // box_storage/contract.py:158
        // box_ref.replace(64, value_3)
        box_replace                                                                               sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:159
        // prefix = box_ref.extract(0, 32 * 2 + value_3.length)
        int 0                                                                                     sender_bytes#0,app_address#0,"blob",0
        int 69                                                                                    sender_bytes#0,app_address#0,"blob",0,69
        box_extract                                                                               sender_bytes#0,app_address#0,prefix#0
        // box_storage/contract.py:160
        // assert prefix == app_address + sender_bytes + value_3
        l-load-copy app_address#0 1                                                               sender_bytes#0,app_address#0,prefix#0,app_address#0 (copy)
        l-load-copy sender_bytes#0 3                                                              sender_bytes#0,app_address#0,prefix#0,app_address#0 (copy),sender_bytes#0 (copy)
        concat                                                                                    sender_bytes#0,app_address#0,prefix#0,tmp%7#0
        // box_storage/contract.py:154
        // value_3 = Bytes(b"hello")
        byte 0x68656c6c6f                                                                         sender_bytes#0,app_address#0,prefix#0,tmp%7#0,0x68656c6c6f
        // box_storage/contract.py:160
        // assert prefix == app_address + sender_bytes + value_3
        concat                                                                                    sender_bytes#0,app_address#0,prefix#0,tmp%8#0
        l-load prefix#0 1                                                                         sender_bytes#0,app_address#0,tmp%8#0,prefix#0
        l-load tmp%8#0 1                                                                          sender_bytes#0,app_address#0,prefix#0,tmp%8#0
        ==                                                                                        sender_bytes#0,app_address#0,tmp%9#0
        assert                                                                                    sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:163
        // assert box_ref.delete()
        box_del                                                                                   sender_bytes#0,app_address#0,tmp%10#0
        assert                                                                                    sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:167
        // value, exists = box_ref.maybe()
        box_get                                                                                   sender_bytes#0,app_address#0,value#0,exists#0
        // box_storage/contract.py:168
        // assert not exists
        !                                                                                         sender_bytes#0,app_address#0,value#0,tmp%12#0
        assert                                                                                    sender_bytes#0,app_address#0,value#0
        // box_storage/contract.py:169
        // assert value == b""
        l-load value#0 0                                                                          sender_bytes#0,app_address#0,value#0
        byte 0x                                                                                   sender_bytes#0,app_address#0,value#0,0x
        ==                                                                                        sender_bytes#0,app_address#0,tmp%13#0
        assert                                                                                    sender_bytes#0,app_address#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               sender_bytes#0,app_address#0,"blob"
        // box_storage/contract.py:170
        // assert box_ref.get(default=sender_bytes) == sender_bytes
        box_get                                                                                   sender_bytes#0,app_address#0,maybe_value%1#0,maybe_exists%6#0
        l-load-copy sender_bytes#0 3                                                              sender_bytes#0,app_address#0,maybe_value%1#0,maybe_exists%6#0,sender_bytes#0 (copy)
        l-load maybe_value%1#0 2                                                                  sender_bytes#0,app_address#0,maybe_exists%6#0,sender_bytes#0 (copy),maybe_value%1#0
        l-load maybe_exists%6#0 2                                                                 sender_bytes#0,app_address#0,sender_bytes#0 (copy),maybe_value%1#0,maybe_exists%6#0
        select                                                                                    sender_bytes#0,app_address#0,state_get%0#0
        l-load-copy sender_bytes#0 2                                                              sender_bytes#0,app_address#0,state_get%0#0,sender_bytes#0 (copy)
        ==                                                                                        sender_bytes#0,app_address#0,tmp%14#0
        assert                                                                                    sender_bytes#0,app_address#0
        // box_storage/contract.py:173
        // box_ref.put(sender_bytes + app_address)
        l-load sender_bytes#0 1                                                                   app_address#0,sender_bytes#0
        l-load app_address#0 1                                                                    sender_bytes#0,app_address#0
        concat                                                                                    tmp%15#0
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               tmp%15#0,"blob"
        // box_storage/contract.py:173
        // box_ref.put(sender_bytes + app_address)
        l-load tmp%15#0 1                                                                         "blob",tmp%15#0
        box_put
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:174
        // assert box_ref, "Blob exists"
        box_len                                                                                   _%5#0,maybe_exists%7#0
        l-store maybe_exists%7#0 1                                                                maybe_exists%7#0,_%5#0
        pop 1                                                                                     maybe_exists%7#0
        l-load maybe_exists%7#0 0                                                                 maybe_exists%7#0
        assert // Blob exists
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:175
        // assert box_ref.length == 64
        box_len                                                                                   value%0#0,check%0#0
        assert // check BoxRef exists                                                             value%0#0
        l-load value%0#0 0                                                                        value%0#0
        int 64                                                                                    value%0#0,64
        ==                                                                                        tmp%16#0
        assert
        // box_storage/contract.py:144
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                               "blob"
        // box_storage/contract.py:228
        // return ref.length
        box_len                                                                                   value%0#0,check%0#0
        assert // check BoxRef exists                                                             value%0#0
        // box_storage/contract.py:176
        // assert get_box_ref_length(box_ref) == 64
        l-load value%0#0 0                                                                        value%0#0
        int 64                                                                                    value%0#0,64
        ==                                                                                        tmp%18#0
        assert
        // box_storage/contract.py:179
        // self.box_ref.create(size=UInt64(32))
        byte "box_ref"                                                                            "box_ref"
        int 32                                                                                    "box_ref",32
        box_create                                                                                {box_create}
        pop 1
        // box_storage/contract.py:180
        // assert self.box_ref, "has data"
        byte "box_ref"                                                                            "box_ref"
        box_len                                                                                   _%6#0,maybe_exists%8#0
        l-store maybe_exists%8#0 1                                                                maybe_exists%8#0,_%6#0
        pop 1                                                                                     maybe_exists%8#0
        l-load maybe_exists%8#0 0                                                                 maybe_exists%8#0
        assert // has data
        // box_storage/contract.py:181
        // self.box_ref.delete()
        byte "box_ref"                                                                            "box_ref"
        box_del                                                                                   {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.box_map_test() -> void:
subroutine box_map_test:
    box_map_test_block@0:
        // box_storage/contract.py:185
        // key_0 = UInt64(0)
        int 0                                                                                     0
        // box_storage/contract.py:188
        // self.box_map[key_0] = value
        itob                                                                                      box_key_bytes%0#0
        l-load-copy box_key_bytes%0#0 0                                                           box_key_bytes%0#0,box_key_bytes%0#0 (copy)
        box_del                                                                                   box_key_bytes%0#0,{box_del}
        pop 1                                                                                     box_key_bytes%0#0
        l-load-copy box_key_bytes%0#0 0                                                           box_key_bytes%0#0,box_key_bytes%0#0 (copy)
        // box_storage/contract.py:187
        // value = String("Hmmmmm")
        byte "Hmmmmm"                                                                             box_key_bytes%0#0,box_key_bytes%0#0 (copy),"Hmmmmm"
        // box_storage/contract.py:188
        // self.box_map[key_0] = value
        box_put                                                                                   box_key_bytes%0#0
        // box_storage/contract.py:189
        // assert self.box_map[key_0].bytes.length == value.bytes.length
        l-load-copy box_key_bytes%0#0 0                                                           box_key_bytes%0#0,box_key_bytes%0#0 (copy)
        box_len                                                                                   box_key_bytes%0#0,value%0#0,check%0#0
        assert // check self.box_map entry exists                                                 box_key_bytes%0#0,value%0#0
        l-load value%0#0 0                                                                        box_key_bytes%0#0,value%0#0
        int 6                                                                                     box_key_bytes%0#0,value%0#0,6
        ==                                                                                        box_key_bytes%0#0,tmp%1#0
        assert                                                                                    box_key_bytes%0#0
        // box_storage/contract.py:190
        // assert self.box_map.length(key_0) == value.bytes.length
        l-load-copy box_key_bytes%0#0 0                                                           box_key_bytes%0#0,box_key_bytes%0#0 (copy)
        box_len                                                                                   box_key_bytes%0#0,value%1#0,check%1#0
        assert // check self.box_map entry exists                                                 box_key_bytes%0#0,value%1#0
        l-load value%1#0 0                                                                        box_key_bytes%0#0,value%1#0
        int 6                                                                                     box_key_bytes%0#0,value%1#0,6
        ==                                                                                        box_key_bytes%0#0,tmp%3#0
        assert                                                                                    box_key_bytes%0#0
        // box_storage/contract.py:186
        // key_1 = UInt64(1)
        int 1                                                                                     box_key_bytes%0#0,1
        // box_storage/contract.py:192
        // assert self.box_map.get(key_1, default=String("default")) == String("default")
        itob                                                                                      box_key_bytes%0#0,box_key_bytes%3#0
        l-load-copy box_key_bytes%3#0 0                                                           box_key_bytes%0#0,box_key_bytes%3#0,box_key_bytes%3#0 (copy)
        box_get                                                                                   box_key_bytes%0#0,box_key_bytes%3#0,maybe_value%0#0,maybe_exists%0#0
        byte "default"                                                                            box_key_bytes%0#0,box_key_bytes%3#0,maybe_value%0#0,maybe_exists%0#0,"default"
        l-load maybe_value%0#0 2                                                                  box_key_bytes%0#0,box_key_bytes%3#0,maybe_exists%0#0,"default",maybe_value%0#0
        l-load maybe_exists%0#0 2                                                                 box_key_bytes%0#0,box_key_bytes%3#0,"default",maybe_value%0#0,maybe_exists%0#0
        select                                                                                    box_key_bytes%0#0,box_key_bytes%3#0,state_get%0#0
        byte "default"                                                                            box_key_bytes%0#0,box_key_bytes%3#0,state_get%0#0,"default"
        ==                                                                                        box_key_bytes%0#0,box_key_bytes%3#0,tmp%4#0
        assert                                                                                    box_key_bytes%0#0,box_key_bytes%3#0
        // box_storage/contract.py:193
        // value, exists = self.box_map.maybe(key_1)
        l-load-copy box_key_bytes%3#0 0                                                           box_key_bytes%0#0,box_key_bytes%3#0,box_key_bytes%3#0 (copy)
        box_get                                                                                   box_key_bytes%0#0,box_key_bytes%3#0,value#1,exists#0
        l-store exists#0 1                                                                        box_key_bytes%0#0,box_key_bytes%3#0,exists#0,value#1
        pop 1                                                                                     box_key_bytes%0#0,box_key_bytes%3#0,exists#0
        // box_storage/contract.py:194
        // assert not exists
        l-load exists#0 0                                                                         box_key_bytes%0#0,box_key_bytes%3#0,exists#0
        !                                                                                         box_key_bytes%0#0,box_key_bytes%3#0,tmp%5#0
        assert                                                                                    box_key_bytes%0#0,box_key_bytes%3#0
        // box_storage/contract.py:195
        // assert key_0 in self.box_map
        l-load box_key_bytes%0#0 1                                                                box_key_bytes%3#0,box_key_bytes%0#0
        box_len                                                                                   box_key_bytes%3#0,_%0#0,maybe_exists%2#0
        l-store maybe_exists%2#0 1                                                                box_key_bytes%3#0,maybe_exists%2#0,_%0#0
        pop 1                                                                                     box_key_bytes%3#0,maybe_exists%2#0
        l-load maybe_exists%2#0 0                                                                 box_key_bytes%3#0,maybe_exists%2#0
        assert                                                                                    box_key_bytes%3#0
        // box_storage/contract.py:200
        // tmp_box_map[key_1] = String("hello")
        l-load-copy box_key_bytes%3#0 0                                                           box_key_bytes%3#0,box_key_bytes%3#0 (copy)
        box_del                                                                                   box_key_bytes%3#0,{box_del}
        pop 1                                                                                     box_key_bytes%3#0
        l-load-copy box_key_bytes%3#0 0                                                           box_key_bytes%3#0,box_key_bytes%3#0 (copy)
        byte "hello"                                                                              box_key_bytes%3#0,box_key_bytes%3#0 (copy),"hello"
        box_put                                                                                   box_key_bytes%3#0
        // box_storage/contract.py:233
        // return box_map[key + 1]
        l-load-copy box_key_bytes%3#0 0                                                           box_key_bytes%3#0,box_key_bytes%3#0 (copy)
        box_get                                                                                   box_key_bytes%3#0,maybe_value%0#0,maybe_exists%0#0
        assert // check BoxMap entry exists                                                       box_key_bytes%3#0,maybe_value%0#0
        // box_storage/contract.py:201
        // assert get_box_map_value_from_key_plus_1(tmp_box_map, UInt64(0)) == "hello"
        l-load maybe_value%0#0 0                                                                  box_key_bytes%3#0,maybe_value%0#0
        byte "hello"                                                                              box_key_bytes%3#0,maybe_value%0#0,"hello"
        ==                                                                                        box_key_bytes%3#0,tmp%8#0
        assert                                                                                    box_key_bytes%3#0
        // box_storage/contract.py:202
        // del tmp_box_map[key_1]
        l-load box_key_bytes%3#0 0                                                                box_key_bytes%3#0
        box_del                                                                                   {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.box_map_set(key: uint64, value: bytes) -> void:
subroutine box_map_set:
    box_map_set_block@0:                                                                          (𝕡) key#0,value#0 |
        // box_storage/contract.py:206
        // self.box_map[key] = value
        p-load key#0                                                                              (𝕡) key#0,value#0 | key#0 (copy)
        itob                                                                                      (𝕡) key#0,value#0 | box_key_bytes%0#0
        l-load-copy box_key_bytes%0#0 0                                                           (𝕡) key#0,value#0 | box_key_bytes%0#0,box_key_bytes%0#0 (copy)
        box_del                                                                                   (𝕡) key#0,value#0 | box_key_bytes%0#0,{box_del}
        pop 1                                                                                     (𝕡) key#0,value#0 | box_key_bytes%0#0
        l-load box_key_bytes%0#0 0                                                                (𝕡) key#0,value#0 | box_key_bytes%0#0
        p-load value#0                                                                            (𝕡) key#0,value#0 | box_key_bytes%0#0,value#0 (copy)
        box_put                                                                                   (𝕡) key#0,value#0 |
        retsub


// examples.box_storage.contract.BoxContract.box_map_get(key: uint64) -> bytes:
subroutine box_map_get:
    box_map_get_block@0:                                                                          (𝕡) key#0 |
        // box_storage/contract.py:210
        // return self.box_map[key]
        p-load key#0                                                                              (𝕡) key#0 | key#0 (copy)
        itob                                                                                      (𝕡) key#0 | box_key_bytes%0#0
        box_get                                                                                   (𝕡) key#0 | maybe_value%0#0,maybe_exists%0#0
        assert // check self.box_map entry exists                                                 (𝕡) key#0 | maybe_value%0#0
        l-load maybe_value%0#0 0                                                                  (𝕡) key#0 | maybe_value%0#0
        retsub                                                                                    maybe_value%0#0


// examples.box_storage.contract.BoxContract.box_map_del(key: uint64) -> void:
subroutine box_map_del:
    box_map_del_block@0:                                                                          (𝕡) key#0 |
        // box_storage/contract.py:214
        // del self.box_map[key]
        p-load key#0                                                                              (𝕡) key#0 | key#0 (copy)
        itob                                                                                      (𝕡) key#0 | box_key_bytes%0#0
        box_del                                                                                   (𝕡) key#0 | {box_del}
        pop 1                                                                                     (𝕡) key#0 |
        retsub


// examples.box_storage.contract.BoxContract.box_map_exists(key: uint64) -> uint64:
subroutine box_map_exists:
    box_map_exists_block@0:                                                                       (𝕡) key#0 |
        // box_storage/contract.py:218
        // return key in self.box_map
        p-load key#0                                                                              (𝕡) key#0 | key#0 (copy)
        itob                                                                                      (𝕡) key#0 | box_key_bytes%0#0
        box_len                                                                                   (𝕡) key#0 | _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                (𝕡) key#0 | maybe_exists%0#0,_%0#0
        pop 1                                                                                     (𝕡) key#0 | maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 (𝕡) key#0 | maybe_exists%0#0
        retsub                                                                                    maybe_exists%0#0


