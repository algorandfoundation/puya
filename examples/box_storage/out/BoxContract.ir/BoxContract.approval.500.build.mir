// Op                                                                                                  Stack (out)
// examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // box_storage/contract.py:80
        // class BoxContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                                 tmp%0#3
        v-store tmp%0#3
        v-load tmp%0#3                                                                                 tmp%0#3
        bz main___algopy_default_create@42 ; b main_abi_routing@4

    main_abi_routing@4:
        // box_storage/contract.py:80
        // class BoxContract(arc4.ARC4Contract):
        txn OnCompletion                                                                               tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        !                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert
        txna ApplicationArgs 0                                                                         tmp%6#0
        v-store tmp%6#0
        method set_boxes(uint64,byte[],string)void                                                     Method(set_boxes(uint64,byte[],string)void)
        method check_keys()void                                                                        Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void)
        method create_many_ints()void                                                                  Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void)
        method set_many_ints(uint64,uint64)void                                                        Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void)
        method sum_many_ints()uint64                                                                   Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64)
        method delete_boxes()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void)
        method indirect_extract_and_replace()void                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void)
        method read_boxes()(uint64,byte[],string,uint64)                                               Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64))
        method boxes_exist()(bool,bool,bool,bool)                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool))
        method create_dynamic_arr_struct()void                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void)
        method delete_dynamic_arr_struct()void                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void)
        method append_dynamic_arr_struct(uint64)uint64                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64)
        method pop_dynamic_arr_struct(uint64)uint64                                                    Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64)
        method set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)
        method nested_write(uint64,uint64)void                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void)
        method nested_read(uint64,uint64,uint64)uint64                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64)
        method sum_dynamic_arr_struct()uint64                                                          Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64)
        method create_bools()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void)
        method set_bool(uint64,bool)void                                                               Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void)
        method sum_bools(uint64)uint64                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64)
        method create_dynamic_box()void                                                                Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void)
        method delete_dynamic_box()void                                                                Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void)
        method append_dynamic_box(uint64)uint64                                                        Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64)
        method pop_dynamic_box(uint64)uint64                                                           Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64)
        method sum_dynamic_box()uint64                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64)
        method write_dynamic_box(uint64,uint64)void                                                    Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void)
        method write_dynamic_arr_struct(uint64,uint64)void                                             Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void)
        method slice_box()void                                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void)
        method arc4_box()void                                                                          Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void)
        method test_box_ref()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void)
        method box_map_test()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void)
        method box_map_set(uint64,string)void                                                          Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void)
        method box_map_get(uint64)string                                                               Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string)
        method box_map_del(uint64)void                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void)
        method box_map_exists(uint64)bool                                                              Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void),Method(box_map_exists(uint64)bool)
        v-load tmp%6#0                                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void),Method(nested_write(uint64,uint64)void),Method(nested_read(uint64,uint64,uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_bools()void),Method(set_bool(uint64,bool)void),Method(sum_bools(uint64)uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(write_dynamic_box(uint64,uint64)void),Method(write_dynamic_arr_struct(uint64,uint64)void),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void),Method(box_map_exists(uint64)bool),tmp%6#0
        match main_set_boxes_route@6 main_check_keys_route@7 main_create_many_ints_route@8 main_set_many_ints_route@9 main_sum_many_ints_route@10 main_delete_boxes_route@11 main_indirect_extract_and_replace_route@12 main_read_boxes_route@13 main_boxes_exist_route@14 main_create_dynamic_arr_struct_route@15 main_delete_dynamic_arr_struct_route@16 main_append_dynamic_arr_struct_route@17 main_pop_dynamic_arr_struct_route@18 main_set_nested_struct_route@19 main_nested_write_route@20 main_nested_read_route@21 main_sum_dynamic_arr_struct_route@22 main_create_bools_route@23 main_set_bool_route@24 main_sum_bools_route@25 main_create_dynamic_box_route@26 main_delete_dynamic_box_route@27 main_append_dynamic_box_route@28 main_pop_dynamic_box_route@29 main_sum_dynamic_box_route@30 main_write_dynamic_box_route@31 main_write_dynamic_arr_struct_route@32 main_slice_box_route@33 main_arc4_box_route@34 main_test_box_ref_route@35 main_box_map_test_route@36 main_box_map_set_route@37 main_box_map_get_route@38 main_box_map_del_route@39 main_box_map_exists_route@40 ; b main_after_if_else@41 

    main_set_boxes_route@6:
        // box_storage/contract.py:95
        // @arc4.abimethod
        callsub set_boxes
        b main_after_if_else@41

    main_check_keys_route@7:
        // box_storage/contract.py:131
        // @arc4.abimethod
        int 1                                                                                          1
        return

    main_create_many_ints_route@8:
        // box_storage/contract.py:140
        // self.many_ints.create()
        byte "many_ints"                                                                               "many_ints"
        int 4104                                                                                       "many_ints",4104
        box_create                                                                                     {box_create}
        pop 1
        // box_storage/contract.py:138
        // @arc4.abimethod()
        int 1                                                                                          1
        return

    main_set_many_ints_route@9:
        // box_storage/contract.py:142
        // @arc4.abimethod()
        callsub set_many_ints
        b main_after_if_else@41

    main_sum_many_ints_route@10:
        // box_storage/contract.py:146
        // @arc4.abimethod()
        callsub sum_many_ints
        b main_after_if_else@41

    main_delete_boxes_route@11:
        // box_storage/contract.py:154
        // @arc4.abimethod
        callsub delete_boxes
        b main_after_if_else@41

    main_indirect_extract_and_replace_route@12:
        // box_storage/contract.py:167
        // @arc4.abimethod()
        callsub indirect_extract_and_replace
        b main_after_if_else@41

    main_read_boxes_route@13:
        // box_storage/contract.py:173
        // @arc4.abimethod
        callsub read_boxes
        b main_after_if_else@41

    main_boxes_exist_route@14:
        // box_storage/contract.py:182
        // @arc4.abimethod
        callsub boxes_exist
        b main_after_if_else@41

    main_create_dynamic_arr_struct_route@15:
        // box_storage/contract.py:186
        // @arc4.abimethod
        callsub create_dynamic_arr_struct
        b main_after_if_else@41

    main_delete_dynamic_arr_struct_route@16:
        // box_storage/contract.py:197
        // del self.dynamic_arr_struct.value
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:195
        // @arc4.abimethod
        int 1                                                                                          1
        return

    main_append_dynamic_arr_struct_route@17:
        // box_storage/contract.py:199
        // @arc4.abimethod
        callsub append_dynamic_arr_struct
        b main_after_if_else@41

    main_pop_dynamic_arr_struct_route@18:
        // box_storage/contract.py:231
        // @arc4.abimethod
        callsub pop_dynamic_arr_struct
        b main_after_if_else@41

    main_set_nested_struct_route@19:
        // box_storage/contract.py:253
        // @arc4.abimethod()
        callsub set_nested_struct
        b main_after_if_else@41

    main_nested_write_route@20:
        // box_storage/contract.py:267
        // @arc4.abimethod()
        callsub nested_write
        b main_after_if_else@41

    main_nested_read_route@21:
        // box_storage/contract.py:277
        // @arc4.abimethod()
        callsub nested_read
        b main_after_if_else@41

    main_sum_dynamic_arr_struct_route@22:
        // box_storage/contract.py:289
        // @arc4.abimethod
        callsub sum_dynamic_arr_struct
        b main_after_if_else@41

    main_create_bools_route@23:
        // box_storage/contract.py:302
        // self.too_many_bools.create()
        byte "too_many_bools"                                                                          "too_many_bools"
        int 4125                                                                                       "too_many_bools",4125
        box_create                                                                                     {box_create}
        pop 1
        // box_storage/contract.py:300
        // @arc4.abimethod
        int 1                                                                                          1
        return

    main_set_bool_route@24:
        // box_storage/contract.py:304
        // @arc4.abimethod
        callsub set_bool
        b main_after_if_else@41

    main_sum_bools_route@25:
        // box_storage/contract.py:308
        // @arc4.abimethod()
        callsub sum_bools
        b main_after_if_else@41

    main_create_dynamic_box_route@26:
        // box_storage/contract.py:318
        // @arc4.abimethod
        callsub create_dynamic_box
        b main_after_if_else@41

    main_delete_dynamic_box_route@27:
        // box_storage/contract.py:324
        // del self.dynamic_box.value
        byte "dynamic_box"                                                                             "dynamic_box"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:322
        // @arc4.abimethod
        int 1                                                                                          1
        return

    main_append_dynamic_box_route@28:
        // box_storage/contract.py:326
        // @arc4.abimethod
        callsub append_dynamic_box
        b main_after_if_else@41

    main_pop_dynamic_box_route@29:
        // box_storage/contract.py:341
        // @arc4.abimethod
        callsub pop_dynamic_box
        b main_after_if_else@41

    main_sum_dynamic_box_route@30:
        // box_storage/contract.py:352
        // @arc4.abimethod
        callsub sum_dynamic_box
        b main_after_if_else@41

    main_write_dynamic_box_route@31:
        // box_storage/contract.py:359
        // @arc4.abimethod
        callsub write_dynamic_box
        b main_after_if_else@41

    main_write_dynamic_arr_struct_route@32:
        // box_storage/contract.py:363
        // @arc4.abimethod
        callsub write_dynamic_arr_struct
        b main_after_if_else@41

    main_slice_box_route@33:
        // box_storage/contract.py:367
        // @arc4.abimethod
        callsub slice_box
        b main_after_if_else@41

    main_arc4_box_route@34:
        // box_storage/contract.py:378
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                      0x64
        // box_storage/contract.py:379
        // box_d.value = StaticInts(arc4.UInt8(0), arc4.UInt8(1), arc4.UInt8(2), arc4.UInt8(3))
        byte 0x00010203                                                                                0x64,0x00010203
        box_put
        // box_storage/contract.py:376
        // @arc4.abimethod
        int 1                                                                                          1
        return

    main_test_box_ref_route@35:
        // box_storage/contract.py:386
        // @arc4.abimethod
        callsub test_box_ref
        b main_after_if_else@41

    main_box_map_test_route@36:
        // box_storage/contract.py:434
        // @arc4.abimethod
        callsub box_map_test
        b main_after_if_else@41

    main_box_map_set_route@37:
        // box_storage/contract.py:458
        // @arc4.abimethod
        callsub box_map_set
        b main_after_if_else@41

    main_box_map_get_route@38:
        // box_storage/contract.py:462
        // @arc4.abimethod
        callsub box_map_get
        b main_after_if_else@41

    main_box_map_del_route@39:
        // box_storage/contract.py:466
        // @arc4.abimethod
        callsub box_map_del
        b main_after_if_else@41

    main_box_map_exists_route@40:
        // box_storage/contract.py:470
        // @arc4.abimethod
        callsub box_map_exists
        b main_after_if_else@41

    main_after_if_else@41:
        // box_storage/contract.py:80
        // class BoxContract(arc4.ARC4Contract):
        err

    main___algopy_default_create@42:
        txn OnCompletion                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        !                                                                                              tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                                              tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        !                                                                                              tmp%10#0
        v-store tmp%10#0
        v-load tmp%8#0                                                                                 tmp%8#0
        v-load tmp%10#0                                                                                tmp%8#0,tmp%10#0
        &&                                                                                             tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                                tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.set_boxes[routing]() -> void:
subroutine set_boxes:
    set_boxes_block@0:
        // box_storage/contract.py:95
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           a#0
        v-store a#0
        txna ApplicationArgs 2                                                                         b#0
        v-store b#0
        txna ApplicationArgs 3                                                                         c#0
        v-store c#0
        // box_storage/contract.py:97
        // self.box_a.value = a
        v-load a#0                                                                                     a#0
        itob                                                                                           encoded_value%0#0
        v-store encoded_value%0#0
        byte "box_a"                                                                                   "box_a"
        v-load encoded_value%0#0                                                                       "box_a",encoded_value%0#0
        box_put
        // box_storage/contract.py:98
        // self.box_b.value = b.copy()
        byte "b"                                                                                       "b"
        box_del                                                                                        {box_del}
        pop 1
        byte "b"                                                                                       "b"
        v-load b#0                                                                                     "b",b#0
        box_put
        // box_storage/contract.py:99
        // self.box_c.value = c
        byte 0x424f585f43                                                                              0x424f585f43
        box_del                                                                                        {box_del}
        pop 1
        byte 0x424f585f43                                                                              0x424f585f43
        v-load c#0                                                                                     0x424f585f43,c#0
        box_put
        // box_storage/contract.py:100
        // self.box_d.value = b.native
        v-load b#0                                                                                     b#0
        extract 2 0                                                                                    tmp%0#1
        v-store tmp%0#1
        byte "box_d"                                                                                   "box_d"
        box_del                                                                                        {box_del}
        pop 1
        byte "box_d"                                                                                   "box_d"
        v-load tmp%0#1                                                                                 "box_d",tmp%0#1
        box_put
        // box_storage/contract.py:101
        // self.box_large.create()
        byte "box_large"                                                                               "box_large"
        int 6160                                                                                       "box_large",6160
        box_create                                                                                     {box_create}
        pop 1
        // box_storage/contract.py:102
        // self.box_large.value.e = UInt64(42)
        int 42                                                                                         42
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte "box_large"                                                                               "box_large"
        int 4096                                                                                       "box_large",4096
        v-load aggregate%val_as_bytes%0#0                                                              "box_large",4096,aggregate%val_as_bytes%0#0
        box_replace
        // box_storage/contract.py:103
        // self.box_large.ref.replace(size_of(Bytes1024) * 4, arc4.UInt64(42).bytes)
        byte "box_large"                                                                               "box_large"
        int 4096                                                                                       "box_large",4096
        byte 0x000000000000002a                                                                        "box_large",4096,0x000000000000002a
        box_replace
        // box_storage/contract.py:108
        // self.box_a.value += 3
        byte "box_a"                                                                                   "box_a"
        box_get                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check self.box_a exists
        v-load aggregate%box_get%0#0                                                                   aggregate%box_get%0#0
        btoi                                                                                           maybe_value_converted%0#0
        v-store maybe_value_converted%0#0
        v-load maybe_value_converted%0#0                                                               maybe_value_converted%0#0
        int 3                                                                                          maybe_value_converted%0#0,3
        +                                                                                              tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        itob                                                                                           encoded_value%2#0
        v-store encoded_value%2#0
        byte "box_a"                                                                                   "box_a"
        v-load encoded_value%2#0                                                                       "box_a",encoded_value%2#0
        box_put
        // box_storage/contract.py:111
        // assert self.box_a.length == 8
        byte "box_a"                                                                                   "box_a"
        box_len                                                                                        value%0#0,check%0#0
        v-store check%0#0                                                                              value%0#0
        v-store value%0#0
        v-load value%0#0                                                                               value%0#0
        int 8                                                                                          value%0#0,8
        ==                                                                                             tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        assert
        // box_storage/contract.py:112
        // assert self.box_b.length == b.bytes.length
        byte "b"                                                                                       "b"
        box_len                                                                                        value%1#0,check%1#0
        v-store check%1#0                                                                              value%1#0
        v-store value%1#0
        v-load b#0                                                                                     b#0
        len                                                                                            tmp%7#0
        v-store tmp%7#0
        v-load value%1#0                                                                               value%1#0
        v-load tmp%7#0                                                                                 value%1#0,tmp%7#0
        ==                                                                                             tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert
        // box_storage/contract.py:113
        // assert self.box_c.length == c.bytes.length
        byte 0x424f585f43                                                                              0x424f585f43
        box_len                                                                                        value%2#0,check%2#0
        v-store check%2#0                                                                              value%2#0
        v-store value%2#0
        v-load check%2#0                                                                               check%2#0
        assert // check self.box_c exists
        v-load c#0                                                                                     c#0
        len                                                                                            tmp%9#0
        v-store tmp%9#0
        v-load value%2#0                                                                               value%2#0
        v-load tmp%9#0                                                                                 value%2#0,tmp%9#0
        ==                                                                                             tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        assert
        // box_storage/contract.py:114
        // assert self.box_d.length == b.native.length
        byte "box_d"                                                                                   "box_d"
        box_len                                                                                        value%3#0,check%3#0
        v-store check%3#0                                                                              value%3#0
        v-store value%3#0
        v-load tmp%0#1                                                                                 tmp%0#1
        len                                                                                            tmp%12#0
        v-store tmp%12#0
        v-load value%3#0                                                                               value%3#0
        v-load tmp%12#0                                                                                value%3#0,tmp%12#0
        ==                                                                                             tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                                tmp%13#0
        assert
        // box_storage/contract.py:117
        // assert self.box_c.value.bytes[0] == c.bytes[0]
        byte 0x424f585f43                                                                              0x424f585f43
        int 0                                                                                          0x424f585f43,0
        int 1                                                                                          0x424f585f43,0,1
        box_extract                                                                                    tmp%14#0
        v-store tmp%14#0
        v-load c#0                                                                                     c#0
        extract 0 1                                                                                    extract%0#0
        v-store extract%0#0
        v-load tmp%14#0                                                                                tmp%14#0
        v-load extract%0#0                                                                             tmp%14#0,extract%0#0
        ==                                                                                             tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        assert
        // box_storage/contract.py:118
        // assert self.box_c.value.bytes[-1] == c.bytes[-1]
        v-load value%2#0                                                                               value%2#0
        int 1                                                                                          value%2#0,1
        -                                                                                              tmp%18#0
        v-store tmp%18#0
        byte 0x424f585f43                                                                              0x424f585f43
        v-load tmp%18#0                                                                                0x424f585f43,tmp%18#0
        int 1                                                                                          0x424f585f43,tmp%18#0,1
        box_extract                                                                                    tmp%19#0
        v-store tmp%19#0
        v-load tmp%9#0                                                                                 tmp%9#0
        int 1                                                                                          tmp%9#0,1
        -                                                                                              tmp%21#0
        v-store tmp%21#0
        v-load c#0                                                                                     c#0
        v-load tmp%21#0                                                                                c#0,tmp%21#0
        int 1                                                                                          c#0,tmp%21#0,1
        extract3                                                                                       extract%1#0
        v-store extract%1#0
        v-load tmp%19#0                                                                                tmp%19#0
        v-load extract%1#0                                                                             tmp%19#0,extract%1#0
        ==                                                                                             tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                                                tmp%22#0
        assert
        // box_storage/contract.py:119
        // assert self.box_c.value.bytes[:-1] == c.bytes[:-1]
        int 1                                                                                          1
        v-load value%2#0                                                                               1,value%2#0
        <                                                                                              tmp%25#0
        v-store tmp%25#0
        v-load value%2#0                                                                               value%2#0
        int 1                                                                                          value%2#0,1
        v-load tmp%25#0                                                                                value%2#0,1,tmp%25#0
        select                                                                                         tmp%26#0
        v-store tmp%26#0
        v-load value%2#0                                                                               value%2#0
        v-load tmp%26#0                                                                                value%2#0,tmp%26#0
        -                                                                                              tmp%27#0
        v-store tmp%27#0
        byte 0x424f585f43                                                                              0x424f585f43
        int 0                                                                                          0x424f585f43,0
        v-load tmp%27#0                                                                                0x424f585f43,0,tmp%27#0
        box_extract                                                                                    tmp%29#0
        v-store tmp%29#0
        int 1                                                                                          1
        v-load tmp%9#0                                                                                 1,tmp%9#0
        >=                                                                                             is_out_of_bounds%0#0
        v-store is_out_of_bounds%0#0
        int 1                                                                                          1
        v-load tmp%9#0                                                                                 1,tmp%9#0
        v-load is_out_of_bounds%0#0                                                                    1,tmp%9#0,is_out_of_bounds%0#0
        select                                                                                         bounded_offset%0#0
        v-store bounded_offset%0#0
        v-load tmp%9#0                                                                                 tmp%9#0
        v-load bounded_offset%0#0                                                                      tmp%9#0,bounded_offset%0#0
        -                                                                                              bounded_index%0#0
        v-store bounded_index%0#0
        v-load c#0                                                                                     c#0
        int 0                                                                                          c#0,0
        v-load bounded_index%0#0                                                                       c#0,0,bounded_index%0#0
        substring3                                                                                     tmp%30#0
        v-store tmp%30#0
        v-load tmp%29#0                                                                                tmp%29#0
        v-load tmp%30#0                                                                                tmp%29#0,tmp%30#0
        ==                                                                                             tmp%31#0
        v-store tmp%31#0
        v-load tmp%31#0                                                                                tmp%31#0
        assert
        // box_storage/contract.py:120
        // assert self.box_c.value.bytes[:2] == c.bytes[:2]
        int 2                                                                                          2
        v-load value%2#0                                                                               2,value%2#0
        <                                                                                              tmp%34#0
        v-store tmp%34#0
        v-load value%2#0                                                                               value%2#0
        int 2                                                                                          value%2#0,2
        v-load tmp%34#0                                                                                value%2#0,2,tmp%34#0
        select                                                                                         tmp%35#0
        v-store tmp%35#0
        byte 0x424f585f43                                                                              0x424f585f43
        int 0                                                                                          0x424f585f43,0
        v-load tmp%35#0                                                                                0x424f585f43,0,tmp%35#0
        box_extract                                                                                    tmp%37#0
        v-store tmp%37#0
        int 2                                                                                          2
        v-load tmp%9#0                                                                                 2,tmp%9#0
        >=                                                                                             is_out_of_bounds%1#0
        v-store is_out_of_bounds%1#0
        int 2                                                                                          2
        v-load tmp%9#0                                                                                 2,tmp%9#0
        v-load is_out_of_bounds%1#0                                                                    2,tmp%9#0,is_out_of_bounds%1#0
        select                                                                                         bounded_index%1#0
        v-store bounded_index%1#0
        v-load c#0                                                                                     c#0
        int 0                                                                                          c#0,0
        v-load bounded_index%1#0                                                                       c#0,0,bounded_index%1#0
        substring3                                                                                     tmp%38#0
        v-store tmp%38#0
        v-load tmp%37#0                                                                                tmp%37#0
        v-load tmp%38#0                                                                                tmp%37#0,tmp%38#0
        ==                                                                                             tmp%39#0
        v-store tmp%39#0
        v-load tmp%39#0                                                                                tmp%39#0
        assert
        // box_storage/contract.py:123
        // assert self.box_d.value[0] == b.native[0]
        byte "box_d"                                                                                   "box_d"
        int 0                                                                                          "box_d",0
        int 1                                                                                          "box_d",0,1
        box_extract                                                                                    tmp%40#0
        v-store tmp%40#0
        v-load b#0                                                                                     b#0
        extract 2 1                                                                                    extract%2#0
        v-store extract%2#0
        v-load tmp%40#0                                                                                tmp%40#0
        v-load extract%2#0                                                                             tmp%40#0,extract%2#0
        ==                                                                                             tmp%42#0
        v-store tmp%42#0
        v-load tmp%42#0                                                                                tmp%42#0
        assert
        // box_storage/contract.py:124
        // assert self.box_d.value[-1] == b.native[-1]
        v-load value%3#0                                                                               value%3#0
        int 1                                                                                          value%3#0,1
        -                                                                                              tmp%45#0
        v-store tmp%45#0
        byte "box_d"                                                                                   "box_d"
        v-load tmp%45#0                                                                                "box_d",tmp%45#0
        int 1                                                                                          "box_d",tmp%45#0,1
        box_extract                                                                                    tmp%46#0
        v-store tmp%46#0
        v-load tmp%12#0                                                                                tmp%12#0
        int 1                                                                                          tmp%12#0,1
        -                                                                                              tmp%49#0
        v-store tmp%49#0
        v-load tmp%0#1                                                                                 tmp%0#1
        v-load tmp%49#0                                                                                tmp%0#1,tmp%49#0
        int 1                                                                                          tmp%0#1,tmp%49#0,1
        extract3                                                                                       extract%3#0
        v-store extract%3#0
        v-load tmp%46#0                                                                                tmp%46#0
        v-load extract%3#0                                                                             tmp%46#0,extract%3#0
        ==                                                                                             tmp%50#0
        v-store tmp%50#0
        v-load tmp%50#0                                                                                tmp%50#0
        assert
        // box_storage/contract.py:125
        // assert self.box_d.value[:-1] == b.native[:-1]
        int 1                                                                                          1
        v-load value%3#0                                                                               1,value%3#0
        <                                                                                              tmp%53#0
        v-store tmp%53#0
        v-load value%3#0                                                                               value%3#0
        int 1                                                                                          value%3#0,1
        v-load tmp%53#0                                                                                value%3#0,1,tmp%53#0
        select                                                                                         tmp%54#0
        v-store tmp%54#0
        v-load value%3#0                                                                               value%3#0
        v-load tmp%54#0                                                                                value%3#0,tmp%54#0
        -                                                                                              tmp%55#0
        v-store tmp%55#0
        byte "box_d"                                                                                   "box_d"
        int 0                                                                                          "box_d",0
        v-load tmp%55#0                                                                                "box_d",0,tmp%55#0
        box_extract                                                                                    tmp%57#0
        v-store tmp%57#0
        int 1                                                                                          1
        v-load tmp%12#0                                                                                1,tmp%12#0
        >=                                                                                             is_out_of_bounds%2#0
        v-store is_out_of_bounds%2#0
        int 1                                                                                          1
        v-load tmp%12#0                                                                                1,tmp%12#0
        v-load is_out_of_bounds%2#0                                                                    1,tmp%12#0,is_out_of_bounds%2#0
        select                                                                                         bounded_offset%1#0
        v-store bounded_offset%1#0
        v-load tmp%12#0                                                                                tmp%12#0
        v-load bounded_offset%1#0                                                                      tmp%12#0,bounded_offset%1#0
        -                                                                                              bounded_index%2#0
        v-store bounded_index%2#0
        v-load tmp%0#1                                                                                 tmp%0#1
        int 0                                                                                          tmp%0#1,0
        v-load bounded_index%2#0                                                                       tmp%0#1,0,bounded_index%2#0
        substring3                                                                                     tmp%59#0
        v-store tmp%59#0
        v-load tmp%57#0                                                                                tmp%57#0
        v-load tmp%59#0                                                                                tmp%57#0,tmp%59#0
        ==                                                                                             tmp%60#0
        v-store tmp%60#0
        v-load tmp%60#0                                                                                tmp%60#0
        assert
        // box_storage/contract.py:126
        // assert self.box_d.value[:5] == b.native[:5]
        int 5                                                                                          5
        v-load value%3#0                                                                               5,value%3#0
        <                                                                                              tmp%63#0
        v-store tmp%63#0
        v-load value%3#0                                                                               value%3#0
        int 5                                                                                          value%3#0,5
        v-load tmp%63#0                                                                                value%3#0,5,tmp%63#0
        select                                                                                         tmp%64#0
        v-store tmp%64#0
        byte "box_d"                                                                                   "box_d"
        int 0                                                                                          "box_d",0
        v-load tmp%64#0                                                                                "box_d",0,tmp%64#0
        box_extract                                                                                    tmp%66#0
        v-store tmp%66#0
        int 5                                                                                          5
        v-load tmp%12#0                                                                                5,tmp%12#0
        >=                                                                                             is_out_of_bounds%3#0
        v-store is_out_of_bounds%3#0
        int 5                                                                                          5
        v-load tmp%12#0                                                                                5,tmp%12#0
        v-load is_out_of_bounds%3#0                                                                    5,tmp%12#0,is_out_of_bounds%3#0
        select                                                                                         bounded_index%3#0
        v-store bounded_index%3#0
        v-load tmp%0#1                                                                                 tmp%0#1
        int 0                                                                                          tmp%0#1,0
        v-load bounded_index%3#0                                                                       tmp%0#1,0,bounded_index%3#0
        substring3                                                                                     tmp%68#0
        v-store tmp%68#0
        v-load tmp%66#0                                                                                tmp%66#0
        v-load tmp%68#0                                                                                tmp%66#0,tmp%68#0
        ==                                                                                             tmp%69#0
        v-store tmp%69#0
        v-load tmp%69#0                                                                                tmp%69#0
        assert
        // box_storage/contract.py:127
        // assert self.box_d.value[: UInt64(2)] == b.native[: UInt64(2)]
        int 2                                                                                          2
        v-load value%3#0                                                                               2,value%3#0
        <                                                                                              tmp%72#0
        v-store tmp%72#0
        v-load value%3#0                                                                               value%3#0
        int 2                                                                                          value%3#0,2
        v-load tmp%72#0                                                                                value%3#0,2,tmp%72#0
        select                                                                                         tmp%73#0
        v-store tmp%73#0
        byte "box_d"                                                                                   "box_d"
        int 0                                                                                          "box_d",0
        v-load tmp%73#0                                                                                "box_d",0,tmp%73#0
        box_extract                                                                                    tmp%75#0
        v-store tmp%75#0
        int 2                                                                                          2
        v-load tmp%12#0                                                                                2,tmp%12#0
        >=                                                                                             is_out_of_bounds%4#0
        v-store is_out_of_bounds%4#0
        int 2                                                                                          2
        v-load tmp%12#0                                                                                2,tmp%12#0
        v-load is_out_of_bounds%4#0                                                                    2,tmp%12#0,is_out_of_bounds%4#0
        select                                                                                         bounded_index%4#0
        v-store bounded_index%4#0
        v-load tmp%0#1                                                                                 tmp%0#1
        int 0                                                                                          tmp%0#1,0
        v-load bounded_index%4#0                                                                       tmp%0#1,0,bounded_index%4#0
        substring3                                                                                     tmp%77#0
        v-store tmp%77#0
        v-load tmp%75#0                                                                                tmp%75#0
        v-load tmp%77#0                                                                                tmp%75#0,tmp%77#0
        ==                                                                                             tmp%78#0
        v-store tmp%78#0
        v-load tmp%78#0                                                                                tmp%78#0
        assert
        // box_storage/contract.py:129
        // assert self.box_large.length == size_of(LargeStruct)
        byte "box_large"                                                                               "box_large"
        box_len                                                                                        value%4#0,check%4#0
        v-store check%4#0                                                                              value%4#0
        v-store value%4#0
        v-load value%4#0                                                                               value%4#0
        int 6160                                                                                       value%4#0,6160
        ==                                                                                             tmp%79#0
        v-store tmp%79#0
        v-load tmp%79#0                                                                                tmp%79#0
        assert
        // box_storage/contract.py:95
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.set_many_ints[routing]() -> void:
subroutine set_many_ints:
    set_many_ints_block@0:
        // box_storage/contract.py:142
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           index#0
        v-store index#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        // box_storage/contract.py:144
        // self.many_ints.value[index] = value
        v-load index#0                                                                                 index#0
        int 8                                                                                          index#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        byte "many_ints"                                                                               "many_ints"
        v-load box%element_offset%0#0                                                                  "many_ints",box%element_offset%0#0
        v-load reinterpret_Encoded(uint64)%1#0                                                         "many_ints",box%element_offset%0#0,reinterpret_Encoded(uint64)%1#0
        box_replace
        // box_storage/contract.py:142
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.sum_many_ints[routing]() -> void:
subroutine sum_many_ints:
    sum_many_ints_while_top@7:
        global OpcodeBudget                                                                            tmp%1#1
        v-store tmp%1#1
        int 10510                                                                                      10510
        v-load tmp%1#1                                                                                 10510,tmp%1#1
        >                                                                                              tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                                 tmp%2#1
        bz sum_many_ints_after_while@12 ; b sum_many_ints_while_body@8

    sum_many_ints_while_body@8:
        itxn_begin
        int appl                                                                                       appl
        itxn_field TypeEnum
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        byte 0x068101                                                                                  0x068101
        itxn_field ApprovalProgram
        byte 0x068101                                                                                  0x068101
        itxn_field ClearStateProgram
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        b sum_many_ints_while_top@7

    sum_many_ints_after_while@12:
        // box_storage/contract.py:149
        // total = UInt64(0)
        int 0                                                                                          0
        v-store total#0
        // box_storage/contract.py:150
        // for val in self.many_ints.value:
        byte "many_ints"                                                                               "many_ints"
        box_len                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check self.many_ints exists
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_many_ints_for_header@2

    sum_many_ints_for_header@2:
        // box_storage/contract.py:150
        // for val in self.many_ints.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 513                                                                                        item_index_internal%0#0,513
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_many_ints_after_for@5 ; b sum_many_ints_for_body@3

    sum_many_ints_for_body@3:
        // box_storage/contract.py:150
        // for val in self.many_ints.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        byte "many_ints"                                                                               "many_ints"
        v-load box%element_offset%0#0                                                                  "many_ints",box%element_offset%0#0
        int 8                                                                                          "many_ints",box%element_offset%0#0,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:151
        // total = total + val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_many_ints_for_header@2

    sum_many_ints_after_for@5:
        // box_storage/contract.py:146
        // @arc4.abimethod()
        v-load total#0                                                                                 total#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                              0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.delete_boxes[routing]() -> void:
subroutine delete_boxes:
    delete_boxes_block@0:
        // box_storage/contract.py:156
        // del self.box_a.value
        byte "box_a"                                                                                   "box_a"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:157
        // del self.box_b.value
        byte "b"                                                                                       "b"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:158
        // del self.box_c.value
        byte 0x424f585f43                                                                              0x424f585f43
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:159
        // assert self.box_a.get(default=UInt64(42)) == 42
        byte "box_a"                                                                                   "box_a"
        box_get                                                                                        maybe_value%0#0,a_exists#0
        v-store a_exists#0                                                                             maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_value%0#0                                                                         maybe_value%0#0
        btoi                                                                                           a#0
        v-store a#0
        int 42                                                                                         42
        v-load a#0                                                                                     42,a#0
        v-load a_exists#0                                                                              42,a#0,a_exists#0
        select                                                                                         state_get%0#0
        v-store state_get%0#0
        v-load state_get%0#0                                                                           state_get%0#0
        int 42                                                                                         state_get%0#0,42
        ==                                                                                             tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        assert
        // box_storage/contract.py:160
        // assert self.box_b.get(default=arc4.DynamicBytes(b"42")).native == b"42"
        byte "b"                                                                                       "b"
        box_get                                                                                        maybe_value%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                       maybe_value%1#0
        v-store maybe_value%1#0
        byte 0x00023432                                                                                0x00023432
        v-load maybe_value%1#0                                                                         0x00023432,maybe_value%1#0
        v-load maybe_exists%1#0                                                                        0x00023432,maybe_value%1#0,maybe_exists%1#0
        select                                                                                         state_get%1#0
        v-store state_get%1#0
        v-load state_get%1#0                                                                           state_get%1#0
        extract 2 0                                                                                    tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        byte 0x3432                                                                                    tmp%2#0,0x3432
        ==                                                                                             tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        assert
        // box_storage/contract.py:161
        // assert self.box_c.get(default=arc4.String("42")) == "42"
        byte 0x424f585f43                                                                              0x424f585f43
        box_get                                                                                        maybe_value%2#0,maybe_exists%2#0
        v-store maybe_exists%2#0                                                                       maybe_value%2#0
        v-store maybe_value%2#0
        byte 0x00023432                                                                                0x00023432
        v-load maybe_value%2#0                                                                         0x00023432,maybe_value%2#0
        v-load maybe_exists%2#0                                                                        0x00023432,maybe_value%2#0,maybe_exists%2#0
        select                                                                                         state_get%2#0
        v-store state_get%2#0
        v-load state_get%2#0                                                                           state_get%2#0
        byte 0x00023432                                                                                state_get%2#0,0x00023432
        ==                                                                                             tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        assert
        // box_storage/contract.py:163
        // assert not a_exists
        v-load a_exists#0                                                                              a_exists#0
        !                                                                                              tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        assert
        // box_storage/contract.py:164
        // assert a == 0
        v-load a#0                                                                                     a#0
        !                                                                                              tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert
        // box_storage/contract.py:165
        // del self.box_large.value
        byte "box_large"                                                                               "box_large"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:154
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]() -> void:
subroutine indirect_extract_and_replace:
    indirect_extract_and_replace_block@0:
        // box_storage/contract.py:169
        // large = self.box_large.value.copy()
        byte "box_large"                                                                               "box_large"
        // box_storage/contract.py:169-170
        // large = self.box_large.value.copy()
        // large.e += 1
        int 4096                                                                                       "box_large",4096
        int 8                                                                                          "box_large",4096,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        // box_storage/contract.py:170
        // large.e += 1
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        v-load values%0#0                                                                              values%0#0
        int 1                                                                                          values%0#0,1
        +                                                                                              tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        // box_storage/contract.py:171
        // self.box_large.value = large.copy()
        byte "box_large"                                                                               "box_large"
        // box_storage/contract.py:169-171
        // large = self.box_large.value.copy()
        // large.e += 1
        // self.box_large.value = large.copy()
        int 4096                                                                                       "box_large",4096
        v-load aggregate%val_as_bytes%0#0                                                              "box_large",4096,aggregate%val_as_bytes%0#0
        box_replace
        // box_storage/contract.py:167
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.read_boxes[routing]() -> void:
subroutine read_boxes:
    read_boxes_block@0:
        // box_storage/contract.py:176
        // get_box_value_plus_1(self.box_a) - 1,
        byte "box_a"                                                                                   "box_a"
        // box_storage/contract.py:477
        // return box.value + 1
        box_get                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check Box exists
        v-load aggregate%box_get%0#0                                                                   aggregate%box_get%0#0
        btoi                                                                                           maybe_value_converted%0#0
        v-store maybe_value_converted%0#0
        v-load maybe_value_converted%0#0                                                               maybe_value_converted%0#0
        int 1                                                                                          maybe_value_converted%0#0,1
        +                                                                                              tmp%0#2
        v-store tmp%0#2
        // box_storage/contract.py:176
        // get_box_value_plus_1(self.box_a) - 1,
        v-load tmp%0#2                                                                                 tmp%0#2
        int 1                                                                                          tmp%0#2,1
        -                                                                                              tmp%1#1
        v-store tmp%1#1
        // box_storage/contract.py:177
        // self.box_b.value.native,
        byte "b"                                                                                       "b"
        box_get                                                                                        aggregate%box_get%2#0,aggregate%box_get%3#0
        v-store aggregate%box_get%3#0                                                                  aggregate%box_get%2#0
        v-store aggregate%box_get%2#0
        v-load aggregate%box_get%3#0                                                                   aggregate%box_get%3#0
        assert // check self.box_b exists
        v-load aggregate%box_get%2#0                                                                   aggregate%box_get%2#0
        extract 2 0                                                                                    tmp%2#1
        v-store tmp%2#1
        // box_storage/contract.py:178
        // self.box_c.value,
        byte 0x424f585f43                                                                              0x424f585f43
        box_get                                                                                        aggregate%box_get%4#0,aggregate%box_get%5#0
        v-store aggregate%box_get%5#0                                                                  aggregate%box_get%4#0
        v-store aggregate%box_get%4#0
        v-load aggregate%box_get%5#0                                                                   aggregate%box_get%5#0
        assert // check self.box_c exists
        // box_storage/contract.py:179
        // self.box_large.value.e,
        byte "box_large"                                                                               "box_large"
        int 4096                                                                                       "box_large",4096
        int 8                                                                                          "box_large",4096,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        // box_storage/contract.py:173
        // @arc4.abimethod
        v-load tmp%1#1                                                                                 tmp%1#1
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load tmp%2#1                                                                                 tmp%2#1
        len                                                                                            aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                                                                    aggregate%length%0#0
        itob                                                                                           aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                                                                  aggregate%as_bytes%0#0
        extract 6 2                                                                                    aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                                                             aggregate%length_uint16%0#0
        v-load tmp%2#1                                                                                 aggregate%length_uint16%0#0,tmp%2#1
        concat                                                                                         aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        byte 0x0014                                                                                    aggregate%val_as_bytes%0#0,0x0014
        concat                                                                                         aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load aggregate%encoded_value%0#0                                                             aggregate%encoded_value%0#0
        len                                                                                            aggregate%data_length%0#0
        v-store aggregate%data_length%0#0
        int 20                                                                                         20
        v-load aggregate%data_length%0#0                                                               20,aggregate%data_length%0#0
        +                                                                                              aggregate%current_tail_offset%0#0
        v-store aggregate%current_tail_offset%0#0
        v-load aggregate%current_tail_offset%0#0                                                       aggregate%current_tail_offset%0#0
        itob                                                                                           aggregate%as_bytes%2#0
        v-store aggregate%as_bytes%2#0
        v-load aggregate%as_bytes%2#0                                                                  aggregate%as_bytes%2#0
        extract 6 2                                                                                    aggregate%offset_as_uint16%1#0
        v-store aggregate%offset_as_uint16%1#0
        v-load aggregate%head%1#0                                                                      aggregate%head%1#0
        v-load aggregate%offset_as_uint16%1#0                                                          aggregate%head%1#0,aggregate%offset_as_uint16%1#0
        concat                                                                                         aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load values%0#0                                                                              values%0#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%head%2#0                                                                      aggregate%head%2#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%head%2#0,aggregate%val_as_bytes%1#0
        concat                                                                                         aggregate%head%3#0
        v-store aggregate%head%3#0
        v-load aggregate%head%3#0                                                                      aggregate%head%3#0
        v-load aggregate%encoded_value%0#0                                                             aggregate%head%3#0,aggregate%encoded_value%0#0
        concat                                                                                         aggregate%concat%0#0
        v-store aggregate%concat%0#0
        v-load aggregate%concat%0#0                                                                    aggregate%concat%0#0
        v-load aggregate%box_get%4#0                                                                   aggregate%concat%0#0,aggregate%box_get%4#0
        concat                                                                                         aggregate%concat%1#0
        v-store aggregate%concat%1#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%concat%1#0                                                                    0x151f7c75,aggregate%concat%1#0
        concat                                                                                         tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.boxes_exist[routing]() -> void:
subroutine boxes_exist:
    boxes_exist_block@0:
        // box_storage/contract.py:184
        // return bool(self.box_a), bool(self.box_b), bool(self.box_c), bool(self.box_large)
        byte "box_a"                                                                                   "box_a"
        box_len                                                                                        _%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       _%0#0
        v-store _%0#0
        byte "b"                                                                                       "b"
        box_len                                                                                        _%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                       _%1#0
        v-store _%1#0
        byte 0x424f585f43                                                                              0x424f585f43
        box_len                                                                                        _%2#0,maybe_exists%2#0
        v-store maybe_exists%2#0                                                                       _%2#0
        v-store _%2#0
        byte "box_large"                                                                               "box_large"
        box_len                                                                                        _%3#0,maybe_exists%3#0
        v-store maybe_exists%3#0                                                                       _%3#0
        v-store _%3#0
        // box_storage/contract.py:182
        // @arc4.abimethod
        byte 0x00                                                                                      0x00
        int 0                                                                                          0x00,0
        v-load maybe_exists%0#0                                                                        0x00,0,maybe_exists%0#0
        setbit                                                                                         aggregate%encoded_bool%0#0
        v-store aggregate%encoded_bool%0#0
        v-load aggregate%encoded_bool%0#0                                                              aggregate%encoded_bool%0#0
        int 1                                                                                          aggregate%encoded_bool%0#0,1
        v-load maybe_exists%1#0                                                                        aggregate%encoded_bool%0#0,1,maybe_exists%1#0
        setbit                                                                                         aggregate%set_bit%0#0
        v-store aggregate%set_bit%0#0
        v-load aggregate%set_bit%0#0                                                                   aggregate%set_bit%0#0
        int 2                                                                                          aggregate%set_bit%0#0,2
        v-load maybe_exists%2#0                                                                        aggregate%set_bit%0#0,2,maybe_exists%2#0
        setbit                                                                                         aggregate%set_bit%1#0
        v-store aggregate%set_bit%1#0
        v-load aggregate%set_bit%1#0                                                                   aggregate%set_bit%1#0
        int 3                                                                                          aggregate%set_bit%1#0,3
        v-load maybe_exists%3#0                                                                        aggregate%set_bit%1#0,3,maybe_exists%3#0
        setbit                                                                                         aggregate%set_bit%2#0
        v-store aggregate%set_bit%2#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%set_bit%2#0                                                                   0x151f7c75,aggregate%set_bit%2#0
        concat                                                                                         tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]() -> void:
subroutine create_dynamic_arr_struct:
    create_dynamic_arr_struct_block@0:
        // box_storage/contract.py:189
        // a=Txn.num_app_args,
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        // box_storage/contract.py:191
        // b=Txn.num_app_args * 2,
        txn NumAppArgs                                                                                 tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                 tmp%1#0
        int 2                                                                                          tmp%1#0,2
        *                                                                                              tmp%2#0
        v-store tmp%2#0
        // box_storage/contract.py:188-193
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        //     a=Txn.num_app_args,
        //     arr=Array[UInt64](),
        //     b=Txn.num_app_args * 2,
        //     arr2=Array[UInt64](),
        // )
        v-load tmp%0#0                                                                                 tmp%0#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        byte 0x0014                                                                                    aggregate%val_as_bytes%0#0,0x0014
        concat                                                                                         aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load tmp%2#0                                                                                 tmp%2#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%head%1#0                                                                      aggregate%head%1#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%head%1#0,aggregate%val_as_bytes%1#0
        concat                                                                                         aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load aggregate%head%2#0                                                                      aggregate%head%2#0
        byte 0x001600000000                                                                            aggregate%head%2#0,0x001600000000
        concat                                                                                         aggregate%concat%1#0
        v-store aggregate%concat%1#0
        // box_storage/contract.py:188
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:188-193
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        //     a=Txn.num_app_args,
        //     arr=Array[UInt64](),
        //     b=Txn.num_app_args * 2,
        //     arr2=Array[UInt64](),
        // )
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:188
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:188-193
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        //     a=Txn.num_app_args,
        //     arr=Array[UInt64](),
        //     b=Txn.num_app_args * 2,
        //     arr2=Array[UInt64](),
        // )
        v-load aggregate%concat%1#0                                                                    "dynamic_arr_struct",aggregate%concat%1#0
        box_put
        // box_storage/contract.py:186
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]() -> void:
subroutine append_dynamic_arr_struct:
    append_dynamic_arr_struct_block@0:
        // box_storage/contract.py:199
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           times#0
        v-store times#0
        // box_storage/contract.py:203
        // assert self.dynamic_arr_struct.value.b == 2, "expected 2"
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 10                                                                                         "dynamic_arr_struct",10
        int 8                                                                                          "dynamic_arr_struct",10,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        v-load values%0#0                                                                              values%0#0
        int 2                                                                                          values%0#0,2
        ==                                                                                             tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                                 tmp%0#1
        assert // expected 2
        // box_storage/contract.py:204
        // arr_len = self.dynamic_arr_struct.value.arr.length
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           arr_len#0
        v-store arr_len#0
        // box_storage/contract.py:205
        // arr2_len = self.dynamic_arr_struct.value.arr2.length
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load box%box_extract%2#0                                                                     box%box_extract%2#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%btoi%0#0                                                                            "dynamic_arr_struct",box%btoi%0#0
        int 2                                                                                          "dynamic_arr_struct",box%btoi%0#0,2
        box_extract                                                                                    box%box_extract%3#0
        v-store box%box_extract%3#0
        v-load box%box_extract%3#0                                                                     box%box_extract%3#0
        btoi                                                                                           arr2_len#0
        v-store arr2_len#0
        // box_storage/contract.py:209
        // get_dynamic_arr2_struct_byte_index(arr_len + times, arr2_len)
        v-load arr_len#0                                                                               arr_len#0
        v-load times#0                                                                                 arr_len#0,times#0
        +                                                                                              arr_size#1
        v-store arr_size#1
        // box_storage/contract.py:493
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_size#1                                                                              arr_size#1
        int 8                                                                                          arr_size#1,8
        *                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:494
        // return head + dyn_arr_index
        v-load tmp%3#2                                                                                 tmp%3#2
        // box_storage/contract.py:493-494
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        // return head + dyn_arr_index
        int 22                                                                                         tmp%3#2,22
        +                                                                                              head_and_dyn_arr#1
        // box_storage/contract.py:494
        // return head + dyn_arr_index
        v-store head_and_dyn_arr#1
        // box_storage/contract.py:500
        // dyn_arr2_index = size_of(arc4.UInt16) + arr2_index * size_of(UInt64)
        v-load arr2_len#0                                                                              arr2_len#0
        int 8                                                                                          arr2_len#0,8
        *                                                                                              tmp%1#1
        v-store tmp%1#1
        int 2                                                                                          2
        v-load tmp%1#1                                                                                 2,tmp%1#1
        +                                                                                              dyn_arr2_index#1
        v-store dyn_arr2_index#1
        // box_storage/contract.py:501
        // return head_and_dyn_arr + dyn_arr2_index
        v-load head_and_dyn_arr#1                                                                      head_and_dyn_arr#1
        v-load dyn_arr2_index#1                                                                        head_and_dyn_arr#1,dyn_arr2_index#1
        +                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:208
        // self.dynamic_arr_struct.ref.resize(
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:208-210
        // self.dynamic_arr_struct.ref.resize(
        //     get_dynamic_arr2_struct_byte_index(arr_len + times, arr2_len)
        // )
        v-load tmp%3#2                                                                                 "dynamic_arr_struct",tmp%3#2
        box_resize
        // box_storage/contract.py:493
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_len#0                                                                               arr_len#0
        int 8                                                                                          arr_len#0,8
        *                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:494
        // return head + dyn_arr_index
        v-load tmp%3#2                                                                                 tmp%3#2
        // box_storage/contract.py:493-494
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        // return head + dyn_arr_index
        int 22                                                                                         tmp%3#2,22
        +                                                                                              tmp%5#1
        // box_storage/contract.py:494
        // return head + dyn_arr_index
        v-store tmp%5#1
        // box_storage/contract.py:213
        // get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        v-load times#0                                                                                 times#0
        int 8                                                                                          times#0,8
        *                                                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        bzero                                                                                          tmp%7#0
        v-store tmp%7#0
        // box_storage/contract.py:212
        // self.dynamic_arr_struct.ref.splice(
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:212-214
        // self.dynamic_arr_struct.ref.splice(
        //     get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        // )
        v-load tmp%5#1                                                                                 "dynamic_arr_struct",tmp%5#1
        // box_storage/contract.py:213
        // get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        int 0                                                                                          "dynamic_arr_struct",tmp%5#1,0
        // box_storage/contract.py:212-214
        // self.dynamic_arr_struct.ref.splice(
        //     get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        // )
        v-load tmp%7#0                                                                                 "dynamic_arr_struct",tmp%5#1,0,tmp%7#0
        box_splice
        // box_storage/contract.py:217
        // for i in urange(times):
        int 0                                                                                          0
        v-store i#0
        b append_dynamic_arr_struct_for_header@2

    append_dynamic_arr_struct_for_header@2:
        // box_storage/contract.py:217
        // for i in urange(times):
        v-load i#0                                                                                     i#0
        v-load times#0                                                                                 i#0,times#0
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz append_dynamic_arr_struct_after_for@5 ; b append_dynamic_arr_struct_for_body@3 

    append_dynamic_arr_struct_for_body@3:
        // box_storage/contract.py:218
        // box.value.arr.arr[arr_len] = i
        v-load i#0                                                                                     i#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load arr_len#0                                                                               arr_len#0
        int 8                                                                                          arr_len#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        int 22                                                                                         22
        v-load box%element_offset%0#0                                                                  22,box%element_offset%0#0
        +                                                                                              box%offset%5#0
        v-store box%offset%5#0
        // box_storage/contract.py:216
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:218
        // box.value.arr.arr[arr_len] = i
        v-load box%offset%5#0                                                                          "dynamic_arr_struct",box%offset%5#0
        v-load aggregate%val_as_bytes%0#0                                                              "dynamic_arr_struct",box%offset%5#0,aggregate%val_as_bytes%0#0
        box_replace
        // box_storage/contract.py:219
        // arr_len += 1
        v-load arr_len#0                                                                               arr_len#0
        int 1                                                                                          arr_len#0,1
        +                                                                                              arr_len#0
        v-store arr_len#0
        // box_storage/contract.py:217
        // for i in urange(times):
        v-load i#0                                                                                     i#0
        int 1                                                                                          i#0,1
        +                                                                                              i#0
        v-store i#0
        b append_dynamic_arr_struct_for_header@2

    append_dynamic_arr_struct_after_for@5:
        // box_storage/contract.py:220
        // box.value.arr.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               arr_len#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        bitlen                                                                                         aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                    aggregate%bitlen%0#0
        int 16                                                                                         aggregate%bitlen%0#0,16
        <=                                                                                             aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                               aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        extract 6 2                                                                                    aggregate%uint16%0#0
        v-store aggregate%uint16%0#0
        // box_storage/contract.py:216
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:220
        // box.value.arr.length = arc4.UInt16(arr_len)
        int 20                                                                                         "dynamic_arr_struct",20
        v-load aggregate%uint16%0#0                                                                    "dynamic_arr_struct",20,aggregate%uint16%0#0
        box_replace
        // box_storage/contract.py:493
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_len#0                                                                               arr_len#0
        int 8                                                                                          arr_len#0,8
        *                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:501
        // return head_and_dyn_arr + dyn_arr2_index
        v-load tmp%3#2                                                                                 tmp%3#2
        int 24                                                                                         tmp%3#2,24
        +                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:222
        // arr2_offset = get_dynamic_arr2_struct_byte_index(arr_len, UInt64(0)) - 2
        v-load tmp%3#2                                                                                 tmp%3#2
        int 2                                                                                          tmp%3#2,2
        -                                                                                              arr2_offset#0
        v-store arr2_offset#0
        // box_storage/contract.py:223
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        v-load arr2_offset#0                                                                           arr2_offset#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%val_as_bytes%2#0
        bitlen                                                                                         aggregate%bitlen%1#0
        v-store aggregate%bitlen%1#0
        v-load aggregate%bitlen%1#0                                                                    aggregate%bitlen%1#0
        int 16                                                                                         aggregate%bitlen%1#0,16
        <=                                                                                             aggregate%no_overflow%1#0
        v-store aggregate%no_overflow%1#0
        v-load aggregate%no_overflow%1#0                                                               aggregate%no_overflow%1#0
        assert // overflow
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%val_as_bytes%2#0
        extract 6 2                                                                                    aggregate%uint16%1#0
        v-store aggregate%uint16%1#0
        // box_storage/contract.py:216
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:223
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        int 18                                                                                         "dynamic_arr_struct",18
        v-load aggregate%uint16%1#0                                                                    "dynamic_arr_struct",18,aggregate%uint16%1#0
        box_replace
        // box_storage/contract.py:226
        // self.dynamic_arr_struct.value.arr.length == arr_len
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%4#0
        v-store box%box_extract%4#0
        v-load box%box_extract%4#0                                                                     box%box_extract%4#0
        btoi                                                                                           box%array_length%2#0
        v-store box%array_length%2#0
        v-load box%array_length%2#0                                                                    box%array_length%2#0
        v-load arr_len#0                                                                               box%array_length%2#0,arr_len#0
        ==                                                                                             tmp%14#0
        v-store tmp%14#0
        // box_storage/contract.py:225-227
        // assert (
        //     self.dynamic_arr_struct.value.arr.length == arr_len
        // ), "expected arr length to be correct"
        v-load tmp%14#0                                                                                tmp%14#0
        assert // expected arr length to be correct
        // box_storage/contract.py:228
        // assert self.dynamic_arr_struct.value.arr2.length == 0, "expected arr2 length to be correct"
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%5#0
        v-store box%box_extract%5#0
        v-load box%box_extract%5#0                                                                     box%box_extract%5#0
        btoi                                                                                           box%btoi%1#0
        v-store box%btoi%1#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%btoi%1#0                                                                            "dynamic_arr_struct",box%btoi%1#0
        int 2                                                                                          "dynamic_arr_struct",box%btoi%1#0,2
        box_extract                                                                                    box%box_extract%6#0
        v-store box%box_extract%6#0
        v-load box%box_extract%6#0                                                                     box%box_extract%6#0
        btoi                                                                                           box%array_length%3#0
        v-store box%array_length%3#0
        v-load box%array_length%3#0                                                                    box%array_length%3#0
        !                                                                                              tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert // expected arr2 length to be correct
        // box_storage/contract.py:199
        // @arc4.abimethod
        v-load box%array_length%2#0                                                                    box%array_length%2#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%3#0                                                              0x151f7c75,aggregate%val_as_bytes%3#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]() -> void:
subroutine pop_dynamic_arr_struct:
    pop_dynamic_arr_struct_block@0:
        // box_storage/contract.py:231
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           times#0
        v-store times#0
        // box_storage/contract.py:236
        // arr_len = self.dynamic_arr_struct.value.arr.length - times
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        v-load box%array_length%0#0                                                                    box%array_length%0#0
        v-load times#0                                                                                 box%array_length%0#0,times#0
        -                                                                                              arr_len#0
        v-store arr_len#0
        // box_storage/contract.py:237
        // arr2_len = self.dynamic_arr_struct.value.arr2.length
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%btoi%0#0                                                                            "dynamic_arr_struct",box%btoi%0#0
        int 2                                                                                          "dynamic_arr_struct",box%btoi%0#0,2
        box_extract                                                                                    box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load box%box_extract%2#0                                                                     box%box_extract%2#0
        btoi                                                                                           arr2_len#0
        v-store arr2_len#0
        // box_storage/contract.py:493
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_len#0                                                                               arr_len#0
        int 8                                                                                          arr_len#0,8
        *                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:494
        // return head + dyn_arr_index
        v-load tmp%3#2                                                                                 tmp%3#2
        // box_storage/contract.py:493-494
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        // return head + dyn_arr_index
        int 22                                                                                         tmp%3#2,22
        +                                                                                              head_and_dyn_arr#0
        // box_storage/contract.py:494
        // return head + dyn_arr_index
        v-store head_and_dyn_arr#0
        // box_storage/contract.py:501
        // return head_and_dyn_arr + dyn_arr2_index
        v-load tmp%3#2                                                                                 tmp%3#2
        int 24                                                                                         tmp%3#2,24
        +                                                                                              tmp%3#2
        v-store tmp%3#2
        // box_storage/contract.py:240
        // arr2_offset = get_dynamic_arr2_struct_byte_index(arr_len, UInt64(0)) - 2
        v-load tmp%3#2                                                                                 tmp%3#2
        int 2                                                                                          tmp%3#2,2
        -                                                                                              arr2_offset#0
        v-store arr2_offset#0
        // box_storage/contract.py:241
        // box.value.arr.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               arr_len#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        bitlen                                                                                         aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                    aggregate%bitlen%0#0
        int 16                                                                                         aggregate%bitlen%0#0,16
        <=                                                                                             aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                               aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        extract 6 2                                                                                    aggregate%uint16%0#0
        v-store aggregate%uint16%0#0
        // box_storage/contract.py:239
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:241
        // box.value.arr.length = arc4.UInt16(arr_len)
        int 20                                                                                         "dynamic_arr_struct",20
        v-load aggregate%uint16%0#0                                                                    "dynamic_arr_struct",20,aggregate%uint16%0#0
        box_replace
        // box_storage/contract.py:242
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        v-load arr2_offset#0                                                                           arr2_offset#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        bitlen                                                                                         aggregate%bitlen%1#0
        v-store aggregate%bitlen%1#0
        v-load aggregate%bitlen%1#0                                                                    aggregate%bitlen%1#0
        int 16                                                                                         aggregate%bitlen%1#0,16
        <=                                                                                             aggregate%no_overflow%1#0
        v-store aggregate%no_overflow%1#0
        v-load aggregate%no_overflow%1#0                                                               aggregate%no_overflow%1#0
        assert // overflow
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        extract 6 2                                                                                    aggregate%uint16%1#0
        v-store aggregate%uint16%1#0
        // box_storage/contract.py:239
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:242
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        int 18                                                                                         "dynamic_arr_struct",18
        v-load aggregate%uint16%1#0                                                                    "dynamic_arr_struct",18,aggregate%uint16%1#0
        box_replace
        // box_storage/contract.py:244
        // box.ref.splice(index, times * size_of(UInt64), b"")
        v-load times#0                                                                                 times#0
        int 8                                                                                          times#0,8
        *                                                                                              tmp%8#0
        v-store tmp%8#0
        // box_storage/contract.py:239
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:244
        // box.ref.splice(index, times * size_of(UInt64), b"")
        v-load head_and_dyn_arr#0                                                                      "dynamic_arr_struct",head_and_dyn_arr#0
        v-load tmp%8#0                                                                                 "dynamic_arr_struct",head_and_dyn_arr#0,tmp%8#0
        byte 0x                                                                                        "dynamic_arr_struct",head_and_dyn_arr#0,tmp%8#0,0x
        box_splice
        // box_storage/contract.py:500
        // dyn_arr2_index = size_of(arc4.UInt16) + arr2_index * size_of(UInt64)
        v-load arr2_len#0                                                                              arr2_len#0
        int 8                                                                                          arr2_len#0,8
        *                                                                                              tmp%1#1
        v-store tmp%1#1
        int 2                                                                                          2
        v-load tmp%1#1                                                                                 2,tmp%1#1
        +                                                                                              dyn_arr2_index#1
        v-store dyn_arr2_index#1
        // box_storage/contract.py:501
        // return head_and_dyn_arr + dyn_arr2_index
        v-load head_and_dyn_arr#0                                                                      head_and_dyn_arr#0
        v-load dyn_arr2_index#1                                                                        head_and_dyn_arr#0,dyn_arr2_index#1
        +                                                                                              size#0
        v-store size#0
        // box_storage/contract.py:249
        // self.dynamic_arr_struct.ref.resize(size)
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load size#0                                                                                  "dynamic_arr_struct",size#0
        box_resize
        // box_storage/contract.py:251
        // return self.dynamic_arr_struct.value.arr.length
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%3#0
        v-store box%box_extract%3#0
        v-load box%box_extract%3#0                                                                     box%box_extract%3#0
        btoi                                                                                           box%array_length%2#0
        v-store box%array_length%2#0
        // box_storage/contract.py:231
        // @arc4.abimethod
        v-load box%array_length%2#0                                                                    box%array_length%2#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%2#0                                                              0x151f7c75,aggregate%val_as_bytes%2#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.set_nested_struct[routing]() -> void:
subroutine set_nested_struct:
    set_nested_struct_block@0:
        // box_storage/contract.py:253
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                         struct#0
        v-store struct#0
        // box_storage/contract.py:256
        // assert struct.a, "struct.a is truthy"
        v-load struct#0                                                                                struct#0
        int 0                                                                                          struct#0,0
        extract_uint64                                                                                 values%0#0
        v-store values%0#0
        v-load values%0#0                                                                              values%0#0
        assert // struct.a is truthy
        // box_storage/contract.py:257
        // struct_bytes = Txn.application_args(1)
        txna ApplicationArgs 1                                                                         struct_bytes#0
        v-store struct_bytes#0
        // box_storage/contract.py:258
        // struct_size = struct_bytes.length
        v-load struct_bytes#0                                                                          struct_bytes#0
        len                                                                                            struct_size#0
        v-store struct_size#0
        // box_storage/contract.py:259
        // tail_offset = UInt64(4096 + 2)
        int 4098                                                                                       4098
        // box_storage/contract.py:261
        // box.create(size=tail_offset + struct_size)
        v-load struct_size#0                                                                           4098,struct_size#0
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        // box_storage/contract.py:255
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:261
        // box.create(size=tail_offset + struct_size)
        v-load tmp%3#0                                                                                 "box",tmp%3#0
        box_create                                                                                     {box_create}
        pop 1
        // box_storage/contract.py:255
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:263
        // box.ref.replace(tail_offset - 2, arc4.UInt16(tail_offset).bytes)
        int 4096                                                                                       "box",4096
        byte 0x1002                                                                                    "box",4096,0x1002
        box_replace
        // box_storage/contract.py:255
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:259
        // tail_offset = UInt64(4096 + 2)
        int 4098                                                                                       "box",4098
        // box_storage/contract.py:265
        // box.ref.replace(tail_offset, struct_bytes)
        v-load struct_bytes#0                                                                          "box",4098,struct_bytes#0
        box_replace
        // box_storage/contract.py:253
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.nested_write[routing]() -> void:
subroutine nested_write:
    nested_write_block@0:
        // box_storage/contract.py:267
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           index#0
        v-store index#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                         reinterpret_Encoded(uint64)%1#0
        btoi                                                                                           value#0
        v-store value#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:270
        // box.value.nested.a = value
        int 4098                                                                                       "box",4098
        v-load reinterpret_Encoded(uint64)%1#0                                                         "box",4098,reinterpret_Encoded(uint64)%1#0
        box_replace
        // box_storage/contract.py:271
        // box.value.nested.b = value + 1
        v-load value#0                                                                                 value#0
        int 1                                                                                          value#0,1
        +                                                                                              tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                                 tmp%0#1
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:271
        // box.value.nested.b = value + 1
        int 4110                                                                                       "box",4110
        v-load aggregate%val_as_bytes%0#0                                                              "box",4110,aggregate%val_as_bytes%0#0
        box_replace
        // box_storage/contract.py:272
        // box.value.nested.inner.arr_arr[index][index] = value + 2
        v-load value#0                                                                                 value#0
        int 2                                                                                          value#0,2
        +                                                                                              tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                                 tmp%1#1
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:272
        // box.value.nested.inner.arr_arr[index][index] = value + 2
        int 4136                                                                                       "box",4136
        int 2                                                                                          "box",4136,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        v-load index#0                                                                                 index#0
        v-load box%btoi%0#0                                                                            index#0,box%btoi%0#0
        <                                                                                              box%index_ok%0#0
        v-store box%index_ok%0#0
        v-load box%index_ok%0#0                                                                        box%index_ok%0#0
        assert // index out of bounds
        int 2                                                                                          2
        v-load index#0                                                                                 2,index#0
        *                                                                                              box%mul%0#0
        v-store box%mul%0#0
        int 4138                                                                                       4138
        v-load box%mul%0#0                                                                             4138,box%mul%0#0
        +                                                                                              box%add%1#0
        v-store box%add%1#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:272
        // box.value.nested.inner.arr_arr[index][index] = value + 2
        v-load box%add%1#0                                                                             "box",box%add%1#0
        int 2                                                                                          "box",box%add%1#0,2
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           box%btoi%1#0
        v-store box%btoi%1#0
        int 4138                                                                                       4138
        v-load box%btoi%1#0                                                                            4138,box%btoi%1#0
        +                                                                                              box%offset%7#0
        v-store box%offset%7#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:272
        // box.value.nested.inner.arr_arr[index][index] = value + 2
        v-load box%offset%7#0                                                                          "box",box%offset%7#0
        int 2                                                                                          "box",box%offset%7#0,2
        box_extract                                                                                    box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load box%box_extract%2#0                                                                     box%box_extract%2#0
        btoi                                                                                           box%btoi%2#0
        v-store box%btoi%2#0
        v-load index#0                                                                                 index#0
        v-load box%btoi%2#0                                                                            index#0,box%btoi%2#0
        <                                                                                              box%index_ok%1#0
        v-store box%index_ok%1#0
        v-load box%index_ok%1#0                                                                        box%index_ok%1#0
        assert // index out of bounds
        v-load box%offset%7#0                                                                          box%offset%7#0
        int 2                                                                                          box%offset%7#0,2
        +                                                                                              box%add%2#0
        v-store box%add%2#0
        v-load index#0                                                                                 index#0
        int 8                                                                                          index#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        v-load box%add%2#0                                                                             box%add%2#0
        v-load box%element_offset%0#0                                                                  box%add%2#0,box%element_offset%0#0
        +                                                                                              box%offset%8#0
        v-store box%offset%8#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:272
        // box.value.nested.inner.arr_arr[index][index] = value + 2
        v-load box%offset%8#0                                                                          "box",box%offset%8#0
        v-load aggregate%val_as_bytes%1#0                                                              "box",box%offset%8#0,aggregate%val_as_bytes%1#0
        box_replace
        // box_storage/contract.py:273
        // box.value.nested.inner.c = value + 3
        v-load value#0                                                                                 value#0
        int 3                                                                                          value#0,3
        +                                                                                              tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:273
        // box.value.nested.inner.c = value + 3
        int 4118                                                                                       "box",4118
        v-load aggregate%val_as_bytes%2#0                                                              "box",4118,aggregate%val_as_bytes%2#0
        box_replace
        // box_storage/contract.py:274
        // box.value.nested.inner.d = value + 4
        v-load value#0                                                                                 value#0
        int 4                                                                                          value#0,4
        +                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:274
        // box.value.nested.inner.d = value + 4
        int 4128                                                                                       "box",4128
        v-load aggregate%val_as_bytes%3#0                                                              "box",4128,aggregate%val_as_bytes%3#0
        box_replace
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load value#0                                                                                 value#0
        int 5                                                                                          value#0,5
        +                                                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        itob                                                                                           aggregate%val_as_bytes%4#0
        v-store aggregate%val_as_bytes%4#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        int 4108                                                                                       "box",4108
        int 2                                                                                          "box",4108,2
        box_extract                                                                                    box%box_extract%3#0
        v-store box%box_extract%3#0
        v-load box%box_extract%3#0                                                                     box%box_extract%3#0
        btoi                                                                                           box%btoi%3#0
        v-store box%btoi%3#0
        int 4098                                                                                       4098
        v-load box%btoi%3#0                                                                            4098,box%btoi%3#0
        +                                                                                              box%offset%16#0
        v-store box%offset%16#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load box%offset%16#0                                                                         "box",box%offset%16#0
        int 2                                                                                          "box",box%offset%16#0,2
        box_extract                                                                                    box%box_extract%4#0
        v-store box%box_extract%4#0
        v-load box%box_extract%4#0                                                                     box%box_extract%4#0
        btoi                                                                                           box%btoi%4#0
        v-store box%btoi%4#0
        v-load index#0                                                                                 index#0
        v-load box%btoi%4#0                                                                            index#0,box%btoi%4#0
        <                                                                                              box%index_ok%2#0
        v-store box%index_ok%2#0
        v-load box%index_ok%2#0                                                                        box%index_ok%2#0
        assert // index out of bounds
        v-load box%offset%16#0                                                                         box%offset%16#0
        int 2                                                                                          box%offset%16#0,2
        +                                                                                              box%add%4#0
        v-store box%add%4#0
        v-load box%add%4#0                                                                             box%add%4#0
        v-load box%mul%0#0                                                                             box%add%4#0,box%mul%0#0
        +                                                                                              box%add%5#0
        v-store box%add%5#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load box%add%5#0                                                                             "box",box%add%5#0
        int 2                                                                                          "box",box%add%5#0,2
        box_extract                                                                                    box%box_extract%5#0
        v-store box%box_extract%5#0
        v-load box%box_extract%5#0                                                                     box%box_extract%5#0
        btoi                                                                                           box%btoi%5#0
        v-store box%btoi%5#0
        v-load box%add%4#0                                                                             box%add%4#0
        v-load box%btoi%5#0                                                                            box%add%4#0,box%btoi%5#0
        +                                                                                              box%offset%17#0
        v-store box%offset%17#0
        v-load box%offset%17#0                                                                         box%offset%17#0
        int 18                                                                                         box%offset%17#0,18
        +                                                                                              box%offset%18#0
        v-store box%offset%18#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load box%offset%18#0                                                                         "box",box%offset%18#0
        int 2                                                                                          "box",box%offset%18#0,2
        box_extract                                                                                    box%box_extract%6#0
        v-store box%box_extract%6#0
        v-load box%box_extract%6#0                                                                     box%box_extract%6#0
        btoi                                                                                           box%btoi%6#0
        v-store box%btoi%6#0
        v-load index#0                                                                                 index#0
        v-load box%btoi%6#0                                                                            index#0,box%btoi%6#0
        <                                                                                              box%index_ok%3#0
        v-store box%index_ok%3#0
        v-load box%index_ok%3#0                                                                        box%index_ok%3#0
        assert // index out of bounds
        v-load box%offset%18#0                                                                         box%offset%18#0
        int 2                                                                                          box%offset%18#0,2
        +                                                                                              box%add%6#0
        v-store box%add%6#0
        v-load box%add%6#0                                                                             box%add%6#0
        v-load box%mul%0#0                                                                             box%add%6#0,box%mul%0#0
        +                                                                                              box%add%7#0
        v-store box%add%7#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load box%add%7#0                                                                             "box",box%add%7#0
        int 2                                                                                          "box",box%add%7#0,2
        box_extract                                                                                    box%box_extract%7#0
        v-store box%box_extract%7#0
        v-load box%box_extract%7#0                                                                     box%box_extract%7#0
        btoi                                                                                           box%btoi%7#0
        v-store box%btoi%7#0
        v-load box%add%6#0                                                                             box%add%6#0
        v-load box%btoi%7#0                                                                            box%add%6#0,box%btoi%7#0
        +                                                                                              box%offset%19#0
        v-store box%offset%19#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load box%offset%19#0                                                                         "box",box%offset%19#0
        int 2                                                                                          "box",box%offset%19#0,2
        box_extract                                                                                    box%box_extract%8#0
        v-store box%box_extract%8#0
        v-load box%box_extract%8#0                                                                     box%box_extract%8#0
        btoi                                                                                           box%btoi%8#0
        v-store box%btoi%8#0
        v-load index#0                                                                                 index#0
        v-load box%btoi%8#0                                                                            index#0,box%btoi%8#0
        <                                                                                              box%index_ok%4#0
        v-store box%index_ok%4#0
        v-load box%index_ok%4#0                                                                        box%index_ok%4#0
        assert // index out of bounds
        v-load box%offset%19#0                                                                         box%offset%19#0
        int 2                                                                                          box%offset%19#0,2
        +                                                                                              box%add%8#0
        v-store box%add%8#0
        v-load box%add%8#0                                                                             box%add%8#0
        v-load box%element_offset%0#0                                                                  box%add%8#0,box%element_offset%0#0
        +                                                                                              box%offset%20#0
        v-store box%offset%20#0
        // box_storage/contract.py:269
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:275
        // box.value.nested.woah[index].arr_arr[index][index] = value + 5
        v-load box%offset%20#0                                                                         "box",box%offset%20#0
        v-load aggregate%val_as_bytes%4#0                                                              "box",box%offset%20#0,aggregate%val_as_bytes%4#0
        box_replace
        // box_storage/contract.py:267
        // @arc4.abimethod()
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.nested_read[routing]() -> void:
subroutine nested_read:
    nested_read_block@0:
        // box_storage/contract.py:277
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           i1#0
        v-store i1#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                         reinterpret_Encoded(uint64)%1#0
        btoi                                                                                           i2#0
        v-store i2#0
        txna ApplicationArgs 3                                                                         reinterpret_Encoded(uint64)%2#0
        v-store reinterpret_Encoded(uint64)%2#0
        v-load reinterpret_Encoded(uint64)%2#0                                                         reinterpret_Encoded(uint64)%2#0
        btoi                                                                                           i3#0
        v-store i3#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:280
        // a = box.value.nested.a
        int 4098                                                                                       "box",4098
        int 8                                                                                          "box",4098,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           a#0
        v-store a#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:281
        // b = box.value.nested.b
        int 4110                                                                                       "box",4110
        int 8                                                                                          "box",4110,8
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           b#0
        v-store b#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:282
        // arr_arr = box.value.nested.inner.arr_arr[i1][i2]
        int 4136                                                                                       "box",4136
        int 2                                                                                          "box",4136,2
        box_extract                                                                                    box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load box%box_extract%2#0                                                                     box%box_extract%2#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        v-load i1#0                                                                                    i1#0
        v-load box%btoi%0#0                                                                            i1#0,box%btoi%0#0
        <                                                                                              box%index_ok%0#0
        v-store box%index_ok%0#0
        v-load box%index_ok%0#0                                                                        box%index_ok%0#0
        assert // index out of bounds
        int 2                                                                                          2
        v-load i1#0                                                                                    2,i1#0
        *                                                                                              box%mul%0#0
        v-store box%mul%0#0
        int 4138                                                                                       4138
        v-load box%mul%0#0                                                                             4138,box%mul%0#0
        +                                                                                              box%add%1#0
        v-store box%add%1#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:282
        // arr_arr = box.value.nested.inner.arr_arr[i1][i2]
        v-load box%add%1#0                                                                             "box",box%add%1#0
        int 2                                                                                          "box",box%add%1#0,2
        box_extract                                                                                    box%box_extract%3#0
        v-store box%box_extract%3#0
        v-load box%box_extract%3#0                                                                     box%box_extract%3#0
        btoi                                                                                           box%btoi%1#0
        v-store box%btoi%1#0
        int 4138                                                                                       4138
        v-load box%btoi%1#0                                                                            4138,box%btoi%1#0
        +                                                                                              box%offset%7#0
        v-store box%offset%7#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:282
        // arr_arr = box.value.nested.inner.arr_arr[i1][i2]
        v-load box%offset%7#0                                                                          "box",box%offset%7#0
        int 2                                                                                          "box",box%offset%7#0,2
        box_extract                                                                                    box%box_extract%4#0
        v-store box%box_extract%4#0
        v-load box%box_extract%4#0                                                                     box%box_extract%4#0
        btoi                                                                                           box%btoi%2#0
        v-store box%btoi%2#0
        v-load i2#0                                                                                    i2#0
        v-load box%btoi%2#0                                                                            i2#0,box%btoi%2#0
        <                                                                                              box%index_ok%1#0
        v-store box%index_ok%1#0
        v-load box%index_ok%1#0                                                                        box%index_ok%1#0
        assert // index out of bounds
        v-load box%offset%7#0                                                                          box%offset%7#0
        int 2                                                                                          box%offset%7#0,2
        +                                                                                              box%add%2#0
        v-store box%add%2#0
        v-load i2#0                                                                                    i2#0
        int 8                                                                                          i2#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        v-load box%add%2#0                                                                             box%add%2#0
        v-load box%element_offset%0#0                                                                  box%add%2#0,box%element_offset%0#0
        +                                                                                              box%offset%8#0
        v-store box%offset%8#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:282
        // arr_arr = box.value.nested.inner.arr_arr[i1][i2]
        v-load box%offset%8#0                                                                          "box",box%offset%8#0
        int 8                                                                                          "box",box%offset%8#0,8
        box_extract                                                                                    box%box_extract%5#0
        v-store box%box_extract%5#0
        v-load box%box_extract%5#0                                                                     box%box_extract%5#0
        btoi                                                                                           arr_arr#0
        v-store arr_arr#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:283
        // c = box.value.nested.inner.c
        int 4118                                                                                       "box",4118
        int 8                                                                                          "box",4118,8
        box_extract                                                                                    box%box_extract%6#0
        v-store box%box_extract%6#0
        v-load box%box_extract%6#0                                                                     box%box_extract%6#0
        btoi                                                                                           c#0
        v-store c#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:284
        // d = box.value.nested.inner.d
        int 4128                                                                                       "box",4128
        int 8                                                                                          "box",4128,8
        box_extract                                                                                    box%box_extract%7#0
        v-store box%box_extract%7#0
        v-load box%box_extract%7#0                                                                     box%box_extract%7#0
        btoi                                                                                           d#0
        v-store d#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        int 4108                                                                                       "box",4108
        int 2                                                                                          "box",4108,2
        box_extract                                                                                    box%box_extract%8#0
        v-store box%box_extract%8#0
        v-load box%box_extract%8#0                                                                     box%box_extract%8#0
        btoi                                                                                           box%btoi%3#0
        v-store box%btoi%3#0
        int 4098                                                                                       4098
        v-load box%btoi%3#0                                                                            4098,box%btoi%3#0
        +                                                                                              box%offset%16#0
        v-store box%offset%16#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        v-load box%offset%16#0                                                                         "box",box%offset%16#0
        int 2                                                                                          "box",box%offset%16#0,2
        box_extract                                                                                    box%box_extract%9#0
        v-store box%box_extract%9#0
        v-load box%box_extract%9#0                                                                     box%box_extract%9#0
        btoi                                                                                           box%btoi%4#0
        v-store box%btoi%4#0
        v-load i1#0                                                                                    i1#0
        v-load box%btoi%4#0                                                                            i1#0,box%btoi%4#0
        <                                                                                              box%index_ok%2#0
        v-store box%index_ok%2#0
        v-load box%index_ok%2#0                                                                        box%index_ok%2#0
        assert // index out of bounds
        v-load box%offset%16#0                                                                         box%offset%16#0
        int 2                                                                                          box%offset%16#0,2
        +                                                                                              box%add%4#0
        v-store box%add%4#0
        v-load box%add%4#0                                                                             box%add%4#0
        v-load box%mul%0#0                                                                             box%add%4#0,box%mul%0#0
        +                                                                                              box%add%5#0
        v-store box%add%5#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        v-load box%add%5#0                                                                             "box",box%add%5#0
        int 2                                                                                          "box",box%add%5#0,2
        box_extract                                                                                    box%box_extract%10#0
        v-store box%box_extract%10#0
        v-load box%box_extract%10#0                                                                    box%box_extract%10#0
        btoi                                                                                           box%btoi%5#0
        v-store box%btoi%5#0
        v-load box%add%4#0                                                                             box%add%4#0
        v-load box%btoi%5#0                                                                            box%add%4#0,box%btoi%5#0
        +                                                                                              box%offset%17#0
        v-store box%offset%17#0
        v-load box%offset%17#0                                                                         box%offset%17#0
        int 18                                                                                         box%offset%17#0,18
        +                                                                                              box%offset%18#0
        v-store box%offset%18#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        v-load box%offset%18#0                                                                         "box",box%offset%18#0
        int 2                                                                                          "box",box%offset%18#0,2
        box_extract                                                                                    box%box_extract%11#0
        v-store box%box_extract%11#0
        v-load box%box_extract%11#0                                                                    box%box_extract%11#0
        btoi                                                                                           box%btoi%6#0
        v-store box%btoi%6#0
        v-load i2#0                                                                                    i2#0
        v-load box%btoi%6#0                                                                            i2#0,box%btoi%6#0
        <                                                                                              box%index_ok%3#0
        v-store box%index_ok%3#0
        v-load box%index_ok%3#0                                                                        box%index_ok%3#0
        assert // index out of bounds
        v-load box%offset%18#0                                                                         box%offset%18#0
        int 2                                                                                          box%offset%18#0,2
        +                                                                                              box%add%6#0
        v-store box%add%6#0
        int 2                                                                                          2
        v-load i2#0                                                                                    2,i2#0
        *                                                                                              box%mul%2#0
        v-store box%mul%2#0
        v-load box%add%6#0                                                                             box%add%6#0
        v-load box%mul%2#0                                                                             box%add%6#0,box%mul%2#0
        +                                                                                              box%add%7#0
        v-store box%add%7#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        v-load box%add%7#0                                                                             "box",box%add%7#0
        int 2                                                                                          "box",box%add%7#0,2
        box_extract                                                                                    box%box_extract%12#0
        v-store box%box_extract%12#0
        v-load box%box_extract%12#0                                                                    box%box_extract%12#0
        btoi                                                                                           box%btoi%7#0
        v-store box%btoi%7#0
        v-load box%add%6#0                                                                             box%add%6#0
        v-load box%btoi%7#0                                                                            box%add%6#0,box%btoi%7#0
        +                                                                                              box%offset%19#0
        v-store box%offset%19#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        v-load box%offset%19#0                                                                         "box",box%offset%19#0
        int 2                                                                                          "box",box%offset%19#0,2
        box_extract                                                                                    box%box_extract%13#0
        v-store box%box_extract%13#0
        v-load box%box_extract%13#0                                                                    box%box_extract%13#0
        btoi                                                                                           box%btoi%8#0
        v-store box%btoi%8#0
        v-load i3#0                                                                                    i3#0
        v-load box%btoi%8#0                                                                            i3#0,box%btoi%8#0
        <                                                                                              box%index_ok%4#0
        v-store box%index_ok%4#0
        v-load box%index_ok%4#0                                                                        box%index_ok%4#0
        assert // index out of bounds
        v-load box%offset%19#0                                                                         box%offset%19#0
        int 2                                                                                          box%offset%19#0,2
        +                                                                                              box%add%8#0
        v-store box%add%8#0
        v-load i3#0                                                                                    i3#0
        int 8                                                                                          i3#0,8
        *                                                                                              box%element_offset%1#0
        v-store box%element_offset%1#0
        v-load box%add%8#0                                                                             box%add%8#0
        v-load box%element_offset%1#0                                                                  box%add%8#0,box%element_offset%1#0
        +                                                                                              box%offset%20#0
        v-store box%offset%20#0
        // box_storage/contract.py:279
        // box = Box(LargeNestedStruct, key="box")
        byte "box"                                                                                     "box"
        // box_storage/contract.py:285
        // woah_arr_arr = box.value.nested.woah[i1].arr_arr[i2][i3]
        v-load box%offset%20#0                                                                         "box",box%offset%20#0
        int 8                                                                                          "box",box%offset%20#0,8
        box_extract                                                                                    box%box_extract%14#0
        v-store box%box_extract%14#0
        v-load box%box_extract%14#0                                                                    box%box_extract%14#0
        btoi                                                                                           woah_arr_arr#0
        v-store woah_arr_arr#0
        // box_storage/contract.py:287
        // return a + b + arr_arr + c + d + woah_arr_arr
        v-load a#0                                                                                     a#0
        v-load b#0                                                                                     a#0,b#0
        +                                                                                              tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                                 tmp%0#1
        v-load arr_arr#0                                                                               tmp%0#1,arr_arr#0
        +                                                                                              tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                                 tmp%1#1
        v-load c#0                                                                                     tmp%1#1,c#0
        +                                                                                              tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                                 tmp%2#1
        v-load d#0                                                                                     tmp%2#1,d#0
        +                                                                                              tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                                 tmp%3#1
        v-load woah_arr_arr#0                                                                          tmp%3#1,woah_arr_arr#0
        +                                                                                              tmp%4#1
        v-store tmp%4#1
        // box_storage/contract.py:277
        // @arc4.abimethod()
        v-load tmp%4#1                                                                                 tmp%4#1
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                              0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                         tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]() -> void:
subroutine sum_dynamic_arr_struct:
    sum_dynamic_arr_struct_block@0:
        // box_storage/contract.py:291
        // assert self.dynamic_arr_struct.value.a == 1, "expected 1"
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 0                                                                                          "dynamic_arr_struct",0
        int 8                                                                                          "dynamic_arr_struct",0,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        v-load values%0#0                                                                              values%0#0
        int 1                                                                                          values%0#0,1
        ==                                                                                             tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                                 tmp%0#1
        assert // expected 1
        // box_storage/contract.py:292
        // assert self.dynamic_arr_struct.value.b == 2, "expected 2"
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 10                                                                                         "dynamic_arr_struct",10
        int 8                                                                                          "dynamic_arr_struct",10,8
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           values%1#0
        v-store values%1#0
        v-load values%1#0                                                                              values%1#0
        int 2                                                                                          values%1#0,2
        ==                                                                                             tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                                 tmp%1#1
        assert // expected 2
        // box_storage/contract.py:293
        // total = self.dynamic_arr_struct.value.a + self.dynamic_arr_struct.value.b
        v-load values%0#0                                                                              values%0#0
        v-load values%1#0                                                                              values%0#0,values%1#0
        +                                                                                              total#0
        v-store total#0
        // box_storage/contract.py:294
        // for val in self.dynamic_arr_struct.value.arr:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%4#0
        v-store box%box_extract%4#0
        v-load box%box_extract%4#0                                                                     box%box_extract%4#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_dynamic_arr_struct_for_header@2

    sum_dynamic_arr_struct_for_header@2:
        // box_storage/contract.py:294
        // for val in self.dynamic_arr_struct.value.arr:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        v-load box%array_length%0#0                                                                    item_index_internal%0#0,box%array_length%0#0
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_dynamic_arr_struct_after_for@5 ; b sum_dynamic_arr_struct_for_body@3

    sum_dynamic_arr_struct_for_body@3:
        // box_storage/contract.py:294
        // for val in self.dynamic_arr_struct.value.arr:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%5#0
        v-store box%box_extract%5#0
        v-load box%box_extract%5#0                                                                     box%box_extract%5#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        v-load box%btoi%0#0                                                                            item_index_internal%0#0,box%btoi%0#0
        <                                                                                              box%index_ok%0#0
        v-store box%index_ok%0#0
        v-load box%index_ok%0#0                                                                        box%index_ok%0#0
        assert // index out of bounds
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        int 22                                                                                         22
        v-load box%element_offset%0#0                                                                  22,box%element_offset%0#0
        +                                                                                              box%offset%6#0
        v-store box%offset%6#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%offset%6#0                                                                          "dynamic_arr_struct",box%offset%6#0
        int 8                                                                                          "dynamic_arr_struct",box%offset%6#0,8
        box_extract                                                                                    box%box_extract%6#0
        v-store box%box_extract%6#0
        v-load box%box_extract%6#0                                                                     box%box_extract%6#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:295
        // total += val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_dynamic_arr_struct_for_header@2

    sum_dynamic_arr_struct_after_for@5:
        // box_storage/contract.py:296
        // for val in self.dynamic_arr_struct.value.arr2:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%7#0
        v-store box%box_extract%7#0
        v-load box%box_extract%7#0                                                                     box%box_extract%7#0
        btoi                                                                                           box%btoi%1#0
        v-store box%btoi%1#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%btoi%1#0                                                                            "dynamic_arr_struct",box%btoi%1#0
        int 2                                                                                          "dynamic_arr_struct",box%btoi%1#0,2
        box_extract                                                                                    box%box_extract%8#0
        v-store box%box_extract%8#0
        v-load box%box_extract%8#0                                                                     box%box_extract%8#0
        btoi                                                                                           box%array_length%1#0
        v-store box%array_length%1#0
        int 0                                                                                          0
        v-store item_index_internal%1#0
        b sum_dynamic_arr_struct_for_header@6

    sum_dynamic_arr_struct_for_header@6:
        // box_storage/contract.py:296
        // for val in self.dynamic_arr_struct.value.arr2:
        v-load item_index_internal%1#0                                                                 item_index_internal%1#0
        v-load box%array_length%1#0                                                                    item_index_internal%1#0,box%array_length%1#0
        <                                                                                              continue_looping%1#0
        v-store continue_looping%1#0
        v-load continue_looping%1#0                                                                    continue_looping%1#0
        bz sum_dynamic_arr_struct_after_for@9 ; b sum_dynamic_arr_struct_for_body@7

    sum_dynamic_arr_struct_for_body@7:
        // box_storage/contract.py:296
        // for val in self.dynamic_arr_struct.value.arr2:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%9#0
        v-store box%box_extract%9#0
        v-load box%box_extract%9#0                                                                     box%box_extract%9#0
        btoi                                                                                           box%btoi%2#0
        v-store box%btoi%2#0
        v-load box%btoi%2#0                                                                            box%btoi%2#0
        int 2                                                                                          box%btoi%2#0,2
        +                                                                                              box%add%3#0
        v-store box%add%3#0
        v-load item_index_internal%1#0                                                                 item_index_internal%1#0
        int 8                                                                                          item_index_internal%1#0,8
        *                                                                                              box%element_offset%1#0
        v-store box%element_offset%1#0
        v-load box%add%3#0                                                                             box%add%3#0
        v-load box%element_offset%1#0                                                                  box%add%3#0,box%element_offset%1#0
        +                                                                                              box%offset%9#0
        v-store box%offset%9#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%offset%9#0                                                                          "dynamic_arr_struct",box%offset%9#0
        int 8                                                                                          "dynamic_arr_struct",box%offset%9#0,8
        box_extract                                                                                    box%box_extract%10#0
        v-store box%box_extract%10#0
        v-load box%box_extract%10#0                                                                    box%box_extract%10#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:297
        // total += val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%1#0                                                                 item_index_internal%1#0
        int 1                                                                                          item_index_internal%1#0,1
        +                                                                                              item_index_internal%1#0
        v-store item_index_internal%1#0
        b sum_dynamic_arr_struct_for_header@6

    sum_dynamic_arr_struct_after_for@9:
        // box_storage/contract.py:289
        // @arc4.abimethod
        v-load total#0                                                                                 total#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                              0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.set_bool[routing]() -> void:
subroutine set_bool:
    set_bool_block@0:
        // box_storage/contract.py:304
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           index#0
        v-store index#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(bool8)%0#0
        v-store reinterpret_Encoded(bool8)%0#0
        v-load reinterpret_Encoded(bool8)%0#0                                                          reinterpret_Encoded(bool8)%0#0
        int 0                                                                                          reinterpret_Encoded(bool8)%0#0,0
        getbit                                                                                         value#0
        v-store value#0
        // box_storage/contract.py:306
        // self.too_many_bools.value[index] = value
        v-load index#0                                                                                 index#0
        int 8                                                                                          index#0,8
        /                                                                                              box%element_byte_offset%0#0
        v-store box%element_byte_offset%0#0
        v-load index#0                                                                                 index#0
        int 8                                                                                          index#0,8
        %                                                                                              box%element_bit_offset%0#0
        v-store box%element_bit_offset%0#0
        byte "too_many_bools"                                                                          "too_many_bools"
        v-load box%element_byte_offset%0#0                                                             "too_many_bools",box%element_byte_offset%0#0
        int 1                                                                                          "too_many_bools",box%element_byte_offset%0#0,1
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%element_bit_offset%0#0                                                              box%element_bit_offset%0#0
        int 8                                                                                          box%element_bit_offset%0#0,8
        <                                                                                              aggregate%lt%0#0
        v-store aggregate%lt%0#0
        v-load aggregate%lt%0#0                                                                        aggregate%lt%0#0
        assert // index access is out of bounds
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        v-load box%element_bit_offset%0#0                                                              box%box_extract%0#0,box%element_bit_offset%0#0
        v-load value#0                                                                                 box%box_extract%0#0,box%element_bit_offset%0#0,value#0
        setbit                                                                                         aggregate%updated_target%0#0
        v-store aggregate%updated_target%0#0
        byte "too_many_bools"                                                                          "too_many_bools"
        v-load box%element_byte_offset%0#0                                                             "too_many_bools",box%element_byte_offset%0#0
        v-load aggregate%updated_target%0#0                                                            "too_many_bools",box%element_byte_offset%0#0,aggregate%updated_target%0#0
        box_replace
        // box_storage/contract.py:304
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.sum_bools[routing]() -> void:
subroutine sum_bools:
    sum_bools_block@0:
        // box_storage/contract.py:308
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           stop_at_total#0
        v-store stop_at_total#0
        // box_storage/contract.py:310
        // total = UInt64()
        int 0                                                                                          0
        v-store total#0
        // box_storage/contract.py:311
        // for value in self.too_many_bools.value:
        byte "too_many_bools"                                                                          "too_many_bools"
        box_len                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check self.too_many_bools exists
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_bools_for_header@2

    sum_bools_for_header@2:
        // box_storage/contract.py:311
        // for value in self.too_many_bools.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 33000                                                                                      item_index_internal%0#0,33000
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load total#0                                                                                 total#0
        v-store total#10
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_bools_after_for@9 ; b sum_bools_for_body@3

    sum_bools_for_body@3:
        // box_storage/contract.py:311
        // for value in self.too_many_bools.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        /                                                                                              box%element_byte_offset%0#0
        v-store box%element_byte_offset%0#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        %                                                                                              box%element_bit_offset%0#0
        v-store box%element_bit_offset%0#0
        byte "too_many_bools"                                                                          "too_many_bools"
        v-load box%element_byte_offset%0#0                                                             "too_many_bools",box%element_byte_offset%0#0
        int 1                                                                                          "too_many_bools",box%element_byte_offset%0#0,1
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        v-load box%element_bit_offset%0#0                                                              box%box_extract%0#0,box%element_bit_offset%0#0
        getbit                                                                                         value#0
        v-store value#0
        v-load total#0                                                                                 total#0
        v-store total#10
        // box_storage/contract.py:312
        // if value:
        v-load value#0                                                                                 value#0
        bz sum_bools_after_if_else@5 ; b sum_bools_if_body@4

    sum_bools_if_body@4:
        // box_storage/contract.py:313
        // total += 1
        v-load total#0                                                                                 total#0
        int 1                                                                                          total#0,1
        +                                                                                              total#0
        v-store total#0
        v-load total#0                                                                                 total#0
        v-store total#10
        b sum_bools_after_if_else@5

    sum_bools_after_if_else@5:
        v-load total#10                                                                                total#10
        v-store total#0
        // box_storage/contract.py:314
        // if total == stop_at_total:
        v-load total#0                                                                                 total#0
        v-load stop_at_total#0                                                                         total#0,stop_at_total#0
        ==                                                                                             tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                                 tmp%1#1
        bz sum_bools_after_if_else@7 ; b sum_bools_if_body@6

    sum_bools_if_body@6:
        v-load total#0                                                                                 total#0
        v-store total#10
        // box_storage/contract.py:315
        // break
        b sum_bools_after_for@9

    sum_bools_after_if_else@7:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_bools_for_header@2

    sum_bools_after_for@9:
        v-load total#10                                                                                total#10
        v-store total#0
        // box_storage/contract.py:308
        // @arc4.abimethod()
        v-load total#0                                                                                 total#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                              0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.create_dynamic_box[routing]() -> void:
subroutine create_dynamic_box:
    create_dynamic_box_block@0:
        // box_storage/contract.py:320
        // self.dynamic_box.value = Array[UInt64]()
        byte "dynamic_box"                                                                             "dynamic_box"
        box_del                                                                                        {box_del}
        pop 1
        byte "dynamic_box"                                                                             "dynamic_box"
        byte 0x0000                                                                                    "dynamic_box",0x0000
        box_put
        // box_storage/contract.py:318
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.append_dynamic_box[routing]() -> void:
subroutine append_dynamic_box:
    append_dynamic_box_block@0:
        // box_storage/contract.py:326
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           times#0
        v-store times#0
        // box_storage/contract.py:330
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             "dynamic_box"
        // box_storage/contract.py:331
        // arr_len = box.value.length.native
        int 0                                                                                          "dynamic_box",0
        int 2                                                                                          "dynamic_box",0,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           arr_len#0
        v-store arr_len#0
        // box_storage/contract.py:333
        // self.dynamic_box.ref.resize(2 + (arr_len + times) * 8)
        v-load arr_len#0                                                                               arr_len#0
        v-load times#0                                                                                 arr_len#0,times#0
        +                                                                                              tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                                 tmp%1#1
        int 8                                                                                          tmp%1#1,8
        *                                                                                              tmp%2#1
        v-store tmp%2#1
        int 2                                                                                          2
        v-load tmp%2#1                                                                                 2,tmp%2#1
        +                                                                                              tmp%3#1
        v-store tmp%3#1
        byte "dynamic_box"                                                                             "dynamic_box"
        v-load tmp%3#1                                                                                 "dynamic_box",tmp%3#1
        box_resize
        // box_storage/contract.py:334
        // for i in urange(times):
        int 0                                                                                          0
        v-store i#0
        b append_dynamic_box_for_header@2

    append_dynamic_box_for_header@2:
        // box_storage/contract.py:334
        // for i in urange(times):
        v-load i#0                                                                                     i#0
        v-load times#0                                                                                 i#0,times#0
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz append_dynamic_box_after_for@5 ; b append_dynamic_box_for_body@3

    append_dynamic_box_for_body@3:
        // box_storage/contract.py:335
        // box.value.arr[arr_len] = i
        v-load i#0                                                                                     i#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load arr_len#0                                                                               arr_len#0
        int 8                                                                                          arr_len#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        int 2                                                                                          2
        v-load box%element_offset%0#0                                                                  2,box%element_offset%0#0
        +                                                                                              box%offset%2#0
        v-store box%offset%2#0
        // box_storage/contract.py:330
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             "dynamic_box"
        // box_storage/contract.py:335
        // box.value.arr[arr_len] = i
        v-load box%offset%2#0                                                                          "dynamic_box",box%offset%2#0
        v-load aggregate%val_as_bytes%0#0                                                              "dynamic_box",box%offset%2#0,aggregate%val_as_bytes%0#0
        box_replace
        // box_storage/contract.py:336
        // arr_len += 1
        v-load arr_len#0                                                                               arr_len#0
        int 1                                                                                          arr_len#0,1
        +                                                                                              arr_len#0
        v-store arr_len#0
        // box_storage/contract.py:334
        // for i in urange(times):
        v-load i#0                                                                                     i#0
        int 1                                                                                          i#0,1
        +                                                                                              i#0
        v-store i#0
        b append_dynamic_box_for_header@2

    append_dynamic_box_after_for@5:
        // box_storage/contract.py:338
        // box.value.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               arr_len#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        bitlen                                                                                         aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                    aggregate%bitlen%0#0
        int 16                                                                                         aggregate%bitlen%0#0,16
        <=                                                                                             aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                               aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        extract 6 2                                                                                    aggregate%uint16%0#0
        v-store aggregate%uint16%0#0
        // box_storage/contract.py:330
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             "dynamic_box"
        // box_storage/contract.py:338
        // box.value.length = arc4.UInt16(arr_len)
        int 0                                                                                          "dynamic_box",0
        v-load aggregate%uint16%0#0                                                                    "dynamic_box",0,aggregate%uint16%0#0
        box_replace
        // box_storage/contract.py:339
        // return self.dynamic_box.value.length
        byte "dynamic_box"                                                                             "dynamic_box"
        int 0                                                                                          "dynamic_box",0
        int 2                                                                                          "dynamic_box",0,2
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        // box_storage/contract.py:326
        // @arc4.abimethod
        v-load box%array_length%0#0                                                                    box%array_length%0#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%2#0                                                              0x151f7c75,aggregate%val_as_bytes%2#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]() -> void:
subroutine pop_dynamic_box:
    pop_dynamic_box_block@0:
        // box_storage/contract.py:341
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           times#0
        v-store times#0
        // box_storage/contract.py:345
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             "dynamic_box"
        // box_storage/contract.py:346
        // arr_len = box.value.length.native - times
        int 0                                                                                          "dynamic_box",0
        int 2                                                                                          "dynamic_box",0,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                                 tmp%0#1
        v-load times#0                                                                                 tmp%0#1,times#0
        -                                                                                              arr_len#0
        v-store arr_len#0
        // box_storage/contract.py:347
        // box.value.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               arr_len#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        bitlen                                                                                         aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                    aggregate%bitlen%0#0
        int 16                                                                                         aggregate%bitlen%0#0,16
        <=                                                                                             aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                               aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        extract 6 2                                                                                    aggregate%uint16%0#0
        v-store aggregate%uint16%0#0
        // box_storage/contract.py:345
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             "dynamic_box"
        // box_storage/contract.py:347
        // box.value.length = arc4.UInt16(arr_len)
        int 0                                                                                          "dynamic_box",0
        v-load aggregate%uint16%0#0                                                                    "dynamic_box",0,aggregate%uint16%0#0
        box_replace
        // box_storage/contract.py:348
        // self.dynamic_box.ref.resize(2 + arr_len * 8)
        v-load arr_len#0                                                                               arr_len#0
        int 8                                                                                          arr_len#0,8
        *                                                                                              tmp%3#1
        v-store tmp%3#1
        int 2                                                                                          2
        v-load tmp%3#1                                                                                 2,tmp%3#1
        +                                                                                              tmp%4#0
        v-store tmp%4#0
        byte "dynamic_box"                                                                             "dynamic_box"
        v-load tmp%4#0                                                                                 "dynamic_box",tmp%4#0
        box_resize
        // box_storage/contract.py:350
        // return self.dynamic_box.value.length
        byte "dynamic_box"                                                                             "dynamic_box"
        int 0                                                                                          "dynamic_box",0
        int 2                                                                                          "dynamic_box",0,2
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        // box_storage/contract.py:341
        // @arc4.abimethod
        v-load box%array_length%0#0                                                                    box%array_length%0#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%1#0                                                              0x151f7c75,aggregate%val_as_bytes%1#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]() -> void:
subroutine sum_dynamic_box:
    sum_dynamic_box_block@0:
        // box_storage/contract.py:354
        // total = UInt64()
        int 0                                                                                          0
        v-store total#0
        // box_storage/contract.py:355
        // for val in self.dynamic_box.value:
        byte "dynamic_box"                                                                             "dynamic_box"
        int 0                                                                                          "dynamic_box",0
        int 2                                                                                          "dynamic_box",0,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_dynamic_box_for_header@2

    sum_dynamic_box_for_header@2:
        // box_storage/contract.py:355
        // for val in self.dynamic_box.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        v-load box%array_length%0#0                                                                    item_index_internal%0#0,box%array_length%0#0
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_dynamic_box_after_for@5 ; b sum_dynamic_box_for_body@3

    sum_dynamic_box_for_body@3:
        // box_storage/contract.py:355
        // for val in self.dynamic_box.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        int 2                                                                                          2
        v-load box%element_offset%0#0                                                                  2,box%element_offset%0#0
        +                                                                                              box%offset%0#0
        v-store box%offset%0#0
        byte "dynamic_box"                                                                             "dynamic_box"
        v-load box%offset%0#0                                                                          "dynamic_box",box%offset%0#0
        int 8                                                                                          "dynamic_box",box%offset%0#0,8
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:356
        // total += val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_dynamic_box_for_header@2

    sum_dynamic_box_after_for@5:
        // box_storage/contract.py:352
        // @arc4.abimethod
        v-load total#0                                                                                 total#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                              0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.write_dynamic_box[routing]() -> void:
subroutine write_dynamic_box:
    write_dynamic_box_block@0:
        // box_storage/contract.py:359
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           index#0
        v-store index#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        // box_storage/contract.py:361
        // self.dynamic_box.value[index] = value
        v-load index#0                                                                                 index#0
        int 8                                                                                          index#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        int 2                                                                                          2
        v-load box%element_offset%0#0                                                                  2,box%element_offset%0#0
        +                                                                                              box%offset%0#0
        v-store box%offset%0#0
        byte "dynamic_box"                                                                             "dynamic_box"
        v-load box%offset%0#0                                                                          "dynamic_box",box%offset%0#0
        v-load reinterpret_Encoded(uint64)%1#0                                                         "dynamic_box",box%offset%0#0,reinterpret_Encoded(uint64)%1#0
        box_replace
        // box_storage/contract.py:359
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]() -> void:
subroutine write_dynamic_arr_struct:
    write_dynamic_arr_struct_block@0:
        // box_storage/contract.py:363
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           index#0
        v-store index#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        // box_storage/contract.py:365
        // self.dynamic_arr_struct.value.arr[index] = value
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        v-load index#0                                                                                 index#0
        v-load box%btoi%0#0                                                                            index#0,box%btoi%0#0
        <                                                                                              box%index_ok%0#0
        v-store box%index_ok%0#0
        v-load box%index_ok%0#0                                                                        box%index_ok%0#0
        assert // index out of bounds
        v-load index#0                                                                                 index#0
        int 8                                                                                          index#0,8
        *                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        int 22                                                                                         22
        v-load box%element_offset%0#0                                                                  22,box%element_offset%0#0
        +                                                                                              box%offset%1#0
        v-store box%offset%1#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%offset%1#0                                                                          "dynamic_arr_struct",box%offset%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                         "dynamic_arr_struct",box%offset%1#0,reinterpret_Encoded(uint64)%1#0
        box_replace
        // box_storage/contract.py:363
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.slice_box[routing]() -> void:
subroutine slice_box:
    slice_box_block@0:
        // box_storage/contract.py:369
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:370
        // box_0.value = Bytes(b"Testing testing 123")
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:369
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:370
        // box_0.value = Bytes(b"Testing testing 123")
        byte 0x54657374696e672074657374696e6720313233                                                  "0",0x54657374696e672074657374696e6720313233
        box_put
        // box_storage/contract.py:369
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:371
        // assert box_0.value[0:7] == b"Testing"
        box_len                                                                                        tmp%0#0,tmp%1#0
        v-store tmp%1#0                                                                                tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 0                                                                                          tmp%0#0,0
        v-load tmp%0#0                                                                                 tmp%0#0,0,tmp%0#0
        select                                                                                         tmp%3#0
        v-store tmp%3#0
        int 7                                                                                          7
        v-load tmp%0#0                                                                                 7,tmp%0#0
        <                                                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 7                                                                                          tmp%0#0,7
        v-load tmp%4#0                                                                                 tmp%0#0,7,tmp%4#0
        select                                                                                         tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        v-load tmp%3#0                                                                                 tmp%5#0,tmp%3#0
        -                                                                                              tmp%6#0
        v-store tmp%6#0
        // box_storage/contract.py:369
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:371
        // assert box_0.value[0:7] == b"Testing"
        v-load tmp%3#0                                                                                 "0",tmp%3#0
        v-load tmp%6#0                                                                                 "0",tmp%3#0,tmp%6#0
        box_extract                                                                                    tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        byte 0x54657374696e67                                                                          tmp%7#0,0x54657374696e67
        ==                                                                                             tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert
        // box_storage/contract.py:373
        // self.box_c.value = arc4.String("Hello")
        byte 0x424f585f43                                                                              0x424f585f43
        box_del                                                                                        {box_del}
        pop 1
        byte 0x424f585f43                                                                              0x424f585f43
        byte 0x000548656c6c6f                                                                          0x424f585f43,0x000548656c6c6f
        box_put
        // box_storage/contract.py:374
        // assert self.box_c.value.bytes[2:10] == b"Hello"
        byte 0x424f585f43                                                                              0x424f585f43
        box_len                                                                                        tmp%10#0,tmp%11#0
        v-store tmp%11#0                                                                               tmp%10#0
        v-store tmp%10#0
        int 2                                                                                          2
        v-load tmp%10#0                                                                                2,tmp%10#0
        <                                                                                              tmp%12#0
        v-store tmp%12#0
        v-load tmp%10#0                                                                                tmp%10#0
        int 2                                                                                          tmp%10#0,2
        v-load tmp%12#0                                                                                tmp%10#0,2,tmp%12#0
        select                                                                                         tmp%13#0
        v-store tmp%13#0
        int 10                                                                                         10
        v-load tmp%10#0                                                                                10,tmp%10#0
        <                                                                                              tmp%14#0
        v-store tmp%14#0
        v-load tmp%10#0                                                                                tmp%10#0
        int 10                                                                                         tmp%10#0,10
        v-load tmp%14#0                                                                                tmp%10#0,10,tmp%14#0
        select                                                                                         tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        v-load tmp%13#0                                                                                tmp%15#0,tmp%13#0
        -                                                                                              tmp%16#0
        v-store tmp%16#0
        byte 0x424f585f43                                                                              0x424f585f43
        v-load tmp%13#0                                                                                0x424f585f43,tmp%13#0
        v-load tmp%16#0                                                                                0x424f585f43,tmp%13#0,tmp%16#0
        box_extract                                                                                    tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        byte 0x48656c6c6f                                                                              tmp%17#0,0x48656c6c6f
        ==                                                                                             tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                                tmp%18#0
        assert
        // box_storage/contract.py:367
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.test_box_ref[routing]() -> void:
subroutine test_box_ref:
    test_box_ref_block@0:
        // box_storage/contract.py:389
        // box_ref = BoxRef(key="blob")
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:390
        // assert not box_ref, "no data"
        box_len                                                                                        _%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       _%0#0
        v-store _%0#0
        v-load maybe_exists%0#0                                                                        maybe_exists%0#0
        !                                                                                              tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        assert // no data
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:399
        // assert box_ref.create(size=32)
        int 32                                                                                         "blob",32
        box_create                                                                                     tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert
        // box_storage/contract.py:403
        // sender_bytes = Txn.sender.bytes
        txn Sender                                                                                     sender_bytes#0
        v-store sender_bytes#0
        // box_storage/contract.py:404
        // app_address = Global.current_application_address.bytes
        global CurrentApplicationAddress                                                               app_address#0
        v-store app_address#0
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:406
        // box_ref.replace(0, sender_bytes)
        int 0                                                                                          "blob",0
        v-load sender_bytes#0                                                                          "blob",0,sender_bytes#0
        box_replace
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:407
        // box_ref.resize(8000)
        int 8000                                                                                       "blob",8000
        box_resize
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:408
        // box_ref.splice(0, 0, app_address)
        int 0                                                                                          "blob",0
        int 0                                                                                          "blob",0,0
        v-load app_address#0                                                                           "blob",0,0,app_address#0
        box_splice
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:409
        // box_ref.replace(64, value_3)
        int 64                                                                                         "blob",64
        // box_storage/contract.py:405
        // value_3 = Bytes(b"hello")
        byte 0x68656c6c6f                                                                              "blob",64,0x68656c6c6f
        // box_storage/contract.py:409
        // box_ref.replace(64, value_3)
        box_replace
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:410
        // prefix = box_ref.extract(0, 32 * 2 + value_3.length)
        int 0                                                                                          "blob",0
        int 69                                                                                         "blob",0,69
        box_extract                                                                                    prefix#0
        v-store prefix#0
        // box_storage/contract.py:411
        // assert prefix == app_address + sender_bytes + value_3
        v-load app_address#0                                                                           app_address#0
        v-load sender_bytes#0                                                                          app_address#0,sender_bytes#0
        concat                                                                                         tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        // box_storage/contract.py:405
        // value_3 = Bytes(b"hello")
        byte 0x68656c6c6f                                                                              tmp%10#0,0x68656c6c6f
        // box_storage/contract.py:411
        // assert prefix == app_address + sender_bytes + value_3
        concat                                                                                         tmp%11#0
        v-store tmp%11#0
        v-load prefix#0                                                                                prefix#0
        v-load tmp%11#0                                                                                prefix#0,tmp%11#0
        ==                                                                                             tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                                tmp%12#0
        assert
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:414
        // assert box_ref.delete()
        box_del                                                                                        tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                                tmp%13#0
        assert
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:418
        // value, exists = box_ref.maybe()
        box_get                                                                                        value#0,exists#0
        v-store exists#0                                                                               value#0
        v-store value#0
        // box_storage/contract.py:419
        // assert not exists
        v-load exists#0                                                                                exists#0
        !                                                                                              tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        assert
        // box_storage/contract.py:420
        // assert value == b""
        v-load value#0                                                                                 value#0
        byte 0x                                                                                        value#0,0x
        ==                                                                                             tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert
        // box_storage/contract.py:421
        // assert box_ref.get(default=sender_bytes) == sender_bytes
        v-load sender_bytes#0                                                                          sender_bytes#0
        v-load value#0                                                                                 sender_bytes#0,value#0
        v-load exists#0                                                                                sender_bytes#0,value#0,exists#0
        select                                                                                         state_get%0#0
        v-store state_get%0#0
        v-load state_get%0#0                                                                           state_get%0#0
        v-load sender_bytes#0                                                                          state_get%0#0,sender_bytes#0
        ==                                                                                             tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        assert
        // box_storage/contract.py:424
        // box_ref.put(sender_bytes + app_address)
        v-load sender_bytes#0                                                                          sender_bytes#0
        v-load app_address#0                                                                           sender_bytes#0,app_address#0
        concat                                                                                         tmp%18#0
        v-store tmp%18#0
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:424
        // box_ref.put(sender_bytes + app_address)
        v-load tmp%18#0                                                                                "blob",tmp%18#0
        box_put
        // box_storage/contract.py:395
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:425
        // assert box_ref, "Blob exists"
        box_len                                                                                        _%5#0,maybe_exists%7#0
        v-store maybe_exists%7#0                                                                       _%5#0
        v-store _%5#0
        // box_storage/contract.py:426
        // assert box_ref.length == 64
        v-load _%5#0                                                                                   _%5#0
        int 64                                                                                         _%5#0,64
        ==                                                                                             tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                                tmp%19#0
        assert
        // box_storage/contract.py:430
        // self.box_ref.create(size=UInt64(32))
        byte "box_ref"                                                                                 "box_ref"
        int 32                                                                                         "box_ref",32
        box_create                                                                                     {box_create}
        pop 1
        // box_storage/contract.py:432
        // self.box_ref.delete()
        byte "box_ref"                                                                                 "box_ref"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:386
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.box_map_test[routing]() -> void:
subroutine box_map_test:
    box_map_test_block@0:
        // box_storage/contract.py:436
        // key_0 = UInt64(0)
        int 0                                                                                          0
        // box_storage/contract.py:439
        // self.box_map[key_0] = value
        itob                                                                                           box_0#0
        v-store box_0#0
        v-load box_0#0                                                                                 box_0#0
        box_del                                                                                        {box_del}
        pop 1
        v-load box_0#0                                                                                 box_0#0
        // box_storage/contract.py:438
        // value = String("Hmmmmm")
        byte "Hmmmmm"                                                                                  box_0#0,"Hmmmmm"
        // box_storage/contract.py:439
        // self.box_map[key_0] = value
        box_put
        // box_storage/contract.py:442
        // assert self.box_map[key_0].bytes.length == value.bytes.length
        v-load box_0#0                                                                                 box_0#0
        box_len                                                                                        value%0#0,check%0#0
        v-store check%0#0                                                                              value%0#0
        v-store value%0#0
        v-load value%0#0                                                                               value%0#0
        int 6                                                                                          value%0#0,6
        ==                                                                                             tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                 tmp%1#0
        assert
        // box_storage/contract.py:437
        // key_1 = UInt64(1)
        int 1                                                                                          1
        // box_storage/contract.py:446
        // assert self.box_map.get(key_1, default=String("default")) == String("default")
        itob                                                                                           encoded_value%5#0
        v-store encoded_value%5#0
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_get                                                                                        maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       maybe_value%0#0
        v-store maybe_value%0#0
        byte "default"                                                                                 "default"
        v-load maybe_value%0#0                                                                         "default",maybe_value%0#0
        v-load maybe_exists%0#0                                                                        "default",maybe_value%0#0,maybe_exists%0#0
        select                                                                                         state_get%0#0
        v-store state_get%0#0
        v-load state_get%0#0                                                                           state_get%0#0
        byte "default"                                                                                 state_get%0#0,"default"
        ==                                                                                             tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        assert
        // box_storage/contract.py:447
        // value, exists = self.box_map.maybe(key_1)
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_len                                                                                        value#1,exists#0
        v-store exists#0                                                                               value#1
        v-store value#1
        // box_storage/contract.py:448
        // assert not exists
        v-load exists#0                                                                                exists#0
        !                                                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        assert
        // box_storage/contract.py:454
        // tmp_box_map[key_1] = String("hello")
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_del                                                                                        {box_del}
        pop 1
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        byte "hello"                                                                                   encoded_value%5#0,"hello"
        box_put
        // box_storage/contract.py:456
        // del tmp_box_map[key_1]
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:434
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.box_map_set[routing]() -> void:
subroutine box_map_set:
    box_map_set_block@0:
        // box_storage/contract.py:458
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           key#0
        v-store key#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(len+utf8[])%0#0
        v-store reinterpret_Encoded(len+utf8[])%0#0
        v-load reinterpret_Encoded(len+utf8[])%0#0                                                     reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                                    value#0
        v-store value#0
        // box_storage/contract.py:460
        // self.box_map[key] = value
        v-load key#0                                                                                   key#0
        itob                                                                                           encoded_value%0#0
        v-store encoded_value%0#0
        v-load encoded_value%0#0                                                                       encoded_value%0#0
        box_del                                                                                        {box_del}
        pop 1
        v-load encoded_value%0#0                                                                       encoded_value%0#0
        v-load value#0                                                                                 encoded_value%0#0,value#0
        box_put
        // box_storage/contract.py:458
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.box_map_get[routing]() -> void:
subroutine box_map_get:
    box_map_get_block@0:
        // box_storage/contract.py:462
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           key#0
        v-store key#0
        // box_storage/contract.py:464
        // return self.box_map[key]
        v-load key#0                                                                                   key#0
        itob                                                                                           encoded_value%0#0
        v-store encoded_value%0#0
        v-load encoded_value%0#0                                                                       encoded_value%0#0
        box_get                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check self.box_map entry exists
        // box_storage/contract.py:462
        // @arc4.abimethod
        v-load aggregate%box_get%0#0                                                                   aggregate%box_get%0#0
        len                                                                                            aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                                                                    aggregate%length%0#0
        itob                                                                                           aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                                                                  aggregate%as_bytes%0#0
        extract 6 2                                                                                    aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                                                             aggregate%length_uint16%0#0
        v-load aggregate%box_get%0#0                                                                   aggregate%length_uint16%0#0,aggregate%box_get%0#0
        concat                                                                                         aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%encoded_value%0#0                                                             0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.box_map_del[routing]() -> void:
subroutine box_map_del:
    box_map_del_block@0:
        // box_storage/contract.py:466
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           key#0
        v-store key#0
        // box_storage/contract.py:468
        // del self.box_map[key]
        v-load key#0                                                                                   key#0
        itob                                                                                           encoded_value%0#0
        v-store encoded_value%0#0
        v-load encoded_value%0#0                                                                       encoded_value%0#0
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:466
        // @arc4.abimethod
        int 1                                                                                          1
        return


// examples.box_storage.contract.BoxContract.box_map_exists[routing]() -> void:
subroutine box_map_exists:
    box_map_exists_block@0:
        // box_storage/contract.py:470
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           key#0
        v-store key#0
        // box_storage/contract.py:472
        // return key in self.box_map
        v-load key#0                                                                                   key#0
        itob                                                                                           encoded_value%0#0
        v-store encoded_value%0#0
        v-load encoded_value%0#0                                                                       encoded_value%0#0
        box_len                                                                                        _%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       _%0#0
        v-store _%0#0
        // box_storage/contract.py:470
        // @arc4.abimethod
        byte 0x00                                                                                      0x00
        int 0                                                                                          0x00,0
        v-load maybe_exists%0#0                                                                        0x00,0,maybe_exists%0#0
        setbit                                                                                         aggregate%encoded_bool%0#0
        v-store aggregate%encoded_bool%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%encoded_bool%0#0                                                              0x151f7c75,aggregate%encoded_bool%0#0
        concat                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        log
        int 1                                                                                          1
        return


