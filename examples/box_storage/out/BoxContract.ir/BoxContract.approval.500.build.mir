// Op                                                                                                  Stack (out)
// examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                                 tmp%0#3
        v-store tmp%0#3
        v-load tmp%0#3                                                                                 tmp%0#3
        bz main_bare_routing@32 ; b main_abi_routing@4

    main_abi_routing@4:
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                         tmp%2#0
        v-store tmp%2#0
        method set_boxes(uint64,byte[],string)void                                                     Method(set_boxes(uint64,byte[],string)void)
        method check_keys()void                                                                        Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void)
        method create_many_ints()void                                                                  Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void)
        method set_many_ints(uint64,uint64)void                                                        Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void)
        method sum_many_ints()uint64                                                                   Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64)
        method delete_boxes()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void)
        method indirect_extract_and_replace()void                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void)
        method read_boxes()(uint64,byte[],string,uint64)                                               Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64))
        method boxes_exist()(bool,bool,bool,bool)                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool))
        method create_dynamic_arr_struct()void                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void)
        method delete_dynamic_arr_struct()void                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void)
        method append_dynamic_arr_struct(uint64)uint64                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64)
        method pop_dynamic_arr_struct(uint64)uint64                                                    Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64)
        method sum_dynamic_arr_struct()uint64                                                          Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64)
        method create_dynamic_box()void                                                                Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void)
        method delete_dynamic_box()void                                                                Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void)
        method append_dynamic_box(uint64)uint64                                                        Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64)
        method pop_dynamic_box(uint64)uint64                                                           Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64)
        method sum_dynamic_box()uint64                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64)
        method slice_box()void                                                                         Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void)
        method arc4_box()void                                                                          Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void)
        method test_box_ref()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void)
        method box_map_test()void                                                                      Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void)
        method box_map_set(uint64,string)void                                                          Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void)
        method box_map_get(uint64)string                                                               Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string)
        method box_map_del(uint64)void                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void)
        method box_map_exists(uint64)bool                                                              Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void),Method(box_map_exists(uint64)bool)
        v-load tmp%2#0                                                                                 Method(set_boxes(uint64,byte[],string)void),Method(check_keys()void),Method(create_many_ints()void),Method(set_many_ints(uint64,uint64)void),Method(sum_many_ints()uint64),Method(delete_boxes()void),Method(indirect_extract_and_replace()void),Method(read_boxes()(uint64,byte[],string,uint64)),Method(boxes_exist()(bool,bool,bool,bool)),Method(create_dynamic_arr_struct()void),Method(delete_dynamic_arr_struct()void),Method(append_dynamic_arr_struct(uint64)uint64),Method(pop_dynamic_arr_struct(uint64)uint64),Method(sum_dynamic_arr_struct()uint64),Method(create_dynamic_box()void),Method(delete_dynamic_box()void),Method(append_dynamic_box(uint64)uint64),Method(pop_dynamic_box(uint64)uint64),Method(sum_dynamic_box()uint64),Method(slice_box()void),Method(arc4_box()void),Method(test_box_ref()void),Method(box_map_test()void),Method(box_map_set(uint64,string)void),Method(box_map_get(uint64)string),Method(box_map_del(uint64)void),Method(box_map_exists(uint64)bool),tmp%2#0
        match main_set_boxes_route@5 main_check_keys_route@6 main_create_many_ints_route@7 main_set_many_ints_route@8 main_sum_many_ints_route@9 main_delete_boxes_route@10 main_indirect_extract_and_replace_route@11 main_read_boxes_route@12 main_boxes_exist_route@13 main_create_dynamic_arr_struct_route@14 main_delete_dynamic_arr_struct_route@15 main_append_dynamic_arr_struct_route@16 main_pop_dynamic_arr_struct_route@17 main_sum_dynamic_arr_struct_route@18 main_create_dynamic_box_route@19 main_delete_dynamic_box_route@20 main_append_dynamic_box_route@21 main_pop_dynamic_box_route@22 main_sum_dynamic_box_route@23 main_slice_box_route@24 main_arc4_box_route@25 main_test_box_ref_route@26 main_box_map_test_route@27 main_box_map_set_route@28 main_box_map_get_route@29 main_box_map_del_route@30 main_box_map_exists_route@31 ; b main_after_if_else@34 

    main_set_boxes_route@5:
        // box_storage/contract.py:76
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        !                                                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                         reinterpret_Encoded(uint64)%0#0
        btoi                                                                                           tmp%7#0
        v-store tmp%7#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        txna ApplicationArgs 3                                                                         reinterpret_Encoded(len+utf8[])%0#0
        v-store reinterpret_Encoded(len+utf8[])%0#0
        // box_storage/contract.py:76
        // @arc4.abimethod
        v-load tmp%7#0                                                                                 tmp%7#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                                    tmp%7#0,reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+utf8[])%0#0                                                     tmp%7#0,reinterpret_Encoded(len+uint8[])%0#0,reinterpret_Encoded(len+utf8[])%0#0
        callsub set_boxes
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_check_keys_route@6:
        // box_storage/contract.py:112
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        !                                                                                              tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                                 tmp%9#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        assert // can only call when not creating
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_create_many_ints_route@7:
        // box_storage/contract.py:119
        // @arc4.abimethod()
        txn OnCompletion                                                                               tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                                tmp%12#0
        !                                                                                              tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                                tmp%13#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                                tmp%14#0
        assert // can only call when not creating
        callsub create_many_ints
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_set_many_ints_route@8:
        // box_storage/contract.py:123
        // @arc4.abimethod()
        txn OnCompletion                                                                               tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        !                                                                                              tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                                tmp%18#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                         reinterpret_Encoded(uint64)%1#0
        btoi                                                                                           tmp%20#0
        v-store tmp%20#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(uint64)%2#0
        v-store reinterpret_Encoded(uint64)%2#0
        v-load reinterpret_Encoded(uint64)%2#0                                                         reinterpret_Encoded(uint64)%2#0
        btoi                                                                                           tmp%21#0
        v-store tmp%21#0
        // box_storage/contract.py:123
        // @arc4.abimethod()
        v-load tmp%20#0                                                                                tmp%20#0
        v-load tmp%21#0                                                                                tmp%20#0,tmp%21#0
        callsub set_many_ints
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_sum_many_ints_route@9:
        // box_storage/contract.py:127
        // @arc4.abimethod()
        txn OnCompletion                                                                               tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                                                tmp%22#0
        !                                                                                              tmp%23#0
        v-store tmp%23#0
        v-load tmp%23#0                                                                                tmp%23#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                                                tmp%24#0
        assert // can only call when not creating
        callsub sum_many_ints                                                                          tmp%26#0
        v-store tmp%26#0
        v-load tmp%26#0                                                                                tmp%26#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                              0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                         tmp%28#0
        v-store tmp%28#0
        v-load tmp%28#0                                                                                tmp%28#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_delete_boxes_route@10:
        // box_storage/contract.py:135
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%29#0
        v-store tmp%29#0
        v-load tmp%29#0                                                                                tmp%29#0
        !                                                                                              tmp%30#0
        v-store tmp%30#0
        v-load tmp%30#0                                                                                tmp%30#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%31#0
        v-store tmp%31#0
        v-load tmp%31#0                                                                                tmp%31#0
        assert // can only call when not creating
        callsub delete_boxes
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_indirect_extract_and_replace_route@11:
        // box_storage/contract.py:148
        // @arc4.abimethod()
        txn OnCompletion                                                                               tmp%33#0
        v-store tmp%33#0
        v-load tmp%33#0                                                                                tmp%33#0
        !                                                                                              tmp%34#0
        v-store tmp%34#0
        v-load tmp%34#0                                                                                tmp%34#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%35#0
        v-store tmp%35#0
        v-load tmp%35#0                                                                                tmp%35#0
        assert // can only call when not creating
        callsub indirect_extract_and_replace
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_read_boxes_route@12:
        // box_storage/contract.py:154
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%37#0
        v-store tmp%37#0
        v-load tmp%37#0                                                                                tmp%37#0
        !                                                                                              tmp%38#0
        v-store tmp%38#0
        v-load tmp%38#0                                                                                tmp%38#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%39#0
        v-store tmp%39#0
        v-load tmp%39#0                                                                                tmp%39#0
        assert // can only call when not creating
        callsub read_boxes                                                                             tmp%41#0,tmp%42#0,tmp%43#0,tmp%44#0
        v-store tmp%44#0                                                                               tmp%41#0,tmp%42#0,tmp%43#0
        v-store tmp%43#0                                                                               tmp%41#0,tmp%42#0
        v-store tmp%42#0                                                                               tmp%41#0
        v-store tmp%41#0
        v-load tmp%41#0                                                                                tmp%41#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load tmp%42#0                                                                                tmp%42#0
        len                                                                                            aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                                                                    aggregate%length%0#0
        itob                                                                                           aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                                                                  aggregate%as_bytes%0#0
        extract 6 2                                                                                    aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                                                             aggregate%length_uint16%0#0
        v-load tmp%42#0                                                                                aggregate%length_uint16%0#0,tmp%42#0
        concat                                                                                         aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%val_as_bytes%1#0
        byte 0x0014                                                                                    aggregate%val_as_bytes%1#0,0x0014
        concat                                                                                         aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load aggregate%encoded_value%0#0                                                             aggregate%encoded_value%0#0
        len                                                                                            aggregate%data_length%0#0
        v-store aggregate%data_length%0#0
        int 20                                                                                         20
        v-load aggregate%data_length%0#0                                                               20,aggregate%data_length%0#0
        +                                                                                              aggregate%current_tail_offset%0#0
        v-store aggregate%current_tail_offset%0#0
        v-load aggregate%current_tail_offset%0#0                                                       aggregate%current_tail_offset%0#0
        itob                                                                                           aggregate%as_bytes%2#0
        v-store aggregate%as_bytes%2#0
        v-load aggregate%as_bytes%2#0                                                                  aggregate%as_bytes%2#0
        extract 6 2                                                                                    aggregate%offset_as_uint16%1#0
        v-store aggregate%offset_as_uint16%1#0
        v-load aggregate%head%1#0                                                                      aggregate%head%1#0
        v-load aggregate%offset_as_uint16%1#0                                                          aggregate%head%1#0,aggregate%offset_as_uint16%1#0
        concat                                                                                         aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load tmp%44#0                                                                                tmp%44#0
        itob                                                                                           aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load aggregate%head%2#0                                                                      aggregate%head%2#0
        v-load aggregate%val_as_bytes%2#0                                                              aggregate%head%2#0,aggregate%val_as_bytes%2#0
        concat                                                                                         aggregate%head%3#0
        v-store aggregate%head%3#0
        v-load aggregate%head%3#0                                                                      aggregate%head%3#0
        v-load aggregate%encoded_value%0#0                                                             aggregate%head%3#0,aggregate%encoded_value%0#0
        concat                                                                                         aggregate%concat%0#0
        v-store aggregate%concat%0#0
        v-load aggregate%concat%0#0                                                                    aggregate%concat%0#0
        v-load tmp%43#0                                                                                aggregate%concat%0#0,tmp%43#0
        concat                                                                                         aggregate%concat%1#0
        v-store aggregate%concat%1#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%concat%1#0                                                                    0x151f7c75,aggregate%concat%1#0
        concat                                                                                         tmp%46#0
        v-store tmp%46#0
        v-load tmp%46#0                                                                                tmp%46#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_boxes_exist_route@13:
        // box_storage/contract.py:163
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%47#0
        v-store tmp%47#0
        v-load tmp%47#0                                                                                tmp%47#0
        !                                                                                              tmp%48#0
        v-store tmp%48#0
        v-load tmp%48#0                                                                                tmp%48#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%49#0
        v-store tmp%49#0
        v-load tmp%49#0                                                                                tmp%49#0
        assert // can only call when not creating
        callsub boxes_exist                                                                            tmp%51#0,tmp%52#0,tmp%53#0,tmp%54#0
        v-store tmp%54#0                                                                               tmp%51#0,tmp%52#0,tmp%53#0
        v-store tmp%53#0                                                                               tmp%51#0,tmp%52#0
        v-store tmp%52#0                                                                               tmp%51#0
        v-store tmp%51#0
        byte 0x00                                                                                      0x00
        int 0                                                                                          0x00,0
        v-load tmp%51#0                                                                                0x00,0,tmp%51#0
        setbit                                                                                         aggregate%encoded_bool%0#0
        v-store aggregate%encoded_bool%0#0
        v-load aggregate%encoded_bool%0#0                                                              aggregate%encoded_bool%0#0
        int 1                                                                                          aggregate%encoded_bool%0#0,1
        v-load tmp%52#0                                                                                aggregate%encoded_bool%0#0,1,tmp%52#0
        setbit                                                                                         aggregate%set_bit%0#0
        v-store aggregate%set_bit%0#0
        v-load aggregate%set_bit%0#0                                                                   aggregate%set_bit%0#0
        int 2                                                                                          aggregate%set_bit%0#0,2
        v-load tmp%53#0                                                                                aggregate%set_bit%0#0,2,tmp%53#0
        setbit                                                                                         aggregate%set_bit%1#0
        v-store aggregate%set_bit%1#0
        v-load aggregate%set_bit%1#0                                                                   aggregate%set_bit%1#0
        int 3                                                                                          aggregate%set_bit%1#0,3
        v-load tmp%54#0                                                                                aggregate%set_bit%1#0,3,tmp%54#0
        setbit                                                                                         aggregate%set_bit%2#0
        v-store aggregate%set_bit%2#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%set_bit%2#0                                                                   0x151f7c75,aggregate%set_bit%2#0
        concat                                                                                         tmp%56#0
        v-store tmp%56#0
        v-load tmp%56#0                                                                                tmp%56#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_create_dynamic_arr_struct_route@14:
        // box_storage/contract.py:167
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%57#0
        v-store tmp%57#0
        v-load tmp%57#0                                                                                tmp%57#0
        !                                                                                              tmp%58#0
        v-store tmp%58#0
        v-load tmp%58#0                                                                                tmp%58#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%59#0
        v-store tmp%59#0
        v-load tmp%59#0                                                                                tmp%59#0
        assert // can only call when not creating
        callsub create_dynamic_arr_struct
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_delete_dynamic_arr_struct_route@15:
        // box_storage/contract.py:176
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%61#0
        v-store tmp%61#0
        v-load tmp%61#0                                                                                tmp%61#0
        !                                                                                              tmp%62#0
        v-store tmp%62#0
        v-load tmp%62#0                                                                                tmp%62#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%63#0
        v-store tmp%63#0
        v-load tmp%63#0                                                                                tmp%63#0
        assert // can only call when not creating
        callsub delete_dynamic_arr_struct
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_append_dynamic_arr_struct_route@16:
        // box_storage/contract.py:180
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%65#0
        v-store tmp%65#0
        v-load tmp%65#0                                                                                tmp%65#0
        !                                                                                              tmp%66#0
        v-store tmp%66#0
        v-load tmp%66#0                                                                                tmp%66#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%67#0
        v-store tmp%67#0
        v-load tmp%67#0                                                                                tmp%67#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        v-load reinterpret_Encoded(uint64)%3#0                                                         reinterpret_Encoded(uint64)%3#0
        btoi                                                                                           tmp%69#0
        v-store tmp%69#0
        // box_storage/contract.py:180
        // @arc4.abimethod
        v-load tmp%69#0                                                                                tmp%69#0
        callsub append_dynamic_arr_struct                                                              tmp%70#0
        v-store tmp%70#0
        v-load tmp%70#0                                                                                tmp%70#0
        itob                                                                                           aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%3#0                                                              0x151f7c75,aggregate%val_as_bytes%3#0
        concat                                                                                         tmp%72#0
        v-store tmp%72#0
        v-load tmp%72#0                                                                                tmp%72#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_pop_dynamic_arr_struct_route@17:
        // box_storage/contract.py:208
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%73#0
        v-store tmp%73#0
        v-load tmp%73#0                                                                                tmp%73#0
        !                                                                                              tmp%74#0
        v-store tmp%74#0
        v-load tmp%74#0                                                                                tmp%74#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%75#0
        v-store tmp%75#0
        v-load tmp%75#0                                                                                tmp%75#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%4#0
        v-store reinterpret_Encoded(uint64)%4#0
        v-load reinterpret_Encoded(uint64)%4#0                                                         reinterpret_Encoded(uint64)%4#0
        btoi                                                                                           tmp%77#0
        v-store tmp%77#0
        // box_storage/contract.py:208
        // @arc4.abimethod
        v-load tmp%77#0                                                                                tmp%77#0
        callsub pop_dynamic_arr_struct                                                                 tmp%78#0
        v-store tmp%78#0
        v-load tmp%78#0                                                                                tmp%78#0
        itob                                                                                           aggregate%val_as_bytes%4#0
        v-store aggregate%val_as_bytes%4#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%4#0                                                              0x151f7c75,aggregate%val_as_bytes%4#0
        concat                                                                                         tmp%80#0
        v-store tmp%80#0
        v-load tmp%80#0                                                                                tmp%80#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_sum_dynamic_arr_struct_route@18:
        // box_storage/contract.py:229
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%81#0
        v-store tmp%81#0
        v-load tmp%81#0                                                                                tmp%81#0
        !                                                                                              tmp%82#0
        v-store tmp%82#0
        v-load tmp%82#0                                                                                tmp%82#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%83#0
        v-store tmp%83#0
        v-load tmp%83#0                                                                                tmp%83#0
        assert // can only call when not creating
        callsub sum_dynamic_arr_struct                                                                 tmp%85#0
        v-store tmp%85#0
        v-load tmp%85#0                                                                                tmp%85#0
        itob                                                                                           aggregate%val_as_bytes%5#0
        v-store aggregate%val_as_bytes%5#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%5#0                                                              0x151f7c75,aggregate%val_as_bytes%5#0
        concat                                                                                         tmp%87#0
        v-store tmp%87#0
        v-load tmp%87#0                                                                                tmp%87#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_create_dynamic_box_route@19:
        // box_storage/contract.py:240
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%88#0
        v-store tmp%88#0
        v-load tmp%88#0                                                                                tmp%88#0
        !                                                                                              tmp%89#0
        v-store tmp%89#0
        v-load tmp%89#0                                                                                tmp%89#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%90#0
        v-store tmp%90#0
        v-load tmp%90#0                                                                                tmp%90#0
        assert // can only call when not creating
        callsub create_dynamic_box
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_delete_dynamic_box_route@20:
        // box_storage/contract.py:244
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%92#0
        v-store tmp%92#0
        v-load tmp%92#0                                                                                tmp%92#0
        !                                                                                              tmp%93#0
        v-store tmp%93#0
        v-load tmp%93#0                                                                                tmp%93#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%94#0
        v-store tmp%94#0
        v-load tmp%94#0                                                                                tmp%94#0
        assert // can only call when not creating
        callsub delete_dynamic_box
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_append_dynamic_box_route@21:
        // box_storage/contract.py:248
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%96#0
        v-store tmp%96#0
        v-load tmp%96#0                                                                                tmp%96#0
        !                                                                                              tmp%97#0
        v-store tmp%97#0
        v-load tmp%97#0                                                                                tmp%97#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%98#0
        v-store tmp%98#0
        v-load tmp%98#0                                                                                tmp%98#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%5#0
        v-store reinterpret_Encoded(uint64)%5#0
        v-load reinterpret_Encoded(uint64)%5#0                                                         reinterpret_Encoded(uint64)%5#0
        btoi                                                                                           tmp%100#0
        v-store tmp%100#0
        // box_storage/contract.py:248
        // @arc4.abimethod
        v-load tmp%100#0                                                                               tmp%100#0
        callsub append_dynamic_box                                                                     tmp%101#0
        v-store tmp%101#0
        v-load tmp%101#0                                                                               tmp%101#0
        itob                                                                                           aggregate%val_as_bytes%6#0
        v-store aggregate%val_as_bytes%6#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%6#0                                                              0x151f7c75,aggregate%val_as_bytes%6#0
        concat                                                                                         tmp%103#0
        v-store tmp%103#0
        v-load tmp%103#0                                                                               tmp%103#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_pop_dynamic_box_route@22:
        // box_storage/contract.py:263
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%104#0
        v-store tmp%104#0
        v-load tmp%104#0                                                                               tmp%104#0
        !                                                                                              tmp%105#0
        v-store tmp%105#0
        v-load tmp%105#0                                                                               tmp%105#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%106#0
        v-store tmp%106#0
        v-load tmp%106#0                                                                               tmp%106#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%6#0
        v-store reinterpret_Encoded(uint64)%6#0
        v-load reinterpret_Encoded(uint64)%6#0                                                         reinterpret_Encoded(uint64)%6#0
        btoi                                                                                           tmp%108#0
        v-store tmp%108#0
        // box_storage/contract.py:263
        // @arc4.abimethod
        v-load tmp%108#0                                                                               tmp%108#0
        callsub pop_dynamic_box                                                                        tmp%109#0
        v-store tmp%109#0
        v-load tmp%109#0                                                                               tmp%109#0
        itob                                                                                           aggregate%val_as_bytes%7#0
        v-store aggregate%val_as_bytes%7#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%7#0                                                              0x151f7c75,aggregate%val_as_bytes%7#0
        concat                                                                                         tmp%111#0
        v-store tmp%111#0
        v-load tmp%111#0                                                                               tmp%111#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_sum_dynamic_box_route@23:
        // box_storage/contract.py:274
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%112#0
        v-store tmp%112#0
        v-load tmp%112#0                                                                               tmp%112#0
        !                                                                                              tmp%113#0
        v-store tmp%113#0
        v-load tmp%113#0                                                                               tmp%113#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%114#0
        v-store tmp%114#0
        v-load tmp%114#0                                                                               tmp%114#0
        assert // can only call when not creating
        callsub sum_dynamic_box                                                                        tmp%116#0
        v-store tmp%116#0
        v-load tmp%116#0                                                                               tmp%116#0
        itob                                                                                           aggregate%val_as_bytes%8#0
        v-store aggregate%val_as_bytes%8#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%val_as_bytes%8#0                                                              0x151f7c75,aggregate%val_as_bytes%8#0
        concat                                                                                         tmp%118#0
        v-store tmp%118#0
        v-load tmp%118#0                                                                               tmp%118#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_slice_box_route@24:
        // box_storage/contract.py:281
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%119#0
        v-store tmp%119#0
        v-load tmp%119#0                                                                               tmp%119#0
        !                                                                                              tmp%120#0
        v-store tmp%120#0
        v-load tmp%120#0                                                                               tmp%120#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%121#0
        v-store tmp%121#0
        v-load tmp%121#0                                                                               tmp%121#0
        assert // can only call when not creating
        callsub slice_box
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_arc4_box_route@25:
        // box_storage/contract.py:290
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%123#0
        v-store tmp%123#0
        v-load tmp%123#0                                                                               tmp%123#0
        !                                                                                              tmp%124#0
        v-store tmp%124#0
        v-load tmp%124#0                                                                               tmp%124#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%125#0
        v-store tmp%125#0
        v-load tmp%125#0                                                                               tmp%125#0
        assert // can only call when not creating
        callsub arc4_box
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_test_box_ref_route@26:
        // box_storage/contract.py:300
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%127#0
        v-store tmp%127#0
        v-load tmp%127#0                                                                               tmp%127#0
        !                                                                                              tmp%128#0
        v-store tmp%128#0
        v-load tmp%128#0                                                                               tmp%128#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%129#0
        v-store tmp%129#0
        v-load tmp%129#0                                                                               tmp%129#0
        assert // can only call when not creating
        callsub test_box_ref
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_box_map_test_route@27:
        // box_storage/contract.py:348
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%131#0
        v-store tmp%131#0
        v-load tmp%131#0                                                                               tmp%131#0
        !                                                                                              tmp%132#0
        v-store tmp%132#0
        v-load tmp%132#0                                                                               tmp%132#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%133#0
        v-store tmp%133#0
        v-load tmp%133#0                                                                               tmp%133#0
        assert // can only call when not creating
        callsub box_map_test
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_box_map_set_route@28:
        // box_storage/contract.py:372
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%135#0
        v-store tmp%135#0
        v-load tmp%135#0                                                                               tmp%135#0
        !                                                                                              tmp%136#0
        v-store tmp%136#0
        v-load tmp%136#0                                                                               tmp%136#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%137#0
        v-store tmp%137#0
        v-load tmp%137#0                                                                               tmp%137#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%7#0
        v-store reinterpret_Encoded(uint64)%7#0
        v-load reinterpret_Encoded(uint64)%7#0                                                         reinterpret_Encoded(uint64)%7#0
        btoi                                                                                           tmp%139#0
        v-store tmp%139#0
        txna ApplicationArgs 2                                                                         reinterpret_Encoded(len+utf8[])%1#0
        v-store reinterpret_Encoded(len+utf8[])%1#0
        v-load reinterpret_Encoded(len+utf8[])%1#0                                                     reinterpret_Encoded(len+utf8[])%1#0
        extract 2 0                                                                                    tmp%140#0
        v-store tmp%140#0
        // box_storage/contract.py:372
        // @arc4.abimethod
        v-load tmp%139#0                                                                               tmp%139#0
        v-load tmp%140#0                                                                               tmp%139#0,tmp%140#0
        callsub box_map_set
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_box_map_get_route@29:
        // box_storage/contract.py:376
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%141#0
        v-store tmp%141#0
        v-load tmp%141#0                                                                               tmp%141#0
        !                                                                                              tmp%142#0
        v-store tmp%142#0
        v-load tmp%142#0                                                                               tmp%142#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%143#0
        v-store tmp%143#0
        v-load tmp%143#0                                                                               tmp%143#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%8#0
        v-store reinterpret_Encoded(uint64)%8#0
        v-load reinterpret_Encoded(uint64)%8#0                                                         reinterpret_Encoded(uint64)%8#0
        btoi                                                                                           tmp%145#0
        v-store tmp%145#0
        // box_storage/contract.py:376
        // @arc4.abimethod
        v-load tmp%145#0                                                                               tmp%145#0
        callsub box_map_get                                                                            tmp%146#0
        v-store tmp%146#0
        v-load tmp%146#0                                                                               tmp%146#0
        len                                                                                            aggregate%length%1#0
        v-store aggregate%length%1#0
        v-load aggregate%length%1#0                                                                    aggregate%length%1#0
        itob                                                                                           aggregate%as_bytes%3#0
        v-store aggregate%as_bytes%3#0
        v-load aggregate%as_bytes%3#0                                                                  aggregate%as_bytes%3#0
        extract 6 2                                                                                    aggregate%length_uint16%1#0
        v-store aggregate%length_uint16%1#0
        v-load aggregate%length_uint16%1#0                                                             aggregate%length_uint16%1#0
        v-load tmp%146#0                                                                               aggregate%length_uint16%1#0,tmp%146#0
        concat                                                                                         aggregate%encoded_value%1#0
        v-store aggregate%encoded_value%1#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%encoded_value%1#0                                                             0x151f7c75,aggregate%encoded_value%1#0
        concat                                                                                         tmp%148#0
        v-store tmp%148#0
        v-load tmp%148#0                                                                               tmp%148#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_box_map_del_route@30:
        // box_storage/contract.py:380
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%149#0
        v-store tmp%149#0
        v-load tmp%149#0                                                                               tmp%149#0
        !                                                                                              tmp%150#0
        v-store tmp%150#0
        v-load tmp%150#0                                                                               tmp%150#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%151#0
        v-store tmp%151#0
        v-load tmp%151#0                                                                               tmp%151#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%9#0
        v-store reinterpret_Encoded(uint64)%9#0
        v-load reinterpret_Encoded(uint64)%9#0                                                         reinterpret_Encoded(uint64)%9#0
        btoi                                                                                           tmp%153#0
        v-store tmp%153#0
        // box_storage/contract.py:380
        // @arc4.abimethod
        v-load tmp%153#0                                                                               tmp%153#0
        callsub box_map_del
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_box_map_exists_route@31:
        // box_storage/contract.py:384
        // @arc4.abimethod
        txn OnCompletion                                                                               tmp%154#0
        v-store tmp%154#0
        v-load tmp%154#0                                                                               tmp%154#0
        !                                                                                              tmp%155#0
        v-store tmp%155#0
        v-load tmp%155#0                                                                               tmp%155#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                              tmp%156#0
        v-store tmp%156#0
        v-load tmp%156#0                                                                               tmp%156#0
        assert // can only call when not creating
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                         reinterpret_Encoded(uint64)%10#0
        v-store reinterpret_Encoded(uint64)%10#0
        v-load reinterpret_Encoded(uint64)%10#0                                                        reinterpret_Encoded(uint64)%10#0
        btoi                                                                                           tmp%158#0
        v-store tmp%158#0
        // box_storage/contract.py:384
        // @arc4.abimethod
        v-load tmp%158#0                                                                               tmp%158#0
        callsub box_map_exists                                                                         tmp%159#0
        v-store tmp%159#0
        byte 0x00                                                                                      0x00
        int 0                                                                                          0x00,0
        v-load tmp%159#0                                                                               0x00,0,tmp%159#0
        setbit                                                                                         aggregate%encoded_bool%1#0
        v-store aggregate%encoded_bool%1#0
        byte 0x151f7c75                                                                                0x151f7c75
        v-load aggregate%encoded_bool%1#0                                                              0x151f7c75,aggregate%encoded_bool%1#0
        concat                                                                                         tmp%161#0
        v-store tmp%161#0
        v-load tmp%161#0                                                                               tmp%161#0
        log
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_bare_routing@32:
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        txn OnCompletion                                                                               tmp%162#0
        v-store tmp%162#0
        v-load tmp%162#0                                                                               tmp%162#0
        bz main___algopy_default_create@33 ; b main_after_if_else@34

    main___algopy_default_create@33:
        txn ApplicationID                                                                              tmp%163#0
        v-store tmp%163#0
        v-load tmp%163#0                                                                               tmp%163#0
        !                                                                                              tmp%164#0
        v-store tmp%164#0
        v-load tmp%164#0                                                                               tmp%164#0
        assert // can only call when creating
        int 1                                                                                          1
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_after_if_else@34:
        // box_storage/contract.py:62
        // class BoxContract(arc4.ARC4Contract):
        int 0                                                                                          0
        v-store examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0                      examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0
        v-store tmp%0#1
        b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35 

    main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@35:
        v-load tmp%0#1                                                                                 tmp%0#1
        return


// examples.box_storage.contract.BoxContract.set_boxes(a: uint64, b: bytes, c: bytes) -> void:
subroutine set_boxes:
    set_boxes_block@0:                                                                                 (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:78
        // self.box_a.value = a
        p-load a#0                                                                                     (𝕡) a#0,b#0,c#0 | a#0 (copy)
        itob                                                                                           (𝕡) a#0,b#0,c#0 | encoded_value%0#0
        v-store encoded_value%0#0                                                                      (𝕡) a#0,b#0,c#0 |
        byte "box_a"                                                                                   (𝕡) a#0,b#0,c#0 | "box_a"
        v-load encoded_value%0#0                                                                       (𝕡) a#0,b#0,c#0 | "box_a",encoded_value%0#0
        box_put                                                                                        (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:79
        // self.box_b.value = b.copy()
        byte "b"                                                                                       (𝕡) a#0,b#0,c#0 | "b"
        box_del                                                                                        (𝕡) a#0,b#0,c#0 | {box_del}
        pop 1                                                                                          (𝕡) a#0,b#0,c#0 |
        byte "b"                                                                                       (𝕡) a#0,b#0,c#0 | "b"
        p-load b#0                                                                                     (𝕡) a#0,b#0,c#0 | "b",b#0 (copy)
        box_put                                                                                        (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:80
        // self.box_c.value = c
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        box_del                                                                                        (𝕡) a#0,b#0,c#0 | {box_del}
        pop 1                                                                                          (𝕡) a#0,b#0,c#0 |
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        p-load c#0                                                                                     (𝕡) a#0,b#0,c#0 | 0x424f585f43,c#0 (copy)
        box_put                                                                                        (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:81
        // self.box_d.value = b.native
        p-load b#0                                                                                     (𝕡) a#0,b#0,c#0 | b#0 (copy)
        extract 2 0                                                                                    (𝕡) a#0,b#0,c#0 | tmp%0#0
        v-store tmp%0#0                                                                                (𝕡) a#0,b#0,c#0 |
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        box_del                                                                                        (𝕡) a#0,b#0,c#0 | {box_del}
        pop 1                                                                                          (𝕡) a#0,b#0,c#0 |
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        v-load tmp%0#0                                                                                 (𝕡) a#0,b#0,c#0 | "box_d",tmp%0#0
        box_put                                                                                        (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:82
        // self.box_large.create()
        byte "box_large"                                                                               (𝕡) a#0,b#0,c#0 | "box_large"
        int 6160                                                                                       (𝕡) a#0,b#0,c#0 | "box_large",6160
        box_create                                                                                     (𝕡) a#0,b#0,c#0 | {box_create}
        pop 1                                                                                          (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:83
        // self.box_large.value.e = UInt64(42)
        int 42                                                                                         (𝕡) a#0,b#0,c#0 | 42
        itob                                                                                           (𝕡) a#0,b#0,c#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                             (𝕡) a#0,b#0,c#0 |
        byte "box_large"                                                                               (𝕡) a#0,b#0,c#0 | "box_large"
        int 4096                                                                                       (𝕡) a#0,b#0,c#0 | "box_large",4096
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) a#0,b#0,c#0 | "box_large",4096,aggregate%val_as_bytes%0#0
        box_replace                                                                                    (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:84
        // self.box_large.ref.replace(size_of(Bytes1024) * 4, arc4.UInt64(42).bytes)
        byte "box_large"                                                                               (𝕡) a#0,b#0,c#0 | "box_large"
        int 4096                                                                                       (𝕡) a#0,b#0,c#0 | "box_large",4096
        byte 0x000000000000002a                                                                        (𝕡) a#0,b#0,c#0 | "box_large",4096,0x000000000000002a
        box_replace                                                                                    (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:87
        // assert self.box_b.value.length == b_value.length, "direct reference should match copy"
        byte "b"                                                                                       (𝕡) a#0,b#0,c#0 | "b"
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | "b",0
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | "b",0,2
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                    (𝕡) a#0,b#0,c#0 |
        v-load box%box_extract%0#0                                                                     (𝕡) a#0,b#0,c#0 | box%box_extract%0#0
        btoi                                                                                           (𝕡) a#0,b#0,c#0 | box%array_length%0#0
        v-store box%array_length%0#0                                                                   (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:86
        // b_value = self.box_b.value.copy()
        byte "b"                                                                                       (𝕡) a#0,b#0,c#0 | "b"
        // box_storage/contract.py:86-87
        // b_value = self.box_b.value.copy()
        // assert self.box_b.value.length == b_value.length, "direct reference should match copy"
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | "b",0
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | "b",0,2
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | box%box_extract%1#0
        v-store box%box_extract%1#0                                                                    (𝕡) a#0,b#0,c#0 |
        v-load box%box_extract%1#0                                                                     (𝕡) a#0,b#0,c#0 | box%box_extract%1#0
        btoi                                                                                           (𝕡) a#0,b#0,c#0 | box%array_length%1#0
        v-store box%array_length%1#0                                                                   (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:87
        // assert self.box_b.value.length == b_value.length, "direct reference should match copy"
        v-load box%array_length%0#0                                                                    (𝕡) a#0,b#0,c#0 | box%array_length%0#0
        v-load box%array_length%1#0                                                                    (𝕡) a#0,b#0,c#0 | box%array_length%0#0,box%array_length%1#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%4#0
        v-store tmp%4#0                                                                                (𝕡) a#0,b#0,c#0 |
        v-load tmp%4#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%4#0
        assert // direct reference should match copy                                                   (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:89
        // self.box_a.value += 3
        byte "box_a"                                                                                   (𝕡) a#0,b#0,c#0 | "box_a"
        box_get                                                                                        (𝕡) a#0,b#0,c#0 | aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  (𝕡) a#0,b#0,c#0 | aggregate%box_get%0#0
        v-store aggregate%box_get%0#0                                                                  (𝕡) a#0,b#0,c#0 |
        v-load aggregate%box_get%1#0                                                                   (𝕡) a#0,b#0,c#0 | aggregate%box_get%1#0
        assert // check self.box_a exists                                                              (𝕡) a#0,b#0,c#0 |
        v-load aggregate%box_get%0#0                                                                   (𝕡) a#0,b#0,c#0 | aggregate%box_get%0#0
        btoi                                                                                           (𝕡) a#0,b#0,c#0 | maybe_value_converted%0#0
        v-store maybe_value_converted%0#0                                                              (𝕡) a#0,b#0,c#0 |
        v-load maybe_value_converted%0#0                                                               (𝕡) a#0,b#0,c#0 | maybe_value_converted%0#0
        int 3                                                                                          (𝕡) a#0,b#0,c#0 | maybe_value_converted%0#0,3
        +                                                                                              (𝕡) a#0,b#0,c#0 | tmp%5#0
        v-store tmp%5#0                                                                                (𝕡) a#0,b#0,c#0 |
        v-load tmp%5#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%5#0
        itob                                                                                           (𝕡) a#0,b#0,c#0 | encoded_value%2#0
        v-store encoded_value%2#0                                                                      (𝕡) a#0,b#0,c#0 |
        byte "box_a"                                                                                   (𝕡) a#0,b#0,c#0 | "box_a"
        v-load encoded_value%2#0                                                                       (𝕡) a#0,b#0,c#0 | "box_a",encoded_value%2#0
        box_put                                                                                        (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:92
        // assert self.box_a.length == 8
        byte "box_a"                                                                                   (𝕡) a#0,b#0,c#0 | "box_a"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | value%0#0,check%0#0
        v-store check%0#0                                                                              (𝕡) a#0,b#0,c#0 | value%0#0
        v-store value%0#0                                                                              (𝕡) a#0,b#0,c#0 |
        v-load value%0#0                                                                               (𝕡) a#0,b#0,c#0 | value%0#0
        int 8                                                                                          (𝕡) a#0,b#0,c#0 | value%0#0,8
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%6#0
        v-store tmp%6#0                                                                                (𝕡) a#0,b#0,c#0 |
        v-load tmp%6#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%6#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:93
        // assert self.box_b.length == b.bytes.length
        byte "b"                                                                                       (𝕡) a#0,b#0,c#0 | "b"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | value%1#0,check%1#0
        v-store check%1#0                                                                              (𝕡) a#0,b#0,c#0 | value%1#0
        v-store value%1#0                                                                              (𝕡) a#0,b#0,c#0 |
        p-load b#0                                                                                     (𝕡) a#0,b#0,c#0 | b#0 (copy)
        len                                                                                            (𝕡) a#0,b#0,c#0 | tmp%7#0
        v-store tmp%7#0                                                                                (𝕡) a#0,b#0,c#0 |
        v-load value%1#0                                                                               (𝕡) a#0,b#0,c#0 | value%1#0
        v-load tmp%7#0                                                                                 (𝕡) a#0,b#0,c#0 | value%1#0,tmp%7#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%8#0
        v-store tmp%8#0                                                                                (𝕡) a#0,b#0,c#0 |
        v-load tmp%8#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%8#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:94
        // assert self.box_c.length == c.bytes.length
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | value%2#0,check%2#0
        v-store check%2#0                                                                              (𝕡) a#0,b#0,c#0 | value%2#0
        v-store value%2#0                                                                              (𝕡) a#0,b#0,c#0 |
        v-load check%2#0                                                                               (𝕡) a#0,b#0,c#0 | check%2#0
        assert // check self.box_c exists                                                              (𝕡) a#0,b#0,c#0 |
        p-load c#0                                                                                     (𝕡) a#0,b#0,c#0 | c#0 (copy)
        len                                                                                            (𝕡) a#0,b#0,c#0 | tmp%9#0
        v-store tmp%9#0                                                                                (𝕡) a#0,b#0,c#0 |
        v-load value%2#0                                                                               (𝕡) a#0,b#0,c#0 | value%2#0
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | value%2#0,tmp%9#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%10#0
        v-store tmp%10#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%10#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%10#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:95
        // assert self.box_d.length == b.native.length
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | value%3#0,check%3#0
        v-store check%3#0                                                                              (𝕡) a#0,b#0,c#0 | value%3#0
        v-store value%3#0                                                                              (𝕡) a#0,b#0,c#0 |
        v-load tmp%0#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%0#0
        len                                                                                            (𝕡) a#0,b#0,c#0 | tmp%12#0
        v-store tmp%12#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load value%3#0                                                                               (𝕡) a#0,b#0,c#0 | value%3#0
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | value%3#0,tmp%12#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%13#0
        v-store tmp%13#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%13#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%13#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:98
        // assert self.box_c.value.bytes[0] == c.bytes[0]
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | 0x424f585f43,0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 0x424f585f43,0,1
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%14#0
        v-store tmp%14#0                                                                               (𝕡) a#0,b#0,c#0 |
        p-load c#0                                                                                     (𝕡) a#0,b#0,c#0 | c#0 (copy)
        extract 0 1                                                                                    (𝕡) a#0,b#0,c#0 | extract%0#0
        v-store extract%0#0                                                                            (𝕡) a#0,b#0,c#0 |
        v-load tmp%14#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%14#0
        v-load extract%0#0                                                                             (𝕡) a#0,b#0,c#0 | tmp%14#0,extract%0#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%15#0
        v-store tmp%15#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%15#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%15#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:99
        // assert self.box_c.value.bytes[-1] == c.bytes[-1]
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%16#0,tmp%17#0
        v-store tmp%17#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%16#0
        v-store tmp%16#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%16#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%16#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%16#0,1
        -                                                                                              (𝕡) a#0,b#0,c#0 | tmp%18#0
        v-store tmp%18#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        v-load tmp%18#0                                                                                (𝕡) a#0,b#0,c#0 | 0x424f585f43,tmp%18#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 0x424f585f43,tmp%18#0,1
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%19#0
        v-store tmp%19#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%9#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%9#0,1
        -                                                                                              (𝕡) a#0,b#0,c#0 | tmp%21#0
        v-store tmp%21#0                                                                               (𝕡) a#0,b#0,c#0 |
        p-load c#0                                                                                     (𝕡) a#0,b#0,c#0 | c#0 (copy)
        v-load tmp%21#0                                                                                (𝕡) a#0,b#0,c#0 | c#0 (copy),tmp%21#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | c#0 (copy),tmp%21#0,1
        extract3                                                                                       (𝕡) a#0,b#0,c#0 | extract%1#0
        v-store extract%1#0                                                                            (𝕡) a#0,b#0,c#0 |
        v-load tmp%19#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%19#0
        v-load extract%1#0                                                                             (𝕡) a#0,b#0,c#0 | tmp%19#0,extract%1#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%22#0
        v-store tmp%22#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%22#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%22#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:100
        // assert self.box_c.value.bytes[:-1] == c.bytes[:-1]
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%23#0,tmp%24#0
        v-store tmp%24#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%23#0
        v-store tmp%23#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 1
        v-load tmp%23#0                                                                                (𝕡) a#0,b#0,c#0 | 1,tmp%23#0
        <                                                                                              (𝕡) a#0,b#0,c#0 | tmp%25#0
        v-store tmp%25#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%23#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%23#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%23#0,1
        v-load tmp%25#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%23#0,1,tmp%25#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | tmp%26#0
        v-store tmp%26#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%23#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%23#0
        v-load tmp%26#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%23#0,tmp%26#0
        -                                                                                              (𝕡) a#0,b#0,c#0 | tmp%27#0
        v-store tmp%27#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | 0x424f585f43,0
        v-load tmp%27#0                                                                                (𝕡) a#0,b#0,c#0 | 0x424f585f43,0,tmp%27#0
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%29#0
        v-store tmp%29#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 1
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | 1,tmp%9#0
        >=                                                                                             (𝕡) a#0,b#0,c#0 | is_out_of_bounds%0#0
        v-store is_out_of_bounds%0#0                                                                   (𝕡) a#0,b#0,c#0 |
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 1
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | 1,tmp%9#0
        v-load is_out_of_bounds%0#0                                                                    (𝕡) a#0,b#0,c#0 | 1,tmp%9#0,is_out_of_bounds%0#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | bounded_offset%0#0
        v-store bounded_offset%0#0                                                                     (𝕡) a#0,b#0,c#0 |
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%9#0
        v-load bounded_offset%0#0                                                                      (𝕡) a#0,b#0,c#0 | tmp%9#0,bounded_offset%0#0
        -                                                                                              (𝕡) a#0,b#0,c#0 | bounded_index%0#0
        v-store bounded_index%0#0                                                                      (𝕡) a#0,b#0,c#0 |
        p-load c#0                                                                                     (𝕡) a#0,b#0,c#0 | c#0 (copy)
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | c#0 (copy),0
        v-load bounded_index%0#0                                                                       (𝕡) a#0,b#0,c#0 | c#0 (copy),0,bounded_index%0#0
        substring3                                                                                     (𝕡) a#0,b#0,c#0 | tmp%30#0
        v-store tmp%30#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%29#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%29#0
        v-load tmp%30#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%29#0,tmp%30#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%31#0
        v-store tmp%31#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%31#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%31#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:101
        // assert self.box_c.value.bytes[:2] == c.bytes[:2]
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%32#0,tmp%33#0
        v-store tmp%33#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%32#0
        v-store tmp%32#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | 2
        v-load tmp%32#0                                                                                (𝕡) a#0,b#0,c#0 | 2,tmp%32#0
        <                                                                                              (𝕡) a#0,b#0,c#0 | tmp%34#0
        v-store tmp%34#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%32#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%32#0
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | tmp%32#0,2
        v-load tmp%34#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%32#0,2,tmp%34#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | tmp%35#0
        v-store tmp%35#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte 0x424f585f43                                                                              (𝕡) a#0,b#0,c#0 | 0x424f585f43
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | 0x424f585f43,0
        v-load tmp%35#0                                                                                (𝕡) a#0,b#0,c#0 | 0x424f585f43,0,tmp%35#0
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%37#0
        v-store tmp%37#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | 2
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | 2,tmp%9#0
        >=                                                                                             (𝕡) a#0,b#0,c#0 | is_out_of_bounds%1#0
        v-store is_out_of_bounds%1#0                                                                   (𝕡) a#0,b#0,c#0 |
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | 2
        v-load tmp%9#0                                                                                 (𝕡) a#0,b#0,c#0 | 2,tmp%9#0
        v-load is_out_of_bounds%1#0                                                                    (𝕡) a#0,b#0,c#0 | 2,tmp%9#0,is_out_of_bounds%1#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | bounded_index%1#0
        v-store bounded_index%1#0                                                                      (𝕡) a#0,b#0,c#0 |
        p-load c#0                                                                                     (𝕡) a#0,b#0,c#0 | c#0 (copy)
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | c#0 (copy),0
        v-load bounded_index%1#0                                                                       (𝕡) a#0,b#0,c#0 | c#0 (copy),0,bounded_index%1#0
        substring3                                                                                     (𝕡) a#0,b#0,c#0 | tmp%38#0
        v-store tmp%38#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%37#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%37#0
        v-load tmp%38#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%37#0,tmp%38#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%39#0
        v-store tmp%39#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%39#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%39#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:104
        // assert self.box_d.value[0] == b.native[0]
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | "box_d",0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | "box_d",0,1
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%40#0
        v-store tmp%40#0                                                                               (𝕡) a#0,b#0,c#0 |
        p-load b#0                                                                                     (𝕡) a#0,b#0,c#0 | b#0 (copy)
        extract 2 1                                                                                    (𝕡) a#0,b#0,c#0 | extract%2#0
        v-store extract%2#0                                                                            (𝕡) a#0,b#0,c#0 |
        v-load tmp%40#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%40#0
        v-load extract%2#0                                                                             (𝕡) a#0,b#0,c#0 | tmp%40#0,extract%2#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%42#0
        v-store tmp%42#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%42#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%42#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:105
        // assert self.box_d.value[-1] == b.native[-1]
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%43#0,tmp%44#0
        v-store tmp%44#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%43#0
        v-store tmp%43#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%43#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%43#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%43#0,1
        -                                                                                              (𝕡) a#0,b#0,c#0 | tmp%45#0
        v-store tmp%45#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        v-load tmp%45#0                                                                                (𝕡) a#0,b#0,c#0 | "box_d",tmp%45#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | "box_d",tmp%45#0,1
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%46#0
        v-store tmp%46#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%12#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%12#0,1
        -                                                                                              (𝕡) a#0,b#0,c#0 | tmp%49#0
        v-store tmp%49#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%0#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%0#0
        v-load tmp%49#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%0#0,tmp%49#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%0#0,tmp%49#0,1
        extract3                                                                                       (𝕡) a#0,b#0,c#0 | extract%3#0
        v-store extract%3#0                                                                            (𝕡) a#0,b#0,c#0 |
        v-load tmp%46#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%46#0
        v-load extract%3#0                                                                             (𝕡) a#0,b#0,c#0 | tmp%46#0,extract%3#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%50#0
        v-store tmp%50#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%50#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%50#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:106
        // assert self.box_d.value[:-1] == b.native[:-1]
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%51#0,tmp%52#0
        v-store tmp%52#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%51#0
        v-store tmp%51#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 1
        v-load tmp%51#0                                                                                (𝕡) a#0,b#0,c#0 | 1,tmp%51#0
        <                                                                                              (𝕡) a#0,b#0,c#0 | tmp%53#0
        v-store tmp%53#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%51#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%51#0
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | tmp%51#0,1
        v-load tmp%53#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%51#0,1,tmp%53#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | tmp%54#0
        v-store tmp%54#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%51#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%51#0
        v-load tmp%54#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%51#0,tmp%54#0
        -                                                                                              (𝕡) a#0,b#0,c#0 | tmp%55#0
        v-store tmp%55#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | "box_d",0
        v-load tmp%55#0                                                                                (𝕡) a#0,b#0,c#0 | "box_d",0,tmp%55#0
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%57#0
        v-store tmp%57#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 1
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | 1,tmp%12#0
        >=                                                                                             (𝕡) a#0,b#0,c#0 | is_out_of_bounds%2#0
        v-store is_out_of_bounds%2#0                                                                   (𝕡) a#0,b#0,c#0 |
        int 1                                                                                          (𝕡) a#0,b#0,c#0 | 1
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | 1,tmp%12#0
        v-load is_out_of_bounds%2#0                                                                    (𝕡) a#0,b#0,c#0 | 1,tmp%12#0,is_out_of_bounds%2#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | bounded_offset%1#0
        v-store bounded_offset%1#0                                                                     (𝕡) a#0,b#0,c#0 |
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%12#0
        v-load bounded_offset%1#0                                                                      (𝕡) a#0,b#0,c#0 | tmp%12#0,bounded_offset%1#0
        -                                                                                              (𝕡) a#0,b#0,c#0 | bounded_index%2#0
        v-store bounded_index%2#0                                                                      (𝕡) a#0,b#0,c#0 |
        v-load tmp%0#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%0#0
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | tmp%0#0,0
        v-load bounded_index%2#0                                                                       (𝕡) a#0,b#0,c#0 | tmp%0#0,0,bounded_index%2#0
        substring3                                                                                     (𝕡) a#0,b#0,c#0 | tmp%59#0
        v-store tmp%59#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%57#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%57#0
        v-load tmp%59#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%57#0,tmp%59#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%60#0
        v-store tmp%60#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%60#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%60#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:107
        // assert self.box_d.value[:5] == b.native[:5]
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%61#0,tmp%62#0
        v-store tmp%62#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%61#0
        v-store tmp%61#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 5                                                                                          (𝕡) a#0,b#0,c#0 | 5
        v-load tmp%61#0                                                                                (𝕡) a#0,b#0,c#0 | 5,tmp%61#0
        <                                                                                              (𝕡) a#0,b#0,c#0 | tmp%63#0
        v-store tmp%63#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%61#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%61#0
        int 5                                                                                          (𝕡) a#0,b#0,c#0 | tmp%61#0,5
        v-load tmp%63#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%61#0,5,tmp%63#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | tmp%64#0
        v-store tmp%64#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | "box_d",0
        v-load tmp%64#0                                                                                (𝕡) a#0,b#0,c#0 | "box_d",0,tmp%64#0
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%66#0
        v-store tmp%66#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 5                                                                                          (𝕡) a#0,b#0,c#0 | 5
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | 5,tmp%12#0
        >=                                                                                             (𝕡) a#0,b#0,c#0 | is_out_of_bounds%3#0
        v-store is_out_of_bounds%3#0                                                                   (𝕡) a#0,b#0,c#0 |
        int 5                                                                                          (𝕡) a#0,b#0,c#0 | 5
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | 5,tmp%12#0
        v-load is_out_of_bounds%3#0                                                                    (𝕡) a#0,b#0,c#0 | 5,tmp%12#0,is_out_of_bounds%3#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | bounded_index%3#0
        v-store bounded_index%3#0                                                                      (𝕡) a#0,b#0,c#0 |
        v-load tmp%0#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%0#0
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | tmp%0#0,0
        v-load bounded_index%3#0                                                                       (𝕡) a#0,b#0,c#0 | tmp%0#0,0,bounded_index%3#0
        substring3                                                                                     (𝕡) a#0,b#0,c#0 | tmp%68#0
        v-store tmp%68#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%66#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%66#0
        v-load tmp%68#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%66#0,tmp%68#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%69#0
        v-store tmp%69#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%69#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%69#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:108
        // assert self.box_d.value[: UInt64(2)] == b.native[: UInt64(2)]
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | tmp%70#0,tmp%71#0
        v-store tmp%71#0                                                                               (𝕡) a#0,b#0,c#0 | tmp%70#0
        v-store tmp%70#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | 2
        v-load tmp%70#0                                                                                (𝕡) a#0,b#0,c#0 | 2,tmp%70#0
        <                                                                                              (𝕡) a#0,b#0,c#0 | tmp%72#0
        v-store tmp%72#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%70#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%70#0
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | tmp%70#0,2
        v-load tmp%72#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%70#0,2,tmp%72#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | tmp%73#0
        v-store tmp%73#0                                                                               (𝕡) a#0,b#0,c#0 |
        byte "box_d"                                                                                   (𝕡) a#0,b#0,c#0 | "box_d"
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | "box_d",0
        v-load tmp%73#0                                                                                (𝕡) a#0,b#0,c#0 | "box_d",0,tmp%73#0
        box_extract                                                                                    (𝕡) a#0,b#0,c#0 | tmp%75#0
        v-store tmp%75#0                                                                               (𝕡) a#0,b#0,c#0 |
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | 2
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | 2,tmp%12#0
        >=                                                                                             (𝕡) a#0,b#0,c#0 | is_out_of_bounds%4#0
        v-store is_out_of_bounds%4#0                                                                   (𝕡) a#0,b#0,c#0 |
        int 2                                                                                          (𝕡) a#0,b#0,c#0 | 2
        v-load tmp%12#0                                                                                (𝕡) a#0,b#0,c#0 | 2,tmp%12#0
        v-load is_out_of_bounds%4#0                                                                    (𝕡) a#0,b#0,c#0 | 2,tmp%12#0,is_out_of_bounds%4#0
        select                                                                                         (𝕡) a#0,b#0,c#0 | bounded_index%4#0
        v-store bounded_index%4#0                                                                      (𝕡) a#0,b#0,c#0 |
        v-load tmp%0#0                                                                                 (𝕡) a#0,b#0,c#0 | tmp%0#0
        int 0                                                                                          (𝕡) a#0,b#0,c#0 | tmp%0#0,0
        v-load bounded_index%4#0                                                                       (𝕡) a#0,b#0,c#0 | tmp%0#0,0,bounded_index%4#0
        substring3                                                                                     (𝕡) a#0,b#0,c#0 | tmp%77#0
        v-store tmp%77#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%75#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%75#0
        v-load tmp%77#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%75#0,tmp%77#0
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%78#0
        v-store tmp%78#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%78#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%78#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        // box_storage/contract.py:110
        // assert self.box_large.length == size_of(LargeStruct)
        byte "box_large"                                                                               (𝕡) a#0,b#0,c#0 | "box_large"
        box_len                                                                                        (𝕡) a#0,b#0,c#0 | value%4#0,check%4#0
        v-store check%4#0                                                                              (𝕡) a#0,b#0,c#0 | value%4#0
        v-store value%4#0                                                                              (𝕡) a#0,b#0,c#0 |
        v-load value%4#0                                                                               (𝕡) a#0,b#0,c#0 | value%4#0
        int 6160                                                                                       (𝕡) a#0,b#0,c#0 | value%4#0,6160
        ==                                                                                             (𝕡) a#0,b#0,c#0 | tmp%79#0
        v-store tmp%79#0                                                                               (𝕡) a#0,b#0,c#0 |
        v-load tmp%79#0                                                                                (𝕡) a#0,b#0,c#0 | tmp%79#0
        assert                                                                                         (𝕡) a#0,b#0,c#0 |
        retsub


// examples.box_storage.contract.BoxContract.create_many_ints() -> void:
subroutine create_many_ints:
    create_many_ints_block@0:
        // box_storage/contract.py:121
        // self.many_ints.create()
        byte "many_ints"                                                                               "many_ints"
        int 4104                                                                                       "many_ints",4104
        box_create                                                                                     {box_create}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.set_many_ints(index: uint64, value: uint64) -> void:
subroutine set_many_ints:
    set_many_ints_block@0:                                                                             (𝕡) index#0,value#0 |
        // box_storage/contract.py:125
        // self.many_ints.value[index] = value
        p-load value#0                                                                                 (𝕡) index#0,value#0 | value#0 (copy)
        itob                                                                                           (𝕡) index#0,value#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                             (𝕡) index#0,value#0 |
        p-load index#0                                                                                 (𝕡) index#0,value#0 | index#0 (copy)
        int 8                                                                                          (𝕡) index#0,value#0 | index#0 (copy),8
        *                                                                                              (𝕡) index#0,value#0 | box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0                                                             (𝕡) index#0,value#0 |
        byte "many_ints"                                                                               (𝕡) index#0,value#0 | "many_ints"
        v-load box%index_bytes_offset%0#0                                                              (𝕡) index#0,value#0 | "many_ints",box%index_bytes_offset%0#0
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) index#0,value#0 | "many_ints",box%index_bytes_offset%0#0,aggregate%val_as_bytes%0#0
        box_replace                                                                                    (𝕡) index#0,value#0 |
        retsub


// examples.box_storage.contract.BoxContract.sum_many_ints() -> uint64:
subroutine sum_many_ints:
    sum_many_ints_while_top@6:
        global OpcodeBudget                                                                            tmp%1#0
        v-store tmp%1#0
        int 10510                                                                                      10510
        v-load tmp%1#0                                                                                 10510,tmp%1#0
        >                                                                                              tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        bz sum_many_ints_after_while@11 ; b sum_many_ints_while_body@7

    sum_many_ints_while_body@7:
        itxn_begin
        int appl                                                                                       appl
        itxn_field TypeEnum
        int DeleteApplication                                                                          DeleteApplication
        itxn_field OnCompletion
        byte 0x068101                                                                                  0x068101
        itxn_field ApprovalProgram
        byte 0x068101                                                                                  0x068101
        itxn_field ClearStateProgram
        int 0                                                                                          0
        itxn_field Fee
        itxn_submit
        b sum_many_ints_while_top@6

    sum_many_ints_after_while@11:
        // box_storage/contract.py:130
        // total = UInt64(0)
        int 0                                                                                          0
        v-store total#0
        // box_storage/contract.py:131
        // for val in self.many_ints.value:
        byte "many_ints"                                                                               "many_ints"
        box_len                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check self.many_ints exists
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_many_ints_for_header@1

    sum_many_ints_for_header@1:
        // box_storage/contract.py:131
        // for val in self.many_ints.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 513                                                                                        item_index_internal%0#0,513
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_many_ints_after_for@4 ; b sum_many_ints_for_body@2

    sum_many_ints_for_body@2:
        // box_storage/contract.py:131
        // for val in self.many_ints.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        *                                                                                              box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0
        byte "many_ints"                                                                               "many_ints"
        v-load box%index_bytes_offset%0#0                                                              "many_ints",box%index_bytes_offset%0#0
        int 8                                                                                          "many_ints",box%index_bytes_offset%0#0,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:132
        // total = total + val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_many_ints_for_header@1

    sum_many_ints_after_for@4:
        // box_storage/contract.py:133
        // return total
        v-load total#0                                                                                 total#0
        retsub                                                                                         total#0


// examples.box_storage.contract.BoxContract.delete_boxes() -> void:
subroutine delete_boxes:
    delete_boxes_block@0:
        // box_storage/contract.py:137
        // del self.box_a.value
        byte "box_a"                                                                                   "box_a"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:138
        // del self.box_b.value
        byte "b"                                                                                       "b"
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:139
        // del self.box_c.value
        byte 0x424f585f43                                                                              0x424f585f43
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:140
        // assert self.box_a.get(default=UInt64(42)) == 42
        byte "box_a"                                                                                   "box_a"
        box_get                                                                                        maybe_value%0#0,a_exists#0
        v-store a_exists#0                                                                             maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_value%0#0                                                                         maybe_value%0#0
        btoi                                                                                           a#0
        v-store a#0
        int 42                                                                                         42
        v-load a#0                                                                                     42,a#0
        v-load a_exists#0                                                                              42,a#0,a_exists#0
        select                                                                                         state_get%0#0
        v-store state_get%0#0
        v-load state_get%0#0                                                                           state_get%0#0
        int 42                                                                                         state_get%0#0,42
        ==                                                                                             tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        assert
        // box_storage/contract.py:141
        // assert self.box_b.get(default=arc4.DynamicBytes(b"42")).native == b"42"
        byte "b"                                                                                       "b"
        box_get                                                                                        maybe_value%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                       maybe_value%1#0
        v-store maybe_value%1#0
        byte 0x00023432                                                                                0x00023432
        v-load maybe_value%1#0                                                                         0x00023432,maybe_value%1#0
        v-load maybe_exists%1#0                                                                        0x00023432,maybe_value%1#0,maybe_exists%1#0
        select                                                                                         state_get%1#0
        v-store state_get%1#0
        v-load state_get%1#0                                                                           state_get%1#0
        extract 2 0                                                                                    tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        byte 0x3432                                                                                    tmp%2#0,0x3432
        ==                                                                                             tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        assert
        // box_storage/contract.py:142
        // assert self.box_c.get(default=arc4.String("42")) == "42"
        byte 0x424f585f43                                                                              0x424f585f43
        box_get                                                                                        maybe_value%2#0,maybe_exists%2#0
        v-store maybe_exists%2#0                                                                       maybe_value%2#0
        v-store maybe_value%2#0
        byte 0x00023432                                                                                0x00023432
        v-load maybe_value%2#0                                                                         0x00023432,maybe_value%2#0
        v-load maybe_exists%2#0                                                                        0x00023432,maybe_value%2#0,maybe_exists%2#0
        select                                                                                         state_get%2#0
        v-store state_get%2#0
        v-load state_get%2#0                                                                           state_get%2#0
        byte 0x00023432                                                                                state_get%2#0,0x00023432
        ==                                                                                             tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        assert
        // box_storage/contract.py:144
        // assert not a_exists
        v-load a_exists#0                                                                              a_exists#0
        !                                                                                              tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        assert
        // box_storage/contract.py:145
        // assert a == 0
        v-load a#0                                                                                     a#0
        !                                                                                              tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert
        // box_storage/contract.py:146
        // del self.box_large.value
        byte "box_large"                                                                               "box_large"
        box_del                                                                                        {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.indirect_extract_and_replace() -> void:
subroutine indirect_extract_and_replace:
    indirect_extract_and_replace_block@0:
        // box_storage/contract.py:150
        // large = self.box_large.value.copy()
        byte "box_large"                                                                               "box_large"
        // box_storage/contract.py:150-151
        // large = self.box_large.value.copy()
        // large.e += 1
        int 4096                                                                                       "box_large",4096
        int 8                                                                                          "box_large",4096,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        // box_storage/contract.py:151
        // large.e += 1
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        v-load values%0#0                                                                              values%0#0
        int 1                                                                                          values%0#0,1
        +                                                                                              tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        // box_storage/contract.py:152
        // self.box_large.value = large.copy()
        byte "box_large"                                                                               "box_large"
        // box_storage/contract.py:151-152
        // large.e += 1
        // self.box_large.value = large.copy()
        int 4096                                                                                       "box_large",4096
        v-load aggregate%val_as_bytes%0#0                                                              "box_large",4096,aggregate%val_as_bytes%0#0
        box_replace
        retsub


// examples.box_storage.contract.BoxContract.read_boxes() -> uint64, bytes, bytes, uint64:
subroutine read_boxes:
    read_boxes_block@0:
        // box_storage/contract.py:157
        // get_box_value_plus_1(self.box_a) - 1,
        byte "box_a"                                                                                   "box_a"
        // box_storage/contract.py:391
        // return box.value + 1
        box_get                                                                                        aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  aggregate%box_get%0#0
        v-store aggregate%box_get%0#0
        v-load aggregate%box_get%1#0                                                                   aggregate%box_get%1#0
        assert // check Box exists
        v-load aggregate%box_get%0#0                                                                   aggregate%box_get%0#0
        btoi                                                                                           maybe_value_converted%0#0
        v-store maybe_value_converted%0#0
        v-load maybe_value_converted%0#0                                                               maybe_value_converted%0#0
        int 1                                                                                          maybe_value_converted%0#0,1
        +                                                                                              tmp%0#1
        v-store tmp%0#1
        // box_storage/contract.py:157
        // get_box_value_plus_1(self.box_a) - 1,
        v-load tmp%0#1                                                                                 tmp%0#1
        int 1                                                                                          tmp%0#1,1
        -                                                                                              tmp%1#0
        v-store tmp%1#0
        // box_storage/contract.py:158
        // self.box_b.value.native,
        byte "b"                                                                                       "b"
        box_get                                                                                        aggregate%box_get%2#0,aggregate%box_get%3#0
        v-store aggregate%box_get%3#0                                                                  aggregate%box_get%2#0
        v-store aggregate%box_get%2#0
        v-load aggregate%box_get%3#0                                                                   aggregate%box_get%3#0
        assert // check self.box_b exists
        v-load aggregate%box_get%2#0                                                                   aggregate%box_get%2#0
        extract 2 0                                                                                    tmp%2#0
        v-store tmp%2#0
        // box_storage/contract.py:159
        // self.box_c.value,
        byte 0x424f585f43                                                                              0x424f585f43
        box_get                                                                                        aggregate%box_get%4#0,aggregate%box_get%5#0
        v-store aggregate%box_get%5#0                                                                  aggregate%box_get%4#0
        v-store aggregate%box_get%4#0
        v-load aggregate%box_get%5#0                                                                   aggregate%box_get%5#0
        assert // check self.box_c exists
        // box_storage/contract.py:160
        // self.box_large.value.e,
        byte "box_large"                                                                               "box_large"
        int 4096                                                                                       "box_large",4096
        int 8                                                                                          "box_large",4096,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        // box_storage/contract.py:156-161
        // return (
        //     get_box_value_plus_1(self.box_a) - 1,
        //     self.box_b.value.native,
        //     self.box_c.value,
        //     self.box_large.value.e,
        // )
        v-load tmp%1#0                                                                                 tmp%1#0
        v-load tmp%2#0                                                                                 tmp%1#0,tmp%2#0
        v-load aggregate%box_get%4#0                                                                   tmp%1#0,tmp%2#0,aggregate%box_get%4#0
        v-load values%0#0                                                                              tmp%1#0,tmp%2#0,aggregate%box_get%4#0,values%0#0
        retsub                                                                                         tmp%1#0,tmp%2#0,aggregate%box_get%4#0,values%0#0


// examples.box_storage.contract.BoxContract.boxes_exist() -> uint64, uint64, uint64, uint64:
subroutine boxes_exist:
    boxes_exist_block@0:
        // box_storage/contract.py:165
        // return bool(self.box_a), bool(self.box_b), bool(self.box_c), bool(self.box_large)
        byte "box_a"                                                                                   "box_a"
        box_len                                                                                        _%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       _%0#0
        v-store _%0#0
        byte "b"                                                                                       "b"
        box_len                                                                                        _%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                       _%1#0
        v-store _%1#0
        byte 0x424f585f43                                                                              0x424f585f43
        box_len                                                                                        _%2#0,maybe_exists%2#0
        v-store maybe_exists%2#0                                                                       _%2#0
        v-store _%2#0
        byte "box_large"                                                                               "box_large"
        box_len                                                                                        _%3#0,maybe_exists%3#0
        v-store maybe_exists%3#0                                                                       _%3#0
        v-store _%3#0
        v-load maybe_exists%0#0                                                                        maybe_exists%0#0
        v-load maybe_exists%1#0                                                                        maybe_exists%0#0,maybe_exists%1#0
        v-load maybe_exists%2#0                                                                        maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0
        v-load maybe_exists%3#0                                                                        maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0
        retsub                                                                                         maybe_exists%0#0,maybe_exists%1#0,maybe_exists%2#0,maybe_exists%3#0


// examples.box_storage.contract.BoxContract.create_dynamic_arr_struct() -> void:
subroutine create_dynamic_arr_struct:
    create_dynamic_arr_struct_block@0:
        // box_storage/contract.py:170
        // a=Txn.num_app_args,
        txn NumAppArgs                                                                                 tmp%0#0
        v-store tmp%0#0
        // box_storage/contract.py:172
        // b=Txn.num_app_args * 2,
        txn NumAppArgs                                                                                 tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                 tmp%1#0
        int 2                                                                                          tmp%1#0,2
        *                                                                                              tmp%2#0
        v-store tmp%2#0
        // box_storage/contract.py:169-174
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        //     a=Txn.num_app_args,
        //     arr=Array[UInt64](),
        //     b=Txn.num_app_args * 2,
        //     arr2=Array[UInt64](),
        // )
        v-load tmp%0#0                                                                                 tmp%0#0
        itob                                                                                           aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                              aggregate%val_as_bytes%0#0
        byte 0x0014                                                                                    aggregate%val_as_bytes%0#0,0x0014
        concat                                                                                         aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load tmp%2#0                                                                                 tmp%2#0
        itob                                                                                           aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%head%1#0                                                                      aggregate%head%1#0
        v-load aggregate%val_as_bytes%1#0                                                              aggregate%head%1#0,aggregate%val_as_bytes%1#0
        concat                                                                                         aggregate%head%2#0
        v-store aggregate%head%2#0
        v-load aggregate%head%2#0                                                                      aggregate%head%2#0
        byte 0x001600000000                                                                            aggregate%head%2#0,0x001600000000
        concat                                                                                         aggregate%concat%1#0
        v-store aggregate%concat%1#0
        // box_storage/contract.py:169
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:169-174
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        //     a=Txn.num_app_args,
        //     arr=Array[UInt64](),
        //     b=Txn.num_app_args * 2,
        //     arr2=Array[UInt64](),
        // )
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:169
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        // box_storage/contract.py:169-174
        // self.dynamic_arr_struct.value = DynamicArrayInAStruct(
        //     a=Txn.num_app_args,
        //     arr=Array[UInt64](),
        //     b=Txn.num_app_args * 2,
        //     arr2=Array[UInt64](),
        // )
        v-load aggregate%concat%1#0                                                                    "dynamic_arr_struct",aggregate%concat%1#0
        box_put
        retsub


// examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct() -> void:
subroutine delete_dynamic_arr_struct:
    delete_dynamic_arr_struct_block@0:
        // box_storage/contract.py:178
        // del self.dynamic_arr_struct.value
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        box_del                                                                                        {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.append_dynamic_arr_struct(times: uint64) -> uint64:
subroutine append_dynamic_arr_struct:
    append_dynamic_arr_struct_block@0:                                                                 (𝕡) times#0 |
        // box_storage/contract.py:183
        // assert self.dynamic_arr_struct.value.b == 2, "expected 2"
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 10                                                                                         (𝕡) times#0 | "dynamic_arr_struct",10
        int 8                                                                                          (𝕡) times#0 | "dynamic_arr_struct",10,8
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%0#0                                                                     (𝕡) times#0 | box%box_extract%0#0
        btoi                                                                                           (𝕡) times#0 | values%0#0
        v-store values%0#0                                                                             (𝕡) times#0 |
        v-load values%0#0                                                                              (𝕡) times#0 | values%0#0
        int 2                                                                                          (𝕡) times#0 | values%0#0,2
        ==                                                                                             (𝕡) times#0 | tmp%0#0
        v-store tmp%0#0                                                                                (𝕡) times#0 |
        v-load tmp%0#0                                                                                 (𝕡) times#0 | tmp%0#0
        assert // expected 2                                                                           (𝕡) times#0 |
        // box_storage/contract.py:184
        // arr_len = self.dynamic_arr_struct.value.arr.length
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",20,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%1#0
        v-store box%box_extract%1#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%1#0                                                                     (𝕡) times#0 | box%box_extract%1#0
        btoi                                                                                           (𝕡) times#0 | arr_len#0
        v-store arr_len#0                                                                              (𝕡) times#0 |
        // box_storage/contract.py:185
        // arr2_len = self.dynamic_arr_struct.value.arr2.length
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 18                                                                                         (𝕡) times#0 | "dynamic_arr_struct",18
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",18,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%2#0
        v-store box%box_extract%2#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%2#0                                                                     (𝕡) times#0 | box%box_extract%2#0
        btoi                                                                                           (𝕡) times#0 | box%btoi%0#0
        v-store box%btoi%0#0                                                                           (𝕡) times#0 |
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        v-load box%btoi%0#0                                                                            (𝕡) times#0 | "dynamic_arr_struct",box%btoi%0#0
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",box%btoi%0#0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%3#0
        v-store box%box_extract%3#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%3#0                                                                     (𝕡) times#0 | box%box_extract%3#0
        btoi                                                                                           (𝕡) times#0 | arr2_len#0
        v-store arr2_len#0                                                                             (𝕡) times#0 |
        // box_storage/contract.py:189
        // get_dynamic_arr2_struct_byte_index(arr_len + times, arr2_len)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        p-load times#0                                                                                 (𝕡) times#0 | arr_len#0,times#0 (copy)
        +                                                                                              (𝕡) times#0 | arr_size#1
        v-store arr_size#1                                                                             (𝕡) times#0 |
        // box_storage/contract.py:407
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_size#1                                                                              (𝕡) times#0 | arr_size#1
        int 8                                                                                          (𝕡) times#0 | arr_size#1,8
        *                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:408
        // return head + dyn_arr_index
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        // box_storage/contract.py:407-408
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        // return head + dyn_arr_index
        int 22                                                                                         (𝕡) times#0 | tmp%3#1,22
        +                                                                                              (𝕡) times#0 | head_and_dyn_arr#1
        // box_storage/contract.py:408
        // return head + dyn_arr_index
        v-store head_and_dyn_arr#1                                                                     (𝕡) times#0 |
        // box_storage/contract.py:414
        // dyn_arr2_index = size_of(arc4.UInt16) + arr2_index * size_of(UInt64)
        v-load arr2_len#0                                                                              (𝕡) times#0 | arr2_len#0
        int 8                                                                                          (𝕡) times#0 | arr2_len#0,8
        *                                                                                              (𝕡) times#0 | tmp%1#2
        v-store tmp%1#2                                                                                (𝕡) times#0 |
        int 2                                                                                          (𝕡) times#0 | 2
        v-load tmp%1#2                                                                                 (𝕡) times#0 | 2,tmp%1#2
        +                                                                                              (𝕡) times#0 | dyn_arr2_index#1
        v-store dyn_arr2_index#1                                                                       (𝕡) times#0 |
        // box_storage/contract.py:415
        // return head_and_dyn_arr + dyn_arr2_index
        v-load head_and_dyn_arr#1                                                                      (𝕡) times#0 | head_and_dyn_arr#1
        v-load dyn_arr2_index#1                                                                        (𝕡) times#0 | head_and_dyn_arr#1,dyn_arr2_index#1
        +                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:188
        // self.dynamic_arr_struct.ref.resize(
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:188-190
        // self.dynamic_arr_struct.ref.resize(
        //     get_dynamic_arr2_struct_byte_index(arr_len + times, arr2_len)
        // )
        v-load tmp%3#1                                                                                 (𝕡) times#0 | "dynamic_arr_struct",tmp%3#1
        box_resize                                                                                     (𝕡) times#0 |
        // box_storage/contract.py:407
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 8                                                                                          (𝕡) times#0 | arr_len#0,8
        *                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:408
        // return head + dyn_arr_index
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        // box_storage/contract.py:407-408
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        // return head + dyn_arr_index
        int 22                                                                                         (𝕡) times#0 | tmp%3#1,22
        +                                                                                              (𝕡) times#0 | tmp%5#1
        // box_storage/contract.py:408
        // return head + dyn_arr_index
        v-store tmp%5#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:193
        // get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        p-load times#0                                                                                 (𝕡) times#0 | times#0 (copy)
        int 8                                                                                          (𝕡) times#0 | times#0 (copy),8
        *                                                                                              (𝕡) times#0 | tmp%6#0
        v-store tmp%6#0                                                                                (𝕡) times#0 |
        v-load tmp%6#0                                                                                 (𝕡) times#0 | tmp%6#0
        bzero                                                                                          (𝕡) times#0 | tmp%7#0
        v-store tmp%7#0                                                                                (𝕡) times#0 |
        // box_storage/contract.py:192
        // self.dynamic_arr_struct.ref.splice(
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:192-194
        // self.dynamic_arr_struct.ref.splice(
        //     get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        // )
        v-load tmp%5#1                                                                                 (𝕡) times#0 | "dynamic_arr_struct",tmp%5#1
        // box_storage/contract.py:193
        // get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        int 0                                                                                          (𝕡) times#0 | "dynamic_arr_struct",tmp%5#1,0
        // box_storage/contract.py:192-194
        // self.dynamic_arr_struct.ref.splice(
        //     get_dynamic_arr_struct_byte_index(arr_len), 0, op.bzero(times * size_of(UInt64))
        // )
        v-load tmp%7#0                                                                                 (𝕡) times#0 | "dynamic_arr_struct",tmp%5#1,0,tmp%7#0
        box_splice                                                                                     (𝕡) times#0 |
        // box_storage/contract.py:196
        // for i in urange(times):
        int 0                                                                                          (𝕡) times#0 | 0
        v-store i#0                                                                                    (𝕡) times#0 |
        b append_dynamic_arr_struct_for_header@1                                                       (𝕡) times#0 |

    append_dynamic_arr_struct_for_header@1:                                                            (𝕡) times#0 |
        // box_storage/contract.py:196
        // for i in urange(times):
        v-load i#0                                                                                     (𝕡) times#0 | i#0
        p-load times#0                                                                                 (𝕡) times#0 | i#0,times#0 (copy)
        <                                                                                              (𝕡) times#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                                   (𝕡) times#0 |
        v-load continue_looping%0#0                                                                    (𝕡) times#0 | continue_looping%0#0
        bz append_dynamic_arr_struct_after_for@4 ; b append_dynamic_arr_struct_for_body@2 (𝕡) times#0 | 

    append_dynamic_arr_struct_for_body@2:                                                              (𝕡) times#0 |
        // box_storage/contract.py:197
        // box.value.arr.arr[arr_len] = i
        v-load i#0                                                                                     (𝕡) times#0 | i#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                             (𝕡) times#0 |
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 8                                                                                          (𝕡) times#0 | arr_len#0,8
        *                                                                                              (𝕡) times#0 | box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0                                                             (𝕡) times#0 |
        int 22                                                                                         (𝕡) times#0 | 22
        v-load box%index_bytes_offset%0#0                                                              (𝕡) times#0 | 22,box%index_bytes_offset%0#0
        +                                                                                              (𝕡) times#0 | box%offset%5#0
        v-store box%offset%5#0                                                                         (𝕡) times#0 |
        // box_storage/contract.py:195
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:197
        // box.value.arr.arr[arr_len] = i
        v-load box%offset%5#0                                                                          (𝕡) times#0 | "dynamic_arr_struct",box%offset%5#0
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) times#0 | "dynamic_arr_struct",box%offset%5#0,aggregate%val_as_bytes%0#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:198
        // arr_len += 1
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 1                                                                                          (𝕡) times#0 | arr_len#0,1
        +                                                                                              (𝕡) times#0 | arr_len#0
        v-store arr_len#0                                                                              (𝕡) times#0 |
        // box_storage/contract.py:196
        // for i in urange(times):
        v-load i#0                                                                                     (𝕡) times#0 | i#0
        int 1                                                                                          (𝕡) times#0 | i#0,1
        +                                                                                              (𝕡) times#0 | i#0
        v-store i#0                                                                                    (𝕡) times#0 |
        b append_dynamic_arr_struct_for_header@1                                                       (𝕡) times#0 |

    append_dynamic_arr_struct_after_for@4:                                                             (𝕡) times#0 |
        // box_storage/contract.py:407
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 8                                                                                          (𝕡) times#0 | arr_len#0,8
        *                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:415
        // return head_and_dyn_arr + dyn_arr2_index
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        int 24                                                                                         (𝕡) times#0 | tmp%3#1,24
        +                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:199
        // arr2_offset = get_dynamic_arr2_struct_byte_index(arr_len, UInt64(0)) - 2
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        int 2                                                                                          (𝕡) times#0 | tmp%3#1,2
        -                                                                                              (𝕡) times#0 | arr2_offset#0
        v-store arr2_offset#0                                                                          (𝕡) times#0 |
        // box_storage/contract.py:200
        // box.value.arr.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%1#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%1#0
        bitlen                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0                                                                   (𝕡) times#0 |
        v-load aggregate%bitlen%0#0                                                                    (𝕡) times#0 | aggregate%bitlen%0#0
        int 16                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0,16
        <=                                                                                             (𝕡) times#0 | aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0                                                              (𝕡) times#0 |
        v-load aggregate%no_overflow%0#0                                                               (𝕡) times#0 | aggregate%no_overflow%0#0
        assert // overflow                                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%1#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%1#0
        extract 6 2                                                                                    (𝕡) times#0 | aggregate%uint16%0#0
        v-store aggregate%uint16%0#0                                                                   (𝕡) times#0 |
        // box_storage/contract.py:195
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:200
        // box.value.arr.length = arc4.UInt16(arr_len)
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        v-load aggregate%uint16%0#0                                                                    (𝕡) times#0 | "dynamic_arr_struct",20,aggregate%uint16%0#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:201
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        v-load arr2_offset#0                                                                           (𝕡) times#0 | arr2_offset#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%2#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%2#0
        bitlen                                                                                         (𝕡) times#0 | aggregate%bitlen%1#0
        v-store aggregate%bitlen%1#0                                                                   (𝕡) times#0 |
        v-load aggregate%bitlen%1#0                                                                    (𝕡) times#0 | aggregate%bitlen%1#0
        int 16                                                                                         (𝕡) times#0 | aggregate%bitlen%1#0,16
        <=                                                                                             (𝕡) times#0 | aggregate%no_overflow%1#0
        v-store aggregate%no_overflow%1#0                                                              (𝕡) times#0 |
        v-load aggregate%no_overflow%1#0                                                               (𝕡) times#0 | aggregate%no_overflow%1#0
        assert // overflow                                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%2#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%2#0
        extract 6 2                                                                                    (𝕡) times#0 | aggregate%uint16%1#0
        v-store aggregate%uint16%1#0                                                                   (𝕡) times#0 |
        // box_storage/contract.py:195
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:201
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        int 18                                                                                         (𝕡) times#0 | "dynamic_arr_struct",18
        v-load aggregate%uint16%1#0                                                                    (𝕡) times#0 | "dynamic_arr_struct",18,aggregate%uint16%1#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:203
        // self.dynamic_arr_struct.value.arr.length == arr_len
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",20,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%4#0
        v-store box%box_extract%4#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%4#0                                                                     (𝕡) times#0 | box%box_extract%4#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%2#0
        v-store box%array_length%2#0                                                                   (𝕡) times#0 |
        v-load box%array_length%2#0                                                                    (𝕡) times#0 | box%array_length%2#0
        v-load arr_len#0                                                                               (𝕡) times#0 | box%array_length%2#0,arr_len#0
        ==                                                                                             (𝕡) times#0 | tmp%14#0
        v-store tmp%14#0                                                                               (𝕡) times#0 |
        // box_storage/contract.py:202-204
        // assert (
        //     self.dynamic_arr_struct.value.arr.length == arr_len
        // ), "expected arr length to be correct"
        v-load tmp%14#0                                                                                (𝕡) times#0 | tmp%14#0
        assert // expected arr length to be correct                                                    (𝕡) times#0 |
        // box_storage/contract.py:205
        // assert self.dynamic_arr_struct.value.arr2.length == 0, "expected arr2 length to be correct"
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 18                                                                                         (𝕡) times#0 | "dynamic_arr_struct",18
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",18,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%5#0
        v-store box%box_extract%5#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%5#0                                                                     (𝕡) times#0 | box%box_extract%5#0
        btoi                                                                                           (𝕡) times#0 | box%btoi%1#0
        v-store box%btoi%1#0                                                                           (𝕡) times#0 |
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        v-load box%btoi%1#0                                                                            (𝕡) times#0 | "dynamic_arr_struct",box%btoi%1#0
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",box%btoi%1#0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%6#0
        v-store box%box_extract%6#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%6#0                                                                     (𝕡) times#0 | box%box_extract%6#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%3#0
        v-store box%array_length%3#0                                                                   (𝕡) times#0 |
        v-load box%array_length%3#0                                                                    (𝕡) times#0 | box%array_length%3#0
        !                                                                                              (𝕡) times#0 | tmp%16#0
        v-store tmp%16#0                                                                               (𝕡) times#0 |
        v-load tmp%16#0                                                                                (𝕡) times#0 | tmp%16#0
        assert // expected arr2 length to be correct                                                   (𝕡) times#0 |
        // box_storage/contract.py:206
        // return self.dynamic_arr_struct.value.arr.length
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",20,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%7#0
        v-store box%box_extract%7#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%7#0                                                                     (𝕡) times#0 | box%box_extract%7#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%4#0
        v-store box%array_length%4#0                                                                   (𝕡) times#0 |
        v-load box%array_length%4#0                                                                    (𝕡) times#0 | box%array_length%4#0
        retsub                                                                                         box%array_length%4#0


// examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct(times: uint64) -> uint64:
subroutine pop_dynamic_arr_struct:
    pop_dynamic_arr_struct_block@0:                                                                    (𝕡) times#0 |
        // box_storage/contract.py:212
        // arr_len = self.dynamic_arr_struct.value.arr.length - times
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        box_len                                                                                        (𝕡) times#0 | aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  (𝕡) times#0 | aggregate%box_get%0#0
        v-store aggregate%box_get%0#0                                                                  (𝕡) times#0 |
        v-load aggregate%box_get%1#0                                                                   (𝕡) times#0 | aggregate%box_get%1#0
        assert // check self.dynamic_arr_struct exists                                                 (𝕡) times#0 |
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",20,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%0#0                                                                     (𝕡) times#0 | box%box_extract%0#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%0#0
        v-store box%array_length%0#0                                                                   (𝕡) times#0 |
        v-load box%array_length%0#0                                                                    (𝕡) times#0 | box%array_length%0#0
        p-load times#0                                                                                 (𝕡) times#0 | box%array_length%0#0,times#0 (copy)
        -                                                                                              (𝕡) times#0 | arr_len#0
        v-store arr_len#0                                                                              (𝕡) times#0 |
        // box_storage/contract.py:213
        // arr2_len = self.dynamic_arr_struct.value.arr2.length
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 18                                                                                         (𝕡) times#0 | "dynamic_arr_struct",18
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",18,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%1#0
        v-store box%box_extract%1#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%1#0                                                                     (𝕡) times#0 | box%box_extract%1#0
        btoi                                                                                           (𝕡) times#0 | box%btoi%0#0
        v-store box%btoi%0#0                                                                           (𝕡) times#0 |
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        v-load box%btoi%0#0                                                                            (𝕡) times#0 | "dynamic_arr_struct",box%btoi%0#0
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",box%btoi%0#0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%2#0
        v-store box%box_extract%2#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%2#0                                                                     (𝕡) times#0 | box%box_extract%2#0
        btoi                                                                                           (𝕡) times#0 | arr2_len#0
        v-store arr2_len#0                                                                             (𝕡) times#0 |
        // box_storage/contract.py:407
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 8                                                                                          (𝕡) times#0 | arr_len#0,8
        *                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:408
        // return head + dyn_arr_index
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        // box_storage/contract.py:407-408
        // dyn_arr_index = size_of(arc4.UInt16) + index * size_of(UInt64)
        // return head + dyn_arr_index
        int 22                                                                                         (𝕡) times#0 | tmp%3#1,22
        +                                                                                              (𝕡) times#0 | head_and_dyn_arr#0
        // box_storage/contract.py:408
        // return head + dyn_arr_index
        v-store head_and_dyn_arr#0                                                                     (𝕡) times#0 |
        // box_storage/contract.py:415
        // return head_and_dyn_arr + dyn_arr2_index
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        int 24                                                                                         (𝕡) times#0 | tmp%3#1,24
        +                                                                                              (𝕡) times#0 | tmp%3#1
        v-store tmp%3#1                                                                                (𝕡) times#0 |
        // box_storage/contract.py:216
        // arr2_offset = get_dynamic_arr2_struct_byte_index(arr_len, UInt64(0)) - 2
        v-load tmp%3#1                                                                                 (𝕡) times#0 | tmp%3#1
        int 2                                                                                          (𝕡) times#0 | tmp%3#1,2
        -                                                                                              (𝕡) times#0 | arr2_offset#0
        v-store arr2_offset#0                                                                          (𝕡) times#0 |
        // box_storage/contract.py:217
        // box.value.arr.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%0#0
        bitlen                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0                                                                   (𝕡) times#0 |
        v-load aggregate%bitlen%0#0                                                                    (𝕡) times#0 | aggregate%bitlen%0#0
        int 16                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0,16
        <=                                                                                             (𝕡) times#0 | aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0                                                              (𝕡) times#0 |
        v-load aggregate%no_overflow%0#0                                                               (𝕡) times#0 | aggregate%no_overflow%0#0
        assert // overflow                                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%0#0
        extract 6 2                                                                                    (𝕡) times#0 | aggregate%uint16%0#0
        v-store aggregate%uint16%0#0                                                                   (𝕡) times#0 |
        // box_storage/contract.py:215
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:217
        // box.value.arr.length = arc4.UInt16(arr_len)
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        v-load aggregate%uint16%0#0                                                                    (𝕡) times#0 | "dynamic_arr_struct",20,aggregate%uint16%0#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:218
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        v-load arr2_offset#0                                                                           (𝕡) times#0 | arr2_offset#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%1#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%1#0
        bitlen                                                                                         (𝕡) times#0 | aggregate%bitlen%1#0
        v-store aggregate%bitlen%1#0                                                                   (𝕡) times#0 |
        v-load aggregate%bitlen%1#0                                                                    (𝕡) times#0 | aggregate%bitlen%1#0
        int 16                                                                                         (𝕡) times#0 | aggregate%bitlen%1#0,16
        <=                                                                                             (𝕡) times#0 | aggregate%no_overflow%1#0
        v-store aggregate%no_overflow%1#0                                                              (𝕡) times#0 |
        v-load aggregate%no_overflow%1#0                                                               (𝕡) times#0 | aggregate%no_overflow%1#0
        assert // overflow                                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%1#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%1#0
        extract 6 2                                                                                    (𝕡) times#0 | aggregate%uint16%1#0
        v-store aggregate%uint16%1#0                                                                   (𝕡) times#0 |
        // box_storage/contract.py:215
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:218
        // box.value.arr2_offset = arc4.UInt16(arr2_offset)
        int 18                                                                                         (𝕡) times#0 | "dynamic_arr_struct",18
        v-load aggregate%uint16%1#0                                                                    (𝕡) times#0 | "dynamic_arr_struct",18,aggregate%uint16%1#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:220
        // box.ref.splice(index, times * size_of(UInt64), b"")
        p-load times#0                                                                                 (𝕡) times#0 | times#0 (copy)
        int 8                                                                                          (𝕡) times#0 | times#0 (copy),8
        *                                                                                              (𝕡) times#0 | tmp%8#0
        v-store tmp%8#0                                                                                (𝕡) times#0 |
        // box_storage/contract.py:215
        // box = Box(FixedArrayInAStruct, key=self.dynamic_arr_struct.key)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        // box_storage/contract.py:220
        // box.ref.splice(index, times * size_of(UInt64), b"")
        v-load head_and_dyn_arr#0                                                                      (𝕡) times#0 | "dynamic_arr_struct",head_and_dyn_arr#0
        v-load tmp%8#0                                                                                 (𝕡) times#0 | "dynamic_arr_struct",head_and_dyn_arr#0,tmp%8#0
        byte 0x                                                                                        (𝕡) times#0 | "dynamic_arr_struct",head_and_dyn_arr#0,tmp%8#0,0x
        box_splice                                                                                     (𝕡) times#0 |
        // box_storage/contract.py:414
        // dyn_arr2_index = size_of(arc4.UInt16) + arr2_index * size_of(UInt64)
        v-load arr2_len#0                                                                              (𝕡) times#0 | arr2_len#0
        int 8                                                                                          (𝕡) times#0 | arr2_len#0,8
        *                                                                                              (𝕡) times#0 | tmp%1#3
        v-store tmp%1#3                                                                                (𝕡) times#0 |
        int 2                                                                                          (𝕡) times#0 | 2
        v-load tmp%1#3                                                                                 (𝕡) times#0 | 2,tmp%1#3
        +                                                                                              (𝕡) times#0 | dyn_arr2_index#1
        v-store dyn_arr2_index#1                                                                       (𝕡) times#0 |
        // box_storage/contract.py:415
        // return head_and_dyn_arr + dyn_arr2_index
        v-load head_and_dyn_arr#0                                                                      (𝕡) times#0 | head_and_dyn_arr#0
        v-load dyn_arr2_index#1                                                                        (𝕡) times#0 | head_and_dyn_arr#0,dyn_arr2_index#1
        +                                                                                              (𝕡) times#0 | size#0
        v-store size#0                                                                                 (𝕡) times#0 |
        // box_storage/contract.py:225
        // self.dynamic_arr_struct.ref.resize(size)
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        v-load size#0                                                                                  (𝕡) times#0 | "dynamic_arr_struct",size#0
        box_resize                                                                                     (𝕡) times#0 |
        // box_storage/contract.py:227
        // return self.dynamic_arr_struct.value.arr.length
        byte "dynamic_arr_struct"                                                                      (𝕡) times#0 | "dynamic_arr_struct"
        int 20                                                                                         (𝕡) times#0 | "dynamic_arr_struct",20
        int 2                                                                                          (𝕡) times#0 | "dynamic_arr_struct",20,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%3#0
        v-store box%box_extract%3#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%3#0                                                                     (𝕡) times#0 | box%box_extract%3#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%2#0
        v-store box%array_length%2#0                                                                   (𝕡) times#0 |
        v-load box%array_length%2#0                                                                    (𝕡) times#0 | box%array_length%2#0
        retsub                                                                                         box%array_length%2#0


// examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct() -> uint64:
subroutine sum_dynamic_arr_struct:
    sum_dynamic_arr_struct_block@0:
        // box_storage/contract.py:231
        // assert self.dynamic_arr_struct.value.a == 1, "expected 1"
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 0                                                                                          "dynamic_arr_struct",0
        int 8                                                                                          "dynamic_arr_struct",0,8
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           values%0#0
        v-store values%0#0
        v-load values%0#0                                                                              values%0#0
        int 1                                                                                          values%0#0,1
        ==                                                                                             tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        assert // expected 1
        // box_storage/contract.py:232
        // assert self.dynamic_arr_struct.value.b == 2, "expected 2"
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 10                                                                                         "dynamic_arr_struct",10
        int 8                                                                                          "dynamic_arr_struct",10,8
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           values%1#0
        v-store values%1#0
        v-load values%1#0                                                                              values%1#0
        int 2                                                                                          values%1#0,2
        ==                                                                                             tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                 tmp%1#0
        assert // expected 2
        // box_storage/contract.py:233
        // total = self.dynamic_arr_struct.value.a + self.dynamic_arr_struct.value.b
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 0                                                                                          "dynamic_arr_struct",0
        int 8                                                                                          "dynamic_arr_struct",0,8
        box_extract                                                                                    box%box_extract%2#0
        v-store box%box_extract%2#0
        v-load box%box_extract%2#0                                                                     box%box_extract%2#0
        btoi                                                                                           values%2#0
        v-store values%2#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 10                                                                                         "dynamic_arr_struct",10
        int 8                                                                                          "dynamic_arr_struct",10,8
        box_extract                                                                                    box%box_extract%3#0
        v-store box%box_extract%3#0
        v-load box%box_extract%3#0                                                                     box%box_extract%3#0
        btoi                                                                                           values%3#0
        v-store values%3#0
        v-load values%2#0                                                                              values%2#0
        v-load values%3#0                                                                              values%2#0,values%3#0
        +                                                                                              total#0
        v-store total#0
        // box_storage/contract.py:234
        // for val in self.dynamic_arr_struct.value.arr:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%4#0
        v-store box%box_extract%4#0
        v-load box%box_extract%4#0                                                                     box%box_extract%4#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_dynamic_arr_struct_for_header@1

    sum_dynamic_arr_struct_for_header@1:
        // box_storage/contract.py:234
        // for val in self.dynamic_arr_struct.value.arr:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        v-load box%array_length%0#0                                                                    item_index_internal%0#0,box%array_length%0#0
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_dynamic_arr_struct_after_for@4 ; b sum_dynamic_arr_struct_for_body@2

    sum_dynamic_arr_struct_for_body@2:
        // box_storage/contract.py:234
        // for val in self.dynamic_arr_struct.value.arr:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 20                                                                                         "dynamic_arr_struct",20
        int 2                                                                                          "dynamic_arr_struct",20,2
        box_extract                                                                                    box%box_extract%5#0
        v-store box%box_extract%5#0
        v-load box%box_extract%5#0                                                                     box%box_extract%5#0
        btoi                                                                                           box%btoi%0#0
        v-store box%btoi%0#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        v-load box%btoi%0#0                                                                            item_index_internal%0#0,box%btoi%0#0
        <                                                                                              box%index_ok%0#0
        v-store box%index_ok%0#0
        v-load box%index_ok%0#0                                                                        box%index_ok%0#0
        assert // index out of bounds
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        *                                                                                              box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0
        v-load box%index_bytes_offset%0#0                                                              box%index_bytes_offset%0#0
        int 22                                                                                         box%index_bytes_offset%0#0,22
        +                                                                                              box%offset%6#0
        v-store box%offset%6#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%offset%6#0                                                                          "dynamic_arr_struct",box%offset%6#0
        int 8                                                                                          "dynamic_arr_struct",box%offset%6#0,8
        box_extract                                                                                    box%box_extract%6#0
        v-store box%box_extract%6#0
        v-load box%box_extract%6#0                                                                     box%box_extract%6#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:235
        // total += val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_dynamic_arr_struct_for_header@1

    sum_dynamic_arr_struct_after_for@4:
        // box_storage/contract.py:236
        // for val in self.dynamic_arr_struct.value.arr2:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        box_len                                                                                        aggregate%box_get%2#0,aggregate%box_get%3#0
        v-store aggregate%box_get%3#0                                                                  aggregate%box_get%2#0
        v-store aggregate%box_get%2#0
        v-load aggregate%box_get%3#0                                                                   aggregate%box_get%3#0
        assert // check self.dynamic_arr_struct exists
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%7#0
        v-store box%box_extract%7#0
        v-load box%box_extract%7#0                                                                     box%box_extract%7#0
        btoi                                                                                           box%btoi%1#0
        v-store box%btoi%1#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%btoi%1#0                                                                            "dynamic_arr_struct",box%btoi%1#0
        int 2                                                                                          "dynamic_arr_struct",box%btoi%1#0,2
        box_extract                                                                                    box%box_extract%8#0
        v-store box%box_extract%8#0
        v-load box%box_extract%8#0                                                                     box%box_extract%8#0
        btoi                                                                                           box%array_length%1#0
        v-store box%array_length%1#0
        int 0                                                                                          0
        v-store item_index_internal%1#0
        b sum_dynamic_arr_struct_for_header@5

    sum_dynamic_arr_struct_for_header@5:
        // box_storage/contract.py:236
        // for val in self.dynamic_arr_struct.value.arr2:
        v-load item_index_internal%1#0                                                                 item_index_internal%1#0
        v-load box%array_length%1#0                                                                    item_index_internal%1#0,box%array_length%1#0
        <                                                                                              continue_looping%1#0
        v-store continue_looping%1#0
        v-load continue_looping%1#0                                                                    continue_looping%1#0
        bz sum_dynamic_arr_struct_after_for@8 ; b sum_dynamic_arr_struct_for_body@6

    sum_dynamic_arr_struct_for_body@6:
        // box_storage/contract.py:236
        // for val in self.dynamic_arr_struct.value.arr2:
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        int 18                                                                                         "dynamic_arr_struct",18
        int 2                                                                                          "dynamic_arr_struct",18,2
        box_extract                                                                                    box%box_extract%9#0
        v-store box%box_extract%9#0
        v-load box%box_extract%9#0                                                                     box%box_extract%9#0
        btoi                                                                                           box%btoi%2#0
        v-store box%btoi%2#0
        v-load item_index_internal%1#0                                                                 item_index_internal%1#0
        int 8                                                                                          item_index_internal%1#0,8
        *                                                                                              box%index_bytes_offset%1#0
        v-store box%index_bytes_offset%1#0
        v-load box%index_bytes_offset%1#0                                                              box%index_bytes_offset%1#0
        int 2                                                                                          box%index_bytes_offset%1#0,2
        +                                                                                              box%element_offset%1#0
        v-store box%element_offset%1#0
        v-load box%btoi%2#0                                                                            box%btoi%2#0
        v-load box%element_offset%1#0                                                                  box%btoi%2#0,box%element_offset%1#0
        +                                                                                              box%offset%9#0
        v-store box%offset%9#0
        byte "dynamic_arr_struct"                                                                      "dynamic_arr_struct"
        v-load box%offset%9#0                                                                          "dynamic_arr_struct",box%offset%9#0
        int 8                                                                                          "dynamic_arr_struct",box%offset%9#0,8
        box_extract                                                                                    box%box_extract%10#0
        v-store box%box_extract%10#0
        v-load box%box_extract%10#0                                                                    box%box_extract%10#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:237
        // total += val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%1#0                                                                 item_index_internal%1#0
        int 1                                                                                          item_index_internal%1#0,1
        +                                                                                              item_index_internal%1#0
        v-store item_index_internal%1#0
        b sum_dynamic_arr_struct_for_header@5

    sum_dynamic_arr_struct_after_for@8:
        // box_storage/contract.py:238
        // return total
        v-load total#0                                                                                 total#0
        retsub                                                                                         total#0


// examples.box_storage.contract.BoxContract.create_dynamic_box() -> void:
subroutine create_dynamic_box:
    create_dynamic_box_block@0:
        // box_storage/contract.py:242
        // self.dynamic_box.value = Array[UInt64]()
        byte "dynamic_box"                                                                             "dynamic_box"
        box_del                                                                                        {box_del}
        pop 1
        byte "dynamic_box"                                                                             "dynamic_box"
        byte 0x0000                                                                                    "dynamic_box",0x0000
        box_put
        retsub


// examples.box_storage.contract.BoxContract.delete_dynamic_box() -> void:
subroutine delete_dynamic_box:
    delete_dynamic_box_block@0:
        // box_storage/contract.py:246
        // del self.dynamic_box.value
        byte "dynamic_box"                                                                             "dynamic_box"
        box_del                                                                                        {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.append_dynamic_box(times: uint64) -> uint64:
subroutine append_dynamic_box:
    append_dynamic_box_block@0:                                                                        (𝕡) times#0 |
        // box_storage/contract.py:252
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        // box_storage/contract.py:253
        // arr_len = box.value.length.native
        int 0                                                                                          (𝕡) times#0 | "dynamic_box",0
        int 2                                                                                          (𝕡) times#0 | "dynamic_box",0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%0#0                                                                     (𝕡) times#0 | box%box_extract%0#0
        btoi                                                                                           (𝕡) times#0 | arr_len#0
        v-store arr_len#0                                                                              (𝕡) times#0 |
        // box_storage/contract.py:255
        // self.dynamic_box.ref.resize(2 + (arr_len + times) * 8)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        p-load times#0                                                                                 (𝕡) times#0 | arr_len#0,times#0 (copy)
        +                                                                                              (𝕡) times#0 | tmp%1#0
        v-store tmp%1#0                                                                                (𝕡) times#0 |
        v-load tmp%1#0                                                                                 (𝕡) times#0 | tmp%1#0
        int 8                                                                                          (𝕡) times#0 | tmp%1#0,8
        *                                                                                              (𝕡) times#0 | tmp%2#0
        v-store tmp%2#0                                                                                (𝕡) times#0 |
        int 2                                                                                          (𝕡) times#0 | 2
        v-load tmp%2#0                                                                                 (𝕡) times#0 | 2,tmp%2#0
        +                                                                                              (𝕡) times#0 | tmp%3#0
        v-store tmp%3#0                                                                                (𝕡) times#0 |
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        v-load tmp%3#0                                                                                 (𝕡) times#0 | "dynamic_box",tmp%3#0
        box_resize                                                                                     (𝕡) times#0 |
        // box_storage/contract.py:256
        // for i in urange(times):
        int 0                                                                                          (𝕡) times#0 | 0
        v-store i#0                                                                                    (𝕡) times#0 |
        b append_dynamic_box_for_header@1                                                              (𝕡) times#0 |

    append_dynamic_box_for_header@1:                                                                   (𝕡) times#0 |
        // box_storage/contract.py:256
        // for i in urange(times):
        v-load i#0                                                                                     (𝕡) times#0 | i#0
        p-load times#0                                                                                 (𝕡) times#0 | i#0,times#0 (copy)
        <                                                                                              (𝕡) times#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                                   (𝕡) times#0 |
        v-load continue_looping%0#0                                                                    (𝕡) times#0 | continue_looping%0#0
        bz append_dynamic_box_after_for@4 ; b append_dynamic_box_for_body@2                            (𝕡) times#0 |

    append_dynamic_box_for_body@2:                                                                     (𝕡) times#0 |
        // box_storage/contract.py:257
        // box.value.arr[arr_len] = i
        v-load i#0                                                                                     (𝕡) times#0 | i#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                             (𝕡) times#0 |
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 8                                                                                          (𝕡) times#0 | arr_len#0,8
        *                                                                                              (𝕡) times#0 | box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0                                                             (𝕡) times#0 |
        int 2                                                                                          (𝕡) times#0 | 2
        v-load box%index_bytes_offset%0#0                                                              (𝕡) times#0 | 2,box%index_bytes_offset%0#0
        +                                                                                              (𝕡) times#0 | box%offset%2#0
        v-store box%offset%2#0                                                                         (𝕡) times#0 |
        // box_storage/contract.py:252
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        // box_storage/contract.py:257
        // box.value.arr[arr_len] = i
        v-load box%offset%2#0                                                                          (𝕡) times#0 | "dynamic_box",box%offset%2#0
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) times#0 | "dynamic_box",box%offset%2#0,aggregate%val_as_bytes%0#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:258
        // arr_len += 1
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 1                                                                                          (𝕡) times#0 | arr_len#0,1
        +                                                                                              (𝕡) times#0 | arr_len#0
        v-store arr_len#0                                                                              (𝕡) times#0 |
        // box_storage/contract.py:256
        // for i in urange(times):
        v-load i#0                                                                                     (𝕡) times#0 | i#0
        int 1                                                                                          (𝕡) times#0 | i#0,1
        +                                                                                              (𝕡) times#0 | i#0
        v-store i#0                                                                                    (𝕡) times#0 |
        b append_dynamic_box_for_header@1                                                              (𝕡) times#0 |

    append_dynamic_box_after_for@4:                                                                    (𝕡) times#0 |
        // box_storage/contract.py:260
        // box.value.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%1#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%1#0
        bitlen                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0                                                                   (𝕡) times#0 |
        v-load aggregate%bitlen%0#0                                                                    (𝕡) times#0 | aggregate%bitlen%0#0
        int 16                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0,16
        <=                                                                                             (𝕡) times#0 | aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0                                                              (𝕡) times#0 |
        v-load aggregate%no_overflow%0#0                                                               (𝕡) times#0 | aggregate%no_overflow%0#0
        assert // overflow                                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%1#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%1#0
        extract 6 2                                                                                    (𝕡) times#0 | aggregate%uint16%0#0
        v-store aggregate%uint16%0#0                                                                   (𝕡) times#0 |
        // box_storage/contract.py:252
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        // box_storage/contract.py:260
        // box.value.length = arc4.UInt16(arr_len)
        int 0                                                                                          (𝕡) times#0 | "dynamic_box",0
        v-load aggregate%uint16%0#0                                                                    (𝕡) times#0 | "dynamic_box",0,aggregate%uint16%0#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:261
        // return self.dynamic_box.value.length
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        int 0                                                                                          (𝕡) times#0 | "dynamic_box",0
        int 2                                                                                          (𝕡) times#0 | "dynamic_box",0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%1#0
        v-store box%box_extract%1#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%1#0                                                                     (𝕡) times#0 | box%box_extract%1#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%0#0
        v-store box%array_length%0#0                                                                   (𝕡) times#0 |
        v-load box%array_length%0#0                                                                    (𝕡) times#0 | box%array_length%0#0
        retsub                                                                                         box%array_length%0#0


// examples.box_storage.contract.BoxContract.pop_dynamic_box(times: uint64) -> uint64:
subroutine pop_dynamic_box:
    pop_dynamic_box_block@0:                                                                           (𝕡) times#0 |
        // box_storage/contract.py:267
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        // box_storage/contract.py:268
        // arr_len = box.value.length.native - times
        int 0                                                                                          (𝕡) times#0 | "dynamic_box",0
        int 2                                                                                          (𝕡) times#0 | "dynamic_box",0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%0#0
        v-store box%box_extract%0#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%0#0                                                                     (𝕡) times#0 | box%box_extract%0#0
        btoi                                                                                           (𝕡) times#0 | tmp%0#0
        v-store tmp%0#0                                                                                (𝕡) times#0 |
        v-load tmp%0#0                                                                                 (𝕡) times#0 | tmp%0#0
        p-load times#0                                                                                 (𝕡) times#0 | tmp%0#0,times#0 (copy)
        -                                                                                              (𝕡) times#0 | arr_len#0
        v-store arr_len#0                                                                              (𝕡) times#0 |
        // box_storage/contract.py:269
        // box.value.length = arc4.UInt16(arr_len)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        itob                                                                                           (𝕡) times#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%0#0
        bitlen                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0                                                                   (𝕡) times#0 |
        v-load aggregate%bitlen%0#0                                                                    (𝕡) times#0 | aggregate%bitlen%0#0
        int 16                                                                                         (𝕡) times#0 | aggregate%bitlen%0#0,16
        <=                                                                                             (𝕡) times#0 | aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0                                                              (𝕡) times#0 |
        v-load aggregate%no_overflow%0#0                                                               (𝕡) times#0 | aggregate%no_overflow%0#0
        assert // overflow                                                                             (𝕡) times#0 |
        v-load aggregate%val_as_bytes%0#0                                                              (𝕡) times#0 | aggregate%val_as_bytes%0#0
        extract 6 2                                                                                    (𝕡) times#0 | aggregate%uint16%0#0
        v-store aggregate%uint16%0#0                                                                   (𝕡) times#0 |
        // box_storage/contract.py:267
        // box = Box(FixedArrayUInt64, key=self.dynamic_box.key)
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        // box_storage/contract.py:269
        // box.value.length = arc4.UInt16(arr_len)
        int 0                                                                                          (𝕡) times#0 | "dynamic_box",0
        v-load aggregate%uint16%0#0                                                                    (𝕡) times#0 | "dynamic_box",0,aggregate%uint16%0#0
        box_replace                                                                                    (𝕡) times#0 |
        // box_storage/contract.py:270
        // self.dynamic_box.ref.resize(2 + arr_len * 8)
        v-load arr_len#0                                                                               (𝕡) times#0 | arr_len#0
        int 8                                                                                          (𝕡) times#0 | arr_len#0,8
        *                                                                                              (𝕡) times#0 | tmp%3#0
        v-store tmp%3#0                                                                                (𝕡) times#0 |
        int 2                                                                                          (𝕡) times#0 | 2
        v-load tmp%3#0                                                                                 (𝕡) times#0 | 2,tmp%3#0
        +                                                                                              (𝕡) times#0 | tmp%4#0
        v-store tmp%4#0                                                                                (𝕡) times#0 |
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        v-load tmp%4#0                                                                                 (𝕡) times#0 | "dynamic_box",tmp%4#0
        box_resize                                                                                     (𝕡) times#0 |
        // box_storage/contract.py:272
        // return self.dynamic_box.value.length
        byte "dynamic_box"                                                                             (𝕡) times#0 | "dynamic_box"
        int 0                                                                                          (𝕡) times#0 | "dynamic_box",0
        int 2                                                                                          (𝕡) times#0 | "dynamic_box",0,2
        box_extract                                                                                    (𝕡) times#0 | box%box_extract%1#0
        v-store box%box_extract%1#0                                                                    (𝕡) times#0 |
        v-load box%box_extract%1#0                                                                     (𝕡) times#0 | box%box_extract%1#0
        btoi                                                                                           (𝕡) times#0 | box%array_length%0#0
        v-store box%array_length%0#0                                                                   (𝕡) times#0 |
        v-load box%array_length%0#0                                                                    (𝕡) times#0 | box%array_length%0#0
        retsub                                                                                         box%array_length%0#0


// examples.box_storage.contract.BoxContract.sum_dynamic_box() -> uint64:
subroutine sum_dynamic_box:
    sum_dynamic_box_block@0:
        // box_storage/contract.py:276
        // total = UInt64()
        int 0                                                                                          0
        v-store total#0
        // box_storage/contract.py:277
        // for val in self.dynamic_box.value:
        byte "dynamic_box"                                                                             "dynamic_box"
        int 0                                                                                          "dynamic_box",0
        int 2                                                                                          "dynamic_box",0,2
        box_extract                                                                                    box%box_extract%0#0
        v-store box%box_extract%0#0
        v-load box%box_extract%0#0                                                                     box%box_extract%0#0
        btoi                                                                                           box%array_length%0#0
        v-store box%array_length%0#0
        int 0                                                                                          0
        v-store item_index_internal%0#0
        b sum_dynamic_box_for_header@1

    sum_dynamic_box_for_header@1:
        // box_storage/contract.py:277
        // for val in self.dynamic_box.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        v-load box%array_length%0#0                                                                    item_index_internal%0#0,box%array_length%0#0
        <                                                                                              continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                                    continue_looping%0#0
        bz sum_dynamic_box_after_for@4 ; b sum_dynamic_box_for_body@2

    sum_dynamic_box_for_body@2:
        // box_storage/contract.py:277
        // for val in self.dynamic_box.value:
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 8                                                                                          item_index_internal%0#0,8
        *                                                                                              box%index_bytes_offset%0#0
        v-store box%index_bytes_offset%0#0
        v-load box%index_bytes_offset%0#0                                                              box%index_bytes_offset%0#0
        int 2                                                                                          box%index_bytes_offset%0#0,2
        +                                                                                              box%element_offset%0#0
        v-store box%element_offset%0#0
        byte "dynamic_box"                                                                             "dynamic_box"
        v-load box%element_offset%0#0                                                                  "dynamic_box",box%element_offset%0#0
        int 8                                                                                          "dynamic_box",box%element_offset%0#0,8
        box_extract                                                                                    box%box_extract%1#0
        v-store box%box_extract%1#0
        v-load box%box_extract%1#0                                                                     box%box_extract%1#0
        btoi                                                                                           val#0
        v-store val#0
        // box_storage/contract.py:278
        // total += val
        v-load total#0                                                                                 total#0
        v-load val#0                                                                                   total#0,val#0
        +                                                                                              total#0
        v-store total#0
        v-load item_index_internal%0#0                                                                 item_index_internal%0#0
        int 1                                                                                          item_index_internal%0#0,1
        +                                                                                              item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_dynamic_box_for_header@1

    sum_dynamic_box_after_for@4:
        // box_storage/contract.py:279
        // return total
        v-load total#0                                                                                 total#0
        retsub                                                                                         total#0


// examples.box_storage.contract.BoxContract.slice_box() -> void:
subroutine slice_box:
    slice_box_block@0:
        // box_storage/contract.py:283
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:284
        // box_0.value = Bytes(b"Testing testing 123")
        box_del                                                                                        {box_del}
        pop 1
        // box_storage/contract.py:283
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:284
        // box_0.value = Bytes(b"Testing testing 123")
        byte 0x54657374696e672074657374696e6720313233                                                  "0",0x54657374696e672074657374696e6720313233
        box_put
        // box_storage/contract.py:283
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:285
        // assert box_0.value[0:7] == b"Testing"
        box_len                                                                                        tmp%0#0,tmp%1#0
        v-store tmp%1#0                                                                                tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 0                                                                                          tmp%0#0,0
        v-load tmp%0#0                                                                                 tmp%0#0,0,tmp%0#0
        select                                                                                         tmp%3#0
        v-store tmp%3#0
        int 7                                                                                          7
        v-load tmp%0#0                                                                                 7,tmp%0#0
        <                                                                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%0#0                                                                                 tmp%0#0
        int 7                                                                                          tmp%0#0,7
        v-load tmp%4#0                                                                                 tmp%0#0,7,tmp%4#0
        select                                                                                         tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        v-load tmp%3#0                                                                                 tmp%5#0,tmp%3#0
        -                                                                                              tmp%6#0
        v-store tmp%6#0
        // box_storage/contract.py:283
        // box_0 = Box(Bytes, key=String("0"))
        byte "0"                                                                                       "0"
        // box_storage/contract.py:285
        // assert box_0.value[0:7] == b"Testing"
        v-load tmp%3#0                                                                                 "0",tmp%3#0
        v-load tmp%6#0                                                                                 "0",tmp%3#0,tmp%6#0
        box_extract                                                                                    tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                                 tmp%7#0
        byte 0x54657374696e67                                                                          tmp%7#0,0x54657374696e67
        ==                                                                                             tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                                 tmp%8#0
        assert
        // box_storage/contract.py:287
        // self.box_c.value = arc4.String("Hello")
        byte 0x424f585f43                                                                              0x424f585f43
        box_del                                                                                        {box_del}
        pop 1
        byte 0x424f585f43                                                                              0x424f585f43
        byte 0x000548656c6c6f                                                                          0x424f585f43,0x000548656c6c6f
        box_put
        // box_storage/contract.py:288
        // assert self.box_c.value.bytes[2:10] == b"Hello"
        byte 0x424f585f43                                                                              0x424f585f43
        box_len                                                                                        tmp%10#0,tmp%11#0
        v-store tmp%11#0                                                                               tmp%10#0
        v-store tmp%10#0
        int 2                                                                                          2
        v-load tmp%10#0                                                                                2,tmp%10#0
        <                                                                                              tmp%12#0
        v-store tmp%12#0
        v-load tmp%10#0                                                                                tmp%10#0
        int 2                                                                                          tmp%10#0,2
        v-load tmp%12#0                                                                                tmp%10#0,2,tmp%12#0
        select                                                                                         tmp%13#0
        v-store tmp%13#0
        int 10                                                                                         10
        v-load tmp%10#0                                                                                10,tmp%10#0
        <                                                                                              tmp%14#0
        v-store tmp%14#0
        v-load tmp%10#0                                                                                tmp%10#0
        int 10                                                                                         tmp%10#0,10
        v-load tmp%14#0                                                                                tmp%10#0,10,tmp%14#0
        select                                                                                         tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        v-load tmp%13#0                                                                                tmp%15#0,tmp%13#0
        -                                                                                              tmp%16#0
        v-store tmp%16#0
        byte 0x424f585f43                                                                              0x424f585f43
        v-load tmp%13#0                                                                                0x424f585f43,tmp%13#0
        v-load tmp%16#0                                                                                0x424f585f43,tmp%13#0,tmp%16#0
        box_extract                                                                                    tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        byte 0x48656c6c6f                                                                              tmp%17#0,0x48656c6c6f
        ==                                                                                             tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                                tmp%18#0
        assert
        retsub


// examples.box_storage.contract.BoxContract.arc4_box() -> void:
subroutine arc4_box:
    arc4_box_block@0:
        // box_storage/contract.py:292
        // box_d = Box(StaticInts, key=Bytes(b"d"))
        byte 0x64                                                                                      0x64
        // box_storage/contract.py:293
        // box_d.value = StaticInts(arc4.UInt8(0), arc4.UInt8(1), arc4.UInt8(2), arc4.UInt8(3))
        byte 0x00010203                                                                                0x64,0x00010203
        box_put
        retsub


// examples.box_storage.contract.BoxContract.test_box_ref() -> void:
subroutine test_box_ref:
    test_box_ref_block@0:
        // box_storage/contract.py:303
        // box_ref = BoxRef(key="blob")
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:304
        // assert not box_ref, "no data"
        box_len                                                                                        _%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       _%0#0
        v-store _%0#0
        v-load maybe_exists%0#0                                                                        maybe_exists%0#0
        !                                                                                              tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                                 tmp%0#0
        assert // no data
        // box_storage/contract.py:305
        // box_ref = BoxRef(key=b"blob")
        byte 0x626c6f62                                                                                0x626c6f62
        // box_storage/contract.py:306
        // assert not box_ref, "no data"
        box_len                                                                                        _%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                       _%1#0
        v-store _%1#0
        v-load maybe_exists%1#0                                                                        maybe_exists%1#0
        !                                                                                              tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                 tmp%1#0
        assert // no data
        // box_storage/contract.py:307
        // box_ref = BoxRef(key=Bytes(b"blob"))
        byte 0x626c6f62                                                                                0x626c6f62
        // box_storage/contract.py:308
        // assert not box_ref, "no data"
        box_len                                                                                        _%2#0,maybe_exists%2#0
        v-store maybe_exists%2#0                                                                       _%2#0
        v-store _%2#0
        v-load maybe_exists%2#0                                                                        maybe_exists%2#0
        !                                                                                              tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        assert // no data
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:310
        // assert not box_ref, "no data"
        box_len                                                                                        _%3#0,maybe_exists%3#0
        v-store maybe_exists%3#0                                                                       _%3#0
        v-store _%3#0
        v-load maybe_exists%3#0                                                                        maybe_exists%3#0
        !                                                                                              tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                                 tmp%3#0
        assert // no data
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:313
        // assert box_ref.create(size=32)
        int 32                                                                                         "blob",32
        box_create                                                                                     tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert
        // box_storage/contract.py:317
        // sender_bytes = Txn.sender.bytes
        txn Sender                                                                                     sender_bytes#0
        v-store sender_bytes#0
        // box_storage/contract.py:318
        // app_address = Global.current_application_address.bytes
        global CurrentApplicationAddress                                                               app_address#0
        v-store app_address#0
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:320
        // box_ref.replace(0, sender_bytes)
        int 0                                                                                          "blob",0
        v-load sender_bytes#0                                                                          "blob",0,sender_bytes#0
        box_replace
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:321
        // box_ref.resize(8000)
        int 8000                                                                                       "blob",8000
        box_resize
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:322
        // box_ref.splice(0, 0, app_address)
        int 0                                                                                          "blob",0
        int 0                                                                                          "blob",0,0
        v-load app_address#0                                                                           "blob",0,0,app_address#0
        box_splice
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:323
        // box_ref.replace(64, value_3)
        int 64                                                                                         "blob",64
        // box_storage/contract.py:319
        // value_3 = Bytes(b"hello")
        byte 0x68656c6c6f                                                                              "blob",64,0x68656c6c6f
        // box_storage/contract.py:323
        // box_ref.replace(64, value_3)
        box_replace
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:324
        // prefix = box_ref.extract(0, 32 * 2 + value_3.length)
        int 0                                                                                          "blob",0
        int 69                                                                                         "blob",0,69
        box_extract                                                                                    prefix#0
        v-store prefix#0
        // box_storage/contract.py:325
        // assert prefix == app_address + sender_bytes + value_3
        v-load app_address#0                                                                           app_address#0
        v-load sender_bytes#0                                                                          app_address#0,sender_bytes#0
        concat                                                                                         tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                                tmp%10#0
        // box_storage/contract.py:319
        // value_3 = Bytes(b"hello")
        byte 0x68656c6c6f                                                                              tmp%10#0,0x68656c6c6f
        // box_storage/contract.py:325
        // assert prefix == app_address + sender_bytes + value_3
        concat                                                                                         tmp%11#0
        v-store tmp%11#0
        v-load prefix#0                                                                                prefix#0
        v-load tmp%11#0                                                                                prefix#0,tmp%11#0
        ==                                                                                             tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                                tmp%12#0
        assert
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:328
        // assert box_ref.delete()
        box_del                                                                                        tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                                tmp%13#0
        assert
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:332
        // value, exists = box_ref.maybe()
        box_get                                                                                        value#0,exists#0
        v-store exists#0                                                                               value#0
        v-store value#0
        // box_storage/contract.py:333
        // assert not exists
        v-load exists#0                                                                                exists#0
        !                                                                                              tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                                tmp%15#0
        assert
        // box_storage/contract.py:334
        // assert value == b""
        v-load value#0                                                                                 value#0
        byte 0x                                                                                        value#0,0x
        ==                                                                                             tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                                tmp%16#0
        assert
        // box_storage/contract.py:335
        // assert box_ref.get(default=sender_bytes) == sender_bytes
        v-load sender_bytes#0                                                                          sender_bytes#0
        v-load value#0                                                                                 sender_bytes#0,value#0
        v-load exists#0                                                                                sender_bytes#0,value#0,exists#0
        select                                                                                         state_get%0#0
        v-store state_get%0#0
        v-load state_get%0#0                                                                           state_get%0#0
        v-load sender_bytes#0                                                                          state_get%0#0,sender_bytes#0
        ==                                                                                             tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                                tmp%17#0
        assert
        // box_storage/contract.py:338
        // box_ref.put(sender_bytes + app_address)
        v-load sender_bytes#0                                                                          sender_bytes#0
        v-load app_address#0                                                                           sender_bytes#0,app_address#0
        concat                                                                                         tmp%18#0
        v-store tmp%18#0
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:338
        // box_ref.put(sender_bytes + app_address)
        v-load tmp%18#0                                                                                "blob",tmp%18#0
        box_put
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:340
        // assert box_ref.length == 64
        box_len                                                                                        value%0#0,check%0#0
        v-store check%0#0                                                                              value%0#0
        v-store value%0#0
        v-load value%0#0                                                                               value%0#0
        int 64                                                                                         value%0#0,64
        ==                                                                                             tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                                tmp%19#0
        assert
        // box_storage/contract.py:309
        // box_ref = BoxRef(key=String("blob"))
        byte "blob"                                                                                    "blob"
        // box_storage/contract.py:396
        // return ref.length
        box_len                                                                                        value%0#0,check%0#0
        v-store check%0#0                                                                              value%0#0
        v-store value%0#0
        // box_storage/contract.py:341
        // assert get_box_ref_length(box_ref) == 64
        v-load value%0#0                                                                               value%0#0
        int 64                                                                                         value%0#0,64
        ==                                                                                             tmp%21#0
        v-store tmp%21#0
        v-load tmp%21#0                                                                                tmp%21#0
        assert
        // box_storage/contract.py:344
        // self.box_ref.create(size=UInt64(32))
        byte "box_ref"                                                                                 "box_ref"
        int 32                                                                                         "box_ref",32
        box_create                                                                                     {box_create}
        pop 1
        // box_storage/contract.py:346
        // self.box_ref.delete()
        byte "box_ref"                                                                                 "box_ref"
        box_del                                                                                        {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.box_map_test() -> void:
subroutine box_map_test:
    box_map_test_block@0:
        // box_storage/contract.py:350
        // key_0 = UInt64(0)
        int 0                                                                                          0
        // box_storage/contract.py:353
        // self.box_map[key_0] = value
        itob                                                                                           box_0#0
        v-store box_0#0
        v-load box_0#0                                                                                 box_0#0
        box_del                                                                                        {box_del}
        pop 1
        v-load box_0#0                                                                                 box_0#0
        // box_storage/contract.py:352
        // value = String("Hmmmmm")
        byte "Hmmmmm"                                                                                  box_0#0,"Hmmmmm"
        // box_storage/contract.py:353
        // self.box_map[key_0] = value
        box_put
        // box_storage/contract.py:356
        // assert self.box_map[key_0].bytes.length == value.bytes.length
        v-load box_0#0                                                                                 box_0#0
        box_len                                                                                        value%0#0,check%0#0
        v-store check%0#0                                                                              value%0#0
        v-store value%0#0
        v-load value%0#0                                                                               value%0#0
        int 6                                                                                          value%0#0,6
        ==                                                                                             tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                                 tmp%1#0
        assert
        // box_storage/contract.py:357
        // assert self.box_map[key_0].bytes.length == box_0.length
        v-load box_0#0                                                                                 box_0#0
        box_len                                                                                        value%1#0,check%1#0
        v-store check%1#0                                                                              value%1#0
        v-store value%1#0
        v-load box_0#0                                                                                 box_0#0
        box_len                                                                                        value%2#0,check%2#0
        v-store check%2#0                                                                              value%2#0
        v-store value%2#0
        v-load value%1#0                                                                               value%1#0
        v-load value%2#0                                                                               value%1#0,value%2#0
        ==                                                                                             tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                                 tmp%2#0
        assert
        // box_storage/contract.py:358
        // assert self.box_map.length(key_0) == value.bytes.length
        v-load box_0#0                                                                                 box_0#0
        box_len                                                                                        value%3#0,check%3#0
        v-store check%3#0                                                                              value%3#0
        v-store value%3#0
        v-load value%3#0                                                                               value%3#0
        int 6                                                                                          value%3#0,6
        ==                                                                                             tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                                 tmp%4#0
        assert
        // box_storage/contract.py:351
        // key_1 = UInt64(1)
        int 1                                                                                          1
        // box_storage/contract.py:360
        // assert self.box_map.get(key_1, default=String("default")) == String("default")
        itob                                                                                           encoded_value%5#0
        v-store encoded_value%5#0
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_get                                                                                        maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       maybe_value%0#0
        v-store maybe_value%0#0
        byte "default"                                                                                 "default"
        v-load maybe_value%0#0                                                                         "default",maybe_value%0#0
        v-load maybe_exists%0#0                                                                        "default",maybe_value%0#0,maybe_exists%0#0
        select                                                                                         state_get%0#0
        v-store state_get%0#0
        v-load state_get%0#0                                                                           state_get%0#0
        byte "default"                                                                                 state_get%0#0,"default"
        ==                                                                                             tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                                 tmp%5#0
        assert
        // box_storage/contract.py:361
        // value, exists = self.box_map.maybe(key_1)
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_len                                                                                        value#1,exists#0
        v-store exists#0                                                                               value#1
        v-store value#1
        // box_storage/contract.py:362
        // assert not exists
        v-load exists#0                                                                                exists#0
        !                                                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                                 tmp%6#0
        assert
        // box_storage/contract.py:368
        // tmp_box_map[key_1] = String("hello")
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_del                                                                                        {box_del}
        pop 1
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        byte "hello"                                                                                   encoded_value%5#0,"hello"
        box_put
        // box_storage/contract.py:370
        // del tmp_box_map[key_1]
        v-load encoded_value%5#0                                                                       encoded_value%5#0
        box_del                                                                                        {box_del}
        pop 1
        retsub


// examples.box_storage.contract.BoxContract.box_map_set(key: uint64, value: bytes) -> void:
subroutine box_map_set:
    box_map_set_block@0:                                                                               (𝕡) key#0,value#0 |
        // box_storage/contract.py:374
        // self.box_map[key] = value
        p-load key#0                                                                                   (𝕡) key#0,value#0 | key#0 (copy)
        itob                                                                                           (𝕡) key#0,value#0 | encoded_value%0#0
        v-store encoded_value%0#0                                                                      (𝕡) key#0,value#0 |
        v-load encoded_value%0#0                                                                       (𝕡) key#0,value#0 | encoded_value%0#0
        box_del                                                                                        (𝕡) key#0,value#0 | {box_del}
        pop 1                                                                                          (𝕡) key#0,value#0 |
        v-load encoded_value%0#0                                                                       (𝕡) key#0,value#0 | encoded_value%0#0
        p-load value#0                                                                                 (𝕡) key#0,value#0 | encoded_value%0#0,value#0 (copy)
        box_put                                                                                        (𝕡) key#0,value#0 |
        retsub


// examples.box_storage.contract.BoxContract.box_map_get(key: uint64) -> bytes:
subroutine box_map_get:
    box_map_get_block@0:                                                                               (𝕡) key#0 |
        // box_storage/contract.py:378
        // return self.box_map[key]
        p-load key#0                                                                                   (𝕡) key#0 | key#0 (copy)
        itob                                                                                           (𝕡) key#0 | encoded_value%0#0
        v-store encoded_value%0#0                                                                      (𝕡) key#0 |
        v-load encoded_value%0#0                                                                       (𝕡) key#0 | encoded_value%0#0
        box_get                                                                                        (𝕡) key#0 | aggregate%box_get%0#0,aggregate%box_get%1#0
        v-store aggregate%box_get%1#0                                                                  (𝕡) key#0 | aggregate%box_get%0#0
        v-store aggregate%box_get%0#0                                                                  (𝕡) key#0 |
        v-load aggregate%box_get%1#0                                                                   (𝕡) key#0 | aggregate%box_get%1#0
        assert // check self.box_map entry exists                                                      (𝕡) key#0 |
        v-load aggregate%box_get%0#0                                                                   (𝕡) key#0 | aggregate%box_get%0#0
        retsub                                                                                         aggregate%box_get%0#0


// examples.box_storage.contract.BoxContract.box_map_del(key: uint64) -> void:
subroutine box_map_del:
    box_map_del_block@0:                                                                               (𝕡) key#0 |
        // box_storage/contract.py:382
        // del self.box_map[key]
        p-load key#0                                                                                   (𝕡) key#0 | key#0 (copy)
        itob                                                                                           (𝕡) key#0 | encoded_value%0#0
        v-store encoded_value%0#0                                                                      (𝕡) key#0 |
        v-load encoded_value%0#0                                                                       (𝕡) key#0 | encoded_value%0#0
        box_del                                                                                        (𝕡) key#0 | {box_del}
        pop 1                                                                                          (𝕡) key#0 |
        retsub


// examples.box_storage.contract.BoxContract.box_map_exists(key: uint64) -> uint64:
subroutine box_map_exists:
    box_map_exists_block@0:                                                                            (𝕡) key#0 |
        // box_storage/contract.py:386
        // return key in self.box_map
        p-load key#0                                                                                   (𝕡) key#0 | key#0 (copy)
        itob                                                                                           (𝕡) key#0 | encoded_value%0#0
        v-store encoded_value%0#0                                                                      (𝕡) key#0 |
        v-load encoded_value%0#0                                                                       (𝕡) key#0 | encoded_value%0#0
        box_len                                                                                        (𝕡) key#0 | _%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                       (𝕡) key#0 | _%0#0
        v-store _%0#0                                                                                  (𝕡) key#0 |
        v-load maybe_exists%0#0                                                                        (𝕡) key#0 | maybe_exists%0#0
        retsub                                                                                         maybe_exists%0#0


