debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['box_storage'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
box_storage/contract.py:101:9 warning: expression result is ignored
box_storage/contract.py:140:9 warning: expression result is ignored
box_storage/contract.py:261:9 warning: expression result is ignored
box_storage/contract.py:302:9 warning: expression result is ignored
box_storage/contract.py:430:9 warning: expression result is ignored
box_storage/contract.py:432:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.get_box_value_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_ref_length
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Terminated block@36
debug: Sealing block@37
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Terminated block@40
debug: Sealing block@41
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes
debug: Sealing block@0
box_storage/contract.py:102:9 debug: encountered already materialized expression ('box_large'), reusing result: "box_large"
box_storage/contract.py:108:9 debug: encountered already materialized expression ('box_a'), reusing result: "box_a"
box_storage/contract.py:118:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:118:46 debug: encountered already materialized expression (reinterpret_cast<bytes>(c)), reusing result: c#0
box_storage/contract.py:119:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:119:40 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:119:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:120:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:120:40 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:120:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:124:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:124:40 debug: encountered already materialized expression (arc4_decode(b, bytes)), reusing result: tmp%47#0
box_storage/contract.py:125:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:125:34 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:125:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:126:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:126:34 debug: encountered already materialized expression (5u), reusing result: 5u
box_storage/contract.py:126:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:127:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:127:35 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:127:16 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints
debug: Sealing block@0
box_storage/contract.py:144:9 debug: encountered already materialized expression ('many_ints'), reusing result: "many_ints"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Sealing block@0
box_storage/contract.py:170:9 debug: encountered already materialized expression (large), reusing result: large#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:218:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:220:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:223:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Sealing block@0
box_storage/contract.py:241:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:242:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_nested_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_write
debug: Sealing block@0
box_storage/contract.py:270:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:271:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:272:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:273:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:274:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:275:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_read
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function examples.box_storage.contract.BoxContract.create_bools
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_bool
debug: Sealing block@0
box_storage/contract.py:306:9 debug: encountered already materialized expression ('too_many_bools'), reusing result: "too_many_bools"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_bools
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@4
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@2) in block@2
debug: Added total#2 to Phi node: let total#3: uint64 = φ(total#1 <- block@2, total#2 <- block@3) in block@3
debug: Created Phi assignment: let stop_at_total#1: uint64 = undefined while trying to resolve 'stop_at_total' in block@4
debug: Looking for 'stop_at_total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let stop_at_total#2: uint64 = undefined while trying to resolve 'stop_at_total' in block@1
debug: Added stop_at_total#2 to Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2) in block@2
debug: Added stop_at_total#2 to Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) (stop_at_total#1) with stop_at_total#2
debug: Deleting Phi assignment: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3)
debug: Replaced trivial Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) (stop_at_total#1) with stop_at_total#2 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@7) in block@7
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#3 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#3 <- block@7) in block@7
debug: Added stop_at_total#0 to Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0) in block@0
debug: Added stop_at_total#2 to Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) (stop_at_total#2) with stop_at_total#0
debug: Deleting Phi assignment: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7)
debug: Replaced trivial Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) (stop_at_total#2) with stop_at_total#0 in current definition for 6 blocks
debug: Sealing block@8
debug: Created Phi assignment: let total#4: uint64 = undefined while trying to resolve 'total' in block@8
debug: Added total#1 to Phi node: let total#4: uint64 = φ(total#1 <- block@1) in block@1
debug: Added total#3 to Phi node: let total#4: uint64 = φ(total#1 <- block@1, total#3 <- block@5) in block@5
debug: Terminated block@8
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:335:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:338:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Sealing block@0
box_storage/contract.py:347:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Sealing block@0
box_storage/contract.py:361:9 debug: encountered already materialized expression ('dynamic_box'), reusing result: "dynamic_box"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Sealing block@0
box_storage/contract.py:365:9 debug: encountered already materialized expression ('dynamic_arr_struct'), reusing result: "dynamic_arr_struct"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box
debug: Sealing block@0
box_storage/contract.py:371:16 debug: encountered already materialized expression (box_0), reusing result: box_0#0
box_storage/contract.py:371:28 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:371:30 debug: encountered already materialized expression (7u), reusing result: 7u
box_storage/contract.py:371:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(box_0)[0]), 0u, 0u < SINGLE_EVAL(id=0))), reusing result: tmp%3#0
box_storage/contract.py:374:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:374:39 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:374:41 debug: encountered already materialized expression (10u), reusing result: 10u
box_storage/contract.py:374:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(hex<"424F585F43">)[0]), 2u, 2u < SINGLE_EVAL(id=0))), reusing result: tmp%13#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Removing unused variable tmp%12#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:499:24 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:222:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
box_storage/contract.py:209:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
box_storage/contract.py:213:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable arr2_index#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:240:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
box_storage/contract.py:243:17 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
box_storage/contract.py:248:16 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable arr2_index#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable tail_offset#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Removing unused variable reverse_index_internal%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reverse_index_internal%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable value#1
debug: Removing unused variable tmp_box_map#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.box_storage.contract.BoxContract
debug: lowering array IR nodes in clear program of examples.box_storage.contract.BoxContract
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%extract%4#0
debug: Removing unused variable aggregate%extract%5#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%1#0
debug: Removing unused variable aggregate%extract%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%extract%2#0
debug: Removing unused variable aggregate%extract%3#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%array_trimmed%1#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%total_length%1#0
debug: Removing unused variable aggregate%total_length%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%get_bit%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%extract%2#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init, []
debug: auto reserving slots in _puya_lib.util.ensure_budget, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_replace_dynamic_element, []
debug: auto reserving slots in _puya_lib.arc4.static_array_replace_dynamic_element, []
box_storage/contract.py:475 debug: auto reserving slots in examples.box_storage.contract.get_box_value_plus_1, []
box_storage/contract.py:480 debug: auto reserving slots in examples.box_storage.contract.get_box_ref_length, []
box_storage/contract.py:485 debug: auto reserving slots in examples.box_storage.contract.get_box_map_value_from_key_plus_1, []
box_storage/contract.py:95:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_boxes[routing], []
box_storage/contract.py:131:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.check_keys[routing], []
box_storage/contract.py:138:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_many_ints[routing], []
box_storage/contract.py:142:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_many_ints[routing], []
box_storage/contract.py:146:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_many_ints[routing], []
box_storage/contract.py:154:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_boxes[routing], []
box_storage/contract.py:167:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing], []
box_storage/contract.py:173:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.read_boxes[routing], []
box_storage/contract.py:182:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.boxes_exist[routing], []
box_storage/contract.py:186:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing], []
box_storage/contract.py:195:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing], []
box_storage/contract.py:199:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing], []
box_storage/contract.py:231:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing], []
box_storage/contract.py:253:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_nested_struct[routing], []
box_storage/contract.py:267:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.nested_write[routing], []
box_storage/contract.py:277:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.nested_read[routing], []
box_storage/contract.py:289:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing], []
box_storage/contract.py:300:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_bools[routing], []
box_storage/contract.py:304:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_bool[routing], []
box_storage/contract.py:308:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_bools[routing], []
box_storage/contract.py:318:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_dynamic_box[routing], []
box_storage/contract.py:322:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_dynamic_box[routing], []
box_storage/contract.py:326:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.append_dynamic_box[routing], []
box_storage/contract.py:341:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing], []
box_storage/contract.py:352:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing], []
box_storage/contract.py:359:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.write_dynamic_box[routing], []
box_storage/contract.py:363:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing], []
box_storage/contract.py:367:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.slice_box[routing], []
box_storage/contract.py:376:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.arc4_box[routing], []
box_storage/contract.py:386:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.test_box_ref[routing], []
box_storage/contract.py:434:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_test[routing], []
box_storage/contract.py:458:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_set[routing], []
box_storage/contract.py:462:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_get[routing], []
box_storage/contract.py:466:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_del[routing], []
box_storage/contract.py:470:6 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_exists[routing], []
box_storage/contract.py:81 debug: auto reserving slots in examples.box_storage.contract.BoxContract.__init__, []
box_storage/contract.py:95 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_boxes, []
box_storage/contract.py:131 debug: auto reserving slots in examples.box_storage.contract.BoxContract.check_keys, []
box_storage/contract.py:138 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_many_ints, []
box_storage/contract.py:142 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_many_ints, []
box_storage/contract.py:146 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_many_ints, []
box_storage/contract.py:154 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_boxes, []
box_storage/contract.py:167 debug: auto reserving slots in examples.box_storage.contract.BoxContract.indirect_extract_and_replace, []
box_storage/contract.py:173 debug: auto reserving slots in examples.box_storage.contract.BoxContract.read_boxes, []
box_storage/contract.py:182 debug: auto reserving slots in examples.box_storage.contract.BoxContract.boxes_exist, []
box_storage/contract.py:186 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct, []
box_storage/contract.py:195 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct, []
box_storage/contract.py:199 debug: auto reserving slots in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct, []
box_storage/contract.py:231 debug: auto reserving slots in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct, []
box_storage/contract.py:253 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_nested_struct, []
box_storage/contract.py:267 debug: auto reserving slots in examples.box_storage.contract.BoxContract.nested_write, []
box_storage/contract.py:277 debug: auto reserving slots in examples.box_storage.contract.BoxContract.nested_read, []
box_storage/contract.py:289 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct, []
box_storage/contract.py:300 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_bools, []
box_storage/contract.py:304 debug: auto reserving slots in examples.box_storage.contract.BoxContract.set_bool, []
box_storage/contract.py:308 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_bools, []
box_storage/contract.py:318 debug: auto reserving slots in examples.box_storage.contract.BoxContract.create_dynamic_box, []
box_storage/contract.py:322 debug: auto reserving slots in examples.box_storage.contract.BoxContract.delete_dynamic_box, []
box_storage/contract.py:326 debug: auto reserving slots in examples.box_storage.contract.BoxContract.append_dynamic_box, []
box_storage/contract.py:341 debug: auto reserving slots in examples.box_storage.contract.BoxContract.pop_dynamic_box, []
box_storage/contract.py:352 debug: auto reserving slots in examples.box_storage.contract.BoxContract.sum_dynamic_box, []
box_storage/contract.py:359 debug: auto reserving slots in examples.box_storage.contract.BoxContract.write_dynamic_box, []
box_storage/contract.py:363 debug: auto reserving slots in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct, []
box_storage/contract.py:367 debug: auto reserving slots in examples.box_storage.contract.BoxContract.slice_box, []
box_storage/contract.py:376 debug: auto reserving slots in examples.box_storage.contract.BoxContract.arc4_box, []
box_storage/contract.py:386 debug: auto reserving slots in examples.box_storage.contract.BoxContract.test_box_ref, []
box_storage/contract.py:434 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_test, []
box_storage/contract.py:458 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_set, []
box_storage/contract.py:462 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_get, []
box_storage/contract.py:466 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_del, []
box_storage/contract.py:470 debug: auto reserving slots in examples.box_storage.contract.BoxContract.box_map_exists, []
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.util.ensure_budget
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.util.ensure_budget using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in _puya_lib.util.ensure_budget
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_replace_dynamic_element using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.static_array_replace_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.static_array_replace_dynamic_element using strategy 'root_operand'
debug: Coalescing new_head_and_tail#0 with [new_head_and_tail#5, new_head_and_tail#1, new_head_and_tail#2]
debug: Coalescing head_offset#0 with [head_offset#5, head_offset#1, head_offset#2]
debug: Coalescing tail_offset#0 with [tail_offset#1, tail_offset#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.static_array_replace_dynamic_element
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.get_box_value_plus_1
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.get_box_value_plus_1 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.get_box_value_plus_1
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.get_box_ref_length
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.get_box_ref_length using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.get_box_ref_length
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.get_box_map_value_from_key_plus_1 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_boxes[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.check_keys[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_many_ints[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_many_ints[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_many_ints[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_boxes[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.read_boxes[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.boxes_exist[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_nested_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.nested_write[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.nested_read[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_bools[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_bool[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_bools[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.append_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.write_dynamic_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.slice_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.arc4_box[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.test_box_ref[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_test[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_set[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_get[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_del[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_exists[routing] using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__init__ using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_boxes
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_boxes using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_boxes
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.check_keys
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.check_keys using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.check_keys
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_many_ints
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_many_ints using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_many_ints
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_many_ints
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_many_ints using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_many_ints
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_many_ints
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_many_ints using strategy 'root_operand'
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_many_ints
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_boxes
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_boxes using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_boxes
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.indirect_extract_and_replace using strategy 'root_operand'
debug: Coalescing large#0 with [large#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.read_boxes
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.read_boxes using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.read_boxes
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.boxes_exist
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.boxes_exist using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.boxes_exist
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct using strategy 'root_operand'
debug: Coalescing tmp%1#0 with [tmp%1#4, tmp%1#3, tmp%1#5, tmp%1#2, tmp%1#1]
debug: Coalescing arr_len#0 with [arr_len#5, arr_len#1, arr_len#2]
debug: Coalescing tmp%2#0 with [tmp%2#4, tmp%2#3, tmp%2#5, tmp%2#2, tmp%2#1]
debug: Coalescing tmp%3#0 with [tmp%3#4, tmp%3#3, tmp%3#5, tmp%3#2, tmp%3#1]
debug: Coalescing arr_size#0 with [arr_size#1]
debug: Coalescing index#0 with [index#1, index#2]
debug: Coalescing tmp%0#1 with [tmp%0#4, tmp%0#3, tmp%0#5, tmp%0#2]
debug: Coalescing head#0 with [head#1, head#2]
debug: Coalescing tmp%4#0 with [tmp%4#2, tmp%4#3, tmp%4#1]
debug: Coalescing dyn_arr_index#0 with [dyn_arr_index#1, dyn_arr_index#2]
debug: Coalescing tmp%5#0 with [tmp%5#2, tmp%5#3, tmp%5#1]
debug: Coalescing head_and_dyn_arr#0 with [head_and_dyn_arr#1]
debug: Coalescing dyn_arr2_index#0 with [dyn_arr2_index#1]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 88 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct using strategy 'root_operand'
debug: Coalescing tmp%0#0 with [tmp%0#2, tmp%0#1, tmp%0#3, tmp%0#5, tmp%0#4]
debug: Coalescing tmp%1#0 with [tmp%1#2, tmp%1#1, tmp%1#3, tmp%1#5, tmp%1#4]
debug: Coalescing tmp%2#0 with [tmp%2#2, tmp%2#1, tmp%2#3, tmp%2#5, tmp%2#4]
debug: Coalescing arr_size#0 with [arr_size#1]
debug: Coalescing index#0 with [index#1, index#2, index#3]
debug: Coalescing head#0 with [head#1, head#2]
debug: Coalescing tmp%3#0 with [tmp%3#2, tmp%3#1, tmp%3#3, tmp%3#5, tmp%3#4]
debug: Coalescing tmp%4#0 with [tmp%4#1, tmp%4#2, tmp%4#3]
debug: Coalescing dyn_arr_index#0 with [dyn_arr_index#1, dyn_arr_index#2]
debug: Coalescing tmp%5#1 with [tmp%5#2, tmp%5#3]
debug: Coalescing head_and_dyn_arr#0 with [head_and_dyn_arr#1]
debug: Coalescing dyn_arr2_index#0 with [dyn_arr2_index#1]
debug: Coalescing resulted in 70 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_nested_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_nested_struct using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_nested_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.nested_write
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.nested_write using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.nested_write
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.nested_read
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.nested_read using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.nested_read
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct using strategy 'root_operand'
debug: Coalescing total#0 with [total#7, total#1, total#2, total#10, total#3, total#4]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing val#0 with [val#1]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing resulted in 36 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_bools
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_bools using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_bools
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.set_bool
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.set_bool using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.set_bool
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_bools
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_bools using strategy 'root_operand'
debug: Coalescing total#0 with [total#7, total#1, total#2, total#3, total#4]
debug: Coalescing total#10 with [total#13]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 27 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_bools
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.create_dynamic_box using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.delete_dynamic_box using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.append_dynamic_box using strategy 'root_operand'
debug: Coalescing arr_len#0 with [arr_len#5, arr_len#1, arr_len#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 18 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.pop_dynamic_box using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.sum_dynamic_box using strategy 'root_operand'
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.write_dynamic_box using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.slice_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.slice_box using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.slice_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.arc4_box
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.arc4_box using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.arc4_box
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.test_box_ref
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.test_box_ref using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.test_box_ref
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_test
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_test using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_test
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_set
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_set using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_set
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_get
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_get using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_get
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_del
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_del using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_del
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.box_map_exists
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.box_map_exists using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.box_map_exists
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to box_storage/out_unoptimized/BoxContract.ir/BoxContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to box_storage/out_unoptimized/BoxContract.ir/BoxContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted ensure_budget_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced ensure_budget_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted ensure_budget_while_top@1.ops[5]: 'l-store-copy tmp%2#0 0'
debug: Replaced ensure_budget_while_top@1.ops[7]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted ensure_budget_while_top@1.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced ensure_budget_while_top@1.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted ensure_budget_switch_case_1@4.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced ensure_budget_switch_case_1@4.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[5]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[7]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[26]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[28]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[22]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[12]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[21]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_replace_dynamic_element_block@0.ops[8]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_block@0.ops[26]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[23]: 'l-store-copy tmp%4#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[25]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[29]: 'l-store-copy tmp%5#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[31]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[36]: 'l-store-copy tmp%6#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[38]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[41]: 'l-store-copy tmp%7#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[43]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[49]: 'l-store-copy tmp%8#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[51]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[52]: 'l-store-copy end_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[54]: 'v-load end_offset#0' with 'l-load end_offset#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[57]: 'l-store-copy tmp%9#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[59]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[63]: 'l-store-copy tmp%10#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[65]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[71]: 'l-store-copy tmp%11#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[73]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[85]: 'l-store-copy tmp%14#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[87]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[96]: 'l-store-copy tmp%16#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[98]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[83]: 'l-store-copy tmp%13#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[86]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[46]: 'l-store-copy is_before_end#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[50]: 'v-load is_before_end#0' with 'l-load is_before_end#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[105]: 'l-store-copy tmp%17#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[109]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[79]: 'l-store-copy tmp%12#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[87]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[34]: 'l-store-copy end_of_tail#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[49]: 'v-load end_of_tail#0' with 'l-load end_of_tail#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[60]: 'l-store-copy original_offset#0 1'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[74]: 'v-load original_offset#0' with 'l-load original_offset#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[28]: 'l-store-copy next_item_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[51]: 'v-load next_item_offset#0' with 'l-load next_item_offset#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[60]: 'l-store-copy end_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[86]: 'v-load end_offset#0' with 'l-load end_offset#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[51]: 'l-store-copy end_of_tail#0 2'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[88]: 'v-load end_of_tail#0' with 'l-load end_of_tail#0'
debug: Inserted static_array_replace_dynamic_element_block@0.ops[11]: 'l-store-copy original_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_block@0.ops[63]: 'v-load original_offset#0' with 'l-load original_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced static_array_replace_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[3]: 'l-store-copy tmp%18#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[5]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[6]: 'l-store-copy tail_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[8]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%19#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[13]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[14]: 'l-store-copy tail_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[16]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[19]: 'l-store-copy tmp%20#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[21]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[22]: 'l-store-copy tail_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[24]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[26]: 'l-store-copy tmp%21#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[28]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[30]: 'l-store-copy tmp%22#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[32]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[38]: 'l-store-copy tmp%23#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[40]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[33]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[37]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[1]: 'l-store-copy new_head_and_tail#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[36]: 'v-load new_head_and_tail#0' with 'l-load new_head_and_tail#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[3]: 'l-store-copy head_offset#0 2'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[38]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted get_box_value_plus_1_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced get_box_value_plus_1_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted get_box_value_plus_1_block@0.ops[11]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced get_box_value_plus_1_block@0.ops[13]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted get_box_value_plus_1_block@0.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_box_value_plus_1_block@0.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_box_value_plus_1_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced get_box_value_plus_1_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted get_box_value_plus_1_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced get_box_value_plus_1_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted get_box_ref_length_block@0.ops[2]: 'l-store-copy check%0#0 1'
debug: Replaced get_box_ref_length_block@0.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted get_box_ref_length_block@0.ops[4]: 'l-store-copy value%0#0 1'
debug: Replaced get_box_ref_length_block@0.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[3]: 'l-store-copy materialized_values%0#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[5]: 'v-load materialized_values%0#0' with 'l-load materialized_values%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[11]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[13]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[20]: 'l-store-copy storage_value%0#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[22]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[7]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[10]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[16]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[19]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted get_box_map_value_from_key_plus_1_block@0.ops[18]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced get_box_map_value_from_key_plus_1_block@0.ops[22]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted set_boxes_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced set_boxes_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted set_boxes_block@0.ops[9]: 'l-store-copy reinterpret_Encoded(len+utf8[])%0#0 0'
debug: Replaced set_boxes_block@0.ops[13]: 'v-load reinterpret_Encoded(len+utf8[])%0#0' with 'l-load reinterpret_Encoded(len+utf8[])%0#0'
debug: Inserted set_boxes_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(len+uint8[])%0#0 0'
debug: Replaced set_boxes_block@0.ops[13]: 'v-load reinterpret_Encoded(len+uint8[])%0#0' with 'l-load reinterpret_Encoded(len+uint8[])%0#0'
debug: Inserted set_boxes_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced set_boxes_block@0.ops[13]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted set_many_ints_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced set_many_ints_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted set_many_ints_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced set_many_ints_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted set_many_ints_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced set_many_ints_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted set_many_ints_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced set_many_ints_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_many_ints_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_many_ints_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_many_ints_block@0.ops[5]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_many_ints_block@0.ops[7]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted sum_many_ints_block@0.ops[8]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced sum_many_ints_block@0.ops[10]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted sum_many_ints_block@0.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_many_ints_block@0.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_many_ints_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced sum_many_ints_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted read_boxes_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced read_boxes_block@0.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted read_boxes_block@0.ops[8]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced read_boxes_block@0.ops[10]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted read_boxes_block@0.ops[18]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced read_boxes_block@0.ops[20]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted read_boxes_block@0.ops[22]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced read_boxes_block@0.ops[24]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted read_boxes_block@0.ops[26]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced read_boxes_block@0.ops[28]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted read_boxes_block@0.ops[31]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced read_boxes_block@0.ops[33]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted read_boxes_block@0.ops[37]: 'l-store-copy aggregate%as_bytes%1#0 0'
debug: Replaced read_boxes_block@0.ops[39]: 'v-load aggregate%as_bytes%1#0' with 'l-load aggregate%as_bytes%1#0'
debug: Inserted read_boxes_block@0.ops[52]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced read_boxes_block@0.ops[54]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted read_boxes_block@0.ops[56]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced read_boxes_block@0.ops[58]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted read_boxes_block@0.ops[67]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced read_boxes_block@0.ops[69]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted read_boxes_block@0.ops[74]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced read_boxes_block@0.ops[76]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted read_boxes_block@0.ops[79]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced read_boxes_block@0.ops[81]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted read_boxes_block@0.ops[84]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced read_boxes_block@0.ops[86]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted read_boxes_block@0.ops[87]: 'l-store-copy aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]),uint64)%0#0 0'
debug: Replaced read_boxes_block@0.ops[89]: 'v-load aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]),uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]),uint64)%0#0'
debug: Inserted read_boxes_block@0.ops[94]: 'l-store-copy tmp%5#0 0'
debug: Replaced read_boxes_block@0.ops[96]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted read_boxes_block@0.ops[11]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced read_boxes_block@0.ops[14]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted read_boxes_block@0.ops[42]: 'l-store-copy aggregate%offset_as_uint16%0#0 0'
debug: Replaced read_boxes_block@0.ops[45]: 'v-load aggregate%offset_as_uint16%0#0' with 'l-load aggregate%offset_as_uint16%0#0'
debug: Inserted read_boxes_block@0.ops[50]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced read_boxes_block@0.ops[53]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted read_boxes_block@0.ops[63]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced read_boxes_block@0.ops[66]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted read_boxes_block@0.ops[74]: 'l-store-copy aggregate%as_Encoded(uint64)%1#0 0'
debug: Replaced read_boxes_block@0.ops[77]: 'v-load aggregate%as_Encoded(uint64)%1#0' with 'l-load aggregate%as_Encoded(uint64)%1#0'
debug: Inserted read_boxes_block@0.ops[95]: 'l-store-copy tmp%4#0 0'
debug: Replaced read_boxes_block@0.ops[98]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted read_boxes_block@0.ops[68]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced read_boxes_block@0.ops[77]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted read_boxes_block@0.ops[18]: 'l-store-copy tmp%1#0 0'
debug: Replaced read_boxes_block@0.ops[31]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted read_boxes_block@0.ops[3]: 'l-store-copy tmp%1#0 1'
debug: Replaced read_boxes_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted read_boxes_block@0.ops[37]: 'l-store-copy aggregate%as_Encoded(len+uint8[])%0#0 0'
debug: Replaced read_boxes_block@0.ops[51]: 'v-load aggregate%as_Encoded(len+uint8[])%0#0' with 'l-load aggregate%as_Encoded(len+uint8[])%0#0'
debug: Inserted read_boxes_block@0.ops[50]: 'l-store-copy aggregate%head%1#0 1'
debug: Replaced read_boxes_block@0.ops[69]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted read_boxes_block@0.ops[17]: 'l-store-copy aggregate%head%0#0 1'
debug: Replaced read_boxes_block@0.ops[48]: 'v-load aggregate%head%0#0' with 'l-load aggregate%head%0#0'
debug: Inserted read_boxes_block@0.ops[54]: 'l-store-copy aggregate%as_Encoded(len+uint8[])%0#0 1'
debug: Replaced read_boxes_block@0.ops[89]: 'v-load aggregate%as_Encoded(len+uint8[])%0#0' with 'l-load aggregate%as_Encoded(len+uint8[])%0#0'
debug: Inserted read_boxes_block@0.ops[1]: 'l-store-copy tmp%3#0 3'
debug: Replaced read_boxes_block@0.ops[77]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted read_boxes_block@0.ops[3]: 'l-store-copy tmp%2#0 3'
debug: Replaced read_boxes_block@0.ops[96]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted boxes_exist_block@0.ops[9]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced boxes_exist_block@0.ops[11]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted boxes_exist_block@0.ops[15]: 'l-store-copy aggregate%set_bit%0#0 0'
debug: Replaced boxes_exist_block@0.ops[17]: 'v-load aggregate%set_bit%0#0' with 'l-load aggregate%set_bit%0#0'
debug: Inserted boxes_exist_block@0.ops[21]: 'l-store-copy aggregate%set_bit%1#0 0'
debug: Replaced boxes_exist_block@0.ops[23]: 'v-load aggregate%set_bit%1#0' with 'l-load aggregate%set_bit%1#0'
debug: Inserted boxes_exist_block@0.ops[31]: 'l-store-copy aggregate%head%0#0 0'
debug: Replaced boxes_exist_block@0.ops[33]: 'v-load aggregate%head%0#0' with 'l-load aggregate%head%0#0'
debug: Inserted boxes_exist_block@0.ops[34]: 'l-store-copy aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0 0'
debug: Replaced boxes_exist_block@0.ops[36]: 'v-load aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0' with 'l-load aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0'
debug: Inserted boxes_exist_block@0.ops[41]: 'l-store-copy tmp%5#0 0'
debug: Replaced boxes_exist_block@0.ops[43]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted boxes_exist_block@0.ops[27]: 'l-store-copy aggregate%set_bit%2#0 0'
debug: Replaced boxes_exist_block@0.ops[30]: 'v-load aggregate%set_bit%2#0' with 'l-load aggregate%set_bit%2#0'
debug: Inserted boxes_exist_block@0.ops[38]: 'l-store-copy tmp%4#0 0'
debug: Replaced boxes_exist_block@0.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted boxes_exist_block@0.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced boxes_exist_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted boxes_exist_block@0.ops[3]: 'l-store-copy tmp%1#0 1'
debug: Replaced boxes_exist_block@0.ops[15]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted boxes_exist_block@0.ops[2]: 'l-store-copy tmp%2#0 2'
debug: Replaced boxes_exist_block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted boxes_exist_block@0.ops[1]: 'l-store-copy tmp%3#0 3'
debug: Replaced boxes_exist_block@0.ops[29]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[13]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[15]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[18]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted append_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced append_dynamic_arr_struct_block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[13]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[15]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[18]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted pop_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced pop_dynamic_arr_struct_block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted set_nested_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0 0'
debug: Replaced set_nested_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0'
debug: Inserted nested_write_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced nested_write_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted nested_write_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced nested_write_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted nested_write_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced nested_write_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted nested_write_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced nested_write_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted nested_read_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced nested_read_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted nested_read_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced nested_read_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted nested_read_block@0.ops[13]: 'l-store-copy reinterpret_Encoded(uint64)%2#0 0'
debug: Replaced nested_read_block@0.ops[15]: 'v-load reinterpret_Encoded(uint64)%2#0' with 'l-load reinterpret_Encoded(uint64)%2#0'
debug: Inserted nested_read_block@0.ops[22]: 'l-store-copy tmp%3#0 0'
debug: Replaced nested_read_block@0.ops[24]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted nested_read_block@0.ops[26]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced nested_read_block@0.ops[28]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted nested_read_block@0.ops[29]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced nested_read_block@0.ops[31]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted nested_read_block@0.ops[36]: 'l-store-copy tmp%5#0 0'
debug: Replaced nested_read_block@0.ops[38]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted nested_read_block@0.ops[32]: 'l-store-copy tmp%4#0 0'
debug: Replaced nested_read_block@0.ops[35]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted nested_read_block@0.ops[17]: 'l-store-copy tmp%2#0 0'
debug: Replaced nested_read_block@0.ops[21]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted nested_read_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced nested_read_block@0.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted nested_read_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced nested_read_block@0.ops[21]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[7]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[8]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[10]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_dynamic_arr_struct_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced sum_dynamic_arr_struct_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted set_bool_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced set_bool_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted set_bool_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(bool8)%0#0 0'
debug: Replaced set_bool_block@0.ops[9]: 'v-load reinterpret_Encoded(bool8)%0#0' with 'l-load reinterpret_Encoded(bool8)%0#0'
debug: Inserted set_bool_block@0.ops[12]: 'l-store-copy aggregate%get_bit%0#0 0'
debug: Replaced set_bool_block@0.ops[14]: 'v-load aggregate%get_bit%0#0' with 'l-load aggregate%get_bit%0#0'
debug: Inserted set_bool_block@0.ops[15]: 'l-store-copy tmp%1#0 0'
debug: Replaced set_bool_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted set_bool_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced set_bool_block@0.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_bools_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced sum_bools_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted sum_bools_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_bools_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_bools_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced sum_bools_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted sum_bools_block@0.ops[13]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_bools_block@0.ops[15]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted sum_bools_block@0.ops[16]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced sum_bools_block@0.ops[18]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted sum_bools_block@0.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced sum_bools_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted sum_bools_block@0.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_bools_block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append_dynamic_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced append_dynamic_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted append_dynamic_box_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced append_dynamic_box_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted append_dynamic_box_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced append_dynamic_box_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted append_dynamic_box_block@0.ops[13]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced append_dynamic_box_block@0.ops[15]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted append_dynamic_box_block@0.ops[16]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced append_dynamic_box_block@0.ops[18]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted append_dynamic_box_block@0.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced append_dynamic_box_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted append_dynamic_box_block@0.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced append_dynamic_box_block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted pop_dynamic_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted pop_dynamic_box_block@0.ops[13]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[15]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[16]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[18]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted pop_dynamic_box_block@0.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted pop_dynamic_box_block@0.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced pop_dynamic_box_block@0.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_dynamic_box_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced sum_dynamic_box_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted sum_dynamic_box_block@0.ops[5]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced sum_dynamic_box_block@0.ops[7]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted sum_dynamic_box_block@0.ops[8]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced sum_dynamic_box_block@0.ops[10]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted sum_dynamic_box_block@0.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced sum_dynamic_box_block@0.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted sum_dynamic_box_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced sum_dynamic_box_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted write_dynamic_box_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced write_dynamic_box_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted write_dynamic_box_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced write_dynamic_box_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted write_dynamic_box_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced write_dynamic_box_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted write_dynamic_box_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced write_dynamic_box_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[9]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted write_dynamic_arr_struct_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced write_dynamic_arr_struct_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_set_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_set_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_set_block@0.ops[7]: 'l-store-copy reinterpret_Encoded(len+utf8[])%0#0 0'
debug: Replaced box_map_set_block@0.ops[9]: 'v-load reinterpret_Encoded(len+utf8[])%0#0' with 'l-load reinterpret_Encoded(len+utf8[])%0#0'
debug: Inserted box_map_set_block@0.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced box_map_set_block@0.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted box_map_set_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_set_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_get_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_get_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_get_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_get_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_get_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced box_map_get_block@0.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted box_map_get_block@0.ops[13]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced box_map_get_block@0.ops[15]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted box_map_get_block@0.ops[17]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced box_map_get_block@0.ops[19]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted box_map_get_block@0.ops[21]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced box_map_get_block@0.ops[23]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted box_map_get_block@0.ops[26]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced box_map_get_block@0.ops[28]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted box_map_get_block@0.ops[29]: 'l-store-copy aggregate%as_Encoded(len+utf8[])%0#0 0'
debug: Replaced box_map_get_block@0.ops[31]: 'v-load aggregate%as_Encoded(len+utf8[])%0#0' with 'l-load aggregate%as_Encoded(len+utf8[])%0#0'
debug: Inserted box_map_get_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced box_map_get_block@0.ops[38]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted box_map_get_block@0.ops[32]: 'l-store-copy tmp%2#0 0'
debug: Replaced box_map_get_block@0.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted box_map_get_block@0.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced box_map_get_block@0.ops[25]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted box_map_del_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_del_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_del_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_del_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_exists_block@0.ops[1]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced box_map_exists_block@0.ops[3]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted box_map_exists_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced box_map_exists_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted box_map_exists_block@0.ops[14]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced box_map_exists_block@0.ops[16]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted box_map_exists_block@0.ops[17]: 'l-store-copy aggregate%as_Encoded(bool8)%0#0 0'
debug: Replaced box_map_exists_block@0.ops[19]: 'v-load aggregate%as_Encoded(bool8)%0#0' with 'l-load aggregate%as_Encoded(bool8)%0#0'
debug: Inserted box_map_exists_block@0.ops[24]: 'l-store-copy tmp%3#0 0'
debug: Replaced box_map_exists_block@0.ops[26]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted box_map_exists_block@0.ops[20]: 'l-store-copy tmp%2#0 0'
debug: Replaced box_map_exists_block@0.ops[23]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted box_map_exists_block@0.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced box_map_exists_block@0.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted __init___block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced __init___block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[41]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[43]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[44]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[46]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[52]: 'l-store-copy aggregate%updated_data%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[54]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[74]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[76]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[85]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[87]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[90]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[92]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[97]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[99]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[104]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[106]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[115]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[117]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[119]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[121]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[124]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[126]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[141]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[143]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[157]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[159]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[173]: 'l-store-copy tmp%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[175]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[185]: 'l-store-copy tmp%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[187]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[193]: 'l-store-copy tmp%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[195]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[210]: 'l-store-copy tmp%15#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[212]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[217]: 'l-store-copy tmp%16#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[219]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[230]: 'l-store-copy tmp%20#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[232]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[244]: 'l-store-copy tmp%22#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[246]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[264]: 'l-store-copy tmp%27#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[266]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[299]: 'l-store-copy tmp%31#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[301]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[315]: 'l-store-copy tmp%35#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[317]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[346]: 'l-store-copy tmp%39#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[348]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[357]: 'l-store-copy tmp%41#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[359]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[367]: 'l-store-copy tmp%42#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[369]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[374]: 'l-store-copy tmp%43#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[376]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[387]: 'l-store-copy tmp%47#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[389]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[391]: 'l-store-copy tmp%48#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[393]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[405]: 'l-store-copy tmp%50#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[407]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[425]: 'l-store-copy tmp%55#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[427]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[438]: 'l-store-copy tmp%58#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[440]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[464]: 'l-store-copy tmp%60#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[466]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[480]: 'l-store-copy tmp%64#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[482]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[493]: 'l-store-copy tmp%67#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[495]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[515]: 'l-store-copy tmp%69#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[517]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[531]: 'l-store-copy tmp%73#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[533]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[544]: 'l-store-copy tmp%76#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[546]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[566]: 'l-store-copy tmp%78#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[568]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[579]: 'l-store-copy tmp%79#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[581]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[2]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[5]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[34]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[37]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[57]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[60]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[65]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[68]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[73]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[76]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[85]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[88]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[106]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[109]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[117]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[120]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[136]: 'l-store-copy encoded_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[139]: 'v-load encoded_value%2#0' with 'l-load encoded_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[143]: 'l-store-copy check%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[146]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[157]: 'l-store-copy check%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[160]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[164]: 'l-store-copy tmp%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[167]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[175]: 'l-store-copy check%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[178]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[182]: 'l-store-copy tmp%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[185]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[193]: 'l-store-copy check%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[196]: 'v-load check%3#0' with 'l-load check%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[204]: 'l-store-copy tmp%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[207]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[222]: 'l-store-copy extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[225]: 'v-load extract%0#0' with 'l-load extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[239]: 'l-store-copy tmp%18#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[242]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[253]: 'l-store-copy tmp%21#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[256]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[259]: 'l-store-copy extract%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[262]: 'v-load extract%1#0' with 'l-load extract%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[271]: 'l-store-copy tmp%23#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[274]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[281]: 'l-store-copy tmp%26#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[284]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[299]: 'l-store-copy length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[302]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[309]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[312]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[319]: 'l-store-copy tmp%30#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[322]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[331]: 'l-store-copy tmp%32#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[334]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[354]: 'l-store-copy length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[357]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[369]: 'l-store-copy tmp%38#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[372]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[391]: 'l-store-copy extract%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[394]: 'v-load extract%2#0' with 'l-load extract%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[408]: 'l-store-copy tmp%45#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[411]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[426]: 'l-store-copy tmp%49#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[429]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[432]: 'l-store-copy extract%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[435]: 'v-load extract%3#0' with 'l-load extract%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[444]: 'l-store-copy tmp%51#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[447]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[454]: 'l-store-copy tmp%54#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[457]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[476]: 'l-store-copy length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[479]: 'v-load length%2#0' with 'l-load length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[486]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[489]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[496]: 'l-store-copy tmp%59#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[499]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[508]: 'l-store-copy tmp%61#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[511]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[535]: 'l-store-copy length%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[538]: 'v-load length%3#0' with 'l-load length%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[550]: 'l-store-copy tmp%68#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[553]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[562]: 'l-store-copy tmp%70#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[565]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[589]: 'l-store-copy length%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[592]: 'v-load length%4#0' with 'l-load length%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[604]: 'l-store-copy tmp%77#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[607]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[615]: 'l-store-copy check%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[618]: 'v-load check%4#0' with 'l-load check%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[36]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[40]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[50]: 'l-store-copy encoded_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[54]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[77]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[81]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[90]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[94]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[123]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[127]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[150]: 'l-store-copy value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[154]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[281]: 'l-store-copy tmp%23#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[284]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[283]: 'l-store-copy tmp%25#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[287]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[299]: 'l-store-copy tmp%28#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[303]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[313]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[317]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[324]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[328]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[346]: 'l-store-copy tmp%32#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[349]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[348]: 'l-store-copy tmp%34#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[352]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[359]: 'l-store-copy tmp%36#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[363]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[373]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[377]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[379]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[383]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[464]: 'l-store-copy tmp%51#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[467]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[466]: 'l-store-copy tmp%53#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[470]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[482]: 'l-store-copy tmp%56#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[486]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[500]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[504]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[511]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[515]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[533]: 'l-store-copy tmp%61#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[536]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[535]: 'l-store-copy tmp%63#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[539]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[546]: 'l-store-copy tmp%65#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[550]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[564]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[568]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[570]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[574]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[592]: 'l-store-copy tmp%70#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[595]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[594]: 'l-store-copy tmp%72#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[598]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[605]: 'l-store-copy tmp%74#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[609]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[623]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[627]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[629]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[633]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[648]: 'l-store-copy value%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[652]: 'v-load value%4#0' with 'l-load value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[312]: 'l-store-copy length%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[317]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[318]: 'l-store-copy length%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[323]: 'v-load length%0#0' with 'l-load length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[374]: 'l-store-copy length%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[379]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[502]: 'l-store-copy length%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[507]: 'v-load length%2#0' with 'l-load length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[508]: 'l-store-copy length%2#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[513]: 'v-load length%2#0' with 'l-load length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[568]: 'l-store-copy length%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[573]: 'v-load length%3#0' with 'l-load length%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[628]: 'l-store-copy length%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[633]: 'v-load length%4#0' with 'l-load length%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[21]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[27]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[287]: 'l-store-copy tmp%23#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[293]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[474]: 'l-store-copy tmp%51#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[480]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[166]: 'l-store-copy value%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[174]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[185]: 'l-store-copy value%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[193]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[226]: 'l-store-copy tmp%14#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[234]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[104]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[114]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[445]: 'l-store-copy tmp%47#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[454]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[42]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[54]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[206]: 'l-store-copy value%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[218]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[409]: 'l-store-copy tmp%40#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[421]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[574]: 'l-store-copy tmp%67#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[590]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[635]: 'l-store-copy tmp%76#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[651]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[258]: 'l-store-copy tmp%19#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[275]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[87]: 'l-store-copy b_value#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[108]: 'v-load b_value#0' with 'l-load b_value#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[444]: 'l-store-copy tmp%46#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[466]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[511]: 'l-store-copy tmp%58#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[533]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[377]: 'l-store-copy tmp%37#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[401]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[573]: 'l-store-copy tmp%66#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[602]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[635]: 'l-store-copy tmp%75#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[664]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[315]: 'l-store-copy tmp%29#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[345]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[507]: 'l-store-copy tmp%57#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_boxes_block@0.ops[542]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted examples.box_storage.contract.BoxContract.check_keys_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.check_keys_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.check_keys_block@0.ops[10]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.check_keys_block@0.ops[12]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.check_keys_block@0.ops[17]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.check_keys_block@0.ops[19]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.check_keys_block@0.ops[24]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.check_keys_block@0.ops[26]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[10]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[12]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[13]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[15]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[25]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[27]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[21]: 'l-store-copy aggregate%write_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[24]: 'v-load aggregate%write_offset%0#0' with 'l-load aggregate%write_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[30]: 'l-store-copy updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[33]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[18]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[27]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[9]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_many_ints_block@0.ops[26]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_block@0.ops[7]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_block@0.ops[10]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_block@0.ops[9]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_block@0.ops[13]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[8]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[10]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[11]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[13]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[15]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[17]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[22]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[24]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[3]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[6]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[19]: 'l-store-copy val#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2.ops[22]: 'v-load val#0' with 'l-load val#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[21]: 'l-store-copy state_get%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[23]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[26]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[28]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[32]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[34]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[36]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[38]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[40]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[42]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[45]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[47]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[48]: 'l-store-copy aggregate%as_Encoded(len+uint8[])%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[50]: 'v-load aggregate%as_Encoded(len+uint8[])%0#0' with 'l-load aggregate%as_Encoded(len+uint8[])%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[60]: 'l-store-copy state_get%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[62]: 'v-load state_get%1#0' with 'l-load state_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[64]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[66]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[69]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[71]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[75]: 'l-store-copy aggregate%length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[77]: 'v-load aggregate%length%1#0' with 'l-load aggregate%length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[79]: 'l-store-copy aggregate%as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[81]: 'v-load aggregate%as_bytes%1#0' with 'l-load aggregate%as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[83]: 'l-store-copy aggregate%length_uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[85]: 'v-load aggregate%length_uint16%1#0' with 'l-load aggregate%length_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[88]: 'l-store-copy aggregate%encoded_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[90]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[91]: 'l-store-copy aggregate%as_Encoded(len+utf8[])%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[93]: 'v-load aggregate%as_Encoded(len+utf8[])%0#0' with 'l-load aggregate%as_Encoded(len+utf8[])%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[106]: 'l-store-copy aggregate%length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[108]: 'v-load aggregate%length%2#0' with 'l-load aggregate%length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[110]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[112]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[114]: 'l-store-copy aggregate%length_uint16%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[116]: 'v-load aggregate%length_uint16%2#0' with 'l-load aggregate%length_uint16%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[119]: 'l-store-copy aggregate%encoded_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[121]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[122]: 'l-store-copy aggregate%as_Encoded(len+utf8[])%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[124]: 'v-load aggregate%as_Encoded(len+utf8[])%1#0' with 'l-load aggregate%as_Encoded(len+utf8[])%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[129]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[131]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[136]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[138]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[140]: 'l-store-copy maybe_value_converted%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[142]: 'v-load maybe_value_converted%1#0' with 'l-load maybe_value_converted%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[145]: 'l-store-copy a_exists#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[147]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[149]: 'l-store-copy tmp%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[151]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[156]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[158]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[16]: 'l-store-copy maybe_value_converted%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[19]: 'v-load maybe_value_converted%0#0' with 'l-load maybe_value_converted%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[56]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[59]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[100]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[103]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[128]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[131]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[55]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[61]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[100]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[106]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[52]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[60]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[98]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[106]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[21]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[144]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[154]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[153]: 'l-store-copy a#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[164]: 'v-load a#0' with 'l-load a#0'
debug: Inserted examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[111]: 'l-store-copy state_get%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.delete_boxes_block@0.ops[136]: 'v-load state_get%2#0' with 'l-load state_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[10]: 'l-store-copy large#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[12]: 'v-load large#0' with 'l-load large#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[16]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[18]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[19]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[21]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[23]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[25]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[28]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[30]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[32]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[34]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[35]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[37]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[43]: 'l-store-copy aggregate%updated_data%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[45]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[46]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[48]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[50]: 'l-store-copy large#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[53]: 'v-load large#0' with 'l-load large#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[40]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[44]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[15]: 'l-store-copy large#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0.ops[43]: 'v-load large#0' with 'l-load large#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[15]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[17]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[35]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[37]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[41]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[43]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[44]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[46]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[10]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[13]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[23]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[26]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[32]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[35]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[12]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[16]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[26]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[30]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[36]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[40]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[54]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[59]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[31]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[59]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[21]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[59]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.read_boxes_block@0.ops[59]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[14]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[20]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[10]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[20]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[6]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[20]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.boxes_exist_block@0.ops[20]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[4]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[6]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[8]: 'l-store-copy aggregate%len_u16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[10]: 'v-load aggregate%len_u16%0#0' with 'l-load aggregate%len_u16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[11]: 'l-store-copy aggregate%as_Encoded(len+uint64[])%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[13]: 'v-load aggregate%as_Encoded(len+uint64[])%0#0' with 'l-load aggregate%as_Encoded(len+uint64[])%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[24]: 'l-store-copy aggregate%as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[26]: 'v-load aggregate%as_bytes%1#0' with 'l-load aggregate%as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[28]: 'l-store-copy aggregate%len_u16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[30]: 'v-load aggregate%len_u16%1#0' with 'l-load aggregate%len_u16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[31]: 'l-store-copy aggregate%as_Encoded(len+uint64[])%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[33]: 'v-load aggregate%as_Encoded(len+uint64[])%1#0' with 'l-load aggregate%as_Encoded(len+uint64[])%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[37]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[39]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[47]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[49]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[65]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[67]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[75]: 'l-store-copy aggregate%as_bytes%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[77]: 'v-load aggregate%as_bytes%3#0' with 'l-load aggregate%as_bytes%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[83]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[85]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[88]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[90]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[93]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[95]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[96]: 'l-store-copy aggregate%as_Encoded(uint64,(len+uint64[]),uint64,(len+uint64[]))%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[98]: 'v-load aggregate%as_Encoded(uint64,(len+uint64[]),uint64,(len+uint64[]))%0#0' with 'l-load aggregate%as_Encoded(uint64,(len+uint64[]),uint64,(len+uint64[]))%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[40]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[43]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[52]: 'l-store-copy aggregate%offset_as_uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[55]: 'v-load aggregate%offset_as_uint16%0#0' with 'l-load aggregate%offset_as_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[60]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[63]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[71]: 'l-store-copy aggregate%as_Encoded(uint64)%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[74]: 'v-load aggregate%as_Encoded(uint64)%1#0' with 'l-load aggregate%as_Encoded(uint64)%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[83]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[86]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[104]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[110]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[45]: 'l-store-copy aggregate%head%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[55]: 'v-load aggregate%head%0#0' with 'l-load aggregate%head%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[77]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[87]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[66]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[80]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[58]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[76]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[36]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[62]: 'l-store-copy encoded_array%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[97]: 'v-load encoded_array%0#0' with 'l-load encoded_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[15]: 'l-store-copy encoded_array%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[62]: 'v-load encoded_array%0#0' with 'l-load encoded_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[23]: 'l-store-copy tmp%2#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[73]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[37]: 'l-store-copy encoded_array%1#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0.ops[105]: 'v-load encoded_array%1#0' with 'l-load encoded_array%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[13]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[15]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[18]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[20]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[22]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[25]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[27]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[36]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[38]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[50]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[52]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[53]: 'l-store-copy tuple_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[55]: 'v-load tuple_item%1#0' with 'l-load tuple_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[58]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[60]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[61]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[63]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[72]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[74]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[85]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[87]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[88]: 'l-store-copy tuple_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[90]: 'v-load tuple_item%2#0' with 'l-load tuple_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[93]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[95]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[96]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[98]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[103]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[105]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[32]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[35]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[69]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[72]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[35]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[39]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[49]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[53]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[74]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[78]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[86]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[89]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[88]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[92]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[43]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[47]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[48]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[53]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[84]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[88]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[87]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[95]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[46]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[55]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[113]: 'l-store-copy arr2_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[122]: 'v-load arr2_len#0' with 'l-load arr2_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[72]: 'l-store-copy arr_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0.ops[116]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[31]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[33]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[28]: 'l-store-copy dyn_arr_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[31]: 'v-load dyn_arr_index#0' with 'l-load dyn_arr_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[16]: 'l-store-copy head#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10.ops[31]: 'v-load head#0' with 'l-load head#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[9]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[11]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[5]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[13]: 'l-store-copy dyn_arr2_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[16]: 'v-load dyn_arr2_index#0' with 'l-load dyn_arr2_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[1]: 'l-store-copy head_and_dyn_arr#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11.ops[16]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[28]: 'l-store-copy dyn_arr_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[31]: 'v-load dyn_arr_index#0' with 'l-load dyn_arr_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[16]: 'l-store-copy head#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13.ops[31]: 'v-load head#0' with 'l-load head#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@14.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@14.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@14.ops[7]: 'l-store-copy tmp%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@14.ops[12]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[10]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[12]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[13]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[15]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[21]: 'l-store-copy aggregate%extract%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[23]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[46]: 'l-store-copy aggregate%updated_data%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[48]: 'v-load aggregate%updated_data%1#0' with 'l-load aggregate%updated_data%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[56]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[58]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[2]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[5]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[32]: 'l-store-copy aggregate%write_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[35]: 'v-load aggregate%write_offset%0#0' with 'l-load aggregate%write_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[51]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[54]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[4]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[8]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[39]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[43]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[45]: 'l-store-copy aggregate%updated_data%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[49]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[29]: 'l-store-copy aggregate%extract%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[36]: 'v-load aggregate%extract%2#0' with 'l-load aggregate%extract%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[9]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[20]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[27]: 'l-store-copy aggregate%extract%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[44]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[19]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[41]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[22]: 'l-store-copy storage_value%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[52]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[36]: 'l-store-copy arr_len#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2.ops[65]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[2]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[4]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[6]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[8]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[11]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[13]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[19]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[21]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[22]: 'l-store-copy aggregate%as_Encoded(uint16)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[24]: 'v-load aggregate%as_Encoded(uint16)%0#0' with 'l-load aggregate%as_Encoded(uint16)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[33]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[35]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[39]: 'l-store-copy aggregate%extract%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[41]: 'v-load aggregate%extract%3#0' with 'l-load aggregate%extract%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[50]: 'l-store-copy aggregate%updated_data%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[52]: 'v-load aggregate%updated_data%3#0' with 'l-load aggregate%updated_data%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[28]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[31]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[54]: 'l-store-copy updated_tuple%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[57]: 'v-load updated_tuple%1#0' with 'l-load updated_tuple%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[30]: 'l-store-copy aggregate%box_get%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[34]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[47]: 'l-store-copy aggregate%updated_data%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[51]: 'v-load aggregate%updated_data%2#0' with 'l-load aggregate%updated_data%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[16]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[39]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[51]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[26]: 'l-store-copy tmp%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[48]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[1]: 'l-store-copy arr_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4.ops[65]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[31]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[33]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[28]: 'l-store-copy dyn_arr_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[31]: 'v-load dyn_arr_index#0' with 'l-load dyn_arr_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[16]: 'l-store-copy head#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6.ops[31]: 'v-load head#0' with 'l-load head#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[9]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[11]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[5]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[13]: 'l-store-copy dyn_arr2_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[16]: 'v-load dyn_arr2_index#0' with 'l-load dyn_arr2_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[1]: 'l-store-copy head_and_dyn_arr#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7.ops[16]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[3]: 'l-store-copy tmp%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[6]: 'l-store-copy arr2_offset#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[8]: 'v-load arr2_offset#0' with 'l-load arr2_offset#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[10]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[12]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[14]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[16]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[19]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[21]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[27]: 'l-store-copy aggregate%uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[29]: 'v-load aggregate%uint16%1#0' with 'l-load aggregate%uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[30]: 'l-store-copy aggregate%as_Encoded(uint16)%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[32]: 'v-load aggregate%as_Encoded(uint16)%1#0' with 'l-load aggregate%as_Encoded(uint16)%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[41]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[43]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[47]: 'l-store-copy aggregate%updated_data%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[49]: 'v-load aggregate%updated_data%4#0' with 'l-load aggregate%updated_data%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[61]: 'l-store-copy storage_value%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[63]: 'v-load storage_value%6#0' with 'l-load storage_value%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[75]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[77]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[78]: 'l-store-copy tuple_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[80]: 'v-load tuple_item%3#0' with 'l-load tuple_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[83]: 'l-store-copy aggregate%array_length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[85]: 'v-load aggregate%array_length%2#0' with 'l-load aggregate%array_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[86]: 'l-store-copy tmp%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[88]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[91]: 'l-store-copy tmp%14#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[93]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[102]: 'l-store-copy storage_value%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[104]: 'v-load storage_value%7#0' with 'l-load storage_value%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[115]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[117]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[118]: 'l-store-copy tuple_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[120]: 'v-load tuple_item%4#0' with 'l-load tuple_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[123]: 'l-store-copy aggregate%array_length%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[125]: 'v-load aggregate%array_length%3#0' with 'l-load aggregate%array_length%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[126]: 'l-store-copy tmp%15#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[128]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[131]: 'l-store-copy tmp%16#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[133]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[142]: 'l-store-copy storage_value%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[144]: 'v-load storage_value%8#0' with 'l-load storage_value%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[156]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[158]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[159]: 'l-store-copy tuple_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[161]: 'v-load tuple_item%5#0' with 'l-load tuple_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[164]: 'l-store-copy aggregate%array_length%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[166]: 'v-load aggregate%array_length%4#0' with 'l-load aggregate%array_length%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[167]: 'l-store-copy tmp%17#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[169]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[36]: 'l-store-copy aggregate%box_get%11#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[39]: 'v-load aggregate%box_get%11#0' with 'l-load aggregate%box_get%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[51]: 'l-store-copy updated_tuple%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[54]: 'v-load updated_tuple%2#0' with 'l-load updated_tuple%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[58]: 'l-store-copy aggregate%box_get%13#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[61]: 'v-load aggregate%box_get%13#0' with 'l-load aggregate%box_get%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[100]: 'l-store-copy aggregate%box_get%15#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[103]: 'v-load aggregate%box_get%15#0' with 'l-load aggregate%box_get%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[141]: 'l-store-copy aggregate%box_get%17#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[144]: 'v-load aggregate%box_get%17#0' with 'l-load aggregate%box_get%17#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[38]: 'l-store-copy aggregate%box_get%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[42]: 'v-load aggregate%box_get%10#0' with 'l-load aggregate%box_get%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[61]: 'l-store-copy aggregate%box_get%12#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[65]: 'v-load aggregate%box_get%12#0' with 'l-load aggregate%box_get%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[75]: 'l-store-copy aggregate%extract_uint16%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[79]: 'v-load aggregate%extract_uint16%4#0' with 'l-load aggregate%extract_uint16%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[105]: 'l-store-copy aggregate%box_get%14#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[109]: 'v-load aggregate%box_get%14#0' with 'l-load aggregate%box_get%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[117]: 'l-store-copy storage_value%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[120]: 'v-load storage_value%7#0' with 'l-load storage_value%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[119]: 'l-store-copy aggregate%len%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[123]: 'v-load aggregate%len%1#0' with 'l-load aggregate%len%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[149]: 'l-store-copy aggregate%box_get%16#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[153]: 'v-load aggregate%box_get%16#0' with 'l-load aggregate%box_get%16#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[163]: 'l-store-copy aggregate%extract_uint16%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[167]: 'v-load aggregate%extract_uint16%7#0' with 'l-load aggregate%extract_uint16%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[69]: 'l-store-copy storage_value%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[73]: 'v-load storage_value%6#0' with 'l-load storage_value%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[74]: 'l-store-copy storage_value%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[79]: 'v-load storage_value%6#0' with 'l-load storage_value%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[115]: 'l-store-copy storage_value%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[119]: 'v-load storage_value%7#0' with 'l-load storage_value%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[160]: 'l-store-copy storage_value%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[164]: 'v-load storage_value%8#0' with 'l-load storage_value%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[165]: 'l-store-copy storage_value%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[170]: 'v-load storage_value%8#0' with 'l-load storage_value%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[118]: 'l-store-copy aggregate%extract_uint16%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[126]: 'v-load aggregate%extract_uint16%5#0' with 'l-load aggregate%extract_uint16%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[72]: 'l-store-copy aggregate%extract_uint16%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[81]: 'v-load aggregate%extract_uint16%3#0' with 'l-load aggregate%extract_uint16%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[165]: 'l-store-copy aggregate%extract_uint16%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[174]: 'v-load aggregate%extract_uint16%6#0' with 'l-load aggregate%extract_uint16%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[13]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[24]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[34]: 'l-store-copy tmp%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8.ops[49]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[21]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[23]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[24]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[26]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[29]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[31]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[32]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[34]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[37]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[39]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[48]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[50]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[61]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[63]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[64]: 'l-store-copy tuple_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[66]: 'v-load tuple_item%1#0' with 'l-load tuple_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[69]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[71]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[72]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[74]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[44]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[47]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[18]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[22]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[48]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[52]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[60]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[63]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[62]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[66]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[12]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[16]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[17]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[22]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[58]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[62]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[61]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[69]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[15]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[24]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[46]: 'l-store-copy arr_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0.ops[89]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[31]: 'l-store-copy tmp%5#1 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[33]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[28]: 'l-store-copy dyn_arr_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[31]: 'v-load dyn_arr_index#0' with 'l-load dyn_arr_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[16]: 'l-store-copy head#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2.ops[31]: 'v-load head#0' with 'l-load head#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[9]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[11]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[5]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[13]: 'l-store-copy dyn_arr2_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[16]: 'v-load dyn_arr2_index#0' with 'l-load dyn_arr2_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[1]: 'l-store-copy head_and_dyn_arr#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3.ops[16]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[9]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[11]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[13]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[15]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[18]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[20]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[26]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[28]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[29]: 'l-store-copy aggregate%as_Encoded(uint16)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[31]: 'v-load aggregate%as_Encoded(uint16)%0#0' with 'l-load aggregate%as_Encoded(uint16)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[40]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[42]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[46]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[48]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[57]: 'l-store-copy aggregate%updated_data%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[59]: 'v-load aggregate%updated_data%1#0' with 'l-load aggregate%updated_data%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[66]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[68]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[70]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[72]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[75]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[77]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[83]: 'l-store-copy aggregate%uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[85]: 'v-load aggregate%uint16%1#0' with 'l-load aggregate%uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[86]: 'l-store-copy aggregate%as_Encoded(uint16)%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[88]: 'v-load aggregate%as_Encoded(uint16)%1#0' with 'l-load aggregate%as_Encoded(uint16)%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[97]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[99]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[103]: 'l-store-copy aggregate%updated_data%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[105]: 'v-load aggregate%updated_data%2#0' with 'l-load aggregate%updated_data%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[35]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[38]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[61]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[64]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[94]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[97]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[109]: 'l-store-copy updated_tuple%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[112]: 'v-load updated_tuple%1#0' with 'l-load updated_tuple%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[37]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[41]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[54]: 'l-store-copy aggregate%updated_data%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[58]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[98]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[102]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[12]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[23]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[74]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[85]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[46]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[58]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[96]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[111]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[33]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[55]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[6]: 'l-store-copy arr2_offset#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[72]: 'v-load arr2_offset#0' with 'l-load arr2_offset#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[9]: 'l-store-copy arr_len#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4.ops[124]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[31]: 'l-store-copy tmp%5#1 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[33]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[28]: 'l-store-copy dyn_arr_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[31]: 'v-load dyn_arr_index#0' with 'l-load dyn_arr_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[16]: 'l-store-copy head#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5.ops[31]: 'v-load head#0' with 'l-load head#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@6.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@6.ops[9]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@6.ops[1]: 'l-store-copy index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@6.ops[9]: 'v-load index#0' with 'l-load index#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[13]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[31]: 'l-store-copy tmp%5#1 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[33]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[28]: 'l-store-copy dyn_arr_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[31]: 'v-load dyn_arr_index#0' with 'l-load dyn_arr_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[16]: 'l-store-copy head#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8.ops[31]: 'v-load head#0' with 'l-load head#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[9]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[11]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[5]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[13]: 'l-store-copy dyn_arr2_index#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[16]: 'v-load dyn_arr2_index#0' with 'l-load dyn_arr2_index#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[1]: 'l-store-copy head_and_dyn_arr#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9.ops[16]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[12]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[14]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[26]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[28]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[29]: 'l-store-copy tuple_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[31]: 'v-load tuple_item%2#0' with 'l-load tuple_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[34]: 'l-store-copy aggregate%array_length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[36]: 'v-load aggregate%array_length%2#0' with 'l-load aggregate%array_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[37]: 'l-store-copy tmp%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[39]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[1]: 'l-store-copy size#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[4]: 'v-load size#0' with 'l-load size#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[8]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[11]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[10]: 'l-store-copy aggregate%box_get%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[14]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[24]: 'l-store-copy aggregate%extract_uint16%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[28]: 'v-load aggregate%extract_uint16%4#0' with 'l-load aggregate%extract_uint16%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[18]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[22]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[23]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[28]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[21]: 'l-store-copy aggregate%extract_uint16%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10.ops[30]: 'v-load aggregate%extract_uint16%3#0' with 'l-load aggregate%extract_uint16%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[4]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[6]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[7]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[9]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[11]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[13]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[21]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[24]: 'l-store-copy struct_bytes#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[26]: 'v-load struct_bytes#0' with 'l-load struct_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[28]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[30]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[46]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[48]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[50]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[52]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[55]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[57]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[63]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[65]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[66]: 'l-store-copy aggregate%as_Encoded(uint16)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[68]: 'v-load aggregate%as_Encoded(uint16)%0#0' with 'l-load aggregate%as_Encoded(uint16)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[31]: 'l-store-copy struct_size#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[34]: 'v-load struct_size#0' with 'l-load struct_size#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[71]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[75]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[51]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[62]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[45]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[76]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[27]: 'l-store-copy struct_bytes#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_nested_struct_block@0.ops[82]: 'v-load struct_bytes#0' with 'l-load struct_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[10]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[12]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[13]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[15]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[28]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[30]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[43]: 'l-store-copy aggregate%data_up_to_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[45]: 'v-load aggregate%data_up_to_item%0#0' with 'l-load aggregate%data_up_to_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[48]: 'l-store-copy aggregate%updated_data%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[50]: 'v-load aggregate%updated_data%1#0' with 'l-load aggregate%updated_data%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[72]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[74]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[75]: 'l-store-copy aggregate%as_Encoded(uint64)%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[77]: 'v-load aggregate%as_Encoded(uint64)%1#0' with 'l-load aggregate%as_Encoded(uint64)%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[90]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[92]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[105]: 'l-store-copy aggregate%data_up_to_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[107]: 'v-load aggregate%data_up_to_item%1#0' with 'l-load aggregate%data_up_to_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[110]: 'l-store-copy aggregate%updated_data%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[112]: 'v-load aggregate%updated_data%3#0' with 'l-load aggregate%updated_data%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[134]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[136]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[137]: 'l-store-copy aggregate%as_Encoded(uint64)%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[139]: 'v-load aggregate%as_Encoded(uint64)%2#0' with 'l-load aggregate%as_Encoded(uint64)%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[152]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[154]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[166]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[168]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[179]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[181]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[196]: 'l-store-copy aggregate%lt%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[198]: 'v-load aggregate%lt%0#0' with 'l-load aggregate%lt%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[211]: 'l-store-copy aggregate%item_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[213]: 'v-load aggregate%item_length%0#0' with 'l-load aggregate%item_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[216]: 'l-store-copy aggregate%item_length_in_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[218]: 'v-load aggregate%item_length_in_bytes%0#0' with 'l-load aggregate%item_length_in_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[230]: 'l-store-copy aggregate%write_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[232]: 'v-load aggregate%write_offset%0#0' with 'l-load aggregate%write_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[248]: 'l-store-copy aggregate%lt%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[250]: 'v-load aggregate%lt%1#0' with 'l-load aggregate%lt%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[265]: 'l-store-copy aggregate%data_up_to_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[267]: 'v-load aggregate%data_up_to_item%2#0' with 'l-load aggregate%data_up_to_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[279]: 'l-store-copy aggregate%data_up_to_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[281]: 'v-load aggregate%data_up_to_item%3#0' with 'l-load aggregate%data_up_to_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[311]: 'l-store-copy aggregate%tail_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[313]: 'v-load aggregate%tail_offset%0#0' with 'l-load aggregate%tail_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[316]: 'l-store-copy aggregate%tail_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[318]: 'v-load aggregate%tail_offset%1#0' with 'l-load aggregate%tail_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[321]: 'l-store-copy aggregate%tail_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[323]: 'v-load aggregate%tail_offset%2#0' with 'l-load aggregate%tail_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[325]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[327]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[343]: 'l-store-copy aggregate%data_up_to_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[345]: 'v-load aggregate%data_up_to_item%4#0' with 'l-load aggregate%data_up_to_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[348]: 'l-store-copy aggregate%updated_data%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[350]: 'v-load aggregate%updated_data%8#0' with 'l-load aggregate%updated_data%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[372]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[374]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[375]: 'l-store-copy aggregate%as_Encoded(uint64)%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[377]: 'v-load aggregate%as_Encoded(uint64)%3#0' with 'l-load aggregate%as_Encoded(uint64)%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[390]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[392]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[404]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[406]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[419]: 'l-store-copy aggregate%data_up_to_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[421]: 'v-load aggregate%data_up_to_item%5#0' with 'l-load aggregate%data_up_to_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[451]: 'l-store-copy aggregate%tail_offset%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[453]: 'v-load aggregate%tail_offset%3#0' with 'l-load aggregate%tail_offset%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[456]: 'l-store-copy aggregate%tail_offset%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[458]: 'v-load aggregate%tail_offset%4#0' with 'l-load aggregate%tail_offset%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[461]: 'l-store-copy aggregate%tail_offset%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[463]: 'v-load aggregate%tail_offset%5#0' with 'l-load aggregate%tail_offset%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[465]: 'l-store-copy aggregate%as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[467]: 'v-load aggregate%as_bytes%1#0' with 'l-load aggregate%as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[483]: 'l-store-copy aggregate%data_up_to_item%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[485]: 'v-load aggregate%data_up_to_item%6#0' with 'l-load aggregate%data_up_to_item%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[488]: 'l-store-copy aggregate%updated_data%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[490]: 'v-load aggregate%updated_data%13#0' with 'l-load aggregate%updated_data%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[512]: 'l-store-copy aggregate%val_as_bytes%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[514]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[515]: 'l-store-copy aggregate%as_Encoded(uint64)%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[517]: 'v-load aggregate%as_Encoded(uint64)%4#0' with 'l-load aggregate%as_Encoded(uint64)%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[530]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[532]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[544]: 'l-store-copy aggregate%substring3%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[546]: 'v-load aggregate%substring3%8#0' with 'l-load aggregate%substring3%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[559]: 'l-store-copy aggregate%data_up_to_item%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[561]: 'v-load aggregate%data_up_to_item%7#0' with 'l-load aggregate%data_up_to_item%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[591]: 'l-store-copy aggregate%tail_offset%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[593]: 'v-load aggregate%tail_offset%6#0' with 'l-load aggregate%tail_offset%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[596]: 'l-store-copy aggregate%tail_offset%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[598]: 'v-load aggregate%tail_offset%7#0' with 'l-load aggregate%tail_offset%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[601]: 'l-store-copy aggregate%tail_offset%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[603]: 'v-load aggregate%tail_offset%8#0' with 'l-load aggregate%tail_offset%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[605]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[607]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[623]: 'l-store-copy aggregate%data_up_to_item%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[625]: 'v-load aggregate%data_up_to_item%8#0' with 'l-load aggregate%data_up_to_item%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[628]: 'l-store-copy aggregate%updated_data%18#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[630]: 'v-load aggregate%updated_data%18#0' with 'l-load aggregate%updated_data%18#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[652]: 'l-store-copy aggregate%val_as_bytes%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[654]: 'v-load aggregate%val_as_bytes%5#0' with 'l-load aggregate%val_as_bytes%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[655]: 'l-store-copy aggregate%as_Encoded(uint64)%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[657]: 'v-load aggregate%as_Encoded(uint64)%5#0' with 'l-load aggregate%as_Encoded(uint64)%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[670]: 'l-store-copy aggregate%substring3%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[672]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[683]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[685]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[733]: 'l-store-copy aggregate%substring3%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[735]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[746]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[748]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[763]: 'l-store-copy aggregate%lt%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[765]: 'v-load aggregate%lt%2#0' with 'l-load aggregate%lt%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[778]: 'l-store-copy aggregate%item_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[780]: 'v-load aggregate%item_length%1#0' with 'l-load aggregate%item_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[783]: 'l-store-copy aggregate%item_length_in_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[785]: 'v-load aggregate%item_length_in_bytes%1#0' with 'l-load aggregate%item_length_in_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[797]: 'l-store-copy aggregate%write_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[799]: 'v-load aggregate%write_offset%1#0' with 'l-load aggregate%write_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[815]: 'l-store-copy aggregate%lt%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[817]: 'v-load aggregate%lt%3#0' with 'l-load aggregate%lt%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[832]: 'l-store-copy aggregate%data_up_to_item%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[834]: 'v-load aggregate%data_up_to_item%9#0' with 'l-load aggregate%data_up_to_item%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[845]: 'l-store-copy aggregate%lt%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[847]: 'v-load aggregate%lt%4#0' with 'l-load aggregate%lt%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[862]: 'l-store-copy aggregate%data_up_to_item%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[864]: 'v-load aggregate%data_up_to_item%10#0' with 'l-load aggregate%data_up_to_item%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[876]: 'l-store-copy aggregate%data_up_to_item%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[878]: 'v-load aggregate%data_up_to_item%11#0' with 'l-load aggregate%data_up_to_item%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[881]: 'l-store-copy aggregate%updated_data%21#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[883]: 'v-load aggregate%updated_data%21#0' with 'l-load aggregate%updated_data%21#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[65]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[68]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[128]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[131]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[195]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[198]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[207]: 'l-store-copy aggregate%item_offset_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[210]: 'v-load aggregate%item_offset_offset%0#0' with 'l-load aggregate%item_offset_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[212]: 'l-store-copy aggregate%item_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[215]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[241]: 'l-store-copy aggregate%write_offset_with_length_header%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[244]: 'v-load aggregate%write_offset_with_length_header%0#0' with 'l-load aggregate%write_offset_with_length_header%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[251]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[254]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[304]: 'l-store-copy aggregate%data_beyond_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[307]: 'v-load aggregate%data_beyond_item%0#0' with 'l-load aggregate%data_beyond_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[373]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[376]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[446]: 'l-store-copy aggregate%data_beyond_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[449]: 'v-load aggregate%data_beyond_item%1#0' with 'l-load aggregate%data_beyond_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[515]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[518]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[588]: 'l-store-copy aggregate%data_beyond_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[591]: 'v-load aggregate%data_beyond_item%2#0' with 'l-load aggregate%data_beyond_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[657]: 'l-store-copy aggregate%box_get%11#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[660]: 'v-load aggregate%box_get%11#0' with 'l-load aggregate%box_get%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[714]: 'l-store-copy aggregate%item_offset_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[717]: 'v-load aggregate%item_offset_offset%1#0' with 'l-load aggregate%item_offset_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[723]: 'l-store-copy aggregate%next_index%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[726]: 'v-load aggregate%next_index%0#0' with 'l-load aggregate%next_index%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[735]: 'l-store-copy aggregate%next_item_offset_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[738]: 'v-load aggregate%next_item_offset_offset%0#0' with 'l-load aggregate%next_item_offset_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[740]: 'l-store-copy aggregate%next_item_offset%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[743]: 'v-load aggregate%next_item_offset%3#0' with 'l-load aggregate%next_item_offset%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[777]: 'l-store-copy aggregate%array_length%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[780]: 'v-load aggregate%array_length%3#0' with 'l-load aggregate%array_length%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[789]: 'l-store-copy aggregate%item_offset_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[792]: 'v-load aggregate%item_offset_offset%2#0' with 'l-load aggregate%item_offset_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[794]: 'l-store-copy aggregate%item_offset%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[797]: 'v-load aggregate%item_offset%11#0' with 'l-load aggregate%item_offset%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[823]: 'l-store-copy aggregate%write_offset_with_length_header%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[826]: 'v-load aggregate%write_offset_with_length_header%1#0' with 'l-load aggregate%write_offset_with_length_header%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[833]: 'l-store-copy aggregate%array_length%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[836]: 'v-load aggregate%array_length%4#0' with 'l-load aggregate%array_length%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[864]: 'l-store-copy aggregate%array_length%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[867]: 'v-load aggregate%array_length%5#0' with 'l-load aggregate%array_length%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[24]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[27]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[26]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[30]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[42]: 'l-store-copy aggregate%item_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[46]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[71]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[75]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[91]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[94]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[93]: 'l-store-copy aggregate%len%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[97]: 'v-load aggregate%len%1#0' with 'l-load aggregate%len%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[109]: 'l-store-copy aggregate%item_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[113]: 'v-load aggregate%item_offset%1#0' with 'l-load aggregate%item_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[138]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[142]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[158]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[161]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[160]: 'l-store-copy aggregate%len%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[164]: 'v-load aggregate%len%2#0' with 'l-load aggregate%len%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[175]: 'l-store-copy aggregate%extract_uint16%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[179]: 'v-load aggregate%extract_uint16%4#0' with 'l-load aggregate%extract_uint16%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[188]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[191]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[190]: 'l-store-copy aggregate%len%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[194]: 'v-load aggregate%len%3#0' with 'l-load aggregate%len%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[199]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[202]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[201]: 'l-store-copy aggregate%total_length%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[205]: 'v-load aggregate%total_length%0#0' with 'l-load aggregate%total_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[243]: 'l-store-copy aggregate%item_head_tail_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[247]: 'v-load aggregate%item_head_tail_length%0#0' with 'l-load aggregate%item_head_tail_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[285]: 'l-store-copy aggregate%item_offset%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[289]: 'v-load aggregate%item_offset%3#0' with 'l-load aggregate%item_offset%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[300]: 'l-store-copy aggregate%item_offset%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[304]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[317]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[320]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[319]: 'l-store-copy aggregate%total_length%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[323]: 'v-load aggregate%total_length%2#0' with 'l-load aggregate%total_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[359]: 'l-store-copy aggregate%tail_offset_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[363]: 'v-load aggregate%tail_offset_bytes%0#0' with 'l-load aggregate%tail_offset_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[369]: 'l-store-copy aggregate%item_offset%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[373]: 'v-load aggregate%item_offset%5#0' with 'l-load aggregate%item_offset%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[398]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[402]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[418]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[421]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[420]: 'l-store-copy aggregate%len%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[424]: 'v-load aggregate%len%4#0' with 'l-load aggregate%len%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[435]: 'l-store-copy aggregate%extract_uint16%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[439]: 'v-load aggregate%extract_uint16%8#0' with 'l-load aggregate%extract_uint16%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[451]: 'l-store-copy aggregate%item_offset%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[455]: 'v-load aggregate%item_offset%6#0' with 'l-load aggregate%item_offset%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[468]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[471]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[470]: 'l-store-copy aggregate%total_length%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[474]: 'v-load aggregate%total_length%3#0' with 'l-load aggregate%total_length%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[510]: 'l-store-copy aggregate%tail_offset_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[514]: 'v-load aggregate%tail_offset_bytes%1#0' with 'l-load aggregate%tail_offset_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[520]: 'l-store-copy aggregate%item_offset%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[524]: 'v-load aggregate%item_offset%7#0' with 'l-load aggregate%item_offset%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[549]: 'l-store-copy aggregate%box_get%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[553]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[569]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[572]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[571]: 'l-store-copy aggregate%len%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[575]: 'v-load aggregate%len%5#0' with 'l-load aggregate%len%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[586]: 'l-store-copy aggregate%extract_uint16%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[590]: 'v-load aggregate%extract_uint16%11#0' with 'l-load aggregate%extract_uint16%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[602]: 'l-store-copy aggregate%item_offset%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[606]: 'v-load aggregate%item_offset%8#0' with 'l-load aggregate%item_offset%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[619]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[622]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[621]: 'l-store-copy aggregate%total_length%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[625]: 'v-load aggregate%total_length%4#0' with 'l-load aggregate%total_length%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[661]: 'l-store-copy aggregate%tail_offset_bytes%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[665]: 'v-load aggregate%tail_offset_bytes%2#0' with 'l-load aggregate%tail_offset_bytes%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[671]: 'l-store-copy aggregate%item_offset%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[675]: 'v-load aggregate%item_offset%9#0' with 'l-load aggregate%item_offset%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[700]: 'l-store-copy aggregate%box_get%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[704]: 'v-load aggregate%box_get%10#0' with 'l-load aggregate%box_get%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[720]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[723]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[722]: 'l-store-copy aggregate%len%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[726]: 'v-load aggregate%len%6#0' with 'l-load aggregate%len%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[735]: 'l-store-copy aggregate%substring3%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[738]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[737]: 'l-store-copy aggregate%len%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[741]: 'v-load aggregate%len%7#0' with 'l-load aggregate%len%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[746]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[749]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[748]: 'l-store-copy aggregate%total_length%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[752]: 'v-load aggregate%total_length%5#0' with 'l-load aggregate%total_length%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[794]: 'l-store-copy aggregate%end_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[798]: 'v-load aggregate%end_offset%0#0' with 'l-load aggregate%end_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[807]: 'l-store-copy aggregate%substring3%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[810]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[809]: 'l-store-copy aggregate%len%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[813]: 'v-load aggregate%len%8#0' with 'l-load aggregate%len%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[818]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[821]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[820]: 'l-store-copy aggregate%total_length%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[824]: 'v-load aggregate%total_length%6#0' with 'l-load aggregate%total_length%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[862]: 'l-store-copy aggregate%item_head_tail_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[866]: 'v-load aggregate%item_head_tail_length%1#0' with 'l-load aggregate%item_head_tail_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[904]: 'l-store-copy aggregate%item_offset%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[908]: 'v-load aggregate%item_offset%12#0' with 'l-load aggregate%item_offset%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[936]: 'l-store-copy aggregate%item_offset%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[940]: 'v-load aggregate%item_offset%13#0' with 'l-load aggregate%item_offset%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[951]: 'l-store-copy aggregate%item_offset%14#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[955]: 'v-load aggregate%item_offset%14#0' with 'l-load aggregate%item_offset%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[20]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[24]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[41]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[46]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[89]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[93]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[110]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[115]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[158]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[162]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[174]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[178]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[179]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[184]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[191]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[195]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[234]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[239]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[292]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[297]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[308]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[313]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[324]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[328]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[379]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[384]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[427]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[431]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[443]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[447]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[448]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[453]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[465]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[470]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[481]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[485]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[536]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[541]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[584]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[588]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[600]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[604]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[605]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[610]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[622]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[627]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[638]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[642]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[693]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[698]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[741]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[745]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[757]: 'l-store-copy aggregate%substring3%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[761]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[830]: 'l-store-copy aggregate%substring3%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[834]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[873]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[878]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[931]: 'l-store-copy aggregate%substring3%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[936]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[964]: 'l-store-copy aggregate%substring3%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[969]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[980]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[985]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[23]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[31]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[59]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[65]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[94]: 'l-store-copy aggregate%extract_uint16%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[102]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[130]: 'l-store-copy updated_tuple%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[136]: 'v-load updated_tuple%1#0' with 'l-load updated_tuple%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[165]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[173]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[199]: 'l-store-copy aggregate%extract_uint16%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[207]: 'v-load aggregate%extract_uint16%5#0' with 'l-load aggregate%extract_uint16%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[218]: 'l-store-copy aggregate%substring3%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[223]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[334]: 'l-store-copy aggregate%next_item_offset%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[342]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[404]: 'l-store-copy updated_tuple%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[410]: 'v-load updated_tuple%2#0' with 'l-load updated_tuple%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[439]: 'l-store-copy aggregate%extract_uint16%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[447]: 'v-load aggregate%extract_uint16%6#0' with 'l-load aggregate%extract_uint16%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[494]: 'l-store-copy aggregate%next_item_offset%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[502]: 'v-load aggregate%next_item_offset%1#0' with 'l-load aggregate%next_item_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[564]: 'l-store-copy updated_tuple%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[570]: 'v-load updated_tuple%3#0' with 'l-load updated_tuple%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[599]: 'l-store-copy aggregate%extract_uint16%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[607]: 'v-load aggregate%extract_uint16%9#0' with 'l-load aggregate%extract_uint16%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[654]: 'l-store-copy aggregate%next_item_offset%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[662]: 'v-load aggregate%next_item_offset%2#0' with 'l-load aggregate%next_item_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[724]: 'l-store-copy updated_tuple%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[730]: 'v-load updated_tuple%4#0' with 'l-load updated_tuple%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[759]: 'l-store-copy aggregate%extract_uint16%12#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[767]: 'v-load aggregate%extract_uint16%12#0' with 'l-load aggregate%extract_uint16%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[776]: 'l-store-copy aggregate%extract_uint16%13#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[784]: 'v-load aggregate%extract_uint16%13#0' with 'l-load aggregate%extract_uint16%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[795]: 'l-store-copy aggregate%substring3%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[800]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[851]: 'l-store-copy aggregate%extract_uint16%14#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[859]: 'v-load aggregate%extract_uint16%14#0' with 'l-load aggregate%extract_uint16%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[870]: 'l-store-copy aggregate%substring3%12#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[875]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1017]: 'l-store-copy updated_tuple%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1023]: 'v-load updated_tuple%5#0' with 'l-load updated_tuple%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[182]: 'l-store-copy aggregate%extract_uint16%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[191]: 'v-load aggregate%extract_uint16%3#0' with 'l-load aggregate%extract_uint16%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[358]: 'l-store-copy aggregate%new_value_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[366]: 'v-load aggregate%new_value_length%0#0' with 'l-load aggregate%new_value_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[458]: 'l-store-copy aggregate%extract_uint16%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[467]: 'v-load aggregate%extract_uint16%7#0' with 'l-load aggregate%extract_uint16%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[520]: 'l-store-copy aggregate%new_value_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[528]: 'v-load aggregate%new_value_length%1#0' with 'l-load aggregate%new_value_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[620]: 'l-store-copy aggregate%extract_uint16%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[629]: 'v-load aggregate%extract_uint16%10#0' with 'l-load aggregate%extract_uint16%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[682]: 'l-store-copy aggregate%new_value_length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[690]: 'v-load aggregate%new_value_length%2#0' with 'l-load aggregate%new_value_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[826]: 'l-store-copy aggregate%next_index%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[832]: 'v-load aggregate%next_index%0#0' with 'l-load aggregate%next_index%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[830]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[838]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[9]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[20]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[81]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[92]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[153]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[164]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[347]: 'l-store-copy aggregate%next_item_offset%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[356]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[431]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[442]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[511]: 'l-store-copy aggregate%next_item_offset%1#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[520]: 'v-load aggregate%next_item_offset%1#0' with 'l-load aggregate%next_item_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[595]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[606]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[675]: 'l-store-copy aggregate%next_item_offset%2#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[684]: 'v-load aggregate%next_item_offset%2#0' with 'l-load aggregate%next_item_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[759]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[770]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[71]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[84]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[144]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[157]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[271]: 'l-store-copy aggregate%item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[283]: 'v-load aggregate%item%0#0' with 'l-load aggregate%item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[328]: 'l-store-copy aggregate%substring3%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[338]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[425]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[438]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[494]: 'l-store-copy aggregate%substring3%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[504]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[591]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[604]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[660]: 'l-store-copy aggregate%substring3%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[670]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[757]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[770]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[823]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[834]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[851]: 'l-store-copy aggregate%end_of_array%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[863]: 'v-load aggregate%end_of_array%0#0' with 'l-load aggregate%end_of_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[859]: 'l-store-copy aggregate%array_head_and_tail%1#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[870]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[946]: 'l-store-copy aggregate%item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[958]: 'v-load aggregate%item%1#0' with 'l-load aggregate%item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[32]: 'l-store-copy storage_value%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[43]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[106]: 'l-store-copy storage_value%1#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[117]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[291]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[303]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[480]: 'l-store-copy aggregate%substring3%5#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[491]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[647]: 'l-store-copy aggregate%substring3%7#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[658]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[969]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[981]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1003]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1015]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[42]: 'l-store-copy aggregate%updated_data%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[57]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[117]: 'l-store-copy aggregate%updated_data%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[132]: 'v-load aggregate%updated_data%2#0' with 'l-load aggregate%updated_data%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[309]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[324]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[326]: 'l-store-copy aggregate%updated_data%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[342]: 'v-load aggregate%updated_data%4#0' with 'l-load aggregate%updated_data%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[402]: 'l-store-copy aggregate%updated_data%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[417]: 'v-load aggregate%updated_data%7#0' with 'l-load aggregate%updated_data%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[495]: 'l-store-copy aggregate%updated_data%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[511]: 'v-load aggregate%updated_data%9#0' with 'l-load aggregate%updated_data%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[571]: 'l-store-copy aggregate%updated_data%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[586]: 'v-load aggregate%updated_data%12#0' with 'l-load aggregate%updated_data%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[664]: 'l-store-copy aggregate%updated_data%14#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[680]: 'v-load aggregate%updated_data%14#0' with 'l-load aggregate%updated_data%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[740]: 'l-store-copy aggregate%updated_data%17#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[755]: 'v-load aggregate%updated_data%17#0' with 'l-load aggregate%updated_data%17#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[994]: 'l-store-copy aggregate%updated_array%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1009]: 'v-load aggregate%updated_array%3#0' with 'l-load aggregate%updated_array%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1029]: 'l-store-copy aggregate%updated_array%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1044]: 'v-load aggregate%updated_array%4#0' with 'l-load aggregate%updated_array%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1046]: 'l-store-copy aggregate%updated_data%20#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1061]: 'v-load aggregate%updated_data%20#0' with 'l-load aggregate%updated_data%20#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[257]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[272]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[259]: 'l-store-copy aggregate%item_offset%2#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[274]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[293]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[309]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[852]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[866]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[946]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[961]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[948]: 'l-store-copy aggregate%item_offset%11#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[963]: 'v-load aggregate%item_offset%11#0' with 'l-load aggregate%item_offset%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[982]: 'l-store-copy aggregate%updated_array%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[998]: 'v-load aggregate%updated_array%2#0' with 'l-load aggregate%updated_array%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1018]: 'l-store-copy aggregate%updated_data%19#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1034]: 'v-load aggregate%updated_data%19#0' with 'l-load aggregate%updated_data%19#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[347]: 'l-store-copy aggregate%updated_data%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[367]: 'v-load aggregate%updated_data%5#0' with 'l-load aggregate%updated_data%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[374]: 'l-store-copy aggregate%old_value_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[391]: 'v-load aggregate%old_value_length%0#0' with 'l-load aggregate%old_value_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[518]: 'l-store-copy aggregate%updated_data%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[538]: 'v-load aggregate%updated_data%10#0' with 'l-load aggregate%updated_data%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[545]: 'l-store-copy aggregate%old_value_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[562]: 'v-load aggregate%old_value_length%1#0' with 'l-load aggregate%old_value_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[689]: 'l-store-copy aggregate%updated_data%15#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[709]: 'v-load aggregate%updated_data%15#0' with 'l-load aggregate%updated_data%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[716]: 'l-store-copy aggregate%old_value_length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[733]: 'v-load aggregate%old_value_length%2#0' with 'l-load aggregate%old_value_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[851]: 'l-store-copy aggregate%array_length%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[868]: 'v-load aggregate%array_length%2#0' with 'l-load aggregate%array_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[872]: 'l-store-copy aggregate%has_next%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[892]: 'v-load aggregate%has_next%0#0' with 'l-load aggregate%has_next%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[19]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[41]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[95]: 'l-store-copy encoded_value%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[117]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[234]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[253]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[932]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[951]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[364]: 'l-store-copy aggregate%substring3%2#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[384]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[536]: 'l-store-copy aggregate%substring3%5#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[556]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[708]: 'l-store-copy aggregate%substring3%7#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[728]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[349]: 'l-store-copy aggregate%updated_data%4#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[381]: 'v-load aggregate%updated_data%4#0' with 'l-load aggregate%updated_data%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[522]: 'l-store-copy aggregate%updated_data%9#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[554]: 'v-load aggregate%updated_data%9#0' with 'l-load aggregate%updated_data%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[695]: 'l-store-copy aggregate%updated_data%14#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[727]: 'v-load aggregate%updated_data%14#0' with 'l-load aggregate%updated_data%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[344]: 'l-store-copy aggregate%item_offset%4#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[378]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[518]: 'l-store-copy aggregate%item_offset%6#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[552]: 'v-load aggregate%item_offset%6#0' with 'l-load aggregate%item_offset%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[692]: 'l-store-copy aggregate%item_offset%8#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[726]: 'v-load aggregate%item_offset%8#0' with 'l-load aggregate%item_offset%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[376]: 'l-store-copy aggregate%updated_data%6#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[410]: 'v-load aggregate%updated_data%6#0' with 'l-load aggregate%updated_data%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[551]: 'l-store-copy aggregate%updated_data%11#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[585]: 'v-load aggregate%updated_data%11#0' with 'l-load aggregate%updated_data%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[726]: 'l-store-copy aggregate%updated_data%16#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[760]: 'v-load aggregate%updated_data%16#0' with 'l-load aggregate%updated_data%16#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[877]: 'l-store-copy aggregate%item_offset%10#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[913]: 'v-load aggregate%item_offset%10#0' with 'l-load aggregate%item_offset%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[466]: 'l-store-copy encoded_value%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[506]: 'v-load encoded_value%3#0' with 'l-load encoded_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[642]: 'l-store-copy encoded_value%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[682]: 'v-load encoded_value%4#0' with 'l-load encoded_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[237]: 'l-store-copy aggregate%substring3%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[299]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[951]: 'l-store-copy aggregate%substring3%12#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1013]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[219]: 'l-store-copy aggregate%substring3%3#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[319]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[934]: 'l-store-copy aggregate%substring3%11#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1034]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[482]: 'l-store-copy storage_value%3#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[595]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[659]: 'l-store-copy storage_value%4#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[772]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[171]: 'l-store-copy encoded_value%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[297]: 'v-load encoded_value%2#0' with 'l-load encoded_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[203]: 'l-store-copy aggregate%substring3%2#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[338]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[872]: 'l-store-copy aggregate%substring3%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1056]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[824]: 'l-store-copy encoded_value%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1017]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[855]: 'l-store-copy aggregate%substring3%9#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1077]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[185]: 'l-store-copy storage_value%2#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[421]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_write_block@0.ops[839]: 'l-store-copy storage_value%5#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.nested_write_block@0.ops[1096]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[20]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[22]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[23]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[25]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[29]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[31]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[32]: 'l-store-copy tuple_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[34]: 'v-load tuple_item%1#0' with 'l-load tuple_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[36]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[38]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[47]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[49]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[60]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[62]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[63]: 'l-store-copy tuple_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[65]: 'v-load tuple_item%2#0' with 'l-load tuple_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[69]: 'l-store-copy aggregate%extract%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[71]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[72]: 'l-store-copy tuple_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[74]: 'v-load tuple_item%3#0' with 'l-load tuple_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[76]: 'l-store-copy values%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[78]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[87]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[89]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[100]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[102]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[103]: 'l-store-copy tuple_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[105]: 'v-load tuple_item%4#0' with 'l-load tuple_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[117]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[119]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[120]: 'l-store-copy tuple_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[122]: 'v-load tuple_item%5#0' with 'l-load tuple_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[133]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[135]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[136]: 'l-store-copy tuple_item%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[138]: 'v-load tuple_item%6#0' with 'l-load tuple_item%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[153]: 'l-store-copy aggregate%lt%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[155]: 'v-load aggregate%lt%0#0' with 'l-load aggregate%lt%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[168]: 'l-store-copy aggregate%item_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[170]: 'v-load aggregate%item_length%0#0' with 'l-load aggregate%item_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[173]: 'l-store-copy aggregate%item_length_in_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[175]: 'v-load aggregate%item_length_in_bytes%0#0' with 'l-load aggregate%item_length_in_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[183]: 'l-store-copy aggregate%item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[185]: 'v-load aggregate%item%0#0' with 'l-load aggregate%item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[186]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[188]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[204]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[206]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[207]: 'l-store-copy array_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[209]: 'v-load array_item%1#0' with 'l-load array_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[211]: 'l-store-copy values%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[213]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[222]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[224]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[235]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[237]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[238]: 'l-store-copy tuple_item%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[240]: 'v-load tuple_item%7#0' with 'l-load tuple_item%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[252]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[254]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[255]: 'l-store-copy tuple_item%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[257]: 'v-load tuple_item%8#0' with 'l-load tuple_item%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[261]: 'l-store-copy aggregate%extract%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[263]: 'v-load aggregate%extract%2#0' with 'l-load aggregate%extract%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[264]: 'l-store-copy tuple_item%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[266]: 'v-load tuple_item%9#0' with 'l-load tuple_item%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[268]: 'l-store-copy values%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[270]: 'v-load values%3#0' with 'l-load values%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[279]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[281]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[292]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[294]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[295]: 'l-store-copy tuple_item%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[297]: 'v-load tuple_item%10#0' with 'l-load tuple_item%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[309]: 'l-store-copy aggregate%substring3%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[311]: 'v-load aggregate%substring3%8#0' with 'l-load aggregate%substring3%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[312]: 'l-store-copy tuple_item%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[314]: 'v-load tuple_item%11#0' with 'l-load tuple_item%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[318]: 'l-store-copy aggregate%extract%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[320]: 'v-load aggregate%extract%3#0' with 'l-load aggregate%extract%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[321]: 'l-store-copy tuple_item%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[323]: 'v-load tuple_item%12#0' with 'l-load tuple_item%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[325]: 'l-store-copy values%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[327]: 'v-load values%4#0' with 'l-load values%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[336]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[338]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[349]: 'l-store-copy aggregate%substring3%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[351]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[352]: 'l-store-copy tuple_item%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[354]: 'v-load tuple_item%13#0' with 'l-load tuple_item%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[365]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[367]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[368]: 'l-store-copy tuple_item%14#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[370]: 'v-load tuple_item%14#0' with 'l-load tuple_item%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[418]: 'l-store-copy aggregate%substring3%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[420]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[421]: 'l-store-copy array_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[423]: 'v-load array_item%2#0' with 'l-load array_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[434]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[436]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[437]: 'l-store-copy tuple_item%15#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[439]: 'v-load tuple_item%15#0' with 'l-load tuple_item%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[454]: 'l-store-copy aggregate%lt%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[456]: 'v-load aggregate%lt%1#0' with 'l-load aggregate%lt%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[469]: 'l-store-copy aggregate%item_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[471]: 'v-load aggregate%item_length%1#0' with 'l-load aggregate%item_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[474]: 'l-store-copy aggregate%item_length_in_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[476]: 'v-load aggregate%item_length_in_bytes%1#0' with 'l-load aggregate%item_length_in_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[484]: 'l-store-copy aggregate%item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[486]: 'v-load aggregate%item%1#0' with 'l-load aggregate%item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[487]: 'l-store-copy array_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[489]: 'v-load array_item%3#0' with 'l-load array_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[505]: 'l-store-copy aggregate%encoded_element%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[507]: 'v-load aggregate%encoded_element%1#0' with 'l-load aggregate%encoded_element%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[508]: 'l-store-copy array_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[510]: 'v-load array_item%4#0' with 'l-load array_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[512]: 'l-store-copy values%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[514]: 'v-load values%5#0' with 'l-load values%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[519]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[521]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[524]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[526]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[529]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[531]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[534]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[536]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[539]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[541]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[43]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[46]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[84]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[87]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[152]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[155]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[164]: 'l-store-copy aggregate%item_offset_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[167]: 'v-load aggregate%item_offset_offset%0#0' with 'l-load aggregate%item_offset_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[169]: 'l-store-copy aggregate%item_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[172]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[205]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[208]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[224]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[227]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[282]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[285]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[340]: 'l-store-copy aggregate%box_get%11#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[343]: 'v-load aggregate%box_get%11#0' with 'l-load aggregate%box_get%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[395]: 'l-store-copy aggregate%item_offset_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[398]: 'v-load aggregate%item_offset_offset%1#0' with 'l-load aggregate%item_offset_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[404]: 'l-store-copy aggregate%next_index%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[407]: 'v-load aggregate%next_index%0#0' with 'l-load aggregate%next_index%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[416]: 'l-store-copy aggregate%next_item_offset_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[419]: 'v-load aggregate%next_item_offset_offset%0#0' with 'l-load aggregate%next_item_offset_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[421]: 'l-store-copy aggregate%next_item_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[424]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[464]: 'l-store-copy aggregate%array_length%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[467]: 'v-load aggregate%array_length%2#0' with 'l-load aggregate%array_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[476]: 'l-store-copy aggregate%item_offset_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[479]: 'v-load aggregate%item_offset_offset%2#0' with 'l-load aggregate%item_offset_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[481]: 'l-store-copy aggregate%item_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[484]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[517]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[520]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[16]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[19]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[18]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[22]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[48]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[52]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[60]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[63]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[62]: 'l-store-copy aggregate%len%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[66]: 'v-load aggregate%len%1#0' with 'l-load aggregate%len%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[92]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[96]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[104]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[107]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[106]: 'l-store-copy aggregate%len%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[110]: 'v-load aggregate%len%2#0' with 'l-load aggregate%len%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[124]: 'l-store-copy aggregate%extract_uint16%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[128]: 'v-load aggregate%extract_uint16%4#0' with 'l-load aggregate%extract_uint16%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[140]: 'l-store-copy tuple_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[143]: 'v-load tuple_item%5#0' with 'l-load tuple_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[142]: 'l-store-copy aggregate%len%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[146]: 'v-load aggregate%len%3#0' with 'l-load aggregate%len%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[154]: 'l-store-copy tuple_item%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[157]: 'v-load tuple_item%6#0' with 'l-load tuple_item%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[156]: 'l-store-copy aggregate%total_length%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[160]: 'v-load aggregate%total_length%0#0' with 'l-load aggregate%total_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[198]: 'l-store-copy aggregate%item_head_tail_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[202]: 'v-load aggregate%item_head_tail_length%0#0' with 'l-load aggregate%item_head_tail_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[210]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[213]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[212]: 'l-store-copy aggregate%total_length%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[216]: 'v-load aggregate%total_length%1#0' with 'l-load aggregate%total_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[243]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[247]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[255]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[258]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[257]: 'l-store-copy aggregate%len%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[261]: 'v-load aggregate%len%4#0' with 'l-load aggregate%len%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[275]: 'l-store-copy aggregate%extract_uint16%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[279]: 'v-load aggregate%extract_uint16%8#0' with 'l-load aggregate%extract_uint16%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[305]: 'l-store-copy aggregate%box_get%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[309]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[317]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[320]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[319]: 'l-store-copy aggregate%len%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[323]: 'v-load aggregate%len%5#0' with 'l-load aggregate%len%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[337]: 'l-store-copy aggregate%extract_uint16%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[341]: 'v-load aggregate%extract_uint16%11#0' with 'l-load aggregate%extract_uint16%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[367]: 'l-store-copy aggregate%box_get%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[371]: 'v-load aggregate%box_get%10#0' with 'l-load aggregate%box_get%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[379]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[382]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[381]: 'l-store-copy aggregate%len%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[385]: 'v-load aggregate%len%6#0' with 'l-load aggregate%len%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[397]: 'l-store-copy tuple_item%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[400]: 'v-load tuple_item%13#0' with 'l-load tuple_item%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[399]: 'l-store-copy aggregate%len%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[403]: 'v-load aggregate%len%7#0' with 'l-load aggregate%len%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[411]: 'l-store-copy tuple_item%14#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[414]: 'v-load tuple_item%14#0' with 'l-load tuple_item%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[413]: 'l-store-copy aggregate%total_length%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[417]: 'v-load aggregate%total_length%2#0' with 'l-load aggregate%total_length%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[459]: 'l-store-copy aggregate%end_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[463]: 'v-load aggregate%end_offset%0#0' with 'l-load aggregate%end_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[475]: 'l-store-copy array_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[478]: 'v-load array_item%2#0' with 'l-load array_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[477]: 'l-store-copy aggregate%len%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[481]: 'v-load aggregate%len%8#0' with 'l-load aggregate%len%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[489]: 'l-store-copy tuple_item%15#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[492]: 'v-load tuple_item%15#0' with 'l-load tuple_item%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[491]: 'l-store-copy aggregate%total_length%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[495]: 'v-load aggregate%total_length%3#0' with 'l-load aggregate%total_length%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[533]: 'l-store-copy aggregate%item_head_tail_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[537]: 'v-load aggregate%item_head_tail_length%1#0' with 'l-load aggregate%item_head_tail_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[545]: 'l-store-copy array_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[548]: 'v-load array_item%3#0' with 'l-load array_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[547]: 'l-store-copy aggregate%total_length%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[551]: 'v-load aggregate%total_length%4#0' with 'l-load aggregate%total_length%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[12]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[16]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[57]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[61]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[102]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[106]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[121]: 'l-store-copy tuple_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[125]: 'v-load tuple_item%4#0' with 'l-load tuple_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[126]: 'l-store-copy tuple_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[131]: 'v-load tuple_item%4#0' with 'l-load tuple_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[141]: 'l-store-copy tuple_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[145]: 'v-load tuple_item%5#0' with 'l-load tuple_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[187]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[192]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[258]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[262]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[277]: 'l-store-copy tuple_item%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[281]: 'v-load tuple_item%7#0' with 'l-load tuple_item%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[282]: 'l-store-copy tuple_item%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[287]: 'v-load tuple_item%7#0' with 'l-load tuple_item%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[323]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[327]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[342]: 'l-store-copy tuple_item%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[346]: 'v-load tuple_item%10#0' with 'l-load tuple_item%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[347]: 'l-store-copy tuple_item%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[352]: 'v-load tuple_item%10#0' with 'l-load tuple_item%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[388]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[392]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[407]: 'l-store-copy tuple_item%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[411]: 'v-load tuple_item%13#0' with 'l-load tuple_item%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[486]: 'l-store-copy array_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[490]: 'v-load array_item%2#0' with 'l-load array_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[532]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[537]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[15]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[23]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[61]: 'l-store-copy aggregate%extract_uint16%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[69]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[107]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[115]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[147]: 'l-store-copy aggregate%extract_uint16%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[155]: 'v-load aggregate%extract_uint16%5#0' with 'l-load aggregate%extract_uint16%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[169]: 'l-store-copy tuple_item%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[174]: 'v-load tuple_item%6#0' with 'l-load tuple_item%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[230]: 'l-store-copy aggregate%array_trimmed%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[237]: 'v-load aggregate%array_trimmed%0#0' with 'l-load aggregate%array_trimmed%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[267]: 'l-store-copy aggregate%extract_uint16%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[275]: 'v-load aggregate%extract_uint16%6#0' with 'l-load aggregate%extract_uint16%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[333]: 'l-store-copy aggregate%extract_uint16%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[341]: 'v-load aggregate%extract_uint16%9#0' with 'l-load aggregate%extract_uint16%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[399]: 'l-store-copy aggregate%extract_uint16%12#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[407]: 'v-load aggregate%extract_uint16%12#0' with 'l-load aggregate%extract_uint16%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[419]: 'l-store-copy aggregate%extract_uint16%13#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[427]: 'v-load aggregate%extract_uint16%13#0' with 'l-load aggregate%extract_uint16%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[441]: 'l-store-copy tuple_item%14#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[446]: 'v-load tuple_item%14#0' with 'l-load tuple_item%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[500]: 'l-store-copy aggregate%extract_uint16%14#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[508]: 'v-load aggregate%extract_uint16%14#0' with 'l-load aggregate%extract_uint16%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[522]: 'l-store-copy tuple_item%15#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[527]: 'v-load tuple_item%15#0' with 'l-load tuple_item%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[583]: 'l-store-copy aggregate%array_trimmed%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[590]: 'v-load aggregate%array_trimmed%1#0' with 'l-load aggregate%array_trimmed%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[127]: 'l-store-copy aggregate%extract_uint16%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[136]: 'v-load aggregate%extract_uint16%3#0' with 'l-load aggregate%extract_uint16%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[288]: 'l-store-copy aggregate%extract_uint16%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[297]: 'v-load aggregate%extract_uint16%7#0' with 'l-load aggregate%extract_uint16%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[355]: 'l-store-copy aggregate%extract_uint16%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[364]: 'v-load aggregate%extract_uint16%10#0' with 'l-load aggregate%extract_uint16%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[469]: 'l-store-copy aggregate%next_index%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[475]: 'v-load aggregate%next_index%0#0' with 'l-load aggregate%next_index%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[473]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[481]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[448]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[459]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[476]: 'l-store-copy aggregate%end_of_array%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[488]: 'v-load aggregate%end_of_array%0#0' with 'l-load aggregate%end_of_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[484]: 'l-store-copy aggregate%array_head_and_tail%1#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[495]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[199]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[214]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[201]: 'l-store-copy aggregate%item_offset%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[216]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[462]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[476]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[562]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[577]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[564]: 'l-store-copy aggregate%item_offset%2#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[579]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[455]: 'l-store-copy aggregate%array_length%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[472]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[476]: 'l-store-copy aggregate%has_next%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[496]: 'v-load aggregate%has_next%0#0' with 'l-load aggregate%has_next%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[174]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[193]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[540]: 'l-store-copy aggregate%array_head_and_tail%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[559]: 'v-load aggregate%array_head_and_tail%2#0' with 'l-load aggregate%array_head_and_tail%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[621]: 'l-store-copy woah_arr_arr#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[644]: 'v-load woah_arr_arr#0' with 'l-load woah_arr_arr#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[467]: 'l-store-copy aggregate%item_offset%1#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[503]: 'v-load aggregate%item_offset%1#0' with 'l-load aggregate%item_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[389]: 'l-store-copy d#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[641]: 'v-load d#0' with 'l-load d#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[322]: 'l-store-copy c#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[637]: 'v-load c#0' with 'l-load c#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[255]: 'l-store-copy arr_arr#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[633]: 'v-load arr_arr#0' with 'l-load arr_arr#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[91]: 'l-store-copy b#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[629]: 'v-load b#0' with 'l-load b#0'
debug: Inserted examples.box_storage.contract.BoxContract.nested_read_block@0.ops[45]: 'l-store-copy a#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.nested_read_block@0.ops[629]: 'v-load a#0' with 'l-load a#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[13]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[15]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[16]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[18]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[20]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[22]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[25]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[27]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[36]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[38]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[42]: 'l-store-copy aggregate%extract%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[44]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[45]: 'l-store-copy tuple_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[47]: 'v-load tuple_item%1#0' with 'l-load tuple_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[49]: 'l-store-copy values%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[51]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[54]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[56]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[65]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[67]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[71]: 'l-store-copy aggregate%extract%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[73]: 'v-load aggregate%extract%2#0' with 'l-load aggregate%extract%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[74]: 'l-store-copy tuple_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[76]: 'v-load tuple_item%2#0' with 'l-load tuple_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[86]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[88]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[92]: 'l-store-copy aggregate%extract%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[94]: 'v-load aggregate%extract%3#0' with 'l-load aggregate%extract%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[95]: 'l-store-copy tuple_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[97]: 'v-load tuple_item%3#0' with 'l-load tuple_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[103]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[105]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[114]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[116]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[128]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[130]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[131]: 'l-store-copy tuple_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[133]: 'v-load tuple_item%4#0' with 'l-load tuple_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[136]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[138]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[32]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[35]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[62]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[65]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[84]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[87]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[103]: 'l-store-copy values%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[106]: 'v-load values%3#0' with 'l-load values%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[114]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[117]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[35]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[39]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[66]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[70]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[89]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[93]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[120]: 'l-store-copy aggregate%box_get%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[124]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[134]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[138]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[128]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[132]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[133]: 'l-store-copy storage_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[138]: 'v-load storage_value%4#0' with 'l-load storage_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[131]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[140]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[84]: 'l-store-copy values%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0.ops[110]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[16]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[18]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[19]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[21]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[23]: 'l-store-copy values%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[25]: 'v-load values%4#0' with 'l-load values%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[30]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[32]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[11]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[14]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[27]: 'l-store-copy val#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[30]: 'v-load val#0' with 'l-load val#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[1]: 'l-store-copy tuple_item%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[4]: 'v-load tuple_item%4#0' with 'l-load tuple_item%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[3]: 'l-store-copy aggregate%total_length%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[7]: 'v-load aggregate%total_length%0#0' with 'l-load aggregate%total_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[9]: 'l-store-copy aggregate%array_trimmed%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2.ops[16]: 'v-load aggregate%array_trimmed%0#0' with 'l-load aggregate%array_trimmed%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[7]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[9]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[20]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[22]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[23]: 'l-store-copy tuple_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[25]: 'v-load tuple_item%5#0' with 'l-load tuple_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[28]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[30]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[2]: 'l-store-copy aggregate%box_get%11#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[5]: 'v-load aggregate%box_get%11#0' with 'l-load aggregate%box_get%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[4]: 'l-store-copy aggregate%box_get%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[8]: 'v-load aggregate%box_get%10#0' with 'l-load aggregate%box_get%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[16]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[19]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[18]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[22]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[12]: 'l-store-copy storage_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[16]: 'v-load storage_value%5#0' with 'l-load storage_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[15]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4.ops[23]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[16]: 'l-store-copy aggregate%encoded_element%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[18]: 'v-load aggregate%encoded_element%1#0' with 'l-load aggregate%encoded_element%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[19]: 'l-store-copy array_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[21]: 'v-load array_item%1#0' with 'l-load array_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[23]: 'l-store-copy values%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[25]: 'v-load values%5#0' with 'l-load values%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[30]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[32]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[11]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[14]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[27]: 'l-store-copy val#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[30]: 'v-load val#0' with 'l-load val#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[1]: 'l-store-copy tuple_item%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[4]: 'v-load tuple_item%5#0' with 'l-load tuple_item%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[3]: 'l-store-copy aggregate%total_length%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[7]: 'v-load aggregate%total_length%1#0' with 'l-load aggregate%total_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[9]: 'l-store-copy aggregate%array_trimmed%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6.ops[16]: 'v-load aggregate%array_trimmed%1#0' with 'l-load aggregate%array_trimmed%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[9]: 'l-store-copy aggregate%as_Encoded(bool1)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[11]: 'v-load aggregate%as_Encoded(bool1)%0#0' with 'l-load aggregate%as_Encoded(bool1)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[16]: 'l-store-copy aggregate%lt%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[18]: 'v-load aggregate%lt%0#0' with 'l-load aggregate%lt%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[23]: 'l-store-copy aggregate%lt%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[25]: 'v-load aggregate%lt%1#0' with 'l-load aggregate%lt%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[31]: 'l-store-copy aggregate%updated_target%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[33]: 'v-load aggregate%updated_target%0#0' with 'l-load aggregate%updated_target%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[35]: 'l-store-copy updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[38]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[14]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[32]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.set_bool_block@0.ops[9]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.set_bool_block@0.ops[31]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_block@0.ops[4]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_block@0.ops[7]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_block@0.ops[6]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_block@0.ops[10]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_for_header@1.ops[7]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[3]: 'l-store-copy aggregate%get_bit%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[5]: 'v-load aggregate%get_bit%0#0' with 'l-load aggregate%get_bit%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[6]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[8]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[9]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[11]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[12]: 'l-store-copy value#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_for_body@2.ops[16]: 'v-load value#0' with 'l-load value#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_if_body@3.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_if_body@3.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_if_body@3.ops[6]: 'l-store-copy total#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_if_body@3.ops[8]: 'v-load total#0' with 'l-load total#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4.ops[1]: 'l-store-copy total#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4.ops[3]: 'v-load total#0' with 'l-load total#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_bools_after_for@8.ops[1]: 'l-store-copy total#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_bools_after_for@8.ops[3]: 'v-load total#0' with 'l-load total#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[2]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[4]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[6]: 'l-store-copy aggregate%len_u16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[8]: 'v-load aggregate%len_u16%0#0' with 'l-load aggregate%len_u16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[9]: 'l-store-copy aggregate%as_Encoded(len+uint64[])%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[11]: 'v-load aggregate%as_Encoded(len+uint64[])%0#0' with 'l-load aggregate%as_Encoded(len+uint64[])%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[12]: 'l-store-copy encoded_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.create_dynamic_box_block@0.ops[18]: 'v-load encoded_array%0#0' with 'l-load encoded_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[13]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[15]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[16]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[18]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[20]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[22]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[23]: 'l-store-copy arr_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[25]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[30]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[34]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[37]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[39]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[42]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[10]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[12]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[13]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[15]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[35]: 'l-store-copy aggregate%updated_data%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[37]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[45]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[47]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[2]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[5]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[26]: 'l-store-copy aggregate%write_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[29]: 'v-load aggregate%write_offset%0#0' with 'l-load aggregate%write_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[40]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[43]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[4]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[8]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[33]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[37]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[23]: 'l-store-copy aggregate%extract%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[30]: 'v-load aggregate%extract%1#0' with 'l-load aggregate%extract%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[9]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[20]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[19]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[34]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[22]: 'l-store-copy storage_value%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[39]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[29]: 'l-store-copy arr_len#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2.ops[52]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[2]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[4]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[6]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[8]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[11]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[13]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[19]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[21]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[22]: 'l-store-copy aggregate%as_Encoded(uint16)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[24]: 'v-load aggregate%as_Encoded(uint16)%0#0' with 'l-load aggregate%as_Encoded(uint16)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[33]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[35]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[39]: 'l-store-copy aggregate%updated_data%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[41]: 'v-load aggregate%updated_data%1#0' with 'l-load aggregate%updated_data%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[53]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[55]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[58]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[60]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[61]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[63]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[28]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[31]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[43]: 'l-store-copy updated_tuple%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[46]: 'v-load updated_tuple%1#0' with 'l-load updated_tuple%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[50]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[53]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[30]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[34]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[53]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[57]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[5]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[16]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[26]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4.ops[41]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[7]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[9]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[13]: 'l-store-copy aggregate%extract%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[15]: 'v-load aggregate%extract%0#0' with 'l-load aggregate%extract%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[16]: 'l-store-copy tuple_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[18]: 'v-load tuple_item%0#0' with 'l-load tuple_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[20]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[22]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[25]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[27]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[28]: 'l-store-copy arr_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[30]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[32]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[34]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[36]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[38]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[41]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[43]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[49]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[51]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[52]: 'l-store-copy aggregate%as_Encoded(uint16)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[54]: 'v-load aggregate%as_Encoded(uint16)%0#0' with 'l-load aggregate%as_Encoded(uint16)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[63]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[65]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[69]: 'l-store-copy aggregate%updated_data%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[71]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[94]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[96]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[99]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[101]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[102]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[104]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[59]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[62]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[74]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[77]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[82]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[85]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[87]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[90]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[94]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[97]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[62]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[66]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[98]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[102]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[37]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[48]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[58]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[73]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[33]: 'l-store-copy arr_len#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0.ops[84]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[9]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[11]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[14]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[16]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[4]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[7]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[6]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0.ops[10]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[16]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[18]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[19]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[21]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[23]: 'l-store-copy values%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[25]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[30]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[32]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[11]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[14]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[27]: 'l-store-copy val#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[30]: 'v-load val#0' with 'l-load val#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[1]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[4]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[3]: 'l-store-copy aggregate%total_length%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[7]: 'v-load aggregate%total_length%0#0' with 'l-load aggregate%total_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[9]: 'l-store-copy aggregate%array_trimmed%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2.ops[16]: 'v-load aggregate%array_trimmed%0#0' with 'l-load aggregate%array_trimmed%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[10]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[12]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[13]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[15]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[20]: 'l-store-copy aggregate%write_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[22]: 'v-load aggregate%write_offset%0#0' with 'l-load aggregate%write_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[30]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[32]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[26]: 'l-store-copy aggregate%write_offset_with_length_header%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[29]: 'v-load aggregate%write_offset_with_length_header%0#0' with 'l-load aggregate%write_offset_with_length_header%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[36]: 'l-store-copy updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[42]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[18]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[32]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[9]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_box_block@0.ops[31]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[10]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[12]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[13]: 'l-store-copy aggregate%as_Encoded(uint64)%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[15]: 'v-load aggregate%as_Encoded(uint64)%0#0' with 'l-load aggregate%as_Encoded(uint64)%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[33]: 'l-store-copy aggregate%write_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[35]: 'v-load aggregate%write_offset%0#0' with 'l-load aggregate%write_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[52]: 'l-store-copy aggregate%data_up_to_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[54]: 'v-load aggregate%data_up_to_item%0#0' with 'l-load aggregate%data_up_to_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[84]: 'l-store-copy aggregate%tail_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[86]: 'v-load aggregate%tail_offset%0#0' with 'l-load aggregate%tail_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[89]: 'l-store-copy aggregate%tail_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[91]: 'v-load aggregate%tail_offset%1#0' with 'l-load aggregate%tail_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[94]: 'l-store-copy aggregate%tail_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[96]: 'v-load aggregate%tail_offset%2#0' with 'l-load aggregate%tail_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[98]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[100]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[107]: 'l-store-copy aggregate%updated_data%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[109]: 'v-load aggregate%updated_data%2#0' with 'l-load aggregate%updated_data%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[2]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[5]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[39]: 'l-store-copy aggregate%write_offset_with_length_header%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[42]: 'v-load aggregate%write_offset_with_length_header%0#0' with 'l-load aggregate%write_offset_with_length_header%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[71]: 'l-store-copy aggregate%data_beyond_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[74]: 'v-load aggregate%data_beyond_item%0#0' with 'l-load aggregate%data_beyond_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[4]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[8]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[26]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[30]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[51]: 'l-store-copy aggregate%item_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[55]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[68]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[71]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[70]: 'l-store-copy aggregate%total_length%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[74]: 'v-load aggregate%total_length%1#0' with 'l-load aggregate%total_length%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[110]: 'l-store-copy aggregate%tail_offset_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[114]: 'v-load aggregate%tail_offset_bytes%0#0' with 'l-load aggregate%tail_offset_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[20]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[24]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[25]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[30]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[51]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[56]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[67]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[71]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[70]: 'l-store-copy aggregate%next_item_offset%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[78]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[124]: 'l-store-copy updated_tuple%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[130]: 'v-load updated_tuple%0#0' with 'l-load updated_tuple%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[23]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[32]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[94]: 'l-store-copy aggregate%new_value_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[102]: 'v-load aggregate%new_value_length%0#0' with 'l-load aggregate%new_value_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[9]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[20]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[81]: 'l-store-copy aggregate%next_item_offset%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[90]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[36]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[48]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[60]: 'l-store-copy storage_value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[70]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[52]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[68]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[70]: 'l-store-copy aggregate%updated_data%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[90]: 'v-load aggregate%updated_data%0#0' with 'l-load aggregate%updated_data%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[97]: 'l-store-copy aggregate%old_value_length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[114]: 'v-load aggregate%old_value_length%0#0' with 'l-load aggregate%old_value_length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[84]: 'l-store-copy storage_value%0#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[104]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[33]: 'l-store-copy storage_value%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[55]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[70]: 'l-store-copy aggregate%updated_array%0#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[102]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[19]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[52]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[66]: 'l-store-copy aggregate%item_offset%0#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[100]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[98]: 'l-store-copy aggregate%updated_data%1#0 4'
debug: Replaced examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0.ops[132]: 'v-load aggregate%updated_data%1#0' with 'l-load aggregate%updated_data%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[27]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[29]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[37]: 'l-store-copy tmp%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[39]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[42]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[44]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[48]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[50]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[52]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[54]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[56]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[58]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[61]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[63]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[64]: 'l-store-copy aggregate%as_Encoded(len+utf8[])%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[66]: 'v-load aggregate%as_Encoded(len+utf8[])%0#0' with 'l-load aggregate%as_Encoded(len+utf8[])%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[95]: 'l-store-copy tmp%15#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[97]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[105]: 'l-store-copy tmp%17#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[107]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[110]: 'l-store-copy tmp%18#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[112]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[78]: 'l-store-copy tmp%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[81]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[13]: 'l-store-copy tmp%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[16]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[15]: 'l-store-copy tmp%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[19]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[24]: 'l-store-copy tmp%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[27]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[26]: 'l-store-copy tmp%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[30]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[37]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[41]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[87]: 'l-store-copy tmp%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[90]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[89]: 'l-store-copy tmp%12#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[93]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[98]: 'l-store-copy tmp%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[101]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[100]: 'l-store-copy tmp%14#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[104]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[111]: 'l-store-copy tmp%16#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[115]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[36]: 'l-store-copy tmp%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[41]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[111]: 'l-store-copy tmp%13#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[116]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[74]: 'l-store-copy tmp%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[80]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[18]: 'l-store-copy tmp%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[24]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[95]: 'l-store-copy tmp%10#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[101]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[22]: 'l-store-copy tmp%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[37]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.slice_box_block@0.ops[100]: 'l-store-copy tmp%13#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.slice_box_block@0.ops[115]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[3]: 'l-store-copy aggregate%head%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[5]: 'v-load aggregate%head%0#0' with 'l-load aggregate%head%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[8]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[10]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[13]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[15]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[18]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[20]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[21]: 'l-store-copy aggregate%as_Encoded(uint8[4])%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[23]: 'v-load aggregate%as_Encoded(uint8[4])%0#0' with 'l-load aggregate%as_Encoded(uint8[4])%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[44]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[46]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[47]: 'l-store-copy array_item%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[49]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[50]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[52]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[55]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[57]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[75]: 'l-store-copy aggregate%encoded_element%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[77]: 'v-load aggregate%encoded_element%1#0' with 'l-load aggregate%encoded_element%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[78]: 'l-store-copy array_item%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[80]: 'v-load array_item%1#0' with 'l-load array_item%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[81]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[83]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[86]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[88]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[106]: 'l-store-copy aggregate%encoded_element%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[108]: 'v-load aggregate%encoded_element%2#0' with 'l-load aggregate%encoded_element%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[109]: 'l-store-copy array_item%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[111]: 'v-load array_item%2#0' with 'l-load array_item%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[112]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[114]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[117]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[119]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[137]: 'l-store-copy aggregate%encoded_element%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[139]: 'v-load aggregate%encoded_element%3#0' with 'l-load aggregate%encoded_element%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[140]: 'l-store-copy array_item%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[142]: 'v-load array_item%3#0' with 'l-load array_item%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[143]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[145]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[148]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[150]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[24]: 'l-store-copy encoded_array%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[27]: 'v-load encoded_array%0#0' with 'l-load encoded_array%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[31]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[34]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[41]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[44]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[64]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[67]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[74]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[77]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[97]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[100]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[107]: 'l-store-copy aggregate%bytes_offset%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[110]: 'v-load aggregate%bytes_offset%2#0' with 'l-load aggregate%bytes_offset%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[130]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[133]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[140]: 'l-store-copy aggregate%bytes_offset%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[143]: 'v-load aggregate%bytes_offset%3#0' with 'l-load aggregate%bytes_offset%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[33]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[37]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[67]: 'l-store-copy aggregate%box_get%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[71]: 'v-load aggregate%box_get%2#0' with 'l-load aggregate%box_get%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[101]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[105]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[135]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[139]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[38]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[45]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[73]: 'l-store-copy storage_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[80]: 'v-load storage_value%1#0' with 'l-load storage_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[108]: 'l-store-copy storage_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[115]: 'v-load storage_value%2#0' with 'l-load storage_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[143]: 'l-store-copy storage_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.arc4_box_block@0.ops[150]: 'v-load storage_value%3#0' with 'l-load storage_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[26]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[38]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[43]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[45]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[54]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[56]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[59]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[61]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[90]: 'l-store-copy tmp%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[92]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[97]: 'l-store-copy tmp%10#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[99]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[106]: 'l-store-copy tmp%12#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[108]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[112]: 'l-store-copy tmp%13#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[114]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[119]: 'l-store-copy tmp%14#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[121]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[126]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[128]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[131]: 'l-store-copy exists#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[133]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[135]: 'l-store-copy tmp%15#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[137]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[142]: 'l-store-copy tmp%16#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[144]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[154]: 'l-store-copy state_get%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[156]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[159]: 'l-store-copy tmp%17#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[161]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[185]: 'l-store-copy tmp%19#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[187]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[191]: 'l-store-copy tmp%20#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[193]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[196]: 'l-store-copy tmp%21#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[198]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[5]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[13]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[16]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[24]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[27]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[35]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[38]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[53]: 'l-store-copy maybe_exists%4#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[56]: 'v-load maybe_exists%4#0' with 'l-load maybe_exists%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[86]: 'l-store-copy tmp%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[89]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[108]: 'l-store-copy tmp%11#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[111]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[156]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[159]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[174]: 'l-store-copy tmp%18#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[177]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[181]: 'l-store-copy maybe_exists%7#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[184]: 'v-load maybe_exists%7#0' with 'l-load maybe_exists%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[188]: 'l-store-copy check%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[191]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[217]: 'l-store-copy maybe_exists%8#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[220]: 'v-load maybe_exists%8#0' with 'l-load maybe_exists%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[91]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[95]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[191]: 'l-store-copy value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[195]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[133]: 'l-store-copy maybe_exists%5#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[139]: 'v-load maybe_exists%5#0' with 'l-load maybe_exists%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[157]: 'l-store-copy maybe_exists%6#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[163]: 'v-load maybe_exists%6#0' with 'l-load maybe_exists%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[169]: 'l-store-copy sender_bytes#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[175]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[162]: 'l-store-copy sender_bytes#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[169]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[62]: 'l-store-copy sender_bytes#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[71]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[139]: 'l-store-copy value#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[150]: 'v-load value#0' with 'l-load value#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[101]: 'l-store-copy prefix#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[113]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[68]: 'l-store-copy app_address#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[80]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[81]: 'l-store-copy app_address#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[105]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[73]: 'l-store-copy sender_bytes#0 3'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[107]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[108]: 'l-store-copy sender_bytes#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[168]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[107]: 'l-store-copy app_address#0 2'
debug: Replaced examples.box_storage.contract.BoxContract.test_box_ref_block@0.ops[185]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[6]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[8]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[20]: 'l-store-copy box_prefixed_key%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[22]: 'v-load box_prefixed_key%1#0' with 'l-load box_prefixed_key%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[30]: 'l-store-copy box_prefixed_key%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[32]: 'v-load box_prefixed_key%2#0' with 'l-load box_prefixed_key%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[44]: 'l-store-copy tmp%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[46]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[54]: 'l-store-copy box_prefixed_key%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[56]: 'v-load box_prefixed_key%3#0' with 'l-load box_prefixed_key%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[71]: 'l-store-copy tmp%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[73]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[81]: 'l-store-copy box_prefixed_key%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[83]: 'v-load box_prefixed_key%4#0' with 'l-load box_prefixed_key%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[95]: 'l-store-copy tmp%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[97]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[105]: 'l-store-copy box_prefixed_key%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[107]: 'v-load box_prefixed_key%5#0' with 'l-load box_prefixed_key%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[115]: 'l-store-copy state_get%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[117]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[120]: 'l-store-copy tmp%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[122]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[130]: 'l-store-copy box_prefixed_key%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[132]: 'v-load box_prefixed_key%6#0' with 'l-load box_prefixed_key%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[137]: 'l-store-copy exists#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[139]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[141]: 'l-store-copy tmp%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[143]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[151]: 'l-store-copy box_prefixed_key%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[153]: 'v-load box_prefixed_key%7#0' with 'l-load box_prefixed_key%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[162]: 'l-store-copy tmp%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[164]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[172]: 'l-store-copy box_prefixed_key%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[174]: 'v-load box_prefixed_key%8#0' with 'l-load box_prefixed_key%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[183]: 'l-store-copy tmp%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[185]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[188]: 'l-store-copy tmp%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[190]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[198]: 'l-store-copy box_prefixed_key%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[200]: 'v-load box_prefixed_key%9#0' with 'l-load box_prefixed_key%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[2]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[5]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[17]: 'l-store-copy encoded_value%1#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[20]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[28]: 'l-store-copy encoded_value%2#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[31]: 'v-load encoded_value%2#0' with 'l-load encoded_value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[37]: 'l-store-copy check%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[40]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[44]: 'l-store-copy tmp%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[47]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[55]: 'l-store-copy encoded_value%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[58]: 'v-load encoded_value%3#0' with 'l-load encoded_value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[64]: 'l-store-copy check%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[67]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[71]: 'l-store-copy check%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[74]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[85]: 'l-store-copy encoded_value%4#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[88]: 'v-load encoded_value%4#0' with 'l-load encoded_value%4#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[94]: 'l-store-copy check%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[97]: 'v-load check%3#0' with 'l-load check%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[101]: 'l-store-copy tmp%3#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[104]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[112]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[115]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[122]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[125]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[139]: 'l-store-copy encoded_value%6#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[142]: 'v-load encoded_value%6#0' with 'l-load encoded_value%6#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[148]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[151]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[162]: 'l-store-copy encoded_value%7#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[165]: 'v-load encoded_value%7#0' with 'l-load encoded_value%7#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[171]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[174]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[185]: 'l-store-copy encoded_value%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[188]: 'v-load encoded_value%8#0' with 'l-load encoded_value%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[212]: 'l-store-copy encoded_value%9#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[215]: 'v-load encoded_value%9#0' with 'l-load encoded_value%9#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[10]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[13]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[194]: 'l-store-copy box_prefixed_key%8#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[197]: 'v-load box_prefixed_key%8#0' with 'l-load box_prefixed_key%8#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[74]: 'l-store-copy value%2#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[79]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[123]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[129]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[40]: 'l-store-copy value%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[48]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[99]: 'l-store-copy value%3#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[107]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[68]: 'l-store-copy value%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[80]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[26]: 'l-store-copy box_0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_test_block@0.ops[73]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_set_block@0.ops[6]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_set_block@0.ops[8]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_set_block@0.ops[2]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_set_block@0.ops[5]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_set_block@0.ops[10]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_set_block@0.ops[13]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[6]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[8]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[15]: 'l-store-copy storage_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[17]: 'v-load storage_value%0#0' with 'l-load storage_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[2]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[5]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[11]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[14]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[13]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_get_block@0.ops[17]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_del_block@0.ops[6]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_del_block@0.ops[8]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_del_block@0.ops[2]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_del_block@0.ops[5]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_exists_block@0.ops[6]: 'l-store-copy box_prefixed_key%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_exists_block@0.ops[8]: 'v-load box_prefixed_key%0#0' with 'l-load box_prefixed_key%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_exists_block@0.ops[2]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_exists_block@0.ops[5]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted examples.box_storage.contract.BoxContract.box_map_exists_block@0.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced examples.box_storage.contract.BoxContract.box_map_exists_block@0.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_abi_routing@2.ops[6]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_abi_routing@2.ops[8]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_abi_routing@2.ops[11]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_abi_routing@2.ops[13]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_abi_routing@2.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced approval_program_abi_routing@2.ops[18]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_call_NoOp@3.ops[1]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_call_NoOp@3.ops[38]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program___algopy_default_create@42.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program___algopy_default_create@42.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program___algopy_default_create@42.ops[8]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program___algopy_default_create@42.ops[10]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program___algopy_default_create@42.ops[17]: 'l-store-copy tmp%11#0 0'
debug: Replaced approval_program___algopy_default_create@42.ops[19]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program___algopy_default_create@42.ops[13]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program___algopy_default_create@42.ops[16]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program___algopy_default_create@42.ops[6]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program___algopy_default_create@42.ops[16]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@46.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced approval_program_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@46.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: _puya_lib.util.ensure_budget f-stack entry: []
debug: _puya_lib.util.ensure_budget f-stack on first store: ['required_budget_with_buffer#0']
debug: _puya_lib.arc4.static_array_replace_dynamic_element f-stack entry: []
debug: _puya_lib.arc4.static_array_replace_dynamic_element f-stack on first store: ['original_item_length#0', 'new_item_length#0', 'new_head_and_tail#0', 'tmp%15#0', 'head_offset#0']
debug: examples.box_storage.contract.BoxContract.set_boxes f-stack entry: []
debug: examples.box_storage.contract.BoxContract.set_boxes f-stack on first store: ['tmp%17#0', 'tmp%24#0', 'tmp%33#0', 'tmp%44#0', 'tmp%52#0', 'tmp%62#0', 'tmp%71#0']
debug: examples.box_storage.contract.BoxContract.sum_many_ints f-stack entry: []
debug: examples.box_storage.contract.BoxContract.sum_many_ints f-stack on first store: ['total#0', 'storage_value%0#0', 'item_index_internal%0#0']
debug: examples.box_storage.contract.BoxContract.boxes_exist f-stack entry: []
debug: examples.box_storage.contract.BoxContract.boxes_exist f-stack on first store: ['_%0#0', '_%1#0', '_%2#0', '_%3#0']
debug: examples.box_storage.contract.BoxContract.append_dynamic_arr_struct f-stack entry: ['i#0', 'index#0', 'tmp%0#1', 'tmp%10#0', 'tmp%4#0', 'tmp%5#0']
debug: examples.box_storage.contract.BoxContract.append_dynamic_arr_struct f-stack on first store: ['arr_len#0', 'arr_size#0', 'arr2_index#1']
debug: examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct f-stack entry: ['arr2_index#1', 'index#0', 'tmp%0#0', 'tmp%3#0', 'tmp%7#0', 'tmp%9#0']
debug: examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct f-stack on first store: ['arr_len#0', 'arr2_len#0', 'arr_size#0']
debug: examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct f-stack entry: ['tuple_item%5#0', 'array_length%1#0', 'item_index_internal%1#0']
debug: examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct f-stack on first store: ['total#0', 'tuple_item%4#0', 'array_length%0#0', 'item_index_internal%0#0']
debug: examples.box_storage.contract.BoxContract.sum_bools f-stack entry: ['total#10']
debug: examples.box_storage.contract.BoxContract.sum_bools f-stack on first store: ['total#0', 'storage_value%0#0', 'item_index_internal%0#0']
debug: examples.box_storage.contract.BoxContract.append_dynamic_box f-stack entry: []
debug: examples.box_storage.contract.BoxContract.append_dynamic_box f-stack on first store: ['arr_len#0', 'i#0']
debug: examples.box_storage.contract.BoxContract.sum_dynamic_box f-stack entry: []
debug: examples.box_storage.contract.BoxContract.sum_dynamic_box f-stack on first store: ['total#0', 'storage_value%0#0', 'array_length%0#0', 'item_index_internal%0#0']
debug: examples.box_storage.contract.BoxContract.slice_box f-stack entry: []
debug: examples.box_storage.contract.BoxContract.slice_box f-stack on first store: ['tmp%1#0', 'tmp%11#0']
debug: examples.box_storage.contract.BoxContract.test_box_ref f-stack entry: []
debug: examples.box_storage.contract.BoxContract.test_box_ref f-stack on first store: ['_%0#0', '_%1#0', '_%2#0', '_%3#0', '_%4#0', '_%5#0', '_%6#0']
debug: examples.box_storage.contract.BoxContract.box_map_test f-stack entry: []
debug: examples.box_storage.contract.BoxContract.box_map_test f-stack on first store: ['maybe_value%1#0', '_%0#0']
debug: examples.box_storage.contract.BoxContract.box_map_exists f-stack entry: []
debug: examples.box_storage.contract.BoxContract.box_map_exists f-stack on first store: ['_%0#0']
debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.util.ensure_budget(required_budget: uint64, fee_source: uint64) -> void:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
box_storage/contract.py:475 debug: optimizing TEAL subroutine ops examples.box_storage.contract.get_box_value_plus_1(box: bytes) -> uint64:
box_storage/contract.py:480 debug: optimizing TEAL subroutine ops examples.box_storage.contract.get_box_ref_length(ref: bytes) -> uint64:
box_storage/contract.py:485 debug: optimizing TEAL subroutine ops examples.box_storage.contract.get_box_map_value_from_key_plus_1(box_map: bytes, key: uint64) -> bytes:
box_storage/contract.py:95:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_boxes[routing]() -> void:
box_storage/contract.py:131:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.check_keys[routing]() -> void:
box_storage/contract.py:138:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_many_ints[routing]() -> void:
box_storage/contract.py:142:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_many_ints[routing]() -> void:
box_storage/contract.py:146:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_many_ints[routing]() -> void:
box_storage/contract.py:154:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_boxes[routing]() -> void:
box_storage/contract.py:167:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]() -> void:
box_storage/contract.py:173:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.read_boxes[routing]() -> void:
box_storage/contract.py:182:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.boxes_exist[routing]() -> void:
box_storage/contract.py:186:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:195:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:199:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:231:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:253:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_nested_struct[routing]() -> void:
box_storage/contract.py:267:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.nested_write[routing]() -> void:
box_storage/contract.py:277:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.nested_read[routing]() -> void:
box_storage/contract.py:289:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:300:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_bools[routing]() -> void:
box_storage/contract.py:304:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_bool[routing]() -> void:
box_storage/contract.py:308:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_bools[routing]() -> void:
box_storage/contract.py:318:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_dynamic_box[routing]() -> void:
box_storage/contract.py:322:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]() -> void:
box_storage/contract.py:326:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.append_dynamic_box[routing]() -> void:
box_storage/contract.py:341:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]() -> void:
box_storage/contract.py:352:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]() -> void:
box_storage/contract.py:359:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.write_dynamic_box[routing]() -> void:
box_storage/contract.py:363:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]() -> void:
box_storage/contract.py:367:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.slice_box[routing]() -> void:
box_storage/contract.py:376:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.arc4_box[routing]() -> void:
box_storage/contract.py:386:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.test_box_ref[routing]() -> void:
box_storage/contract.py:434:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_test[routing]() -> void:
box_storage/contract.py:458:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_set[routing]() -> void:
box_storage/contract.py:462:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_get[routing]() -> void:
box_storage/contract.py:466:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_del[routing]() -> void:
box_storage/contract.py:470:6 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_exists[routing]() -> void:
box_storage/contract.py:81 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.__init__() -> void:
box_storage/contract.py:95 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_boxes(a: uint64, b: bytes, c: bytes) -> void:
box_storage/contract.py:131 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.check_keys() -> void:
box_storage/contract.py:138 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_many_ints() -> void:
box_storage/contract.py:142 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_many_ints(index: uint64, value: uint64) -> void:
box_storage/contract.py:146 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_many_ints() -> uint64:
box_storage/contract.py:154 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_boxes() -> void:
box_storage/contract.py:167 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.indirect_extract_and_replace() -> void:
box_storage/contract.py:173 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.read_boxes() -> uint64, bytes, bytes, uint64:
box_storage/contract.py:182 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.boxes_exist() -> uint64, uint64, uint64, uint64:
box_storage/contract.py:186 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_dynamic_arr_struct() -> void:
box_storage/contract.py:195 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct() -> void:
box_storage/contract.py:199 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.append_dynamic_arr_struct(times: uint64) -> uint64:
box_storage/contract.py:231 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct(times: uint64) -> uint64:
box_storage/contract.py:253 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_nested_struct(struct: bytes) -> void:
box_storage/contract.py:267 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.nested_write(index: uint64, value: uint64) -> void:
box_storage/contract.py:277 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.nested_read(i1: uint64, i2: uint64, i3: uint64) -> uint64:
box_storage/contract.py:289 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct() -> uint64:
box_storage/contract.py:300 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_bools() -> void:
box_storage/contract.py:304 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.set_bool(index: uint64, value: uint64) -> void:
box_storage/contract.py:308 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_bools(stop_at_total: uint64) -> uint64:
box_storage/contract.py:318 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.create_dynamic_box() -> void:
box_storage/contract.py:322 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.delete_dynamic_box() -> void:
box_storage/contract.py:326 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.append_dynamic_box(times: uint64) -> uint64:
box_storage/contract.py:341 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.pop_dynamic_box(times: uint64) -> uint64:
box_storage/contract.py:352 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.sum_dynamic_box() -> uint64:
box_storage/contract.py:359 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.write_dynamic_box(index: uint64, value: uint64) -> void:
box_storage/contract.py:363 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.write_dynamic_arr_struct(index: uint64, value: uint64) -> void:
box_storage/contract.py:367 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.slice_box() -> void:
box_storage/contract.py:376 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.arc4_box() -> void:
box_storage/contract.py:386 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.test_box_ref() -> void:
box_storage/contract.py:434 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_test() -> void:
box_storage/contract.py:458 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_set(key: uint64, value: bytes) -> void:
box_storage/contract.py:462 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_get(key: uint64) -> bytes:
box_storage/contract.py:466 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_del(key: uint64) -> void:
box_storage/contract.py:470 debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.box_map_exists(key: uint64) -> uint64:
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing box_storage/out_unoptimized/BoxContract.approval.teal
info: Writing box_storage/out_unoptimized/BoxContract.clear.teal
info: Writing box_storage/out_unoptimized/BoxContract.approval.bin
info: Writing box_storage/out_unoptimized/BoxContract.clear.bin
info: Writing box_storage/out_unoptimized/BoxContract.approval.stats.txt
info: Writing box_storage/out_unoptimized/BoxContract.clear.stats.txt
info: Writing box_storage/out_unoptimized/BoxContract.approval.puya.map
info: Writing box_storage/out_unoptimized/BoxContract.clear.puya.map