debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=11, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, validate_abi_values=True, validate_abi_dynamic_severity=<LogLevel.warning: 30>, paths=['box_storage'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
box_storage/contract.py:100:9 warning: expression result is ignored
box_storage/contract.py:139:9 warning: expression result is ignored
box_storage/contract.py:260:9 warning: expression result is ignored
box_storage/contract.py:301:9 warning: expression result is ignored
box_storage/contract.py:429:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'value_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let value_internal%1#1: uint64 = undefined while trying to resolve 'value_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added value_internal%1#0 to Phi node: let value_internal%1#1: uint64 = φ(value_internal%1#0 <- block@4) in block@4
debug: Added value_internal%1#2 to Phi node: let value_internal%1#1: uint64 = φ(value_internal%1#0 <- block@4, value_internal%1#2 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.get_box_value_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_ref_length
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Terminated block@36
debug: Sealing block@37
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Terminated block@40
debug: Sealing block@41
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'index%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let index%0#1: uint64 = undefined while trying to resolve 'index%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'num_bytes%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let num_bytes%0#1: uint64 = undefined while trying to resolve 'num_bytes%0' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added index%0#0 to Phi node: let index%0#1: uint64 = φ(index%0#0 <- block@0) in block@0
debug: Added index%0#2 to Phi node: let index%0#1: uint64 = φ(index%0#0 <- block@0, index%0#2 <- block@3) in block@3
debug: Added num_bytes%0#0 to Phi node: let num_bytes%0#1: uint64 = φ(num_bytes%0#0 <- block@0) in block@0
debug: Added num_bytes%0#2 to Phi node: let num_bytes%0#1: uint64 = φ(num_bytes%0#0 <- block@0, num_bytes%0#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'index%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let index%1#1: uint64 = undefined while trying to resolve 'index%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'num_bytes%2' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let num_bytes%2#1: uint64 = undefined while trying to resolve 'num_bytes%2' in block@5
debug: Terminated block@6
debug: Looking for 'index%2' in an unsealed block creating an incomplete Phi: block@7
debug: Created Phi assignment: let index%2#1: uint64 = undefined while trying to resolve 'index%2' in block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Looking for 'num_bytes%3' in an unsealed block creating an incomplete Phi: block@7
debug: Created Phi assignment: let num_bytes%3#1: uint64 = undefined while trying to resolve 'num_bytes%3' in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@7
debug: Added index%2#0 to Phi node: let index%2#1: uint64 = φ(index%2#0 <- block@6) in block@6
debug: Added index%2#2 to Phi node: let index%2#1: uint64 = φ(index%2#0 <- block@6, index%2#2 <- block@9) in block@9
debug: Added num_bytes%3#0 to Phi node: let num_bytes%3#1: uint64 = φ(num_bytes%3#0 <- block@6) in block@6
debug: Added num_bytes%3#2 to Phi node: let num_bytes%3#1: uint64 = φ(num_bytes%3#0 <- block@6, num_bytes%3#2 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let num_bytes%2#2: uint64 = undefined while trying to resolve 'num_bytes%2' in block@7
debug: Added num_bytes%2#1 to Phi node: let num_bytes%2#2: uint64 = φ(num_bytes%2#1 <- block@6) in block@6
debug: Added num_bytes%2#2 to Phi node: let num_bytes%2#2: uint64 = φ(num_bytes%2#1 <- block@6, num_bytes%2#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let num_bytes%2#2: uint64 = φ(num_bytes%2#1 <- block@6, num_bytes%2#2 <- block@9) (num_bytes%2#2) with num_bytes%2#1
debug: Deleting Phi assignment: let num_bytes%2#2: uint64 = φ(num_bytes%2#1 <- block@6, num_bytes%2#2 <- block@9)
debug: Replaced trivial Phi node: let num_bytes%2#2: uint64 = φ(num_bytes%2#1 <- block@6, num_bytes%2#2 <- block@9) (num_bytes%2#2) with num_bytes%2#1 in current definition for 3 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@5
debug: Added index%1#0 to Phi node: let index%1#1: uint64 = φ(index%1#0 <- block@4) in block@4
debug: Added index%1#2 to Phi node: let index%1#1: uint64 = φ(index%1#0 <- block@4, index%1#2 <- block@11) in block@11
debug: Added num_bytes%2#0 to Phi node: let num_bytes%2#1: uint64 = φ(num_bytes%2#0 <- block@4) in block@4
debug: Added num_bytes%2#3 to Phi node: let num_bytes%2#1: uint64 = φ(num_bytes%2#0 <- block@4, num_bytes%2#3 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes
debug: Sealing block@0
box_storage/contract.py:101:9 debug: encountered already materialized expression ('box_large'), reusing result: "box_large"
box_storage/contract.py:107:9 debug: encountered already materialized expression ('box_a'), reusing result: "box_a"
box_storage/contract.py:117:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:117:46 debug: encountered already materialized expression (reinterpret_cast<bytes>(c)), reusing result: c#0
box_storage/contract.py:118:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:118:40 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:118:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:119:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:119:40 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:119:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:123:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:123:40 debug: encountered already materialized expression (arc4_decode(b, bytes)), reusing result: tmp%47#0
box_storage/contract.py:124:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:124:34 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:124:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:125:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:125:34 debug: encountered already materialized expression (5u), reusing result: 5u
box_storage/contract.py:125:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:126:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:126:35 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:126:16 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints
debug: Sealing block@0
box_storage/contract.py:143:9 debug: encountered already materialized expression ('many_ints'), reusing result: "many_ints"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Sealing block@0
box_storage/contract.py:169:9 debug: encountered already materialized expression (large), reusing result: large#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:217:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:219:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:222:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Sealing block@0
box_storage/contract.py:240:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:241:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_nested_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_write
debug: Sealing block@0
box_storage/contract.py:269:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:270:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:271:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:272:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:273:9 debug: encountered already materialized expression (box), reusing result: box#0
box_storage/contract.py:274:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.nested_read
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@4) in block@4
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#1 <- block@4, total#4 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function examples.box_storage.contract.BoxContract.create_bools
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_bool
debug: Sealing block@0
box_storage/contract.py:305:9 debug: encountered already materialized expression ('too_many_bools'), reusing result: "too_many_bools"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_bools
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@4
debug: Added total#1 to Phi node: let total#3: uint64 = φ(total#1 <- block@2) in block@2
debug: Added total#2 to Phi node: let total#3: uint64 = φ(total#1 <- block@2, total#2 <- block@3) in block@3
debug: Created Phi assignment: let stop_at_total#1: uint64 = undefined while trying to resolve 'stop_at_total' in block@4
debug: Looking for 'stop_at_total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let stop_at_total#2: uint64 = undefined while trying to resolve 'stop_at_total' in block@1
debug: Added stop_at_total#2 to Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2) in block@2
debug: Added stop_at_total#2 to Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) (stop_at_total#1) with stop_at_total#2
debug: Deleting Phi assignment: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3)
debug: Replaced trivial Phi node: let stop_at_total#1: uint64 = φ(stop_at_total#2 <- block@2, stop_at_total#2 <- block@3) (stop_at_total#1) with stop_at_total#2 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@7) in block@7
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#3 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#3 <- block@7) in block@7
debug: Added stop_at_total#0 to Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0) in block@0
debug: Added stop_at_total#2 to Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) (stop_at_total#2) with stop_at_total#0
debug: Deleting Phi assignment: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7)
debug: Replaced trivial Phi node: let stop_at_total#2: uint64 = φ(stop_at_total#0 <- block@0, stop_at_total#2 <- block@7) (stop_at_total#2) with stop_at_total#0 in current definition for 6 blocks
debug: Sealing block@8
debug: Created Phi assignment: let total#4: uint64 = undefined while trying to resolve 'total' in block@8
debug: Added total#1 to Phi node: let total#4: uint64 = φ(total#1 <- block@1) in block@1
debug: Added total#3 to Phi node: let total#4: uint64 = φ(total#1 <- block@1, total#3 <- block@5) in block@5
debug: Terminated block@8
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:334:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:337:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Sealing block@0
box_storage/contract.py:346:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Sealing block@0
box_storage/contract.py:360:9 debug: encountered already materialized expression ('dynamic_box'), reusing result: "dynamic_box"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Sealing block@0
box_storage/contract.py:364:9 debug: encountered already materialized expression ('dynamic_arr_struct'), reusing result: "dynamic_arr_struct"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box
debug: Sealing block@0
box_storage/contract.py:370:16 debug: encountered already materialized expression (box_0), reusing result: box_0#0
box_storage/contract.py:370:28 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:370:30 debug: encountered already materialized expression (7u), reusing result: 7u
box_storage/contract.py:370:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(box_0)[0]), 0u, 0u < SINGLE_EVAL(id=0))), reusing result: tmp%3#0
box_storage/contract.py:373:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:373:39 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:373:41 debug: encountered already materialized expression (10u), reusing result: 10u
box_storage/contract.py:373:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(hex<"424F585F43">)[0]), 2u, 2u < SINGLE_EVAL(id=0))), reusing result: tmp%13#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_boxes[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.check_keys[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_many_ints[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_many_ints[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_many_ints[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_boxes[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.read_boxes[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.boxes_exist[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_nested_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_write[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_read[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_bools[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_bool[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_bools[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.slice_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.arc4_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.test_box_ref[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_test[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_set[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_get[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_del[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_exists[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.__init__ for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.check_keys for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_many_ints as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.indirect_extract_and_replace for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.read_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.boxes_exist for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_nested_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_write for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_read for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_bools as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_bool for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_bools for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_box for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_box as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.slice_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.arc4_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.test_box_ref for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_test for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_set for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_get for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_del for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_exists for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: inlining call to examples.box_storage.contract.BoxContract.__init__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (> 4104u 4096u) to 1u
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@45 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@47 with block@1 in block@48
debug: Merged linear block@47 into block@1
debug: Replaced predecessor block@48 with block@1 in block@2
debug: Merged linear block@48 into block@1
debug: Replaced predecessor block@3 with block@2 in block@44
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@45 into block@43
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@41
debug: Removing jump block block@42
debug: branching to block@41 will be replaced with block@43
debug: branching to block@42 will be replaced with block@43
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@46
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, required_budget_with_buffer#0
debug: selected required_budget_with_buffer#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@2 from switch fee_source#0 {0u => block@3, 1u => block@4, * => block@5} to goto_nth [block@3, block@4][fee_source#0] else goto block@5
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, value_internal%0#0
debug: selected tmp%17#0 from equivalence set
debug: Found equivalence set: value_internal%0#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 29 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers [Register(source_location=INTERNAL:270:60-69, ir_type=uint64, name='tmp%2', version=1)]
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let tmp%17#0: uint64 = (* tmp%2#1 2u) with copy of existing registers [Register(source_location=INTERNAL:270:59-74, ir_type=uint64, name='tmp%3', version=1)]
debug: Found equivalence set: tmp%3#1, tmp%17#0
debug: selected tmp%3#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, value_internal%0#0
debug: selected tmp%17#0 from equivalence set
debug: Found equivalence set: value_internal%0#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 17 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers [Register(source_location=INTERNAL:270:60-69, ir_type=uint64, name='tmp%2', version=0)]
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let tmp%17#0: uint64 = (* tmp%2#0 2u) with copy of existing registers [Register(source_location=INTERNAL:270:59-74, ir_type=uint64, name='tmp%3', version=0)]
debug: Found equivalence set: tmp%3#0, tmp%17#0
debug: selected tmp%3#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, value_internal%0#0
debug: selected tmp%5#1 from equivalence set
debug: Found equivalence set: value_internal%0#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#1
debug: selected head_offset#1 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 19 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:308:59-78, ir_type=uint64, name='tmp%1', version=0)]
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers [Register(source_location=INTERNAL:337:8-28, ir_type=uint64, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%5#1: uint64 = (* index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:308:59-78, ir_type=uint64, name='tmp%1', version=0)]
debug: Found equivalence set: tmp%1#0, tmp%1#1, tmp%5#1
debug: selected tmp%1#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, value_internal%0#0
debug: selected tmp%5#0 from equivalence set
debug: Found equivalence set: value_internal%0#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#1
debug: selected head_offset#1 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers [Register(source_location=INTERNAL:337:8-28, ir_type=uint64, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%5#0: uint64 = (* start_at_index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:338:44-72, ir_type=uint64, name='tmp%1', version=0)]
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%5#0
debug: selected tmp%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, head#0
debug: selected head#0 from equivalence set
debug: Found equivalence set: tmp%4#0, dyn_arr_index#0
debug: selected dyn_arr_index#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 8u 2u) to 10u
debug: Simplified (+ 10u 8u) to 18u
debug: Simplified (+ 18u 2u) to 20u
debug: Simplified (+ 20u dyn_arr_index#0) to (+ tmp%3#0 22u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:498:24 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arr_size#0, index#0
debug: selected arr_size#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%0#0, head_and_dyn_arr#0
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Found equivalence set: tmp%2#0, dyn_arr2_index#0
debug: selected dyn_arr2_index#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:469:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_exists[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:465:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_del[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:461:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_get[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:457:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_set[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:433:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_test[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:385:6 debug: inlining call to examples.box_storage.contract.BoxContract.test_box_ref[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:375:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:366:6 debug: inlining call to examples.box_storage.contract.BoxContract.slice_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:362:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:358:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:351:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:340:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:325:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:321:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:317:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_box[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:307:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_bools[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:303:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_bool[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:299:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_bools[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:288:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:276:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_read[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:266:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_write[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:252:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_nested_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:230:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:198:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:194:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:185:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:181:6 debug: inlining call to examples.box_storage.contract.BoxContract.boxes_exist[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:172:6 debug: inlining call to examples.box_storage.contract.BoxContract.read_boxes[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:166:6 debug: inlining call to examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:153:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_boxes[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:145:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_many_ints[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:141:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_many_ints[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:137:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:130:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:94:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_boxes[routing] in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#22, as_Encoded(uint64)%0#15
debug: selected tmp%0#22 from equivalence set
debug: Found equivalence set: tmp%2#21, as_Encoded(len+uint8[])%0#0
debug: selected tmp%2#21 from equivalence set
debug: Found equivalence set: tmp%3#18, as_Encoded(len+utf8[])%0#1
debug: selected tmp%3#18 from equivalence set
debug: Found equivalence set: tmp%0#21, as_Encoded(uint64)%0#14
debug: selected tmp%0#21 from equivalence set
debug: Found equivalence set: tmp%2#20, as_Encoded(uint64)%1#4
debug: selected tmp%2#20 from equivalence set
debug: Found equivalence set: tmp%0#17, as_Encoded(uint64)%0#13
debug: selected tmp%0#17 from equivalence set
debug: Found equivalence set: tmp%0#16, as_Encoded(uint64)%0#12
debug: selected tmp%0#16 from equivalence set
debug: Found equivalence set: tmp%0#15, as_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0
debug: selected tmp%0#15 from equivalence set
debug: Found equivalence set: tmp%0#14, as_Encoded(uint64)%0#11
debug: selected tmp%0#14 from equivalence set
debug: Found equivalence set: tmp%2#13, as_Encoded(uint64)%1#3
debug: selected tmp%2#13 from equivalence set
debug: Found equivalence set: tmp%0#13, as_Encoded(uint64)%0#10
debug: selected tmp%0#13 from equivalence set
debug: Found equivalence set: tmp%2#12, as_Encoded(uint64)%1#2
debug: selected tmp%2#12 from equivalence set
debug: Found equivalence set: tmp%4#6, as_Encoded(uint64)%2#0
debug: selected tmp%4#6 from equivalence set
debug: Found equivalence set: tmp%0#11, as_Encoded(uint64)%0#9
debug: selected tmp%0#11 from equivalence set
debug: Found equivalence set: tmp%2#10, as_Encoded(bool8)%0#0
debug: selected tmp%2#10 from equivalence set
debug: Found equivalence set: tmp%0#10, as_Encoded(uint64)%0#8
debug: selected tmp%0#10 from equivalence set
debug: Found equivalence set: tmp%0#9, as_Encoded(uint64)%0#7
debug: selected tmp%0#9 from equivalence set
debug: Found equivalence set: tmp%0#8, as_Encoded(uint64)%0#6
debug: selected tmp%0#8 from equivalence set
debug: Found equivalence set: tmp%0#6, as_Encoded(uint64)%0#5
debug: selected tmp%0#6 from equivalence set
debug: Found equivalence set: tmp%2#5, as_Encoded(uint64)%1#1
debug: selected tmp%2#5 from equivalence set
debug: Found equivalence set: tmp%0#5, as_Encoded(uint64)%0#4
debug: selected tmp%0#5 from equivalence set
debug: Found equivalence set: tmp%2#4, as_Encoded(uint64)%1#0
debug: selected tmp%2#4 from equivalence set
debug: Found equivalence set: tmp%0#4, as_Encoded(uint64)%0#3
debug: selected tmp%0#4 from equivalence set
debug: Found equivalence set: tmp%2#3, as_Encoded(len+utf8[])%0#0
debug: selected tmp%2#3 from equivalence set
debug: Found equivalence set: tmp%0#3, as_Encoded(uint64)%0#2
debug: selected tmp%0#3 from equivalence set
debug: Found equivalence set: tmp%0#2, as_Encoded(uint64)%0#1
debug: selected tmp%0#2 from equivalence set
debug: Found equivalence set: tmp%0#1, as_Encoded(uint64)%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 27 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%2#0 NoOp) to (! tmp%2#0)
debug: Simplified (* length%0#2 1u) to length%0#2
debug: Simplified (* length%1#1 1u) to length%1#1
debug: Simplified (substring3 tmp%2#14 2u total_length%0#0) to ((extract 2 0) tmp%2#14)
debug: Simplified (+ 18u num_bytes%1#0) to (+ num_bytes%0#1 20u)
debug: Simplified (+ 20u add%1#0) to (+ num_bytes%0#1 40u)
debug: Simplified (substring3 tmp%4#7 2u total_length%1#0) to ((extract 2 0) tmp%4#7)
debug: Simplified (substring3 tmp%6#2 2u total_length%2#0) to ((extract 2 0) tmp%6#2)
debug: Simplified (+ 18u num_bytes%4#0) to (+ num_bytes%3#1 20u)
debug: Simplified (* length%0#0 1u) to length%0#0
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying exit 0 to err
debug: simplified terminator of block@42 from exit 0u to fail
debug: Optimizer: Merge Blocks
debug: Merged linear block@125 into block@3
debug: Merged linear block@123 into block@4
debug: Merged linear block@121 into block@5
debug: Merged linear block@119 into block@6
debug: Merged linear block@117 into block@7
debug: Merged linear block@115 into block@8
debug: Merged linear block@113 into block@9
debug: Merged linear block@111 into block@10
debug: Merged linear block@109 into block@11
debug: Merged linear block@107 into block@12
debug: Merged linear block@105 into block@13
debug: Merged linear block@103 into block@14
debug: Merged linear block@101 into block@15
debug: Replaced predecessor block@87 with block@16 in block@88
debug: Merged linear block@87 into block@16
debug: Replaced predecessor block@90 with block@89 in block@88
debug: Merged linear block@90 into block@89
debug: Replaced predecessor block@96 with block@95 in block@94
debug: Merged linear block@96 into block@95
debug: Replaced predecessor block@98 with block@97 in block@92
debug: Merged linear block@98 into block@97
debug: Merged linear block@85 into block@17
debug: Merged linear block@83 into block@18
debug: Merged linear block@81 into block@19
debug: Merged linear block@79 into block@20
debug: Merged linear block@77 into block@21
debug: Merged linear block@75 into block@22
debug: Merged linear block@73 into block@23
debug: Merged linear block@71 into block@24
debug: Merged linear block@69 into block@25
debug: Merged linear block@67 into block@26
debug: Merged linear block@65 into block@27
debug: Merged linear block@63 into block@28
debug: Merged linear block@61 into block@29
debug: Merged linear block@59 into block@30
debug: Merged linear block@57 into block@31
debug: Merged linear block@55 into block@32
debug: Merged linear block@53 into block@33
debug: Merged linear block@51 into block@34
debug: Merged linear block@49 into block@35
debug: Merged linear block@47 into block@36
debug: Merged linear block@45 into block@37
debug: Replaced predecessor block@43 with block@41 in block@44
debug: Merged linear block@43 into block@41
debug: Merged linear block@44 into block@41
debug: Merged linear block@42 into block@40
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@126
debug: Removing jump block block@124
debug: Removing jump block block@122
debug: Removing jump block block@120
debug: Removing jump block block@118
debug: Removing jump block block@116
debug: Removing jump block block@114
debug: Removing jump block block@112
debug: Removing jump block block@110
debug: Removing jump block block@108
debug: Removing jump block block@106
debug: Removing jump block block@104
debug: Removing jump block block@102
debug: Removing jump block block@100
debug: Removing jump block block@86
debug: Removing jump block block@84
debug: Removing jump block block@82
debug: Removing jump block block@80
debug: Removing jump block block@78
debug: Removing jump block block@76
debug: Removing jump block block@74
debug: Removing jump block block@72
debug: Removing jump block block@70
debug: Removing jump block block@68
debug: Removing jump block block@66
debug: Removing jump block block@64
debug: Removing jump block block@62
debug: Removing jump block block@60
debug: Removing jump block block@58
debug: Removing jump block block@56
debug: Removing jump block block@54
debug: Removing jump block block@52
debug: Removing jump block block@50
debug: Removing jump block block@48
debug: Removing jump block block@46
debug: Removing jump block block@38
debug: Removing jump block block@39
debug: branching to block@126 will be replaced with block@40
debug: branching to block@124 will be replaced with block@40
debug: branching to block@122 will be replaced with block@40
debug: branching to block@120 will be replaced with block@40
debug: branching to block@118 will be replaced with block@40
debug: branching to block@116 will be replaced with block@40
debug: branching to block@114 will be replaced with block@40
debug: branching to block@112 will be replaced with block@40
debug: branching to block@110 will be replaced with block@40
debug: branching to block@108 will be replaced with block@40
debug: branching to block@106 will be replaced with block@40
debug: branching to block@104 will be replaced with block@40
debug: branching to block@102 will be replaced with block@40
debug: branching to block@100 will be replaced with block@40
debug: branching to block@86 will be replaced with block@40
debug: branching to block@84 will be replaced with block@40
debug: branching to block@82 will be replaced with block@40
debug: branching to block@80 will be replaced with block@40
debug: branching to block@78 will be replaced with block@40
debug: branching to block@76 will be replaced with block@40
debug: branching to block@74 will be replaced with block@40
debug: branching to block@72 will be replaced with block@40
debug: branching to block@70 will be replaced with block@40
debug: branching to block@68 will be replaced with block@40
debug: branching to block@66 will be replaced with block@40
debug: branching to block@64 will be replaced with block@40
debug: branching to block@62 will be replaced with block@40
debug: branching to block@60 will be replaced with block@40
debug: branching to block@58 will be replaced with block@40
debug: branching to block@56 will be replaced with block@40
debug: branching to block@54 will be replaced with block@40
debug: branching to block@52 will be replaced with block@40
debug: branching to block@50 will be replaced with block@40
debug: branching to block@48 will be replaced with block@40
debug: branching to block@46 will be replaced with block@40
debug: branching to block@38 will be replaced with block@40
debug: branching to block@39 will be replaced with block@40
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%1#15, 1) with extract_value(tmp%0#15, 1, 1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%2#14, index%0#1) with extract_value(tmp%0#15, 1, 1, index%0#1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%4#7, index%1#1) with extract_value(tmp%0#15, 2, index%1#1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%5#2, 1) with extract_value(tmp%0#15, 2, index%1#1, 1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%6#2, index%2#1) with extract_value(tmp%0#15, 2, index%1#1, 1, index%2#1)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:94:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_boxes in examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(len+uint8[])%0#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%3#0, as_Encoded(len+utf8[])%0#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: tmp%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: storage_value%1#0, b_value#0
debug: selected b_value#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* length%0#0 1u) to length%0#0
debug: Simplified (* length%1#0 1u) to length%1#0
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%27#0 0u) to tmp%27#0
debug: Simplified (- tmp%35#0 0u) to tmp%35#0
debug: Simplified (- tmp%55#0 0u) to tmp%55#0
debug: Simplified (- tmp%64#0 0u) to tmp%64#0
debug: Simplified (- tmp%73#0 0u) to tmp%73#0
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%41#0 0u 1u) to ((extract 0 1) tmp%41#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%7#0: uint64 = (len b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:94:5-19, ir_type=uint64, name='len%1', version=0)]
debug: Replacing redundant declaration let tmp%9#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:94:5-19, ir_type=uint64, name='len%2', version=0)]
debug: Replacing redundant declaration let tmp%11#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%20#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:94:5-19, ir_type=uint64, name='len%2', version=0)]
debug: Replacing redundant declaration let length%0#1: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:94:5-19, ir_type=uint64, name='len%2', version=0)]
debug: Replacing redundant declaration let length%1#1: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:94:5-19, ir_type=uint64, name='len%2', version=0)]
debug: Replacing redundant declaration let tmp%41#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%47#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%58#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%67#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Replacing redundant declaration let tmp%76#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=1)]
debug: Found equivalence set: length%0#0, mul%0#0
debug: selected length%0#0 from equivalence set
debug: Found equivalence set: length%1#0, mul%1#0
debug: selected length%1#0 from equivalence set
debug: Found equivalence set: len%1#0, tmp%7#0
debug: selected len%1#0 from equivalence set
debug: Found equivalence set: len%2#0, tmp%9#0, tmp%20#0, length%0#1, length%1#1
debug: selected len%2#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%11#0, tmp%41#0, tmp%47#0, tmp%58#0, tmp%67#0, tmp%76#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%28#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%35#0, tmp%36#0
debug: selected tmp%35#0 from equivalence set
debug: Found equivalence set: tmp%55#0, tmp%56#0
debug: selected tmp%55#0 from equivalence set
debug: Found equivalence set: tmp%64#0, tmp%65#0
debug: selected tmp%64#0 from equivalence set
debug: Found equivalence set: tmp%73#0, tmp%74#0
debug: selected tmp%73#0 from equivalence set
debug: Copy propagation made 18 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Found equivalence set: tmp%12#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: selected tmp%12#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:101:9 debug: combined BoxRead `storage_value%0#0 = box_read("box_large")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 4, encoded_value%1#0)`
and BoxWrite `box_write("box_large", updated_tuple%0#0)`
into (box_replace "box_large" box%offset%0#0 encoded_value%1#0)
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:111:16 debug: box_key "b" is known to exist, removing assert
box_storage/contract.py:128:16 debug: box_key "box_large" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:130:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys in examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:137:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints in examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:141:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_many_ints in examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(uint64)%1#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%1#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: tmp%2#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:143:9 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("many_ints", updated_array%0#0)`
into (box_replace "many_ints" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:145:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_many_ints in examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#1, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#1, tmp%0#0
debug: selected total#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:149 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:153:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_boxes in examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("42") with copy of existing registers [Register(source_location=box_storage/contract.py:160:38-55, ir_type=Encoded(len+utf8[]), name='tmp%4', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%5#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:166:6 debug: inlining call to examples.box_storage.contract.BoxContract.indirect_extract_and_replace in examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, large#0
debug: selected large#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, large#1
debug: selected large#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:168:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ExtractValue `extract_value(large#0, 4)`
into box%box_extract%0#0
box_storage/contract.py:168:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ReplaceValue `large#1 = replace_value(large#0, 4, encoded_value%0#0)`
and BoxWrite `box_write("box_large", large#1)`
into (box_replace "box_large" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:172:6 debug: inlining call to examples.box_storage.contract.BoxContract.read_boxes in examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#1, tmp%0#0
debug: selected tmp%1#1 from equivalence set
debug: Found equivalence set: tmp%2#1, tmp%1#0
debug: selected tmp%2#1 from equivalence set
debug: Found equivalence set: storage_value%1#0, tmp%2#0
debug: selected storage_value%1#0 from equivalence set
debug: Found equivalence set: values%0#0, tmp%3#0
debug: selected values%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:178:13 debug: combined BoxRead `storage_value%2#0 = box_read("box_large")`
and ExtractValue `extract_value(storage_value%2#0, 4)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:181:6 debug: inlining call to examples.box_storage.contract.BoxContract.boxes_exist in examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_exists%0#0, tmp%0#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, tmp%1#0
debug: selected maybe_exists%1#0 from equivalence set
debug: Found equivalence set: maybe_exists%2#0, tmp%2#0
debug: selected maybe_exists%2#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, tmp%3#0
debug: selected maybe_exists%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:185:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_arr_struct in examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>() with copy of existing registers [Register(source_location=box_storage/contract.py:189:16-31, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:194:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct in examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:198:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_arr_struct in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#1, arr2_len#0
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: value_internal%0#1, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%8#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Found equivalence set: tmp%11#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Found equivalence set: tmp%17#0, tmp%2#0
debug: selected tmp%17#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%15#0 0u) to (! tmp%15#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:202:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 2)`
into box%box_extract%0#0
box_storage/contract.py:217:13 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%3#0, 4, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%5#0 encoded_value%0#0)
box_storage/contract.py:219:9 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%4#0, 4, 0, tmp%9#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%7#0 tmp%9#0)
box_storage/contract.py:222:9 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%5#0, 3, tmp%12#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%2#0)`
into (box_replace "dynamic_arr_struct" box%offset%8#0 tmp%12#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:230:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#1, arr2_len#0
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%4#1, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%9#0, size#0
debug: selected size#0 from equivalence set
debug: Found equivalence set: tmp%10#0, tmp%2#0
debug: selected tmp%10#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:240:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%2#0, 4, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%3#0 tmp%5#0)
box_storage/contract.py:241:9 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%3#0, 3, tmp%6#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%4#0 tmp%6#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:252:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_nested_struct in examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0, struct#0
debug: selected struct#0 from equivalence set
debug: Found equivalence set: tmp%1#1, struct_bytes#0
debug: selected struct_bytes#0 from equivalence set
debug: Found equivalence set: tmp%2#1, struct_size#0
debug: selected struct_size#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable tail_offset#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (substring3 tmp%2#0 2u total_length%0#0) to ((extract 2 0) tmp%2#0)
debug: Simplified (+ 18u num_bytes%1#0) to (+ num_bytes%0#1 20u)
debug: Simplified (+ 20u add%1#0) to (+ num_bytes%0#1 40u)
debug: Simplified (substring3 tmp%4#0 2u total_length%1#0) to ((extract 2 0) tmp%4#0)
debug: Simplified (substring3 tmp%6#0 2u total_length%2#0) to ((extract 2 0) tmp%6#0)
debug: Simplified (+ 18u num_bytes%4#0) to (+ num_bytes%3#1 20u)
debug: Simplified (- 4098u 2u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@7
debug: Merged linear block@9 into block@8
debug: Replaced predecessor block@11 with block@10 in block@5
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@13 with block@12 in block@14
debug: Merged linear block@13 into block@12
debug: Merged linear block@14 into block@12
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%1#0, 1) with extract_value(struct#0, 1, 1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%2#0, index%0#1) with extract_value(struct#0, 1, 1, index%0#1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%4#0, index%1#1) with extract_value(struct#0, 2, index%1#1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%5#0, 1) with extract_value(struct#0, 2, index%1#1, 1)
box_storage/contract.py:252:6 debug: replacing extract_value(tmp%6#0, index%2#1) with extract_value(struct#0, 2, index%1#1, 1, index%2#1)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:266:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_write in examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(uint64)%1#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%1#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: tmp%2#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:269:9 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, 0, encoded_value%0#0)`
and BoxWrite `box_write("box", updated_tuple%0#0)`
into (box_replace "box" box%offset%1#0 encoded_value%0#0)
box_storage/contract.py:270:9 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%1#0, 1, 3, encoded_value%1#0)`
and BoxWrite `box_write("box", updated_tuple%1#0)`
into (box_replace "box" box%offset%3#0 encoded_value%1#0)
box_storage/contract.py:271:9 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%2#0, 1, 1, 1, index#0, index#0, encoded_value%2#0)`
and BoxWrite `box_write("box", updated_tuple%2#0)`
into (box_replace "box" box%offset%8#0 encoded_value%2#0)
box_storage/contract.py:272:9 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ReplaceValue `updated_tuple%3#0 = replace_value(storage_value%3#0, 1, 1, 0, encoded_value%3#0)`
and BoxWrite `box_write("box", updated_tuple%3#0)`
into (box_replace "box" box%offset%11#0 encoded_value%3#0)
box_storage/contract.py:273:9 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ReplaceValue `updated_tuple%4#0 = replace_value(storage_value%4#0, 1, 1, 2, encoded_value%4#0)`
and BoxWrite `box_write("box", updated_tuple%4#0)`
into (box_replace "box" box%offset%14#0 encoded_value%4#0)
box_storage/contract.py:274:9 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ReplaceValue `updated_tuple%5#0 = replace_value(storage_value%5#0, 1, 2, index#0, 1, index#0, index#0, encoded_value%5#0)`
and BoxWrite `box_write("box", updated_tuple%5#0)`
into (box_replace "box" box%offset%20#0 encoded_value%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:276:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_read in examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(uint64)%1#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%4#0, as_Encoded(uint64)%2#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%1#0, i1#0
debug: selected i1#0 from equivalence set
debug: Found equivalence set: tmp%3#0, i2#0
debug: selected i2#0 from equivalence set
debug: Found equivalence set: tmp%5#0, i3#0
debug: selected i3#0 from equivalence set
debug: Found equivalence set: values%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: values%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: values%2#0, arr_arr#0
debug: selected arr_arr#0 from equivalence set
debug: Found equivalence set: values%3#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: values%4#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: values%5#0, woah_arr_arr#0
debug: selected woah_arr_arr#0 from equivalence set
debug: Found equivalence set: tmp%4#1, tmp%6#0
debug: selected tmp%4#1 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:279:13 debug: replacing extract_value(tuple_item%0#0, 0) with extract_value(storage_value%0#0, 1, 0)
box_storage/contract.py:280:13 debug: replacing extract_value(tuple_item%2#0, 3) with extract_value(storage_value%1#0, 1, 3)
box_storage/contract.py:281:19 debug: replacing extract_value(tuple_item%4#0, 1) with extract_value(storage_value%2#0, 1, 1)
box_storage/contract.py:281:19 debug: replacing extract_value(tuple_item%5#0, 1) with extract_value(storage_value%2#0, 1, 1, 1)
box_storage/contract.py:281:19 debug: replacing extract_value(tuple_item%6#0, i1#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0)
box_storage/contract.py:281:19 debug: replacing extract_value(array_item%0#0, i2#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)
box_storage/contract.py:282:13 debug: replacing extract_value(tuple_item%7#0, 1) with extract_value(storage_value%3#0, 1, 1)
box_storage/contract.py:282:13 debug: replacing extract_value(tuple_item%8#0, 0) with extract_value(storage_value%3#0, 1, 1, 0)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%10#0, 1) with extract_value(storage_value%4#0, 1, 1)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%11#0, 2) with extract_value(storage_value%4#0, 1, 1, 2)
box_storage/contract.py:284:24 debug: replacing extract_value(tuple_item%13#0, 2) with extract_value(storage_value%5#0, 1, 2)
box_storage/contract.py:284:24 debug: replacing extract_value(tuple_item%14#0, i1#0) with extract_value(storage_value%5#0, 1, 2, i1#0)
box_storage/contract.py:284:24 debug: replacing extract_value(array_item%2#0, 1) with extract_value(storage_value%5#0, 1, 2, i1#0, 1)
box_storage/contract.py:284:24 debug: replacing extract_value(tuple_item%15#0, i2#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0)
box_storage/contract.py:284:24 debug: replacing extract_value(array_item%3#0, i3#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:279:13 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%0#0, 1, 0)`
into box%box_extract%0#0
box_storage/contract.py:280:13 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%1#0, 1, 3)`
into box%box_extract%1#0
box_storage/contract.py:281:19 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)`
into box%box_extract%5#0
box_storage/contract.py:282:13 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%3#0, 1, 1, 0)`
into box%box_extract%6#0
box_storage/contract.py:283:13 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%4#0, 1, 1, 2)`
into box%box_extract%7#0
box_storage/contract.py:284:24 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)`
into box%box_extract%14#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:288:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct in examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#1, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%4#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%3#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%5#0, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: tmp%4#0, total#4
debug: selected total#4 from equivalence set
debug: Found equivalence set: total#3, tmp%0#0
debug: selected total#3 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@8 with block@7 in block@6
debug: Merged linear block@8 into block@7
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:293 debug: replacing extract_value(tuple_item%4#0, item_index_internal%0#1) with extract_value(storage_value%4#0, 1, item_index_internal%0#1)
box_storage/contract.py:295 debug: replacing extract_value(tuple_item%5#0, item_index_internal%1#1) with extract_value(storage_value%5#0, 3, item_index_internal%1#1)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:290:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:291:16 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%1#0, 2)`
into box%box_extract%1#0
box_storage/contract.py:292:17 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%2#0, 0)`
into box%box_extract%2#0
box_storage/contract.py:292:51 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%3#0, 2)`
into box%box_extract%3#0
box_storage/contract.py:293 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%4#0, 1, item_index_internal%0#1)`
into box%box_extract%6#0
box_storage/contract.py:295 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%5#0, 3, item_index_internal%1#1)`
into box%box_extract%10#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:299:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_bools in examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:303:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_bool in examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(bool8)%0#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%1#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:305:9 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("too_many_bools", updated_array%0#0)`
into (box_replace "too_many_bools" box%byte_containing_bit_offset%0#0 box%tmp%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:307:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_bools in examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, stop_at_total#0
debug: selected stop_at_total#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%0#1, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#4, tmp%2#0
debug: selected total#4 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@8 with block@7 in block@2
debug: Merged linear block@8 into block@7
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:310 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into extract_value(box%box_extract%0#0, box%element_bit_offset%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:317:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_box in examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:321:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box in examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:325:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_box in examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%0#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: value_internal%0#1, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%4#1, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Found equivalence set: tmp%6#0, tmp%2#0
debug: selected tmp%6#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:330:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:334:13 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%2#0 encoded_value%0#0)
box_storage/contract.py:337:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%2#0, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%1#0)`
into (box_replace "dynamic_box" box%offset%3#0 tmp%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:340:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_box in examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#1, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%5#0, tmp%2#0
debug: selected tmp%5#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:345:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:346:9 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 0, tmp%2#1)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%1#0 tmp%2#1)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:351:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_box in examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#1, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#1, tmp%0#0
debug: selected total#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:354 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%1#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:358:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_box in examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(uint64)%1#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%1#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: tmp%2#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:360:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_array%0#0)`
into (box_replace "dynamic_box" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:362:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_arr_struct in examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(uint64)%1#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%1#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: tmp%2#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:364:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:366:6 debug: inlining call to examples.box_storage.contract.BoxContract.slice_box in examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:375:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box in examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:385:6 debug: inlining call to examples.box_storage.contract.BoxContract.test_box_ref in examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#0, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: selected exists#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:399:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:425:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:430:9 debug: box_key "box_ref" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:433:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_test in examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: replacing box_get with box_len because value#1 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:442:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:442:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:443:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:448:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:457:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_set in examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, as_Encoded(len+utf8[])%0#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: tmp%3#0, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* length%0#0 1u) to length%0#0
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:461:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_get in examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%2#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:465:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_del in examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key#0
debug: selected key#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:469:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_exists in examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, as_Encoded(uint64)%0#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, tmp%2#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (> 4104u 4096u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%1#0, b_value#0
debug: selected b_value#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%27#0 0u) to tmp%27#0
debug: Simplified (- tmp%35#0 0u) to tmp%35#0
debug: Simplified (- tmp%55#0 0u) to tmp%55#0
debug: Simplified (- tmp%64#0 0u) to tmp%64#0
debug: Simplified (- tmp%73#0 0u) to tmp%73#0
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%41#0 0u 1u) to ((extract 0 1) tmp%41#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%20#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:112:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:112:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers [Register(source_location=box_storage/contract.py:112:36-50, ir_type=uint64, name='tmp%9', version=0)]
debug: Replacing redundant declaration let tmp%41#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%47#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%58#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%67#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Replacing redundant declaration let tmp%76#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers [Register(source_location=box_storage/contract.py:99:27-35, ir_type=bytes, name='tmp%0', version=0)]
debug: Found equivalence set: tmp%0#0, tmp%11#0, tmp%41#0, tmp%47#0, tmp%58#0, tmp%67#0, tmp%76#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%9#0, tmp%20#0, length%0#0, length%1#0
debug: selected tmp%9#0 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%28#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%35#0, tmp%36#0
debug: selected tmp%35#0 from equivalence set
debug: Found equivalence set: tmp%55#0, tmp%56#0
debug: selected tmp%55#0 from equivalence set
debug: Found equivalence set: tmp%64#0, tmp%65#0
debug: selected tmp%64#0 from equivalence set
debug: Found equivalence set: tmp%73#0, tmp%74#0
debug: selected tmp%73#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:113:36-51, ir_type=uint64, name='tmp%12', version=0)]
debug: Found equivalence set: tmp%12#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: selected tmp%12#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:101:9 debug: combined BoxRead `storage_value%0#0 = box_read("box_large")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 4, encoded_value%1#0)`
and BoxWrite `box_write("box_large", updated_tuple%0#0)`
into (box_replace "box_large" box%offset%0#0 encoded_value%1#0)
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:111:16 debug: box_key "b" is known to exist, removing assert
box_storage/contract.py:128:16 debug: box_key "box_large" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:143:9 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("many_ints", updated_array%0#0)`
into (box_replace "many_ints" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:147:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@7 from goto_nth [block@8, block@9][0u] else goto block@10 to goto block@8
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@8 with block@7 in block@10
debug: Merged linear block@8 into block@7
debug: Replaced predecessor block@12 with block@11 in block@1
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@9
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:149 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("42") with copy of existing registers [Register(source_location=box_storage/contract.py:160:38-55, ir_type=Encoded(len+utf8[]), name='tmp%4', version=0)]
debug: Found equivalence set: tmp%4#0, tmp%5#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, large#0
debug: selected large#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, large#1
debug: selected large#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:168:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ExtractValue `extract_value(large#0, 4)`
into box%box_extract%0#0
box_storage/contract.py:168:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ReplaceValue `large#1 = replace_value(large#0, 4, encoded_value%0#0)`
and BoxWrite `box_write("box_large", large#1)`
into (box_replace "box_large" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:175:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:178:13 debug: combined BoxRead `storage_value%2#0 = box_read("box_large")`
and ExtractValue `extract_value(storage_value%2#0, 4)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(len+uint64[]) = bytes_encode<(len+uint64[])>() with copy of existing registers [Register(source_location=box_storage/contract.py:189:16-31, ir_type=Encoded(len+uint64[]), name='encoded_array%0', version=0)]
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:221:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
box_storage/contract.py:208:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
box_storage/contract.py:212:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0, index#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#0, arr_size#1
debug: selected arr_size#1 from equivalence set
debug: Found equivalence set: tmp%3#3, tmp%4#0
debug: selected tmp%3#3 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%5#0
debug: selected tmp%5#1 from equivalence set
debug: Found equivalence set: value_internal%0#1, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%8#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Found equivalence set: arr_len#1, arr_size#0
debug: selected arr_len#1 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%10#0
debug: selected tmp%3#1 from equivalence set
debug: Found equivalence set: tmp%11#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#3
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Removing unused variable box#0
debug: Removing unused variable arr2_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#2 24u)
debug: Simplified (== tmp%15#0 0u) to (! tmp%15#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@1
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Merged linear block@6 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:202:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 2)`
into box%box_extract%0#0
box_storage/contract.py:217:13 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%3#0, 4, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%5#0 encoded_value%0#0)
box_storage/contract.py:219:9 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%4#0, 4, 0, tmp%9#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%7#0 tmp%9#0)
box_storage/contract.py:222:9 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%5#0, 3, tmp%12#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%2#0)`
into (box_replace "dynamic_arr_struct" box%offset%8#0 tmp%12#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:239:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
box_storage/contract.py:242:17 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
box_storage/contract.py:247:16 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0, arr_size#0, index#1, arr_size#1
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%2#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tmp%3#0
debug: selected tmp%3#1 from equivalence set
debug: Found equivalence set: tmp%4#0, arr2_offset#0
debug: selected arr2_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%7#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#4, tmp%9#0, size#0
debug: selected size#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable arr2_index#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#2
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#2 24u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#3: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:492:43-66, ir_type=uint64, name='tmp%3', version=2)]
debug: Replacing redundant declaration let tmp%3#5: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:492:43-66, ir_type=uint64, name='tmp%3', version=2)]
debug: Found equivalence set: tmp%3#2, tmp%3#3, tmp%3#5
debug: selected tmp%3#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let index#0: uint64 = (+ tmp%3#2 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:498:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Replacing redundant declaration let head_and_dyn_arr#1: uint64 = (+ tmp%3#2 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:498:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Found equivalence set: head_and_dyn_arr#0, index#0, head_and_dyn_arr#1
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:240:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%2#0, 4, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%3#0 tmp%5#0)
box_storage/contract.py:241:9 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%3#0, 3, tmp%6#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%1#0)`
into (box_replace "dynamic_arr_struct" box%offset%4#0 tmp%6#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, struct_bytes#0
debug: selected struct_bytes#0 from equivalence set
debug: Found equivalence set: tmp%2#0, struct_size#0
debug: selected struct_size#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable tail_offset#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (- 4098u 2u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:269:9 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, 0, encoded_value%0#0)`
and BoxWrite `box_write("box", updated_tuple%0#0)`
into (box_replace "box" box%offset%1#0 encoded_value%0#0)
box_storage/contract.py:270:9 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%1#0, 1, 3, encoded_value%1#0)`
and BoxWrite `box_write("box", updated_tuple%1#0)`
into (box_replace "box" box%offset%3#0 encoded_value%1#0)
box_storage/contract.py:271:9 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ReplaceValue `updated_tuple%2#0 = replace_value(storage_value%2#0, 1, 1, 1, index#0, index#0, encoded_value%2#0)`
and BoxWrite `box_write("box", updated_tuple%2#0)`
into (box_replace "box" box%offset%8#0 encoded_value%2#0)
box_storage/contract.py:272:9 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ReplaceValue `updated_tuple%3#0 = replace_value(storage_value%3#0, 1, 1, 0, encoded_value%3#0)`
and BoxWrite `box_write("box", updated_tuple%3#0)`
into (box_replace "box" box%offset%11#0 encoded_value%3#0)
box_storage/contract.py:273:9 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ReplaceValue `updated_tuple%4#0 = replace_value(storage_value%4#0, 1, 1, 2, encoded_value%4#0)`
and BoxWrite `box_write("box", updated_tuple%4#0)`
into (box_replace "box" box%offset%14#0 encoded_value%4#0)
box_storage/contract.py:274:9 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ReplaceValue `updated_tuple%5#0 = replace_value(storage_value%5#0, 1, 2, index#0, 1, index#0, index#0, encoded_value%5#0)`
and BoxWrite `box_write("box", updated_tuple%5#0)`
into (box_replace "box" box%offset%20#0 encoded_value%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: values%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: values%2#0, arr_arr#0
debug: selected arr_arr#0 from equivalence set
debug: Found equivalence set: values%3#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: values%4#0, d#0
debug: selected d#0 from equivalence set
debug: Found equivalence set: values%5#0, woah_arr_arr#0
debug: selected woah_arr_arr#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:279:13 debug: replacing extract_value(tuple_item%0#0, 0) with extract_value(storage_value%0#0, 1, 0)
box_storage/contract.py:280:13 debug: replacing extract_value(tuple_item%2#0, 3) with extract_value(storage_value%1#0, 1, 3)
box_storage/contract.py:281:19 debug: replacing extract_value(tuple_item%4#0, 1) with extract_value(storage_value%2#0, 1, 1)
box_storage/contract.py:281:19 debug: replacing extract_value(tuple_item%5#0, 1) with extract_value(storage_value%2#0, 1, 1, 1)
box_storage/contract.py:281:19 debug: replacing extract_value(tuple_item%6#0, i1#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0)
box_storage/contract.py:281:19 debug: replacing extract_value(array_item%0#0, i2#0) with extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)
box_storage/contract.py:282:13 debug: replacing extract_value(tuple_item%7#0, 1) with extract_value(storage_value%3#0, 1, 1)
box_storage/contract.py:282:13 debug: replacing extract_value(tuple_item%8#0, 0) with extract_value(storage_value%3#0, 1, 1, 0)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%10#0, 1) with extract_value(storage_value%4#0, 1, 1)
box_storage/contract.py:283:13 debug: replacing extract_value(tuple_item%11#0, 2) with extract_value(storage_value%4#0, 1, 1, 2)
box_storage/contract.py:284:24 debug: replacing extract_value(tuple_item%13#0, 2) with extract_value(storage_value%5#0, 1, 2)
box_storage/contract.py:284:24 debug: replacing extract_value(tuple_item%14#0, i1#0) with extract_value(storage_value%5#0, 1, 2, i1#0)
box_storage/contract.py:284:24 debug: replacing extract_value(array_item%2#0, 1) with extract_value(storage_value%5#0, 1, 2, i1#0, 1)
box_storage/contract.py:284:24 debug: replacing extract_value(tuple_item%15#0, i2#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0)
box_storage/contract.py:284:24 debug: replacing extract_value(array_item%3#0, i3#0) with extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:279:13 debug: combined BoxRead `storage_value%0#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%0#0, 1, 0)`
into box%box_extract%0#0
box_storage/contract.py:280:13 debug: combined BoxRead `storage_value%1#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%1#0, 1, 3)`
into box%box_extract%1#0
box_storage/contract.py:281:19 debug: combined BoxRead `storage_value%2#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%2#0, 1, 1, 1, i1#0, i2#0)`
into box%box_extract%5#0
box_storage/contract.py:282:13 debug: combined BoxRead `storage_value%3#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%3#0, 1, 1, 0)`
into box%box_extract%6#0
box_storage/contract.py:283:13 debug: combined BoxRead `storage_value%4#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%4#0, 1, 1, 2)`
into box%box_extract%7#0
box_storage/contract.py:284:24 debug: combined BoxRead `storage_value%5#0 = box_read("box")`
and ExtractValue `extract_value(storage_value%5#0, 1, 2, i1#0, 1, i2#0, i3#0)`
into box%box_extract%14#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, total#0
debug: selected total#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%4#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%3#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%5#0, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: tmp%4#0, total#4
debug: selected total#4 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
box_storage/contract.py:293 debug: replacing extract_value(tuple_item%4#0, item_index_internal%0#1) with extract_value(storage_value%4#0, 1, item_index_internal%0#1)
box_storage/contract.py:295 debug: replacing extract_value(tuple_item%5#0, item_index_internal%1#1) with extract_value(storage_value%5#0, 3, item_index_internal%1#1)
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:290:16 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:291:16 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%1#0, 2)`
into box%box_extract%1#0
box_storage/contract.py:292:17 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%2#0, 0)`
into box%box_extract%2#0
box_storage/contract.py:292:51 debug: combined BoxRead `storage_value%3#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%3#0, 2)`
into box%box_extract%3#0
box_storage/contract.py:293 debug: combined BoxRead `storage_value%4#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%4#0, 1, item_index_internal%0#1)`
into box%box_extract%6#0
box_storage/contract.py:295 debug: combined BoxRead `storage_value%5#0 = box_read("dynamic_arr_struct")`
and ExtractValue `extract_value(storage_value%5#0, 3, item_index_internal%1#1)`
into box%box_extract%10#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:305:9 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("too_many_bools", updated_array%0#0)`
into (box_replace "too_many_bools" box%byte_containing_bit_offset%0#0 box%tmp%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@7 with block@6 in block@1
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:310 debug: combined BoxRead `storage_value%0#0 = box_read("too_many_bools")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into extract_value(box%box_extract%0#0, box%element_bit_offset%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: value_internal%0#1, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%4#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:330:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:334:13 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%2#0 encoded_value%0#0)
box_storage/contract.py:337:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%2#0, 0, tmp%5#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%1#0)`
into (box_replace "dynamic_box" box%offset%3#0 tmp%5#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:345:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:346:9 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 0, tmp%2#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%1#0 tmp%2#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:354 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%1#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:360:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_array%0#0)`
into (box_replace "dynamic_box" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:364:9 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_arr_struct")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 1, index#0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_arr_struct", updated_tuple%0#0)`
into (box_replace "dynamic_arr_struct" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:426:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#0, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: value%0#1, tmp%19#0
debug: selected value%0#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable ref#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:399:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:425:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:481:12 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:430:9 debug: box_key "box_ref" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:454:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%8#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#1) to encoded_value%0#1
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: replacing box_get with box_len because value#1 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers [Register(source_location=box_storage/contract.py:438:21-26, ir_type=bytes[8], name='encoded_value%0', version=0)]
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%0#1: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%0#1, box_prefixed_key%0#1, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:442:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:442:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:443:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:448:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_boxes[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.check_keys[routing] for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_many_ints[routing] as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_many_ints[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_many_ints[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_boxes[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.read_boxes[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.boxes_exist[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing] for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_nested_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_write[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.nested_read[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.create_bools[routing] as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_bool[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_bools[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_box[routing] for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.slice_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.arc4_box[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.test_box_ref[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_test[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_set[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_get[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_del[routing] for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_exists[routing] for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:469:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_exists[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:465:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_del[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:461:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_get[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:457:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_set[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:433:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_test[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:385:6 debug: inlining call to examples.box_storage.contract.BoxContract.test_box_ref[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:375:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:366:6 debug: inlining call to examples.box_storage.contract.BoxContract.slice_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:362:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:358:6 debug: inlining call to examples.box_storage.contract.BoxContract.write_dynamic_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:351:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:340:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:325:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:321:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:317:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_box[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:307:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_bools[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:303:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_bool[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:299:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_bools[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:288:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:276:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_read[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:266:6 debug: inlining call to examples.box_storage.contract.BoxContract.nested_write[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:252:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_nested_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:230:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:198:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:194:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:185:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:181:6 debug: inlining call to examples.box_storage.contract.BoxContract.boxes_exist[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:172:6 debug: inlining call to examples.box_storage.contract.BoxContract.read_boxes[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:166:6 debug: inlining call to examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:153:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_boxes[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:145:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_many_ints[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:141:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_many_ints[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:137:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:130:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys[routing] in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:94:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_boxes[routing] in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#6, tmp%2#28
debug: selected box%array_length%0#6 from equivalence set
debug: Found equivalence set: box%array_length%1#3, tmp%3#26
debug: selected box%array_length%1#3 from equivalence set
debug: Found equivalence set: tmp%2#25, encoded_value%0#11
debug: selected tmp%2#25 from equivalence set
debug: Found equivalence set: box%box_extract%0#13, array_item%0#5
debug: selected box%box_extract%0#13 from equivalence set
debug: Found equivalence set: box%box_extract%0#12, tuple_item%0#8
debug: selected box%box_extract%0#12 from equivalence set
debug: Found equivalence set: box%box_extract%0#11, tuple_item%0#7
debug: selected box%box_extract%0#11 from equivalence set
debug: Found equivalence set: box%box_extract%0#10, tuple_item%0#6
debug: selected box%box_extract%0#10 from equivalence set
debug: Found equivalence set: box%array_length%0#5, arr_len#5
debug: selected arr_len#5 from equivalence set
debug: Found equivalence set: box%array_length%1#2, arr2_len#1
debug: selected arr2_len#1 from equivalence set
debug: Found equivalence set: box%array_length%2#1, tmp%13#2
debug: selected box%array_length%2#1 from equivalence set
debug: Found equivalence set: box%array_length%3#0, tmp%15#2
debug: selected box%array_length%3#0 from equivalence set
debug: Found equivalence set: box%array_length%4#0, tmp%17#2
debug: selected box%array_length%4#0 from equivalence set
debug: Found equivalence set: box%array_length%0#4, tmp%0#27
debug: selected box%array_length%0#4 from equivalence set
debug: Found equivalence set: box%array_length%1#1, arr2_len#0
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%10#3
debug: selected box%array_length%2#0 from equivalence set
debug: Found equivalence set: tmp%2#17, encoded_value%0#8
debug: selected tmp%2#17 from equivalence set
debug: Found equivalence set: box%box_extract%0#7, tuple_item%1#1
debug: selected box%box_extract%0#7 from equivalence set
debug: Found equivalence set: box%box_extract%1#4, tuple_item%3#1
debug: selected box%box_extract%1#4 from equivalence set
debug: Found equivalence set: box%box_extract%5#1, array_item%1#2
debug: selected box%box_extract%5#1 from equivalence set
debug: Found equivalence set: box%box_extract%6#1, tuple_item%9#0
debug: selected box%box_extract%6#1 from equivalence set
debug: Found equivalence set: box%box_extract%7#1, tuple_item%12#0
debug: selected box%box_extract%7#1 from equivalence set
debug: Found equivalence set: box%box_extract%14#0, array_item%4#0
debug: selected box%box_extract%14#0 from equivalence set
debug: Found equivalence set: box%box_extract%0#6, tuple_item%0#2
debug: selected box%box_extract%0#6 from equivalence set
debug: Found equivalence set: box%box_extract%1#3, tuple_item%1#0
debug: selected box%box_extract%1#3 from equivalence set
debug: Found equivalence set: box%box_extract%2#0, tuple_item%2#0
debug: selected box%box_extract%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%3#0, tuple_item%3#0
debug: selected box%box_extract%3#0 from equivalence set
debug: Found equivalence set: box%array_length%0#3, array_length%0#2
debug: selected box%array_length%0#3 from equivalence set
debug: Found equivalence set: box%box_extract%6#0, array_item%0#3
debug: selected box%box_extract%6#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, array_length%1#0
debug: selected box%array_length%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%10#0, array_item%1#1
debug: selected box%box_extract%10#0 from equivalence set
debug: Found equivalence set: box%box_extract%0#3, tuple_item%0#1
debug: selected box%box_extract%0#3 from equivalence set
debug: Found equivalence set: box%array_length%0#2, tmp%6#3
debug: selected box%array_length%0#2 from equivalence set
debug: Found equivalence set: box%box_extract%0#2, tuple_item%0#0
debug: selected box%box_extract%0#2 from equivalence set
debug: Found equivalence set: box%array_length%0#1, tmp%5#3
debug: selected box%array_length%0#1 from equivalence set
debug: Found equivalence set: box%array_length%0#0, array_length%0#0
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, array_item%0#1
debug: selected box%box_extract%1#0 from equivalence set
debug: Found equivalence set: tmp%2#7, encoded_value%0#5
debug: selected tmp%2#7 from equivalence set
debug: Found equivalence set: tmp%2#6, encoded_value%0#4
debug: selected tmp%2#6 from equivalence set
debug: Found equivalence set: length%0#0, mul%0#0
debug: selected length%0#0 from equivalence set
debug: Found equivalence set: encoded_value%0#3, box_prefixed_key%0#3
debug: selected encoded_value%0#3 from equivalence set
debug: Found equivalence set: encoded_value%0#2, box_prefixed_key%0#2
debug: selected encoded_value%0#2 from equivalence set
debug: Found equivalence set: encoded_value%0#1, box_prefixed_key%0#1
debug: selected encoded_value%0#1 from equivalence set
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Copy propagation made 42 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%5#0
debug: Removing unused variable updated_tuple%0#6
debug: Removing unused variable tmp%1#25
debug: Removing unused variable b_value#0
debug: Removing unused variable storage_value%2#9
debug: Removing unused variable tmp%0#36
debug: Removing unused variable tmp%1#23
debug: Removing unused variable tmp%2#26
debug: Removing unused variable tmp%3#24
debug: Removing unused variable value#9
debug: Removing unused variable updated_array%0#2
debug: Removing unused variable large#1
debug: Removing unused variable storage_value%2#8
debug: Removing unused variable storage_value%0#13
debug: Removing unused variable tuple_item%1#3
debug: Removing unused variable tuple_item%2#3
debug: Removing unused variable updated_tuple%0#5
debug: Removing unused variable updated_tuple%1#3
debug: Removing unused variable updated_tuple%2#1
debug: Removing unused variable tuple_item%3#2
debug: Removing unused variable tuple_item%4#2
debug: Removing unused variable tuple_item%5#2
debug: Removing unused variable tuple_item%0#5
debug: Removing unused variable tuple_item%1#2
debug: Removing unused variable updated_tuple%0#4
debug: Removing unused variable updated_tuple%1#2
debug: Removing unused variable tuple_item%2#2
debug: Removing unused variable total_length%0#0
debug: Removing unused variable num_bytes%1#0
debug: Removing unused variable add%1#0
debug: Removing unused variable total_length%1#0
debug: Removing unused variable total_length%2#0
debug: Removing unused variable num_bytes%4#0
debug: Removing unused variable tmp%0#25
debug: Removing unused variable tmp%4#14
debug: Removing unused variable updated_tuple%0#3
debug: Removing unused variable updated_tuple%1#1
debug: Removing unused variable updated_tuple%2#0
debug: Removing unused variable updated_tuple%3#0
debug: Removing unused variable updated_tuple%4#0
debug: Removing unused variable updated_tuple%5#0
debug: Removing unused variable tuple_item%0#3
debug: Removing unused variable tuple_item%2#1
debug: Removing unused variable tuple_item%4#1
debug: Removing unused variable tuple_item%5#1
debug: Removing unused variable tuple_item%6#0
debug: Removing unused variable array_item%0#4
debug: Removing unused variable tuple_item%7#0
debug: Removing unused variable tuple_item%8#0
debug: Removing unused variable tuple_item%10#0
debug: Removing unused variable tuple_item%11#0
debug: Removing unused variable tuple_item%13#0
debug: Removing unused variable tuple_item%14#0
debug: Removing unused variable array_item%2#1
debug: Removing unused variable tuple_item%15#0
debug: Removing unused variable array_item%3#1
debug: Removing unused variable storage_value%0#9
debug: Removing unused variable storage_value%1#3
debug: Removing unused variable storage_value%2#3
debug: Removing unused variable storage_value%3#2
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable updated_array%0#1
debug: Removing unused variable storage_value%0#6
debug: Removing unused variable updated_tuple%0#2
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable storage_value%3#1
debug: Removing unused variable storage_value%0#5
debug: Removing unused variable updated_tuple%0#1
debug: Removing unused variable storage_value%2#1
debug: Removing unused variable storage_value%0#4
debug: Removing unused variable value#5
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable value#4
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable tmp%2#5
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%13#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%0#7
debug: Removing unused variable tmp%3#3
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable storage_value%0#17
debug: Removing unused variable storage_value%0#16
debug: Removing unused variable large#0
debug: Removing unused variable storage_value%1#7
debug: Removing unused variable storage_value%2#7
debug: Removing unused variable storage_value%3#6
debug: Removing unused variable storage_value%4#4
debug: Removing unused variable storage_value%5#3
debug: Removing unused variable storage_value%6#0
debug: Removing unused variable storage_value%7#0
debug: Removing unused variable storage_value%8#0
debug: Removing unused variable storage_value%0#12
debug: Removing unused variable storage_value%1#6
debug: Removing unused variable storage_value%2#6
debug: Removing unused variable storage_value%3#5
debug: Removing unused variable storage_value%4#3
debug: Removing unused variable storage_value%0#11
debug: Removing unused variable storage_value%1#5
debug: Removing unused variable storage_value%2#5
debug: Removing unused variable storage_value%3#4
debug: Removing unused variable storage_value%4#2
debug: Removing unused variable storage_value%5#2
debug: Removing unused variable storage_value%0#10
debug: Removing unused variable storage_value%1#4
debug: Removing unused variable storage_value%2#4
debug: Removing unused variable storage_value%3#3
debug: Removing unused variable storage_value%4#1
debug: Removing unused variable storage_value%5#1
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Removing unused variable storage_value%0#8
debug: Removing unused variable storage_value%1#2
debug: Removing unused variable storage_value%2#2
debug: Removing unused variable storage_value%1#1
debug: Removing unused variable storage_value%0#3
debug: Removing unused variable storage_value%0#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u box%element_offset%0#9) to box%element_offset%0#9
debug: Simplified (+ 0u box%element_offset%0#8) to box%element_offset%0#8
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%0#5) to box%btoi%0#5
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 0u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%1#3) to box%btoi%1#3
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%0#4) to box%btoi%0#4
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 0u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 0u) to 4098u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 12u) to 4110u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 18u) to 4136u
debug: Simplified (+ 4136u 2u) to 4138u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 0u) to 4118u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 10u) to 4128u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 10u) to 4108u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 0u) to 4098u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 12u) to 4110u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 18u) to 4136u
debug: Simplified (+ 4136u 2u) to 4138u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 0u) to 4118u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 10u) to 4128u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 10u) to 4108u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%1#0) to box%btoi%1#0
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%2#0) to box%btoi%2#0
debug: Simplified (+ 0u box%element_byte_offset%0#1) to box%element_byte_offset%0#1
debug: Simplified (+ 0u box%element_byte_offset%0#0) to box%element_byte_offset%0#0
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@4 from goto tmp%4#0 ? block@5 : block@43 to goto block@5
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Replaced predecessor block@5 with block@4 in block@8
debug: Replaced predecessor block@5 with block@4 in block@9
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Replaced predecessor block@5 with block@4 in block@11
debug: Replaced predecessor block@5 with block@4 in block@12
debug: Replaced predecessor block@5 with block@4 in block@13
debug: Replaced predecessor block@5 with block@4 in block@14
debug: Replaced predecessor block@5 with block@4 in block@15
debug: Replaced predecessor block@5 with block@4 in block@16
debug: Replaced predecessor block@5 with block@4 in block@17
debug: Replaced predecessor block@5 with block@4 in block@18
debug: Replaced predecessor block@5 with block@4 in block@19
debug: Replaced predecessor block@5 with block@4 in block@20
debug: Replaced predecessor block@5 with block@4 in block@21
debug: Replaced predecessor block@5 with block@4 in block@22
debug: Replaced predecessor block@5 with block@4 in block@23
debug: Replaced predecessor block@5 with block@4 in block@24
debug: Replaced predecessor block@5 with block@4 in block@25
debug: Replaced predecessor block@5 with block@4 in block@26
debug: Replaced predecessor block@5 with block@4 in block@27
debug: Replaced predecessor block@5 with block@4 in block@28
debug: Replaced predecessor block@5 with block@4 in block@29
debug: Replaced predecessor block@5 with block@4 in block@30
debug: Replaced predecessor block@5 with block@4 in block@31
debug: Replaced predecessor block@5 with block@4 in block@32
debug: Replaced predecessor block@5 with block@4 in block@33
debug: Replaced predecessor block@5 with block@4 in block@34
debug: Replaced predecessor block@5 with block@4 in block@35
debug: Replaced predecessor block@5 with block@4 in block@36
debug: Replaced predecessor block@5 with block@4 in block@37
debug: Replaced predecessor block@5 with block@4 in block@38
debug: Replaced predecessor block@5 with block@4 in block@39
debug: Replaced predecessor block@5 with block@4 in block@40
debug: Replaced predecessor block@5 with block@4 in block@43
debug: Merged linear block@5 into block@4
debug: Merged linear block@149 into block@6
debug: Merged linear block@147 into block@7
debug: Merged linear block@145 into block@8
debug: Merged linear block@143 into block@9
debug: Replaced predecessor block@138 with block@10 in block@139
debug: Merged linear block@138 into block@10
debug: Merged linear block@136 into block@11
debug: Merged linear block@134 into block@12
debug: Merged linear block@132 into block@13
debug: Merged linear block@130 into block@14
debug: Merged linear block@128 into block@15
debug: Merged linear block@126 into block@16
debug: Replaced predecessor block@121 with block@17 in block@122
debug: Merged linear block@121 into block@17
debug: Merged linear block@119 into block@18
debug: Replaced predecessor block@108 with block@19 in block@109
debug: Merged linear block@108 into block@19
debug: Merged linear block@106 into block@20
debug: Merged linear block@104 into block@21
debug: Replaced predecessor block@96 with block@22 in block@97
debug: Merged linear block@96 into block@22
debug: Merged linear block@94 into block@23
debug: Merged linear block@92 into block@24
debug: Replaced predecessor block@83 with block@25 in block@84
debug: Merged linear block@83 into block@25
debug: Merged linear block@81 into block@26
debug: Merged linear block@79 into block@27
debug: Replaced predecessor block@74 with block@28 in block@75
debug: Merged linear block@74 into block@28
debug: Merged linear block@72 into block@29
debug: Replaced predecessor block@67 with block@30 in block@68
debug: Merged linear block@67 into block@30
debug: Merged linear block@65 into block@31
debug: Merged linear block@63 into block@32
debug: Merged linear block@61 into block@33
debug: Merged linear block@59 into block@34
debug: Merged linear block@57 into block@35
debug: Merged linear block@55 into block@36
debug: Merged linear block@53 into block@37
debug: Merged linear block@51 into block@38
debug: Merged linear block@49 into block@39
debug: Merged linear block@47 into block@40
debug: Replaced predecessor block@45 with block@44 in block@46
debug: Merged linear block@45 into block@44
debug: Merged linear block@46 into block@44
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@1
debug: Removing jump block block@150
debug: Removing jump block block@148
debug: Removing jump block block@146
debug: Removing jump block block@144
debug: Removing jump block block@142
debug: Removing jump block block@137
debug: Removing jump block block@135
debug: Removing jump block block@133
debug: Removing jump block block@131
debug: Removing jump block block@129
debug: Removing jump block block@127
debug: Removing jump block block@125
debug: Removing jump block block@120
debug: Removing jump block block@118
debug: Removing jump block block@107
debug: Removing jump block block@105
debug: Removing jump block block@103
debug: Removing jump block block@95
debug: Removing jump block block@93
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Removing jump block block@91
debug: Removing jump block block@82
debug: Removing jump block block@80
debug: Removing jump block block@78
debug: Removing jump block block@73
debug: Removing jump block block@71
debug: Removing jump block block@66
debug: Removing jump block block@64
debug: Removing jump block block@62
debug: Removing jump block block@60
debug: Removing jump block block@58
debug: Removing jump block block@56
debug: Removing jump block block@54
debug: Removing jump block block@52
debug: Removing jump block block@50
debug: Removing jump block block@48
debug: branching to block@1 will be replaced with block@2
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: branching to block@150 will be replaced with block@43
debug: branching to block@148 will be replaced with block@43
debug: branching to block@146 will be replaced with block@43
debug: branching to block@144 will be replaced with block@43
debug: branching to block@142 will be replaced with block@43
debug: branching to block@137 will be replaced with block@43
debug: branching to block@135 will be replaced with block@43
debug: branching to block@133 will be replaced with block@43
debug: branching to block@131 will be replaced with block@43
debug: branching to block@129 will be replaced with block@43
debug: branching to block@127 will be replaced with block@43
debug: branching to block@125 will be replaced with block@43
debug: branching to block@120 will be replaced with block@43
debug: branching to block@118 will be replaced with block@43
debug: branching to block@107 will be replaced with block@43
debug: branching to block@105 will be replaced with block@43
debug: branching to block@103 will be replaced with block@43
debug: branching to block@95 will be replaced with block@43
debug: branching to block@93 will be replaced with block@43
debug: branching to block@91 will be replaced with block@43
debug: branching to block@82 will be replaced with block@43
debug: branching to block@80 will be replaced with block@43
debug: branching to block@78 will be replaced with block@43
debug: branching to block@73 will be replaced with block@43
debug: branching to block@71 will be replaced with block@43
debug: branching to block@66 will be replaced with block@43
debug: branching to block@64 will be replaced with block@43
debug: branching to block@62 will be replaced with block@43
debug: branching to block@60 will be replaced with block@43
debug: branching to block@58 will be replaced with block@43
debug: branching to block@56 will be replaced with block@43
debug: branching to block@54 will be replaced with block@43
debug: branching to block@52 will be replaced with block@43
debug: branching to block@50 will be replaced with block@43
debug: branching to block@48 will be replaced with block@43
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%mul%1#1: uint64 = (* 2u index#3) with copy of existing registers [Register(source_location=box_storage/contract.py:271:8-64, ir_type=uint64, name='box%mul%0', version=1)]
debug: Replacing redundant declaration let box%mul%2#1: uint64 = (* 2u index#3) with copy of existing registers [Register(source_location=box_storage/contract.py:271:8-64, ir_type=uint64, name='box%mul%0', version=1)]
debug: Replacing redundant declaration let box%element_offset%1#2: uint64 = (* index#3 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:271:8-64, ir_type=uint64, name='box%element_offset%0', version=6)]
debug: Replacing redundant declaration let box%mul%1#0: uint64 = (* 2u i1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:281:18-56, ir_type=uint64, name='box%mul%0', version=0)]
debug: Found equivalence set: box%element_offset%0#9, box%offset%0#13
debug: selected box%element_offset%0#9 from equivalence set
debug: Found equivalence set: box%element_offset%0#8, box%offset%0#12
debug: selected box%element_offset%0#8 from equivalence set
debug: Found equivalence set: box%btoi%0#5, box%offset%2#5
debug: selected box%btoi%0#5 from equivalence set
debug: Found equivalence set: box%btoi%1#3, box%offset%10#2
debug: selected box%btoi%1#3 from equivalence set
debug: Found equivalence set: box%btoi%0#4, box%offset%1#6
debug: selected box%btoi%0#4 from equivalence set
debug: Found equivalence set: box%mul%0#1, box%mul%1#1, box%mul%2#1
debug: selected box%mul%0#1 from equivalence set
debug: Found equivalence set: box%element_offset%0#6, box%element_offset%1#2
debug: selected box%element_offset%0#6 from equivalence set
debug: Found equivalence set: box%mul%0#0, box%mul%1#0
debug: selected box%mul%0#0 from equivalence set
debug: Found equivalence set: box%btoi%1#0, box%offset%7#0
debug: selected box%btoi%1#0 from equivalence set
debug: Found equivalence set: box%btoi%2#0, box%offset%8#0
debug: selected box%btoi%2#0 from equivalence set
debug: Found equivalence set: box%element_byte_offset%0#1, box%byte_containing_bit_offset%0#1
debug: selected box%element_byte_offset%0#1 from equivalence set
debug: Found equivalence set: box%element_byte_offset%0#0, box%byte_containing_bit_offset%0#0
debug: selected box%element_byte_offset%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#2: uint64 = (* index#0 2u) with copy of existing registers [Register(source_location=INTERNAL:308:59-78, ir_type=uint64, name='tmp%1', version=1)]
debug: Found equivalence set: tmp%1#1, tmp%1#2
debug: selected tmp%1#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable head#0
debug: Removing unused variable dyn_arr_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%2#1
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, tmp%3#1
debug: selected box%array_length%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable tmp%1#1
debug: Removing unused variable b_value#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, encoded_value%0#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u box%element_offset%0#0) to box%element_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:147:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, array_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Simplified (+ 0u box%element_offset%0#0) to box%element_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@8 from goto_nth [block@9, block@10][0u] else goto block@11 to goto block@9
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@9 with block@8 in block@11
debug: Merged linear block@9 into block@8
debug: Replaced predecessor block@13 with block@12 in block@2
debug: Merged linear block@13 into block@12
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@10
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable large#1
debug: Removing unused variable large#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:175:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#2, tmp%0#1
debug: selected tmp%0#2 from equivalence set
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable storage_value%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:221:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
box_storage/contract.py:208:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
box_storage/contract.py:212:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, arr_len#0, index#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#1, arr_size#1
debug: selected arr_size#1 from equivalence set
debug: Found equivalence set: tmp%3#4, tmp%4#1
debug: selected tmp%3#4 from equivalence set
debug: Found equivalence set: tmp%5#1, tmp%5#0
debug: selected tmp%5#1 from equivalence set
debug: Found equivalence set: arr_len#1, arr_size#0
debug: selected arr_len#1 from equivalence set
debug: Found equivalence set: tmp%3#2, tmp%10#0
debug: selected tmp%3#2 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%13#0
debug: selected box%array_length%2#0 from equivalence set
debug: Found equivalence set: box%array_length%3#0, tmp%15#0
debug: selected box%array_length%3#0 from equivalence set
debug: Found equivalence set: box%array_length%4#0, tmp%17#0
debug: selected box%array_length%4#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable tuple_item%1#0
debug: Removing unused variable tuple_item%2#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable arr2_index#0
debug: Removing unused variable updated_tuple%2#0
debug: Removing unused variable tuple_item%3#0
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Removing unused variable storage_value%6#0
debug: Removing unused variable storage_value%7#0
debug: Removing unused variable storage_value%8#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%0#0) to box%btoi%0#0
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 0u) to 20u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#3 24u)
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%1#0) to box%btoi%1#0
debug: Simplified (+ 0u 20u) to 20u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@8 with block@0 in block@9
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@9 with block@0 in block@10
debug: Merged linear block@9 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@2
debug: Merged linear block@11 into block@0
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Merged linear block@6 into block@5
debug: Merged linear block@7 into block@5
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:239:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
box_storage/contract.py:242:17 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
box_storage/contract.py:247:16 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%0#1
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: arr_len#0, arr_size#0, index#1, arr_size#1
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%3#2, tmp%3#1
debug: selected tmp%3#2 from equivalence set
debug: Found equivalence set: tmp%5#1, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#5, size#0
debug: selected size#0 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%10#0
debug: selected box%array_length%2#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tuple_item%0#0
debug: Removing unused variable tuple_item%1#0
debug: Removing unused variable arr2_index#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable tuple_item%2#0
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%0#0) to box%btoi%0#0
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#3 24u)
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 0u) to 20u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u 20u) to 20u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#4: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:492:43-66, ir_type=uint64, name='tmp%3', version=3)]
debug: Replacing redundant declaration let tmp%3#6: uint64 = (* arr_len#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:492:43-66, ir_type=uint64, name='tmp%3', version=3)]
debug: Found equivalence set: box%btoi%0#0, box%offset%1#0
debug: selected box%btoi%0#0 from equivalence set
debug: Found equivalence set: tmp%3#3, tmp%3#4, tmp%3#6
debug: selected tmp%3#3 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let index#0: uint64 = (+ tmp%3#3 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:498:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Replacing redundant declaration let head_and_dyn_arr#1: uint64 = (+ tmp%3#3 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:498:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Found equivalence set: head_and_dyn_arr#0, index#0, head_and_dyn_arr#1
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable total_length%0#0
debug: Removing unused variable num_bytes%1#0
debug: Removing unused variable add%1#0
debug: Removing unused variable total_length%1#0
debug: Removing unused variable total_length%2#0
debug: Removing unused variable num_bytes%4#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%4#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, encoded_value%0#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable updated_tuple%2#0
debug: Removing unused variable updated_tuple%3#0
debug: Removing unused variable updated_tuple%4#0
debug: Removing unused variable updated_tuple%5#0
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 0u) to 4098u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 12u) to 4110u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 18u) to 4136u
debug: Simplified (+ 4136u 2u) to 4138u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 0u) to 4118u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 10u) to 4128u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 10u) to 4108u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%mul%1#0: uint64 = (* 2u index#0) with copy of existing registers [Register(source_location=box_storage/contract.py:271:8-64, ir_type=uint64, name='box%mul%0', version=0)]
debug: Replacing redundant declaration let box%mul%2#0: uint64 = (* 2u index#0) with copy of existing registers [Register(source_location=box_storage/contract.py:271:8-64, ir_type=uint64, name='box%mul%0', version=0)]
debug: Replacing redundant declaration let box%element_offset%1#0: uint64 = (* index#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:271:8-64, ir_type=uint64, name='box%element_offset%0', version=0)]
debug: Found equivalence set: box%mul%0#0, box%mul%1#0, box%mul%2#0
debug: selected box%mul%0#0 from equivalence set
debug: Found equivalence set: box%element_offset%0#0, box%element_offset%1#0
debug: selected box%element_offset%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%1#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, tuple_item%3#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%5#0, array_item%1#0
debug: selected box%box_extract%5#0 from equivalence set
debug: Found equivalence set: box%box_extract%6#0, tuple_item%9#0
debug: selected box%box_extract%6#0 from equivalence set
debug: Found equivalence set: box%box_extract%7#0, tuple_item%12#0
debug: selected box%box_extract%7#0 from equivalence set
debug: Found equivalence set: box%box_extract%14#0, array_item%4#0
debug: selected box%box_extract%14#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tuple_item%0#0
debug: Removing unused variable tuple_item%2#0
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable tuple_item%6#0
debug: Removing unused variable array_item%0#0
debug: Removing unused variable tuple_item%7#0
debug: Removing unused variable tuple_item%8#0
debug: Removing unused variable tuple_item%10#0
debug: Removing unused variable tuple_item%11#0
debug: Removing unused variable tuple_item%13#0
debug: Removing unused variable tuple_item%14#0
debug: Removing unused variable array_item%2#0
debug: Removing unused variable tuple_item%15#0
debug: Removing unused variable array_item%3#0
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 0u) to 4098u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 12u) to 4110u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 18u) to 4136u
debug: Simplified (+ 4136u 2u) to 4138u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 0u) to 4118u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 20u) to 4118u
debug: Simplified (+ 4118u 10u) to 4128u
debug: Simplified (+ 0u 4098u) to 4098u
debug: Simplified (+ 4098u 10u) to 4108u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%mul%1#0: uint64 = (* 2u i1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:281:18-56, ir_type=uint64, name='box%mul%0', version=0)]
debug: Found equivalence set: box%mul%0#0, box%mul%1#0
debug: selected box%mul%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, tuple_item%1#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%2#0, tuple_item%2#0
debug: selected box%box_extract%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%3#0, tuple_item%3#0
debug: selected box%box_extract%3#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, array_length%0#0
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%6#0, array_item%0#0
debug: selected box%box_extract%6#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, array_length%1#0
debug: selected box%array_length%1#0 from equivalence set
debug: Found equivalence set: box%box_extract%10#0, array_item%1#0
debug: selected box%box_extract%10#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable tuple_item%4#0
debug: Removing unused variable tuple_item%5#0
debug: Removing unused variable storage_value%4#0
debug: Removing unused variable storage_value%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 10u) to 10u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%1#0) to box%btoi%1#0
debug: Simplified (+ 0u 18u) to 18u
debug: Simplified (+ 0u box%btoi%2#0) to box%btoi%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u box%element_byte_offset%0#0) to box%element_byte_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u box%element_byte_offset%0#0) to box%element_byte_offset%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@6 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, tmp%6#0
debug: selected box%array_length%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable storage_value%3#0
debug: Removing unused variable storage_value%1#0
debug: Removing unused variable storage_value%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ 0u 0u) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#0, tuple_item%0#0
debug: selected box%box_extract%0#0 from equivalence set
debug: Found equivalence set: box%array_length%0#0, tmp%5#0
debug: selected box%array_length%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%2#0
debug: Removing unused variable storage_value%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, array_length%0#0
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%1#0, array_item%0#0
debug: selected box%box_extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 2u) to 2u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, encoded_value%0#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 2u) to 2u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, encoded_value%0#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#0
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 20u) to 20u
debug: Simplified (+ 20u 2u) to 22u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:426:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: value%0#1, tmp%19#0
debug: selected value%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable ref#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:481:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:454:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, tmp%8#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable _%0#0
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%0#0: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: length%0#0, mul%0#0
debug: selected length%0#0 from equivalence set
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_nested_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_write[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.nested_read[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_bool[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_bools[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists[routing]
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:454:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:426:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:239:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:242:17 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:247:16 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:221:23 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:208:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr2_struct_byte_index in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:212:13 debug: inlining call to examples.box_storage.contract.get_dynamic_arr_struct_byte_index in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:175:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in algopy.arc4.ARC4Contract.approval_program
box_storage/contract.py:147:9 debug: inlining call to _puya_lib.util.ensure_budget in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#39, tmp%0#32
debug: selected tmp%0#39 from equivalence set
debug: Found equivalence set: tmp%3#21, arr_size#3
debug: selected arr_size#3 from equivalence set
debug: Found equivalence set: arr2_len#1, arr2_index#3
debug: selected arr2_len#1 from equivalence set
debug: Found equivalence set: tmp%3#31, tmp%4#17
debug: selected tmp%3#31 from equivalence set
debug: Found equivalence set: arr_len#5, index#7
debug: selected arr_len#5 from equivalence set
debug: Found equivalence set: tmp%5#13, tmp%5#8
debug: selected tmp%5#13 from equivalence set
debug: Found equivalence set: arr_len#6, arr_size#2
debug: selected arr_len#6 from equivalence set
debug: Found equivalence set: tmp%3#29, tmp%10#4
debug: selected tmp%3#29 from equivalence set
debug: Found equivalence set: arr_len#4, arr_size#0, index#6, arr_size#1
debug: selected arr_len#4 from equivalence set
debug: Found equivalence set: tmp%3#24, tmp%3#19
debug: selected tmp%3#24 from equivalence set
debug: Found equivalence set: tmp%5#12, index#4
debug: selected index#4 from equivalence set
debug: Found equivalence set: arr2_len#0, arr2_index#1
debug: selected arr2_len#0 from equivalence set
debug: Found equivalence set: tmp%3#27, size#0
debug: selected size#0 from equivalence set
debug: Found equivalence set: value%0#3, tmp%19#0
debug: selected value%0#3 from equivalence set
debug: Found equivalence set: storage_value%0#16, tmp%8#1
debug: selected storage_value%0#16 from equivalence set
debug: Copy propagation made 17 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable box%offset%0#14
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Removing unused variable box%offset%0#11
debug: Removing unused variable box%offset%1#8
debug: Removing unused variable box#0
debug: Removing unused variable box%offset%0#10
debug: Removing unused variable box%offset%0#9
debug: Removing unused variable box%offset%1#7
debug: Removing unused variable box%add%0#7
debug: Removing unused variable box%offset%3#5
debug: Removing unused variable box%offset%4#4
debug: Removing unused variable box%offset%6#3
debug: Removing unused variable box%offset%7#3
debug: Removing unused variable arr2_index#2
debug: Removing unused variable box%offset%8#3
debug: Removing unused variable box%offset%9#3
debug: Removing unused variable box%add%1#3
debug: Removing unused variable box%offset%11#2
debug: Removing unused variable box%offset%0#8
debug: Removing unused variable box%add%0#6
debug: Removing unused variable arr2_index#0
debug: Removing unused variable box%offset%2#4
debug: Removing unused variable box%offset%3#4
debug: Removing unused variable box%offset%4#3
debug: Removing unused variable box%offset%5#3
debug: Removing unused variable box%offset%0#7
debug: Removing unused variable box%offset%1#5
debug: Removing unused variable box%offset%2#3
debug: Removing unused variable box%offset%3#3
debug: Removing unused variable box%offset%4#2
debug: Removing unused variable box%offset%5#2
debug: Removing unused variable box%offset%6#2
debug: Removing unused variable box%add%0#5
debug: Removing unused variable box%offset%9#2
debug: Removing unused variable box%offset%10#1
debug: Removing unused variable box%offset%11#1
debug: Removing unused variable box%offset%12#1
debug: Removing unused variable box%offset%13#1
debug: Removing unused variable box%offset%14#1
debug: Removing unused variable box%offset%15#1
debug: Removing unused variable box%add%3#2
debug: Removing unused variable box%offset%0#6
debug: Removing unused variable box%offset%1#4
debug: Removing unused variable box%offset%2#2
debug: Removing unused variable box%offset%3#2
debug: Removing unused variable box%offset%4#1
debug: Removing unused variable box%offset%5#1
debug: Removing unused variable box%offset%6#1
debug: Removing unused variable box%add%0#4
debug: Removing unused variable box%offset%9#1
debug: Removing unused variable box%offset%10#0
debug: Removing unused variable box%offset%11#0
debug: Removing unused variable box%offset%12#0
debug: Removing unused variable box%offset%13#0
debug: Removing unused variable box%offset%14#0
debug: Removing unused variable box%offset%15#0
debug: Removing unused variable box%add%3#1
debug: Removing unused variable box%offset%0#5
debug: Removing unused variable box%offset%1#3
debug: Removing unused variable box%offset%2#1
debug: Removing unused variable box%offset%3#1
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box%offset%5#0
debug: Removing unused variable box%add%0#3
debug: Removing unused variable box%add%1#0
debug: Removing unused variable box%add%2#0
debug: Removing unused variable box%offset%0#4
debug: Removing unused variable box%offset%1#2
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%0#3
debug: Removing unused variable box%offset%1#1
debug: Removing unused variable box%add%0#2
debug: Removing unused variable box%add%0#1
debug: Removing unused variable box%offset%0#0
debug: Removing unused variable box%add%0#0
debug: Removing unused variable ref#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#4
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#2 2u) to (+ tmp%3#30 24u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (+ 2u 0u) to 2u
debug: Simplified (+ head_and_dyn_arr#0 2u) to (+ tmp%3#25 24u)
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#13) to encoded_value%0#13
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@162 from goto_nth [block@163, block@164][0u] else goto block@165 to goto block@163
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@2 with block@0 in block@44
debug: Replaced predecessor block@2 with block@0 in block@4
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@160 with block@10 in block@161
debug: Merged linear block@160 into block@10
debug: Replaced predecessor block@163 with block@162 in block@165
debug: Merged linear block@163 into block@162
debug: Replaced predecessor block@167 with block@166 in block@139
debug: Merged linear block@167 into block@166
debug: Replaced predecessor block@158 with block@13 in block@159
debug: Merged linear block@158 into block@13
debug: Merged linear block@159 into block@13
debug: Replaced predecessor block@154 with block@17 in block@155
debug: Merged linear block@154 into block@17
debug: Replaced predecessor block@155 with block@17 in block@156
debug: Merged linear block@155 into block@17
debug: Replaced predecessor block@156 with block@17 in block@157
debug: Merged linear block@156 into block@17
debug: Replaced predecessor block@157 with block@17 in block@122
debug: Merged linear block@157 into block@17
debug: Replaced predecessor block@152 with block@124 in block@153
debug: Merged linear block@152 into block@124
debug: Merged linear block@153 into block@124
debug: Replaced predecessor block@146 with block@18 in block@147
debug: Merged linear block@146 into block@18
debug: Replaced predecessor block@147 with block@18 in block@148
debug: Merged linear block@147 into block@18
debug: Replaced predecessor block@148 with block@18 in block@149
debug: Merged linear block@148 into block@18
debug: Replaced predecessor block@149 with block@18 in block@150
debug: Merged linear block@149 into block@18
debug: Replaced predecessor block@150 with block@18 in block@151
debug: Merged linear block@150 into block@18
debug: Merged linear block@151 into block@18
debug: Replaced predecessor block@144 with block@35 in block@145
debug: Merged linear block@144 into block@35
debug: Merged linear block@145 into block@35
debug: Replaced predecessor block@142 with block@36 in block@143
debug: Merged linear block@142 into block@36
debug: Merged linear block@143 into block@36
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@164
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#26: uint64 = (* arr_len#4 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:492:43-66, ir_type=uint64, name='tmp%3', version=25)]
debug: Replacing redundant declaration let tmp%3#28: uint64 = (* arr_len#4 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:492:43-66, ir_type=uint64, name='tmp%3', version=25)]
debug: Replacing redundant declaration let encoded_value%0#13: bytes[8] = (itob 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:445:32-37, ir_type=bytes[8], name='encoded_value%5', version=0)]
debug: Found equivalence set: tmp%3#25, tmp%3#26, tmp%3#28
debug: selected tmp%3#25 from equivalence set
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#13, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let index#4: uint64 = (+ tmp%3#25 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:498:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Replacing redundant declaration let head_and_dyn_arr#1: uint64 = (+ tmp%3#25 22u) with copy of existing registers [Register(source_location=box_storage/contract.py:498:4-20, ir_type=uint64, name='head_and_dyn_arr', version=0)]
debug: Found equivalence set: head_and_dyn_arr#0, index#4, head_and_dyn_arr#1
debug: selected head_and_dyn_arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:481:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr_struct_byte_index
debug: removing unused subroutine examples.box_storage.contract.get_dynamic_arr2_struct_byte_index
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget_with_buffer#0
debug: Removing unused variable head_and_dyn_arr#2
debug: Removing unused variable tmp%1#25
debug: Removing unused variable dyn_arr2_index#2
debug: Removing unused variable tmp%1#23
debug: Removing unused variable dyn_arr2_index#0
debug: Removing unused variable materialized_values%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@165 with block@162 in block@161
debug: Merged linear block@165 into block@162
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@10
debug: Not removing empty block block@88 because it's used by phi nodes
debug: branching to block@10 will be replaced with block@161
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.box_storage.contract.BoxContract
debug: lowering array IR nodes in clear program of examples.box_storage.contract.BoxContract
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%array_length%0#0, length%0#2
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, length%1#1
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%1#1
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%3#7
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%2#0, storage_value%0#15
debug: selected aggregate%box_get%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0, tmp%1#22
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#21
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%4#20
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0, encoded_value%0#10
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%4#0, storage_value%0#17
debug: selected aggregate%box_get%4#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%6#0, storage_value%0#14
debug: selected aggregate%box_get%6#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%8#0, storage_value%1#8
debug: selected aggregate%box_get%8#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%3#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+uint8[])%1#0
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%as_Encoded(uint64)%4#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]),uint64)%0#0, tmp%4#19
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0, tmp%4#18
debug: selected aggregate%head%4#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#2
debug: selected aggregate%len_u16%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%5#0, aggregate%as_Encoded(uint64)%5#0
debug: selected aggregate%val_as_bytes%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, aggregate%as_Encoded(uint64)%6#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded(uint64,(len+uint64[]),uint64,(len+uint64[]))%0#0, tmp%3#22
debug: selected aggregate%concat%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%as_Encoded(uint64)%7#0, encoded_value%0#9
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%9#3
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%1#0, aggregate%as_Encoded(uint16)%1#0, tmp%12#2
debug: selected aggregate%uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%as_Encoded(uint64)%8#0, tmp%3#20
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%2#0, aggregate%as_Encoded(uint16)%2#0, tmp%5#7
debug: selected aggregate%uint16%2#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%3#0, aggregate%as_Encoded(uint16)%3#0, tmp%6#5
debug: selected aggregate%uint16%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%13#0, aggregate%as_Encoded(uint64)%9#0, tmp%3#18
debug: selected aggregate%val_as_bytes%13#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, tmp%1#17
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%2#0, tmp%2#19
debug: selected aggregate%substring3%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%2#0, length%0#1
debug: selected aggregate%array_length%2#0 from equivalence set
debug: Found equivalence set: aggregate%item%0#0, tmp%3#16
debug: selected aggregate%item%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%3#0, length%1#0
debug: selected aggregate%array_length%3#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%5#0, tmp%4#13
debug: selected aggregate%substring3%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%4#0, length%2#0
debug: selected aggregate%array_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%7#0, tmp%5#5
debug: selected aggregate%substring3%7#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%10#0, tmp%6#4
debug: selected aggregate%substring3%10#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%7#0, length%3#0
debug: selected aggregate%array_length%7#0 from equivalence set
debug: Found equivalence set: aggregate%item%1#0, tmp%7#5
debug: selected aggregate%item%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%9#0, length%4#0
debug: selected aggregate%array_length%9#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, tuple_item%0#4
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%4#0, aggregate%as_Encoded(uint16)%4#0, tmp%5#6
debug: selected aggregate%uint16%4#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%15#0, aggregate%as_Encoded(uint64)%10#0, encoded_value%1#0
debug: selected aggregate%val_as_bytes%15#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%16#0, aggregate%as_Encoded(uint64)%11#0, encoded_value%2#0
debug: selected aggregate%val_as_bytes%16#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%17#0, aggregate%as_Encoded(uint64)%12#0, encoded_value%3#0
debug: selected aggregate%val_as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%18#0, aggregate%as_Encoded(uint64)%13#0, encoded_value%4#0
debug: selected aggregate%val_as_bytes%18#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%19#0, aggregate%as_Encoded(uint64)%14#0, encoded_value%5#1
debug: selected aggregate%val_as_bytes%19#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%20#0, aggregate%as_Encoded(uint64)%15#0, tmp%7#4
debug: selected aggregate%val_as_bytes%20#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%21#0, aggregate%as_Encoded(uint64)%16#0, tmp%1#11
debug: selected aggregate%val_as_bytes%21#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%0#0, value#7, aggregate%as_Encoded(bool1)%0#0, encoded_value%0#7
debug: selected value#7 from equivalence set
debug: Found equivalence set: aggregate%updated_target%0#0, box%tmp%0#0
debug: selected aggregate%updated_target%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%10#0, storage_value%0#7
debug: selected aggregate%box_get%10#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%2#0, array_item%0#2, value#6
debug: selected value#6 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%22#0, aggregate%as_Encoded(uint64)%17#0, tmp%3#11
debug: selected aggregate%val_as_bytes%22#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%1#0, aggregate%as_Encoded(len+uint64[])%1#0, encoded_array%0#1
debug: selected aggregate%len_u16%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%23#0, aggregate%as_Encoded(uint64)%18#0, encoded_value%0#6
debug: selected aggregate%val_as_bytes%23#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%5#0, aggregate%as_Encoded(uint16)%5#0, tmp%5#4
debug: selected aggregate%uint16%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%25#0, aggregate%as_Encoded(uint64)%19#0, tmp%3#9
debug: selected aggregate%val_as_bytes%25#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%6#0, aggregate%as_Encoded(uint16)%6#0, tmp%2#10
debug: selected aggregate%uint16%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%27#0, aggregate%as_Encoded(uint64)%20#0, tmp%3#7
debug: selected aggregate%val_as_bytes%27#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%28#0, aggregate%as_Encoded(uint64)%21#0, tmp%1#6
debug: selected aggregate%val_as_bytes%28#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%9#2
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%12#0, aggregate%as_Encoded(uint8[4])%0#0, encoded_array%0#0
debug: selected aggregate%head%12#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%12#0, storage_value%0#1
debug: selected aggregate%box_get%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%14#0, storage_value%1#0
debug: selected aggregate%box_get%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#0
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%16#0, storage_value%2#0
debug: selected aggregate%box_get%16#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#0
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%18#0, storage_value%3#0
debug: selected aggregate%box_get%18#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%3#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%20#0, storage_value%0#16
debug: selected aggregate%box_get%20#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%10#0, length%0#0
debug: selected aggregate%array_length%10#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%22#0, storage_value%0#0
debug: selected aggregate%box_get%22#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#0, aggregate%as_Encoded(len+utf8[])%2#0, tmp%3#2
debug: selected aggregate%encoded_value%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%0#0, tmp%3#1
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Copy propagation made 88 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#3
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%get_bit%1#0
debug: Removing unused variable array_length%0#1
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) tmp%0#38) to ((extract 2 1) b#1)
debug: Simplified (len 0x3432) to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Simplified (len "42") to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x0002 "42") to 0x00023432
debug: Simplified (concat 0x aggregate%val_as_bytes%3#0) to aggregate%val_as_bytes%3#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0014
debug: Simplified (concat 0x aggregate%set_bit%2#0) to aggregate%set_bit%2#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0000
debug: Simplified (concat 0x aggregate%val_as_bytes%5#0) to aggregate%val_as_bytes%5#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0014
debug: Simplified (len 0x0000) to 2u
debug: Simplified (+ 20u 2u) to 22u
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x0016
debug: Simplified (concat aggregate%head%8#0 0x0000) to (concat aggregate%head%7#0 0x00160000)
debug: Simplified (concat aggregate%concat%2#0 0x0000) to (concat aggregate%head%7#0 0x001600000000)
debug: Simplified (substring3 aggregate%substring3%4#0 2u aggregate%total_length%0#0) to ((extract 2 0) aggregate%substring3%4#0)
debug: Simplified (substring3 aggregate%substring3%6#0 2u aggregate%total_length%1#0) to ((extract 2 0) aggregate%substring3%6#0)
debug: Simplified (substring3 aggregate%substring3%8#0 2u aggregate%total_length%2#0) to ((extract 2 0) aggregate%substring3%8#0)
debug: Simplified (substring3 aggregate%substring3%11#0 2u aggregate%total_length%3#0) to ((extract 2 0) aggregate%substring3%11#0)
debug: Simplified (substring3 aggregate%substring3%13#0 2u aggregate%total_length%4#0) to ((extract 2 0) aggregate%substring3%13#0)
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 struct#0 0u)
debug: Simplified (bitlen aggregate%val_as_bytes%14#0) to 13u
debug: Simplified (<= 13u 16u) to 1u
debug: Simplified (extract3 aggregate%val_as_bytes%14#0 6u 2u) to 0x1002
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0000
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x01) to 0x0001
debug: Simplified (concat 0x0001 0x02) to 0x000102
debug: Simplified (concat 0x000102 0x03) to 0x00010203
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: replacing box_get with box_len because aggregate%box_get%2#0 is unused
debug: Simplified (extract3 aggregate%val_as_bytes%8#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%8#0)
debug: Simplified (extract3 aggregate%val_as_bytes%9#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%9#0)
debug: Simplified (extract3 aggregate%val_as_bytes%11#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%11#0)
debug: Simplified (extract3 aggregate%val_as_bytes%12#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%12#0)
debug: Simplified (extract3 struct#0 0u 8u) to ((extract 0 8) struct#0)
debug: replacing box_get with box_len because aggregate%box_get%10#0 is unused
debug: Simplified (extract3 aggregate%val_as_bytes%24#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%24#0)
debug: Simplified (extract3 aggregate%val_as_bytes%26#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%26#0)
debug: Simplified (extract3 aggregate%box_get%12#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%box_get%12#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%14#0 1u 1u) // on error: index access is out of bounds to ((extract 1 1) aggregate%box_get%14#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%16#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%box_get%16#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%18#0 3u 1u) // on error: index access is out of bounds to ((extract 3 1) aggregate%box_get%18#0) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:159:38-62, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%0#0: uint64 = (extract_uint16 struct#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%2#0: uint64 = (extract_uint16 struct#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%3#0: uint64 = (extract_uint16 struct#0 10u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%5#0: uint64 = (extract_uint16 struct#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%6#0: uint64 = (extract_uint16 struct#0 10u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset_offset%0#0: uint64 = (* index%0#1 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='head_offset_bytes%0', version=0)]
debug: Replacing redundant declaration let extract_uint16%2#0: uint64 = (extract_uint16 struct#0 10u) // on error: invalid tuple encoding with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%8#0: uint64 = (extract_uint16 struct#0 10u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%9#0: uint64 = (extract_uint16 struct#0 10u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%len%3#0: uint64 = (len struct#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%len%2', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset_offset%1#0: uint64 = (* index%1#1 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='head_offset_bytes%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%10#0: uint64 = (extract_uint16 struct#0 10u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%len%4#0: uint64 = (len struct#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%len%2', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset_offset%2#0: uint64 = (* index%1#1 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='head_offset_bytes%1', version=0)]
debug: Replacing redundant declaration let aggregate%next_index%1#0: uint64 = (+ index%1#1 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_index%0', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%12#0: uint64 = (extract_uint16 struct#0 10u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%len%6#0: uint64 = (len struct#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%len%2', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset_offset%3#0: uint64 = (* index%1#1 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='head_offset_bytes%1', version=0)]
debug: Replacing redundant declaration let aggregate%next_index%2#0: uint64 = (+ index%1#1 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_index%0', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset_offset%4#0: uint64 = (* index%2#1 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='head_offset_bytes%2', version=0)]
debug: Replacing redundant declaration let index%1#2: uint64 = (+ index%1#1 1u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_index%0', version=0)]
debug: Replacing redundant declaration let len%0#12: uint64 = (len struct#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%len%2', version=0)]
debug: Replacing redundant declaration let aggregate%lt%1#0: bool = (< box%element_bit_offset%0#1 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:305:8-48, ir_type=bool, name='aggregate%lt%0', version=0)]
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%1#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%2#0, aggregate%head%4#0
debug: selected aggregate%set_bit%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%5#0, aggregate%head%5#0
debug: selected aggregate%val_as_bytes%5#0 from equivalence set
debug: Found equivalence set: extract_uint16%0#0, aggregate%extract_uint16%0#0, aggregate%extract_uint16%2#0, aggregate%extract_uint16%5#0
debug: selected extract_uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%extract_uint16%1#0, aggregate%extract_uint16%3#0, aggregate%extract_uint16%6#0, extract_uint16%2#0, aggregate%extract_uint16%8#0, aggregate%extract_uint16%9#0, aggregate%extract_uint16%10#0, aggregate%extract_uint16%12#0
debug: selected aggregate%extract_uint16%1#0 from equivalence set
debug: Found equivalence set: head_offset_bytes%0#0, aggregate%item_offset_offset%0#0
debug: selected head_offset_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%len%2#0, aggregate%len%3#0, aggregate%len%4#0, aggregate%len%6#0, len%0#12
debug: selected aggregate%len%2#0 from equivalence set
debug: Found equivalence set: head_offset_bytes%1#0, aggregate%item_offset_offset%1#0, aggregate%item_offset_offset%2#0, aggregate%item_offset_offset%3#0
debug: selected head_offset_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%next_index%0#0, aggregate%next_index%1#0, aggregate%next_index%2#0, index%1#2
debug: selected aggregate%next_index%0#0 from equivalence set
debug: Found equivalence set: head_offset_bytes%2#0, aggregate%item_offset_offset%4#0
debug: selected head_offset_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%lt%0#0, aggregate%lt%1#0
debug: selected aggregate%lt%0#0 from equivalence set
debug: Copy propagation made 25 modifications
debug: Replacing redundant declaration let aggregate%substring3%1#0: bytes = (substring3 struct#0 extract_uint16%0#0 aggregate%extract_uint16%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%0', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%3#0: bytes = (substring3 struct#0 extract_uint16%0#0 aggregate%extract_uint16%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%0', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%6#0: bytes = (substring3 struct#0 aggregate%extract_uint16%1#0 aggregate%len%2#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%5', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%8#0: bytes = (substring3 struct#0 aggregate%extract_uint16%1#0 aggregate%len%2#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%5', version=0)]
debug: Replacing redundant declaration let aggregate%next_item_offset_offset%1#0: uint64 = (* aggregate%next_index%0#0 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_item_offset_offset%0', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%11#0: bytes = (substring3 struct#0 aggregate%extract_uint16%1#0 aggregate%len%2#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%5', version=0)]
debug: Replacing redundant declaration let aggregate%next_item_offset_offset%2#0: uint64 = (* aggregate%next_index%0#0 2u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_item_offset_offset%0', version=0)]
debug: Removing redundant assert of aggregate%lt%0#0
debug: Found equivalence set: aggregate%substring3%0#0, aggregate%substring3%1#0, aggregate%substring3%3#0
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%5#0, aggregate%substring3%6#0, aggregate%substring3%8#0, aggregate%substring3%11#0
debug: selected aggregate%substring3%5#0 from equivalence set
debug: Found equivalence set: aggregate%next_item_offset_offset%0#0, aggregate%next_item_offset_offset%1#0, aggregate%next_item_offset_offset%2#0
debug: selected aggregate%next_item_offset_offset%0#0 from equivalence set
debug: Copy propagation made 17 modifications
debug: Replacing redundant declaration let aggregate%extract_uint16%4#0: uint64 = (extract_uint16 aggregate%substring3%0#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%7#0: uint64 = (extract_uint16 aggregate%substring3%0#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%1', version=0)]
debug: Replacing redundant declaration let aggregate%len%1#0: uint64 = (len aggregate%substring3%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%len%0', version=0)]
debug: Replacing redundant declaration let aggregate%array_head_and_tail%1#0: bytes = ((extract 2 0) aggregate%substring3%5#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='array_data%1', version=0)]
debug: Replacing redundant declaration let aggregate%array_length%5#0: uint64 = (extract_uint16 aggregate%substring3%5#0 0u) // on error: invalid array length header with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%array_length%4', version=0)]
debug: Replacing redundant declaration let aggregate%total_length%2#0: uint64 = (len aggregate%substring3%5#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%total_length%1', version=0)]
debug: Replacing redundant declaration let aggregate%array_head_and_tail%2#0: bytes = ((extract 2 0) aggregate%substring3%5#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='array_data%1', version=0)]
debug: Replacing redundant declaration let aggregate%array_length%6#0: uint64 = (extract_uint16 aggregate%substring3%5#0 0u) // on error: invalid array length header with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%array_length%4', version=0)]
debug: Replacing redundant declaration let aggregate%total_length%3#0: uint64 = (len aggregate%substring3%5#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%total_length%1', version=0)]
debug: Replacing redundant declaration let aggregate%array_head_and_tail%3#0: bytes = ((extract 2 0) aggregate%substring3%5#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='array_data%1', version=0)]
debug: Replacing redundant declaration let aggregate%array_length%8#0: uint64 = (extract_uint16 aggregate%substring3%5#0 0u) // on error: invalid array length header with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%array_length%4', version=0)]
debug: Found equivalence set: extract_uint16%1#0, aggregate%extract_uint16%4#0, aggregate%extract_uint16%7#0
debug: selected extract_uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%len%0#0, aggregate%len%1#0
debug: selected aggregate%len%0#0 from equivalence set
debug: Found equivalence set: array_data%1#0, aggregate%array_head_and_tail%1#0, aggregate%array_head_and_tail%2#0, aggregate%array_head_and_tail%3#0
debug: selected array_data%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%4#0, aggregate%array_length%5#0, aggregate%array_length%6#0, aggregate%array_length%8#0
debug: selected aggregate%array_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%total_length%1#0, aggregate%total_length%2#0, aggregate%total_length%3#0
debug: selected aggregate%total_length%1#0 from equivalence set
debug: Copy propagation made 18 modifications
debug: Replacing redundant declaration let aggregate%substring3%4#0: bytes = (substring3 aggregate%substring3%0#0 extract_uint16%1#0 aggregate%len%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%2', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset%1#0: uint64 = (extract_uint16 array_data%1#0 head_offset_bytes%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='item_offset%1', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset%2#0: uint64 = (extract_uint16 array_data%1#0 head_offset_bytes%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='item_offset%1', version=0)]
debug: Replacing redundant declaration let aggregate%has_next%1#0: uint64 = (- aggregate%array_length%4#0 aggregate%next_index%0#0) // on error: index access is out of bounds with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%has_next%0', version=0)]
debug: Replacing redundant declaration let aggregate%end_of_array%1#0: uint64 = (len array_data%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%end_of_array%0', version=0)]
debug: Replacing redundant declaration let aggregate%next_item_offset%1#0: uint64 = (extract_uint16 array_data%1#0 aggregate%next_item_offset_offset%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_item_offset%0', version=0)]
debug: Replacing redundant declaration let aggregate%item_offset%3#0: uint64 = (extract_uint16 array_data%1#0 head_offset_bytes%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='item_offset%1', version=0)]
debug: Replacing redundant declaration let aggregate%has_next%2#0: uint64 = (- aggregate%array_length%4#0 aggregate%next_index%0#0) // on error: index access is out of bounds with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%has_next%0', version=0)]
debug: Replacing redundant declaration let aggregate%end_of_array%2#0: uint64 = (len array_data%1#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%end_of_array%0', version=0)]
debug: Replacing redundant declaration let aggregate%next_item_offset%2#0: uint64 = (extract_uint16 array_data%1#0 aggregate%next_item_offset_offset%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%next_item_offset%0', version=0)]
debug: Found equivalence set: aggregate%substring3%2#0, aggregate%substring3%4#0
debug: selected aggregate%substring3%2#0 from equivalence set
debug: Found equivalence set: item_offset%1#0, aggregate%item_offset%1#0, aggregate%item_offset%2#0, aggregate%item_offset%3#0
debug: selected item_offset%1#0 from equivalence set
debug: Found equivalence set: aggregate%has_next%0#0, aggregate%has_next%1#0, aggregate%has_next%2#0
debug: selected aggregate%has_next%0#0 from equivalence set
debug: Found equivalence set: aggregate%end_of_array%0#0, aggregate%end_of_array%1#0, aggregate%end_of_array%2#0
debug: selected aggregate%end_of_array%0#0 from equivalence set
debug: Found equivalence set: aggregate%next_item_offset%0#0, aggregate%next_item_offset%1#0, aggregate%next_item_offset%2#0
debug: selected aggregate%next_item_offset%0#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Replacing redundant declaration let aggregate%array_head_and_tail%0#0: bytes = ((extract 2 0) aggregate%substring3%2#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='array_data%0', version=0)]
debug: Replacing redundant declaration let aggregate%end_offset%1#0: uint64 = (select aggregate%end_of_array%0#0 aggregate%next_item_offset%0#0 aggregate%has_next%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%end_offset%0', version=0)]
debug: Replacing redundant declaration let aggregate%end_offset%2#0: uint64 = (select aggregate%end_of_array%0#0 aggregate%next_item_offset%0#0 aggregate%has_next%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%end_offset%0', version=0)]
debug: Found equivalence set: array_data%0#0, aggregate%array_head_and_tail%0#0
debug: selected array_data%0#0 from equivalence set
debug: Found equivalence set: aggregate%end_offset%0#0, aggregate%end_offset%1#0, aggregate%end_offset%2#0
debug: selected aggregate%end_offset%0#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let aggregate%item_offset%0#0: uint64 = (extract_uint16 array_data%0#0 head_offset_bytes%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='item_offset%0', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%9#0: bytes = (substring3 array_data%1#0 item_offset%1#0 aggregate%end_offset%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%7', version=0)]
debug: Replacing redundant declaration let aggregate%substring3%12#0: bytes = (substring3 array_data%1#0 item_offset%1#0 aggregate%end_offset%0#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%7', version=0)]
debug: Found equivalence set: item_offset%0#0, aggregate%item_offset%0#0
debug: selected item_offset%0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%7#0, aggregate%substring3%9#0, aggregate%substring3%12#0
debug: selected aggregate%substring3%7#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Replacing redundant declaration let aggregate%extract_uint16%11#0: uint64 = (extract_uint16 aggregate%substring3%7#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%3', version=0)]
debug: Replacing redundant declaration let aggregate%extract_uint16%13#0: uint64 = (extract_uint16 aggregate%substring3%7#0 8u) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='extract_uint16%3', version=0)]
debug: Replacing redundant declaration let aggregate%len%7#0: uint64 = (len aggregate%substring3%7#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='aggregate%len%5', version=0)]
debug: Found equivalence set: extract_uint16%3#0, aggregate%extract_uint16%11#0, aggregate%extract_uint16%13#0
debug: selected extract_uint16%3#0 from equivalence set
debug: Found equivalence set: aggregate%len%5#0, aggregate%len%7#0
debug: selected aggregate%len%5#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let aggregate%substring3%13#0: bytes = (substring3 aggregate%substring3%7#0 extract_uint16%3#0 aggregate%len%5#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='aggregate%substring3%10', version=0)]
debug: Found equivalence set: aggregate%substring3%10#0, aggregate%substring3%13#0
debug: selected aggregate%substring3%10#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let aggregate%array_head_and_tail%4#0: bytes = ((extract 2 0) aggregate%substring3%10#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=bytes, name='array_data%2', version=0)]
debug: Found equivalence set: array_data%2#0, aggregate%array_head_and_tail%4#0
debug: selected array_data%2#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let aggregate%item_offset%4#0: uint64 = (extract_uint16 array_data%2#0 head_offset_bytes%2#0) with copy of existing registers [Register(source_location=box_storage/contract.py:252:5-21, ir_type=uint64, name='item_offset%2', version=0)]
debug: Found equivalence set: item_offset%2#0, aggregate%item_offset%4#0
debug: selected item_offset%2#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:110:16 debug: box_key "box_a" is known to exist, removing assert
box_storage/contract.py:113:16 debug: box_key "box_d" is known to exist, removing assert
box_storage/contract.py:380:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:381:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:382:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:383:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:424:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:441:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:486:12 debug: box_key encoded_value%5#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:104:19 debug: replacing box read with cached value for key: (extract,"b",0u,2u)
box_storage/contract.py:117:16 debug: replacing box read with cached value for key: (len,0x424f585f43)
box_storage/contract.py:118:16 debug: replacing box read with cached value for key: (len,0x424f585f43)
box_storage/contract.py:119:16 debug: replacing box read with cached value for key: (len,0x424f585f43)
box_storage/contract.py:123:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:124:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:125:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:126:16 debug: replacing box read with cached value for key: (len,"box_d")
box_storage/contract.py:161:23 debug: replacing box read with cached value for key: (rw,"box_a")
box_storage/contract.py:228:16 debug: replacing box read with cached value for key: (extract,"dynamic_arr_struct",20u,2u)
box_storage/contract.py:292:17 debug: replacing box read with cached value for key: (extract,"dynamic_arr_struct",0u,8u)
box_storage/contract.py:292:51 debug: replacing box read with cached value for key: (extract,"dynamic_arr_struct",10u,8u)
box_storage/contract.py:380:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:381:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:382:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:383:16 debug: replacing box read with cached value for key: (rw,0x64)
box_storage/contract.py:391:16 debug: replacing box read with cached value for key: (len,0x626c6f62)
box_storage/contract.py:393:16 debug: replacing box read with cached value for key: (len,0x626c6f62)
box_storage/contract.py:395:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:420:16 debug: replacing box read with cached value for key: (rw,"blob")
box_storage/contract.py:425:16 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:481:12 debug: replacing box read with cached value for key: (len,"blob")
box_storage/contract.py:442:16 debug: replacing box read with cached value for key: (len,box_0#0)
box_storage/contract.py:442:52 debug: replacing box read with cached value for key: (len,box_0#0)
box_storage/contract.py:443:16 debug: replacing box read with cached value for key: (len,box_0#0)
box_storage/contract.py:486:12 debug: replacing box read with cached value for key: (rw,encoded_value%5#0)
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%box_extract%0#14, box%box_extract%1#8
debug: selected box%box_extract%0#14 from equivalence set
debug: Found equivalence set: value%2#1, tmp%16#3, tmp%23#0, tmp%32#0
debug: selected value%2#1 from equivalence set
debug: Found equivalence set: check%2#1, tmp%17#3, tmp%24#0, tmp%33#0
debug: selected check%2#1 from equivalence set
debug: Found equivalence set: value%3#1, tmp%43#0, tmp%51#0, tmp%61#0, tmp%70#0
debug: selected value%3#1 from equivalence set
debug: Found equivalence set: check%3#1, tmp%44#0, tmp%52#0, tmp%62#0, tmp%71#0
debug: selected check%3#1 from equivalence set
debug: Found equivalence set: maybe_value%0#1, maybe_value%3#0
debug: selected maybe_value%0#1 from equivalence set
debug: Found equivalence set: maybe_exists%0#4, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: box%box_extract%4#3, box%box_extract%7#3
debug: selected box%box_extract%4#3 from equivalence set
debug: Found equivalence set: box%box_extract%0#6, box%box_extract%2#0
debug: selected box%box_extract%0#6 from equivalence set
debug: Found equivalence set: box%box_extract%1#3, box%box_extract%3#0
debug: selected box%box_extract%1#3 from equivalence set
debug: Found equivalence set: _%0#2, _%1#0, _%2#0, _%3#0
debug: selected _%0#2 from equivalence set
debug: Found equivalence set: maybe_exists%0#2, maybe_exists%1#0, maybe_exists%2#1, maybe_exists%3#0
debug: selected maybe_exists%0#2 from equivalence set
debug: Found equivalence set: value#3, maybe_value%1#0
debug: selected value#3 from equivalence set
debug: Found equivalence set: exists#1, maybe_exists%6#0
debug: selected exists#1 from equivalence set
debug: Found equivalence set: _%5#0, value%0#1, value%0#3
debug: selected _%5#0 from equivalence set
debug: Found equivalence set: maybe_exists%7#0, check%0#1, check%0#3
debug: selected maybe_exists%7#0 from equivalence set
debug: Found equivalence set: value%0#0, value%1#0, value%2#0, value%3#0
debug: selected value%0#0 from equivalence set
debug: Found equivalence set: check%0#0, check%1#0, check%2#0, check%3#0
debug: selected check%0#0 from equivalence set
debug: Copy propagation made 31 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%as_bytes%7#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%8#0
debug: Removing unused variable aggregate%concat%2#0
debug: Removing unused variable aggregate%total_length%0#0
debug: Removing unused variable aggregate%total_length%1#0
debug: Removing unused variable aggregate%total_length%4#0
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%val_as_bytes%14#0
debug: Removing unused variable aggregate%bitlen%4#0
debug: Removing unused variable aggregate%no_overflow%4#0
debug: Removing unused variable aggregate%uint16%4#0
debug: Removing unused variable aggregate%as_bytes%8#0
debug: Removing unused variable aggregate%len_u16%1#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%as_bytes%9#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Removing unused variable aggregate%encoded_value%3#0
debug: Removing unused variable aggregate%head%9#0
debug: Removing unused variable aggregate%head%10#0
debug: Removing unused variable aggregate%head%11#0
debug: Removing unused variable aggregate%head%12#0
debug: Removing unused variable aggregate%box_get%12#0
debug: Removing unused variable aggregate%box_get%13#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%box_get%14#0
debug: Removing unused variable aggregate%box_get%15#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%box_get%16#0
debug: Removing unused variable aggregate%box_get%17#0
debug: Removing unused variable aggregate%bytes_offset%2#0
debug: Removing unused variable aggregate%box_get%18#0
debug: Removing unused variable aggregate%box_get%19#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%box_get%20#0
debug: Removing unused variable aggregate%box_get%21#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) 0x00010203) // on error: index access is out of bounds to 0x00
debug: Simplified (b== 0x00 0x00) to 1u
debug: Simplified ((extract 1 1) 0x00010203) // on error: index access is out of bounds to 0x01
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified ((extract 2 1) 0x00010203) // on error: index access is out of bounds to 0x02
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified ((extract 3 1) 0x00010203) // on error: index access is out of bounds to 0x03
debug: Simplified (b== 0x03 0x03) to 1u
debug: Simplified (== value%0#0 value%0#0) to 1u
debug: Simplified (== "hello" "hello") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let box%array_length%1#3: uint64 = (btoi box%box_extract%0#14) with copy of existing registers [Register(source_location=box_storage/contract.py:105:15-38, ir_type=uint64, name='box%array_length%0', version=6)]
debug: Replacing redundant declaration let a#1: uint64 = (btoi maybe_value%0#1) with copy of existing registers [Register(source_location=box_storage/contract.py:158:15-49, ir_type=uint64, name='maybe_value_converted%0', version=0)]
debug: Replacing redundant declaration let box%array_length%4#0: uint64 = (btoi box%box_extract%4#3) with copy of existing registers [Register(source_location=box_storage/contract.py:225:12-52, ir_type=uint64, name='box%array_length%2', version=1)]
debug: Replacing redundant declaration let values%2#0: uint64 = (btoi box%box_extract%0#6) with copy of existing registers [Register(source_location=box_storage/contract.py:290:15-46, ir_type=uint64, name='values%0', version=0)]
debug: Replacing redundant declaration let values%3#0: uint64 = (btoi box%box_extract%1#3) with copy of existing registers [Register(source_location=box_storage/contract.py:291:15-46, ir_type=uint64, name='values%1', version=0)]
debug: Replacing redundant declaration let tmp%1#3: bool = (! maybe_exists%0#2) with copy of existing registers [Register(source_location=box_storage/contract.py:389:15-26, ir_type=bool, name='tmp%0', version=8)]
debug: Replacing redundant declaration let tmp%2#3: bool = (! maybe_exists%0#2) with copy of existing registers [Register(source_location=box_storage/contract.py:389:15-26, ir_type=bool, name='tmp%0', version=8)]
debug: Replacing redundant declaration let tmp%3#4: bool = (! maybe_exists%0#2) with copy of existing registers [Register(source_location=box_storage/contract.py:389:15-26, ir_type=bool, name='tmp%0', version=8)]
debug: Replacing redundant declaration let tmp%20#0: bool = (== _%5#0 64u) with copy of existing registers [Register(source_location=box_storage/contract.py:425:15-35, ir_type=bool, name='tmp%18', version=0)]
debug: Replacing redundant declaration let tmp%4#3: bool = (== value%0#0 6u) with copy of existing registers [Register(source_location=box_storage/contract.py:441:15-69, ir_type=bool, name='tmp%1', version=2)]
debug: Found equivalence set: box%array_length%0#6, box%array_length%1#3
debug: selected box%array_length%0#6 from equivalence set
debug: Found equivalence set: maybe_value_converted%0#0, a#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: box%array_length%2#1, box%array_length%4#0
debug: selected box%array_length%2#1 from equivalence set
debug: Found equivalence set: values%0#0, values%2#0
debug: selected values%0#0 from equivalence set
debug: Found equivalence set: values%1#0, values%3#0
debug: selected values%1#0 from equivalence set
debug: Found equivalence set: tmp%0#8, tmp%1#3, tmp%2#3, tmp%3#4
debug: selected tmp%0#8 from equivalence set
debug: Found equivalence set: tmp%18#0, tmp%20#0
debug: selected tmp%18#0 from equivalence set
debug: Found equivalence set: tmp%1#2, tmp%4#3
debug: selected tmp%1#2 from equivalence set
debug: Copy propagation made 11 modifications
debug: Removing redundant assert of tmp%0#8
debug: Removing redundant assert of tmp%0#8
debug: Removing redundant assert of tmp%0#8
debug: Removing redundant assert of tmp%18#0
debug: Removing redundant assert of tmp%1#2
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable tmp%0#9
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable tmp%1#4
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable tmp%3#5
debug: Removing unused variable tmp%2#2
debug: Removing unused variable tmp%9#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== box%array_length%0#6 box%array_length%0#6) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box%array_length%0#6
debug: Removing unused variable tmp%4#21
debug: Removing unused variable box%box_extract%0#14
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Not removing empty block block@88 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: splitting critical edge block@4->block@161
debug: Replaced predecessor block@4 with block@167 in block@161
debug: splitting critical edge block@84->block@90
debug: Replaced predecessor block@84 with block@168 in block@90
debug: splitting critical edge block@85->block@87
debug: Replaced predecessor block@85 with block@169 in block@87
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing tmp%0#1 with [tmp%0#33, tmp%0#39, tmp%0#30, tmp%0#23, tmp%0#21, tmp%0#14, tmp%0#10]
debug: Coalescing tmp%2#0 with [tmp%2#20, tmp%2#18, tmp%2#16, tmp%2#12]
debug: Coalescing tmp%3#0 with [tmp%3#23]
debug: Coalescing tmp%4#0 with [tmp%4#12, tmp%4#11, tmp%4#7]
debug: Coalescing tmp%0#3 with [tmp%0#37, tmp%0#38, tmp%0#35, tmp%0#28, tmp%0#26, tmp%0#22, tmp%0#20, tmp%0#17, tmp%0#16, tmp%0#15, tmp%0#13, tmp%0#12, tmp%0#11, tmp%0#6, tmp%0#5, tmp%0#4]
debug: Coalescing len%0#0 with [len%0#16, len%0#15, len%0#14, len%0#13, len%0#11, len%0#10, len%0#9, len%0#8, len%0#7, len%0#6, len%0#5, len%0#4, len%0#3, len%0#2, len%0#1]
debug: Coalescing eq%0#0 with [eq%0#16, eq%0#15, eq%0#14, eq%0#13, eq%0#12, eq%0#11, eq%0#10, eq%0#9, eq%0#8, eq%0#7, eq%0#6, eq%0#5, eq%0#4, eq%0#3, eq%0#2, eq%0#1]
debug: Coalescing a#0 with [a#2, a#1]
debug: Coalescing add%0#0 with [add%0#2, add%0#1]
debug: Coalescing len%1#0 with [len%1#7, len%1#6, len%1#5, len%1#4, len%1#3, len%1#2, len%1#1]
debug: Coalescing eq%1#0 with [eq%1#8, eq%1#7, eq%1#6, eq%1#5, eq%1#4, eq%1#3, eq%1#2, eq%1#1]
debug: Coalescing len%2#0 with [len%2#1]
debug: Coalescing eq%2#0 with [eq%2#2, eq%2#1]
debug: Coalescing encoded_value%0#0 with [encoded_value%0#12, encoded_value%0#3, encoded_value%0#2, encoded_value%0#1]
debug: Coalescing maybe_value_converted%0#1 with [maybe_value_converted%0#2]
debug: Coalescing tmp%5#2 with [tmp%5#11, tmp%5#13]
debug: Coalescing value%0#0 with [value%0#2]
debug: Coalescing check%0#0 with [check%0#2]
debug: Coalescing tmp%6#1 with [tmp%6#8, tmp%6#7]
debug: Coalescing tmp%8#0 with [tmp%8#7, tmp%8#6, tmp%8#3]
debug: Coalescing tmp%10#0 with [tmp%10#5]
debug: Coalescing tmp%15#0 with [tmp%15#3]
debug: Coalescing index#0 with [index#5, index#3, index#2, index#1]
debug: Coalescing tmp%2#1 with [tmp%2#25, tmp%2#24, tmp%2#23, tmp%2#22, tmp%2#17, tmp%2#15, tmp%2#14, tmp%2#13, tmp%2#8, tmp%2#7, tmp%2#6]
debug: Coalescing box%element_offset%0#0 with [box%element_offset%0#9, box%element_offset%0#8, box%element_offset%0#7, box%element_offset%0#6, box%element_offset%0#5, box%element_offset%0#4, box%element_offset%0#3, box%element_offset%0#2, box%element_offset%0#1]
debug: Coalescing tmp%1#8 with [tmp%1#27, tmp%1#20, tmp%1#18, tmp%1#26, tmp%1#24, tmp%1#16, tmp%1#14]
debug: Coalescing total#0 with [total#13, total#14, total#15, total#8, total#9, total#10, total#11, total#12, total#3, total#4, total#7, total#6, total#5, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#9, item_index_internal%0#10, item_index_internal%0#11, item_index_internal%0#6, item_index_internal%0#7, item_index_internal%0#8, item_index_internal%0#3, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#6, continue_looping%0#5, continue_looping%0#4, continue_looping%0#3, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing box%box_extract%0#0 with [box%box_extract%0#13, box%box_extract%0#12, box%box_extract%0#11, box%box_extract%0#10, box%box_extract%0#9, box%box_extract%0#8, box%box_extract%0#7, box%box_extract%0#6, box%box_extract%0#5, box%box_extract%0#4, box%box_extract%0#3, box%box_extract%0#2, box%box_extract%0#1]
debug: Coalescing val#0 with [val#3, val#1, val#2]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing tmp%0#8 with [tmp%0#34, tmp%0#29, tmp%0#19]
debug: Coalescing maybe_exists%1#1 with [maybe_exists%1#2]
debug: Coalescing maybe_exists%2#2 with [maybe_exists%2#3]
debug: Coalescing values%0#0 with [values%0#4, values%0#3, values%0#2, values%0#1]
debug: Coalescing tmp%5#9 with [tmp%5#10]
debug: Coalescing _%0#0 with [_%0#3, _%0#2]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#3, maybe_exists%0#2, maybe_exists%0#1]
debug: Coalescing times#0 with [times#3, times#2, times#1]
debug: Coalescing box%box_extract%1#0 with [box%box_extract%1#7, box%box_extract%1#6, box%box_extract%1#5, box%box_extract%1#4, box%box_extract%1#3, box%box_extract%1#2, box%box_extract%1#1, box%box_extract%1#0]
debug: Coalescing arr_len#0 with [arr_len#5, arr_len#6, arr_len#7, arr_len#4, arr_len#1, arr_len#2, arr_len#3]
debug: Coalescing box%box_extract%2#1 with [box%box_extract%2#4, box%box_extract%2#3, box%box_extract%2#2]
debug: Coalescing box%btoi%0#0 with [box%btoi%0#5, box%btoi%0#4, box%btoi%0#3, box%btoi%0#2, box%btoi%0#1]
debug: Coalescing box%box_extract%3#1 with [box%box_extract%3#4, box%box_extract%3#3, box%box_extract%3#2]
debug: Coalescing arr2_len#0 with [arr2_len#1]
debug: Coalescing tmp%3#6 with [tmp%3#32, tmp%3#31, tmp%3#33, tmp%3#30, tmp%3#29, tmp%3#25, tmp%3#24, tmp%3#17, tmp%3#15, tmp%3#13, tmp%3#10, tmp%3#8]
debug: Coalescing head_and_dyn_arr#0 with [head_and_dyn_arr#3]
debug: Coalescing dyn_arr2_index#1 with [dyn_arr2_index#3]
debug: Coalescing tmp%6#2 with [tmp%6#6]
debug: Coalescing tmp%7#3 with [tmp%7#6]
debug: Coalescing value_internal%0#0 with [value_internal%0#3, value_internal%0#5, value_internal%0#2]
debug: Coalescing i#0 with [i#1]
debug: Coalescing arr2_offset#0 with [arr2_offset#1]
debug: Coalescing box%box_extract%4#0 with [box%box_extract%4#3, box%box_extract%4#2, box%box_extract%4#1]
debug: Coalescing box%array_length%2#0 with [box%array_length%2#1]
debug: Coalescing tmp%14#0 with [tmp%14#2, tmp%14#1]
debug: Coalescing box%box_extract%5#0 with [box%box_extract%5#3, box%box_extract%5#2, box%box_extract%5#1]
debug: Coalescing box%btoi%1#0 with [box%btoi%1#3, box%btoi%1#2, box%btoi%1#1]
debug: Coalescing box%box_extract%6#0 with [box%box_extract%6#3, box%box_extract%6#2, box%box_extract%6#1, box%box_extract%6#0]
debug: Coalescing tmp%16#0 with [tmp%16#2]
debug: Coalescing tmp%4#1 with [tmp%4#16, tmp%4#15, tmp%4#10, tmp%4#9, tmp%4#8, tmp%4#6, tmp%4#2]
debug: Coalescing box%array_length%0#0 with [box%array_length%0#4, box%array_length%0#3, box%array_length%0#2, box%array_length%0#1]
debug: Coalescing num_bytes%0#0 with [num_bytes%0#1, num_bytes%0#2]
debug: Coalescing index%0#0 with [index%0#1, index%0#2]
debug: Coalescing num_bytes%2#0 with [num_bytes%2#1, num_bytes%2#3]
debug: Coalescing index%1#0 with [index%1#1]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#1]
debug: Coalescing num_bytes%3#0 with [num_bytes%3#1, num_bytes%3#2]
debug: Coalescing index%2#0 with [index%2#1, index%2#2]
debug: Coalescing value#2 with [value#8]
debug: Coalescing box%index_ok%0#0 with [box%index_ok%0#3, box%index_ok%0#2, box%index_ok%0#1]
debug: Coalescing box%mul%0#0 with [box%mul%0#1]
debug: Coalescing box%add%1#1 with [box%add%1#2]
debug: Coalescing box%offset%7#1 with [box%offset%7#2]
debug: Coalescing box%btoi%2#0 with [box%btoi%2#2, box%btoi%2#1]
debug: Coalescing box%index_ok%1#0 with [box%index_ok%1#1]
debug: Coalescing box%add%2#1 with [box%add%2#2]
debug: Coalescing box%offset%8#1 with [box%offset%8#2]
debug: Coalescing box%btoi%3#0 with [box%btoi%3#1]
debug: Coalescing box%offset%16#0 with [box%offset%16#1]
debug: Coalescing box%btoi%4#0 with [box%btoi%4#1]
debug: Coalescing box%index_ok%2#0 with [box%index_ok%2#1]
debug: Coalescing box%add%4#0 with [box%add%4#1]
debug: Coalescing box%add%5#0 with [box%add%5#1]
debug: Coalescing box%btoi%5#0 with [box%btoi%5#1]
debug: Coalescing box%offset%17#0 with [box%offset%17#1]
debug: Coalescing box%offset%18#0 with [box%offset%18#1]
debug: Coalescing box%btoi%6#0 with [box%btoi%6#1]
debug: Coalescing box%index_ok%3#0 with [box%index_ok%3#1]
debug: Coalescing box%add%6#0 with [box%add%6#1]
debug: Coalescing box%add%7#0 with [box%add%7#1]
debug: Coalescing box%box_extract%7#0 with [box%box_extract%7#2, box%box_extract%7#1]
debug: Coalescing box%btoi%7#0 with [box%btoi%7#1]
debug: Coalescing box%offset%19#0 with [box%offset%19#1]
debug: Coalescing box%box_extract%8#0 with [box%box_extract%8#2, box%box_extract%8#1]
debug: Coalescing box%btoi%8#0 with [box%btoi%8#1]
debug: Coalescing box%index_ok%4#0 with [box%index_ok%4#1]
debug: Coalescing box%add%8#0 with [box%add%8#1]
debug: Coalescing box%offset%20#0 with [box%offset%20#1]
debug: Coalescing box%box_extract%9#0 with [box%box_extract%9#1]
debug: Coalescing box%box_extract%10#0 with [box%box_extract%10#1, box%box_extract%10#0]
debug: Coalescing box%element_offset%1#0 with [box%element_offset%1#1]
debug: Coalescing tmp%1#2 with [tmp%1#12, tmp%1#10, tmp%1#5]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing value#6 with [value#7]
debug: Coalescing box%element_byte_offset%0#0 with [box%element_byte_offset%0#1]
debug: Coalescing box%element_bit_offset%0#0 with [box%element_bit_offset%0#1]
debug: Coalescing box%offset%0#1 with [box%offset%0#2]
debug: Coalescing tmp%4#4 with [tmp%4#5]
debug: Coalescing tmp%11#0 with [tmp%11#2]
debug: Coalescing tmp%12#0 with [tmp%12#1]
debug: Coalescing tmp%17#0 with [tmp%17#1]
debug: Coalescing tmp%18#0 with [tmp%18#1]
debug: Coalescing exists#0 with [exists#1]
debug: Coalescing state_get%0#0 with [state_get%0#1]
debug: Coalescing key#0 with [key#3, key#2, key#1]
debug: Coalescing resulted in 819 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: loc: {i#0=None, value_internal%0#0=value_internal%0#0}
debug: pred: {i#0=value_internal%0#0}
debug: ready: i#0
debug: to_do: i#0
debug: * avail i#0
debug: * avail value_internal%0#0
debug: * to_do i#0
debug: loc: {i#0=None, value_internal%0#0=value_internal%0#0}
debug: pred: {i#0=value_internal%0#0}
debug: ready: i#0
debug: to_do: i#0
debug: * avail i#0
debug: * avail value_internal%0#0
debug: * to_do i#0
debug: loc: {index%1#0=None, aggregate%next_index%0#0=aggregate%next_index%0#0}
debug: pred: {index%1#0=aggregate%next_index%0#0}
debug: ready: index%1#0
debug: to_do: index%1#0
debug: * avail index%1#0
debug: * avail aggregate%next_index%0#0
debug: * to_do index%1#0
debug: loc: {i#0=None, value_internal%0#0=value_internal%0#0}
debug: pred: {i#0=value_internal%0#0}
debug: ready: i#0
debug: to_do: i#0
debug: * avail i#0
debug: * avail value_internal%0#0
debug: * to_do i#0
debug: loc: {i#0=None, value_internal%0#0=value_internal%0#0}
debug: pred: {i#0=value_internal%0#0}
debug: ready: i#0
debug: to_do: i#0
debug: * avail i#0
debug: * avail value_internal%0#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 2
debug: Removing jump block block@167
debug: Removing jump block block@168
debug: Removing jump block block@169
debug: Removing jump block block@88
debug: branching to block@167 will be replaced with block@161
debug: branching to block@168 will be replaced with block@90
debug: branching to block@169 will be replaced with block@87
debug: branching to block@88 will be replaced with block@90
debug: Output IR to box_storage/out_O2/BoxContract.ir/BoxContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to box_storage/out_O2/BoxContract.ir/BoxContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[3]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_abi_routing@4.ops[5]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_abi_routing@4.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_abi_routing@4.ops[10]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_abi_routing@4.ops[12]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_abi_routing@4.ops[15]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_abi_routing@4.ops[52]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_set_boxes_route@6.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_boxes_route@6.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_set_boxes_route@6.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_set_boxes_route@6.ops[18]: 'l-store-copy b#1 0'
debug: Replaced main_set_boxes_route@6.ops[20]: 'v-load b#1' with 'l-load b#1'
debug: Inserted main_set_boxes_route@6.ops[23]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[25]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted main_set_boxes_route@6.ops[31]: 'l-store-copy len%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[33]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_set_boxes_route@6.ops[36]: 'l-store-copy eq%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[38]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_set_boxes_route@6.ops[41]: 'l-store-copy c#1 0'
debug: Replaced main_set_boxes_route@6.ops[43]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[46]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[48]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted main_set_boxes_route@6.ops[54]: 'l-store-copy len%2#0 0'
debug: Replaced main_set_boxes_route@6.ops[56]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[59]: 'l-store-copy eq%2#0 0'
debug: Replaced main_set_boxes_route@6.ops[61]: 'v-load eq%2#0' with 'l-load eq%2#0'
debug: Inserted main_set_boxes_route@6.ops[113]: 'l-store-copy maybe_value_converted%0#1 0'
debug: Replaced main_set_boxes_route@6.ops[115]: 'v-load maybe_value_converted%0#1' with 'l-load maybe_value_converted%0#1'
debug: Inserted main_set_boxes_route@6.ops[118]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_set_boxes_route@6.ops[120]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_set_boxes_route@6.ops[129]: 'l-store-copy value%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[131]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_set_boxes_route@6.ops[134]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_set_boxes_route@6.ops[136]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_set_boxes_route@6.ops[141]: 'l-store-copy value%1#1 0'
debug: Replaced main_set_boxes_route@6.ops[143]: 'v-load value%1#1' with 'l-load value%1#1'
debug: Inserted main_set_boxes_route@6.ops[146]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_set_boxes_route@6.ops[148]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_set_boxes_route@6.ops[159]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_set_boxes_route@6.ops[161]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@6.ops[173]: 'l-store-copy tmp%13#3 0'
debug: Replaced main_set_boxes_route@6.ops[175]: 'v-load tmp%13#3' with 'l-load tmp%13#3'
debug: Inserted main_set_boxes_route@6.ops[188]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_set_boxes_route@6.ops[190]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_set_boxes_route@6.ops[213]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_set_boxes_route@6.ops[215]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_set_boxes_route@6.ops[256]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_set_boxes_route@6.ops[258]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_set_boxes_route@6.ops[291]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_set_boxes_route@6.ops[293]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_set_boxes_route@6.ops[306]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_set_boxes_route@6.ops[308]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_set_boxes_route@6.ops[331]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_set_boxes_route@6.ops[333]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_set_boxes_route@6.ops[374]: 'l-store-copy tmp%60#0 0'
debug: Replaced main_set_boxes_route@6.ops[376]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted main_set_boxes_route@6.ops[409]: 'l-store-copy tmp%69#0 0'
debug: Replaced main_set_boxes_route@6.ops[411]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted main_set_boxes_route@6.ops[444]: 'l-store-copy tmp%78#0 0'
debug: Replaced main_set_boxes_route@6.ops[446]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted main_set_boxes_route@6.ops[451]: 'l-store-copy value%4#0 0'
debug: Replaced main_set_boxes_route@6.ops[453]: 'v-load value%4#0' with 'l-load value%4#0'
debug: Inserted main_set_boxes_route@6.ops[456]: 'l-store-copy tmp%79#0 0'
debug: Replaced main_set_boxes_route@6.ops[458]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted main_set_boxes_route@6.ops[65]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[68]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_set_boxes_route@6.ops[108]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced main_set_boxes_route@6.ops[111]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted main_set_boxes_route@6.ops[124]: 'l-store-copy encoded_value%2#1 0'
debug: Replaced main_set_boxes_route@6.ops[127]: 'v-load encoded_value%2#1' with 'l-load encoded_value%2#1'
debug: Inserted main_set_boxes_route@6.ops[155]: 'l-store-copy check%2#1 1'
debug: Replaced main_set_boxes_route@6.ops[158]: 'v-load check%2#1' with 'l-load check%2#1'
debug: Inserted main_set_boxes_route@6.ops[173]: 'l-store-copy tmp%12#3 0'
debug: Replaced main_set_boxes_route@6.ops[176]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[189]: 'l-store-copy extract%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[192]: 'v-load extract%0#0' with 'l-load extract%0#0'
debug: Inserted main_set_boxes_route@6.ops[201]: 'l-store-copy tmp%18#2 0'
debug: Replaced main_set_boxes_route@6.ops[204]: 'v-load tmp%18#2' with 'l-load tmp%18#2'
debug: Inserted main_set_boxes_route@6.ops[211]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_set_boxes_route@6.ops[214]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_set_boxes_route@6.ops[217]: 'l-store-copy extract%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[220]: 'v-load extract%1#0' with 'l-load extract%1#0'
debug: Inserted main_set_boxes_route@6.ops[234]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_set_boxes_route@6.ops[237]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_set_boxes_route@6.ops[253]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[256]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted main_set_boxes_route@6.ops[263]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_set_boxes_route@6.ops[266]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_set_boxes_route@6.ops[299]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_set_boxes_route@6.ops[302]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_set_boxes_route@6.ops[315]: 'l-store-copy extract%2#0 0'
debug: Replaced main_set_boxes_route@6.ops[318]: 'v-load extract%2#0' with 'l-load extract%2#0'
debug: Inserted main_set_boxes_route@6.ops[327]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_set_boxes_route@6.ops[330]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_set_boxes_route@6.ops[337]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_set_boxes_route@6.ops[340]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_set_boxes_route@6.ops[343]: 'l-store-copy extract%3#0 0'
debug: Replaced main_set_boxes_route@6.ops[346]: 'v-load extract%3#0' with 'l-load extract%3#0'
debug: Inserted main_set_boxes_route@6.ops[360]: 'l-store-copy tmp%54#0 0'
debug: Replaced main_set_boxes_route@6.ops[363]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main_set_boxes_route@6.ops[379]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[382]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted main_set_boxes_route@6.ops[389]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_set_boxes_route@6.ops[392]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_set_boxes_route@6.ops[425]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_set_boxes_route@6.ops[428]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_set_boxes_route@6.ops[461]: 'l-store-copy tmp%77#0 0'
debug: Replaced main_set_boxes_route@6.ops[464]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted main_set_boxes_route@6.ops[97]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[101]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted main_set_boxes_route@6.ops[111]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced main_set_boxes_route@6.ops[115]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted main_set_boxes_route@6.ops[159]: 'l-store-copy value%2#1 1'
debug: Replaced main_set_boxes_route@6.ops[163]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[231]: 'l-store-copy value%2#1 1'
debug: Replaced main_set_boxes_route@6.ops[234]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[233]: 'l-store-copy tmp%25#0 1'
debug: Replaced main_set_boxes_route@6.ops[237]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_set_boxes_route@6.ops[244]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_set_boxes_route@6.ops[248]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_set_boxes_route@6.ops[254]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[258]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted main_set_boxes_route@6.ops[265]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[269]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted main_set_boxes_route@6.ops[282]: 'l-store-copy value%2#1 1'
debug: Replaced main_set_boxes_route@6.ops[285]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[284]: 'l-store-copy tmp%34#0 1'
debug: Replaced main_set_boxes_route@6.ops[288]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_set_boxes_route@6.ops[290]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_set_boxes_route@6.ops[294]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_set_boxes_route@6.ops[300]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[304]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted main_set_boxes_route@6.ops[306]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced main_set_boxes_route@6.ops[310]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted main_set_boxes_route@6.ops[367]: 'l-store-copy value%3#1 1'
debug: Replaced main_set_boxes_route@6.ops[370]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[369]: 'l-store-copy tmp%53#0 1'
debug: Replaced main_set_boxes_route@6.ops[373]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_set_boxes_route@6.ops[380]: 'l-store-copy tmp%55#0 0'
debug: Replaced main_set_boxes_route@6.ops[384]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted main_set_boxes_route@6.ops[390]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced main_set_boxes_route@6.ops[394]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted main_set_boxes_route@6.ops[401]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced main_set_boxes_route@6.ops[405]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted main_set_boxes_route@6.ops[418]: 'l-store-copy value%3#1 1'
debug: Replaced main_set_boxes_route@6.ops[421]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[420]: 'l-store-copy tmp%63#0 1'
debug: Replaced main_set_boxes_route@6.ops[424]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted main_set_boxes_route@6.ops[426]: 'l-store-copy tmp%64#0 0'
debug: Replaced main_set_boxes_route@6.ops[430]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted main_set_boxes_route@6.ops[436]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced main_set_boxes_route@6.ops[440]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted main_set_boxes_route@6.ops[442]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced main_set_boxes_route@6.ops[446]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted main_set_boxes_route@6.ops[459]: 'l-store-copy value%3#1 1'
debug: Replaced main_set_boxes_route@6.ops[462]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[461]: 'l-store-copy tmp%72#0 1'
debug: Replaced main_set_boxes_route@6.ops[465]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted main_set_boxes_route@6.ops[467]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_set_boxes_route@6.ops[471]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_set_boxes_route@6.ops[477]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced main_set_boxes_route@6.ops[481]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted main_set_boxes_route@6.ops[483]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced main_set_boxes_route@6.ops[487]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted main_set_boxes_route@6.ops[173]: 'l-store-copy value%3#1 0'
debug: Replaced main_set_boxes_route@6.ops[179]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[190]: 'l-store-copy tmp%14#3 0'
debug: Replaced main_set_boxes_route@6.ops[196]: 'v-load tmp%14#3' with 'l-load tmp%14#3'
debug: Inserted main_set_boxes_route@6.ops[255]: 'l-store-copy len%2#0 1'
debug: Replaced main_set_boxes_route@6.ops[260]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[261]: 'l-store-copy len%2#0 2'
debug: Replaced main_set_boxes_route@6.ops[266]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[303]: 'l-store-copy len%2#0 1'
debug: Replaced main_set_boxes_route@6.ops[308]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[330]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_set_boxes_route@6.ops[336]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_set_boxes_route@6.ops[395]: 'l-store-copy tmp%12#3 1'
debug: Replaced main_set_boxes_route@6.ops[400]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[401]: 'l-store-copy tmp%12#3 2'
debug: Replaced main_set_boxes_route@6.ops[406]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[443]: 'l-store-copy tmp%12#3 1'
debug: Replaced main_set_boxes_route@6.ops[448]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[485]: 'l-store-copy tmp%12#3 1'
debug: Replaced main_set_boxes_route@6.ops[490]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[28]: 'l-store-copy add%0#0 0'
debug: Replaced main_set_boxes_route@6.ops[35]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted main_set_boxes_route@6.ops[52]: 'l-store-copy add%1#1 0'
debug: Replaced main_set_boxes_route@6.ops[59]: 'v-load add%1#1' with 'l-load add%1#1'
debug: Inserted main_set_boxes_route@6.ops[86]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_boxes_route@6.ops[92]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[241]: 'l-store-copy value%2#1 1'
debug: Replaced main_set_boxes_route@6.ops[247]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[382]: 'l-store-copy value%3#1 1'
debug: Replaced main_set_boxes_route@6.ops[388]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[21]: 'l-store-copy b#1 0'
debug: Replaced main_set_boxes_route@6.ops[31]: 'v-load b#1' with 'l-load b#1'
debug: Inserted main_set_boxes_route@6.ops[46]: 'l-store-copy c#1 0'
debug: Replaced main_set_boxes_route@6.ops[56]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[79]: 'l-store-copy b#1 1'
debug: Replaced main_set_boxes_route@6.ops[87]: 'v-load b#1' with 'l-load b#1'
debug: Inserted main_set_boxes_route@6.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_boxes_route@6.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[219]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_set_boxes_route@6.ops[232]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_set_boxes_route@6.ops[361]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_set_boxes_route@6.ops[374]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_set_boxes_route@6.ops[309]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_set_boxes_route@6.ops[329]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_set_boxes_route@6.ops[452]: 'l-store-copy tmp%66#0 0'
debug: Replaced main_set_boxes_route@6.ops[472]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted main_set_boxes_route@6.ops[495]: 'l-store-copy tmp%75#0 0'
debug: Replaced main_set_boxes_route@6.ops[515]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted main_set_boxes_route@6.ops[261]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_set_boxes_route@6.ops[287]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_set_boxes_route@6.ops[405]: 'l-store-copy tmp%57#0 0'
debug: Replaced main_set_boxes_route@6.ops[431]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted main_set_boxes_route@6.ops[200]: 'l-store-copy c#1 1'
debug: Replaced main_set_boxes_route@6.ops[227]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[58]: 'l-store-copy c#1 1'
debug: Replaced main_set_boxes_route@6.ops[87]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[213]: 'l-store-copy value%2#1 1'
debug: Replaced main_set_boxes_route@6.ops[243]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[358]: 'l-store-copy value%3#1 0'
debug: Replaced main_set_boxes_route@6.ops[388]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[280]: 'l-store-copy len%2#0 2'
debug: Replaced main_set_boxes_route@6.ops[317]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[426]: 'l-store-copy tmp%12#3 2'
debug: Replaced main_set_boxes_route@6.ops[463]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[470]: 'l-store-copy tmp%12#3 3'
debug: Replaced main_set_boxes_route@6.ops[507]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[451]: 'l-store-copy value%3#1 2'
debug: Replaced main_set_boxes_route@6.ops[490]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[172]: 'l-store-copy value%2#1 0'
debug: Replaced main_set_boxes_route@6.ops[213]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[226]: 'l-store-copy len%2#0 3'
debug: Replaced main_set_boxes_route@6.ops[269]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[258]: 'l-store-copy value%2#1 2'
debug: Replaced main_set_boxes_route@6.ops[302]: 'v-load value%2#1' with 'l-load value%2#1'
debug: Inserted main_set_boxes_route@6.ops[289]: 'l-store-copy c#1 4'
debug: Replaced main_set_boxes_route@6.ops[332]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[375]: 'l-store-copy tmp%12#3 2'
debug: Replaced main_set_boxes_route@6.ops[418]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[407]: 'l-store-copy value%3#1 2'
debug: Replaced main_set_boxes_route@6.ops[451]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[438]: 'l-store-copy tmp%0#3 4'
debug: Replaced main_set_boxes_route@6.ops[483]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[484]: 'l-store-copy tmp%0#3 4'
debug: Replaced main_set_boxes_route@6.ops[527]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[33]: 'l-store-copy b#1 1'
debug: Replaced main_set_boxes_route@6.ops[81]: 'v-load b#1' with 'l-load b#1'
debug: Inserted main_set_boxes_route@6.ops[17]: 'l-store-copy a#0 0'
debug: Replaced main_set_boxes_route@6.ops[71]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_set_boxes_route@6.ops[176]: 'l-store-copy len%2#0 2'
debug: Replaced main_set_boxes_route@6.ops[228]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[235]: 'l-store-copy c#1 4'
debug: Replaced main_set_boxes_route@6.ops[292]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[385]: 'l-store-copy tmp%0#3 4'
debug: Replaced main_set_boxes_route@6.ops[442]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[100]: 'l-store-copy tmp%0#3 1'
debug: Replaced main_set_boxes_route@6.ops[188]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[65]: 'l-store-copy len%2#0 4'
debug: Replaced main_set_boxes_route@6.ops[177]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_set_boxes_route@6.ops[91]: 'l-store-copy c#1 3'
debug: Replaced main_set_boxes_route@6.ops[207]: 'v-load c#1' with 'l-load c#1'
debug: Inserted main_set_boxes_route@6.ops[39]: 'l-store-copy len%1#0 3'
debug: Replaced main_set_boxes_route@6.ops[163]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_set_boxes_route@6.ops[196]: 'l-store-copy value%3#1 4'
debug: Replaced main_set_boxes_route@6.ops[371]: 'v-load value%3#1' with 'l-load value%3#1'
debug: Inserted main_set_boxes_route@6.ops[198]: 'l-store-copy tmp%12#3 5'
debug: Replaced main_set_boxes_route@6.ops[384]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@6.ops[192]: 'l-store-copy tmp%0#3 4'
debug: Replaced main_set_boxes_route@6.ops[391]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_boxes_route@6.ops[95]: 'l-store-copy b#1 3'
debug: Replaced main_set_boxes_route@6.ops[363]: 'v-load b#1' with 'l-load b#1'
debug: Inserted main_set_many_ints_route@9.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_many_ints_route@9.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_many_ints_route@9.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_set_many_ints_route@9.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_set_many_ints_route@9.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_set_many_ints_route@9.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_set_many_ints_route@9.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_set_many_ints_route@9.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_set_many_ints_route@9.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced main_set_many_ints_route@9.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_set_many_ints_route@9.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced main_set_many_ints_route@9.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_set_many_ints_route@9.ops[34]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_set_many_ints_route@9.ops[37]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_set_many_ints_route@9.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_many_ints_route@9.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_many_ints_route@9.ops[17]: 'l-store-copy index#0 0'
debug: Replaced main_set_many_ints_route@9.ops[33]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_set_many_ints_route@9.ops[23]: 'l-store-copy tmp%2#1 1'
debug: Replaced main_set_many_ints_route@9.ops[41]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_while_top@161.ops[5]: 'l-store-copy tmp%2#26 0'
debug: Replaced main_while_top@161.ops[7]: 'v-load tmp%2#26' with 'l-load tmp%2#26'
debug: Inserted main_while_top@161.ops[1]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_while_top@161.ops[4]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_after_while@166.ops[4]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced main_after_while@166.ops[7]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted main_for_header@139.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@139.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@140.ops[8]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_for_body@140.ops[10]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_for_body@140.ops[3]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_for_body@140.ops[6]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_for_body@140.ops[13]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@140.ops[16]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@140.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@140.ops[20]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@141.ops[6]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_after_for@141.ops[8]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_after_for@141.ops[2]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_after_for@141.ops[5]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_delete_boxes_route@11.ops[12]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced main_delete_boxes_route@11.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_delete_boxes_route@11.ops[21]: 'l-store-copy state_get%0#2 0'
debug: Replaced main_delete_boxes_route@11.ops[23]: 'v-load state_get%0#2' with 'l-load state_get%0#2'
debug: Inserted main_delete_boxes_route@11.ops[26]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_delete_boxes_route@11.ops[28]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_delete_boxes_route@11.ops[38]: 'l-store-copy state_get%1#0 0'
debug: Replaced main_delete_boxes_route@11.ops[40]: 'v-load state_get%1#0' with 'l-load state_get%1#0'
debug: Inserted main_delete_boxes_route@11.ops[42]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_delete_boxes_route@11.ops[44]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_delete_boxes_route@11.ops[47]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_delete_boxes_route@11.ops[49]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_delete_boxes_route@11.ops[59]: 'l-store-copy state_get%2#0 0'
debug: Replaced main_delete_boxes_route@11.ops[61]: 'v-load state_get%2#0' with 'l-load state_get%2#0'
debug: Inserted main_delete_boxes_route@11.ops[64]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_delete_boxes_route@11.ops[66]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_delete_boxes_route@11.ops[70]: 'l-store-copy tmp%7#7 0'
debug: Replaced main_delete_boxes_route@11.ops[72]: 'v-load tmp%7#7' with 'l-load tmp%7#7'
debug: Inserted main_delete_boxes_route@11.ops[76]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_delete_boxes_route@11.ops[78]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_delete_boxes_route@11.ops[16]: 'l-store-copy a#0 0'
debug: Replaced main_delete_boxes_route@11.ops[19]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_delete_boxes_route@11.ops[34]: 'l-store-copy maybe_value%1#1 0'
debug: Replaced main_delete_boxes_route@11.ops[37]: 'v-load maybe_value%1#1' with 'l-load maybe_value%1#1'
debug: Inserted main_delete_boxes_route@11.ops[56]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced main_delete_boxes_route@11.ops[59]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_delete_boxes_route@11.ops[33]: 'l-store-copy maybe_exists%1#1 1'
debug: Replaced main_delete_boxes_route@11.ops[39]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_delete_boxes_route@11.ops[56]: 'l-store-copy maybe_exists%2#2 1'
debug: Replaced main_delete_boxes_route@11.ops[62]: 'v-load maybe_exists%2#2' with 'l-load maybe_exists%2#2'
debug: Inserted main_delete_boxes_route@11.ops[11]: 'l-store-copy a_exists#0 1'
debug: Replaced main_delete_boxes_route@11.ops[21]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted main_delete_boxes_route@11.ops[22]: 'l-store-copy a_exists#0 2'
debug: Replaced main_delete_boxes_route@11.ops[75]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted main_delete_boxes_route@11.ops[21]: 'l-store-copy a#0 2'
debug: Replaced main_delete_boxes_route@11.ops[82]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_indirect_extract_and_replace_route@12.ops[4]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_indirect_extract_and_replace_route@12.ops[6]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_indirect_extract_and_replace_route@12.ops[8]: 'l-store-copy values%0#0 0'
debug: Replaced main_indirect_extract_and_replace_route@12.ops[10]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_indirect_extract_and_replace_route@12.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_indirect_extract_and_replace_route@12.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_indirect_extract_and_replace_route@12.ops[17]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_indirect_extract_and_replace_route@12.ops[21]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_read_boxes_route@13.ops[8]: 'l-store-copy maybe_value_converted%0#1 0'
debug: Replaced main_read_boxes_route@13.ops[10]: 'v-load maybe_value_converted%0#1' with 'l-load maybe_value_converted%0#1'
debug: Inserted main_read_boxes_route@13.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_read_boxes_route@13.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_read_boxes_route@13.ops[38]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_read_boxes_route@13.ops[40]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_read_boxes_route@13.ops[48]: 'l-store-copy aggregate%length%2#0 0'
debug: Replaced main_read_boxes_route@13.ops[50]: 'v-load aggregate%length%2#0' with 'l-load aggregate%length%2#0'
debug: Inserted main_read_boxes_route@13.ops[52]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced main_read_boxes_route@13.ops[54]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted main_read_boxes_route@13.ops[56]: 'l-store-copy aggregate%length_uint16%2#0 0'
debug: Replaced main_read_boxes_route@13.ops[58]: 'v-load aggregate%length_uint16%2#0' with 'l-load aggregate%length_uint16%2#0'
debug: Inserted main_read_boxes_route@13.ops[72]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced main_read_boxes_route@13.ops[74]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted main_read_boxes_route@13.ops[76]: 'l-store-copy aggregate%as_bytes%4#0 0'
debug: Replaced main_read_boxes_route@13.ops[78]: 'v-load aggregate%as_bytes%4#0' with 'l-load aggregate%as_bytes%4#0'
debug: Inserted main_read_boxes_route@13.ops[91]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced main_read_boxes_route@13.ops[93]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted main_read_boxes_route@13.ops[96]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced main_read_boxes_route@13.ops[98]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted main_read_boxes_route@13.ops[105]: 'l-store-copy tmp%5#9 0'
debug: Replaced main_read_boxes_route@13.ops[107]: 'v-load tmp%5#9' with 'l-load tmp%5#9'
debug: Inserted main_read_boxes_route@13.ops[2]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced main_read_boxes_route@13.ops[5]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted main_read_boxes_route@13.ops[22]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced main_read_boxes_route@13.ops[25]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted main_read_boxes_route@13.ops[32]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced main_read_boxes_route@13.ops[35]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted main_read_boxes_route@13.ops[71]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced main_read_boxes_route@13.ops[74]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted main_read_boxes_route@13.ops[84]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced main_read_boxes_route@13.ops[87]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted main_read_boxes_route@13.ops[92]: 'l-store-copy aggregate%val_as_bytes%4#0 0'
debug: Replaced main_read_boxes_route@13.ops[95]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted main_read_boxes_route@13.ops[107]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced main_read_boxes_route@13.ops[110]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted main_read_boxes_route@13.ops[4]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced main_read_boxes_route@13.ops[8]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted main_read_boxes_route@13.ops[25]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced main_read_boxes_route@13.ops[29]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted main_read_boxes_route@13.ops[91]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced main_read_boxes_route@13.ops[97]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted main_read_boxes_route@13.ops[66]: 'l-store-copy aggregate%encoded_value%2#0 0'
debug: Replaced main_read_boxes_route@13.ops[72]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted main_read_boxes_route@13.ops[52]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_read_boxes_route@13.ops[65]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_read_boxes_route@13.ops[50]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced main_read_boxes_route@13.ops[70]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted main_read_boxes_route@13.ops[73]: 'l-store-copy aggregate%head%1#0 1'
debug: Replaced main_read_boxes_route@13.ops[92]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted main_read_boxes_route@13.ops[31]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_read_boxes_route@13.ops[53]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_read_boxes_route@13.ops[20]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_read_boxes_route@13.ops[50]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_read_boxes_route@13.ops[78]: 'l-store-copy aggregate%encoded_value%2#0 1'
debug: Replaced main_read_boxes_route@13.ops[110]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted main_read_boxes_route@13.ops[49]: 'l-store-copy values%0#0 2'
debug: Replaced main_read_boxes_route@13.ops[101]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_read_boxes_route@13.ops[38]: 'l-store-copy aggregate%box_get%8#0 3'
debug: Replaced main_read_boxes_route@13.ops[117]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted main_boxes_exist_route@14.ops[20]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced main_boxes_exist_route@14.ops[22]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted main_boxes_exist_route@14.ops[26]: 'l-store-copy aggregate%set_bit%0#0 0'
debug: Replaced main_boxes_exist_route@14.ops[28]: 'v-load aggregate%set_bit%0#0' with 'l-load aggregate%set_bit%0#0'
debug: Inserted main_boxes_exist_route@14.ops[32]: 'l-store-copy aggregate%set_bit%1#0 0'
debug: Replaced main_boxes_exist_route@14.ops[34]: 'v-load aggregate%set_bit%1#0' with 'l-load aggregate%set_bit%1#0'
debug: Inserted main_boxes_exist_route@14.ops[42]: 'l-store-copy tmp%5#9 0'
debug: Replaced main_boxes_exist_route@14.ops[44]: 'v-load tmp%5#9' with 'l-load tmp%5#9'
debug: Inserted main_boxes_exist_route@14.ops[38]: 'l-store-copy aggregate%set_bit%2#0 0'
debug: Replaced main_boxes_exist_route@14.ops[41]: 'v-load aggregate%set_bit%2#0' with 'l-load aggregate%set_bit%2#0'
debug: Inserted main_boxes_exist_route@14.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_boxes_exist_route@14.ops[19]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_boxes_exist_route@14.ops[7]: 'l-store-copy maybe_exists%1#1 2'
debug: Replaced main_boxes_exist_route@14.ops[26]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_boxes_exist_route@14.ops[12]: 'l-store-copy maybe_exists%2#2 3'
debug: Replaced main_boxes_exist_route@14.ops[33]: 'v-load maybe_exists%2#2' with 'l-load maybe_exists%2#2'
debug: Inserted main_boxes_exist_route@14.ops[17]: 'l-store-copy maybe_exists%3#1 4'
debug: Replaced main_boxes_exist_route@14.ops[40]: 'v-load maybe_exists%3#1' with 'l-load maybe_exists%3#1'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[3]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[5]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[11]: 'l-store-copy aggregate%val_as_bytes%5#0 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[13]: 'v-load aggregate%val_as_bytes%5#0' with 'l-load aggregate%val_as_bytes%5#0'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[23]: 'l-store-copy aggregate%head%7#0 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[25]: 'v-load aggregate%head%7#0' with 'l-load aggregate%head%7#0'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[19]: 'l-store-copy aggregate%val_as_bytes%6#0 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[22]: 'v-load aggregate%val_as_bytes%6#0' with 'l-load aggregate%val_as_bytes%6#0'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[16]: 'l-store-copy aggregate%head%6#0 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[22]: 'v-load aggregate%head%6#0' with 'l-load aggregate%head%6#0'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[30]: 'l-store-copy aggregate%concat%3#0 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[36]: 'v-load aggregate%concat%3#0' with 'l-load aggregate%concat%3#0'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[10]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_create_dynamic_arr_struct_route@15.ops[9]: 'l-store-copy tmp%2#0 1'
debug: Replaced main_create_dynamic_arr_struct_route@15.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[21]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[23]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[25]: 'l-store-copy values%0#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[27]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[30]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[32]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[38]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[40]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[47]: 'l-store-copy box%box_extract%2#1 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[49]: 'v-load box%box_extract%2#1' with 'l-load box%box_extract%2#1'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[56]: 'l-store-copy box%box_extract%3#1 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[58]: 'v-load box%box_extract%3#1' with 'l-load box%box_extract%3#1'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[64]: 'l-store-copy arr_size#3 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[66]: 'v-load arr_size#3' with 'l-load arr_size#3'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[69]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[71]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[93]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[95]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[102]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[104]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[113]: 'l-store-copy value_internal%0#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[115]: 'v-load value_internal%0#0' with 'l-load value_internal%0#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[51]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[54]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[79]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[82]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[84]: 'l-store-copy dyn_arr2_index#1 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[87]: 'v-load dyn_arr2_index#1' with 'l-load dyn_arr2_index#1'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[89]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[92]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[110]: 'l-store-copy tmp%7#3 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[115]: 'v-load tmp%7#3' with 'l-load tmp%7#3'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[76]: 'l-store-copy head_and_dyn_arr#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[88]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[104]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[116]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[62]: 'l-store-copy arr2_len#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[79]: 'v-load arr2_len#0' with 'l-load arr2_len#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[43]: 'l-store-copy arr_len#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[65]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[66]: 'l-store-copy arr_len#0 1'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[99]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[68]: 'l-store-copy times#0 3'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[110]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_append_dynamic_arr_struct_route@17.ops[17]: 'l-store-copy times#0 0'
debug: Replaced main_append_dynamic_arr_struct_route@17.ops[68]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_for_header@122.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@122.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@123.ops[22]: 'l-store-copy value_internal%0#0 0'
debug: Replaced main_for_body@123.ops[24]: 'v-load value_internal%0#0' with 'l-load value_internal%0#0'
debug: Inserted main_for_body@123.ops[6]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_for_body@123.ops[9]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_for_body@123.ops[11]: 'l-store-copy box%offset%5#4 0'
debug: Replaced main_for_body@123.ops[14]: 'v-load box%offset%5#4' with 'l-load box%offset%5#4'
debug: Inserted main_for_body@123.ops[2]: 'l-store-copy aggregate%val_as_bytes%7#0 0'
debug: Replaced main_for_body@123.ops[16]: 'v-load aggregate%val_as_bytes%7#0' with 'l-load aggregate%val_as_bytes%7#0'
debug: Inserted main_for_body@123.ops[5]: 'l-store-copy arr_len#0 1'
debug: Replaced main_for_body@123.ops[19]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_for_body@123.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@123.ops[24]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@124.ops[2]: 'l-store-copy aggregate%val_as_bytes%8#0 0'
debug: Replaced main_after_for@124.ops[4]: 'v-load aggregate%val_as_bytes%8#0' with 'l-load aggregate%val_as_bytes%8#0'
debug: Inserted main_after_for@124.ops[6]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced main_after_for@124.ops[8]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted main_after_for@124.ops[11]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced main_after_for@124.ops[13]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted main_after_for@124.ops[25]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_after_for@124.ops[27]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_after_for@124.ops[30]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_after_for@124.ops[32]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_after_for@124.ops[35]: 'l-store-copy arr2_offset#0 0'
debug: Replaced main_after_for@124.ops[37]: 'v-load arr2_offset#0' with 'l-load arr2_offset#0'
debug: Inserted main_after_for@124.ops[39]: 'l-store-copy aggregate%val_as_bytes%9#0 0'
debug: Replaced main_after_for@124.ops[41]: 'v-load aggregate%val_as_bytes%9#0' with 'l-load aggregate%val_as_bytes%9#0'
debug: Inserted main_after_for@124.ops[43]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced main_after_for@124.ops[45]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted main_after_for@124.ops[48]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced main_after_for@124.ops[50]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted main_after_for@124.ops[63]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced main_after_for@124.ops[65]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted main_after_for@124.ops[67]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced main_after_for@124.ops[69]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted main_after_for@124.ops[72]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_after_for@124.ops[74]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_after_for@124.ops[80]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced main_after_for@124.ops[82]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted main_after_for@124.ops[89]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced main_after_for@124.ops[91]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted main_after_for@124.ops[93]: 'l-store-copy box%array_length%3#0 0'
debug: Replaced main_after_for@124.ops[95]: 'v-load box%array_length%3#0' with 'l-load box%array_length%3#0'
debug: Inserted main_after_for@124.ops[97]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_after_for@124.ops[99]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_after_for@124.ops[107]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_after_for@124.ops[109]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_after_for@124.ops[84]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced main_after_for@124.ops[87]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted main_after_for@124.ops[104]: 'l-store-copy aggregate%val_as_bytes%10#0 0'
debug: Replaced main_after_for@124.ops[107]: 'v-load aggregate%val_as_bytes%10#0' with 'l-load aggregate%val_as_bytes%10#0'
debug: Inserted main_after_for@124.ops[17]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced main_after_for@124.ops[21]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted main_after_for@124.ops[55]: 'l-store-copy aggregate%uint16%1#0 0'
debug: Replaced main_after_for@124.ops[59]: 'v-load aggregate%uint16%1#0' with 'l-load aggregate%uint16%1#0'
debug: Inserted main_after_for@124.ops[5]: 'l-store-copy aggregate%val_as_bytes%8#0 0'
debug: Replaced main_after_for@124.ops[16]: 'v-load aggregate%val_as_bytes%8#0' with 'l-load aggregate%val_as_bytes%8#0'
debug: Inserted main_after_for@124.ops[44]: 'l-store-copy aggregate%val_as_bytes%9#0 0'
debug: Replaced main_after_for@124.ops[55]: 'v-load aggregate%val_as_bytes%9#0' with 'l-load aggregate%val_as_bytes%9#0'
debug: Inserted main_after_for@124.ops[1]: 'l-store-copy arr_len#0 0'
debug: Replaced main_after_for@124.ops[25]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_after_for@124.ops[75]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced main_after_for@124.ops[108]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted main_after_for@124.ops[26]: 'l-store-copy arr_len#0 0'
debug: Replaced main_after_for@124.ops[77]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[21]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[23]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[25]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[27]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[35]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[37]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[44]: 'l-store-copy box%box_extract%2#1 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[46]: 'v-load box%box_extract%2#1' with 'l-load box%box_extract%2#1'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[52]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[54]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[61]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[63]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[69]: 'l-store-copy aggregate%val_as_bytes%11#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[71]: 'v-load aggregate%val_as_bytes%11#0' with 'l-load aggregate%val_as_bytes%11#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[73]: 'l-store-copy aggregate%bitlen%2#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[75]: 'v-load aggregate%bitlen%2#0' with 'l-load aggregate%bitlen%2#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[78]: 'l-store-copy aggregate%no_overflow%2#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[80]: 'v-load aggregate%no_overflow%2#0' with 'l-load aggregate%no_overflow%2#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[91]: 'l-store-copy aggregate%val_as_bytes%12#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[93]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[95]: 'l-store-copy aggregate%bitlen%3#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[97]: 'v-load aggregate%bitlen%3#0' with 'l-load aggregate%bitlen%3#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[100]: 'l-store-copy aggregate%no_overflow%3#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[102]: 'v-load aggregate%no_overflow%3#0' with 'l-load aggregate%no_overflow%3#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[139]: 'l-store-copy box%box_extract%3#1 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[141]: 'v-load box%box_extract%3#1' with 'l-load box%box_extract%3#1'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[143]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[145]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[151]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[153]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[39]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[42]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[124]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[127]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[129]: 'l-store-copy dyn_arr2_index#1 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[132]: 'v-load dyn_arr2_index#1' with 'l-load dyn_arr2_index#1'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[134]: 'l-store-copy size#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[137]: 'v-load size#0' with 'l-load size#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[151]: 'l-store-copy aggregate%val_as_bytes%13#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[154]: 'v-load aggregate%val_as_bytes%13#0' with 'l-load aggregate%val_as_bytes%13#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[85]: 'l-store-copy aggregate%uint16%2#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[89]: 'v-load aggregate%uint16%2#0' with 'l-load aggregate%uint16%2#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[108]: 'l-store-copy aggregate%uint16%3#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[112]: 'v-load aggregate%uint16%3#0' with 'l-load aggregate%uint16%3#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[117]: 'l-store-copy tmp%8#5 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[121]: 'v-load tmp%8#5' with 'l-load tmp%8#5'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[56]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[60]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[75]: 'l-store-copy aggregate%val_as_bytes%11#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[86]: 'v-load aggregate%val_as_bytes%11#0' with 'l-load aggregate%val_as_bytes%11#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[99]: 'l-store-copy aggregate%val_as_bytes%12#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[110]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[17]: 'l-store-copy times#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[30]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[126]: 'l-store-copy head_and_dyn_arr#0 2'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[140]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[53]: 'l-store-copy arr_len#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[72]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[32]: 'l-store-copy arr_len#0 0'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[53]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[72]: 'l-store-copy arr2_offset#0 1'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[98]: 'v-load arr2_offset#0' with 'l-load arr2_offset#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[63]: 'l-store-copy head_and_dyn_arr#0 2'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[129]: 'v-load head_and_dyn_arr#0' with 'l-load head_and_dyn_arr#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[52]: 'l-store-copy arr2_len#0 1'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[135]: 'v-load arr2_len#0' with 'l-load arr2_len#0'
debug: Inserted main_pop_dynamic_arr_struct_route@18.ops[31]: 'l-store-copy times#0 1'
debug: Replaced main_pop_dynamic_arr_struct_route@18.ops[125]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_set_nested_struct_route@19.ops[1]: 'l-store-copy struct#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[3]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted main_set_nested_struct_route@19.ops[6]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[8]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_set_nested_struct_route@19.ops[11]: 'l-store-copy eq%0#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[13]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_set_nested_struct_route@19.ops[23]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[25]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_set_nested_struct_route@19.ops[28]: 'l-store-copy extract_uint16%1#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[30]: 'v-load extract_uint16%1#0' with 'l-load extract_uint16%1#0'
debug: Inserted main_set_nested_struct_route@19.ops[33]: 'l-store-copy eq%1#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[35]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_set_nested_struct_route@19.ops[44]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[46]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_set_nested_struct_route@19.ops[49]: 'l-store-copy aggregate%array_length%2#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[51]: 'v-load aggregate%array_length%2#0' with 'l-load aggregate%array_length%2#0'
debug: Inserted main_set_nested_struct_route@19.ops[18]: 'l-store-copy aggregate%extract_uint16%1#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[22]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted main_set_nested_struct_route@19.ops[39]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[42]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_set_nested_struct_route@19.ops[41]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced main_set_nested_struct_route@19.ops[45]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted main_set_nested_struct_route@19.ops[16]: 'l-store-copy struct#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[21]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted main_set_nested_struct_route@19.ops[51]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[60]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_set_nested_struct_route@19.ops[4]: 'l-store-copy struct#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[16]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted main_set_nested_struct_route@19.ops[29]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_set_nested_struct_route@19.ops[41]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_set_nested_struct_route@19.ops[35]: 'l-store-copy extract_uint16%1#0 1'
debug: Replaced main_set_nested_struct_route@19.ops[48]: 'v-load extract_uint16%1#0' with 'l-load extract_uint16%1#0'
debug: Inserted main_set_nested_struct_route@19.ops[10]: 'l-store-copy extract_uint16%0#0 1'
debug: Replaced main_set_nested_struct_route@19.ops[24]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_header@109.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@109.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@110.ops[7]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_for_body@110.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@110.ops[12]: 'l-store-copy offset_is_correct%0#0 0'
debug: Replaced main_for_body@110.ops[14]: 'v-load offset_is_correct%0#0' with 'l-load offset_is_correct%0#0'
debug: Inserted main_for_body@110.ops[19]: 'l-store-copy aggregate%item_length%0#0 0'
debug: Replaced main_for_body@110.ops[21]: 'v-load aggregate%item_length%0#0' with 'l-load aggregate%item_length%0#0'
debug: Inserted main_for_body@110.ops[24]: 'l-store-copy aggregate%item_length_in_bytes%0#0 0'
debug: Replaced main_for_body@110.ops[26]: 'v-load aggregate%item_length_in_bytes%0#0' with 'l-load aggregate%item_length_in_bytes%0#0'
debug: Inserted main_for_body@110.ops[34]: 'l-store-copy aggregate%item%0#0 0'
debug: Replaced main_for_body@110.ops[36]: 'v-load aggregate%item%0#0' with 'l-load aggregate%item%0#0'
debug: Inserted main_for_body@110.ops[39]: 'l-store-copy aggregate%array_length%3#0 0'
debug: Replaced main_for_body@110.ops[41]: 'v-load aggregate%array_length%3#0' with 'l-load aggregate%array_length%3#0'
debug: Inserted main_for_body@110.ops[44]: 'l-store-copy mul%0#1 0'
debug: Replaced main_for_body@110.ops[46]: 'v-load mul%0#1' with 'l-load mul%0#1'
debug: Inserted main_for_body@110.ops[3]: 'l-store-copy head_offset_bytes%0#0 0'
debug: Replaced main_for_body@110.ops[6]: 'v-load head_offset_bytes%0#0' with 'l-load head_offset_bytes%0#0'
debug: Inserted main_for_body@110.ops[50]: 'l-store-copy add%0#0 0'
debug: Replaced main_for_body@110.ops[53]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted main_for_body@110.ops[30]: 'l-store-copy aggregate%item_head_tail_length%0#0 0'
debug: Replaced main_for_body@110.ops[34]: 'v-load aggregate%item_head_tail_length%0#0' with 'l-load aggregate%item_head_tail_length%0#0'
debug: Inserted main_for_body@110.ops[11]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_for_body@110.ops[19]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@110.ops[6]: 'l-store-copy array_data%0#0 1'
debug: Replaced main_for_body@110.ops[19]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted main_for_body@110.ops[20]: 'l-store-copy array_data%0#0 1'
debug: Replaced main_for_body@110.ops[35]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted main_for_body@110.ops[22]: 'l-store-copy item_offset%0#0 2'
debug: Replaced main_for_body@110.ops[37]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@110.ops[14]: 'l-store-copy num_bytes%0#0 3'
debug: Replaced main_for_body@110.ops[58]: 'v-load num_bytes%0#0' with 'l-load num_bytes%0#0'
debug: Inserted main_for_body@110.ops[1]: 'l-store-copy index%0#0 0'
debug: Replaced main_for_body@110.ops[63]: 'v-load index%0#0' with 'l-load index%0#0'
debug: Inserted main_after_for@111.ops[7]: 'l-store-copy eq%2#0 0'
debug: Replaced main_after_for@111.ops[9]: 'v-load eq%2#0' with 'l-load eq%2#0'
debug: Inserted main_after_for@111.ops[18]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced main_after_for@111.ops[20]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted main_after_for@111.ops[23]: 'l-store-copy aggregate%array_length%4#0 0'
debug: Replaced main_after_for@111.ops[25]: 'v-load aggregate%array_length%4#0' with 'l-load aggregate%array_length%4#0'
debug: Inserted main_after_for@111.ops[3]: 'l-store-copy add%2#0 0'
debug: Replaced main_after_for@111.ops[6]: 'v-load add%2#0' with 'l-load add%2#0'
debug: Inserted main_after_for@111.ops[13]: 'l-store-copy struct#0 0'
debug: Replaced main_after_for@111.ops[16]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted main_after_for@111.ops[15]: 'l-store-copy aggregate%len%2#0 1'
debug: Replaced main_after_for@111.ops[19]: 'v-load aggregate%len%2#0' with 'l-load aggregate%len%2#0'
debug: Inserted main_after_for@111.ops[24]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced main_after_for@111.ops[33]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted main_after_for@111.ops[6]: 'l-store-copy aggregate%extract_uint16%1#0 1'
debug: Replaced main_after_for@111.ops[19]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted main_for_header@112.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@112.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@113.ops[7]: 'l-store-copy item_offset%1#0 0'
debug: Replaced main_for_body@113.ops[9]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted main_for_body@113.ops[12]: 'l-store-copy offset_is_correct%1#0 0'
debug: Replaced main_for_body@113.ops[14]: 'v-load offset_is_correct%1#0' with 'l-load offset_is_correct%1#0'
debug: Inserted main_for_body@113.ops[44]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced main_for_body@113.ops[46]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted main_for_body@113.ops[49]: 'l-store-copy extract_uint16%3#0 0'
debug: Replaced main_for_body@113.ops[51]: 'v-load extract_uint16%3#0' with 'l-load extract_uint16%3#0'
debug: Inserted main_for_body@113.ops[54]: 'l-store-copy eq%3#0 0'
debug: Replaced main_for_body@113.ops[56]: 'v-load eq%3#0' with 'l-load eq%3#0'
debug: Inserted main_for_body@113.ops[65]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced main_for_body@113.ops[67]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted main_for_body@113.ops[70]: 'l-store-copy aggregate%array_length%7#0 0'
debug: Replaced main_for_body@113.ops[72]: 'v-load aggregate%array_length%7#0' with 'l-load aggregate%array_length%7#0'
debug: Inserted main_for_body@113.ops[3]: 'l-store-copy head_offset_bytes%1#0 0'
debug: Replaced main_for_body@113.ops[6]: 'v-load head_offset_bytes%1#0' with 'l-load head_offset_bytes%1#0'
debug: Inserted main_for_body@113.ops[20]: 'l-store-copy aggregate%next_index%0#0 0'
debug: Replaced main_for_body@113.ops[23]: 'v-load aggregate%next_index%0#0' with 'l-load aggregate%next_index%0#0'
debug: Inserted main_for_body@113.ops[32]: 'l-store-copy aggregate%next_item_offset_offset%0#0 0'
debug: Replaced main_for_body@113.ops[35]: 'v-load aggregate%next_item_offset_offset%0#0' with 'l-load aggregate%next_item_offset_offset%0#0'
debug: Inserted main_for_body@113.ops[37]: 'l-store-copy aggregate%next_item_offset%0#0 0'
debug: Replaced main_for_body@113.ops[40]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted main_for_body@113.ops[43]: 'l-store-copy aggregate%end_offset%0#0 0'
debug: Replaced main_for_body@113.ops[47]: 'v-load aggregate%end_offset%0#0' with 'l-load aggregate%end_offset%0#0'
debug: Inserted main_for_body@113.ops[64]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced main_for_body@113.ops[67]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted main_for_body@113.ops[66]: 'l-store-copy aggregate%len%5#0 1'
debug: Replaced main_for_body@113.ops[70]: 'v-load aggregate%len%5#0' with 'l-load aggregate%len%5#0'
debug: Inserted main_for_body@113.ops[24]: 'l-store-copy aggregate%next_index%0#0 1'
debug: Replaced main_for_body@113.ops[30]: 'v-load aggregate%next_index%0#0' with 'l-load aggregate%next_index%0#0'
debug: Inserted main_for_body@113.ops[28]: 'l-store-copy array_data%1#0 1'
debug: Replaced main_for_body@113.ops[36]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted main_for_body@113.ops[77]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced main_for_body@113.ops[86]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted main_for_body@113.ops[30]: 'l-store-copy aggregate%end_of_array%0#0 2'
debug: Replaced main_for_body@113.ops[42]: 'v-load aggregate%end_of_array%0#0' with 'l-load aggregate%end_of_array%0#0'
debug: Inserted main_for_body@113.ops[38]: 'l-store-copy array_data%1#0 2'
debug: Replaced main_for_body@113.ops[49]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted main_for_body@113.ops[56]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced main_for_body@113.ops[68]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted main_for_body@113.ops[62]: 'l-store-copy extract_uint16%3#0 1'
debug: Replaced main_for_body@113.ops[75]: 'v-load extract_uint16%3#0' with 'l-load extract_uint16%3#0'
debug: Inserted main_for_body@113.ops[1]: 'l-store-copy index%1#0 0'
debug: Replaced main_for_body@113.ops[18]: 'v-load index%1#0' with 'l-load index%1#0'
debug: Inserted main_for_body@113.ops[27]: 'l-store-copy aggregate%has_next%0#0 1'
debug: Replaced main_for_body@113.ops[47]: 'v-load aggregate%has_next%0#0' with 'l-load aggregate%has_next%0#0'
debug: Inserted main_for_body@113.ops[7]: 'l-store-copy array_data%1#0 2'
debug: Replaced main_for_body@113.ops[30]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted main_for_body@113.ops[13]: 'l-store-copy item_offset%1#0 2'
debug: Replaced main_for_body@113.ops[54]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted main_for_header@114.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@114.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@115.ops[7]: 'l-store-copy item_offset%2#0 0'
debug: Replaced main_for_body@115.ops[9]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_for_body@115.ops[12]: 'l-store-copy offset_is_correct%2#0 0'
debug: Replaced main_for_body@115.ops[14]: 'v-load offset_is_correct%2#0' with 'l-load offset_is_correct%2#0'
debug: Inserted main_for_body@115.ops[19]: 'l-store-copy aggregate%item_length%1#0 0'
debug: Replaced main_for_body@115.ops[21]: 'v-load aggregate%item_length%1#0' with 'l-load aggregate%item_length%1#0'
debug: Inserted main_for_body@115.ops[24]: 'l-store-copy aggregate%item_length_in_bytes%1#0 0'
debug: Replaced main_for_body@115.ops[26]: 'v-load aggregate%item_length_in_bytes%1#0' with 'l-load aggregate%item_length_in_bytes%1#0'
debug: Inserted main_for_body@115.ops[34]: 'l-store-copy aggregate%item%1#0 0'
debug: Replaced main_for_body@115.ops[36]: 'v-load aggregate%item%1#0' with 'l-load aggregate%item%1#0'
debug: Inserted main_for_body@115.ops[39]: 'l-store-copy aggregate%array_length%9#0 0'
debug: Replaced main_for_body@115.ops[41]: 'v-load aggregate%array_length%9#0' with 'l-load aggregate%array_length%9#0'
debug: Inserted main_for_body@115.ops[44]: 'l-store-copy mul%1#0 0'
debug: Replaced main_for_body@115.ops[46]: 'v-load mul%1#0' with 'l-load mul%1#0'
debug: Inserted main_for_body@115.ops[3]: 'l-store-copy head_offset_bytes%2#0 0'
debug: Replaced main_for_body@115.ops[6]: 'v-load head_offset_bytes%2#0' with 'l-load head_offset_bytes%2#0'
debug: Inserted main_for_body@115.ops[50]: 'l-store-copy add%3#0 0'
debug: Replaced main_for_body@115.ops[53]: 'v-load add%3#0' with 'l-load add%3#0'
debug: Inserted main_for_body@115.ops[30]: 'l-store-copy aggregate%item_head_tail_length%1#0 0'
debug: Replaced main_for_body@115.ops[34]: 'v-load aggregate%item_head_tail_length%1#0' with 'l-load aggregate%item_head_tail_length%1#0'
debug: Inserted main_for_body@115.ops[11]: 'l-store-copy item_offset%2#0 0'
debug: Replaced main_for_body@115.ops[19]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_for_body@115.ops[6]: 'l-store-copy array_data%2#0 1'
debug: Replaced main_for_body@115.ops[19]: 'v-load array_data%2#0' with 'l-load array_data%2#0'
debug: Inserted main_for_body@115.ops[20]: 'l-store-copy array_data%2#0 1'
debug: Replaced main_for_body@115.ops[35]: 'v-load array_data%2#0' with 'l-load array_data%2#0'
debug: Inserted main_for_body@115.ops[22]: 'l-store-copy item_offset%2#0 2'
debug: Replaced main_for_body@115.ops[37]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_for_body@115.ops[14]: 'l-store-copy num_bytes%3#0 3'
debug: Replaced main_for_body@115.ops[58]: 'v-load num_bytes%3#0' with 'l-load num_bytes%3#0'
debug: Inserted main_for_body@115.ops[1]: 'l-store-copy index%2#0 0'
debug: Replaced main_for_body@115.ops[63]: 'v-load index%2#0' with 'l-load index%2#0'
debug: Inserted main_after_for@116.ops[3]: 'l-store-copy add%4#0 0'
debug: Replaced main_after_for@116.ops[6]: 'v-load add%4#0' with 'l-load add%4#0'
debug: Inserted main_after_for@117.ops[11]: 'l-store-copy eq%4#0 0'
debug: Replaced main_after_for@117.ops[13]: 'v-load eq%4#0' with 'l-load eq%4#0'
debug: Inserted main_after_for@117.ops[18]: 'l-store-copy values%0#0 0'
debug: Replaced main_after_for@117.ops[20]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_after_for@117.ops[23]: 'l-store-copy struct_bytes#0 0'
debug: Replaced main_after_for@117.ops[25]: 'v-load struct_bytes#0' with 'l-load struct_bytes#0'
debug: Inserted main_after_for@117.ops[3]: 'l-store-copy num_bytes%5#0 0'
debug: Replaced main_after_for@117.ops[6]: 'v-load num_bytes%5#0' with 'l-load num_bytes%5#0'
debug: Inserted main_after_for@117.ops[8]: 'l-store-copy add%5#0 0'
debug: Replaced main_after_for@117.ops[11]: 'v-load add%5#0' with 'l-load add%5#0'
debug: Inserted main_after_for@117.ops[29]: 'l-store-copy struct_size#0 0'
debug: Replaced main_after_for@117.ops[32]: 'v-load struct_size#0' with 'l-load struct_size#0'
debug: Inserted main_after_for@117.ops[34]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_after_for@117.ops[37]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_after_for@117.ops[28]: 'l-store-copy struct_bytes#0 0'
debug: Replaced main_after_for@117.ops[47]: 'v-load struct_bytes#0' with 'l-load struct_bytes#0'
debug: Inserted main_nested_write_route@20.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_nested_write_route@20.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_nested_write_route@20.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_nested_write_route@20.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_nested_write_route@20.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_nested_write_route@20.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_nested_write_route@20.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_nested_write_route@20.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_nested_write_route@20.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced main_nested_write_route@20.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_nested_write_route@20.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced main_nested_write_route@20.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_nested_write_route@20.ops[41]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_nested_write_route@20.ops[43]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_nested_write_route@20.ops[53]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_nested_write_route@20.ops[55]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_nested_write_route@20.ops[62]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_nested_write_route@20.ops[64]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_nested_write_route@20.ops[70]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced main_nested_write_route@20.ops[72]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted main_nested_write_route@20.ops[86]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_nested_write_route@20.ops[88]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_nested_write_route@20.ops[99]: 'l-store-copy box%box_extract%2#1 0'
debug: Replaced main_nested_write_route@20.ops[101]: 'v-load box%box_extract%2#1' with 'l-load box%box_extract%2#1'
debug: Inserted main_nested_write_route@20.ops[107]: 'l-store-copy box%index_ok%1#0 0'
debug: Replaced main_nested_write_route@20.ops[109]: 'v-load box%index_ok%1#0' with 'l-load box%index_ok%1#0'
debug: Inserted main_nested_write_route@20.ops[130]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_nested_write_route@20.ops[132]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_nested_write_route@20.ops[142]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_nested_write_route@20.ops[144]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_nested_write_route@20.ops[154]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_nested_write_route@20.ops[156]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_nested_write_route@20.ops[163]: 'l-store-copy box%box_extract%3#1 0'
debug: Replaced main_nested_write_route@20.ops[165]: 'v-load box%box_extract%3#1' with 'l-load box%box_extract%3#1'
debug: Inserted main_nested_write_route@20.ops[176]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced main_nested_write_route@20.ops[178]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted main_nested_write_route@20.ops[184]: 'l-store-copy box%index_ok%2#0 0'
debug: Replaced main_nested_write_route@20.ops[186]: 'v-load box%index_ok%2#0' with 'l-load box%index_ok%2#0'
debug: Inserted main_nested_write_route@20.ops[191]: 'l-store-copy box%add%4#0 0'
debug: Replaced main_nested_write_route@20.ops[193]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted main_nested_write_route@20.ops[201]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced main_nested_write_route@20.ops[203]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted main_nested_write_route@20.ops[209]: 'l-store-copy box%offset%17#0 0'
debug: Replaced main_nested_write_route@20.ops[211]: 'v-load box%offset%17#0' with 'l-load box%offset%17#0'
debug: Inserted main_nested_write_route@20.ops[219]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced main_nested_write_route@20.ops[221]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted main_nested_write_route@20.ops[227]: 'l-store-copy box%index_ok%3#0 0'
debug: Replaced main_nested_write_route@20.ops[229]: 'v-load box%index_ok%3#0' with 'l-load box%index_ok%3#0'
debug: Inserted main_nested_write_route@20.ops[234]: 'l-store-copy box%add%6#0 0'
debug: Replaced main_nested_write_route@20.ops[236]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted main_nested_write_route@20.ops[244]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced main_nested_write_route@20.ops[246]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted main_nested_write_route@20.ops[257]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced main_nested_write_route@20.ops[259]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted main_nested_write_route@20.ops[265]: 'l-store-copy box%index_ok%4#0 0'
debug: Replaced main_nested_write_route@20.ops[267]: 'v-load box%index_ok%4#0' with 'l-load box%index_ok%4#0'
debug: Inserted main_nested_write_route@20.ops[272]: 'l-store-copy box%add%8#0 0'
debug: Replaced main_nested_write_route@20.ops[274]: 'v-load box%add%8#0' with 'l-load box%add%8#0'
debug: Inserted main_nested_write_route@20.ops[66]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced main_nested_write_route@20.ops[69]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted main_nested_write_route@20.ops[78]: 'l-store-copy box%mul%0#0 0'
debug: Replaced main_nested_write_route@20.ops[81]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted main_nested_write_route@20.ops[83]: 'l-store-copy box%add%1#1 0'
debug: Replaced main_nested_write_route@20.ops[86]: 'v-load box%add%1#1' with 'l-load box%add%1#1'
debug: Inserted main_nested_write_route@20.ops[93]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced main_nested_write_route@20.ops[96]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted main_nested_write_route@20.ops[98]: 'l-store-copy box%offset%7#1 0'
debug: Replaced main_nested_write_route@20.ops[101]: 'v-load box%offset%7#1' with 'l-load box%offset%7#1'
debug: Inserted main_nested_write_route@20.ops[108]: 'l-store-copy box%btoi%2#0 0'
debug: Replaced main_nested_write_route@20.ops[111]: 'v-load box%btoi%2#0' with 'l-load box%btoi%2#0'
debug: Inserted main_nested_write_route@20.ops[124]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_nested_write_route@20.ops[127]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_nested_write_route@20.ops[129]: 'l-store-copy box%offset%8#1 0'
debug: Replaced main_nested_write_route@20.ops[132]: 'v-load box%offset%8#1' with 'l-load box%offset%8#1'
debug: Inserted main_nested_write_route@20.ops[175]: 'l-store-copy box%btoi%3#0 0'
debug: Replaced main_nested_write_route@20.ops[178]: 'v-load box%btoi%3#0' with 'l-load box%btoi%3#0'
debug: Inserted main_nested_write_route@20.ops[180]: 'l-store-copy box%offset%16#0 0'
debug: Replaced main_nested_write_route@20.ops[183]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted main_nested_write_route@20.ops[190]: 'l-store-copy box%btoi%4#0 0'
debug: Replaced main_nested_write_route@20.ops[193]: 'v-load box%btoi%4#0' with 'l-load box%btoi%4#0'
debug: Inserted main_nested_write_route@20.ops[207]: 'l-store-copy box%add%5#0 0'
debug: Replaced main_nested_write_route@20.ops[210]: 'v-load box%add%5#0' with 'l-load box%add%5#0'
debug: Inserted main_nested_write_route@20.ops[217]: 'l-store-copy box%btoi%5#0 0'
debug: Replaced main_nested_write_route@20.ops[220]: 'v-load box%btoi%5#0' with 'l-load box%btoi%5#0'
debug: Inserted main_nested_write_route@20.ops[227]: 'l-store-copy box%offset%18#0 0'
debug: Replaced main_nested_write_route@20.ops[230]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted main_nested_write_route@20.ops[237]: 'l-store-copy box%btoi%6#0 0'
debug: Replaced main_nested_write_route@20.ops[240]: 'v-load box%btoi%6#0' with 'l-load box%btoi%6#0'
debug: Inserted main_nested_write_route@20.ops[254]: 'l-store-copy box%add%7#0 0'
debug: Replaced main_nested_write_route@20.ops[257]: 'v-load box%add%7#0' with 'l-load box%add%7#0'
debug: Inserted main_nested_write_route@20.ops[264]: 'l-store-copy box%btoi%7#0 0'
debug: Replaced main_nested_write_route@20.ops[267]: 'v-load box%btoi%7#0' with 'l-load box%btoi%7#0'
debug: Inserted main_nested_write_route@20.ops[269]: 'l-store-copy box%offset%19#0 0'
debug: Replaced main_nested_write_route@20.ops[272]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted main_nested_write_route@20.ops[279]: 'l-store-copy box%btoi%8#0 0'
debug: Replaced main_nested_write_route@20.ops[282]: 'v-load box%btoi%8#0' with 'l-load box%btoi%8#0'
debug: Inserted main_nested_write_route@20.ops[296]: 'l-store-copy box%offset%20#0 0'
debug: Replaced main_nested_write_route@20.ops[299]: 'v-load box%offset%20#0' with 'l-load box%offset%20#0'
debug: Inserted main_nested_write_route@20.ops[45]: 'l-store-copy aggregate%val_as_bytes%15#0 0'
debug: Replaced main_nested_write_route@20.ops[49]: 'v-load aggregate%val_as_bytes%15#0' with 'l-load aggregate%val_as_bytes%15#0'
debug: Inserted main_nested_write_route@20.ops[143]: 'l-store-copy aggregate%val_as_bytes%17#0 0'
debug: Replaced main_nested_write_route@20.ops[147]: 'v-load aggregate%val_as_bytes%17#0' with 'l-load aggregate%val_as_bytes%17#0'
debug: Inserted main_nested_write_route@20.ops[156]: 'l-store-copy aggregate%val_as_bytes%18#0 0'
debug: Replaced main_nested_write_route@20.ops[160]: 'v-load aggregate%val_as_bytes%18#0' with 'l-load aggregate%val_as_bytes%18#0'
debug: Inserted main_nested_write_route@20.ops[32]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_nested_write_route@20.ops[37]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_nested_write_route@20.ops[34]: 'l-store-copy value#2 1'
debug: Replaced main_nested_write_route@20.ops[40]: 'v-load value#2' with 'l-load value#2'
debug: Inserted main_nested_write_route@20.ops[123]: 'l-store-copy box%add%2#1 0'
debug: Replaced main_nested_write_route@20.ops[130]: 'v-load box%add%2#1' with 'l-load box%add%2#1'
debug: Inserted main_nested_write_route@20.ops[72]: 'l-store-copy index#0 1'
debug: Replaced main_nested_write_route@20.ops[80]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_nested_write_route@20.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_nested_write_route@20.ops[22]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_nested_write_route@20.ops[33]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_nested_write_route@20.ops[117]: 'l-store-copy index#0 1'
debug: Replaced main_nested_write_route@20.ops[129]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[43]: 'l-store-copy value#2 0'
debug: Replaced main_nested_write_route@20.ops[56]: 'v-load value#2' with 'l-load value#2'
debug: Inserted main_nested_write_route@20.ops[145]: 'l-store-copy value#2 0'
debug: Replaced main_nested_write_route@20.ops[158]: 'v-load value#2' with 'l-load value#2'
debug: Inserted main_nested_write_route@20.ops[159]: 'l-store-copy value#2 0'
debug: Replaced main_nested_write_route@20.ops[172]: 'v-load value#2' with 'l-load value#2'
debug: Inserted main_nested_write_route@20.ops[218]: 'l-store-copy box%add%4#0 0'
debug: Replaced main_nested_write_route@20.ops[233]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted main_nested_write_route@20.ops[266]: 'l-store-copy box%add%6#0 0'
debug: Replaced main_nested_write_route@20.ops[281]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted main_nested_write_route@20.ops[109]: 'l-store-copy box%offset%7#1 1'
debug: Replaced main_nested_write_route@20.ops[126]: 'v-load box%offset%7#1' with 'l-load box%offset%7#1'
debug: Inserted main_nested_write_route@20.ops[198]: 'l-store-copy box%offset%16#0 1'
debug: Replaced main_nested_write_route@20.ops[214]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted main_nested_write_route@20.ops[247]: 'l-store-copy box%offset%18#0 1'
debug: Replaced main_nested_write_route@20.ops[263]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted main_nested_write_route@20.ops[291]: 'l-store-copy box%offset%19#0 1'
debug: Replaced main_nested_write_route@20.ops[307]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted main_nested_write_route@20.ops[84]: 'l-store-copy index#0 1'
debug: Replaced main_nested_write_route@20.ops[119]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[258]: 'l-store-copy index#0 2'
debug: Replaced main_nested_write_route@20.ops[302]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[209]: 'l-store-copy index#0 2'
debug: Replaced main_nested_write_route@20.ops[258]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[224]: 'l-store-copy box%mul%0#0 3'
debug: Replaced main_nested_write_route@20.ops[274]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted main_nested_write_route@20.ops[17]: 'l-store-copy index#0 0'
debug: Replaced main_nested_write_route@20.ops[75]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[134]: 'l-store-copy index#0 1'
debug: Replaced main_nested_write_route@20.ops[210]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_nested_write_route@20.ops[64]: 'l-store-copy aggregate%val_as_bytes%16#0 1'
debug: Replaced main_nested_write_route@20.ops[147]: 'v-load aggregate%val_as_bytes%16#0' with 'l-load aggregate%val_as_bytes%16#0'
debug: Inserted main_nested_write_route@20.ops[58]: 'l-store-copy value#2 1'
debug: Replaced main_nested_write_route@20.ops[150]: 'v-load value#2' with 'l-load value#2'
debug: Inserted main_nested_write_route@20.ops[93]: 'l-store-copy box%mul%0#0 4'
debug: Replaced main_nested_write_route@20.ops[228]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted main_nested_write_route@20.ops[186]: 'l-store-copy aggregate%val_as_bytes%19#0 2'
debug: Replaced main_nested_write_route@20.ops[329]: 'v-load aggregate%val_as_bytes%19#0' with 'l-load aggregate%val_as_bytes%19#0'
debug: Inserted main_nested_write_route@20.ops[144]: 'l-store-copy box%element_offset%0#0 5'
debug: Replaced main_nested_write_route@20.ops[324]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_nested_read_route@21.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_nested_read_route@21.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_nested_read_route@21.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_nested_read_route@21.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_nested_read_route@21.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_nested_read_route@21.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_nested_read_route@21.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_nested_read_route@21.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_nested_read_route@21.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced main_nested_read_route@21.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_nested_read_route@21.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced main_nested_read_route@21.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_nested_read_route@21.ops[35]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_nested_read_route@21.ops[37]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_nested_read_route@21.ops[39]: 'l-store-copy len%2#0 0'
debug: Replaced main_nested_read_route@21.ops[41]: 'v-load len%2#0' with 'l-load len%2#0'
debug: Inserted main_nested_read_route@21.ops[44]: 'l-store-copy eq%2#0 0'
debug: Replaced main_nested_read_route@21.ops[46]: 'v-load eq%2#0' with 'l-load eq%2#0'
debug: Inserted main_nested_read_route@21.ops[55]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_nested_read_route@21.ops[57]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_nested_read_route@21.ops[64]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_nested_read_route@21.ops[66]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_nested_read_route@21.ops[73]: 'l-store-copy box%box_extract%2#1 0'
debug: Replaced main_nested_read_route@21.ops[75]: 'v-load box%box_extract%2#1' with 'l-load box%box_extract%2#1'
debug: Inserted main_nested_read_route@21.ops[81]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced main_nested_read_route@21.ops[83]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted main_nested_read_route@21.ops[97]: 'l-store-copy box%box_extract%3#1 0'
debug: Replaced main_nested_read_route@21.ops[99]: 'v-load box%box_extract%3#1' with 'l-load box%box_extract%3#1'
debug: Inserted main_nested_read_route@21.ops[110]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced main_nested_read_route@21.ops[112]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted main_nested_read_route@21.ops[118]: 'l-store-copy box%index_ok%1#0 0'
debug: Replaced main_nested_read_route@21.ops[120]: 'v-load box%index_ok%1#0' with 'l-load box%index_ok%1#0'
debug: Inserted main_nested_read_route@21.ops[138]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced main_nested_read_route@21.ops[140]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted main_nested_read_route@21.ops[147]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced main_nested_read_route@21.ops[149]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted main_nested_read_route@21.ops[156]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced main_nested_read_route@21.ops[158]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted main_nested_read_route@21.ops[165]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced main_nested_read_route@21.ops[167]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted main_nested_read_route@21.ops[178]: 'l-store-copy box%box_extract%9#0 0'
debug: Replaced main_nested_read_route@21.ops[180]: 'v-load box%box_extract%9#0' with 'l-load box%box_extract%9#0'
debug: Inserted main_nested_read_route@21.ops[186]: 'l-store-copy box%index_ok%2#0 0'
debug: Replaced main_nested_read_route@21.ops[188]: 'v-load box%index_ok%2#0' with 'l-load box%index_ok%2#0'
debug: Inserted main_nested_read_route@21.ops[193]: 'l-store-copy box%add%4#0 0'
debug: Replaced main_nested_read_route@21.ops[195]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted main_nested_read_route@21.ops[203]: 'l-store-copy box%box_extract%10#0 0'
debug: Replaced main_nested_read_route@21.ops[205]: 'v-load box%box_extract%10#0' with 'l-load box%box_extract%10#0'
debug: Inserted main_nested_read_route@21.ops[211]: 'l-store-copy box%offset%17#0 0'
debug: Replaced main_nested_read_route@21.ops[213]: 'v-load box%offset%17#0' with 'l-load box%offset%17#0'
debug: Inserted main_nested_read_route@21.ops[221]: 'l-store-copy box%box_extract%11#0 0'
debug: Replaced main_nested_read_route@21.ops[223]: 'v-load box%box_extract%11#0' with 'l-load box%box_extract%11#0'
debug: Inserted main_nested_read_route@21.ops[229]: 'l-store-copy box%index_ok%3#0 0'
debug: Replaced main_nested_read_route@21.ops[231]: 'v-load box%index_ok%3#0' with 'l-load box%index_ok%3#0'
debug: Inserted main_nested_read_route@21.ops[249]: 'l-store-copy box%box_extract%12#0 0'
debug: Replaced main_nested_read_route@21.ops[251]: 'v-load box%box_extract%12#0' with 'l-load box%box_extract%12#0'
debug: Inserted main_nested_read_route@21.ops[262]: 'l-store-copy box%box_extract%13#0 0'
debug: Replaced main_nested_read_route@21.ops[264]: 'v-load box%box_extract%13#0' with 'l-load box%box_extract%13#0'
debug: Inserted main_nested_read_route@21.ops[270]: 'l-store-copy box%index_ok%4#0 0'
debug: Replaced main_nested_read_route@21.ops[272]: 'v-load box%index_ok%4#0' with 'l-load box%index_ok%4#0'
debug: Inserted main_nested_read_route@21.ops[290]: 'l-store-copy box%box_extract%14#0 0'
debug: Replaced main_nested_read_route@21.ops[292]: 'v-load box%box_extract%14#0' with 'l-load box%box_extract%14#0'
debug: Inserted main_nested_read_route@21.ops[298]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_nested_read_route@21.ops[300]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_nested_read_route@21.ops[303]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_nested_read_route@21.ops[305]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_nested_read_route@21.ops[308]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_nested_read_route@21.ops[310]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_nested_read_route@21.ops[313]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_nested_read_route@21.ops[315]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_nested_read_route@21.ops[318]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_nested_read_route@21.ops[320]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_nested_read_route@21.ops[326]: 'l-store-copy tmp%8#4 0'
debug: Replaced main_nested_read_route@21.ops[328]: 'v-load tmp%8#4' with 'l-load tmp%8#4'
debug: Inserted main_nested_read_route@21.ops[77]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced main_nested_read_route@21.ops[80]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted main_nested_read_route@21.ops[89]: 'l-store-copy box%mul%0#0 0'
debug: Replaced main_nested_read_route@21.ops[92]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted main_nested_read_route@21.ops[94]: 'l-store-copy box%add%1#1 0'
debug: Replaced main_nested_read_route@21.ops[97]: 'v-load box%add%1#1' with 'l-load box%add%1#1'
debug: Inserted main_nested_read_route@21.ops[104]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced main_nested_read_route@21.ops[107]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted main_nested_read_route@21.ops[109]: 'l-store-copy box%offset%7#1 0'
debug: Replaced main_nested_read_route@21.ops[112]: 'v-load box%offset%7#1' with 'l-load box%offset%7#1'
debug: Inserted main_nested_read_route@21.ops[119]: 'l-store-copy box%btoi%2#0 0'
debug: Replaced main_nested_read_route@21.ops[122]: 'v-load box%btoi%2#0' with 'l-load box%btoi%2#0'
debug: Inserted main_nested_read_route@21.ops[135]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_nested_read_route@21.ops[138]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_nested_read_route@21.ops[140]: 'l-store-copy box%offset%8#1 0'
debug: Replaced main_nested_read_route@21.ops[143]: 'v-load box%offset%8#1' with 'l-load box%offset%8#1'
debug: Inserted main_nested_read_route@21.ops[177]: 'l-store-copy box%btoi%3#0 0'
debug: Replaced main_nested_read_route@21.ops[180]: 'v-load box%btoi%3#0' with 'l-load box%btoi%3#0'
debug: Inserted main_nested_read_route@21.ops[182]: 'l-store-copy box%offset%16#0 0'
debug: Replaced main_nested_read_route@21.ops[185]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted main_nested_read_route@21.ops[192]: 'l-store-copy box%btoi%4#0 0'
debug: Replaced main_nested_read_route@21.ops[195]: 'v-load box%btoi%4#0' with 'l-load box%btoi%4#0'
debug: Inserted main_nested_read_route@21.ops[209]: 'l-store-copy box%add%5#0 0'
debug: Replaced main_nested_read_route@21.ops[212]: 'v-load box%add%5#0' with 'l-load box%add%5#0'
debug: Inserted main_nested_read_route@21.ops[219]: 'l-store-copy box%btoi%5#0 0'
debug: Replaced main_nested_read_route@21.ops[222]: 'v-load box%btoi%5#0' with 'l-load box%btoi%5#0'
debug: Inserted main_nested_read_route@21.ops[229]: 'l-store-copy box%offset%18#0 0'
debug: Replaced main_nested_read_route@21.ops[232]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted main_nested_read_route@21.ops[239]: 'l-store-copy box%btoi%6#0 0'
debug: Replaced main_nested_read_route@21.ops[242]: 'v-load box%btoi%6#0' with 'l-load box%btoi%6#0'
debug: Inserted main_nested_read_route@21.ops[255]: 'l-store-copy box%mul%2#0 0'
debug: Replaced main_nested_read_route@21.ops[258]: 'v-load box%mul%2#0' with 'l-load box%mul%2#0'
debug: Inserted main_nested_read_route@21.ops[260]: 'l-store-copy box%add%7#0 0'
debug: Replaced main_nested_read_route@21.ops[263]: 'v-load box%add%7#0' with 'l-load box%add%7#0'
debug: Inserted main_nested_read_route@21.ops[270]: 'l-store-copy box%btoi%7#0 0'
debug: Replaced main_nested_read_route@21.ops[273]: 'v-load box%btoi%7#0' with 'l-load box%btoi%7#0'
debug: Inserted main_nested_read_route@21.ops[275]: 'l-store-copy box%offset%19#0 0'
debug: Replaced main_nested_read_route@21.ops[278]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted main_nested_read_route@21.ops[285]: 'l-store-copy box%btoi%8#0 0'
debug: Replaced main_nested_read_route@21.ops[288]: 'v-load box%btoi%8#0' with 'l-load box%btoi%8#0'
debug: Inserted main_nested_read_route@21.ops[301]: 'l-store-copy box%element_offset%1#0 0'
debug: Replaced main_nested_read_route@21.ops[304]: 'v-load box%element_offset%1#0' with 'l-load box%element_offset%1#0'
debug: Inserted main_nested_read_route@21.ops[306]: 'l-store-copy box%offset%20#0 0'
debug: Replaced main_nested_read_route@21.ops[309]: 'v-load box%offset%20#0' with 'l-load box%offset%20#0'
debug: Inserted main_nested_read_route@21.ops[344]: 'l-store-copy aggregate%val_as_bytes%20#0 0'
debug: Replaced main_nested_read_route@21.ops[347]: 'v-load aggregate%val_as_bytes%20#0' with 'l-load aggregate%val_as_bytes%20#0'
debug: Inserted main_nested_read_route@21.ops[131]: 'l-store-copy box%add%2#1 0'
debug: Replaced main_nested_read_route@21.ops[138]: 'v-load box%add%2#1' with 'l-load box%add%2#1'
debug: Inserted main_nested_read_route@21.ops[252]: 'l-store-copy box%add%6#0 0'
debug: Replaced main_nested_read_route@21.ops[259]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted main_nested_read_route@21.ops[299]: 'l-store-copy box%add%8#0 0'
debug: Replaced main_nested_read_route@21.ops[306]: 'v-load box%add%8#0' with 'l-load box%add%8#0'
debug: Inserted main_nested_read_route@21.ops[80]: 'l-store-copy i1#0 1'
debug: Replaced main_nested_read_route@21.ops[88]: 'v-load i1#0' with 'l-load i1#0'
debug: Inserted main_nested_read_route@21.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_nested_read_route@21.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_nested_read_route@21.ops[22]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_nested_read_route@21.ops[33]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_nested_read_route@21.ops[40]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_nested_read_route@21.ops[51]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_nested_read_route@21.ops[126]: 'l-store-copy i2#0 1'
debug: Replaced main_nested_read_route@21.ops[138]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted main_nested_read_route@21.ops[295]: 'l-store-copy i3#0 1'
debug: Replaced main_nested_read_route@21.ops[307]: 'v-load i3#0' with 'l-load i3#0'
debug: Inserted main_nested_read_route@21.ops[248]: 'l-store-copy i2#0 1'
debug: Replaced main_nested_read_route@21.ops[261]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted main_nested_read_route@21.ops[213]: 'l-store-copy box%add%4#0 0'
debug: Replaced main_nested_read_route@21.ops[228]: 'v-load box%add%4#0' with 'l-load box%add%4#0'
debug: Inserted main_nested_read_route@21.ops[267]: 'l-store-copy box%add%6#0 1'
debug: Replaced main_nested_read_route@21.ops[282]: 'v-load box%add%6#0' with 'l-load box%add%6#0'
debug: Inserted main_nested_read_route@21.ops[117]: 'l-store-copy box%offset%7#1 1'
debug: Replaced main_nested_read_route@21.ops[134]: 'v-load box%offset%7#1' with 'l-load box%offset%7#1'
debug: Inserted main_nested_read_route@21.ops[193]: 'l-store-copy box%offset%16#0 1'
debug: Replaced main_nested_read_route@21.ops[209]: 'v-load box%offset%16#0' with 'l-load box%offset%16#0'
debug: Inserted main_nested_read_route@21.ops[242]: 'l-store-copy box%offset%18#0 1'
debug: Replaced main_nested_read_route@21.ops[259]: 'v-load box%offset%18#0' with 'l-load box%offset%18#0'
debug: Inserted main_nested_read_route@21.ops[292]: 'l-store-copy box%offset%19#0 1'
debug: Replaced main_nested_read_route@21.ops[309]: 'v-load box%offset%19#0' with 'l-load box%offset%19#0'
debug: Inserted main_nested_read_route@21.ops[332]: 'l-store-copy woah_arr_arr#0 0'
debug: Replaced main_nested_read_route@21.ops[355]: 'v-load woah_arr_arr#0' with 'l-load woah_arr_arr#0'
debug: Inserted main_nested_read_route@21.ops[17]: 'l-store-copy i1#0 0'
debug: Replaced main_nested_read_route@21.ops[83]: 'v-load i1#0' with 'l-load i1#0'
debug: Inserted main_nested_read_route@21.ops[36]: 'l-store-copy i2#0 1'
debug: Replaced main_nested_read_route@21.ops[128]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted main_nested_read_route@21.ops[94]: 'l-store-copy i1#0 2'
debug: Replaced main_nested_read_route@21.ops[205]: 'v-load i1#0' with 'l-load i1#0'
debug: Inserted main_nested_read_route@21.ops[143]: 'l-store-copy i2#0 2'
debug: Replaced main_nested_read_route@21.ops[255]: 'v-load i2#0' with 'l-load i2#0'
debug: Inserted main_nested_read_route@21.ops[100]: 'l-store-copy box%mul%0#0 3'
debug: Replaced main_nested_read_route@21.ops[221]: 'v-load box%mul%0#0' with 'l-load box%mul%0#0'
debug: Inserted main_nested_read_route@21.ops[180]: 'l-store-copy d#0 3'
debug: Replaced main_nested_read_route@21.ops[356]: 'v-load d#0' with 'l-load d#0'
debug: Inserted main_nested_read_route@21.ops[171]: 'l-store-copy c#0 3'
debug: Replaced main_nested_read_route@21.ops[352]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_nested_read_route@21.ops[162]: 'l-store-copy arr_arr#0 3'
debug: Replaced main_nested_read_route@21.ops[348]: 'v-load arr_arr#0' with 'l-load arr_arr#0'
debug: Inserted main_nested_read_route@21.ops[55]: 'l-store-copy i3#0 2'
debug: Replaced main_nested_read_route@21.ops[310]: 'v-load i3#0' with 'l-load i3#0'
debug: Inserted main_nested_read_route@21.ops[74]: 'l-store-copy b#0 3'
debug: Replaced main_nested_read_route@21.ops[345]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_nested_read_route@21.ops[65]: 'l-store-copy a#0 3'
debug: Replaced main_nested_read_route@21.ops[345]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[4]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[6]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[8]: 'l-store-copy values%0#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[10]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[13]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[15]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[21]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[23]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[25]: 'l-store-copy values%1#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[27]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[30]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[32]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[42]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[44]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[28]: 'l-store-copy values%1#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[36]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted main_sum_dynamic_arr_struct_route@22.ops[11]: 'l-store-copy values%0#0 0'
debug: Replaced main_sum_dynamic_arr_struct_route@22.ops[36]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_for_header@97.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@97.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@98.ops[4]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced main_for_body@98.ops[6]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted main_for_body@98.ops[12]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced main_for_body@98.ops[14]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted main_for_body@98.ops[28]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced main_for_body@98.ops[30]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted main_for_body@98.ops[8]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced main_for_body@98.ops[11]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted main_for_body@98.ops[20]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_for_body@98.ops[23]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_for_body@98.ops[25]: 'l-store-copy box%offset%6#0 0'
debug: Replaced main_for_body@98.ops[28]: 'v-load box%offset%6#0' with 'l-load box%offset%6#0'
debug: Inserted main_for_body@98.ops[35]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@98.ops[38]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@98.ops[11]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@98.ops[18]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@98.ops[19]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@98.ops[43]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@99.ops[4]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced main_after_for@99.ops[6]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted main_after_for@99.ops[13]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced main_after_for@99.ops[15]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted main_after_for@99.ops[8]: 'l-store-copy box%btoi%1#0 0'
debug: Replaced main_after_for@99.ops[11]: 'v-load box%btoi%1#0' with 'l-load box%btoi%1#0'
debug: Inserted main_for_header@100.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@100.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@101.ops[4]: 'l-store-copy box%box_extract%9#0 0'
debug: Replaced main_for_body@101.ops[6]: 'v-load box%box_extract%9#0' with 'l-load box%box_extract%9#0'
debug: Inserted main_for_body@101.ops[8]: 'l-store-copy box%btoi%2#0 0'
debug: Replaced main_for_body@101.ops[10]: 'v-load box%btoi%2#0' with 'l-load box%btoi%2#0'
debug: Inserted main_for_body@101.ops[26]: 'l-store-copy box%box_extract%10#0 0'
debug: Replaced main_for_body@101.ops[28]: 'v-load box%box_extract%10#0' with 'l-load box%box_extract%10#0'
debug: Inserted main_for_body@101.ops[17]: 'l-store-copy box%element_offset%1#0 0'
debug: Replaced main_for_body@101.ops[20]: 'v-load box%element_offset%1#0' with 'l-load box%element_offset%1#0'
debug: Inserted main_for_body@101.ops[22]: 'l-store-copy box%offset%9#0 0'
debug: Replaced main_for_body@101.ops[25]: 'v-load box%offset%9#0' with 'l-load box%offset%9#0'
debug: Inserted main_for_body@101.ops[32]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@101.ops[35]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@101.ops[13]: 'l-store-copy box%add%3#0 0'
debug: Replaced main_for_body@101.ops[20]: 'v-load box%add%3#0' with 'l-load box%add%3#0'
debug: Inserted main_for_body@101.ops[16]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced main_for_body@101.ops[40]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_after_for@102.ops[6]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_after_for@102.ops[8]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_after_for@102.ops[2]: 'l-store-copy aggregate%val_as_bytes%21#0 0'
debug: Replaced main_after_for@102.ops[5]: 'v-load aggregate%val_as_bytes%21#0' with 'l-load aggregate%val_as_bytes%21#0'
debug: Inserted main_set_bool_route@24.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_bool_route@24.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_bool_route@24.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_set_bool_route@24.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_set_bool_route@24.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_set_bool_route@24.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_set_bool_route@24.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_set_bool_route@24.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_set_bool_route@24.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced main_set_bool_route@24.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_set_bool_route@24.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced main_set_bool_route@24.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_set_bool_route@24.ops[51]: 'l-store-copy aggregate%lt%0#0 0'
debug: Replaced main_set_bool_route@24.ops[53]: 'v-load aggregate%lt%0#0' with 'l-load aggregate%lt%0#0'
debug: Inserted main_set_bool_route@24.ops[59]: 'l-store-copy aggregate%updated_target%0#0 0'
debug: Replaced main_set_bool_route@24.ops[63]: 'v-load aggregate%updated_target%0#0' with 'l-load aggregate%updated_target%0#0'
debug: Inserted main_set_bool_route@24.ops[36]: 'l-store-copy index#0 0'
debug: Replaced main_set_bool_route@24.ops[40]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_set_bool_route@24.ops[39]: 'l-store-copy box%element_byte_offset%0#0 1'
debug: Replaced main_set_bool_route@24.ops[46]: 'v-load box%element_byte_offset%0#0' with 'l-load box%element_byte_offset%0#0'
debug: Inserted main_set_bool_route@24.ops[44]: 'l-store-copy box%element_bit_offset%0#0 1'
debug: Replaced main_set_bool_route@24.ops[51]: 'v-load box%element_bit_offset%0#0' with 'l-load box%element_bit_offset%0#0'
debug: Inserted main_set_bool_route@24.ops[50]: 'l-store-copy box%box_extract%0#0 1'
debug: Replaced main_set_bool_route@24.ops[59]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_set_bool_route@24.ops[53]: 'l-store-copy box%element_bit_offset%0#0 1'
debug: Replaced main_set_bool_route@24.ops[61]: 'v-load box%element_bit_offset%0#0' with 'l-load box%element_bit_offset%0#0'
debug: Inserted main_set_bool_route@24.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_set_bool_route@24.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_set_bool_route@24.ops[22]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_set_bool_route@24.ops[33]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_set_bool_route@24.ops[17]: 'l-store-copy index#0 0'
debug: Replaced main_set_bool_route@24.ops[38]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_set_bool_route@24.ops[51]: 'l-store-copy box%element_byte_offset%0#0 2'
debug: Replaced main_set_bool_route@24.ops[71]: 'v-load box%element_byte_offset%0#0' with 'l-load box%element_byte_offset%0#0'
debug: Inserted main_set_bool_route@24.ops[37]: 'l-store-copy value#6 1'
debug: Replaced main_set_bool_route@24.ops[67]: 'v-load value#6' with 'l-load value#6'
debug: Inserted main_sum_bools_route@25.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_sum_bools_route@25.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_sum_bools_route@25.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_sum_bools_route@25.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_sum_bools_route@25.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_sum_bools_route@25.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_sum_bools_route@25.ops[21]: 'l-store-copy aggregate%box_get%11#0 1'
debug: Replaced main_sum_bools_route@25.ops[24]: 'v-load aggregate%box_get%11#0' with 'l-load aggregate%box_get%11#0'
debug: Inserted main_sum_bools_route@25.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_sum_bools_route@25.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_for_header@84.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@84.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@85.ops[12]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_for_body@85.ops[14]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_for_body@85.ops[17]: 'l-store-copy value#6 0'
debug: Replaced main_for_body@85.ops[19]: 'v-load value#6' with 'l-load value#6'
debug: Inserted main_for_body@85.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@85.ops[5]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_body@85.ops[4]: 'l-store-copy box%element_byte_offset%0#0 1'
debug: Replaced main_for_body@85.ops[11]: 'v-load box%element_byte_offset%0#0' with 'l-load box%element_byte_offset%0#0'
debug: Inserted main_for_body@85.ops[9]: 'l-store-copy box%element_bit_offset%0#0 1'
debug: Replaced main_for_body@85.ops[18]: 'v-load box%element_bit_offset%0#0' with 'l-load box%element_bit_offset%0#0'
debug: Inserted main_after_if_else@87.ops[3]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_after_if_else@87.ops[5]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_after_for@90.ops[6]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_after_for@90.ops[8]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_after_for@90.ops[2]: 'l-store-copy aggregate%val_as_bytes%22#0 0'
debug: Replaced main_after_for@90.ops[5]: 'v-load aggregate%val_as_bytes%22#0' with 'l-load aggregate%val_as_bytes%22#0'
debug: Inserted main_append_dynamic_box_route@28.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_append_dynamic_box_route@28.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_append_dynamic_box_route@28.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_append_dynamic_box_route@28.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_append_dynamic_box_route@28.ops[21]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[23]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_append_dynamic_box_route@28.ops[25]: 'l-store-copy arr_len#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[27]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_append_dynamic_box_route@28.ops[30]: 'l-store-copy tmp%1#8 0'
debug: Replaced main_append_dynamic_box_route@28.ops[32]: 'v-load tmp%1#8' with 'l-load tmp%1#8'
debug: Inserted main_append_dynamic_box_route@28.ops[44]: 'l-store-copy value_internal%0#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[46]: 'v-load value_internal%0#0' with 'l-load value_internal%0#0'
debug: Inserted main_append_dynamic_box_route@28.ops[35]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[38]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_append_dynamic_box_route@28.ops[40]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_append_dynamic_box_route@28.ops[43]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_append_dynamic_box_route@28.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_append_dynamic_box_route@28.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_append_dynamic_box_route@28.ops[17]: 'l-store-copy times#0 0'
debug: Replaced main_append_dynamic_box_route@28.ops[30]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_for_header@75.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@75.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@76.ops[22]: 'l-store-copy value_internal%0#0 0'
debug: Replaced main_for_body@76.ops[24]: 'v-load value_internal%0#0' with 'l-load value_internal%0#0'
debug: Inserted main_for_body@76.ops[6]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_for_body@76.ops[9]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_for_body@76.ops[11]: 'l-store-copy box%offset%2#0 0'
debug: Replaced main_for_body@76.ops[14]: 'v-load box%offset%2#0' with 'l-load box%offset%2#0'
debug: Inserted main_for_body@76.ops[2]: 'l-store-copy aggregate%val_as_bytes%23#0 0'
debug: Replaced main_for_body@76.ops[16]: 'v-load aggregate%val_as_bytes%23#0' with 'l-load aggregate%val_as_bytes%23#0'
debug: Inserted main_for_body@76.ops[5]: 'l-store-copy arr_len#0 1'
debug: Replaced main_for_body@76.ops[19]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_for_body@76.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@76.ops[24]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@77.ops[2]: 'l-store-copy aggregate%val_as_bytes%24#0 0'
debug: Replaced main_after_for@77.ops[4]: 'v-load aggregate%val_as_bytes%24#0' with 'l-load aggregate%val_as_bytes%24#0'
debug: Inserted main_after_for@77.ops[6]: 'l-store-copy aggregate%bitlen%5#0 0'
debug: Replaced main_after_for@77.ops[8]: 'v-load aggregate%bitlen%5#0' with 'l-load aggregate%bitlen%5#0'
debug: Inserted main_after_for@77.ops[11]: 'l-store-copy aggregate%no_overflow%5#0 0'
debug: Replaced main_after_for@77.ops[13]: 'v-load aggregate%no_overflow%5#0' with 'l-load aggregate%no_overflow%5#0'
debug: Inserted main_after_for@77.ops[26]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_after_for@77.ops[28]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_after_for@77.ops[30]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced main_after_for@77.ops[32]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted main_after_for@77.ops[38]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_after_for@77.ops[40]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_after_for@77.ops[34]: 'l-store-copy aggregate%val_as_bytes%25#0 0'
debug: Replaced main_after_for@77.ops[37]: 'v-load aggregate%val_as_bytes%25#0' with 'l-load aggregate%val_as_bytes%25#0'
debug: Inserted main_after_for@77.ops[17]: 'l-store-copy aggregate%uint16%5#0 0'
debug: Replaced main_after_for@77.ops[21]: 'v-load aggregate%uint16%5#0' with 'l-load aggregate%uint16%5#0'
debug: Inserted main_after_for@77.ops[5]: 'l-store-copy aggregate%val_as_bytes%24#0 0'
debug: Replaced main_after_for@77.ops[16]: 'v-load aggregate%val_as_bytes%24#0' with 'l-load aggregate%val_as_bytes%24#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_pop_dynamic_box_route@29.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[21]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[23]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[25]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[27]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_pop_dynamic_box_route@29.ops[30]: 'l-store-copy arr_len#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[32]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[34]: 'l-store-copy aggregate%val_as_bytes%26#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[36]: 'v-load aggregate%val_as_bytes%26#0' with 'l-load aggregate%val_as_bytes%26#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[38]: 'l-store-copy aggregate%bitlen%6#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[40]: 'v-load aggregate%bitlen%6#0' with 'l-load aggregate%bitlen%6#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[43]: 'l-store-copy aggregate%no_overflow%6#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[45]: 'v-load aggregate%no_overflow%6#0' with 'l-load aggregate%no_overflow%6#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[69]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[71]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[73]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[75]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[81]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[83]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_pop_dynamic_box_route@29.ops[57]: 'l-store-copy tmp%3#6 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[60]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_pop_dynamic_box_route@29.ops[62]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[65]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[79]: 'l-store-copy aggregate%val_as_bytes%27#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[82]: 'v-load aggregate%val_as_bytes%27#0' with 'l-load aggregate%val_as_bytes%27#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[49]: 'l-store-copy aggregate%uint16%6#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[53]: 'v-load aggregate%uint16%6#0' with 'l-load aggregate%uint16%6#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_pop_dynamic_box_route@29.ops[38]: 'l-store-copy aggregate%val_as_bytes%26#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[49]: 'v-load aggregate%val_as_bytes%26#0' with 'l-load aggregate%val_as_bytes%26#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[17]: 'l-store-copy times#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[30]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_pop_dynamic_box_route@29.ops[35]: 'l-store-copy arr_len#0 0'
debug: Replaced main_pop_dynamic_box_route@29.ops[59]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_sum_dynamic_box_route@30.ops[6]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_sum_dynamic_box_route@30.ops[8]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_for_header@68.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@68.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@69.ops[12]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_for_body@69.ops[14]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_for_body@69.ops[3]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_for_body@69.ops[6]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_for_body@69.ops[8]: 'l-store-copy box%offset%0#1 0'
debug: Replaced main_for_body@69.ops[11]: 'v-load box%offset%0#1' with 'l-load box%offset%0#1'
debug: Inserted main_for_body@69.ops[18]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@69.ops[21]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@69.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@69.ops[25]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@70.ops[6]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_after_for@70.ops[8]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_after_for@70.ops[2]: 'l-store-copy aggregate%val_as_bytes%28#0 0'
debug: Replaced main_after_for@70.ops[5]: 'v-load aggregate%val_as_bytes%28#0' with 'l-load aggregate%val_as_bytes%28#0'
debug: Inserted main_write_dynamic_box_route@31.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_write_dynamic_box_route@31.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_write_dynamic_box_route@31.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_write_dynamic_box_route@31.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_write_dynamic_box_route@31.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_write_dynamic_box_route@31.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_write_dynamic_box_route@31.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_write_dynamic_box_route@31.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_write_dynamic_box_route@31.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced main_write_dynamic_box_route@31.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_write_dynamic_box_route@31.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced main_write_dynamic_box_route@31.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_write_dynamic_box_route@31.ops[34]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_write_dynamic_box_route@31.ops[37]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_write_dynamic_box_route@31.ops[39]: 'l-store-copy box%offset%0#1 0'
debug: Replaced main_write_dynamic_box_route@31.ops[42]: 'v-load box%offset%0#1' with 'l-load box%offset%0#1'
debug: Inserted main_write_dynamic_box_route@31.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_write_dynamic_box_route@31.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_write_dynamic_box_route@31.ops[17]: 'l-store-copy index#0 0'
debug: Replaced main_write_dynamic_box_route@31.ops[33]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_write_dynamic_box_route@31.ops[23]: 'l-store-copy tmp%2#1 1'
debug: Replaced main_write_dynamic_box_route@31.ops[46]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[22]: 'l-store-copy len%1#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[24]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[27]: 'l-store-copy eq%1#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[29]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[35]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[37]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[43]: 'l-store-copy box%index_ok%0#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[45]: 'v-load box%index_ok%0#0' with 'l-load box%index_ok%0#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[39]: 'l-store-copy box%btoi%0#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[42]: 'v-load box%btoi%0#0' with 'l-load box%btoi%0#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[51]: 'l-store-copy box%element_offset%0#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[54]: 'v-load box%element_offset%0#0' with 'l-load box%element_offset%0#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[56]: 'l-store-copy box%offset%1#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[59]: 'v-load box%offset%1#0' with 'l-load box%offset%1#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[42]: 'l-store-copy index#0 1'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[49]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[17]: 'l-store-copy index#0 0'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[43]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_write_dynamic_arr_struct_route@32.ops[23]: 'l-store-copy tmp%2#1 1'
debug: Replaced main_write_dynamic_arr_struct_route@32.ops[64]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_slice_box_route@33.ops[9]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_slice_box_route@33.ops[11]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_slice_box_route@33.ops[24]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_slice_box_route@33.ops[26]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_slice_box_route@33.ops[34]: 'l-store-copy tmp%7#3 0'
debug: Replaced main_slice_box_route@33.ops[36]: 'v-load tmp%7#3' with 'l-load tmp%7#3'
debug: Inserted main_slice_box_route@33.ops[39]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_slice_box_route@33.ops[41]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_slice_box_route@33.ops[70]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_slice_box_route@33.ops[72]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_slice_box_route@33.ops[80]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_slice_box_route@33.ops[82]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_slice_box_route@33.ops[85]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_slice_box_route@33.ops[87]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_slice_box_route@33.ops[12]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_slice_box_route@33.ops[14]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_slice_box_route@33.ops[53]: 'l-store-copy tmp%10#2 0'
debug: Replaced main_slice_box_route@33.ops[56]: 'v-load tmp%10#2' with 'l-load tmp%10#2'
debug: Inserted main_slice_box_route@33.ops[19]: 'l-store-copy tmp%0#1 1'
debug: Replaced main_slice_box_route@33.ops[22]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_slice_box_route@33.ops[21]: 'l-store-copy tmp%4#4 1'
debug: Replaced main_slice_box_route@33.ops[25]: 'v-load tmp%4#4' with 'l-load tmp%4#4'
debug: Inserted main_slice_box_route@33.ops[32]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_slice_box_route@33.ops[36]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_slice_box_route@33.ops[60]: 'l-store-copy tmp%10#2 1'
debug: Replaced main_slice_box_route@33.ops[63]: 'v-load tmp%10#2' with 'l-load tmp%10#2'
debug: Inserted main_slice_box_route@33.ops[62]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_slice_box_route@33.ops[66]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_slice_box_route@33.ops[71]: 'l-store-copy tmp%10#2 1'
debug: Replaced main_slice_box_route@33.ops[74]: 'v-load tmp%10#2' with 'l-load tmp%10#2'
debug: Inserted main_slice_box_route@33.ops[73]: 'l-store-copy tmp%14#0 1'
debug: Replaced main_slice_box_route@33.ops[77]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_slice_box_route@33.ops[84]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_slice_box_route@33.ops[88]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_slice_box_route@33.ops[15]: 'l-store-copy tmp%0#1 2'
debug: Replaced main_slice_box_route@33.ops[19]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_slice_box_route@33.ops[32]: 'l-store-copy tmp%3#6 1'
debug: Replaced main_slice_box_route@33.ops[37]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_slice_box_route@33.ops[85]: 'l-store-copy tmp%13#1 1'
debug: Replaced main_slice_box_route@33.ops[90]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_slice_box_route@33.ops[67]: 'l-store-copy tmp%10#2 1'
debug: Replaced main_slice_box_route@33.ops[73]: 'v-load tmp%10#2' with 'l-load tmp%10#2'
debug: Inserted main_slice_box_route@33.ops[17]: 'l-store-copy tmp%3#6 1'
debug: Replaced main_slice_box_route@33.ops[32]: 'v-load tmp%3#6' with 'l-load tmp%3#6'
debug: Inserted main_slice_box_route@33.ops[72]: 'l-store-copy tmp%13#1 1'
debug: Replaced main_slice_box_route@33.ops[87]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_test_box_ref_route@35.ops[6]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_test_box_ref_route@35.ops[8]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_test_box_ref_route@35.ops[13]: 'l-store-copy tmp%4#4 0'
debug: Replaced main_test_box_ref_route@35.ops[15]: 'v-load tmp%4#4' with 'l-load tmp%4#4'
debug: Inserted main_test_box_ref_route@35.ops[45]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_test_box_ref_route@35.ops[47]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_test_box_ref_route@35.ops[54]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_box_ref_route@35.ops[56]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_box_ref_route@35.ops[67]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_box_ref_route@35.ops[69]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_box_ref_route@35.ops[74]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_test_box_ref_route@35.ops[76]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_test_box_ref_route@35.ops[82]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_test_box_ref_route@35.ops[84]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_test_box_ref_route@35.ops[87]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_box_ref_route@35.ops[89]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_box_ref_route@35.ops[104]: 'l-store-copy _%5#0 0'
debug: Replaced main_test_box_ref_route@35.ops[106]: 'v-load _%5#0' with 'l-load _%5#0'
debug: Inserted main_test_box_ref_route@35.ops[109]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_box_ref_route@35.ops[111]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_test_box_ref_route@35.ops[2]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_test_box_ref_route@35.ops[5]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_test_box_ref_route@35.ops[51]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_test_box_ref_route@35.ops[54]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_test_box_ref_route@35.ops[65]: 'l-store-copy exists#0 1'
debug: Replaced main_test_box_ref_route@35.ops[68]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_test_box_ref_route@35.ops[19]: 'l-store-copy sender_bytes#0 0'
debug: Replaced main_test_box_ref_route@35.ops[25]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@35.ops[90]: 'l-store-copy sender_bytes#0 1'
debug: Replaced main_test_box_ref_route@35.ops[96]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@35.ops[99]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_box_ref_route@35.ops[105]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_box_ref_route@35.ops[68]: 'l-store-copy value#3 1'
debug: Replaced main_test_box_ref_route@35.ops[76]: 'v-load value#3' with 'l-load value#3'
debug: Inserted main_test_box_ref_route@35.ops[84]: 'l-store-copy sender_bytes#0 0'
debug: Replaced main_test_box_ref_route@35.ops[91]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@35.ops[77]: 'l-store-copy value#3 0'
debug: Replaced main_test_box_ref_route@35.ops[86]: 'v-load value#3' with 'l-load value#3'
debug: Inserted main_test_box_ref_route@35.ops[43]: 'l-store-copy prefix#0 0'
debug: Replaced main_test_box_ref_route@35.ops[55]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted main_test_box_ref_route@35.ops[22]: 'l-store-copy app_address#0 1'
debug: Replaced main_test_box_ref_route@35.ops[34]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_test_box_ref_route@35.ops[35]: 'l-store-copy app_address#0 3'
debug: Replaced main_test_box_ref_route@35.ops[47]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_test_box_ref_route@35.ops[74]: 'l-store-copy exists#0 1'
debug: Replaced main_test_box_ref_route@35.ops[91]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_test_box_ref_route@35.ops[27]: 'l-store-copy sender_bytes#0 3'
debug: Replaced main_test_box_ref_route@35.ops[49]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@35.ops[50]: 'l-store-copy sender_bytes#0 2'
debug: Replaced main_test_box_ref_route@35.ops[90]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@35.ops[49]: 'l-store-copy app_address#0 2'
debug: Replaced main_test_box_ref_route@35.ops[107]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_box_map_test_route@36.ops[2]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@36.ops[4]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@36.ops[13]: 'l-store-copy value%0#0 0'
debug: Replaced main_box_map_test_route@36.ops[15]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_box_map_test_route@36.ops[18]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_box_map_test_route@36.ops[20]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_box_map_test_route@36.ops[24]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@36.ops[26]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@36.ops[34]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_box_map_test_route@36.ops[36]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_box_map_test_route@36.ops[39]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_box_map_test_route@36.ops[41]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_box_map_test_route@36.ops[49]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_box_map_test_route@36.ops[51]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_box_map_test_route@36.ops[29]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced main_box_map_test_route@36.ops[32]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_box_map_test_route@36.ops[46]: 'l-store-copy exists#0 1'
debug: Replaced main_box_map_test_route@36.ops[49]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_box_map_test_route@36.ops[5]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@36.ops[8]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@36.ops[9]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@36.ops[12]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@36.ops[58]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@36.ops[61]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@36.ops[62]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@36.ops[65]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@36.ops[30]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_box_map_test_route@36.ops[36]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_box_map_test_route@36.ops[48]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@36.ops[59]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@36.ops[29]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@36.ops[48]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_set_route@37.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_set_route@37.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_set_route@37.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_box_map_set_route@37.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_box_map_set_route@37.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_box_map_set_route@37.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_box_map_set_route@37.ops[18]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_box_map_set_route@37.ops[20]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_box_map_set_route@37.ops[23]: 'l-store-copy aggregate%array_length%10#0 0'
debug: Replaced main_box_map_set_route@37.ops[25]: 'v-load aggregate%array_length%10#0' with 'l-load aggregate%array_length%10#0'
debug: Inserted main_box_map_set_route@37.ops[31]: 'l-store-copy len%1#0 0'
debug: Replaced main_box_map_set_route@37.ops[33]: 'v-load len%1#0' with 'l-load len%1#0'
debug: Inserted main_box_map_set_route@37.ops[36]: 'l-store-copy eq%1#0 0'
debug: Replaced main_box_map_set_route@37.ops[38]: 'v-load eq%1#0' with 'l-load eq%1#0'
debug: Inserted main_box_map_set_route@37.ops[45]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_set_route@37.ops[47]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_set_route@37.ops[48]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_set_route@37.ops[51]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_set_route@37.ops[28]: 'l-store-copy add%0#0 0'
debug: Replaced main_box_map_set_route@37.ops[35]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted main_box_map_set_route@37.ops[21]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_box_map_set_route@37.ops[31]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_box_map_set_route@37.ops[44]: 'l-store-copy value#0 0'
debug: Replaced main_box_map_set_route@37.ops[55]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_box_map_set_route@37.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_set_route@37.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_set_route@37.ops[33]: 'l-store-copy tmp%2#1 1'
debug: Replaced main_box_map_set_route@37.ops[44]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_box_map_set_route@37.ops[17]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_set_route@37.ops[49]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_get_route@38.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_get_route@38.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_get_route@38.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_box_map_get_route@38.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_box_map_get_route@38.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_box_map_get_route@38.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_box_map_get_route@38.ops[16]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_get_route@38.ops[18]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_get_route@38.ops[20]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_get_route@38.ops[22]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_get_route@38.ops[30]: 'l-store-copy aggregate%length%4#0 0'
debug: Replaced main_box_map_get_route@38.ops[32]: 'v-load aggregate%length%4#0' with 'l-load aggregate%length%4#0'
debug: Inserted main_box_map_get_route@38.ops[34]: 'l-store-copy aggregate%as_bytes%10#0 0'
debug: Replaced main_box_map_get_route@38.ops[36]: 'v-load aggregate%as_bytes%10#0' with 'l-load aggregate%as_bytes%10#0'
debug: Inserted main_box_map_get_route@38.ops[38]: 'l-store-copy aggregate%length_uint16%4#0 0'
debug: Replaced main_box_map_get_route@38.ops[40]: 'v-load aggregate%length_uint16%4#0' with 'l-load aggregate%length_uint16%4#0'
debug: Inserted main_box_map_get_route@38.ops[47]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_box_map_get_route@38.ops[49]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_box_map_get_route@38.ops[24]: 'l-store-copy aggregate%box_get%23#0 1'
debug: Replaced main_box_map_get_route@38.ops[27]: 'v-load aggregate%box_get%23#0' with 'l-load aggregate%box_get%23#0'
debug: Inserted main_box_map_get_route@38.ops[44]: 'l-store-copy aggregate%encoded_value%4#0 0'
debug: Replaced main_box_map_get_route@38.ops[47]: 'v-load aggregate%encoded_value%4#0' with 'l-load aggregate%encoded_value%4#0'
debug: Inserted main_box_map_get_route@38.ops[26]: 'l-store-copy aggregate%box_get%22#0 1'
debug: Replaced main_box_map_get_route@38.ops[30]: 'v-load aggregate%box_get%22#0' with 'l-load aggregate%box_get%22#0'
debug: Inserted main_box_map_get_route@38.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_get_route@38.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_get_route@38.ops[32]: 'l-store-copy aggregate%box_get%22#0 0'
debug: Replaced main_box_map_get_route@38.ops[45]: 'v-load aggregate%box_get%22#0' with 'l-load aggregate%box_get%22#0'
debug: Inserted main_box_map_del_route@39.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_del_route@39.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_del_route@39.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_box_map_del_route@39.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_box_map_del_route@39.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_box_map_del_route@39.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_box_map_del_route@39.ops[16]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_del_route@39.ops[18]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_del_route@39.ops[20]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_del_route@39.ops[22]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_del_route@39.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_del_route@39.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_exists_route@40.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_exists_route@40.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_box_map_exists_route@40.ops[5]: 'l-store-copy len%0#0 0'
debug: Replaced main_box_map_exists_route@40.ops[7]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_box_map_exists_route@40.ops[10]: 'l-store-copy eq%0#0 0'
debug: Replaced main_box_map_exists_route@40.ops[12]: 'v-load eq%0#0' with 'l-load eq%0#0'
debug: Inserted main_box_map_exists_route@40.ops[16]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_exists_route@40.ops[18]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_exists_route@40.ops[20]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_exists_route@40.ops[22]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_exists_route@40.ops[34]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_box_map_exists_route@40.ops[36]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_box_map_exists_route@40.ops[30]: 'l-store-copy aggregate%encoded_bool%1#0 0'
debug: Replaced main_box_map_exists_route@40.ops[33]: 'v-load aggregate%encoded_bool%1#0' with 'l-load aggregate%encoded_bool%1#0'
debug: Inserted main_box_map_exists_route@40.ops[24]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_box_map_exists_route@40.ops[29]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_box_map_exists_route@40.ops[4]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_box_map_exists_route@40.ops[15]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main___algopy_default_create@44.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main___algopy_default_create@44.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main___algopy_default_create@44.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@44.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@44.ops[15]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@44.ops[17]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@44.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@44.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@44.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main___algopy_default_create@44.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Found 24 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: algopy.arc4.ARC4Contract.approval_program f-stack entry: ['array_data%0#0', 'array_data%1#0', 'array_data%2#0', 'struct#0', 'add%2#0', 'aggregate%array_length%2#0', 'aggregate%array_length%4#0', 'aggregate%array_length%7#0', 'aggregate%extract_uint16%1#0', 'aggregate%len%2#0', 'aggregate%next_index%0#0', 'arr_len#0', 'box%array_length%0#0', 'box%array_length%1#0', 'i#0', 'index%0#0', 'index%1#0', 'index%2#0', 'item_index_internal%0#0', 'item_index_internal%1#0', 'num_bytes%0#0', 'num_bytes%2#0', 'num_bytes%3#0', 'stop_at_total#0', 'times#0', 'total#0']
debug: algopy.arc4.ARC4Contract.approval_program f-stack on first store: []
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_if_else@43 into main
debug: inlining single reference block main_for_body@69 into main_for_header@68
debug: inlining single reference block main_for_body@76 into main_for_header@75
debug: inlining single reference block main_for_body@85 into main_for_header@84
debug: inlining single reference block main_if_body@86 into main_for_header@84
debug: inlining single reference block main_after_if_else@89 into main_after_if_else@87
debug: inlining single reference block main_for_body@98 into main_for_header@97
debug: inlining single reference block main_for_body@101 into main_for_header@100
debug: inlining single reference block main_for_body@110 into main_for_header@109
debug: inlining single reference block main_for_body@113 into main_for_header@112
debug: inlining single reference block main_for_body@115 into main_for_header@114
debug: inlining single reference block main_for_body@123 into main_for_header@122
debug: inlining single reference block main_while_body@162 into main_while_top@161
debug: inlining single reference block main_for_body@140 into main_for_header@139
debug: removing explicit jump to fall-through block main_for_header@68
debug: removing explicit jump to fall-through block main_for_header@75
debug: removing explicit jump to fall-through block main_for_header@84
debug: removing explicit jump to fall-through block main_after_if_else@87
debug: removing explicit jump to fall-through block main_for_header@97
debug: removing explicit jump to fall-through block main_for_header@100
debug: removing explicit jump to fall-through block main_for_header@109
debug: removing explicit jump to fall-through block main_for_header@112
debug: removing explicit jump to fall-through block main_for_header@114
debug: removing explicit jump to fall-through block main_for_header@122
debug: removing explicit jump to fall-through block main_for_header@139
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing box_storage/out_O2/BoxContract.approval.teal
info: Writing box_storage/out_O2/BoxContract.clear.teal
info: Writing box_storage/out_O2/BoxContract.approval.bin
info: Writing box_storage/out_O2/BoxContract.clear.bin
info: Writing box_storage/out_O2/BoxContract.approval.stats.txt
info: Writing box_storage/out_O2/BoxContract.clear.stats.txt
info: Writing box_storage/out_O2/BoxContract.approval.puya.map
info: Writing box_storage/out_O2/BoxContract.clear.puya.map