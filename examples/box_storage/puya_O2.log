debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['box_storage'], output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
box_storage/contract.py:47:9 warning: expression result is ignored
box_storage/contract.py:178:9 warning: expression result is ignored
box_storage/contract.py:180:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.get_box_value_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_ref_length
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Building IR for function examples.box_storage.contract.BoxContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes
debug: Sealing block@0
box_storage/contract.py:55:9 debug: encountered already materialized expression ('box_a'), reusing result: "box_a"
box_storage/contract.py:65:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:65:46 debug: encountered already materialized expression (reinterpret_cast<bytes>(c)), reusing result: c#0
box_storage/contract.py:66:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:66:40 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:66:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:67:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:67:40 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:67:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:71:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:71:40 debug: encountered already materialized expression (arc4_decode(b, bytes)), reusing result: tmp%45#0
box_storage/contract.py:72:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:72:34 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:72:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:73:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:73:34 debug: encountered already materialized expression (5u), reusing result: 5u
box_storage/contract.py:73:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:74:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:74:35 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:74:16 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box
debug: Sealing block@0
box_storage/contract.py:119:16 debug: encountered already materialized expression (box_0), reusing result: box_0#0
box_storage/contract.py:119:28 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:119:30 debug: encountered already materialized expression (7u), reusing result: 7u
box_storage/contract.py:119:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(box_0)[0]), 0u, 0u < SINGLE_EVAL(id=0))), reusing result: tmp%3#0
box_storage/contract.py:122:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:122:39 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:122:41 debug: encountered already materialized expression (10u), reusing result: 10u
box_storage/contract.py:122:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(hex<"424F585F43">)[0]), 2u, 2u < SINGLE_EVAL(id=0))), reusing result: tmp%12#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking trivial method examples.box_storage.contract.BoxContract.__init__ as inlineable
debug: marking single-use function examples.box_storage.contract.BoxContract.set_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.check_keys for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.read_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.boxes_exist for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.slice_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.arc4_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.test_box_ref for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_test for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_set for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_get for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_del for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_exists for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: inlining call to examples.box_storage.contract.BoxContract.__init__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:218:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_exists in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:214:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_del in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:210:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_get in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:206:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_set in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:182:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_test in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:134:6 debug: inlining call to examples.box_storage.contract.BoxContract.test_box_ref in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:124:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:115:6 debug: inlining call to examples.box_storage.contract.BoxContract.slice_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:111:6 debug: inlining call to examples.box_storage.contract.BoxContract.boxes_exist in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:98:6 debug: inlining call to examples.box_storage.contract.BoxContract.read_boxes in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:85:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_boxes in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:78:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:41:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_boxes in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%7#0, a#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint8[])%0#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+utf8[])%0#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: storage_value%0#3, b_value#0
debug: selected b_value#0 from equivalence set
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#2, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#1, large_e#0
debug: selected large_e#0 from equivalence set
debug: Found equivalence set: tmp%2#5, tmp%20#0
debug: selected tmp%2#5 from equivalence set
debug: Found equivalence set: tmp%3#5, tmp%21#0
debug: selected tmp%3#5 from equivalence set
debug: Found equivalence set: storage_value%1#1, tmp%22#0
debug: selected storage_value%1#1 from equivalence set
debug: Found equivalence set: tmp%4#4, tmp%23#0
debug: selected tmp%4#4 from equivalence set
debug: Found equivalence set: maybe_exists%0#3, tmp%30#0
debug: selected maybe_exists%0#3 from equivalence set
debug: Found equivalence set: maybe_exists%1#2, tmp%31#0
debug: selected maybe_exists%1#2 from equivalence set
debug: Found equivalence set: maybe_exists%2#2, tmp%32#0
debug: selected maybe_exists%2#2 from equivalence set
debug: Found equivalence set: maybe_exists%3#1, tmp%33#0
debug: selected maybe_exists%3#1 from equivalence set
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: tmp%5#2, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#2, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#2, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#1, value#3
debug: selected value#3 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#1
debug: selected exists#1 from equivalence set
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#2
debug: selected value#2 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: tmp%56#0, key#3
debug: selected key#3 from equivalence set
debug: Found equivalence set: tmp%57#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%62#0, key#2
debug: selected key#2 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%63#0
debug: selected storage_value%0#0 from equivalence set
debug: Found equivalence set: tmp%70#0, key#1
debug: selected key#1 from equivalence set
debug: Found equivalence set: tmp%75#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, tmp%76#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 34 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable large_box_ref#0
debug: Removing unused variable box_0#1
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#1
debug: replacing box_get with box_len because value#2 is unused
debug: Removing unused variable tmp_box_map#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%25#1 0u) to tmp%25#1
debug: Simplified (- tmp%33#1 0u) to tmp%33#1
debug: Simplified (- tmp%53#1 0u) to tmp%53#1
debug: Simplified (- tmp%62#1 0u) to tmp%62#1
debug: Simplified (- tmp%71#1 0u) to tmp%71#1
debug: Simplified (== tmp%8#0 NoOp) to (! tmp%8#0)
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (== a#0 0u) to (! a#0)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (== tmp%26#0 NoOp) to (! tmp%26#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (select tmp%0#4 0u tmp%2#4) to (select tmp%0#4 0u tmp%0#4)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%44#0 NoOp) to (! tmp%44#0)
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Simplified (== tmp%48#0 NoOp) to (! tmp%48#0)
debug: Simplified (concat "" encoded_value%0#4) to encoded_value%0#4
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: Simplified (== tmp%52#0 NoOp) to (! tmp%52#0)
debug: Simplified (concat "" encoded_value%0#3) to encoded_value%0#3
debug: Simplified (== tmp%58#0 NoOp) to (! tmp%58#0)
debug: Simplified (concat "" encoded_value%0#2) to encoded_value%0#2
debug: Simplified (== tmp%66#0 NoOp) to (! tmp%66#0)
debug: Simplified (concat "" encoded_value%0#1) to encoded_value%0#1
debug: Simplified (== tmp%71#0 NoOp) to (! tmp%71#0)
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (== tmp%80#0 0u) to (! tmp%80#0)
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%39#1 0u 1u) to ((extract 0 1) tmp%39#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@17 from switch tmp%79#0 {0u => block@18, * => block@19} to goto_nth [block@18][tmp%79#0] else goto block@19
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@17 from goto_nth [block@18][tmp%79#0] else goto block@19 to goto tmp%79#0 ? block@19 : block@18
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@48 with block@2 in block@49
debug: Merged linear block@48 into block@2
debug: Merged linear block@49 into block@2
debug: Replaced predecessor block@46 with block@3 in block@47
debug: Merged linear block@46 into block@3
debug: Merged linear block@47 into block@3
debug: Replaced predecessor block@44 with block@4 in block@45
debug: Merged linear block@44 into block@4
debug: Merged linear block@45 into block@4
debug: Replaced predecessor block@42 with block@5 in block@43
debug: Merged linear block@42 into block@5
debug: Merged linear block@43 into block@5
debug: Replaced predecessor block@40 with block@6 in block@41
debug: Merged linear block@40 into block@6
debug: Merged linear block@41 into block@6
debug: Replaced predecessor block@38 with block@7 in block@39
debug: Merged linear block@38 into block@7
debug: Merged linear block@39 into block@7
debug: Replaced predecessor block@36 with block@8 in block@37
debug: Merged linear block@36 into block@8
debug: Merged linear block@37 into block@8
debug: Replaced predecessor block@34 with block@9 in block@35
debug: Merged linear block@34 into block@9
debug: Merged linear block@35 into block@9
debug: Replaced predecessor block@32 with block@10 in block@33
debug: Merged linear block@32 into block@10
debug: Merged linear block@33 into block@10
debug: Replaced predecessor block@30 with block@11 in block@31
debug: Merged linear block@30 into block@11
debug: Merged linear block@31 into block@11
debug: Replaced predecessor block@28 with block@12 in block@29
debug: Merged linear block@28 into block@12
debug: Merged linear block@29 into block@12
debug: Replaced predecessor block@26 with block@13 in block@27
debug: Merged linear block@26 into block@13
debug: Merged linear block@27 into block@13
debug: Replaced predecessor block@24 with block@14 in block@25
debug: Merged linear block@24 into block@14
debug: Merged linear block@25 into block@14
debug: Replaced predecessor block@16 with block@15 in block@21
debug: Merged linear block@16 into block@15
debug: Replaced predecessor block@22 with block@18 in block@23
debug: Merged linear block@22 into block@18
debug: Merged linear block@23 into block@18
debug: Replaced predecessor block@20 with block@19 in block@21
debug: Merged linear block@20 into block@19
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@15
debug: Removed empty block: block@19
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%9#4: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=8),)
debug: Replacing redundant declaration let tmp%18#2: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:60:36-50, ir_type=uint64, name='tmp%7', version=4),)
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:60:36-50, ir_type=uint64, name='tmp%7', version=4),)
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:60:36-50, ir_type=uint64, name='tmp%7', version=4),)
debug: Replacing redundant declaration let tmp%39#1: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=8),)
debug: Replacing redundant declaration let tmp%45#1: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=8),)
debug: Replacing redundant declaration let tmp%56#1: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=8),)
debug: Replacing redundant declaration let tmp%65#1: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=8),)
debug: Replacing redundant declaration let tmp%74#1: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=8),)
debug: Replacing redundant declaration let encoded%1#0: Encoded(len+utf8[]) = encode<(len+utf8[])>(0x3432) with copy of existing registers (Register(source_location=box_storage/contract.py:92:38-55, ir_type=Encoded(len+utf8[]), name='encoded%0', version=1),)
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: tmp%0#8, tmp%9#4, tmp%39#1, tmp%45#1, tmp%56#1, tmp%65#1, tmp%74#1
debug: selected tmp%0#8 from equivalence set
debug: Found equivalence set: tmp%7#4, tmp%18#2, length%0#0, length%1#0
debug: selected tmp%7#4 from equivalence set
debug: Found equivalence set: tmp%25#1, tmp%26#1
debug: selected tmp%25#1 from equivalence set
debug: Found equivalence set: tmp%33#1, tmp%34#1
debug: selected tmp%33#1 from equivalence set
debug: Found equivalence set: tmp%53#1, tmp%54#1
debug: selected tmp%53#1 from equivalence set
debug: Found equivalence set: tmp%62#1, tmp%63#1
debug: selected tmp%62#1 from equivalence set
debug: Found equivalence set: tmp%71#1, tmp%72#1
debug: selected tmp%71#1 from equivalence set
debug: Found equivalence set: encoded%0#1, encoded%1#0
debug: selected encoded%0#1 from equivalence set
debug: Found equivalence set: encoded_value%0#4, box_prefixed_key%0#4, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Found equivalence set: encoded_value%0#3, box_prefixed_key%0#3
debug: selected encoded_value%0#3 from equivalence set
debug: Found equivalence set: encoded_value%0#2, box_prefixed_key%0#2
debug: selected encoded_value%0#2 from equivalence set
debug: Found equivalence set: encoded_value%0#1, box_prefixed_key%0#1
debug: selected encoded_value%0#1 from equivalence set
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Copy propagation made 29 modifications
debug: Replacing redundant declaration let tmp%46#1: uint64 = (len tmp%0#8) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=3),)
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#8) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=3),)
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#8) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=3),)
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#8) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=3),)
debug: Found equivalence set: tmp%10#3, tmp%46#1, length%2#0, length%3#0, length%4#0
debug: selected tmp%10#3 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:76:16 debug: box_key "box_large" is known to exist, removing assert
box_storage/contract.py:148:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:173:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:174:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:179:9 debug: box_key "box_ref" is known to exist, removing assert
box_storage/contract.py:191:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:191:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:192:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:197:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:53:16 debug: replacing box read with cached value for key: "b"
box_storage/contract.py:93:23 debug: replacing box read with cached value for key: "box_a"
box_storage/contract.py:169:16 debug: replacing box read with cached value for key: "blob"
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, b_value#0
debug: selected b_value#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%25#0 0u) to tmp%25#0
debug: Simplified (- tmp%33#0 0u) to tmp%33#0
debug: Simplified (- tmp%53#0 0u) to tmp%53#0
debug: Simplified (- tmp%62#0 0u) to tmp%62#0
debug: Simplified (- tmp%71#0 0u) to tmp%71#0
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%39#0 0u 1u) to ((extract 0 1) tmp%39#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%9#0: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%18#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:60:36-50, ir_type=uint64, name='tmp%7', version=0),)
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:60:36-50, ir_type=uint64, name='tmp%7', version=0),)
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:60:36-50, ir_type=uint64, name='tmp%7', version=0),)
debug: Replacing redundant declaration let tmp%39#0: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%45#0: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%56#0: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%65#0: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%74#0: bytes = decode<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:46:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%9#0, tmp%39#0, tmp%45#0, tmp%56#0, tmp%65#0, tmp%74#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tmp%18#0, length%0#0, length%1#0
debug: selected tmp%7#0 from equivalence set
debug: Found equivalence set: tmp%25#0, tmp%26#0
debug: selected tmp%25#0 from equivalence set
debug: Found equivalence set: tmp%33#0, tmp%34#0
debug: selected tmp%33#0 from equivalence set
debug: Found equivalence set: tmp%53#0, tmp%54#0
debug: selected tmp%53#0 from equivalence set
debug: Found equivalence set: tmp%62#0, tmp%63#0
debug: selected tmp%62#0 from equivalence set
debug: Found equivalence set: tmp%71#0, tmp%72#0
debug: selected tmp%71#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Replacing redundant declaration let tmp%46#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:61:36-51, ir_type=uint64, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%10#0, tmp%46#0, length%2#0, length%3#0, length%4#0
debug: selected tmp%10#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:76:16 debug: box_key "box_large" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:53:16 debug: replacing box read with cached value for key: "b"
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded%1#0: Encoded(len+utf8[]) = encode<(len+utf8[])>(0x3432) with copy of existing registers (Register(source_location=box_storage/contract.py:92:38-55, ir_type=Encoded(len+utf8[]), name='encoded%0', version=0),)
debug: Found equivalence set: encoded%0#0, encoded%1#0
debug: selected encoded%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:93:23 debug: replacing box read with cached value for key: "box_a"
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:105:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, large_e#0
debug: selected large_e#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable large_box_ref#0
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1024u 4u) to 4096u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%0#0, reinterpret_biguint%0#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%2#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%2#0, reinterpret_biguint%4#0
debug: selected array_item%2#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%6#0
debug: selected array_item%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:175:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#0, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: value%0#1, tmp%20#0
debug: selected value%0#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable ref#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:148:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:173:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:174:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:230:12 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:179:9 debug: box_key "box_ref" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:169:16 debug: replacing box read with cached value for key: "blob"
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:203:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%8#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: replacing box_get with box_len because value#1 is unused
debug: Removing unused variable tmp_box_map#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#1) to encoded_value%0#1
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:187:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%0#1: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%0#1, box_prefixed_key%0#1, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:191:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:191:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:192:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:197:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b_value#0, storage_value%1#2
debug: selected b_value#0 from equivalence set
debug: Found equivalence set: maybe_value%0#2, maybe_value%3#0
debug: selected maybe_value%0#2 from equivalence set
debug: Found equivalence set: maybe_exists%0#4, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: value#3, maybe_value%1#1
debug: selected value#3 from equivalence set
debug: Found equivalence set: exists#1, maybe_exists%6#0
debug: selected exists#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%1#8
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%0#8
debug: Removing unused variable tmp%1#7
debug: Removing unused variable tmp%2#7
debug: Removing unused variable tmp%3#7
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%0#6
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable _%5#0
debug: Removing unused variable maybe_exists%7#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%51#0
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%3#1
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%55#0
debug: Removing unused variable tmp%61#0
debug: Removing unused variable tmp%69#0
debug: Removing unused variable tmp%74#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@16
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 b_value#0 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:53:15-38, ir_type=uint64, name='array_length%0', version=0),)
debug: Replacing redundant declaration let a#0: uint64 = (btoi maybe_value%0#2) with copy of existing registers (Register(source_location=box_storage/contract.py:90:15-49, ir_type=uint64, name='maybe_value_converted%0', version=0),)
debug: Found equivalence set: array_length%0#0, array_length%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: maybe_value_converted%0#0, a#0
debug: selected a#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b_value#0, storage_value%1#2
debug: selected b_value#0 from equivalence set
debug: Found equivalence set: maybe_value%0#2, maybe_value%3#0
debug: selected maybe_value%0#2 from equivalence set
debug: Found equivalence set: maybe_exists%0#4, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: value#3, maybe_value%1#1
debug: selected value#3 from equivalence set
debug: Found equivalence set: exists#1, maybe_exists%6#0
debug: selected exists#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%1#8
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%0#9
debug: Removing unused variable tmp%1#7
debug: Removing unused variable tmp%2#7
debug: Removing unused variable tmp%3#7
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%0#7
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable _%5#0
debug: Removing unused variable maybe_exists%7#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%51#0
debug: Removing unused variable tmp%0#3
debug: Removing unused variable tmp%3#1
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%55#0
debug: Removing unused variable tmp%61#0
debug: Removing unused variable tmp%69#0
debug: Removing unused variable tmp%74#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@18
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 b_value#0 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:53:15-38, ir_type=uint64, name='array_length%0', version=0),)
debug: Replacing redundant declaration let a#0: uint64 = (btoi maybe_value%0#2) with copy of existing registers (Register(source_location=box_storage/contract.py:90:15-49, ir_type=uint64, name='maybe_value_converted%0', version=0),)
debug: Found equivalence set: array_length%0#0, array_length%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: maybe_value_converted%0#0, a#0
debug: selected a#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:203:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:175:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:105:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b_value#0, storage_value%1#2
debug: selected b_value#0 from equivalence set
debug: Found equivalence set: maybe_value%0#2, maybe_value%3#0
debug: selected maybe_value%0#2 from equivalence set
debug: Found equivalence set: maybe_exists%0#4, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: tmp%0#9, tmp%1#5
debug: selected tmp%0#9 from equivalence set
debug: Found equivalence set: value#3, maybe_value%1#1
debug: selected value#3 from equivalence set
debug: Found equivalence set: exists#1, maybe_exists%6#0
debug: selected exists#1 from equivalence set
debug: Found equivalence set: value%0#3, tmp%20#1
debug: selected value%0#3 from equivalence set
debug: Found equivalence set: storage_value%0#3, tmp%8#1
debug: selected storage_value%0#3 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%1#8
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%0#7
debug: Removing unused variable tmp%1#7
debug: Removing unused variable tmp%2#7
debug: Removing unused variable tmp%3#7
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%0#5
debug: Removing unused variable box#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable _%5#0
debug: Removing unused variable maybe_exists%7#0
debug: Removing unused variable ref#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%51#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%3#1
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable box_map#0
debug: Removing unused variable key#4
debug: Removing unused variable tmp%55#0
debug: Removing unused variable tmp%61#0
debug: Removing unused variable tmp%69#0
debug: Removing unused variable tmp%74#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#6) to encoded_value%0#6
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@26 with block@5 in block@27
debug: Merged linear block@26 into block@5
debug: Merged linear block@27 into block@5
debug: Replaced predecessor block@24 with block@9 in block@25
debug: Merged linear block@24 into block@9
debug: Merged linear block@25 into block@9
debug: Replaced predecessor block@22 with block@10 in block@23
debug: Merged linear block@22 into block@10
debug: Merged linear block@23 into block@10
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 b_value#0 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:53:15-38, ir_type=uint64, name='array_length%0', version=0),)
debug: Replacing redundant declaration let a#0: uint64 = (btoi maybe_value%0#2) with copy of existing registers (Register(source_location=box_storage/contract.py:90:15-49, ir_type=uint64, name='maybe_value_converted%0', version=0),)
debug: Replacing redundant declaration let encoded_value%0#6: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: array_length%0#0, array_length%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: maybe_value_converted%0#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#6, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:230:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:203:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:175:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:105:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#11, tmp%1#5
debug: selected tmp%0#11 from equivalence set
debug: Found equivalence set: value%0#3, tmp%20#1
debug: selected value%0#3 from equivalence set
debug: Found equivalence set: storage_value%0#3, tmp%8#1
debug: selected storage_value%0#3 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Removing unused variable ref#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#4
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== array_length%0#0 array_length%0#0) to 1u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#6) to encoded_value%0#6
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@26 with block@8 in block@27
debug: Merged linear block@26 into block@8
debug: Replaced predecessor block@27 with block@8 in block@21
debug: Merged linear block@27 into block@8
debug: Replaced predecessor block@24 with block@12 in block@25
debug: Merged linear block@24 into block@12
debug: Replaced predecessor block@25 with block@12 in block@21
debug: Merged linear block@25 into block@12
debug: Replaced predecessor block@22 with block@13 in block@23
debug: Merged linear block@22 into block@13
debug: Replaced predecessor block@23 with block@13 in block@21
debug: Merged linear block@23 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%0#6: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:194:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#6, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:230:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Removing unused variable tmp%2#8
debug: Removing unused variable materialized_values%0#0
debug: Removing unused variable b_value#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.box_storage.contract.BoxContract
debug: lowering array IR nodes in clear program of examples.box_storage.contract.BoxContract
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%box_get%0#1, storage_value%2#1
debug: selected aggregate%box_get%0#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#1, aggregate%as_Encoded(len+uint8[])%0#1, tmp%1#6
debug: selected aggregate%encoded_value%0#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#1, aggregate%as_Encoded(len+utf8[])%0#1, encoded%0#1
debug: selected aggregate%encoded_value%1#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%2#1, storage_value%0#4
debug: selected aggregate%box_get%2#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%4#1, storage_value%0#2
debug: selected aggregate%box_get%4#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%6#1, storage_value%1#1
debug: selected aggregate%box_get%6#1 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#1, aggregate%as_Encoded(uint64)%0#1
debug: selected aggregate%val_as_bytes%0#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#1, aggregate%as_Encoded(len+uint8[])%1#1
debug: selected aggregate%encoded_value%2#1 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#1, aggregate%as_Encoded(uint64)%1#1
debug: selected aggregate%val_as_bytes%1#1 from equivalence set
debug: Found equivalence set: aggregate%encoded%4#1, tmp%24#0
debug: selected aggregate%encoded%4#1 from equivalence set
debug: Found equivalence set: aggregate%encoded%6#1, tmp%34#0
debug: selected aggregate%encoded%6#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#1, aggregate%as_Encoded(len+utf8[])%1#1, encoded%0#0
debug: selected aggregate%encoded_value%3#1 from equivalence set
debug: Found equivalence set: aggregate%encoded%11#1, encoded_array%0#0
debug: selected aggregate%encoded%11#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%8#1, storage_value%0#1
debug: selected aggregate%box_get%8#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#1, array_item%0#0
debug: selected aggregate%encoded_element%0#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%10#1, storage_value%1#0
debug: selected aggregate%box_get%10#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#1, array_item%1#0
debug: selected aggregate%encoded_element%1#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%12#1, storage_value%2#0
debug: selected aggregate%box_get%12#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#1, array_item%2#0
debug: selected aggregate%encoded_element%2#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%14#1, storage_value%3#0
debug: selected aggregate%box_get%14#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#1, array_item%3#0
debug: selected aggregate%encoded_element%3#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%16#1, storage_value%0#3
debug: selected aggregate%box_get%16#1 from equivalence set
debug: Found equivalence set: aggregate%box_get%18#1, storage_value%0#0
debug: selected aggregate%box_get%18#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#1, aggregate%as_Encoded(len+utf8[])%2#1, tmp%64#0
debug: selected aggregate%encoded_value%4#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#1, aggregate%as_Encoded(bool8)%0#1, tmp%77#0
debug: selected aggregate%encoded_bool%0#1 from equivalence set
debug: Copy propagation made 29 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%1#1
debug: Removing unused variable aggregate%data_length%1#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) tmp%0#10) to ((extract 2 1) b#0)
debug: Simplified (len 0x3432) to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#1) to 0x0002
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Simplified (len 0x3432) to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#1) to 0x0002
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Simplified (concat 0x aggregate%val_as_bytes%0#1) to aggregate%val_as_bytes%0#1
debug: Simplified (concat 0x aggregate%encoded_value%2#1) to aggregate%encoded_value%2#1
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#1) to 0x0014
debug: Simplified (concat 0x aggregate%encoded_bit%0#1) to aggregate%encoded_bit%0#1
debug: Simplified (concat aggregate%set_bit%2#1 0x) to aggregate%set_bit%2#1
debug: Simplified (len 0x48656c6c6f) to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#1) to 0x0005
debug: Simplified (concat 0x0005 0x48656c6c6f) to 0x000548656c6c6f
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x01) to 0x0001
debug: Simplified (concat 0x0001 0x02) to 0x000102
debug: Simplified (concat 0x000102 0x03) to 0x00010203
debug: Simplified (concat 0x00010203 0x) to 0x00010203
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: Simplified (extract3 aggregate%box_get%8#1 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%box_get%8#1) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%10#1 1u 1u) // on error: index access is out of bounds to ((extract 1 1) aggregate%box_get%10#1) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%12#1 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%box_get%12#1) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%14#1 3u 1u) // on error: index access is out of bounds to ((extract 3 1) aggregate%box_get%14#1) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#1: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=box_storage/contract.py:91:38-62, ir_type=bytes[8], name='aggregate%as_bytes%0', version=1),)
debug: Found equivalence set: aggregate%as_bytes%0#1, aggregate%as_bytes%1#1
debug: selected aggregate%as_bytes%0#1 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#1, aggregate%encoded%0#1
debug: selected aggregate%val_as_bytes%0#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#1, aggregate%tail%0#1
debug: selected aggregate%encoded_value%2#1 from equivalence set
debug: Found equivalence set: aggregate%encoded_bit%0#1, aggregate%encoded%5#1
debug: selected aggregate%encoded_bit%0#1 from equivalence set
debug: Found equivalence set: aggregate%set_bit%2#1, aggregate%encoded%6#1
debug: selected aggregate%set_bit%2#1 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:58:16 debug: box_key "box_a" is known to exist, removing assert
box_storage/contract.py:61:16 debug: box_key "box_d" is known to exist, removing assert
box_storage/contract.py:129:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:130:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:131:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:132:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:190:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:235:12 debug: box_key encoded_value%5#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:129:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:130:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:131:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:132:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:235:12 debug: replacing box read with cached value for key: encoded_value%5#0
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#1
debug: Removing unused variable aggregate%as_bytes%0#1
debug: Removing unused variable aggregate%length_uint16%0#1
debug: Removing unused variable aggregate%encoded_value%0#1
debug: Removing unused variable aggregate%length%1#1
debug: Removing unused variable aggregate%length_uint16%1#1
debug: Removing unused variable aggregate%encoded_value%1#1
debug: Removing unused variable aggregate%as_bytes%3#1
debug: Removing unused variable aggregate%offset_as_uint16%0#1
debug: Removing unused variable aggregate%length%3#1
debug: Removing unused variable aggregate%as_bytes%5#1
debug: Removing unused variable aggregate%length_uint16%3#1
debug: Removing unused variable aggregate%encoded_value%3#1
debug: Removing unused variable aggregate%encoded%7#1
debug: Removing unused variable aggregate%encoded%8#1
debug: Removing unused variable aggregate%encoded%9#1
debug: Removing unused variable aggregate%encoded%10#1
debug: Removing unused variable aggregate%encoded%11#1
debug: Removing unused variable aggregate%box_get%8#1
debug: Removing unused variable aggregate%box_get%9#1
debug: Removing unused variable aggregate%bytes_offset%0#1
debug: Removing unused variable aggregate%box_get%10#1
debug: Removing unused variable aggregate%box_get%11#1
debug: Removing unused variable aggregate%bytes_offset%1#1
debug: Removing unused variable aggregate%box_get%12#1
debug: Removing unused variable aggregate%box_get%13#1
debug: Removing unused variable aggregate%bytes_offset%2#1
debug: Removing unused variable aggregate%box_get%14#1
debug: Removing unused variable aggregate%box_get%15#1
debug: Removing unused variable aggregate%bytes_offset%3#1
debug: Removing unused variable aggregate%box_get%16#1
debug: Removing unused variable aggregate%box_get%17#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) 0x00010203) // on error: index access is out of bounds to 0x00
debug: Simplified (b== 0x00 0x00) to 1u
debug: Simplified ((extract 1 1) 0x00010203) // on error: index access is out of bounds to 0x01
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified ((extract 2 1) 0x00010203) // on error: index access is out of bounds to 0x02
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified ((extract 3 1) 0x00010203) // on error: index access is out of bounds to 0x03
debug: Simplified (b== 0x03 0x03) to 1u
debug: Simplified (== "hello" "hello") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#1
debug: Removing unused variable tmp%0#5
debug: Removing unused variable aggregate%encoded_element%1#1
debug: Removing unused variable tmp%1#3
debug: Removing unused variable aggregate%encoded_element%2#1
debug: Removing unused variable tmp%2#3
debug: Removing unused variable aggregate%encoded_element%3#1
debug: Removing unused variable tmp%3#3
debug: Removing unused variable tmp%9#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing tmp%0#2 with [tmp%0#11, tmp%0#6]
debug: Coalescing tmp%2#0 with [tmp%2#6]
debug: Coalescing tmp%3#0 with [tmp%3#8, tmp%3#4]
debug: Coalescing tmp%4#0 with [tmp%4#6, tmp%4#5, tmp%4#3, tmp%4#2, tmp%4#1]
debug: Coalescing tmp%5#0 with [tmp%5#5, tmp%5#3]
debug: Coalescing a#0 with [a#1]
debug: Coalescing encoded_value%0#0 with [encoded_value%0#5, encoded_value%0#3, encoded_value%0#2, encoded_value%0#1]
debug: Coalescing maybe_value_converted%0#1 with [maybe_value_converted%0#2]
debug: Coalescing value%0#0 with [value%0#2, value%0#1, value%0#3]
debug: Coalescing check%0#0 with [check%0#2, check%0#1, check%0#3]
debug: Coalescing value%1#0 with [value%1#1]
debug: Coalescing check%1#0 with [check%1#1]
debug: Coalescing tmp%6#1 with [tmp%6#5, tmp%6#4]
debug: Coalescing value%2#0 with [value%2#1]
debug: Coalescing check%2#0 with [check%2#1]
debug: Coalescing tmp%8#3 with [tmp%8#4]
debug: Coalescing value%3#0 with [value%3#1]
debug: Coalescing check%3#0 with [check%3#1]
debug: Coalescing tmp%10#0 with [tmp%10#3]
debug: Coalescing tmp%11#2 with [tmp%11#3]
debug: Coalescing tmp%13#0 with [tmp%13#3, tmp%13#2, tmp%13#1]
debug: Coalescing tmp%14#0 with [tmp%14#3, tmp%14#2]
debug: Coalescing tmp%15#1 with [tmp%15#3]
debug: Coalescing tmp%16#0 with [tmp%16#3]
debug: Coalescing tmp%35#0 with [tmp%35#1]
debug: Coalescing tmp%37#0 with [tmp%37#1]
debug: Coalescing tmp%52#0 with [tmp%52#1]
debug: Coalescing tmp%67#0 with [tmp%67#1]
debug: Coalescing tmp%68#0 with [tmp%68#1]
debug: Coalescing tmp%71#0 with [tmp%71#1]
debug: Coalescing examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 with [examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#1, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#2, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#3, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#4, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#5, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#6, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#7, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#8, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#9, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#10, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#11, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#12, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#13, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#14]
debug: Coalescing tmp%0#1 with [tmp%0#12, tmp%0#8, tmp%0#4]
debug: Coalescing tmp%12#0 with [tmp%12#2]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#2]
debug: Coalescing maybe_exists%1#1 with [maybe_exists%1#3, maybe_exists%1#2]
debug: Coalescing tmp%3#2 with [tmp%3#6]
debug: Coalescing maybe_exists%2#1 with [maybe_exists%2#3, maybe_exists%2#2]
debug: Coalescing tmp%5#1 with [tmp%5#4]
debug: Coalescing tmp%17#0 with [tmp%17#2, tmp%17#1]
debug: Coalescing _%0#0 with [_%0#3, _%0#2]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#3, maybe_exists%0#2, maybe_exists%0#1]
debug: Coalescing _%1#0 with [_%1#1]
debug: Coalescing _%2#0 with [_%2#1]
debug: Coalescing _%3#0 with [_%3#1]
debug: Coalescing maybe_exists%3#0 with [maybe_exists%3#1]
debug: Coalescing tmp%1#1 with [tmp%1#4, tmp%1#2]
debug: Coalescing tmp%2#1 with [tmp%2#2]
debug: Coalescing exists#0 with [exists#1]
debug: Coalescing state_get%0#0 with [state_get%0#1]
debug: Coalescing key#0 with [key#3, key#2, key#1]
debug: Coalescing resulted in 203 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 2
debug: Output IR to box_storage/out_O2/BoxContract.ir/BoxContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to box_storage/out_O2/BoxContract.ir/BoxContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_set_boxes_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_set_boxes_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_set_boxes_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_set_boxes_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_set_boxes_route@5.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[17]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted main_set_boxes_route@5.ops[67]: 'l-store-copy maybe_value_converted%0#1 0'
debug: Replaced main_set_boxes_route@5.ops[69]: 'v-load maybe_value_converted%0#1' with 'l-load maybe_value_converted%0#1'
debug: Inserted main_set_boxes_route@5.ops[72]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[74]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_set_boxes_route@5.ops[83]: 'l-store-copy value%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[85]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_set_boxes_route@5.ops[88]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[90]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_set_boxes_route@5.ops[104]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_set_boxes_route@5.ops[106]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_set_boxes_route@5.ops[120]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_set_boxes_route@5.ops[122]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_set_boxes_route@5.ops[134]: 'l-store-copy tmp%11#2 0'
debug: Replaced main_set_boxes_route@5.ops[136]: 'v-load tmp%11#2' with 'l-load tmp%11#2'
debug: Inserted main_set_boxes_route@5.ops[149]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_set_boxes_route@5.ops[151]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_set_boxes_route@5.ops[156]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_set_boxes_route@5.ops[158]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_set_boxes_route@5.ops[179]: 'l-store-copy tmp%20#2 0'
debug: Replaced main_set_boxes_route@5.ops[181]: 'v-load tmp%20#2' with 'l-load tmp%20#2'
debug: Inserted main_set_boxes_route@5.ops[226]: 'l-store-copy tmp%29#1 0'
debug: Replaced main_set_boxes_route@5.ops[228]: 'v-load tmp%29#1' with 'l-load tmp%29#1'
debug: Inserted main_set_boxes_route@5.ops[265]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_set_boxes_route@5.ops[267]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_set_boxes_route@5.ops[280]: 'l-store-copy tmp%40#1 0'
debug: Replaced main_set_boxes_route@5.ops[282]: 'v-load tmp%40#1' with 'l-load tmp%40#1'
debug: Inserted main_set_boxes_route@5.ops[287]: 'l-store-copy tmp%41#1 0'
debug: Replaced main_set_boxes_route@5.ops[289]: 'v-load tmp%41#1' with 'l-load tmp%41#1'
debug: Inserted main_set_boxes_route@5.ops[310]: 'l-store-copy tmp%48#1 0'
debug: Replaced main_set_boxes_route@5.ops[312]: 'v-load tmp%48#1' with 'l-load tmp%48#1'
debug: Inserted main_set_boxes_route@5.ops[357]: 'l-store-copy tmp%58#1 0'
debug: Replaced main_set_boxes_route@5.ops[359]: 'v-load tmp%58#1' with 'l-load tmp%58#1'
debug: Inserted main_set_boxes_route@5.ops[396]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_set_boxes_route@5.ops[398]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_set_boxes_route@5.ops[435]: 'l-store-copy tmp%76#1 0'
debug: Replaced main_set_boxes_route@5.ops[437]: 'v-load tmp%76#1' with 'l-load tmp%76#1'
debug: Inserted main_set_boxes_route@5.ops[442]: 'l-store-copy value%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[444]: 'v-load value%4#0' with 'l-load value%4#0'
debug: Inserted main_set_boxes_route@5.ops[447]: 'l-store-copy tmp%77#1 0'
debug: Replaced main_set_boxes_route@5.ops[449]: 'v-load tmp%77#1' with 'l-load tmp%77#1'
debug: Inserted main_set_boxes_route@5.ops[452]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[454]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_set_boxes_route@5.ops[26]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[29]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_set_boxes_route@5.ops[62]: 'l-store-copy aggregate%box_get%1#1 1'
debug: Replaced main_set_boxes_route@5.ops[65]: 'v-load aggregate%box_get%1#1' with 'l-load aggregate%box_get%1#1'
debug: Inserted main_set_boxes_route@5.ops[78]: 'l-store-copy encoded_value%1#1 0'
debug: Replaced main_set_boxes_route@5.ops[81]: 'v-load encoded_value%1#1' with 'l-load encoded_value%1#1'
debug: Inserted main_set_boxes_route@5.ops[97]: 'l-store-copy check%1#0 1'
debug: Replaced main_set_boxes_route@5.ops[100]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted main_set_boxes_route@5.ops[104]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_set_boxes_route@5.ops[107]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_set_boxes_route@5.ops[115]: 'l-store-copy check%2#0 1'
debug: Replaced main_set_boxes_route@5.ops[118]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted main_set_boxes_route@5.ops[122]: 'l-store-copy tmp%7#4 0'
debug: Replaced main_set_boxes_route@5.ops[125]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[137]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_set_boxes_route@5.ops[140]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[153]: 'l-store-copy extract%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[156]: 'v-load extract%0#0' with 'l-load extract%0#0'
debug: Inserted main_set_boxes_route@5.ops[170]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_set_boxes_route@5.ops[173]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_set_boxes_route@5.ops[180]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_set_boxes_route@5.ops[183]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_set_boxes_route@5.ops[186]: 'l-store-copy extract%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[189]: 'v-load extract%1#0' with 'l-load extract%1#0'
debug: Inserted main_set_boxes_route@5.ops[198]: 'l-store-copy tmp%21#2 0'
debug: Replaced main_set_boxes_route@5.ops[201]: 'v-load tmp%21#2' with 'l-load tmp%21#2'
debug: Inserted main_set_boxes_route@5.ops[208]: 'l-store-copy tmp%24#1 0'
debug: Replaced main_set_boxes_route@5.ops[211]: 'v-load tmp%24#1' with 'l-load tmp%24#1'
debug: Inserted main_set_boxes_route@5.ops[227]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[230]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted main_set_boxes_route@5.ops[237]: 'l-store-copy tmp%28#1 0'
debug: Replaced main_set_boxes_route@5.ops[240]: 'v-load tmp%28#1' with 'l-load tmp%28#1'
debug: Inserted main_set_boxes_route@5.ops[249]: 'l-store-copy tmp%30#1 0'
debug: Replaced main_set_boxes_route@5.ops[252]: 'v-load tmp%30#1' with 'l-load tmp%30#1'
debug: Inserted main_set_boxes_route@5.ops[278]: 'l-store-copy tmp%36#1 0'
debug: Replaced main_set_boxes_route@5.ops[281]: 'v-load tmp%36#1' with 'l-load tmp%36#1'
debug: Inserted main_set_boxes_route@5.ops[294]: 'l-store-copy extract%2#0 0'
debug: Replaced main_set_boxes_route@5.ops[297]: 'v-load extract%2#0' with 'l-load extract%2#0'
debug: Inserted main_set_boxes_route@5.ops[311]: 'l-store-copy tmp%43#1 0'
debug: Replaced main_set_boxes_route@5.ops[314]: 'v-load tmp%43#1' with 'l-load tmp%43#1'
debug: Inserted main_set_boxes_route@5.ops[321]: 'l-store-copy tmp%47#1 0'
debug: Replaced main_set_boxes_route@5.ops[324]: 'v-load tmp%47#1' with 'l-load tmp%47#1'
debug: Inserted main_set_boxes_route@5.ops[327]: 'l-store-copy extract%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[330]: 'v-load extract%3#0' with 'l-load extract%3#0'
debug: Inserted main_set_boxes_route@5.ops[339]: 'l-store-copy tmp%49#1 0'
debug: Replaced main_set_boxes_route@5.ops[342]: 'v-load tmp%49#1' with 'l-load tmp%49#1'
debug: Inserted main_set_boxes_route@5.ops[349]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_set_boxes_route@5.ops[352]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_set_boxes_route@5.ops[368]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[371]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted main_set_boxes_route@5.ops[378]: 'l-store-copy tmp%57#1 0'
debug: Replaced main_set_boxes_route@5.ops[381]: 'v-load tmp%57#1' with 'l-load tmp%57#1'
debug: Inserted main_set_boxes_route@5.ops[390]: 'l-store-copy tmp%59#1 0'
debug: Replaced main_set_boxes_route@5.ops[393]: 'v-load tmp%59#1' with 'l-load tmp%59#1'
debug: Inserted main_set_boxes_route@5.ops[419]: 'l-store-copy tmp%66#1 0'
debug: Replaced main_set_boxes_route@5.ops[422]: 'v-load tmp%66#1' with 'l-load tmp%66#1'
debug: Inserted main_set_boxes_route@5.ops[431]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_set_boxes_route@5.ops[434]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_set_boxes_route@5.ops[460]: 'l-store-copy tmp%75#1 0'
debug: Replaced main_set_boxes_route@5.ops[463]: 'v-load tmp%75#1' with 'l-load tmp%75#1'
debug: Inserted main_set_boxes_route@5.ops[64]: 'l-store-copy aggregate%box_get%0#1 1'
debug: Replaced main_set_boxes_route@5.ops[68]: 'v-load aggregate%box_get%0#1' with 'l-load aggregate%box_get%0#1'
debug: Inserted main_set_boxes_route@5.ops[203]: 'l-store-copy tmp%21#2 1'
debug: Replaced main_set_boxes_route@5.ops[206]: 'v-load tmp%21#2' with 'l-load tmp%21#2'
debug: Inserted main_set_boxes_route@5.ops[205]: 'l-store-copy tmp%23#1 1'
debug: Replaced main_set_boxes_route@5.ops[209]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_set_boxes_route@5.ops[216]: 'l-store-copy tmp%25#1 0'
debug: Replaced main_set_boxes_route@5.ops[220]: 'v-load tmp%25#1' with 'l-load tmp%25#1'
debug: Inserted main_set_boxes_route@5.ops[226]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[230]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted main_set_boxes_route@5.ops[237]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[241]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted main_set_boxes_route@5.ops[259]: 'l-store-copy tmp%30#1 1'
debug: Replaced main_set_boxes_route@5.ops[262]: 'v-load tmp%30#1' with 'l-load tmp%30#1'
debug: Inserted main_set_boxes_route@5.ops[261]: 'l-store-copy tmp%32#1 1'
debug: Replaced main_set_boxes_route@5.ops[265]: 'v-load tmp%32#1' with 'l-load tmp%32#1'
debug: Inserted main_set_boxes_route@5.ops[267]: 'l-store-copy tmp%33#1 0'
debug: Replaced main_set_boxes_route@5.ops[271]: 'v-load tmp%33#1' with 'l-load tmp%33#1'
debug: Inserted main_set_boxes_route@5.ops[277]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[281]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted main_set_boxes_route@5.ops[283]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[287]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted main_set_boxes_route@5.ops[354]: 'l-store-copy tmp%49#1 1'
debug: Replaced main_set_boxes_route@5.ops[357]: 'v-load tmp%49#1' with 'l-load tmp%49#1'
debug: Inserted main_set_boxes_route@5.ops[356]: 'l-store-copy tmp%51#1 1'
debug: Replaced main_set_boxes_route@5.ops[360]: 'v-load tmp%51#1' with 'l-load tmp%51#1'
debug: Inserted main_set_boxes_route@5.ops[367]: 'l-store-copy tmp%53#1 0'
debug: Replaced main_set_boxes_route@5.ops[371]: 'v-load tmp%53#1' with 'l-load tmp%53#1'
debug: Inserted main_set_boxes_route@5.ops[377]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced main_set_boxes_route@5.ops[381]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted main_set_boxes_route@5.ops[388]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced main_set_boxes_route@5.ops[392]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted main_set_boxes_route@5.ops[410]: 'l-store-copy tmp%59#1 1'
debug: Replaced main_set_boxes_route@5.ops[413]: 'v-load tmp%59#1' with 'l-load tmp%59#1'
debug: Inserted main_set_boxes_route@5.ops[412]: 'l-store-copy tmp%61#1 1'
debug: Replaced main_set_boxes_route@5.ops[416]: 'v-load tmp%61#1' with 'l-load tmp%61#1'
debug: Inserted main_set_boxes_route@5.ops[418]: 'l-store-copy tmp%62#1 0'
debug: Replaced main_set_boxes_route@5.ops[422]: 'v-load tmp%62#1' with 'l-load tmp%62#1'
debug: Inserted main_set_boxes_route@5.ops[428]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[432]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted main_set_boxes_route@5.ops[434]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[438]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted main_set_boxes_route@5.ops[456]: 'l-store-copy tmp%68#0 1'
debug: Replaced main_set_boxes_route@5.ops[459]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_set_boxes_route@5.ops[458]: 'l-store-copy tmp%70#1 1'
debug: Replaced main_set_boxes_route@5.ops[462]: 'v-load tmp%70#1' with 'l-load tmp%70#1'
debug: Inserted main_set_boxes_route@5.ops[464]: 'l-store-copy tmp%71#0 0'
debug: Replaced main_set_boxes_route@5.ops[468]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted main_set_boxes_route@5.ops[474]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[478]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted main_set_boxes_route@5.ops[480]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[484]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted main_set_boxes_route@5.ops[135]: 'l-store-copy value%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[141]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted main_set_boxes_route@5.ops[152]: 'l-store-copy tmp%12#3 0'
debug: Replaced main_set_boxes_route@5.ops[158]: 'v-load tmp%12#3' with 'l-load tmp%12#3'
debug: Inserted main_set_boxes_route@5.ops[227]: 'l-store-copy tmp%7#4 1'
debug: Replaced main_set_boxes_route@5.ops[232]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[233]: 'l-store-copy tmp%7#4 2'
debug: Replaced main_set_boxes_route@5.ops[238]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[280]: 'l-store-copy tmp%7#4 1'
debug: Replaced main_set_boxes_route@5.ops[285]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[307]: 'l-store-copy tmp%38#1 0'
debug: Replaced main_set_boxes_route@5.ops[313]: 'v-load tmp%38#1' with 'l-load tmp%38#1'
debug: Inserted main_set_boxes_route@5.ops[382]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_set_boxes_route@5.ops[387]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[388]: 'l-store-copy tmp%10#0 2'
debug: Replaced main_set_boxes_route@5.ops[393]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[435]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_set_boxes_route@5.ops[440]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[482]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_set_boxes_route@5.ops[487]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[19]: 'l-store-copy a#0 0'
debug: Replaced main_set_boxes_route@5.ops[25]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_set_boxes_route@5.ops[46]: 'l-store-copy tmp%0#10 0'
debug: Replaced main_set_boxes_route@5.ops[52]: 'v-load tmp%0#10' with 'l-load tmp%0#10'
debug: Inserted main_set_boxes_route@5.ops[212]: 'l-store-copy tmp%21#2 1'
debug: Replaced main_set_boxes_route@5.ops[218]: 'v-load tmp%21#2' with 'l-load tmp%21#2'
debug: Inserted main_set_boxes_route@5.ops[368]: 'l-store-copy tmp%49#1 1'
debug: Replaced main_set_boxes_route@5.ops[374]: 'v-load tmp%49#1' with 'l-load tmp%49#1'
debug: Inserted main_set_boxes_route@5.ops[102]: 'l-store-copy value%1#0 1'
debug: Replaced main_set_boxes_route@5.ops[110]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted main_set_boxes_route@5.ops[121]: 'l-store-copy value%2#0 1'
debug: Replaced main_set_boxes_route@5.ops[129]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted main_set_boxes_route@5.ops[37]: 'l-store-copy b#0 1'
debug: Replaced main_set_boxes_route@5.ops[45]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_set_boxes_route@5.ops[184]: 'l-store-copy tmp%17#3 0'
debug: Replaced main_set_boxes_route@5.ops[197]: 'v-load tmp%17#3' with 'l-load tmp%17#3'
debug: Inserted main_set_boxes_route@5.ops[341]: 'l-store-copy tmp%44#1 0'
debug: Replaced main_set_boxes_route@5.ops[354]: 'v-load tmp%44#1' with 'l-load tmp%44#1'
debug: Inserted main_set_boxes_route@5.ops[22]: 'l-store-copy b#0 1'
debug: Replaced main_set_boxes_route@5.ops[37]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_set_boxes_route@5.ops[285]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_set_boxes_route@5.ops[305]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_set_boxes_route@5.ops[443]: 'l-store-copy tmp%64#1 0'
debug: Replaced main_set_boxes_route@5.ops[463]: 'v-load tmp%64#1' with 'l-load tmp%64#1'
debug: Inserted main_set_boxes_route@5.ops[491]: 'l-store-copy tmp%73#1 0'
debug: Replaced main_set_boxes_route@5.ops[511]: 'v-load tmp%73#1' with 'l-load tmp%73#1'
debug: Inserted main_set_boxes_route@5.ops[25]: 'l-store-copy c#0 2'
debug: Replaced main_set_boxes_route@5.ops[45]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[233]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_set_boxes_route@5.ops[259]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_set_boxes_route@5.ops[392]: 'l-store-copy tmp%55#1 0'
debug: Replaced main_set_boxes_route@5.ops[418]: 'v-load tmp%55#1' with 'l-load tmp%55#1'
debug: Inserted main_set_boxes_route@5.ops[162]: 'l-store-copy c#0 1'
debug: Replaced main_set_boxes_route@5.ops[194]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[129]: 'l-store-copy c#0 1'
debug: Replaced main_set_boxes_route@5.ops[162]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[251]: 'l-store-copy tmp%7#4 2'
debug: Replaced main_set_boxes_route@5.ops[293]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[411]: 'l-store-copy tmp%10#0 2'
debug: Replaced main_set_boxes_route@5.ops[453]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[460]: 'l-store-copy tmp%10#0 3'
debug: Replaced main_set_boxes_route@5.ops[502]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[191]: 'l-store-copy tmp%7#4 2'
debug: Replaced main_set_boxes_route@5.ops[239]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[258]: 'l-store-copy c#0 3'
debug: Replaced main_set_boxes_route@5.ops[306]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[353]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_set_boxes_route@5.ops[401]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[420]: 'l-store-copy tmp%0#10 3'
debug: Replaced main_set_boxes_route@5.ops[469]: 'v-load tmp%0#10' with 'l-load tmp%0#10'
debug: Inserted main_set_boxes_route@5.ops[470]: 'l-store-copy tmp%0#10 3'
debug: Replaced main_set_boxes_route@5.ops[518]: 'v-load tmp%0#10' with 'l-load tmp%0#10'
debug: Inserted main_set_boxes_route@5.ops[135]: 'l-store-copy tmp%7#4 2'
debug: Replaced main_set_boxes_route@5.ops[191]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_set_boxes_route@5.ops[198]: 'l-store-copy c#0 3'
debug: Replaced main_set_boxes_route@5.ops[259]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[361]: 'l-store-copy tmp%0#10 3'
debug: Replaced main_set_boxes_route@5.ops[422]: 'v-load tmp%0#10' with 'l-load tmp%0#10'
debug: Inserted main_set_boxes_route@5.ops[48]: 'l-store-copy b#0 0'
debug: Replaced main_set_boxes_route@5.ops[110]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_set_boxes_route@5.ops[46]: 'l-store-copy c#0 2'
debug: Replaced main_set_boxes_route@5.ops[130]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[58]: 'l-store-copy tmp%0#10 3'
debug: Replaced main_set_boxes_route@5.ops[149]: 'v-load tmp%0#10' with 'l-load tmp%0#10'
debug: Inserted main_set_boxes_route@5.ops[155]: 'l-store-copy tmp%10#0 3'
debug: Replaced main_set_boxes_route@5.ops[358]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_set_boxes_route@5.ops[150]: 'l-store-copy tmp%0#10 3'
debug: Replaced main_set_boxes_route@5.ops[365]: 'v-load tmp%0#10' with 'l-load tmp%0#10'
debug: Inserted main_set_boxes_route@5.ops[113]: 'l-store-copy b#0 3'
debug: Replaced main_set_boxes_route@5.ops[333]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_check_keys_route@6.ops[1]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_check_keys_route@6.ops[3]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_check_keys_route@6.ops[5]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_check_keys_route@6.ops[7]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_check_keys_route@6.ops[10]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_check_keys_route@6.ops[12]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_check_keys_route@6.ops[15]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_check_keys_route@6.ops[17]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_delete_boxes_route@7.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_delete_boxes_route@7.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_delete_boxes_route@7.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_delete_boxes_route@7.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_delete_boxes_route@7.ops[10]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_delete_boxes_route@7.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_delete_boxes_route@7.ops[26]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced main_delete_boxes_route@7.ops[28]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_delete_boxes_route@7.ops[35]: 'l-store-copy state_get%0#2 0'
debug: Replaced main_delete_boxes_route@7.ops[37]: 'v-load state_get%0#2' with 'l-load state_get%0#2'
debug: Inserted main_delete_boxes_route@7.ops[40]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_delete_boxes_route@7.ops[42]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_delete_boxes_route@7.ops[52]: 'l-store-copy state_get%1#0 0'
debug: Replaced main_delete_boxes_route@7.ops[54]: 'v-load state_get%1#0' with 'l-load state_get%1#0'
debug: Inserted main_delete_boxes_route@7.ops[56]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_delete_boxes_route@7.ops[58]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_delete_boxes_route@7.ops[61]: 'l-store-copy tmp%3#2 0'
debug: Replaced main_delete_boxes_route@7.ops[63]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted main_delete_boxes_route@7.ops[73]: 'l-store-copy state_get%2#0 0'
debug: Replaced main_delete_boxes_route@7.ops[75]: 'v-load state_get%2#0' with 'l-load state_get%2#0'
debug: Inserted main_delete_boxes_route@7.ops[78]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_delete_boxes_route@7.ops[80]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_delete_boxes_route@7.ops[84]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_delete_boxes_route@7.ops[86]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_delete_boxes_route@7.ops[90]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_delete_boxes_route@7.ops[92]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_delete_boxes_route@7.ops[98]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_delete_boxes_route@7.ops[100]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_delete_boxes_route@7.ops[30]: 'l-store-copy a#0 0'
debug: Replaced main_delete_boxes_route@7.ops[33]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_delete_boxes_route@7.ops[48]: 'l-store-copy maybe_value%1#2 0'
debug: Replaced main_delete_boxes_route@7.ops[51]: 'v-load maybe_value%1#2' with 'l-load maybe_value%1#2'
debug: Inserted main_delete_boxes_route@7.ops[70]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced main_delete_boxes_route@7.ops[73]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_delete_boxes_route@7.ops[47]: 'l-store-copy maybe_exists%1#1 1'
debug: Replaced main_delete_boxes_route@7.ops[53]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_delete_boxes_route@7.ops[70]: 'l-store-copy maybe_exists%2#1 1'
debug: Replaced main_delete_boxes_route@7.ops[76]: 'v-load maybe_exists%2#1' with 'l-load maybe_exists%2#1'
debug: Inserted main_delete_boxes_route@7.ops[25]: 'l-store-copy a_exists#0 1'
debug: Replaced main_delete_boxes_route@7.ops[35]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted main_delete_boxes_route@7.ops[36]: 'l-store-copy a_exists#0 2'
debug: Replaced main_delete_boxes_route@7.ops[89]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted main_delete_boxes_route@7.ops[35]: 'l-store-copy a#0 2'
debug: Replaced main_delete_boxes_route@7.ops[96]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_read_boxes_route@8.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_read_boxes_route@8.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_read_boxes_route@8.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_read_boxes_route@8.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_read_boxes_route@8.ops[10]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_read_boxes_route@8.ops[12]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_read_boxes_route@8.ops[27]: 'l-store-copy maybe_value_converted%0#1 0'
debug: Replaced main_read_boxes_route@8.ops[29]: 'v-load maybe_value_converted%0#1' with 'l-load maybe_value_converted%0#1'
debug: Inserted main_read_boxes_route@8.ops[32]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_read_boxes_route@8.ops[34]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_read_boxes_route@8.ops[61]: 'l-store-copy aggregate%length%2#1 0'
debug: Replaced main_read_boxes_route@8.ops[63]: 'v-load aggregate%length%2#1' with 'l-load aggregate%length%2#1'
debug: Inserted main_read_boxes_route@8.ops[65]: 'l-store-copy aggregate%as_bytes%2#1 0'
debug: Replaced main_read_boxes_route@8.ops[67]: 'v-load aggregate%as_bytes%2#1' with 'l-load aggregate%as_bytes%2#1'
debug: Inserted main_read_boxes_route@8.ops[69]: 'l-store-copy aggregate%length_uint16%2#1 0'
debug: Replaced main_read_boxes_route@8.ops[71]: 'v-load aggregate%length_uint16%2#1' with 'l-load aggregate%length_uint16%2#1'
debug: Inserted main_read_boxes_route@8.ops[74]: 'l-store-copy aggregate%encoded_value%2#1 0'
debug: Replaced main_read_boxes_route@8.ops[76]: 'v-load aggregate%encoded_value%2#1' with 'l-load aggregate%encoded_value%2#1'
debug: Inserted main_read_boxes_route@8.ops[93]: 'l-store-copy aggregate%as_bytes%4#1 0'
debug: Replaced main_read_boxes_route@8.ops[95]: 'v-load aggregate%as_bytes%4#1' with 'l-load aggregate%as_bytes%4#1'
debug: Inserted main_read_boxes_route@8.ops[108]: 'l-store-copy aggregate%encoded%3#1 0'
debug: Replaced main_read_boxes_route@8.ops[110]: 'v-load aggregate%encoded%3#1' with 'l-load aggregate%encoded%3#1'
debug: Inserted main_read_boxes_route@8.ops[117]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_read_boxes_route@8.ops[119]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_read_boxes_route@8.ops[122]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_read_boxes_route@8.ops[124]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_read_boxes_route@8.ops[21]: 'l-store-copy aggregate%box_get%3#1 1'
debug: Replaced main_read_boxes_route@8.ops[24]: 'v-load aggregate%box_get%3#1' with 'l-load aggregate%box_get%3#1'
debug: Inserted main_read_boxes_route@8.ops[41]: 'l-store-copy aggregate%box_get%5#1 1'
debug: Replaced main_read_boxes_route@8.ops[44]: 'v-load aggregate%box_get%5#1' with 'l-load aggregate%box_get%5#1'
debug: Inserted main_read_boxes_route@8.ops[51]: 'l-store-copy aggregate%box_get%7#1 1'
debug: Replaced main_read_boxes_route@8.ops[54]: 'v-load aggregate%box_get%7#1' with 'l-load aggregate%box_get%7#1'
debug: Inserted main_read_boxes_route@8.ops[81]: 'l-store-copy aggregate%data_length%0#1 0'
debug: Replaced main_read_boxes_route@8.ops[84]: 'v-load aggregate%data_length%0#1' with 'l-load aggregate%data_length%0#1'
debug: Inserted main_read_boxes_route@8.ops[101]: 'l-store-copy aggregate%offset_as_uint16%1#1 0'
debug: Replaced main_read_boxes_route@8.ops[104]: 'v-load aggregate%offset_as_uint16%1#1' with 'l-load aggregate%offset_as_uint16%1#1'
debug: Inserted main_read_boxes_route@8.ops[109]: 'l-store-copy aggregate%val_as_bytes%1#1 0'
debug: Replaced main_read_boxes_route@8.ops[112]: 'v-load aggregate%val_as_bytes%1#1' with 'l-load aggregate%val_as_bytes%1#1'
debug: Inserted main_read_boxes_route@8.ops[119]: 'l-store-copy aggregate%encoded%4#1 0'
debug: Replaced main_read_boxes_route@8.ops[122]: 'v-load aggregate%encoded%4#1' with 'l-load aggregate%encoded%4#1'
debug: Inserted main_read_boxes_route@8.ops[23]: 'l-store-copy aggregate%box_get%2#1 1'
debug: Replaced main_read_boxes_route@8.ops[27]: 'v-load aggregate%box_get%2#1' with 'l-load aggregate%box_get%2#1'
debug: Inserted main_read_boxes_route@8.ops[44]: 'l-store-copy aggregate%box_get%4#1 1'
debug: Replaced main_read_boxes_route@8.ops[48]: 'v-load aggregate%box_get%4#1' with 'l-load aggregate%box_get%4#1'
debug: Inserted main_read_boxes_route@8.ops[108]: 'l-store-copy aggregate%encoded%2#1 0'
debug: Replaced main_read_boxes_route@8.ops[114]: 'v-load aggregate%encoded%2#1' with 'l-load aggregate%encoded%2#1'
debug: Inserted main_read_boxes_route@8.ops[88]: 'l-store-copy aggregate%current_tail_offset%0#1 0'
debug: Replaced main_read_boxes_route@8.ops[98]: 'v-load aggregate%current_tail_offset%0#1' with 'l-load aggregate%current_tail_offset%0#1'
debug: Inserted main_read_boxes_route@8.ops[65]: 'l-store-copy tmp%3#5 0'
debug: Replaced main_read_boxes_route@8.ops[78]: 'v-load tmp%3#5' with 'l-load tmp%3#5'
debug: Inserted main_read_boxes_route@8.ops[83]: 'l-store-copy aggregate%encoded_value%2#1 0'
debug: Replaced main_read_boxes_route@8.ops[96]: 'v-load aggregate%encoded_value%2#1' with 'l-load aggregate%encoded_value%2#1'
debug: Inserted main_read_boxes_route@8.ops[95]: 'l-store-copy aggregate%encoded%1#1 2'
debug: Replaced main_read_boxes_route@8.ops[109]: 'v-load aggregate%encoded%1#1' with 'l-load aggregate%encoded%1#1'
debug: Inserted main_read_boxes_route@8.ops[50]: 'l-store-copy tmp%3#5 0'
debug: Replaced main_read_boxes_route@8.ops[65]: 'v-load tmp%3#5' with 'l-load tmp%3#5'
debug: Inserted main_read_boxes_route@8.ops[39]: 'l-store-copy tmp%2#5 0'
debug: Replaced main_read_boxes_route@8.ops[63]: 'v-load tmp%2#5' with 'l-load tmp%2#5'
debug: Inserted main_read_boxes_route@8.ops[102]: 'l-store-copy aggregate%tail%1#1 2'
debug: Replaced main_read_boxes_route@8.ops[127]: 'v-load aggregate%tail%1#1' with 'l-load aggregate%tail%1#1'
debug: Inserted main_read_boxes_route@8.ops[65]: 'l-store-copy aggregate%val_as_bytes%0#1 1'
debug: Replaced main_read_boxes_route@8.ops[95]: 'v-load aggregate%val_as_bytes%0#1' with 'l-load aggregate%val_as_bytes%0#1'
debug: Inserted main_read_boxes_route@8.ops[18]: 'l-store-copy large_e#0 0'
debug: Replaced main_read_boxes_route@8.ops[61]: 'v-load large_e#0' with 'l-load large_e#0'
debug: Inserted main_read_boxes_route@8.ops[58]: 'l-store-copy aggregate%box_get%6#1 4'
debug: Replaced main_read_boxes_route@8.ops[103]: 'v-load aggregate%box_get%6#1' with 'l-load aggregate%box_get%6#1'
debug: Inserted main_read_boxes_route@8.ops[64]: 'l-store-copy tmp%4#4 3'
debug: Replaced main_read_boxes_route@8.ops[121]: 'v-load tmp%4#4' with 'l-load tmp%4#4'
debug: Inserted main_boxes_exist_route@9.ops[1]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_boxes_exist_route@9.ops[3]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_boxes_exist_route@9.ops[5]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_boxes_exist_route@9.ops[7]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_boxes_exist_route@9.ops[10]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_boxes_exist_route@9.ops[12]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_boxes_exist_route@9.ops[34]: 'l-store-copy aggregate%encoded_bit%0#1 0'
debug: Replaced main_boxes_exist_route@9.ops[36]: 'v-load aggregate%encoded_bit%0#1' with 'l-load aggregate%encoded_bit%0#1'
debug: Inserted main_boxes_exist_route@9.ops[40]: 'l-store-copy aggregate%set_bit%0#1 0'
debug: Replaced main_boxes_exist_route@9.ops[42]: 'v-load aggregate%set_bit%0#1' with 'l-load aggregate%set_bit%0#1'
debug: Inserted main_boxes_exist_route@9.ops[46]: 'l-store-copy aggregate%set_bit%1#1 0'
debug: Replaced main_boxes_exist_route@9.ops[48]: 'v-load aggregate%set_bit%1#1' with 'l-load aggregate%set_bit%1#1'
debug: Inserted main_boxes_exist_route@9.ops[56]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_boxes_exist_route@9.ops[58]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_boxes_exist_route@9.ops[61]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_boxes_exist_route@9.ops[63]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_boxes_exist_route@9.ops[52]: 'l-store-copy aggregate%set_bit%2#1 0'
debug: Replaced main_boxes_exist_route@9.ops[55]: 'v-load aggregate%set_bit%2#1' with 'l-load aggregate%set_bit%2#1'
debug: Inserted main_boxes_exist_route@9.ops[16]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_boxes_exist_route@9.ops[33]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_boxes_exist_route@9.ops[21]: 'l-store-copy maybe_exists%1#1 2'
debug: Replaced main_boxes_exist_route@9.ops[40]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_boxes_exist_route@9.ops[26]: 'l-store-copy maybe_exists%2#1 3'
debug: Replaced main_boxes_exist_route@9.ops[47]: 'v-load maybe_exists%2#1' with 'l-load maybe_exists%2#1'
debug: Inserted main_boxes_exist_route@9.ops[31]: 'l-store-copy maybe_exists%3#0 4'
debug: Replaced main_boxes_exist_route@9.ops[54]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_slice_box_route@10.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_slice_box_route@10.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_slice_box_route@10.ops[5]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_slice_box_route@10.ops[7]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_slice_box_route@10.ops[10]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_slice_box_route@10.ops[12]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_slice_box_route@10.ops[23]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_slice_box_route@10.ops[25]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_slice_box_route@10.ops[38]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_slice_box_route@10.ops[40]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_slice_box_route@10.ops[48]: 'l-store-copy tmp%7#3 0'
debug: Replaced main_slice_box_route@10.ops[50]: 'v-load tmp%7#3' with 'l-load tmp%7#3'
debug: Inserted main_slice_box_route@10.ops[53]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_slice_box_route@10.ops[55]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_slice_box_route@10.ops[84]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_slice_box_route@10.ops[86]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_slice_box_route@10.ops[94]: 'l-store-copy tmp%16#2 0'
debug: Replaced main_slice_box_route@10.ops[96]: 'v-load tmp%16#2' with 'l-load tmp%16#2'
debug: Inserted main_slice_box_route@10.ops[99]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_slice_box_route@10.ops[101]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_slice_box_route@10.ops[104]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_slice_box_route@10.ops[106]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_slice_box_route@10.ops[26]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_slice_box_route@10.ops[28]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_slice_box_route@10.ops[67]: 'l-store-copy tmp%9#3 0'
debug: Replaced main_slice_box_route@10.ops[70]: 'v-load tmp%9#3' with 'l-load tmp%9#3'
debug: Inserted main_slice_box_route@10.ops[33]: 'l-store-copy tmp%0#2 1'
debug: Replaced main_slice_box_route@10.ops[36]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_slice_box_route@10.ops[35]: 'l-store-copy tmp%4#0 1'
debug: Replaced main_slice_box_route@10.ops[39]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_slice_box_route@10.ops[46]: 'l-store-copy tmp%6#3 0'
debug: Replaced main_slice_box_route@10.ops[50]: 'v-load tmp%6#3' with 'l-load tmp%6#3'
debug: Inserted main_slice_box_route@10.ops[74]: 'l-store-copy tmp%9#3 1'
debug: Replaced main_slice_box_route@10.ops[77]: 'v-load tmp%9#3' with 'l-load tmp%9#3'
debug: Inserted main_slice_box_route@10.ops[76]: 'l-store-copy tmp%11#2 1'
debug: Replaced main_slice_box_route@10.ops[80]: 'v-load tmp%11#2' with 'l-load tmp%11#2'
debug: Inserted main_slice_box_route@10.ops[85]: 'l-store-copy tmp%9#3 1'
debug: Replaced main_slice_box_route@10.ops[88]: 'v-load tmp%9#3' with 'l-load tmp%9#3'
debug: Inserted main_slice_box_route@10.ops[87]: 'l-store-copy tmp%13#0 1'
debug: Replaced main_slice_box_route@10.ops[91]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_slice_box_route@10.ops[98]: 'l-store-copy tmp%15#2 0'
debug: Replaced main_slice_box_route@10.ops[102]: 'v-load tmp%15#2' with 'l-load tmp%15#2'
debug: Inserted main_slice_box_route@10.ops[29]: 'l-store-copy tmp%0#2 2'
debug: Replaced main_slice_box_route@10.ops[33]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_slice_box_route@10.ops[46]: 'l-store-copy tmp%3#0 1'
debug: Replaced main_slice_box_route@10.ops[51]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_slice_box_route@10.ops[99]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_slice_box_route@10.ops[104]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_slice_box_route@10.ops[81]: 'l-store-copy tmp%9#3 1'
debug: Replaced main_slice_box_route@10.ops[87]: 'v-load tmp%9#3' with 'l-load tmp%9#3'
debug: Inserted main_slice_box_route@10.ops[31]: 'l-store-copy tmp%3#0 1'
debug: Replaced main_slice_box_route@10.ops[46]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_slice_box_route@10.ops[86]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_slice_box_route@10.ops[101]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_arc4_box_route@11.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_arc4_box_route@11.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_arc4_box_route@11.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_arc4_box_route@11.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_arc4_box_route@11.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_arc4_box_route@11.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_arc4_box_route@11.ops[18]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_arc4_box_route@11.ops[20]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_box_ref_route@12.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_test_box_ref_route@12.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_test_box_ref_route@12.ops[5]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_test_box_ref_route@12.ops[7]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_test_box_ref_route@12.ops[10]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_test_box_ref_route@12.ops[12]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_test_box_ref_route@12.ops[20]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_test_box_ref_route@12.ops[22]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_test_box_ref_route@12.ops[30]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_box_ref_route@12.ops[32]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_box_ref_route@12.ops[40]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_test_box_ref_route@12.ops[42]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_box_ref_route@12.ops[50]: 'l-store-copy tmp%3#2 0'
debug: Replaced main_test_box_ref_route@12.ops[52]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted main_test_box_ref_route@12.ops[57]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_box_ref_route@12.ops[59]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_box_ref_route@12.ops[89]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_test_box_ref_route@12.ops[91]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_test_box_ref_route@12.ops[98]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_test_box_ref_route@12.ops[100]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_test_box_ref_route@12.ops[104]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_box_ref_route@12.ops[106]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_box_ref_route@12.ops[114]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_test_box_ref_route@12.ops[116]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_test_box_ref_route@12.ops[121]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_test_box_ref_route@12.ops[123]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_test_box_ref_route@12.ops[129]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_test_box_ref_route@12.ops[131]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_test_box_ref_route@12.ops[134]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_box_ref_route@12.ops[136]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_box_ref_route@12.ops[148]: 'l-store-copy value%0#0 0'
debug: Replaced main_test_box_ref_route@12.ops[150]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_test_box_ref_route@12.ops[153]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_test_box_ref_route@12.ops[155]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_test_box_ref_route@12.ops[160]: 'l-store-copy value%0#0 0'
debug: Replaced main_test_box_ref_route@12.ops[162]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_test_box_ref_route@12.ops[165]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_test_box_ref_route@12.ops[167]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_test_box_ref_route@12.ops[177]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_box_ref_route@12.ops[179]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_box_ref_route@12.ops[16]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_test_box_ref_route@12.ops[19]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_test_box_ref_route@12.ops[27]: 'l-store-copy maybe_exists%1#1 1'
debug: Replaced main_test_box_ref_route@12.ops[30]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_test_box_ref_route@12.ops[38]: 'l-store-copy maybe_exists%2#1 1'
debug: Replaced main_test_box_ref_route@12.ops[41]: 'v-load maybe_exists%2#1' with 'l-load maybe_exists%2#1'
debug: Inserted main_test_box_ref_route@12.ops[49]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced main_test_box_ref_route@12.ops[52]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_test_box_ref_route@12.ops[98]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_test_box_ref_route@12.ops[101]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_test_box_ref_route@12.ops[115]: 'l-store-copy exists#0 1'
debug: Replaced main_test_box_ref_route@12.ops[118]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_test_box_ref_route@12.ops[147]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_test_box_ref_route@12.ops[150]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_test_box_ref_route@12.ops[66]: 'l-store-copy sender_bytes#0 0'
debug: Replaced main_test_box_ref_route@12.ops[72]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@12.ops[140]: 'l-store-copy sender_bytes#0 1'
debug: Replaced main_test_box_ref_route@12.ops[146]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@12.ops[118]: 'l-store-copy value#3 1'
debug: Replaced main_test_box_ref_route@12.ops[126]: 'v-load value#3' with 'l-load value#3'
debug: Inserted main_test_box_ref_route@12.ops[134]: 'l-store-copy sender_bytes#0 0'
debug: Replaced main_test_box_ref_route@12.ops[141]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@12.ops[127]: 'l-store-copy value#3 0'
debug: Replaced main_test_box_ref_route@12.ops[136]: 'v-load value#3' with 'l-load value#3'
debug: Inserted main_test_box_ref_route@12.ops[90]: 'l-store-copy prefix#0 0'
debug: Replaced main_test_box_ref_route@12.ops[102]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted main_test_box_ref_route@12.ops[69]: 'l-store-copy app_address#0 1'
debug: Replaced main_test_box_ref_route@12.ops[81]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_test_box_ref_route@12.ops[82]: 'l-store-copy app_address#0 3'
debug: Replaced main_test_box_ref_route@12.ops[94]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_test_box_ref_route@12.ops[124]: 'l-store-copy exists#0 1'
debug: Replaced main_test_box_ref_route@12.ops[141]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_test_box_ref_route@12.ops[74]: 'l-store-copy sender_bytes#0 3'
debug: Replaced main_test_box_ref_route@12.ops[96]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@12.ops[97]: 'l-store-copy sender_bytes#0 2'
debug: Replaced main_test_box_ref_route@12.ops[140]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@12.ops[96]: 'l-store-copy app_address#0 2'
debug: Replaced main_test_box_ref_route@12.ops[157]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_box_map_test_route@13.ops[1]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_box_map_test_route@13.ops[3]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_box_map_test_route@13.ops[5]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_box_map_test_route@13.ops[7]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_box_map_test_route@13.ops[10]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_box_map_test_route@13.ops[12]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_box_map_test_route@13.ops[16]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@13.ops[18]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@13.ops[27]: 'l-store-copy value%0#0 0'
debug: Replaced main_box_map_test_route@13.ops[29]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_box_map_test_route@13.ops[32]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_box_map_test_route@13.ops[34]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_box_map_test_route@13.ops[47]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_box_map_test_route@13.ops[49]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_box_map_test_route@13.ops[54]: 'l-store-copy value%3#0 0'
debug: Replaced main_box_map_test_route@13.ops[56]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted main_box_map_test_route@13.ops[59]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_box_map_test_route@13.ops[61]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_box_map_test_route@13.ops[65]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@13.ops[67]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@13.ops[75]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_box_map_test_route@13.ops[77]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_box_map_test_route@13.ops[80]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_box_map_test_route@13.ops[82]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_box_map_test_route@13.ops[90]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_box_map_test_route@13.ops[92]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_box_map_test_route@13.ops[104]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_test_route@13.ops[106]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_test_route@13.ops[43]: 'l-store-copy value%2#0 0'
debug: Replaced main_box_map_test_route@13.ops[46]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted main_box_map_test_route@13.ops[71]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced main_box_map_test_route@13.ops[74]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_box_map_test_route@13.ops[88]: 'l-store-copy exists#0 1'
debug: Replaced main_box_map_test_route@13.ops[91]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_box_map_test_route@13.ops[19]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@13.ops[22]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@13.ops[23]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@13.ops[26]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@13.ops[100]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@13.ops[103]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@13.ops[104]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@13.ops[107]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@13.ops[39]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@13.ops[43]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@13.ops[73]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_box_map_test_route@13.ops[79]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_box_map_test_route@13.ops[42]: 'l-store-copy value%1#0 1'
debug: Replaced main_box_map_test_route@13.ops[49]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted main_box_map_test_route@13.ops[92]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@13.ops[103]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@13.ops[27]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@13.ops[39]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@13.ops[46]: 'l-store-copy box_0#0 1'
debug: Replaced main_box_map_test_route@13.ops[58]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@13.ops[75]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@13.ops[94]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_set_route@14.ops[1]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_box_map_set_route@14.ops[3]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_box_map_set_route@14.ops[5]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_box_map_set_route@14.ops[7]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_box_map_set_route@14.ops[10]: 'l-store-copy tmp%54#0 0'
debug: Replaced main_box_map_set_route@14.ops[12]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main_box_map_set_route@14.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced main_box_map_set_route@14.ops[17]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted main_box_map_set_route@14.ops[21]: 'l-store-copy reinterpret_Encoded(len+utf8[])%1#0 0'
debug: Replaced main_box_map_set_route@14.ops[23]: 'v-load reinterpret_Encoded(len+utf8[])%1#0' with 'l-load reinterpret_Encoded(len+utf8[])%1#0'
debug: Inserted main_box_map_set_route@14.ops[28]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_set_route@14.ops[30]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_set_route@14.ops[37]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_set_route@14.ops[39]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_set_route@14.ops[31]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_set_route@14.ops[34]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_set_route@14.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_set_route@14.ops[27]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_set_route@14.ops[26]: 'l-store-copy value#0 1'
debug: Replaced main_box_map_set_route@14.ops[37]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_box_map_get_route@15.ops[1]: 'l-store-copy tmp%58#0 0'
debug: Replaced main_box_map_get_route@15.ops[3]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted main_box_map_get_route@15.ops[5]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_box_map_get_route@15.ops[7]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_box_map_get_route@15.ops[10]: 'l-store-copy tmp%60#0 0'
debug: Replaced main_box_map_get_route@15.ops[12]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted main_box_map_get_route@15.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%2#0 0'
debug: Replaced main_box_map_get_route@15.ops[17]: 'v-load reinterpret_Encoded(uint64)%2#0' with 'l-load reinterpret_Encoded(uint64)%2#0'
debug: Inserted main_box_map_get_route@15.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_get_route@15.ops[21]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_get_route@15.ops[23]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_get_route@15.ops[25]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_get_route@15.ops[33]: 'l-store-copy aggregate%length%4#1 0'
debug: Replaced main_box_map_get_route@15.ops[35]: 'v-load aggregate%length%4#1' with 'l-load aggregate%length%4#1'
debug: Inserted main_box_map_get_route@15.ops[37]: 'l-store-copy aggregate%as_bytes%6#1 0'
debug: Replaced main_box_map_get_route@15.ops[39]: 'v-load aggregate%as_bytes%6#1' with 'l-load aggregate%as_bytes%6#1'
debug: Inserted main_box_map_get_route@15.ops[41]: 'l-store-copy aggregate%length_uint16%4#1 0'
debug: Replaced main_box_map_get_route@15.ops[43]: 'v-load aggregate%length_uint16%4#1' with 'l-load aggregate%length_uint16%4#1'
debug: Inserted main_box_map_get_route@15.ops[50]: 'l-store-copy tmp%65#0 0'
debug: Replaced main_box_map_get_route@15.ops[52]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted main_box_map_get_route@15.ops[55]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_get_route@15.ops[57]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_get_route@15.ops[27]: 'l-store-copy aggregate%box_get%19#1 1'
debug: Replaced main_box_map_get_route@15.ops[30]: 'v-load aggregate%box_get%19#1' with 'l-load aggregate%box_get%19#1'
debug: Inserted main_box_map_get_route@15.ops[47]: 'l-store-copy aggregate%encoded_value%4#1 0'
debug: Replaced main_box_map_get_route@15.ops[50]: 'v-load aggregate%encoded_value%4#1' with 'l-load aggregate%encoded_value%4#1'
debug: Inserted main_box_map_get_route@15.ops[29]: 'l-store-copy aggregate%box_get%18#1 1'
debug: Replaced main_box_map_get_route@15.ops[33]: 'v-load aggregate%box_get%18#1' with 'l-load aggregate%box_get%18#1'
debug: Inserted main_box_map_get_route@15.ops[34]: 'l-store-copy aggregate%box_get%18#1 0'
debug: Replaced main_box_map_get_route@15.ops[47]: 'v-load aggregate%box_get%18#1' with 'l-load aggregate%box_get%18#1'
debug: Inserted main_box_map_del_route@16.ops[1]: 'l-store-copy tmp%66#0 0'
debug: Replaced main_box_map_del_route@16.ops[3]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted main_box_map_del_route@16.ops[5]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_box_map_del_route@16.ops[7]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_box_map_del_route@16.ops[10]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_box_map_del_route@16.ops[12]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_box_map_del_route@16.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%3#0 0'
debug: Replaced main_box_map_del_route@16.ops[17]: 'v-load reinterpret_Encoded(uint64)%3#0' with 'l-load reinterpret_Encoded(uint64)%3#0'
debug: Inserted main_box_map_del_route@16.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_del_route@16.ops[21]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_del_route@16.ops[23]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_del_route@16.ops[25]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_del_route@16.ops[29]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_del_route@16.ops[31]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_exists_route@17.ops[1]: 'l-store-copy tmp%71#0 0'
debug: Replaced main_box_map_exists_route@17.ops[3]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted main_box_map_exists_route@17.ops[5]: 'l-store-copy tmp%72#0 0'
debug: Replaced main_box_map_exists_route@17.ops[7]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted main_box_map_exists_route@17.ops[10]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_box_map_exists_route@17.ops[12]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_box_map_exists_route@17.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%4#0 0'
debug: Replaced main_box_map_exists_route@17.ops[17]: 'v-load reinterpret_Encoded(uint64)%4#0' with 'l-load reinterpret_Encoded(uint64)%4#0'
debug: Inserted main_box_map_exists_route@17.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_exists_route@17.ops[21]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_exists_route@17.ops[23]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_exists_route@17.ops[25]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_exists_route@17.ops[37]: 'l-store-copy tmp%78#0 0'
debug: Replaced main_box_map_exists_route@17.ops[39]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted main_box_map_exists_route@17.ops[42]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_exists_route@17.ops[44]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_exists_route@17.ops[33]: 'l-store-copy aggregate%encoded_bool%0#1 0'
debug: Replaced main_box_map_exists_route@17.ops[36]: 'v-load aggregate%encoded_bool%0#1' with 'l-load aggregate%encoded_bool%0#1'
debug: Inserted main_box_map_exists_route@17.ops[27]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_box_map_exists_route@17.ops[32]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_bare_routing@18.ops[1]: 'l-store-copy tmp%79#0 0'
debug: Replaced main_bare_routing@18.ops[3]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted main___algopy_default_create@19.ops[1]: 'l-store-copy tmp%80#0 0'
debug: Replaced main___algopy_default_create@19.ops[3]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted main___algopy_default_create@19.ops[5]: 'l-store-copy tmp%81#0 0'
debug: Replaced main___algopy_default_create@19.ops[7]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted main___algopy_default_create@19.ops[10]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@19.ops[12]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@20.ops[1]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@20.ops[3]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Found 3 edge set/s for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#1
debug: shared x-stack for main_set_boxes_route@5 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_check_keys_route@6 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_delete_boxes_route@7 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_read_boxes_route@8 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_boxes_exist_route@9 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_slice_box_route@10 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_arc4_box_route@11 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_test_box_ref_route@12 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_test_route@13 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_set_route@14 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_get_route@15 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_del_route@16 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_box_map_exists_route@17 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main___algopy_default_create@19 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: shared x-stack for main_after_if_else@20 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21: tmp%0#1
debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@21 into main_after_if_else@20
debug: inlining single reference block main___algopy_default_create@19 into main_bare_routing@18
debug: removing explicit jump to fall-through block main_after_if_else@20
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing box_storage/out_O2/BoxContract.approval.teal
info: Writing box_storage/out_O2/BoxContract.clear.teal
info: Writing box_storage/out_O2/BoxContract.approval.bin
info: Writing box_storage/out_O2/BoxContract.clear.bin
info: Writing box_storage/out_O2/BoxContract.approval.stats.txt
info: Writing box_storage/out_O2/BoxContract.clear.stats.txt
info: Writing box_storage/out_O2/BoxContract.approval.puya.map
info: Writing box_storage/out_O2/BoxContract.clear.puya.map