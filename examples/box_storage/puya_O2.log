debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['box_storage'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
box_storage/contract.py:63:9 warning: expression result is ignored
box_storage/contract.py:102:9 warning: expression result is ignored
box_storage/contract.py:252:9 warning: expression result is ignored
box_storage/contract.py:254:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.get_box_value_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_ref_length
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Building IR for function examples.box_storage.contract.BoxContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_boxes
debug: Sealing block@0
box_storage/contract.py:64:9 debug: encountered already materialized expression ('box_large'), reusing result: "box_large"
box_storage/contract.py:70:9 debug: encountered already materialized expression ('box_a'), reusing result: "box_a"
box_storage/contract.py:80:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:80:46 debug: encountered already materialized expression (reinterpret_cast<bytes>(c)), reusing result: c#0
box_storage/contract.py:81:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:81:40 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:81:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:82:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:82:40 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:82:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:86:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:86:40 debug: encountered already materialized expression (arc4_decode(b, bytes)), reusing result: tmp%47#0
box_storage/contract.py:87:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:87:34 debug: encountered already materialized expression (1u), reusing result: 1u
box_storage/contract.py:87:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:88:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:88:34 debug: encountered already materialized expression (5u), reusing result: 5u
box_storage/contract.py:88:16 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:89:16 debug: encountered already materialized expression ('box_d'), reusing result: "box_d"
box_storage/contract.py:89:35 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:89:16 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.check_keys
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.set_many_ints
debug: Sealing block@0
box_storage/contract.py:106:9 debug: encountered already materialized expression ('many_ints'), reusing result: "many_ints"
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_many_ints
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Sealing block@0
box_storage/contract.py:132:9 debug: encountered already materialized expression (large), reusing result: large#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.read_boxes
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.boxes_exist
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box#1: bytes = undefined while trying to resolve 'box' in block@1
debug: Looking for 'arr_len' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr_len#1: uint64 = undefined while trying to resolve 'arr_len' in block@1
box_storage/contract.py:165:13 debug: encountered already materialized expression (box), reusing result: box#1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added box#0 to Phi node: let box#1: bytes = φ(box#0 <- block@0) in block@0
debug: Added box#1 to Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0
debug: Deleting Phi assignment: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3)
debug: Replaced trivial Phi node: let box#1: bytes = φ(box#0 <- block@0, box#1 <- block@3) (box#1) with box#0 in current definition for 3 blocks
debug: Added arr_len#0 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0) in block@0
debug: Added arr_len#2 to Phi node: let arr_len#1: uint64 = φ(arr_len#0 <- block@0, arr_len#2 <- block@3) in block@3
debug: Sealing block@4
box_storage/contract.py:168:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Sealing block@0
box_storage/contract.py:177:9 debug: encountered already materialized expression (box), reusing result: box#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.box_storage.contract.BoxContract.slice_box
debug: Sealing block@0
box_storage/contract.py:193:16 debug: encountered already materialized expression (box_0), reusing result: box_0#0
box_storage/contract.py:193:28 debug: encountered already materialized expression (0u), reusing result: 0u
box_storage/contract.py:193:30 debug: encountered already materialized expression (7u), reusing result: 7u
box_storage/contract.py:193:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(box_0)[0]), 0u, 0u < SINGLE_EVAL(id=0))), reusing result: tmp%3#0
box_storage/contract.py:196:16 debug: encountered already materialized expression (hex<"424F585F43">), reusing result: 0x424f585f43
box_storage/contract.py:196:39 debug: encountered already materialized expression (2u), reusing result: 2u
box_storage/contract.py:196:41 debug: encountered already materialized expression (10u), reusing result: 10u
box_storage/contract.py:196:16 debug: encountered already materialized expression (select(SINGLE_EVAL(id=0, source=box_len(hex<"424F585F43">)[0]), 2u, 2u < SINGLE_EVAL(id=0))), reusing result: tmp%13#0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.arc4_box
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.test_box_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_test
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_set
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_del
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.box_map_exists
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.__init__ for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.check_keys for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.set_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_many_ints for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.indirect_extract_and_replace for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.read_boxes for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.boxes_exist for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.create_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.delete_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.append_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.pop_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.sum_dynamic_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.slice_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.arc4_box for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.test_box_ref for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_test for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_set for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_get for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_del for inlining
debug: marking single-use function examples.box_storage.contract.BoxContract.box_map_exists for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: inlining call to examples.box_storage.contract.BoxContract.__init__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (> 4104u 4096u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, required_budget_with_buffer#0
debug: selected required_budget_with_buffer#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@2 from switch fee_source#0 {0u => block@3, 1u => block@4, * => block@5} to goto_nth [block@3, block@4][fee_source#0] else goto block@5
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__algopy_default_create in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:292:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_exists in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:288:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_del in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:284:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_get in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:280:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_set in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:256:6 debug: inlining call to examples.box_storage.contract.BoxContract.box_map_test in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:208:6 debug: inlining call to examples.box_storage.contract.BoxContract.test_box_ref in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:198:6 debug: inlining call to examples.box_storage.contract.BoxContract.arc4_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:189:6 debug: inlining call to examples.box_storage.contract.BoxContract.slice_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:182:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_dynamic_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:171:6 debug: inlining call to examples.box_storage.contract.BoxContract.pop_dynamic_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:156:6 debug: inlining call to examples.box_storage.contract.BoxContract.append_dynamic_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:152:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_dynamic_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:148:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_dynamic_box in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:144:6 debug: inlining call to examples.box_storage.contract.BoxContract.boxes_exist in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:135:6 debug: inlining call to examples.box_storage.contract.BoxContract.read_boxes in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:129:6 debug: inlining call to examples.box_storage.contract.BoxContract.indirect_extract_and_replace in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:116:6 debug: inlining call to examples.box_storage.contract.BoxContract.delete_boxes in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:108:6 debug: inlining call to examples.box_storage.contract.BoxContract.sum_many_ints in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:104:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_many_ints in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:100:6 debug: inlining call to examples.box_storage.contract.BoxContract.create_many_ints in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:93:6 debug: inlining call to examples.box_storage.contract.BoxContract.check_keys in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:57:6 debug: inlining call to examples.box_storage.contract.BoxContract.set_boxes in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%7#0, a#1
debug: selected a#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint8[])%0#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+utf8[])%0#0, c#0
debug: selected c#0 from equivalence set
debug: Found equivalence set: storage_value%1#4, b_value#0
debug: selected b_value#0 from equivalence set
debug: Found equivalence set: tmp%20#0, index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%21#0, value#4
debug: selected value#4 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#1
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: values%0#6, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: tmp%0#11, total#5
debug: selected total#5 from equivalence set
debug: Found equivalence set: total#4, tmp%26#0
debug: selected total#4 from equivalence set
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#2, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: storage_value%0#6, large#0
debug: selected large#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#2, large#1
debug: selected large#1 from equivalence set
debug: Found equivalence set: tmp%1#7, tmp%41#0
debug: selected tmp%1#7 from equivalence set
debug: Found equivalence set: tmp%2#7, tmp%42#0
debug: selected tmp%2#7 from equivalence set
debug: Found equivalence set: storage_value%1#3, tmp%43#0
debug: selected storage_value%1#3 from equivalence set
debug: Found equivalence set: values%0#4, tmp%44#0
debug: selected values%0#4 from equivalence set
debug: Found equivalence set: maybe_exists%0#3, tmp%51#0
debug: selected maybe_exists%0#3 from equivalence set
debug: Found equivalence set: maybe_exists%1#2, tmp%52#0
debug: selected maybe_exists%1#2 from equivalence set
debug: Found equivalence set: maybe_exists%2#2, tmp%53#0
debug: selected maybe_exists%2#2 from equivalence set
debug: Found equivalence set: maybe_exists%3#1, tmp%54#0
debug: selected maybe_exists%3#1 from equivalence set
debug: Found equivalence set: tmp%69#0, times#1
debug: selected times#1 from equivalence set
debug: Found equivalence set: tmp%0#7, arr_len#1
debug: selected arr_len#1 from equivalence set
debug: Found equivalence set: tmp%4#5, arr_len#3
debug: selected arr_len#3 from equivalence set
debug: Found equivalence set: tmp%6#4, tmp%70#0
debug: selected tmp%6#4 from equivalence set
debug: Found equivalence set: tmp%77#0, times#0
debug: selected times#0 from equivalence set
debug: Found equivalence set: tmp%1#5, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%5#4, tmp%78#0
debug: selected tmp%5#4 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#1, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#5, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#1, tmp%85#0
debug: selected total#1 from equivalence set
debug: Found equivalence set: values%0#0, reinterpret_biguint%0#0
debug: selected values%0#0 from equivalence set
debug: Found equivalence set: values%1#0, reinterpret_biguint%2#0
debug: selected values%1#0 from equivalence set
debug: Found equivalence set: values%2#0, reinterpret_biguint%4#0
debug: selected values%2#0 from equivalence set
debug: Found equivalence set: values%3#0, reinterpret_biguint%6#0
debug: selected values%3#0 from equivalence set
debug: Found equivalence set: tmp%5#2, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#2, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#2, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#1, value#3
debug: selected value#3 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#1
debug: selected exists#1 from equivalence set
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#2
debug: selected value#2 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: tmp%108#0, key#3
debug: selected key#3 from equivalence set
debug: Found equivalence set: tmp%109#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%114#0, key#2
debug: selected key#2 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%115#0
debug: selected storage_value%0#0 from equivalence set
debug: Found equivalence set: tmp%122#0, key#1
debug: selected key#1 from equivalence set
debug: Found equivalence set: tmp%127#0, key#0
debug: selected key#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, tmp%128#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 50 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#1
debug: Removing unused variable box#0
debug: Removing unused variable box_0#1
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#1
debug: Removing unused variable tmp_box_map#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%27#1 0u) to tmp%27#1
debug: Simplified (- tmp%35#1 0u) to tmp%35#1
debug: Simplified (- tmp%55#1 0u) to tmp%55#1
debug: Simplified (- tmp%64#1 0u) to tmp%64#1
debug: Simplified (- tmp%73#1 0u) to tmp%73#1
debug: Simplified (== tmp%8#0 NoOp) to (! tmp%8#0)
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (== tmp%22#0 NoOp) to (! tmp%22#0)
debug: Simplified (== tmp%29#0 NoOp) to (! tmp%29#0)
debug: Simplified (== a#0 0u) to (! a#0)
debug: Simplified (== tmp%33#0 NoOp) to (! tmp%33#0)
debug: Simplified (== tmp%37#0 NoOp) to (! tmp%37#0)
debug: Simplified (== tmp%47#0 NoOp) to (! tmp%47#0)
debug: Simplified (== tmp%57#0 NoOp) to (! tmp%57#0)
debug: Simplified (== tmp%61#0 NoOp) to (! tmp%61#0)
debug: Simplified (== tmp%65#0 NoOp) to (! tmp%65#0)
debug: Simplified (== tmp%73#0 NoOp) to (! tmp%73#0)
debug: Simplified (== tmp%81#0 NoOp) to (! tmp%81#0)
debug: Simplified (== tmp%88#0 NoOp) to (! tmp%88#0)
debug: Simplified (select tmp%0#4 0u tmp%2#4) to (select tmp%0#4 0u tmp%0#4)
debug: Simplified (== tmp%92#0 NoOp) to (! tmp%92#0)
debug: Simplified (== tmp%96#0 NoOp) to (! tmp%96#0)
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Simplified (== tmp%100#0 NoOp) to (! tmp%100#0)
debug: Simplified (concat "" encoded_value%0#4) to encoded_value%0#4
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: Simplified (== tmp%104#0 NoOp) to (! tmp%104#0)
debug: Simplified (concat "" encoded_value%0#3) to encoded_value%0#3
debug: Simplified (== tmp%110#0 NoOp) to (! tmp%110#0)
debug: Simplified (concat "" encoded_value%0#2) to encoded_value%0#2
debug: Simplified (== tmp%118#0 NoOp) to (! tmp%118#0)
debug: Simplified (concat "" encoded_value%0#1) to encoded_value%0#1
debug: Simplified (== tmp%123#0 NoOp) to (! tmp%123#0)
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (== tmp%132#0 0u) to (! tmp%132#0)
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%41#1 0u 1u) to ((extract 0 1) tmp%41#1)
debug: replacing box_get with box_len because value#2 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@26 from switch tmp%131#0 {0u => block@27, * => block@28} to goto_nth [block@27][tmp%131#0] else goto block@28
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@26 from goto_nth [block@27][tmp%131#0] else goto block@28 to goto tmp%131#0 ? block@28 : block@27
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@87 with block@2 in block@88
debug: Merged linear block@87 into block@2
debug: Merged linear block@88 into block@2
debug: Replaced predecessor block@85 with block@3 in block@86
debug: Merged linear block@85 into block@3
debug: Merged linear block@86 into block@3
debug: Replaced predecessor block@83 with block@4 in block@84
debug: Merged linear block@83 into block@4
debug: Merged linear block@84 into block@4
debug: Replaced predecessor block@81 with block@5 in block@82
debug: Merged linear block@81 into block@5
debug: Merged linear block@82 into block@5
debug: Replaced predecessor block@75 with block@6 in block@76
debug: Merged linear block@75 into block@6
debug: Replaced predecessor block@78 with block@77 in block@76
debug: Merged linear block@78 into block@77
debug: Merged linear block@80 into block@79
debug: Replaced predecessor block@73 with block@7 in block@74
debug: Merged linear block@73 into block@7
debug: Merged linear block@74 into block@7
debug: Replaced predecessor block@71 with block@8 in block@72
debug: Merged linear block@71 into block@8
debug: Merged linear block@72 into block@8
debug: Replaced predecessor block@69 with block@9 in block@70
debug: Merged linear block@69 into block@9
debug: Merged linear block@70 into block@9
debug: Replaced predecessor block@67 with block@10 in block@68
debug: Merged linear block@67 into block@10
debug: Merged linear block@68 into block@10
debug: Replaced predecessor block@65 with block@11 in block@66
debug: Merged linear block@65 into block@11
debug: Merged linear block@66 into block@11
debug: Replaced predecessor block@63 with block@12 in block@64
debug: Merged linear block@63 into block@12
debug: Merged linear block@64 into block@12
debug: Replaced predecessor block@57 with block@13 in block@58
debug: Merged linear block@57 into block@13
debug: Replaced predecessor block@60 with block@59 in block@58
debug: Merged linear block@60 into block@59
debug: Merged linear block@62 into block@61
debug: Replaced predecessor block@55 with block@14 in block@56
debug: Merged linear block@55 into block@14
debug: Merged linear block@56 into block@14
debug: Replaced predecessor block@49 with block@15 in block@50
debug: Merged linear block@49 into block@15
debug: Replaced predecessor block@52 with block@51 in block@50
debug: Merged linear block@52 into block@51
debug: Merged linear block@54 into block@53
debug: Replaced predecessor block@47 with block@16 in block@48
debug: Merged linear block@47 into block@16
debug: Merged linear block@48 into block@16
debug: Replaced predecessor block@45 with block@17 in block@46
debug: Merged linear block@45 into block@17
debug: Merged linear block@46 into block@17
debug: Replaced predecessor block@43 with block@18 in block@44
debug: Merged linear block@43 into block@18
debug: Merged linear block@44 into block@18
debug: Replaced predecessor block@41 with block@19 in block@42
debug: Merged linear block@41 into block@19
debug: Merged linear block@42 into block@19
debug: Replaced predecessor block@39 with block@20 in block@40
debug: Merged linear block@39 into block@20
debug: Merged linear block@40 into block@20
debug: Replaced predecessor block@37 with block@21 in block@38
debug: Merged linear block@37 into block@21
debug: Merged linear block@38 into block@21
debug: Replaced predecessor block@35 with block@22 in block@36
debug: Merged linear block@35 into block@22
debug: Merged linear block@36 into block@22
debug: Replaced predecessor block@33 with block@23 in block@34
debug: Merged linear block@33 into block@23
debug: Merged linear block@34 into block@23
debug: Replaced predecessor block@25 with block@24 in block@30
debug: Merged linear block@25 into block@24
debug: Replaced predecessor block@31 with block@27 in block@32
debug: Merged linear block@31 into block@27
debug: Merged linear block@32 into block@27
debug: Replaced predecessor block@29 with block@28 in block@30
debug: Merged linear block@29 into block@28
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@24
debug: Removed empty block: block@28
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#3: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=13),)
debug: Replacing redundant declaration let tmp%20#2: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:75:36-50, ir_type=uint64, name='tmp%9', version=4),)
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:75:36-50, ir_type=uint64, name='tmp%9', version=4),)
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:75:36-50, ir_type=uint64, name='tmp%9', version=4),)
debug: Replacing redundant declaration let tmp%41#1: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=13),)
debug: Replacing redundant declaration let tmp%47#1: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=13),)
debug: Replacing redundant declaration let tmp%58#1: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=13),)
debug: Replacing redundant declaration let tmp%67#1: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=13),)
debug: Replacing redundant declaration let tmp%76#1: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=13),)
debug: Replacing redundant declaration let tmp%5#6: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("42") with copy of existing registers (Register(source_location=box_storage/contract.py:123:38-55, ir_type=Encoded(len+utf8[]), name='tmp%4', version=6),)
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=4),)
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: tmp%0#13, tmp%11#3, tmp%41#1, tmp%47#1, tmp%58#1, tmp%67#1, tmp%76#1
debug: selected tmp%0#13 from equivalence set
debug: Found equivalence set: tmp%9#4, tmp%20#2, length%0#0, length%1#0
debug: selected tmp%9#4 from equivalence set
debug: Found equivalence set: tmp%27#1, tmp%28#1
debug: selected tmp%27#1 from equivalence set
debug: Found equivalence set: tmp%35#1, tmp%36#1
debug: selected tmp%35#1 from equivalence set
debug: Found equivalence set: tmp%55#1, tmp%56#1
debug: selected tmp%55#1 from equivalence set
debug: Found equivalence set: tmp%64#1, tmp%65#1
debug: selected tmp%64#1 from equivalence set
debug: Found equivalence set: tmp%73#1, tmp%74#1
debug: selected tmp%73#1 from equivalence set
debug: Found equivalence set: tmp%4#6, tmp%5#6
debug: selected tmp%4#6 from equivalence set
debug: Found equivalence set: encoded_value%0#4, box_prefixed_key%0#4, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Found equivalence set: encoded_value%0#3, box_prefixed_key%0#3
debug: selected encoded_value%0#3 from equivalence set
debug: Found equivalence set: encoded_value%0#2, box_prefixed_key%0#2
debug: selected encoded_value%0#2 from equivalence set
debug: Found equivalence set: encoded_value%0#1, box_prefixed_key%0#1
debug: selected encoded_value%0#1 from equivalence set
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0
debug: selected encoded_value%0#0 from equivalence set
debug: Copy propagation made 27 modifications
debug: Replacing redundant declaration let tmp%48#1: uint64 = (len tmp%0#13) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=3),)
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#13) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=3),)
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#13) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=3),)
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#13) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=3),)
debug: Found equivalence set: tmp%12#3, tmp%48#1, length%2#0, length%3#0, length%4#0
debug: selected tmp%12#3 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: reinterpret_Encoded(uint64)%2#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:64:9 debug: combined BoxRead `storage_value%0#9 = box_read("box_large")`
and ReplaceValue `updated_tuple%0#3 = replace_value(storage_value%0#9, 4, encoded_value%1#2)`
and BoxWrite `box_write("box_large", updated_tuple%0#3)`
into (box_replace "box_large" box%offset%0#0 encoded_value%1#2)
box_storage/contract.py:106:9 debug: combined BoxRead `storage_value%0#8 = box_read("many_ints")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#8, index#0, encoded_value%0#8)`
and BoxWrite `box_write("many_ints", updated_array%0#0)`
into (box_replace "many_ints" box%offset%1#0 encoded_value%0#8)
box_storage/contract.py:112 debug: combined BoxRead `storage_value%0#7 = box_read("many_ints")`
and ExtractValue `extract_value(storage_value%0#7, item_index_internal%0#4)`
into box%box_extract%2#0
box_storage/contract.py:131:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ExtractValue `extract_value(large#0, 4)`
into box%box_extract%3#0
box_storage/contract.py:132:9 debug: combined BoxRead `large#0 = box_read("box_large")`
and ReplaceValue `large#1 = replace_value(large#0, 4, encoded_value%0#7)`
and BoxWrite `box_write("box_large", large#1)`
into (box_replace "box_large" box%offset%4#0 encoded_value%0#7)
box_storage/contract.py:141:13 debug: combined BoxRead `storage_value%2#3 = box_read("box_large")`
and ExtractValue `extract_value(storage_value%2#3, 4)`
into box%box_extract%4#0
box_storage/contract.py:161:19 debug: combined BoxRead `storage_value%0#4 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#4, 0)`
into box%box_extract%5#0
box_storage/contract.py:165:13 debug: combined BoxRead `storage_value%1#2 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#1 = replace_value(storage_value%1#2, 1, arr_len#2, encoded_value%0#6)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#1)`
into (box_replace "dynamic_box" box%offset%8#0 encoded_value%0#6)
box_storage/contract.py:168:9 debug: combined BoxRead `storage_value%2#2 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%2#2, 0, encoded_value%1#1)`
and BoxWrite `box_write("dynamic_box", updated_tuple%1#0)`
into (box_replace "dynamic_box" box%offset%9#0 encoded_value%1#1)
box_storage/contract.py:176:19 debug: combined BoxRead `storage_value%0#3 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#3, 0)`
into box%box_extract%7#0
box_storage/contract.py:177:9 debug: combined BoxRead `storage_value%1#1 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#1, 0, encoded_value%0#5)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%11#0 encoded_value%0#5)
box_storage/contract.py:185 debug: combined BoxRead `storage_value%0#2 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#2, item_index_internal%0#1)`
into box%box_extract%10#0
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:74:16 debug: box_key "b" is known to exist, removing assert
box_storage/contract.py:91:16 debug: box_key "box_large" is known to exist, removing assert
box_storage/contract.py:222:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:247:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:248:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:253:9 debug: box_key "box_ref" is known to exist, removing assert
box_storage/contract.py:265:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:265:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:266:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:271:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (> 4104u 4096u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%1#0, b_value#0
debug: selected b_value#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1024u 4u) to 4096u
debug: Simplified (- tmp%27#0 0u) to tmp%27#0
debug: Simplified (- tmp%35#0 0u) to tmp%35#0
debug: Simplified (- tmp%55#0 0u) to tmp%55#0
debug: Simplified (- tmp%64#0 0u) to tmp%64#0
debug: Simplified (- tmp%73#0 0u) to tmp%73#0
debug: Simplified (extract3 c#0 0u 1u) to ((extract 0 1) c#0)
debug: Simplified (extract3 tmp%41#0 0u 1u) to ((extract 0 1) tmp%41#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%20#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:75:36-50, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%0#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:75:36-50, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let length%1#0: uint64 = (len c#0) with copy of existing registers (Register(source_location=box_storage/contract.py:75:36-50, ir_type=uint64, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%41#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%47#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%58#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%67#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%76#0: bytes = decode_bytes<bytes>(b#0) with copy of existing registers (Register(source_location=box_storage/contract.py:62:27-35, ir_type=bytes, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%11#0, tmp%41#0, tmp%47#0, tmp%58#0, tmp%67#0, tmp%76#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%9#0, tmp%20#0, length%0#0, length%1#0
debug: selected tmp%9#0 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%28#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%35#0, tmp%36#0
debug: selected tmp%35#0 from equivalence set
debug: Found equivalence set: tmp%55#0, tmp%56#0
debug: selected tmp%55#0 from equivalence set
debug: Found equivalence set: tmp%64#0, tmp%65#0
debug: selected tmp%64#0 from equivalence set
debug: Found equivalence set: tmp%73#0, tmp%74#0
debug: selected tmp%73#0 from equivalence set
debug: Copy propagation made 16 modifications
debug: Replacing redundant declaration let tmp%48#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=0),)
debug: Replacing redundant declaration let length%2#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=0),)
debug: Replacing redundant declaration let length%3#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=0),)
debug: Replacing redundant declaration let length%4#0: uint64 = (len tmp%0#0) with copy of existing registers (Register(source_location=box_storage/contract.py:76:36-51, ir_type=uint64, name='tmp%12', version=0),)
debug: Found equivalence set: tmp%12#0, tmp%48#0, length%2#0, length%3#0, length%4#0
debug: selected tmp%12#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:64:9 debug: combined BoxRead `storage_value%0#0 = box_read("box_large")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%0#0, 4, encoded_value%1#0)`
and BoxWrite `box_write("box_large", updated_tuple%0#0)`
into (box_replace "box_large" box%offset%0#0 encoded_value%1#0)
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:74:16 debug: box_key "b" is known to exist, removing assert
box_storage/contract.py:91:16 debug: box_key "box_large" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.check_keys
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "box_a" 0x626f785f61) to 1u
debug: Simplified (== "b" 0x62) to 1u
debug: Simplified (== 0x424f585f43 0x424f585f43) to 1u
debug: Simplified (== "box_large" 0x626f785f6c61726765) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:106:9 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ReplaceValue `updated_array%0#0 = replace_value(storage_value%0#0, index#0, encoded_value%0#0)`
and BoxWrite `box_write("many_ints", updated_array%0#0)`
into (box_replace "many_ints" box%offset%0#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:110:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.sum_many_ints
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@7 from goto_nth [block@8, block@9][0u] else goto block@10 to goto block@8
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@8 with block@7 in block@10
debug: Merged linear block@8 into block@7
debug: Replaced predecessor block@12 with block@11 in block@1
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@9
debug: Removed unreachable predecessors from block@10
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:112 debug: combined BoxRead `storage_value%0#0 = box_read("many_ints")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value_converted%1#0, a#0
debug: selected a#0 from equivalence set
debug: Found equivalence set: maybe_exists%3#0, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== a#0 0u) to (! a#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%5#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("42") with copy of existing registers (Register(source_location=box_storage/contract.py:123:38-55, ir_type=Encoded(len+utf8[]), name='tmp%4', version=0),)
debug: Found equivalence set: tmp%4#0, tmp%5#0
debug: selected tmp%4#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: storage_value%0#0, large#0
debug: selected large#0 from equivalence set
debug: Found equivalence set: updated_tuple%0#0, large#1
debug: selected large#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:131:17 debug: combined BoxRead `large#0 = box_read("box_large")`
and ExtractValue `extract_value(large#0, 4)`
into box%box_extract%0#0
box_storage/contract.py:132:9 debug: combined BoxRead `large#0 = box_read("box_large")`
and ReplaceValue `large#1 = replace_value(large#0, 4, encoded_value%0#0)`
and BoxWrite `box_write("box_large", large#1)`
into (box_replace "box_large" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:138:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.read_boxes
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%0#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:141:13 debug: combined BoxRead `storage_value%2#0 = box_read("box_large")`
and ExtractValue `extract_value(storage_value%2#0, 4)`
into box%box_extract%0#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Found equivalence set: tmp%4#0, arr_len#2
debug: selected arr_len#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:161:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:165:13 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 1, arr_len#1, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%2#0 encoded_value%0#0)
box_storage/contract.py:168:9 debug: combined BoxRead `storage_value%2#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%1#0 = replace_value(storage_value%2#0, 0, encoded_value%1#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%1#0)`
into (box_replace "dynamic_box" box%offset%3#0 encoded_value%1#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr_len#0
debug: selected arr_len#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:176:19 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, 0)`
into box%box_extract%0#0
box_storage/contract.py:177:9 debug: combined BoxRead `storage_value%1#0 = box_read("dynamic_box")`
and ReplaceValue `updated_tuple%0#0 = replace_value(storage_value%1#0, 0, encoded_value%0#0)`
and BoxWrite `box_write("dynamic_box", updated_tuple%0#0)`
into (box_replace "dynamic_box" box%offset%1#0 encoded_value%0#0)
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
box_storage/contract.py:185 debug: combined BoxRead `storage_value%0#0 = box_read("dynamic_box")`
and ExtractValue `extract_value(storage_value%0#0, item_index_internal%0#1)`
into box%box_extract%1#0
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.slice_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select tmp%0#0 0u tmp%2#0) to (select tmp%0#0 0u tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values%0#0, reinterpret_biguint%0#0
debug: selected values%0#0 from equivalence set
debug: Found equivalence set: values%1#0, reinterpret_biguint%2#0
debug: selected values%1#0 from equivalence set
debug: Found equivalence set: values%2#0, reinterpret_biguint%4#0
debug: selected values%2#0 from equivalence set
debug: Found equivalence set: values%3#0, reinterpret_biguint%6#0
debug: selected values%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_d#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:249:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.test_box_ref
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%5#0, sender_bytes#0
debug: selected sender_bytes#0 from equivalence set
debug: Found equivalence set: tmp%6#0, app_address#0
debug: selected app_address#0 from equivalence set
debug: Found equivalence set: tmp%9#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: maybe_value%0#0, value#0
debug: selected value#0 from equivalence set
debug: Found equivalence set: maybe_exists%5#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: value%0#1, tmp%20#0
debug: selected value%0#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable box_ref#0
debug: Removing unused variable box_ref#1
debug: Removing unused variable box_ref#2
debug: Removing unused variable box_ref#3
debug: Removing unused variable value_3#0
debug: Removing unused variable ref#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x68656c6c6f) to 5u
debug: Simplified (+ 64u 5u) to 69u
debug: Simplified (== "blob" 0x626c6f62) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:222:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:247:9 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:248:16 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:304:12 debug: box_key "blob" is known to exist, removing assert
box_storage/contract.py:253:9 debug: box_key "box_ref" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:243:16 debug: replacing box read with cached value for key: "blob"
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:277:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.box_map_test
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box_prefixed_key%1#0, box_0#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: maybe_value%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: maybe_exists%1#0, exists#0
debug: selected exists#0 from equivalence set
debug: Found equivalence set: storage_value%0#0, tmp%8#0
debug: selected storage_value%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable key_0#0
debug: Removing unused variable key_1#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp_box_map#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Simplified (concat "" encoded_value%1#0) to encoded_value%1#0
debug: Simplified (concat "" encoded_value%2#0) to encoded_value%2#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%3#0) to encoded_value%3#0
debug: Simplified (concat "" encoded_value%4#0) to encoded_value%4#0
debug: Simplified (len "Hmmmmm") to 6u
debug: Simplified (concat "" encoded_value%5#0) to encoded_value%5#0
debug: Simplified (concat "" encoded_value%6#0) to encoded_value%6#0
debug: Simplified (concat "" encoded_value%7#0) to encoded_value%7#0
debug: Simplified (== "" 0x) to 1u
debug: Simplified (concat 0x encoded_value%8#0) to encoded_value%8#0
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#1) to encoded_value%0#1
debug: Simplified (concat 0x encoded_value%9#0) to encoded_value%9#0
debug: replacing box_get with box_len because value#1 is unused
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%1#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%2#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%3#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%4#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%6#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%7#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=box_storage/contract.py:261:21-26, ir_type=bytes[8], name='encoded_value%0', version=0),)
debug: Replacing redundant declaration let encoded_value%8#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%0#1: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Replacing redundant declaration let encoded_value%9#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: encoded_value%0#0, box_prefixed_key%0#0, encoded_value%1#0, box_0#0, encoded_value%2#0, box_prefixed_key%2#0, encoded_value%3#0, box_prefixed_key%3#0, encoded_value%4#0, box_prefixed_key%4#0, encoded_value%7#0, box_prefixed_key%7#0
debug: selected box_0#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, box_prefixed_key%5#0, encoded_value%6#0, box_prefixed_key%6#0, encoded_value%8#0, box_prefixed_key%8#0, encoded_value%0#1, box_prefixed_key%0#1, encoded_value%9#0, box_prefixed_key%9#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:265:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:265:52 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:266:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:271:9 debug: box_key box_0#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" encoded_value%0#0) to encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%2#10
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, tmp%3#9
debug: selected box%array_length%1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%2#0, encoded_value%0#8
debug: selected reinterpret_Encoded(uint64)%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%2#0, array_item%0#2
debug: selected box%box_extract%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%3#0, tuple_item%0#3
debug: selected box%box_extract%3#0 from equivalence set
debug: Found equivalence set: box%box_extract%4#0, tuple_item%0#2
debug: selected box%box_extract%4#0 from equivalence set
debug: Found equivalence set: box%box_extract%5#0, tuple_item%0#1
debug: selected box%box_extract%5#0 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%6#4
debug: selected box%array_length%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%7#0, tuple_item%0#0
debug: selected box%box_extract%7#0 from equivalence set
debug: Found equivalence set: box%array_length%3#0, tmp%5#4
debug: selected box%array_length%3#0 from equivalence set
debug: Found equivalence set: box%array_length%4#0, array_length%0#0
debug: selected box%array_length%4#0 from equivalence set
debug: Found equivalence set: box%box_extract%10#0, array_item%0#1
debug: selected box%box_extract%10#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable updated_tuple%0#3
debug: Removing unused variable tmp%1#10
debug: Removing unused variable b_value#0
debug: Removing unused variable storage_value%2#4
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%0#13
debug: Removing unused variable tmp%1#9
debug: Removing unused variable tmp%2#9
debug: Removing unused variable tmp%3#8
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%19#0
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable large#1
debug: Removing unused variable tmp%40#0
debug: Removing unused variable storage_value%2#3
debug: Removing unused variable tmp%50#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%64#0
debug: Removing unused variable tmp%68#0
debug: Removing unused variable storage_value%0#4
debug: Removing unused variable updated_tuple%0#1
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable storage_value%3#1
debug: Removing unused variable tmp%76#0
debug: Removing unused variable storage_value%0#3
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%2#1
debug: Removing unused variable tmp%84#0
debug: Removing unused variable storage_value%0#2
debug: Removing unused variable tmp%91#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%95#0
debug: Removing unused variable tmp%99#0
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable _%5#0
debug: Removing unused variable maybe_exists%7#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%103#0
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%3#1
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%107#0
debug: Removing unused variable tmp%113#0
debug: Removing unused variable tmp%121#0
debug: Removing unused variable tmp%126#0
debug: Removing unused variable storage_value%0#9
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable storage_value%0#8
debug: Removing unused variable large#0
debug: Removing unused variable storage_value%1#2
debug: Removing unused variable storage_value%2#2
debug: Removing unused variable storage_value%1#1
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ box%index_bytes_offset%0#0 0u) to box%index_bytes_offset%0#0
debug: Simplified (+ 0u box%index_bytes_offset%0#0) to box%index_bytes_offset%0#0
debug: Simplified (+ box%index_bytes_offset%1#0 0u) to box%index_bytes_offset%1#0
debug: Simplified (+ 0u box%index_bytes_offset%1#0) to box%index_bytes_offset%1#0
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ box%index_bytes_offset%2#0 0u) to box%index_bytes_offset%2#0
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u box%element_offset%3#0) to box%element_offset%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@34
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__init__
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.check_keys
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.set_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_many_ints
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.indirect_extract_and_replace
debug: removing unused subroutine examples.box_storage.contract.BoxContract.read_boxes
debug: removing unused subroutine examples.box_storage.contract.BoxContract.boxes_exist
debug: removing unused subroutine examples.box_storage.contract.BoxContract.create_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.delete_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.append_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.pop_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.sum_dynamic_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.slice_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.arc4_box
debug: removing unused subroutine examples.box_storage.contract.BoxContract.test_box_ref
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_test
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_set
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_get
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_del
debug: removing unused subroutine examples.box_storage.contract.BoxContract.box_map_exists
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.box_storage.contract.BoxContract.__puya_arc4_router__ in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%2#10
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, tmp%3#9
debug: selected box%array_length%1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%2#0, encoded_value%0#8
debug: selected reinterpret_Encoded(uint64)%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%2#0, array_item%0#2
debug: selected box%box_extract%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%3#0, tuple_item%0#3
debug: selected box%box_extract%3#0 from equivalence set
debug: Found equivalence set: box%box_extract%4#0, tuple_item%0#2
debug: selected box%box_extract%4#0 from equivalence set
debug: Found equivalence set: box%box_extract%5#0, tuple_item%0#1
debug: selected box%box_extract%5#0 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%6#4
debug: selected box%array_length%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%7#0, tuple_item%0#0
debug: selected box%box_extract%7#0 from equivalence set
debug: Found equivalence set: box%array_length%3#0, tmp%5#4
debug: selected box%array_length%3#0 from equivalence set
debug: Found equivalence set: box%array_length%4#0, array_length%0#0
debug: selected box%array_length%4#0 from equivalence set
debug: Found equivalence set: box%box_extract%10#0, array_item%0#1
debug: selected box%box_extract%10#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable updated_tuple%0#3
debug: Removing unused variable tmp%1#10
debug: Removing unused variable b_value#0
debug: Removing unused variable storage_value%2#4
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%0#15
debug: Removing unused variable tmp%1#9
debug: Removing unused variable tmp%2#9
debug: Removing unused variable tmp%3#8
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%19#0
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable large#1
debug: Removing unused variable tmp%40#0
debug: Removing unused variable storage_value%2#3
debug: Removing unused variable tmp%50#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%64#0
debug: Removing unused variable tmp%68#0
debug: Removing unused variable storage_value%0#4
debug: Removing unused variable updated_tuple%0#1
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable storage_value%3#1
debug: Removing unused variable tmp%76#0
debug: Removing unused variable storage_value%0#3
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%2#1
debug: Removing unused variable tmp%84#0
debug: Removing unused variable storage_value%0#2
debug: Removing unused variable tmp%91#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%95#0
debug: Removing unused variable tmp%99#0
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable _%5#0
debug: Removing unused variable maybe_exists%7#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%103#0
debug: Removing unused variable tmp%0#4
debug: Removing unused variable tmp%3#1
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%107#0
debug: Removing unused variable tmp%113#0
debug: Removing unused variable tmp%121#0
debug: Removing unused variable tmp%126#0
debug: Removing unused variable storage_value%0#9
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable storage_value%0#8
debug: Removing unused variable large#0
debug: Removing unused variable storage_value%1#2
debug: Removing unused variable storage_value%2#2
debug: Removing unused variable storage_value%1#1
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ box%index_bytes_offset%0#0 0u) to box%index_bytes_offset%0#0
debug: Simplified (+ 0u box%index_bytes_offset%0#0) to box%index_bytes_offset%0#0
debug: Simplified (+ box%index_bytes_offset%1#0 0u) to box%index_bytes_offset%1#0
debug: Simplified (+ 0u box%index_bytes_offset%1#0) to box%index_bytes_offset%1#0
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ box%index_bytes_offset%2#0 0u) to box%index_bytes_offset%2#0
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u box%element_offset%3#0) to box%element_offset%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@36
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:277:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:249:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:138:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.__puya_arc4_router__
box_storage/contract.py:110:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%array_length%0#0, tmp%2#10
debug: selected box%array_length%0#0 from equivalence set
debug: Found equivalence set: box%array_length%1#0, tmp%3#9
debug: selected box%array_length%1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%2#0, encoded_value%0#8
debug: selected reinterpret_Encoded(uint64)%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%2#0, array_item%0#2
debug: selected box%box_extract%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%3#0, tuple_item%0#3
debug: selected box%box_extract%3#0 from equivalence set
debug: Found equivalence set: tmp%0#14, tmp%0#8
debug: selected tmp%0#14 from equivalence set
debug: Found equivalence set: box%box_extract%4#0, tuple_item%0#2
debug: selected box%box_extract%4#0 from equivalence set
debug: Found equivalence set: box%box_extract%5#0, tuple_item%0#1
debug: selected box%box_extract%5#0 from equivalence set
debug: Found equivalence set: box%array_length%2#0, tmp%6#4
debug: selected box%array_length%2#0 from equivalence set
debug: Found equivalence set: box%box_extract%7#0, tuple_item%0#0
debug: selected box%box_extract%7#0 from equivalence set
debug: Found equivalence set: box%array_length%3#0, tmp%5#4
debug: selected box%array_length%3#0 from equivalence set
debug: Found equivalence set: box%array_length%4#0, array_length%0#0
debug: selected box%array_length%4#0 from equivalence set
debug: Found equivalence set: box%box_extract%10#0, array_item%0#1
debug: selected box%box_extract%10#0 from equivalence set
debug: Found equivalence set: value%0#3, tmp%20#1
debug: selected value%0#3 from equivalence set
debug: Found equivalence set: storage_value%0#10, tmp%8#1
debug: selected storage_value%0#10 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable updated_tuple%0#3
debug: Removing unused variable tmp%1#10
debug: Removing unused variable b_value#0
debug: Removing unused variable storage_value%2#4
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%0#12
debug: Removing unused variable tmp%1#9
debug: Removing unused variable tmp%2#9
debug: Removing unused variable tmp%3#8
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%19#0
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable updated_array%0#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable large#1
debug: Removing unused variable tmp%40#0
debug: Removing unused variable box#0
debug: Removing unused variable storage_value%2#3
debug: Removing unused variable tmp%50#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%64#0
debug: Removing unused variable tmp%68#0
debug: Removing unused variable storage_value%0#4
debug: Removing unused variable updated_tuple%0#1
debug: Removing unused variable updated_tuple%1#0
debug: Removing unused variable storage_value%3#1
debug: Removing unused variable tmp%76#0
debug: Removing unused variable storage_value%0#3
debug: Removing unused variable updated_tuple%0#0
debug: Removing unused variable storage_value%2#1
debug: Removing unused variable tmp%84#0
debug: Removing unused variable storage_value%0#2
debug: Removing unused variable tmp%91#0
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%95#0
debug: Removing unused variable tmp%99#0
debug: Removing unused variable _%4#0
debug: Removing unused variable maybe_exists%4#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable _%5#0
debug: Removing unused variable maybe_exists%7#0
debug: Removing unused variable ref#0
debug: Removing unused variable _%6#0
debug: Removing unused variable maybe_exists%8#0
debug: Removing unused variable tmp%103#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%3#1
debug: Removing unused variable _%0#1
debug: Removing unused variable maybe_exists%2#0
debug: Removing unused variable tmp%7#1
debug: Removing unused variable box_map#0
debug: Removing unused variable key#4
debug: Removing unused variable tmp%107#0
debug: Removing unused variable tmp%113#0
debug: Removing unused variable tmp%121#0
debug: Removing unused variable tmp%126#0
debug: Removing unused variable storage_value%0#9
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable storage_value%0#8
debug: Removing unused variable large#0
debug: Removing unused variable storage_value%1#2
debug: Removing unused variable storage_value%2#2
debug: Removing unused variable storage_value%1#1
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ box%index_bytes_offset%0#0 0u) to box%index_bytes_offset%0#0
debug: Simplified (+ 0u box%index_bytes_offset%0#0) to box%index_bytes_offset%0#0
debug: Simplified (+ 10500u 10u) to 10510u
debug: Simplified (+ box%index_bytes_offset%1#0 0u) to box%index_bytes_offset%1#0
debug: Simplified (+ 0u box%index_bytes_offset%1#0) to box%index_bytes_offset%1#0
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 4096u) to 4096u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 2u) to 2u
debug: Simplified (+ box%index_bytes_offset%2#0 0u) to box%index_bytes_offset%2#0
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u 0u) to 0u
debug: Simplified (+ 0u box%element_offset%3#0) to box%element_offset%3#0
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#10) to encoded_value%0#10
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@88 from goto_nth [block@89, block@90][0u] else goto block@91 to goto block@89
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@86 with block@6 in block@87
debug: Merged linear block@86 into block@6
debug: Replaced predecessor block@89 with block@88 in block@91
debug: Merged linear block@89 into block@88
debug: Replaced predecessor block@93 with block@92 in block@76
debug: Merged linear block@93 into block@92
debug: Replaced predecessor block@84 with block@9 in block@85
debug: Merged linear block@84 into block@9
debug: Merged linear block@85 into block@9
debug: Replaced predecessor block@82 with block@18 in block@83
debug: Merged linear block@82 into block@18
debug: Merged linear block@83 into block@18
debug: Replaced predecessor block@80 with block@19 in block@81
debug: Merged linear block@80 into block@19
debug: Merged linear block@81 into block@19
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@90
debug: Removed unreachable predecessors from block@91
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%0#10: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: box%index_bytes_offset%0#0, box%element_offset%0#0, box%offset%1#0
debug: selected box%index_bytes_offset%0#0 from equivalence set
debug: Found equivalence set: box%index_bytes_offset%1#0, box%element_offset%1#0, box%offset%2#0
debug: selected box%index_bytes_offset%1#0 from equivalence set
debug: Found equivalence set: box%index_bytes_offset%2#0, box%element_offset%2#0
debug: selected box%index_bytes_offset%2#0 from equivalence set
debug: Found equivalence set: box%element_offset%3#0, box%offset%12#0
debug: selected box%element_offset%3#0 from equivalence set
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#10, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:304:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.box_storage.contract.BoxContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking single-use function _puya_lib.util.ensure_budget for inlining
debug: marking single-use function examples.box_storage.contract.get_box_value_plus_1 for inlining
debug: marking single-use function examples.box_storage.contract.get_box_ref_length for inlining
debug: marking single-use function examples.box_storage.contract.get_box_map_value_from_key_plus_1 for inlining
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
box_storage/contract.py:277:16 debug: inlining call to examples.box_storage.contract.get_box_map_value_from_key_plus_1 in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:249:16 debug: inlining call to examples.box_storage.contract.get_box_ref_length in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:138:13 debug: inlining call to examples.box_storage.contract.get_box_value_plus_1 in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
box_storage/contract.py:110:9 debug: inlining call to _puya_lib.util.ensure_budget in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: box%index_bytes_offset%0#0, box%element_offset%0#0, box%offset%1#0
debug: selected box%index_bytes_offset%0#0 from equivalence set
debug: Found equivalence set: box%index_bytes_offset%1#0, box%element_offset%1#0, box%offset%2#0
debug: selected box%index_bytes_offset%1#0 from equivalence set
debug: Found equivalence set: tmp%0#17, tmp%0#11
debug: selected tmp%0#17 from equivalence set
debug: Found equivalence set: box%index_bytes_offset%2#0, box%element_offset%2#0
debug: selected box%index_bytes_offset%2#0 from equivalence set
debug: Found equivalence set: box%element_offset%3#0, box%offset%12#0
debug: selected box%element_offset%3#0 from equivalence set
debug: Found equivalence set: value%0#3, tmp%20#1
debug: selected value%0#3 from equivalence set
debug: Found equivalence set: storage_value%0#8, tmp%8#1
debug: selected storage_value%0#8 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable box%offset%0#0
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable required_budget#0
debug: Removing unused variable fee_source#0
debug: Removing unused variable box%offset%3#0
debug: Removing unused variable box%offset%4#0
debug: Removing unused variable box#0
debug: Removing unused variable box%offset%5#0
debug: Removing unused variable box%offset%6#0
debug: Removing unused variable box%offset%7#0
debug: Removing unused variable box%offset%9#0
debug: Removing unused variable box%offset%10#0
debug: Removing unused variable box%offset%11#0
debug: Removing unused variable ref#0
debug: Removing unused variable box_map#0
debug: Removing unused variable key#4
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (+ 10500u 10u) to 10510u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (concat 0x encoded_value%0#10) to encoded_value%0#10
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a goto nth with a constant into a goto
debug: simplified terminator of block@48 from goto_nth [block@49, block@50][0u] else goto block@51 to goto block@49
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@0 in block@36
debug: Replaced predecessor block@2 with block@0 in block@4
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@46 with block@9 in block@47
debug: Merged linear block@46 into block@9
debug: Replaced predecessor block@49 with block@48 in block@51
debug: Merged linear block@49 into block@48
debug: Replaced predecessor block@53 with block@52 in block@10
debug: Merged linear block@53 into block@52
debug: Replaced predecessor block@44 with block@15 in block@45
debug: Merged linear block@44 into block@15
debug: Replaced predecessor block@45 with block@15 in block@39
debug: Merged linear block@45 into block@15
debug: Replaced predecessor block@42 with block@30 in block@43
debug: Merged linear block@42 into block@30
debug: Replaced predecessor block@43 with block@30 in block@39
debug: Merged linear block@43 into block@30
debug: Replaced predecessor block@40 with block@31 in block@41
debug: Merged linear block@40 into block@31
debug: Replaced predecessor block@41 with block@31 in block@39
debug: Merged linear block@41 into block@31
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@50
debug: Removed unreachable predecessors from block@51
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_value%0#10: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=box_storage/contract.py:268:32-37, ir_type=bytes[8], name='encoded_value%5', version=0),)
debug: Found equivalence set: encoded_value%5#0, encoded_value%0#10, box_prefixed_key%0#0
debug: selected encoded_value%5#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:304:12 debug: box_key "blob" is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.util.ensure_budget
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_value_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_ref_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine examples.box_storage.contract.get_box_value_plus_1
debug: removing unused subroutine examples.box_storage.contract.get_box_ref_length
debug: removing unused subroutine examples.box_storage.contract.get_box_map_value_from_key_plus_1
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Removing unused variable required_budget_with_buffer#0
debug: Removing unused variable materialized_values%0#0
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@51 with block@48 in block@47
debug: Merged linear block@51 into block@48
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let value#4: uint64 = decode_bytes<uint64>(reinterpret_Encoded(uint64)%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.box_storage.contract.BoxContract
debug: lowering array IR nodes in clear program of examples.box_storage.contract.BoxContract
debug: optimizing approval program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, encoded_value%1#2
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%0#0, storage_value%3#2
debug: selected aggregate%box_get%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%2#0, storage_value%0#7
debug: selected aggregate%box_get%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0, tmp%27#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0, tmp%1#8
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%4#6
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0, encoded_value%0#7
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%4#0, storage_value%0#9
debug: selected aggregate%box_get%4#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%6#0, storage_value%0#5
debug: selected aggregate%box_get%6#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%8#0, storage_value%1#3
debug: selected aggregate%box_get%8#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%3#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+uint8[])%1#0
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%as_Encoded(uint64)%4#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]),uint64)%0#0, tmp%45#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(bool1,bool1,bool1,bool1)%0#0, tmp%55#0
debug: selected aggregate%head%4#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, encoded_array%0#1
debug: selected aggregate%len_u16%0#0 from equivalence set
debug: Found equivalence set: box%box_extract%5#0, values%0#3
debug: selected box%box_extract%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%5#0, aggregate%as_Encoded(uint64)%5#0, encoded_value%0#6
debug: selected aggregate%val_as_bytes%5#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%0#0, aggregate%as_Encoded(uint16)%0#0, tmp%5#5, encoded_value%1#1
debug: selected aggregate%uint16%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%as_Encoded(uint64)%6#0, tmp%71#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: box%box_extract%7#0, values%0#2
debug: selected box%box_extract%7#0 from equivalence set
debug: Found equivalence set: aggregate%uint16%1#0, aggregate%as_Encoded(uint16)%1#0, tmp%2#5, encoded_value%0#5
debug: selected aggregate%uint16%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%9#0, aggregate%as_Encoded(uint64)%7#0, tmp%79#0
debug: selected aggregate%val_as_bytes%9#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%as_Encoded(uint64)%8#0, tmp%86#0
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%9#3
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%8#0, aggregate%as_Encoded(uint8[4])%0#0, encoded_array%0#0
debug: selected aggregate%head%8#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%10#0, storage_value%0#1
debug: selected aggregate%box_get%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#0, values%0#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%12#0, storage_value%1#0
debug: selected aggregate%box_get%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#0, values%1#0
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%14#0, storage_value%2#0
debug: selected aggregate%box_get%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#0, values%2#0
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%16#0, storage_value%3#0
debug: selected aggregate%box_get%16#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%3#0, values%3#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%18#0, storage_value%0#8
debug: selected aggregate%box_get%18#0 from equivalence set
debug: Found equivalence set: aggregate%box_get%20#0, storage_value%0#0
debug: selected aggregate%box_get%20#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#0, aggregate%as_Encoded(len+utf8[])%2#0, tmp%116#0
debug: selected aggregate%encoded_value%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%0#0, tmp%129#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Copy propagation made 41 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value#4
debug: Removing unused variable array_length%0#1
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) tmp%0#16) to ((extract 2 1) b#0)
debug: Simplified (len 0x3432) to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x3432) to 0x00023432
debug: Simplified (len "42") to 2u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x0002 "42") to 0x00023432
debug: Simplified (concat 0x aggregate%val_as_bytes%3#0) to aggregate%val_as_bytes%3#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0014
debug: Simplified (concat 0x aggregate%set_bit%2#0) to aggregate%set_bit%2#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0000
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%6#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (concat 0x 0x00) to 0x00
debug: Simplified (concat 0x00 0x01) to 0x0001
debug: Simplified (concat 0x0001 0x02) to 0x000102
debug: Simplified (concat 0x000102 0x03) to 0x00010203
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: replacing box_get with box_len because aggregate%box_get%2#0 is unused
debug: Simplified (extract3 aggregate%val_as_bytes%6#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%6#0)
debug: Simplified (extract3 aggregate%val_as_bytes%8#0 6u 2u) to ((extract 6 2) aggregate%val_as_bytes%8#0)
debug: Simplified (extract3 aggregate%box_get%10#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%box_get%10#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%12#0 1u 1u) // on error: index access is out of bounds to ((extract 1 1) aggregate%box_get%12#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%14#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%box_get%14#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%box_get%16#0 3u 1u) // on error: index access is out of bounds to ((extract 3 1) aggregate%box_get%16#0) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=box_storage/contract.py:122:38-62, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%1#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%2#0, aggregate%head%4#0
debug: selected aggregate%set_bit%2#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
box_storage/contract.py:73:16 debug: box_key "box_a" is known to exist, removing assert
box_storage/contract.py:76:16 debug: box_key "box_d" is known to exist, removing assert
box_storage/contract.py:203:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:204:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:205:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:206:16 debug: box_key 0x64 is known to exist, removing assert
box_storage/contract.py:264:16 debug: box_key box_0#0 is known to exist, removing assert
box_storage/contract.py:309:12 debug: box_key encoded_value%5#0 is known to exist, removing assert
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
box_storage/contract.py:124:23 debug: replacing box read with cached value for key: "box_a"
box_storage/contract.py:203:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:204:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:205:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:206:16 debug: replacing box read with cached value for key: 0x64
box_storage/contract.py:243:16 debug: replacing box read with cached value for key: "blob"
box_storage/contract.py:309:12 debug: replacing box read with cached value for key: encoded_value%5#0
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#2, maybe_value%3#0
debug: selected maybe_value%0#2 from equivalence set
debug: Found equivalence set: maybe_exists%0#4, a_exists#0
debug: selected a_exists#0 from equivalence set
debug: Found equivalence set: value#3, maybe_value%1#1
debug: selected value#3 from equivalence set
debug: Found equivalence set: exists#1, maybe_exists%6#0
debug: selected exists#1 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%len_u16%0#0
debug: Removing unused variable aggregate%length%3#0
debug: Removing unused variable aggregate%as_bytes%6#0
debug: Removing unused variable aggregate%length_uint16%3#0
debug: Removing unused variable aggregate%encoded_value%3#0
debug: Removing unused variable aggregate%head%5#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%head%7#0
debug: Removing unused variable aggregate%head%8#0
debug: Removing unused variable aggregate%box_get%10#0
debug: Removing unused variable aggregate%box_get%11#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%box_get%12#0
debug: Removing unused variable aggregate%box_get%13#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Removing unused variable aggregate%box_get%14#0
debug: Removing unused variable aggregate%box_get%15#0
debug: Removing unused variable aggregate%bytes_offset%2#0
debug: Removing unused variable aggregate%box_get%16#0
debug: Removing unused variable aggregate%box_get%17#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%box_get%18#0
debug: Removing unused variable aggregate%box_get%19#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 0 1) 0x00010203) // on error: index access is out of bounds to 0x00
debug: Simplified (b== 0x00 0x00) to 1u
debug: Simplified ((extract 1 1) 0x00010203) // on error: index access is out of bounds to 0x01
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified ((extract 2 1) 0x00010203) // on error: index access is out of bounds to 0x02
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified ((extract 3 1) 0x00010203) // on error: index access is out of bounds to 0x03
debug: Simplified (b== 0x03 0x03) to 1u
debug: Simplified (== "hello" "hello") to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let a#0: uint64 = (btoi maybe_value%0#2) with copy of existing registers (Register(source_location=box_storage/contract.py:121:15-49, ir_type=uint64, name='maybe_value_converted%0', version=0),)
debug: Found equivalence set: maybe_value_converted%0#0, a#0
debug: selected a#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable tmp%0#6
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable tmp%1#3
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable tmp%2#3
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable tmp%3#3
debug: Removing unused variable tmp%9#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of examples.box_storage.contract.BoxContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.box_storage.contract.BoxContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing tmp%0#3 with [tmp%0#12, tmp%0#17, tmp%0#9, tmp%0#7]
debug: Coalescing tmp%2#0 with [tmp%2#8, tmp%2#7]
debug: Coalescing tmp%3#0 with [tmp%3#6, tmp%3#5, tmp%3#4]
debug: Coalescing tmp%4#0 with [tmp%4#7, tmp%4#3, tmp%4#2, tmp%4#1]
debug: Coalescing tmp%5#0 with [tmp%5#7, tmp%5#3]
debug: Coalescing a#0 with [a#1]
debug: Coalescing encoded_value%0#0 with [encoded_value%0#9, encoded_value%0#3, encoded_value%0#2, encoded_value%0#1]
debug: Coalescing maybe_value_converted%0#1 with [maybe_value_converted%0#2]
debug: Coalescing value%0#0 with [value%0#2, value%0#1, value%0#3]
debug: Coalescing check%0#0 with [check%0#2, check%0#1, check%0#3]
debug: Coalescing tmp%6#1 with [tmp%6#6, tmp%6#5]
debug: Coalescing value%1#0 with [value%1#1]
debug: Coalescing check%1#0 with [check%1#1]
debug: Coalescing tmp%8#3 with [tmp%8#5, tmp%8#4]
debug: Coalescing value%2#0 with [value%2#1]
debug: Coalescing check%2#0 with [check%2#1]
debug: Coalescing value%3#0 with [value%3#1]
debug: Coalescing check%3#0 with [check%3#1]
debug: Coalescing tmp%12#0 with [tmp%12#3]
debug: Coalescing tmp%13#0 with [tmp%13#3, tmp%13#1]
debug: Coalescing tmp%15#1 with [tmp%15#3]
debug: Coalescing tmp%16#0 with [tmp%16#3, tmp%16#2]
debug: Coalescing tmp%17#0 with [tmp%17#3, tmp%17#1]
debug: Coalescing tmp%18#0 with [tmp%18#3]
debug: Coalescing tmp%34#0 with [tmp%34#1]
debug: Coalescing tmp%35#0 with [tmp%35#1]
debug: Coalescing tmp%46#0 with [tmp%46#1]
debug: Coalescing tmp%49#0 with [tmp%49#1]
debug: Coalescing tmp%61#0 with [tmp%61#1]
debug: Coalescing tmp%62#0 with [tmp%62#1]
debug: Coalescing tmp%73#0 with [tmp%73#1]
debug: Coalescing examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 with [examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#1, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#2, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#3, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#4, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#5, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#6, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#7, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#8, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#9, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#10, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#11, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#12, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#13, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#14, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#15, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#16, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#17, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#18, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#19, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#20, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#21, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#22, examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#23]
debug: Coalescing tmp%0#1 with [tmp%0#18, tmp%0#13, tmp%0#5]
debug: Coalescing tmp%10#0 with [tmp%10#2]
debug: Coalescing tmp%1#6 with [tmp%1#9, tmp%1#7]
debug: Coalescing tmp%2#1 with [tmp%2#9, tmp%2#2]
debug: Coalescing total#0 with [total#3, total#8, total#4, total#5, total#11, total#1, total#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#3, item_index_internal%0#8, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#11, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#2, continue_looping%0#1]
debug: Coalescing val#0 with [val#1]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#2]
debug: Coalescing maybe_exists%1#1 with [maybe_exists%1#3, maybe_exists%1#2]
debug: Coalescing tmp%3#2 with [tmp%3#7]
debug: Coalescing maybe_exists%2#1 with [maybe_exists%2#3, maybe_exists%2#2]
debug: Coalescing values%0#4 with [values%0#5]
debug: Coalescing _%0#0 with [_%0#3, _%0#2]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#3, maybe_exists%0#2, maybe_exists%0#1]
debug: Coalescing _%1#0 with [_%1#1]
debug: Coalescing _%2#0 with [_%2#1]
debug: Coalescing _%3#0 with [_%3#1]
debug: Coalescing maybe_exists%3#0 with [maybe_exists%3#1]
debug: Coalescing times#0 with [times#1]
debug: Coalescing arr_len#0 with [arr_len#1, arr_len#6, arr_len#2, arr_len#3]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing tmp%1#1 with [tmp%1#4, tmp%1#2]
debug: Coalescing tmp%12#1 with [tmp%12#2]
debug: Coalescing exists#0 with [exists#1]
debug: Coalescing state_get%0#0 with [state_get%0#1]
debug: Coalescing key#0 with [key#3, key#2, key#1]
debug: Coalescing resulted in 313 replacement/s
debug: Sequentializing parallel copies in examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {i#0=i#0, arr_len#0=arr_len#0}
debug: pred: {i#0=i#0, arr_len#0=arr_len#0}
debug: ready: 
debug: to_do: i#0, arr_len#0
debug: * to_do arr_len#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr_len#0=arr_len#0}
debug: pred: {i#0=i#0, arr_len#0=arr_len#0}
debug: ready: 
debug: to_do: i#0, arr_len#0
debug: * to_do arr_len#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr_len#0=arr_len#0}
debug: pred: {i#0=i#0, arr_len#0=arr_len#0}
debug: ready: 
debug: to_do: i#0, arr_len#0
debug: * to_do arr_len#0
debug: * to_do i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to box_storage/out_O2/BoxContract.ir/BoxContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to box_storage/out_O2/BoxContract.ir/BoxContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[25]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_set_boxes_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_set_boxes_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_set_boxes_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_set_boxes_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_set_boxes_route@5.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[17]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted main_set_boxes_route@5.ops[70]: 'l-store-copy box%box_extract%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[72]: 'v-load box%box_extract%0#0' with 'l-load box%box_extract%0#0'
debug: Inserted main_set_boxes_route@5.ops[79]: 'l-store-copy box%box_extract%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[81]: 'v-load box%box_extract%1#0' with 'l-load box%box_extract%1#0'
debug: Inserted main_set_boxes_route@5.ops[87]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[89]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_set_boxes_route@5.ops[99]: 'l-store-copy maybe_value_converted%0#1 0'
debug: Replaced main_set_boxes_route@5.ops[101]: 'v-load maybe_value_converted%0#1' with 'l-load maybe_value_converted%0#1'
debug: Inserted main_set_boxes_route@5.ops[104]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_set_boxes_route@5.ops[106]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_set_boxes_route@5.ops[115]: 'l-store-copy value%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[117]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_set_boxes_route@5.ops[120]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_set_boxes_route@5.ops[122]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_set_boxes_route@5.ops[134]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_set_boxes_route@5.ops[136]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_set_boxes_route@5.ops[150]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_set_boxes_route@5.ops[152]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_set_boxes_route@5.ops[164]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_set_boxes_route@5.ops[166]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_set_boxes_route@5.ops[179]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_set_boxes_route@5.ops[181]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_set_boxes_route@5.ops[186]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_set_boxes_route@5.ops[188]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_set_boxes_route@5.ops[209]: 'l-store-copy tmp%22#1 0'
debug: Replaced main_set_boxes_route@5.ops[211]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_set_boxes_route@5.ops[256]: 'l-store-copy tmp%31#1 0'
debug: Replaced main_set_boxes_route@5.ops[258]: 'v-load tmp%31#1' with 'l-load tmp%31#1'
debug: Inserted main_set_boxes_route@5.ops[295]: 'l-store-copy tmp%39#1 0'
debug: Replaced main_set_boxes_route@5.ops[297]: 'v-load tmp%39#1' with 'l-load tmp%39#1'
debug: Inserted main_set_boxes_route@5.ops[310]: 'l-store-copy tmp%42#1 0'
debug: Replaced main_set_boxes_route@5.ops[312]: 'v-load tmp%42#1' with 'l-load tmp%42#1'
debug: Inserted main_set_boxes_route@5.ops[317]: 'l-store-copy tmp%43#1 0'
debug: Replaced main_set_boxes_route@5.ops[319]: 'v-load tmp%43#1' with 'l-load tmp%43#1'
debug: Inserted main_set_boxes_route@5.ops[340]: 'l-store-copy tmp%50#1 0'
debug: Replaced main_set_boxes_route@5.ops[342]: 'v-load tmp%50#1' with 'l-load tmp%50#1'
debug: Inserted main_set_boxes_route@5.ops[387]: 'l-store-copy tmp%60#1 0'
debug: Replaced main_set_boxes_route@5.ops[389]: 'v-load tmp%60#1' with 'l-load tmp%60#1'
debug: Inserted main_set_boxes_route@5.ops[426]: 'l-store-copy tmp%69#1 0'
debug: Replaced main_set_boxes_route@5.ops[428]: 'v-load tmp%69#1' with 'l-load tmp%69#1'
debug: Inserted main_set_boxes_route@5.ops[465]: 'l-store-copy tmp%78#1 0'
debug: Replaced main_set_boxes_route@5.ops[467]: 'v-load tmp%78#1' with 'l-load tmp%78#1'
debug: Inserted main_set_boxes_route@5.ops[472]: 'l-store-copy value%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[474]: 'v-load value%4#0' with 'l-load value%4#0'
debug: Inserted main_set_boxes_route@5.ops[477]: 'l-store-copy tmp%79#1 0'
debug: Replaced main_set_boxes_route@5.ops[479]: 'v-load tmp%79#1' with 'l-load tmp%79#1'
debug: Inserted main_set_boxes_route@5.ops[482]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[484]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_set_boxes_route@5.ops[26]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[29]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_set_boxes_route@5.ops[84]: 'l-store-copy box%array_length%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[87]: 'v-load box%array_length%1#0' with 'l-load box%array_length%1#0'
debug: Inserted main_set_boxes_route@5.ops[95]: 'l-store-copy aggregate%box_get%1#0 1'
debug: Replaced main_set_boxes_route@5.ops[98]: 'v-load aggregate%box_get%1#0' with 'l-load aggregate%box_get%1#0'
debug: Inserted main_set_boxes_route@5.ops[111]: 'l-store-copy encoded_value%2#1 0'
debug: Replaced main_set_boxes_route@5.ops[114]: 'v-load encoded_value%2#1' with 'l-load encoded_value%2#1'
debug: Inserted main_set_boxes_route@5.ops[134]: 'l-store-copy tmp%7#5 0'
debug: Replaced main_set_boxes_route@5.ops[137]: 'v-load tmp%7#5' with 'l-load tmp%7#5'
debug: Inserted main_set_boxes_route@5.ops[145]: 'l-store-copy check%2#0 1'
debug: Replaced main_set_boxes_route@5.ops[148]: 'v-load check%2#0' with 'l-load check%2#0'
debug: Inserted main_set_boxes_route@5.ops[152]: 'l-store-copy tmp%9#4 0'
debug: Replaced main_set_boxes_route@5.ops[155]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[167]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_set_boxes_route@5.ops[170]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[183]: 'l-store-copy extract%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[186]: 'v-load extract%0#0' with 'l-load extract%0#0'
debug: Inserted main_set_boxes_route@5.ops[200]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_set_boxes_route@5.ops[203]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_set_boxes_route@5.ops[210]: 'l-store-copy tmp%21#2 0'
debug: Replaced main_set_boxes_route@5.ops[213]: 'v-load tmp%21#2' with 'l-load tmp%21#2'
debug: Inserted main_set_boxes_route@5.ops[216]: 'l-store-copy extract%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[219]: 'v-load extract%1#0' with 'l-load extract%1#0'
debug: Inserted main_set_boxes_route@5.ops[228]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_set_boxes_route@5.ops[231]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_set_boxes_route@5.ops[238]: 'l-store-copy tmp%26#1 0'
debug: Replaced main_set_boxes_route@5.ops[241]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_set_boxes_route@5.ops[257]: 'l-store-copy bounded_offset%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[260]: 'v-load bounded_offset%0#0' with 'l-load bounded_offset%0#0'
debug: Inserted main_set_boxes_route@5.ops[267]: 'l-store-copy tmp%30#1 0'
debug: Replaced main_set_boxes_route@5.ops[270]: 'v-load tmp%30#1' with 'l-load tmp%30#1'
debug: Inserted main_set_boxes_route@5.ops[279]: 'l-store-copy tmp%32#1 0'
debug: Replaced main_set_boxes_route@5.ops[282]: 'v-load tmp%32#1' with 'l-load tmp%32#1'
debug: Inserted main_set_boxes_route@5.ops[308]: 'l-store-copy tmp%38#1 0'
debug: Replaced main_set_boxes_route@5.ops[311]: 'v-load tmp%38#1' with 'l-load tmp%38#1'
debug: Inserted main_set_boxes_route@5.ops[324]: 'l-store-copy extract%2#0 0'
debug: Replaced main_set_boxes_route@5.ops[327]: 'v-load extract%2#0' with 'l-load extract%2#0'
debug: Inserted main_set_boxes_route@5.ops[341]: 'l-store-copy tmp%45#1 0'
debug: Replaced main_set_boxes_route@5.ops[344]: 'v-load tmp%45#1' with 'l-load tmp%45#1'
debug: Inserted main_set_boxes_route@5.ops[351]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_set_boxes_route@5.ops[354]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_set_boxes_route@5.ops[357]: 'l-store-copy extract%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[360]: 'v-load extract%3#0' with 'l-load extract%3#0'
debug: Inserted main_set_boxes_route@5.ops[369]: 'l-store-copy tmp%51#1 0'
debug: Replaced main_set_boxes_route@5.ops[372]: 'v-load tmp%51#1' with 'l-load tmp%51#1'
debug: Inserted main_set_boxes_route@5.ops[379]: 'l-store-copy tmp%54#1 0'
debug: Replaced main_set_boxes_route@5.ops[382]: 'v-load tmp%54#1' with 'l-load tmp%54#1'
debug: Inserted main_set_boxes_route@5.ops[398]: 'l-store-copy bounded_offset%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[401]: 'v-load bounded_offset%1#0' with 'l-load bounded_offset%1#0'
debug: Inserted main_set_boxes_route@5.ops[408]: 'l-store-copy tmp%59#1 0'
debug: Replaced main_set_boxes_route@5.ops[411]: 'v-load tmp%59#1' with 'l-load tmp%59#1'
debug: Inserted main_set_boxes_route@5.ops[420]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_set_boxes_route@5.ops[423]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_set_boxes_route@5.ops[449]: 'l-store-copy tmp%68#1 0'
debug: Replaced main_set_boxes_route@5.ops[452]: 'v-load tmp%68#1' with 'l-load tmp%68#1'
debug: Inserted main_set_boxes_route@5.ops[461]: 'l-store-copy tmp%70#1 0'
debug: Replaced main_set_boxes_route@5.ops[464]: 'v-load tmp%70#1' with 'l-load tmp%70#1'
debug: Inserted main_set_boxes_route@5.ops[490]: 'l-store-copy tmp%77#1 0'
debug: Replaced main_set_boxes_route@5.ops[493]: 'v-load tmp%77#1' with 'l-load tmp%77#1'
debug: Inserted main_set_boxes_route@5.ops[58]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[62]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted main_set_boxes_route@5.ops[98]: 'l-store-copy aggregate%box_get%0#0 1'
debug: Replaced main_set_boxes_route@5.ops[102]: 'v-load aggregate%box_get%0#0' with 'l-load aggregate%box_get%0#0'
debug: Inserted main_set_boxes_route@5.ops[234]: 'l-store-copy tmp%23#1 1'
debug: Replaced main_set_boxes_route@5.ops[237]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_set_boxes_route@5.ops[236]: 'l-store-copy tmp%25#1 1'
debug: Replaced main_set_boxes_route@5.ops[240]: 'v-load tmp%25#1' with 'l-load tmp%25#1'
debug: Inserted main_set_boxes_route@5.ops[247]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_set_boxes_route@5.ops[251]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_set_boxes_route@5.ops[257]: 'l-store-copy is_out_of_bounds%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[261]: 'v-load is_out_of_bounds%0#0' with 'l-load is_out_of_bounds%0#0'
debug: Inserted main_set_boxes_route@5.ops[268]: 'l-store-copy bounded_index%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[272]: 'v-load bounded_index%0#0' with 'l-load bounded_index%0#0'
debug: Inserted main_set_boxes_route@5.ops[290]: 'l-store-copy tmp%32#1 1'
debug: Replaced main_set_boxes_route@5.ops[293]: 'v-load tmp%32#1' with 'l-load tmp%32#1'
debug: Inserted main_set_boxes_route@5.ops[292]: 'l-store-copy tmp%34#0 1'
debug: Replaced main_set_boxes_route@5.ops[296]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_set_boxes_route@5.ops[298]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_set_boxes_route@5.ops[302]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_set_boxes_route@5.ops[308]: 'l-store-copy is_out_of_bounds%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[312]: 'v-load is_out_of_bounds%1#0' with 'l-load is_out_of_bounds%1#0'
debug: Inserted main_set_boxes_route@5.ops[314]: 'l-store-copy bounded_index%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[318]: 'v-load bounded_index%1#0' with 'l-load bounded_index%1#0'
debug: Inserted main_set_boxes_route@5.ops[385]: 'l-store-copy tmp%51#1 1'
debug: Replaced main_set_boxes_route@5.ops[388]: 'v-load tmp%51#1' with 'l-load tmp%51#1'
debug: Inserted main_set_boxes_route@5.ops[387]: 'l-store-copy tmp%53#1 1'
debug: Replaced main_set_boxes_route@5.ops[391]: 'v-load tmp%53#1' with 'l-load tmp%53#1'
debug: Inserted main_set_boxes_route@5.ops[398]: 'l-store-copy tmp%55#1 0'
debug: Replaced main_set_boxes_route@5.ops[402]: 'v-load tmp%55#1' with 'l-load tmp%55#1'
debug: Inserted main_set_boxes_route@5.ops[408]: 'l-store-copy is_out_of_bounds%2#0 0'
debug: Replaced main_set_boxes_route@5.ops[412]: 'v-load is_out_of_bounds%2#0' with 'l-load is_out_of_bounds%2#0'
debug: Inserted main_set_boxes_route@5.ops[419]: 'l-store-copy bounded_index%2#0 0'
debug: Replaced main_set_boxes_route@5.ops[423]: 'v-load bounded_index%2#0' with 'l-load bounded_index%2#0'
debug: Inserted main_set_boxes_route@5.ops[441]: 'l-store-copy tmp%61#0 1'
debug: Replaced main_set_boxes_route@5.ops[444]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_set_boxes_route@5.ops[443]: 'l-store-copy tmp%63#1 1'
debug: Replaced main_set_boxes_route@5.ops[447]: 'v-load tmp%63#1' with 'l-load tmp%63#1'
debug: Inserted main_set_boxes_route@5.ops[449]: 'l-store-copy tmp%64#1 0'
debug: Replaced main_set_boxes_route@5.ops[453]: 'v-load tmp%64#1' with 'l-load tmp%64#1'
debug: Inserted main_set_boxes_route@5.ops[459]: 'l-store-copy is_out_of_bounds%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[463]: 'v-load is_out_of_bounds%3#0' with 'l-load is_out_of_bounds%3#0'
debug: Inserted main_set_boxes_route@5.ops[465]: 'l-store-copy bounded_index%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[469]: 'v-load bounded_index%3#0' with 'l-load bounded_index%3#0'
debug: Inserted main_set_boxes_route@5.ops[487]: 'l-store-copy tmp%70#1 1'
debug: Replaced main_set_boxes_route@5.ops[490]: 'v-load tmp%70#1' with 'l-load tmp%70#1'
debug: Inserted main_set_boxes_route@5.ops[489]: 'l-store-copy tmp%72#1 1'
debug: Replaced main_set_boxes_route@5.ops[493]: 'v-load tmp%72#1' with 'l-load tmp%72#1'
debug: Inserted main_set_boxes_route@5.ops[495]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_set_boxes_route@5.ops[499]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_set_boxes_route@5.ops[505]: 'l-store-copy is_out_of_bounds%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[509]: 'v-load is_out_of_bounds%4#0' with 'l-load is_out_of_bounds%4#0'
debug: Inserted main_set_boxes_route@5.ops[511]: 'l-store-copy bounded_index%4#0 0'
debug: Replaced main_set_boxes_route@5.ops[515]: 'v-load bounded_index%4#0' with 'l-load bounded_index%4#0'
debug: Inserted main_set_boxes_route@5.ops[133]: 'l-store-copy value%1#0 0'
debug: Replaced main_set_boxes_route@5.ops[139]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted main_set_boxes_route@5.ops[167]: 'l-store-copy value%3#0 0'
debug: Replaced main_set_boxes_route@5.ops[173]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted main_set_boxes_route@5.ops[184]: 'l-store-copy tmp%14#3 0'
debug: Replaced main_set_boxes_route@5.ops[190]: 'v-load tmp%14#3' with 'l-load tmp%14#3'
debug: Inserted main_set_boxes_route@5.ops[259]: 'l-store-copy tmp%9#4 1'
debug: Replaced main_set_boxes_route@5.ops[264]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[265]: 'l-store-copy tmp%9#4 2'
debug: Replaced main_set_boxes_route@5.ops[270]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[312]: 'l-store-copy tmp%9#4 1'
debug: Replaced main_set_boxes_route@5.ops[317]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[339]: 'l-store-copy tmp%40#1 0'
debug: Replaced main_set_boxes_route@5.ops[345]: 'v-load tmp%40#1' with 'l-load tmp%40#1'
debug: Inserted main_set_boxes_route@5.ops[414]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_set_boxes_route@5.ops[419]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[420]: 'l-store-copy tmp%12#0 2'
debug: Replaced main_set_boxes_route@5.ops[425]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[467]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_set_boxes_route@5.ops[472]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[514]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_set_boxes_route@5.ops[519]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[19]: 'l-store-copy a#0 0'
debug: Replaced main_set_boxes_route@5.ops[25]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_set_boxes_route@5.ops[46]: 'l-store-copy tmp%0#16 0'
debug: Replaced main_set_boxes_route@5.ops[52]: 'v-load tmp%0#16' with 'l-load tmp%0#16'
debug: Inserted main_set_boxes_route@5.ops[244]: 'l-store-copy tmp%23#1 1'
debug: Replaced main_set_boxes_route@5.ops[250]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_set_boxes_route@5.ops[400]: 'l-store-copy tmp%51#1 1'
debug: Replaced main_set_boxes_route@5.ops[406]: 'v-load tmp%51#1' with 'l-load tmp%51#1'
debug: Inserted main_set_boxes_route@5.ops[152]: 'l-store-copy value%2#0 1'
debug: Replaced main_set_boxes_route@5.ops[160]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted main_set_boxes_route@5.ops[37]: 'l-store-copy b#0 1'
debug: Replaced main_set_boxes_route@5.ops[45]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_set_boxes_route@5.ops[79]: 'l-store-copy box%array_length%0#0 0'
debug: Replaced main_set_boxes_route@5.ops[91]: 'v-load box%array_length%0#0' with 'l-load box%array_length%0#0'
debug: Inserted main_set_boxes_route@5.ops[216]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_set_boxes_route@5.ops[229]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_set_boxes_route@5.ops[373]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_set_boxes_route@5.ops[386]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_set_boxes_route@5.ops[22]: 'l-store-copy b#0 1'
debug: Replaced main_set_boxes_route@5.ops[37]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_set_boxes_route@5.ops[317]: 'l-store-copy tmp%37#1 0'
debug: Replaced main_set_boxes_route@5.ops[337]: 'v-load tmp%37#1' with 'l-load tmp%37#1'
debug: Inserted main_set_boxes_route@5.ops[475]: 'l-store-copy tmp%66#1 0'
debug: Replaced main_set_boxes_route@5.ops[495]: 'v-load tmp%66#1' with 'l-load tmp%66#1'
debug: Inserted main_set_boxes_route@5.ops[523]: 'l-store-copy tmp%75#1 0'
debug: Replaced main_set_boxes_route@5.ops[543]: 'v-load tmp%75#1' with 'l-load tmp%75#1'
debug: Inserted main_set_boxes_route@5.ops[25]: 'l-store-copy c#0 2'
debug: Replaced main_set_boxes_route@5.ops[45]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[265]: 'l-store-copy tmp%29#1 0'
debug: Replaced main_set_boxes_route@5.ops[291]: 'v-load tmp%29#1' with 'l-load tmp%29#1'
debug: Inserted main_set_boxes_route@5.ops[424]: 'l-store-copy tmp%57#1 0'
debug: Replaced main_set_boxes_route@5.ops[450]: 'v-load tmp%57#1' with 'l-load tmp%57#1'
debug: Inserted main_set_boxes_route@5.ops[194]: 'l-store-copy c#0 1'
debug: Replaced main_set_boxes_route@5.ops[226]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[161]: 'l-store-copy c#0 1'
debug: Replaced main_set_boxes_route@5.ops[194]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[283]: 'l-store-copy tmp%9#4 2'
debug: Replaced main_set_boxes_route@5.ops[325]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[443]: 'l-store-copy tmp%12#0 2'
debug: Replaced main_set_boxes_route@5.ops[485]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[492]: 'l-store-copy tmp%12#0 3'
debug: Replaced main_set_boxes_route@5.ops[534]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[223]: 'l-store-copy tmp%9#4 2'
debug: Replaced main_set_boxes_route@5.ops[271]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[290]: 'l-store-copy c#0 3'
debug: Replaced main_set_boxes_route@5.ops[338]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[385]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_set_boxes_route@5.ops[433]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[452]: 'l-store-copy tmp%0#16 3'
debug: Replaced main_set_boxes_route@5.ops[501]: 'v-load tmp%0#16' with 'l-load tmp%0#16'
debug: Inserted main_set_boxes_route@5.ops[502]: 'l-store-copy tmp%0#16 3'
debug: Replaced main_set_boxes_route@5.ops[550]: 'v-load tmp%0#16' with 'l-load tmp%0#16'
debug: Inserted main_set_boxes_route@5.ops[167]: 'l-store-copy tmp%9#4 2'
debug: Replaced main_set_boxes_route@5.ops[223]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_set_boxes_route@5.ops[230]: 'l-store-copy c#0 3'
debug: Replaced main_set_boxes_route@5.ops[291]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[393]: 'l-store-copy tmp%0#16 3'
debug: Replaced main_set_boxes_route@5.ops[454]: 'v-load tmp%0#16' with 'l-load tmp%0#16'
debug: Inserted main_set_boxes_route@5.ops[48]: 'l-store-copy b#0 0'
debug: Replaced main_set_boxes_route@5.ops[142]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_set_boxes_route@5.ops[46]: 'l-store-copy c#0 2'
debug: Replaced main_set_boxes_route@5.ops[162]: 'v-load c#0' with 'l-load c#0'
debug: Inserted main_set_boxes_route@5.ops[58]: 'l-store-copy tmp%0#16 3'
debug: Replaced main_set_boxes_route@5.ops[181]: 'v-load tmp%0#16' with 'l-load tmp%0#16'
debug: Inserted main_set_boxes_route@5.ops[187]: 'l-store-copy tmp%12#0 3'
debug: Replaced main_set_boxes_route@5.ops[390]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_set_boxes_route@5.ops[182]: 'l-store-copy tmp%0#16 3'
debug: Replaced main_set_boxes_route@5.ops[397]: 'v-load tmp%0#16' with 'l-load tmp%0#16'
debug: Inserted main_set_boxes_route@5.ops[145]: 'l-store-copy b#0 3'
debug: Replaced main_set_boxes_route@5.ops[365]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_check_keys_route@6.ops[1]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_check_keys_route@6.ops[3]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_check_keys_route@6.ops[5]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_check_keys_route@6.ops[7]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_check_keys_route@6.ops[10]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_check_keys_route@6.ops[12]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_check_keys_route@6.ops[15]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_check_keys_route@6.ops[17]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_create_many_ints_route@7.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_create_many_ints_route@7.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_create_many_ints_route@7.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_create_many_ints_route@7.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_create_many_ints_route@7.ops[10]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_create_many_ints_route@7.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_create_many_ints_route@7.ops[19]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_create_many_ints_route@7.ops[21]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_set_many_ints_route@8.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_set_many_ints_route@8.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_set_many_ints_route@8.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_set_many_ints_route@8.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_set_many_ints_route@8.ops[10]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_set_many_ints_route@8.ops[12]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_set_many_ints_route@8.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced main_set_many_ints_route@8.ops[17]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted main_set_many_ints_route@8.ops[31]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_set_many_ints_route@8.ops[33]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_set_many_ints_route@8.ops[25]: 'l-store-copy box%index_bytes_offset%0#0 0'
debug: Replaced main_set_many_ints_route@8.ops[28]: 'v-load box%index_bytes_offset%0#0' with 'l-load box%index_bytes_offset%0#0'
debug: Inserted main_set_many_ints_route@8.ops[19]: 'l-store-copy index#0 0'
debug: Replaced main_set_many_ints_route@8.ops[23]: 'v-load index#0' with 'l-load index#0'
debug: Inserted main_set_many_ints_route@8.ops[22]: 'l-store-copy reinterpret_Encoded(uint64)%2#0 1'
debug: Replaced main_set_many_ints_route@8.ops[31]: 'v-load reinterpret_Encoded(uint64)%2#0' with 'l-load reinterpret_Encoded(uint64)%2#0'
debug: Inserted main_sum_many_ints_route@9.ops[1]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_sum_many_ints_route@9.ops[3]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_sum_many_ints_route@9.ops[5]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_sum_many_ints_route@9.ops[7]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_sum_many_ints_route@9.ops[10]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_sum_many_ints_route@9.ops[12]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_while_top@47.ops[5]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_while_top@47.ops[7]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_while_top@47.ops[1]: 'l-store-copy tmp%1#6 0'
debug: Replaced main_while_top@47.ops[4]: 'v-load tmp%1#6' with 'l-load tmp%1#6'
debug: Inserted main_after_while@52.ops[4]: 'l-store-copy aggregate%box_get%3#0 1'
debug: Replaced main_after_while@52.ops[7]: 'v-load aggregate%box_get%3#0' with 'l-load aggregate%box_get%3#0'
debug: Inserted main_for_header@10.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@10.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@11.ops[8]: 'l-store-copy box%box_extract%2#0 0'
debug: Replaced main_for_body@11.ops[10]: 'v-load box%box_extract%2#0' with 'l-load box%box_extract%2#0'
debug: Inserted main_for_body@11.ops[3]: 'l-store-copy box%index_bytes_offset%1#0 0'
debug: Replaced main_for_body@11.ops[6]: 'v-load box%index_bytes_offset%1#0' with 'l-load box%index_bytes_offset%1#0'
debug: Inserted main_for_body@11.ops[13]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@11.ops[16]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@11.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@11.ops[20]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@12.ops[6]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_after_for@12.ops[8]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_after_for@12.ops[11]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@12.ops[13]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@12.ops[2]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_after_for@12.ops[5]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_delete_boxes_route@13.ops[1]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_delete_boxes_route@13.ops[3]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_delete_boxes_route@13.ops[5]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_delete_boxes_route@13.ops[7]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_delete_boxes_route@13.ops[10]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_delete_boxes_route@13.ops[12]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_delete_boxes_route@13.ops[26]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced main_delete_boxes_route@13.ops[28]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_delete_boxes_route@13.ops[35]: 'l-store-copy state_get%0#2 0'
debug: Replaced main_delete_boxes_route@13.ops[37]: 'v-load state_get%0#2' with 'l-load state_get%0#2'
debug: Inserted main_delete_boxes_route@13.ops[40]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_delete_boxes_route@13.ops[42]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_delete_boxes_route@13.ops[52]: 'l-store-copy state_get%1#0 0'
debug: Replaced main_delete_boxes_route@13.ops[54]: 'v-load state_get%1#0' with 'l-load state_get%1#0'
debug: Inserted main_delete_boxes_route@13.ops[56]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_delete_boxes_route@13.ops[58]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_delete_boxes_route@13.ops[61]: 'l-store-copy tmp%3#2 0'
debug: Replaced main_delete_boxes_route@13.ops[63]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted main_delete_boxes_route@13.ops[73]: 'l-store-copy state_get%2#0 0'
debug: Replaced main_delete_boxes_route@13.ops[75]: 'v-load state_get%2#0' with 'l-load state_get%2#0'
debug: Inserted main_delete_boxes_route@13.ops[78]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_delete_boxes_route@13.ops[80]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_delete_boxes_route@13.ops[84]: 'l-store-copy tmp%7#4 0'
debug: Replaced main_delete_boxes_route@13.ops[86]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_delete_boxes_route@13.ops[90]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_delete_boxes_route@13.ops[92]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_delete_boxes_route@13.ops[98]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_delete_boxes_route@13.ops[100]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_delete_boxes_route@13.ops[30]: 'l-store-copy a#0 0'
debug: Replaced main_delete_boxes_route@13.ops[33]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_delete_boxes_route@13.ops[48]: 'l-store-copy maybe_value%1#2 0'
debug: Replaced main_delete_boxes_route@13.ops[51]: 'v-load maybe_value%1#2' with 'l-load maybe_value%1#2'
debug: Inserted main_delete_boxes_route@13.ops[70]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced main_delete_boxes_route@13.ops[73]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_delete_boxes_route@13.ops[47]: 'l-store-copy maybe_exists%1#1 1'
debug: Replaced main_delete_boxes_route@13.ops[53]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_delete_boxes_route@13.ops[70]: 'l-store-copy maybe_exists%2#1 1'
debug: Replaced main_delete_boxes_route@13.ops[76]: 'v-load maybe_exists%2#1' with 'l-load maybe_exists%2#1'
debug: Inserted main_delete_boxes_route@13.ops[25]: 'l-store-copy a_exists#0 1'
debug: Replaced main_delete_boxes_route@13.ops[35]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted main_delete_boxes_route@13.ops[36]: 'l-store-copy a_exists#0 2'
debug: Replaced main_delete_boxes_route@13.ops[89]: 'v-load a_exists#0' with 'l-load a_exists#0'
debug: Inserted main_delete_boxes_route@13.ops[35]: 'l-store-copy a#0 2'
debug: Replaced main_delete_boxes_route@13.ops[96]: 'v-load a#0' with 'l-load a#0'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[1]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[3]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[5]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[7]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[10]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[12]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[18]: 'l-store-copy box%box_extract%3#0 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[20]: 'v-load box%box_extract%3#0' with 'l-load box%box_extract%3#0'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[22]: 'l-store-copy values%0#4 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[24]: 'v-load values%0#4' with 'l-load values%0#4'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[27]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[29]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[37]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[39]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_indirect_extract_and_replace_route@14.ops[31]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_indirect_extract_and_replace_route@14.ops[35]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_read_boxes_route@15.ops[1]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_read_boxes_route@15.ops[3]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_read_boxes_route@15.ops[5]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_read_boxes_route@15.ops[7]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_read_boxes_route@15.ops[10]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_read_boxes_route@15.ops[12]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_read_boxes_route@15.ops[22]: 'l-store-copy maybe_value_converted%0#1 0'
debug: Replaced main_read_boxes_route@15.ops[24]: 'v-load maybe_value_converted%0#1' with 'l-load maybe_value_converted%0#1'
debug: Inserted main_read_boxes_route@15.ops[27]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_read_boxes_route@15.ops[29]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_read_boxes_route@15.ops[52]: 'l-store-copy box%box_extract%4#0 0'
debug: Replaced main_read_boxes_route@15.ops[54]: 'v-load box%box_extract%4#0' with 'l-load box%box_extract%4#0'
debug: Inserted main_read_boxes_route@15.ops[62]: 'l-store-copy aggregate%length%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[64]: 'v-load aggregate%length%2#0' with 'l-load aggregate%length%2#0'
debug: Inserted main_read_boxes_route@15.ops[66]: 'l-store-copy aggregate%as_bytes%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[68]: 'v-load aggregate%as_bytes%2#0' with 'l-load aggregate%as_bytes%2#0'
debug: Inserted main_read_boxes_route@15.ops[70]: 'l-store-copy aggregate%length_uint16%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[72]: 'v-load aggregate%length_uint16%2#0' with 'l-load aggregate%length_uint16%2#0'
debug: Inserted main_read_boxes_route@15.ops[86]: 'l-store-copy aggregate%current_tail_offset%0#0 0'
debug: Replaced main_read_boxes_route@15.ops[88]: 'v-load aggregate%current_tail_offset%0#0' with 'l-load aggregate%current_tail_offset%0#0'
debug: Inserted main_read_boxes_route@15.ops[90]: 'l-store-copy aggregate%as_bytes%4#0 0'
debug: Replaced main_read_boxes_route@15.ops[92]: 'v-load aggregate%as_bytes%4#0' with 'l-load aggregate%as_bytes%4#0'
debug: Inserted main_read_boxes_route@15.ops[105]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced main_read_boxes_route@15.ops[107]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted main_read_boxes_route@15.ops[110]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced main_read_boxes_route@15.ops[112]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted main_read_boxes_route@15.ops[119]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_read_boxes_route@15.ops[121]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_read_boxes_route@15.ops[124]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_read_boxes_route@15.ops[126]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_read_boxes_route@15.ops[16]: 'l-store-copy aggregate%box_get%5#0 1'
debug: Replaced main_read_boxes_route@15.ops[19]: 'v-load aggregate%box_get%5#0' with 'l-load aggregate%box_get%5#0'
debug: Inserted main_read_boxes_route@15.ops[36]: 'l-store-copy aggregate%box_get%7#0 1'
debug: Replaced main_read_boxes_route@15.ops[39]: 'v-load aggregate%box_get%7#0' with 'l-load aggregate%box_get%7#0'
debug: Inserted main_read_boxes_route@15.ops[46]: 'l-store-copy aggregate%box_get%9#0 1'
debug: Replaced main_read_boxes_route@15.ops[49]: 'v-load aggregate%box_get%9#0' with 'l-load aggregate%box_get%9#0'
debug: Inserted main_read_boxes_route@15.ops[85]: 'l-store-copy aggregate%data_length%0#0 0'
debug: Replaced main_read_boxes_route@15.ops[88]: 'v-load aggregate%data_length%0#0' with 'l-load aggregate%data_length%0#0'
debug: Inserted main_read_boxes_route@15.ops[98]: 'l-store-copy aggregate%offset_as_uint16%1#0 0'
debug: Replaced main_read_boxes_route@15.ops[101]: 'v-load aggregate%offset_as_uint16%1#0' with 'l-load aggregate%offset_as_uint16%1#0'
debug: Inserted main_read_boxes_route@15.ops[106]: 'l-store-copy aggregate%val_as_bytes%4#0 0'
debug: Replaced main_read_boxes_route@15.ops[109]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted main_read_boxes_route@15.ops[121]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced main_read_boxes_route@15.ops[124]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted main_read_boxes_route@15.ops[18]: 'l-store-copy aggregate%box_get%4#0 1'
debug: Replaced main_read_boxes_route@15.ops[22]: 'v-load aggregate%box_get%4#0' with 'l-load aggregate%box_get%4#0'
debug: Inserted main_read_boxes_route@15.ops[39]: 'l-store-copy aggregate%box_get%6#0 1'
debug: Replaced main_read_boxes_route@15.ops[43]: 'v-load aggregate%box_get%6#0' with 'l-load aggregate%box_get%6#0'
debug: Inserted main_read_boxes_route@15.ops[105]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[111]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted main_read_boxes_route@15.ops[80]: 'l-store-copy aggregate%encoded_value%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[86]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted main_read_boxes_route@15.ops[66]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[79]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_read_boxes_route@15.ops[64]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced main_read_boxes_route@15.ops[84]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted main_read_boxes_route@15.ops[87]: 'l-store-copy aggregate%head%1#0 1'
debug: Replaced main_read_boxes_route@15.ops[106]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted main_read_boxes_route@15.ops[45]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_read_boxes_route@15.ops[67]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_read_boxes_route@15.ops[34]: 'l-store-copy tmp%1#6 0'
debug: Replaced main_read_boxes_route@15.ops[64]: 'v-load tmp%1#6' with 'l-load tmp%1#6'
debug: Inserted main_read_boxes_route@15.ops[92]: 'l-store-copy aggregate%encoded_value%2#0 1'
debug: Replaced main_read_boxes_route@15.ops[124]: 'v-load aggregate%encoded_value%2#0' with 'l-load aggregate%encoded_value%2#0'
debug: Inserted main_read_boxes_route@15.ops[63]: 'l-store-copy values%0#4 2'
debug: Replaced main_read_boxes_route@15.ops[115]: 'v-load values%0#4' with 'l-load values%0#4'
debug: Inserted main_read_boxes_route@15.ops[52]: 'l-store-copy aggregate%box_get%8#0 3'
debug: Replaced main_read_boxes_route@15.ops[131]: 'v-load aggregate%box_get%8#0' with 'l-load aggregate%box_get%8#0'
debug: Inserted main_boxes_exist_route@16.ops[1]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_boxes_exist_route@16.ops[3]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_boxes_exist_route@16.ops[5]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_boxes_exist_route@16.ops[7]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_boxes_exist_route@16.ops[10]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_boxes_exist_route@16.ops[12]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_boxes_exist_route@16.ops[34]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced main_boxes_exist_route@16.ops[36]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted main_boxes_exist_route@16.ops[40]: 'l-store-copy aggregate%set_bit%0#0 0'
debug: Replaced main_boxes_exist_route@16.ops[42]: 'v-load aggregate%set_bit%0#0' with 'l-load aggregate%set_bit%0#0'
debug: Inserted main_boxes_exist_route@16.ops[46]: 'l-store-copy aggregate%set_bit%1#0 0'
debug: Replaced main_boxes_exist_route@16.ops[48]: 'v-load aggregate%set_bit%1#0' with 'l-load aggregate%set_bit%1#0'
debug: Inserted main_boxes_exist_route@16.ops[56]: 'l-store-copy tmp%56#0 0'
debug: Replaced main_boxes_exist_route@16.ops[58]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted main_boxes_exist_route@16.ops[61]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_boxes_exist_route@16.ops[63]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_boxes_exist_route@16.ops[52]: 'l-store-copy aggregate%set_bit%2#0 0'
debug: Replaced main_boxes_exist_route@16.ops[55]: 'v-load aggregate%set_bit%2#0' with 'l-load aggregate%set_bit%2#0'
debug: Inserted main_boxes_exist_route@16.ops[16]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_boxes_exist_route@16.ops[33]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_boxes_exist_route@16.ops[21]: 'l-store-copy maybe_exists%1#1 2'
debug: Replaced main_boxes_exist_route@16.ops[40]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_boxes_exist_route@16.ops[26]: 'l-store-copy maybe_exists%2#1 3'
debug: Replaced main_boxes_exist_route@16.ops[47]: 'v-load maybe_exists%2#1' with 'l-load maybe_exists%2#1'
debug: Inserted main_boxes_exist_route@16.ops[31]: 'l-store-copy maybe_exists%3#0 4'
debug: Replaced main_boxes_exist_route@16.ops[54]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_create_dynamic_box_route@17.ops[1]: 'l-store-copy tmp%57#0 0'
debug: Replaced main_create_dynamic_box_route@17.ops[3]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted main_create_dynamic_box_route@17.ops[5]: 'l-store-copy tmp%58#0 0'
debug: Replaced main_create_dynamic_box_route@17.ops[7]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted main_create_dynamic_box_route@17.ops[10]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_create_dynamic_box_route@17.ops[12]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_create_dynamic_box_route@17.ops[21]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_create_dynamic_box_route@17.ops[23]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_delete_dynamic_box_route@18.ops[1]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_delete_dynamic_box_route@18.ops[3]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_delete_dynamic_box_route@18.ops[5]: 'l-store-copy tmp%62#0 0'
debug: Replaced main_delete_dynamic_box_route@18.ops[7]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted main_delete_dynamic_box_route@18.ops[10]: 'l-store-copy tmp%63#0 0'
debug: Replaced main_delete_dynamic_box_route@18.ops[12]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted main_delete_dynamic_box_route@18.ops[18]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_delete_dynamic_box_route@18.ops[20]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_append_dynamic_box_route@19.ops[1]: 'l-store-copy tmp%65#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[3]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted main_append_dynamic_box_route@19.ops[5]: 'l-store-copy tmp%66#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[7]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted main_append_dynamic_box_route@19.ops[10]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[12]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_append_dynamic_box_route@19.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%3#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[17]: 'v-load reinterpret_Encoded(uint64)%3#0' with 'l-load reinterpret_Encoded(uint64)%3#0'
debug: Inserted main_append_dynamic_box_route@19.ops[24]: 'l-store-copy box%box_extract%5#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[26]: 'v-load box%box_extract%5#0' with 'l-load box%box_extract%5#0'
debug: Inserted main_append_dynamic_box_route@19.ops[28]: 'l-store-copy arr_len#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[30]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_append_dynamic_box_route@19.ops[33]: 'l-store-copy tmp%1#6 0'
debug: Replaced main_append_dynamic_box_route@19.ops[35]: 'v-load tmp%1#6' with 'l-load tmp%1#6'
debug: Inserted main_append_dynamic_box_route@19.ops[38]: 'l-store-copy tmp%2#6 0'
debug: Replaced main_append_dynamic_box_route@19.ops[41]: 'v-load tmp%2#6' with 'l-load tmp%2#6'
debug: Inserted main_append_dynamic_box_route@19.ops[43]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[46]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_append_dynamic_box_route@19.ops[19]: 'l-store-copy times#0 0'
debug: Replaced main_append_dynamic_box_route@19.ops[32]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_for_header@20.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@20.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@21.ops[6]: 'l-store-copy box%index_bytes_offset%2#0 0'
debug: Replaced main_for_body@21.ops[9]: 'v-load box%index_bytes_offset%2#0' with 'l-load box%index_bytes_offset%2#0'
debug: Inserted main_for_body@21.ops[11]: 'l-store-copy box%offset%8#0 0'
debug: Replaced main_for_body@21.ops[14]: 'v-load box%offset%8#0' with 'l-load box%offset%8#0'
debug: Inserted main_for_body@21.ops[2]: 'l-store-copy aggregate%val_as_bytes%5#0 0'
debug: Replaced main_for_body@21.ops[16]: 'v-load aggregate%val_as_bytes%5#0' with 'l-load aggregate%val_as_bytes%5#0'
debug: Inserted main_for_body@21.ops[5]: 'l-store-copy arr_len#0 1'
debug: Replaced main_for_body@21.ops[19]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_for_body@21.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@21.ops[24]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@22.ops[2]: 'l-store-copy aggregate%val_as_bytes%6#0 0'
debug: Replaced main_after_for@22.ops[4]: 'v-load aggregate%val_as_bytes%6#0' with 'l-load aggregate%val_as_bytes%6#0'
debug: Inserted main_after_for@22.ops[6]: 'l-store-copy aggregate%bitlen%0#0 0'
debug: Replaced main_after_for@22.ops[8]: 'v-load aggregate%bitlen%0#0' with 'l-load aggregate%bitlen%0#0'
debug: Inserted main_after_for@22.ops[11]: 'l-store-copy aggregate%no_overflow%0#0 0'
debug: Replaced main_after_for@22.ops[13]: 'v-load aggregate%no_overflow%0#0' with 'l-load aggregate%no_overflow%0#0'
debug: Inserted main_after_for@22.ops[26]: 'l-store-copy box%box_extract%6#0 0'
debug: Replaced main_after_for@22.ops[28]: 'v-load box%box_extract%6#0' with 'l-load box%box_extract%6#0'
debug: Inserted main_after_for@22.ops[30]: 'l-store-copy box%array_length%2#0 0'
debug: Replaced main_after_for@22.ops[32]: 'v-load box%array_length%2#0' with 'l-load box%array_length%2#0'
debug: Inserted main_after_for@22.ops[38]: 'l-store-copy tmp%72#0 0'
debug: Replaced main_after_for@22.ops[40]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted main_after_for@22.ops[43]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@22.ops[45]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@22.ops[34]: 'l-store-copy aggregate%val_as_bytes%7#0 0'
debug: Replaced main_after_for@22.ops[37]: 'v-load aggregate%val_as_bytes%7#0' with 'l-load aggregate%val_as_bytes%7#0'
debug: Inserted main_after_for@22.ops[17]: 'l-store-copy aggregate%uint16%0#0 0'
debug: Replaced main_after_for@22.ops[21]: 'v-load aggregate%uint16%0#0' with 'l-load aggregate%uint16%0#0'
debug: Inserted main_after_for@22.ops[5]: 'l-store-copy aggregate%val_as_bytes%6#0 0'
debug: Replaced main_after_for@22.ops[16]: 'v-load aggregate%val_as_bytes%6#0' with 'l-load aggregate%val_as_bytes%6#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[1]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[3]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[5]: 'l-store-copy tmp%74#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[7]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[10]: 'l-store-copy tmp%75#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[12]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%4#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[17]: 'v-load reinterpret_Encoded(uint64)%4#0' with 'l-load reinterpret_Encoded(uint64)%4#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[24]: 'l-store-copy box%box_extract%7#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[26]: 'v-load box%box_extract%7#0' with 'l-load box%box_extract%7#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[28]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[30]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_pop_dynamic_box_route@23.ops[33]: 'l-store-copy arr_len#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[35]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[37]: 'l-store-copy aggregate%val_as_bytes%8#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[39]: 'v-load aggregate%val_as_bytes%8#0' with 'l-load aggregate%val_as_bytes%8#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[41]: 'l-store-copy aggregate%bitlen%1#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[43]: 'v-load aggregate%bitlen%1#0' with 'l-load aggregate%bitlen%1#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[46]: 'l-store-copy aggregate%no_overflow%1#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[48]: 'v-load aggregate%no_overflow%1#0' with 'l-load aggregate%no_overflow%1#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[72]: 'l-store-copy box%box_extract%8#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[74]: 'v-load box%box_extract%8#0' with 'l-load box%box_extract%8#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[76]: 'l-store-copy box%array_length%3#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[78]: 'v-load box%array_length%3#0' with 'l-load box%array_length%3#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[84]: 'l-store-copy tmp%80#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[86]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[89]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[91]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[60]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[63]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[65]: 'l-store-copy tmp%4#4 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[68]: 'v-load tmp%4#4' with 'l-load tmp%4#4'
debug: Inserted main_pop_dynamic_box_route@23.ops[82]: 'l-store-copy aggregate%val_as_bytes%9#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[85]: 'v-load aggregate%val_as_bytes%9#0' with 'l-load aggregate%val_as_bytes%9#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[52]: 'l-store-copy aggregate%uint16%1#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[56]: 'v-load aggregate%uint16%1#0' with 'l-load aggregate%uint16%1#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[40]: 'l-store-copy aggregate%val_as_bytes%8#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[51]: 'v-load aggregate%val_as_bytes%8#0' with 'l-load aggregate%val_as_bytes%8#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[19]: 'l-store-copy times#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[32]: 'v-load times#0' with 'l-load times#0'
debug: Inserted main_pop_dynamic_box_route@23.ops[37]: 'l-store-copy arr_len#0 0'
debug: Replaced main_pop_dynamic_box_route@23.ops[61]: 'v-load arr_len#0' with 'l-load arr_len#0'
debug: Inserted main_sum_dynamic_box_route@24.ops[1]: 'l-store-copy tmp%81#0 0'
debug: Replaced main_sum_dynamic_box_route@24.ops[3]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted main_sum_dynamic_box_route@24.ops[5]: 'l-store-copy tmp%82#0 0'
debug: Replaced main_sum_dynamic_box_route@24.ops[7]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted main_sum_dynamic_box_route@24.ops[10]: 'l-store-copy tmp%83#0 0'
debug: Replaced main_sum_dynamic_box_route@24.ops[12]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted main_sum_dynamic_box_route@24.ops[20]: 'l-store-copy box%box_extract%9#0 0'
debug: Replaced main_sum_dynamic_box_route@24.ops[22]: 'v-load box%box_extract%9#0' with 'l-load box%box_extract%9#0'
debug: Inserted main_for_header@25.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@25.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@26.ops[3]: 'l-store-copy box%index_bytes_offset%3#0 0'
debug: Replaced main_for_body@26.ops[5]: 'v-load box%index_bytes_offset%3#0' with 'l-load box%index_bytes_offset%3#0'
debug: Inserted main_for_body@26.ops[13]: 'l-store-copy box%box_extract%10#0 0'
debug: Replaced main_for_body@26.ops[15]: 'v-load box%box_extract%10#0' with 'l-load box%box_extract%10#0'
debug: Inserted main_for_body@26.ops[8]: 'l-store-copy box%element_offset%3#0 0'
debug: Replaced main_for_body@26.ops[11]: 'v-load box%element_offset%3#0' with 'l-load box%element_offset%3#0'
debug: Inserted main_for_body@26.ops[18]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@26.ops[21]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@26.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@26.ops[25]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@27.ops[6]: 'l-store-copy tmp%87#0 0'
debug: Replaced main_after_for@27.ops[8]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted main_after_for@27.ops[11]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@27.ops[13]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@27.ops[2]: 'l-store-copy aggregate%val_as_bytes%10#0 0'
debug: Replaced main_after_for@27.ops[5]: 'v-load aggregate%val_as_bytes%10#0' with 'l-load aggregate%val_as_bytes%10#0'
debug: Inserted main_slice_box_route@28.ops[1]: 'l-store-copy tmp%88#0 0'
debug: Replaced main_slice_box_route@28.ops[3]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted main_slice_box_route@28.ops[5]: 'l-store-copy tmp%89#0 0'
debug: Replaced main_slice_box_route@28.ops[7]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted main_slice_box_route@28.ops[10]: 'l-store-copy tmp%90#0 0'
debug: Replaced main_slice_box_route@28.ops[12]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted main_slice_box_route@28.ops[23]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_slice_box_route@28.ops[25]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_slice_box_route@28.ops[38]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_slice_box_route@28.ops[40]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_slice_box_route@28.ops[48]: 'l-store-copy tmp%7#3 0'
debug: Replaced main_slice_box_route@28.ops[50]: 'v-load tmp%7#3' with 'l-load tmp%7#3'
debug: Inserted main_slice_box_route@28.ops[53]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_slice_box_route@28.ops[55]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_slice_box_route@28.ops[84]: 'l-store-copy tmp%15#2 0'
debug: Replaced main_slice_box_route@28.ops[86]: 'v-load tmp%15#2' with 'l-load tmp%15#2'
debug: Inserted main_slice_box_route@28.ops[94]: 'l-store-copy tmp%17#2 0'
debug: Replaced main_slice_box_route@28.ops[96]: 'v-load tmp%17#2' with 'l-load tmp%17#2'
debug: Inserted main_slice_box_route@28.ops[99]: 'l-store-copy tmp%18#2 0'
debug: Replaced main_slice_box_route@28.ops[101]: 'v-load tmp%18#2' with 'l-load tmp%18#2'
debug: Inserted main_slice_box_route@28.ops[104]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_slice_box_route@28.ops[106]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_slice_box_route@28.ops[26]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_slice_box_route@28.ops[28]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_slice_box_route@28.ops[67]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_slice_box_route@28.ops[70]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_slice_box_route@28.ops[33]: 'l-store-copy tmp%0#3 1'
debug: Replaced main_slice_box_route@28.ops[36]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_slice_box_route@28.ops[35]: 'l-store-copy tmp%4#0 1'
debug: Replaced main_slice_box_route@28.ops[39]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_slice_box_route@28.ops[46]: 'l-store-copy tmp%6#3 0'
debug: Replaced main_slice_box_route@28.ops[50]: 'v-load tmp%6#3' with 'l-load tmp%6#3'
debug: Inserted main_slice_box_route@28.ops[74]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_slice_box_route@28.ops[77]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_slice_box_route@28.ops[76]: 'l-store-copy tmp%12#1 1'
debug: Replaced main_slice_box_route@28.ops[80]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_slice_box_route@28.ops[85]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_slice_box_route@28.ops[88]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_slice_box_route@28.ops[87]: 'l-store-copy tmp%14#2 1'
debug: Replaced main_slice_box_route@28.ops[91]: 'v-load tmp%14#2' with 'l-load tmp%14#2'
debug: Inserted main_slice_box_route@28.ops[98]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_slice_box_route@28.ops[102]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_slice_box_route@28.ops[29]: 'l-store-copy tmp%0#3 2'
debug: Replaced main_slice_box_route@28.ops[33]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_slice_box_route@28.ops[46]: 'l-store-copy tmp%3#0 1'
debug: Replaced main_slice_box_route@28.ops[51]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_slice_box_route@28.ops[99]: 'l-store-copy tmp%13#2 1'
debug: Replaced main_slice_box_route@28.ops[104]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_slice_box_route@28.ops[81]: 'l-store-copy tmp%10#0 1'
debug: Replaced main_slice_box_route@28.ops[87]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_slice_box_route@28.ops[31]: 'l-store-copy tmp%3#0 1'
debug: Replaced main_slice_box_route@28.ops[46]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_slice_box_route@28.ops[86]: 'l-store-copy tmp%13#2 1'
debug: Replaced main_slice_box_route@28.ops[101]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_arc4_box_route@29.ops[1]: 'l-store-copy tmp%92#0 0'
debug: Replaced main_arc4_box_route@29.ops[3]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted main_arc4_box_route@29.ops[5]: 'l-store-copy tmp%93#0 0'
debug: Replaced main_arc4_box_route@29.ops[7]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
debug: Inserted main_arc4_box_route@29.ops[10]: 'l-store-copy tmp%94#0 0'
debug: Replaced main_arc4_box_route@29.ops[12]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
debug: Inserted main_arc4_box_route@29.ops[18]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_arc4_box_route@29.ops[20]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_box_ref_route@30.ops[1]: 'l-store-copy tmp%96#0 0'
debug: Replaced main_test_box_ref_route@30.ops[3]: 'v-load tmp%96#0' with 'l-load tmp%96#0'
debug: Inserted main_test_box_ref_route@30.ops[5]: 'l-store-copy tmp%97#0 0'
debug: Replaced main_test_box_ref_route@30.ops[7]: 'v-load tmp%97#0' with 'l-load tmp%97#0'
debug: Inserted main_test_box_ref_route@30.ops[10]: 'l-store-copy tmp%98#0 0'
debug: Replaced main_test_box_ref_route@30.ops[12]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
debug: Inserted main_test_box_ref_route@30.ops[20]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_test_box_ref_route@30.ops[22]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_test_box_ref_route@30.ops[30]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_box_ref_route@30.ops[32]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_box_ref_route@30.ops[40]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_test_box_ref_route@30.ops[42]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_box_ref_route@30.ops[50]: 'l-store-copy tmp%3#2 0'
debug: Replaced main_test_box_ref_route@30.ops[52]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted main_test_box_ref_route@30.ops[57]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_box_ref_route@30.ops[59]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_box_ref_route@30.ops[89]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_test_box_ref_route@30.ops[91]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_test_box_ref_route@30.ops[98]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_test_box_ref_route@30.ops[100]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_test_box_ref_route@30.ops[104]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_box_ref_route@30.ops[106]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_box_ref_route@30.ops[114]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_test_box_ref_route@30.ops[116]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_test_box_ref_route@30.ops[121]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_test_box_ref_route@30.ops[123]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_test_box_ref_route@30.ops[129]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_test_box_ref_route@30.ops[131]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_test_box_ref_route@30.ops[134]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_box_ref_route@30.ops[136]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_box_ref_route@30.ops[148]: 'l-store-copy value%0#0 0'
debug: Replaced main_test_box_ref_route@30.ops[150]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_test_box_ref_route@30.ops[153]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_test_box_ref_route@30.ops[155]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_test_box_ref_route@30.ops[160]: 'l-store-copy value%0#0 0'
debug: Replaced main_test_box_ref_route@30.ops[162]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_test_box_ref_route@30.ops[165]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_test_box_ref_route@30.ops[167]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_test_box_ref_route@30.ops[177]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_box_ref_route@30.ops[179]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_box_ref_route@30.ops[16]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_test_box_ref_route@30.ops[19]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_test_box_ref_route@30.ops[27]: 'l-store-copy maybe_exists%1#1 1'
debug: Replaced main_test_box_ref_route@30.ops[30]: 'v-load maybe_exists%1#1' with 'l-load maybe_exists%1#1'
debug: Inserted main_test_box_ref_route@30.ops[38]: 'l-store-copy maybe_exists%2#1 1'
debug: Replaced main_test_box_ref_route@30.ops[41]: 'v-load maybe_exists%2#1' with 'l-load maybe_exists%2#1'
debug: Inserted main_test_box_ref_route@30.ops[49]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced main_test_box_ref_route@30.ops[52]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_test_box_ref_route@30.ops[98]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_test_box_ref_route@30.ops[101]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_test_box_ref_route@30.ops[115]: 'l-store-copy exists#0 1'
debug: Replaced main_test_box_ref_route@30.ops[118]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_test_box_ref_route@30.ops[147]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_test_box_ref_route@30.ops[150]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_test_box_ref_route@30.ops[66]: 'l-store-copy sender_bytes#0 0'
debug: Replaced main_test_box_ref_route@30.ops[72]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@30.ops[140]: 'l-store-copy sender_bytes#0 1'
debug: Replaced main_test_box_ref_route@30.ops[146]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@30.ops[118]: 'l-store-copy value#3 1'
debug: Replaced main_test_box_ref_route@30.ops[126]: 'v-load value#3' with 'l-load value#3'
debug: Inserted main_test_box_ref_route@30.ops[134]: 'l-store-copy sender_bytes#0 0'
debug: Replaced main_test_box_ref_route@30.ops[141]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@30.ops[127]: 'l-store-copy value#3 0'
debug: Replaced main_test_box_ref_route@30.ops[136]: 'v-load value#3' with 'l-load value#3'
debug: Inserted main_test_box_ref_route@30.ops[90]: 'l-store-copy prefix#0 0'
debug: Replaced main_test_box_ref_route@30.ops[102]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted main_test_box_ref_route@30.ops[69]: 'l-store-copy app_address#0 1'
debug: Replaced main_test_box_ref_route@30.ops[81]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_test_box_ref_route@30.ops[82]: 'l-store-copy app_address#0 3'
debug: Replaced main_test_box_ref_route@30.ops[94]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_test_box_ref_route@30.ops[124]: 'l-store-copy exists#0 1'
debug: Replaced main_test_box_ref_route@30.ops[141]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_test_box_ref_route@30.ops[74]: 'l-store-copy sender_bytes#0 3'
debug: Replaced main_test_box_ref_route@30.ops[96]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@30.ops[97]: 'l-store-copy sender_bytes#0 2'
debug: Replaced main_test_box_ref_route@30.ops[140]: 'v-load sender_bytes#0' with 'l-load sender_bytes#0'
debug: Inserted main_test_box_ref_route@30.ops[96]: 'l-store-copy app_address#0 2'
debug: Replaced main_test_box_ref_route@30.ops[157]: 'v-load app_address#0' with 'l-load app_address#0'
debug: Inserted main_box_map_test_route@31.ops[1]: 'l-store-copy tmp%100#0 0'
debug: Replaced main_box_map_test_route@31.ops[3]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
debug: Inserted main_box_map_test_route@31.ops[5]: 'l-store-copy tmp%101#0 0'
debug: Replaced main_box_map_test_route@31.ops[7]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
debug: Inserted main_box_map_test_route@31.ops[10]: 'l-store-copy tmp%102#0 0'
debug: Replaced main_box_map_test_route@31.ops[12]: 'v-load tmp%102#0' with 'l-load tmp%102#0'
debug: Inserted main_box_map_test_route@31.ops[16]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@31.ops[18]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@31.ops[27]: 'l-store-copy value%0#0 0'
debug: Replaced main_box_map_test_route@31.ops[29]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted main_box_map_test_route@31.ops[32]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_box_map_test_route@31.ops[34]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_box_map_test_route@31.ops[47]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_box_map_test_route@31.ops[49]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_box_map_test_route@31.ops[54]: 'l-store-copy value%3#0 0'
debug: Replaced main_box_map_test_route@31.ops[56]: 'v-load value%3#0' with 'l-load value%3#0'
debug: Inserted main_box_map_test_route@31.ops[59]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_box_map_test_route@31.ops[61]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_box_map_test_route@31.ops[65]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@31.ops[67]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@31.ops[75]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_box_map_test_route@31.ops[77]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_box_map_test_route@31.ops[80]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_box_map_test_route@31.ops[82]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_box_map_test_route@31.ops[90]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_box_map_test_route@31.ops[92]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_box_map_test_route@31.ops[104]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_test_route@31.ops[106]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_test_route@31.ops[43]: 'l-store-copy value%2#0 0'
debug: Replaced main_box_map_test_route@31.ops[46]: 'v-load value%2#0' with 'l-load value%2#0'
debug: Inserted main_box_map_test_route@31.ops[71]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced main_box_map_test_route@31.ops[74]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_box_map_test_route@31.ops[88]: 'l-store-copy exists#0 1'
debug: Replaced main_box_map_test_route@31.ops[91]: 'v-load exists#0' with 'l-load exists#0'
debug: Inserted main_box_map_test_route@31.ops[19]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@31.ops[22]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@31.ops[23]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@31.ops[26]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@31.ops[100]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@31.ops[103]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@31.ops[104]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@31.ops[107]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@31.ops[39]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@31.ops[43]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@31.ops[73]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_box_map_test_route@31.ops[79]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_box_map_test_route@31.ops[42]: 'l-store-copy value%1#0 1'
debug: Replaced main_box_map_test_route@31.ops[49]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted main_box_map_test_route@31.ops[92]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@31.ops[103]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_test_route@31.ops[27]: 'l-store-copy box_0#0 0'
debug: Replaced main_box_map_test_route@31.ops[39]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@31.ops[46]: 'l-store-copy box_0#0 1'
debug: Replaced main_box_map_test_route@31.ops[58]: 'v-load box_0#0' with 'l-load box_0#0'
debug: Inserted main_box_map_test_route@31.ops[75]: 'l-store-copy encoded_value%5#0 0'
debug: Replaced main_box_map_test_route@31.ops[94]: 'v-load encoded_value%5#0' with 'l-load encoded_value%5#0'
debug: Inserted main_box_map_set_route@32.ops[1]: 'l-store-copy tmp%104#0 0'
debug: Replaced main_box_map_set_route@32.ops[3]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
debug: Inserted main_box_map_set_route@32.ops[5]: 'l-store-copy tmp%105#0 0'
debug: Replaced main_box_map_set_route@32.ops[7]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
debug: Inserted main_box_map_set_route@32.ops[10]: 'l-store-copy tmp%106#0 0'
debug: Replaced main_box_map_set_route@32.ops[12]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
debug: Inserted main_box_map_set_route@32.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%5#0 0'
debug: Replaced main_box_map_set_route@32.ops[17]: 'v-load reinterpret_Encoded(uint64)%5#0' with 'l-load reinterpret_Encoded(uint64)%5#0'
debug: Inserted main_box_map_set_route@32.ops[21]: 'l-store-copy reinterpret_Encoded(len+utf8[])%1#0 0'
debug: Replaced main_box_map_set_route@32.ops[23]: 'v-load reinterpret_Encoded(len+utf8[])%1#0' with 'l-load reinterpret_Encoded(len+utf8[])%1#0'
debug: Inserted main_box_map_set_route@32.ops[28]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_set_route@32.ops[30]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_set_route@32.ops[37]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_set_route@32.ops[39]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_set_route@32.ops[31]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_set_route@32.ops[34]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_set_route@32.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_set_route@32.ops[27]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_set_route@32.ops[26]: 'l-store-copy value#0 1'
debug: Replaced main_box_map_set_route@32.ops[37]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_box_map_get_route@33.ops[1]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_box_map_get_route@33.ops[3]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_box_map_get_route@33.ops[5]: 'l-store-copy tmp%111#0 0'
debug: Replaced main_box_map_get_route@33.ops[7]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
debug: Inserted main_box_map_get_route@33.ops[10]: 'l-store-copy tmp%112#0 0'
debug: Replaced main_box_map_get_route@33.ops[12]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
debug: Inserted main_box_map_get_route@33.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%6#0 0'
debug: Replaced main_box_map_get_route@33.ops[17]: 'v-load reinterpret_Encoded(uint64)%6#0' with 'l-load reinterpret_Encoded(uint64)%6#0'
debug: Inserted main_box_map_get_route@33.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_get_route@33.ops[21]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_get_route@33.ops[23]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_get_route@33.ops[25]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_get_route@33.ops[33]: 'l-store-copy aggregate%length%4#0 0'
debug: Replaced main_box_map_get_route@33.ops[35]: 'v-load aggregate%length%4#0' with 'l-load aggregate%length%4#0'
debug: Inserted main_box_map_get_route@33.ops[37]: 'l-store-copy aggregate%as_bytes%7#0 0'
debug: Replaced main_box_map_get_route@33.ops[39]: 'v-load aggregate%as_bytes%7#0' with 'l-load aggregate%as_bytes%7#0'
debug: Inserted main_box_map_get_route@33.ops[41]: 'l-store-copy aggregate%length_uint16%4#0 0'
debug: Replaced main_box_map_get_route@33.ops[43]: 'v-load aggregate%length_uint16%4#0' with 'l-load aggregate%length_uint16%4#0'
debug: Inserted main_box_map_get_route@33.ops[50]: 'l-store-copy tmp%117#0 0'
debug: Replaced main_box_map_get_route@33.ops[52]: 'v-load tmp%117#0' with 'l-load tmp%117#0'
debug: Inserted main_box_map_get_route@33.ops[55]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_get_route@33.ops[57]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_get_route@33.ops[27]: 'l-store-copy aggregate%box_get%21#0 1'
debug: Replaced main_box_map_get_route@33.ops[30]: 'v-load aggregate%box_get%21#0' with 'l-load aggregate%box_get%21#0'
debug: Inserted main_box_map_get_route@33.ops[47]: 'l-store-copy aggregate%encoded_value%4#0 0'
debug: Replaced main_box_map_get_route@33.ops[50]: 'v-load aggregate%encoded_value%4#0' with 'l-load aggregate%encoded_value%4#0'
debug: Inserted main_box_map_get_route@33.ops[29]: 'l-store-copy aggregate%box_get%20#0 1'
debug: Replaced main_box_map_get_route@33.ops[33]: 'v-load aggregate%box_get%20#0' with 'l-load aggregate%box_get%20#0'
debug: Inserted main_box_map_get_route@33.ops[34]: 'l-store-copy aggregate%box_get%20#0 0'
debug: Replaced main_box_map_get_route@33.ops[47]: 'v-load aggregate%box_get%20#0' with 'l-load aggregate%box_get%20#0'
debug: Inserted main_box_map_del_route@34.ops[1]: 'l-store-copy tmp%118#0 0'
debug: Replaced main_box_map_del_route@34.ops[3]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
debug: Inserted main_box_map_del_route@34.ops[5]: 'l-store-copy tmp%119#0 0'
debug: Replaced main_box_map_del_route@34.ops[7]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
debug: Inserted main_box_map_del_route@34.ops[10]: 'l-store-copy tmp%120#0 0'
debug: Replaced main_box_map_del_route@34.ops[12]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
debug: Inserted main_box_map_del_route@34.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%7#0 0'
debug: Replaced main_box_map_del_route@34.ops[17]: 'v-load reinterpret_Encoded(uint64)%7#0' with 'l-load reinterpret_Encoded(uint64)%7#0'
debug: Inserted main_box_map_del_route@34.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_del_route@34.ops[21]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_del_route@34.ops[23]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_del_route@34.ops[25]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_del_route@34.ops[29]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_del_route@34.ops[31]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_exists_route@35.ops[1]: 'l-store-copy tmp%123#0 0'
debug: Replaced main_box_map_exists_route@35.ops[3]: 'v-load tmp%123#0' with 'l-load tmp%123#0'
debug: Inserted main_box_map_exists_route@35.ops[5]: 'l-store-copy tmp%124#0 0'
debug: Replaced main_box_map_exists_route@35.ops[7]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
debug: Inserted main_box_map_exists_route@35.ops[10]: 'l-store-copy tmp%125#0 0'
debug: Replaced main_box_map_exists_route@35.ops[12]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
debug: Inserted main_box_map_exists_route@35.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%8#0 0'
debug: Replaced main_box_map_exists_route@35.ops[17]: 'v-load reinterpret_Encoded(uint64)%8#0' with 'l-load reinterpret_Encoded(uint64)%8#0'
debug: Inserted main_box_map_exists_route@35.ops[19]: 'l-store-copy key#0 0'
debug: Replaced main_box_map_exists_route@35.ops[21]: 'v-load key#0' with 'l-load key#0'
debug: Inserted main_box_map_exists_route@35.ops[23]: 'l-store-copy encoded_value%0#0 0'
debug: Replaced main_box_map_exists_route@35.ops[25]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted main_box_map_exists_route@35.ops[37]: 'l-store-copy tmp%130#0 0'
debug: Replaced main_box_map_exists_route@35.ops[39]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
debug: Inserted main_box_map_exists_route@35.ops[42]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_box_map_exists_route@35.ops[44]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_box_map_exists_route@35.ops[33]: 'l-store-copy aggregate%encoded_bool%1#0 0'
debug: Replaced main_box_map_exists_route@35.ops[36]: 'v-load aggregate%encoded_bool%1#0' with 'l-load aggregate%encoded_bool%1#0'
debug: Inserted main_box_map_exists_route@35.ops[27]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_box_map_exists_route@35.ops[32]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_bare_routing@36.ops[1]: 'l-store-copy tmp%131#0 0'
debug: Replaced main_bare_routing@36.ops[3]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
debug: Inserted main___algopy_default_create@37.ops[1]: 'l-store-copy tmp%132#0 0'
debug: Replaced main___algopy_default_create@37.ops[3]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
debug: Inserted main___algopy_default_create@37.ops[5]: 'l-store-copy tmp%133#0 0'
debug: Replaced main___algopy_default_create@37.ops[7]: 'v-load tmp%133#0' with 'l-load tmp%133#0'
debug: Inserted main___algopy_default_create@37.ops[10]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@37.ops[12]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@38.ops[1]: 'l-store-copy examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@38.ops[3]: 'v-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0' with 'l-load examples.box_storage.contract.BoxContract.__puya_arc4_router__%0#0'
debug: Found 11 edge set/s for examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#1
debug: shared x-stack for main_set_boxes_route@5 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_check_keys_route@6 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_create_many_ints_route@7 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_set_many_ints_route@8 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_after_for@12 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_delete_boxes_route@13 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_indirect_extract_and_replace_route@14 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_read_boxes_route@15 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_boxes_exist_route@16 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_create_dynamic_box_route@17 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_delete_dynamic_box_route@18 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_after_for@22 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_pop_dynamic_box_route@23 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_after_for@27 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_slice_box_route@28 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_arc4_box_route@29 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_test_box_ref_route@30 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_box_map_test_route@31 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_box_map_set_route@32 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_box_map_get_route@33 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_box_map_del_route@34 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_box_map_exists_route@35 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main___algopy_default_create@37 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: shared x-stack for main_after_if_else@38 -> main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39: tmp%0#1
debug: examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init f-stack entry: ['arr_len#0', 'box%array_length%4#0', 'i#0', 'item_index_internal%0#0', 'times#0', 'total#0']
debug: examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init f-stack on first store: []
debug: optimizing TEAL subroutine ops examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine blocks examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: replacing `b main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_inlined_examples.box_storage.contract.BoxContract.__puya_arc4_router__@39 into main_after_if_else@38
debug: inlining single reference block main_for_body@26 into main_for_header@25
debug: inlining single reference block main_for_body@21 into main_for_header@20
debug: inlining single reference block main_while_body@48 into main_while_top@47
debug: inlining single reference block main_for_body@11 into main_for_header@10
debug: inlining single reference block main___algopy_default_create@37 into main_bare_routing@36
debug: removing explicit jump to fall-through block main_after_if_else@38
debug: removing explicit jump to fall-through block main_for_header@25
debug: removing explicit jump to fall-through block main_for_header@20
debug: removing explicit jump to fall-through block main_while_top@47
debug: removing explicit jump to fall-through block main_for_header@10
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing box_storage/out_O2/BoxContract.approval.teal
info: Writing box_storage/out_O2/BoxContract.clear.teal
info: Writing box_storage/out_O2/BoxContract.approval.bin
info: Writing box_storage/out_O2/BoxContract.clear.bin
info: Writing box_storage/out_O2/BoxContract.approval.stats.txt
info: Writing box_storage/out_O2/BoxContract.clear.stats.txt
info: Writing box_storage/out_O2/BoxContract.approval.puya.map
info: Writing box_storage/out_O2/BoxContract.clear.puya.map